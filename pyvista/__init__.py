"""PyVista package for 3D plotting and mesh analysis."""

MAX_N_COLOR_BARS = 10

from typing import Optional
import warnings
import os

# Load default theme.  Must be loaded first.
from pyvista._version import __version__

from pyvista.plotting import (
    Actor,
    Axes,
    BackgroundPlotter,
    BasePlotter,
    BlockAttributes,
    Camera,
    CameraPosition,
    Chart2D,
    ChartBox,
    ChartMPL,
    ChartPie,
    Color,
    CompositeAttributes,
    CompositePolyDataMapper,
    DataSetMapper,
    FONTS,
    Light,
    LookupTable,
    PARAVIEW_BACKGROUND,
    Plotter,
    Property,
    QtDeprecationError,
    QtInteractor,
    Renderer,
    WidgetHelper,
    # actor,
    # axes,
    # background_renderer,
    # camera,
    charts,
    close_all,
    color_char_to_word,
    color_like,
    colors,
    # composite_mapper,
    create_axes_marker,
    create_axes_orientation_box,
    export_plotter_vtkjs,
    # export_vtkjs,
    get_cmap_safe,
    get_vtkjs_url,
    hexcolors,
    # lights,
    # lookup_table,
    # mapper,
    opacity_transfer_function,
    parse_font_family,
    # picking,
    plot,
    plot_arrows,
    plot_compare_four,
    plotting,
    # render_passes,
    # render_window_interactor,
    # renderer,
    # renderers,
    # scalar_bars,
    scale_point,
    system_supports_plotting,
    # theme,
    # tools,
    # widgets,
)

from pyvista.utilities import (
    AVSucdReader,
    AmbiguousDataError,
    Arrow,
    BMPReader,
    BYUReader,
    BaseReader,
    BinaryMarchingCubesReader,
    Box,
    CGNSReader,
    Circle,
    CircularArc,
    CircularArcFromNormal,
    Cone,
    Cube,
    Cylinder,
    CylinderStructured,
    DEMReader,
    DICOMReader,
    Disc,
    Dodecahedron,
    Ellipse,
    EnSightReader,
    FacetReader,
    FieldAssociation,
    FluentReader,
    GIFReader,
    GLTFReader,
    GPUInfo,
    HDFReader,
    HDRReader,
    Icosahedron,
    JPEGReader,
    KochanekSpline,
    Line,
    MFIXReader,
    MetaImageReader,
    MissingDataError,
    MultiBlockPlot3DReader,
    MultipleLines,
    NIFTIReader,
    NORMALS,
    NRRDReader,
    OBJReader,
    Observer,
    Octahedron,
    OpenFOAMReader,
    PLYReader,
    PNGReader,
    PNMReader,
    POpenFOAMReader,
    PTSReader,
    PVDDataSet,
    PVDReader,
    ParametricBohemianDome,
    ParametricBour,
    ParametricBoy,
    ParametricCatalanMinimal,
    ParametricConicSpiral,
    ParametricCrossCap,
    ParametricDini,
    ParametricEllipsoid,
    ParametricEnneper,
    ParametricFigure8Klein,
    ParametricHenneberg,
    ParametricKlein,
    ParametricKuen,
    ParametricMobius,
    ParametricPluckerConoid,
    ParametricPseudosphere,
    ParametricRandomHills,
    ParametricRoman,
    ParametricSuperEllipsoid,
    ParametricSuperToroid,
    ParametricTorus,
    Plane,
    PlatonicSolid,
    Plot3DFunctionEnum,
    Plot3DMetaReader,
    PointCellDataSelection,
    Polygon,
    ProgressMonitor,
    PyVistaDeprecationWarning,
    Pyramid,
    Rectangle,
    Report,
    SLCReader,
    STLReader,
    Scraper,
    SegYReader,
    Sphere,
    Spline,
    Superquadric,
    TIFFReader,
    TecplotReader,
    Tetrahedron,
    Text3D,
    TimeReader,
    Triangle,
    Tube,
    VTKDataSetReader,
    VTKPDataSetReader,
    VtkErrorCatcher,
    Wavelet,
    XMLImageDataReader,
    XMLMultiBlockDataReader,
    XMLPImageDataReader,
    XMLPRectilinearGridReader,
    XMLPUnstructuredGridReader,
    XMLPolyDataReader,
    XMLRectilinearGridReader,
    XMLStructuredGridReader,
    XMLUnstructuredGridReader,
    # needs to be available per contract with Sphinx-Gallery:
    _get_sg_image_scraper,
    _get_vtk_id_type,
    _set_plot_theme_from_env,
    abstract_class,
    array_from_vtkmatrix,
    # arrays,
    assert_empty_kwargs,
    axis_rotation,
    cell_array,
    cells,
    check_depth_peeling,
    check_valid_vector,
    # common,
    compare_images,
    conditional_decorator,
    convert_array,
    convert_string_array,
    create_grid,
    cubemap,
    cubemap_from_filenames,
    # errors,
    # features,
    field_array,
    fileio,
    fit_plane_to_points,
    from_meshio,
    generate_plane,
    # geometric_objects,
    get_array,
    get_array_association,
    get_ext,
    get_gpu_info,
    get_reader,
    get_vtk_type,
    grid_from_sph_coords,
    helpers,
    image_to_texture,
    is_inside_bounds,
    is_meshio_mesh,
    is_pyvista_dataset,
    line_segments_from_points,
    lines_from_points,
    make_tri_mesh,
    merge,
    # misc,
    numpy_to_texture,
    parametric_keywords,
    # parametric_objects,
    parse_field_choice,
    perlin_noise,
    point_array,
    raise_not_matching,
    read,
    read_exodus,
    read_legacy,
    read_meshio,
    read_plot3d,
    read_texture,
    reader,
    # regression,
    row_array,
    sample_function,
    save_meshio,
    send_errors_to_logging,
    set_default_active_scalars,
    set_default_active_vectors,
    set_error_output_file,
    set_pickle_format,
    set_vtkwriter_mode,
    # sphinx_gallery,
    start_xvfb,
    surface_from_para,
    threaded,
    trans_from_matrix,
    transform_vectors_sph_to_cart,
    transformations,
    translate,
    try_callback,
    vector_poly_data,
    voxelize,
    vtk_bit_array_to_char,
    vtk_id_list_to_array,
    vtk_points,
    vtk_version_info,
    vtkmatrix_from_array,
    wrap,
    # wrappers,
    # xvfb,
)

from pyvista.core import (
    CellType,
    CompositeFilters,
    DataObject,
    DataSet,
    DataSetAttributes,
    DataSetFilters,
    ExplicitStructuredGrid,
    Grid,
    MultiBlock,
    PointGrid,
    PointSet,
    PolyData,
    PolyDataFilters,
    RectilinearGrid,
    StructuredGrid,
    Table,
    Texture,
    UniformGrid,
    UniformGridFilters,
    UnstructuredGrid,
    UnstructuredGridFilters,
    # cell,
    # composite,
    # dataobject,
    # dataset,
    # datasetattributes,
    errors,
    filters,
    # grid,
    # objects,
    # pointset,
    pyvista_ndarray,
)

# needs to come after core import to avoid circular import:
from pyvista.utilities.wrappers import _wrappers
from pyvista import _vtk
from pyvista.jupyter import set_jupyter_backend
from pyvista.themes import set_plot_theme, load_theme, _rcParams
from pyvista.themes import DefaultTheme as _GlobalTheme  # hide this


global_theme = _GlobalTheme()
rcParams = _rcParams()  # raises DeprecationError when used

# Set preferred plot theme
_set_plot_theme_from_env()

# get the int type from vtk
ID_TYPE = _get_vtk_id_type()

# determine if using at least vtk 5.0.0
if vtk_version_info.major < 5:  # pragma: no cover
    from pyvista.core.errors import VTKVersionError

    raise VTKVersionError('VTK version must be 5.0 or greater.')

# catch annoying numpy/vtk future warning:
warnings.simplefilter(action='ignore', category=FutureWarning)

# A simple flag to set when generating the documentation
OFF_SCREEN = os.environ.get("PYVISTA_OFF_SCREEN", "false").lower() == "true"

# flag for when building the sphinx_gallery
BUILDING_GALLERY = False
if 'PYVISTA_BUILDING_GALLERY' in os.environ:
    if os.environ['PYVISTA_BUILDING_GALLERY'].lower() == 'true':
        BUILDING_GALLERY = True

# A threshold for the max cells to compute a volume for when repr-ing
REPR_VOLUME_MAX_CELLS = 1e6

# Set where figures are saved
FIGURE_PATH = None

# Send VTK messages to the logging module:
send_errors_to_logging()

# theme to use by default for the plot directive
PLOT_DIRECTIVE_THEME = None

# Set a parameter to control default print format for floats outside
# of the plotter
FLOAT_FORMAT = "{:.3e}"

# Serialization format to be used when pickling `DataObject`
PICKLE_FORMAT = 'xml'

# Name used for unnamed scalars
DEFAULT_SCALARS_NAME = 'Data'

# __all__ only left for mypy --strict to work when pyvista is a dependency
__all__ = [
    # constants:
    'BUILDING_GALLERY',
    'DEFAULT_SCALARS_NAME',
    'FIGURE_PATH',
    'FLOAT_FORMAT',
    'FONTS',
    'ID_TYPE',
    'MAX_N_COLOR_BARS',
    'NORMALS',
    'OFF_SCREEN',
    'PARAVIEW_BACKGROUND',
    'PICKLE_FORMAT',
    'PLOT_DIRECTIVE_THEME',
    'REPR_VOLUME_MAX_CELLS',
    # classes:
    'AVSucdReader',
    'Actor',
    'AmbiguousDataError',
    'Arrow',
    'Axes',
    'BMPReader',
    'BYUReader',
    'BackgroundPlotter',
    'BasePlotter',
    'BaseReader',
    'BinaryMarchingCubesReader',
    'BlockAttributes',
    'Box',
    'CGNSReader',
    'Camera',
    'CameraPosition',
    'CellType',
    'Chart2D',
    'ChartBox',
    'ChartMPL',
    'ChartPie',
    'Circle',
    'CircularArc',
    'CircularArcFromNormal',
    'Color',
    'CompositeAttributes',
    'CompositeFilters',
    'CompositePolyDataMapper',
    'Cone',
    'Cube',
    'Cylinder',
    'CylinderStructured',
    'DEMReader',
    'DICOMReader',
    'DataObject',
    'DataSet',
    'DataSetAttributes',
    'DataSetFilters',
    'DataSetMapper',
    'Disc',
    'Dodecahedron',
    'Ellipse',
    'EnSightReader',
    'ExplicitStructuredGrid',
    'FacetReader',
    'FieldAssociation',
    'FluentReader',
    'GIFReader',
    'GLTFReader',
    'GPUInfo',
    'Grid',
    'HDFReader',
    'HDRReader',
    'Icosahedron',
    'JPEGReader',
    'KochanekSpline',
    'Light',
    'Line',
    'LookupTable',
    'MFIXReader',
    'MetaImageReader',
    'MissingDataError',
    'MultiBlock',
    'MultiBlockPlot3DReader',
    'MultipleLines',
    'NIFTIReader',
    'NRRDReader',
    'OBJReader',
    'Observer',
    'Octahedron',
    'OpenFOAMReader',
    'PLYReader',
    'PNGReader',
    'PNMReader',
    'POpenFOAMReader',
    'PTSReader',
    'PVDDataSet',
    'PVDReader',
    'ParametricBohemianDome',
    'ParametricBour',
    'ParametricBoy',
    'ParametricCatalanMinimal',
    'ParametricConicSpiral',
    'ParametricCrossCap',
    'ParametricDini',
    'ParametricEllipsoid',
    'ParametricEnneper',
    'ParametricFigure8Klein',
    'ParametricHenneberg',
    'ParametricKlein',
    'ParametricKuen',
    'ParametricMobius',
    'ParametricPluckerConoid',
    'ParametricPseudosphere',
    'ParametricRandomHills',
    'ParametricRoman',
    'ParametricSuperEllipsoid',
    'ParametricSuperToroid',
    'ParametricTorus',
    'Plane',
    'PlatonicSolid',
    'Plot3DFunctionEnum',
    'Plot3DMetaReader',
    'Plotter',
    'PointCellDataSelection',
    'PointGrid',
    'PointSet',
    'PolyData',
    'PolyDataFilters',
    'Polygon',
    'ProgressMonitor',
    'Property',
    'PyVistaDeprecationWarning',
    'Pyramid',
    'QtDeprecationError',
    'QtInteractor',
    'Rectangle',
    'RectilinearGrid',
    'Renderer',
    'Report',
    'SLCReader',
    'STLReader',
    'Scraper',
    'SegYReader',
    'Sphere',
    'Spline',
    'StructuredGrid',
    'Superquadric',
    'TIFFReader',
    'Table',
    'TecplotReader',
    'Tetrahedron',
    'Text3D',
    'Texture',
    'TimeReader',
    'Triangle',
    'Tube',
    'UniformGrid',
    'UniformGridFilters',
    'UnstructuredGrid',
    'UnstructuredGridFilters',
    'VTKDataSetReader',
    'VTKPDataSetReader',
    'VtkErrorCatcher',
    'Wavelet',
    'WidgetHelper',
    'XMLImageDataReader',
    'XMLMultiBlockDataReader',
    'XMLPImageDataReader',
    'XMLPRectilinearGridReader',
    'XMLPUnstructuredGridReader',
    'XMLPolyDataReader',
    'XMLRectilinearGridReader',
    'XMLStructuredGridReader',
    'XMLUnstructuredGridReader',
    # privates and dunders:
    '__version__',
    # '_GlobalTheme',
    # '_get_sg_image_scraper',
    # '_get_vtk_id_type',
    # '_rcParams',
    # '_set_plot_theme_from_env',
    # '_typing',
    # '_version',
    # '_vtk',
    # '_wrappers',
    # helpers and modules:
    'abstract_class',
    # 'actor',  # plotting.actor
    'array_from_vtkmatrix',
    # 'arrays',  # utilities.arrays
    'assert_empty_kwargs',
    # 'axes',  # plotting.axes
    'axis_rotation',
    # 'background_renderer',  # plotting.background_renderer
    # 'camera',  # plotting.camera
    # 'cell',  # core.cell
    'cells',
    'cell_array',
    'charts',
    'check_depth_peeling',
    'check_valid_vector',
    'close_all',
    'color_char_to_word',
    'color_like',
    'colors',
    # 'common',  # utilities.common
    'compare_images',
    # 'composite',  # core.composite
    # 'composite_mapper',  # plotting.composite_mapper
    'conditional_decorator',
    'convert_array',
    'convert_string_array',
    'core',
    'create_axes_marker',
    'create_axes_orientation_box',
    'create_grid',
    'cubemap',
    'cubemap_from_filenames',
    # 'dataobject',  # core.dataobject
    # 'dataset',  # core.dataset
    # 'datasetattributes',  # core.datasetattributes
    'errors',
    'export_plotter_vtkjs',
    # 'export_vtkjs',  # plotting.export_vtkjs
    # 'features',  # utilities.features
    'field_array',
    'fileio',
    'filters',
    'fit_plane_to_points',
    'from_meshio',
    'generate_plane',
    # 'geometric_objects',  # utilities.geometric_objects
    'get_array',
    'get_array_association',
    'get_cmap_safe',
    'get_ext',
    'get_gpu_info',
    'get_reader',
    'get_vtk_type',
    'get_vtkjs_url',
    'global_theme',
    # 'grid',  # core.grid
    'grid_from_sph_coords',
    'helpers',
    'hexcolors',
    'image_to_texture',
    'is_inside_bounds',
    'is_meshio_mesh',
    'is_pyvista_dataset',
    'jupyter',
    # 'lights',  # plotting.lights
    'line_segments_from_points',
    'lines_from_points',
    'load_theme',
    #'lookup_table',  # plotting.lookup_table
    'make_tri_mesh',
    # 'mapper',  # plotting.mapper
    'merge',
    # 'misc',  # utilities.misc
    'numpy_to_texture',
    # 'objects',  # core.objects
    'opacity_transfer_function',
    'parametric_keywords',
    # 'parametric_objects',  # utilities.parametric_objects
    'parse_field_choice',
    'parse_font_family',
    'perlin_noise',
    # 'picking',  # plotting.picking
    'plot',
    'plot_arrows',
    'plot_compare_four',
    'plotting',
    'point_array',
    # 'pointset',  # core.pointset
    # 'pyvista',  # self-reference
    'pyvista_ndarray',
    'raise_not_matching',
    'rcParams',
    'read',
    'read_exodus',
    'read_legacy',
    'read_meshio',
    'read_plot3d',
    'read_texture',
    'reader',
    # 'regression',  # utilities.regression
    # 'render_passes',  # plotting.render_passes
    # 'render_window_interactor',  # plotting.render_window_interactor
    # 'renderer',  # plotting.renderer
    # 'renderers',  # plotting.renderers
    'row_array',
    'sample_function',
    'save_meshio',
    # 'scalar_bars',  # plotting.scalar_bars
    'scale_point',
    'send_errors_to_logging',
    'set_default_active_scalars',
    'set_default_active_vectors',
    'set_error_output_file',
    'set_jupyter_backend',
    'set_pickle_format',
    'set_plot_theme',
    'set_vtkwriter_mode',
    # 'sphinx_gallery',  # utilities.sphinx_gallery
    'start_xvfb',
    'surface_from_para',
    'system_supports_plotting',
    # 'theme',  # plotting.theme
    'themes',
    'threaded',
    # 'tools',  # plotting.tools
    'trans_from_matrix',
    'transform_vectors_sph_to_cart',
    'transformations',
    'translate',
    'try_callback',
    'utilities',
    'vector_poly_data',
    'voxelize',
    'vtk_bit_array_to_char',
    'vtk_id_list_to_array',
    'vtk_points',
    'vtk_version_info',
    'vtkmatrix_from_array',
    # 'widgets',  # plotting.widgets
    'wrap',
    # 'xvfb',  # utilities.xvfb
]
