"""PyVista package for 3D plotting and mesh analysis."""

MAX_N_COLOR_BARS = 10

from typing import Optional
import warnings
import os

# Load default theme.  Must be loaded first.
from pyvista._version import __version__
from pyvista.plotting import *
from pyvista.utilities import (
    # arrays,
    # cells,
    # common,
    # errors,
    # features,
    fileio,
    # geometric_objects,
    # helpers,
    # misc,
    # parametric_objects,
    reader,
    # regression,
    # sphinx_gallery,
    transformations,
    # wrappers,
    # xvfb,
)
from pyvista.utilities.common import (
    perlin_noise,
    sample_function,
)
from pyvista.utilities.errors import (
    GPUInfo,
    Observer,
    Report,
    VtkErrorCatcher,
    assert_empty_kwargs,
    check_valid_vector,
    get_gpu_info,
    send_errors_to_logging,
    set_error_output_file,
)
from pyvista.utilities.features import (
    create_grid,
    grid_from_sph_coords,
    merge,
    transform_vectors_sph_to_cart,
    voxelize,
)
from pyvista.utilities.fileio import (
    from_meshio,
    get_ext,
    read_exodus,
    read_legacy,
    read_meshio,
    read_plot3d,
    read_texture,
    read,
    save_meshio,
    set_vtkwriter_mode,
)
from pyvista.utilities.geometric_objects import (
    Arrow,
    Box,
    Circle,
    CircularArcFromNormal,
    CircularArc,
    Cone,
    Cube,
    CylinderStructured,
    Cylinder,
    Disc,
    Dodecahedron,
    Ellipse,
    Icosahedron,
    Line,
    MultipleLines,
    NORMALS,
    Octahedron,
    Plane,
    PlatonicSolid,
    Polygon,
    Pyramid,
    Rectangle,
    Sphere,
    Superquadric,
    Tetrahedron,
    Text3D,
    translate,
    Triangle,
    Tube,
    Wavelet,
)
from pyvista.utilities.helpers import (
    AmbiguousDataError,
    FieldAssociation,
    MissingDataError,
    ProgressMonitor,
    abstract_class,
    array_from_vtkmatrix,
    axis_rotation,
    cell_array,
    check_depth_peeling,
    conditional_decorator,
    convert_array,
    convert_string_array,
    cubemap_from_filenames,
    cubemap,
    field_array,
    fit_plane_to_points,
    generate_plane,
    get_array_association,
    get_array,
    get_vtk_type,
    image_to_texture,
    is_inside_bounds,
    is_meshio_mesh,
    is_pyvista_dataset,
    line_segments_from_points,
    lines_from_points,
    make_tri_mesh,
    numpy_to_texture,
    parse_field_choice,
    point_array,
    raise_not_matching,
    row_array,
    set_default_active_scalars,
    set_default_active_vectors,
    threaded,
    trans_from_matrix,
    try_callback,
    vector_poly_data,
    vtk_bit_array_to_char,
    vtk_id_list_to_array,
    vtkmatrix_from_array,
    vtk_points,
    wrap,
)
from pyvista.utilities.misc import (
    PyVistaDeprecationWarning,
    _get_vtk_id_type,
    _set_plot_theme_from_env,
    set_pickle_format,
    vtk_version_info,
)
from pyvista.utilities.parametric_objects import (
    KochanekSpline,
    ParametricBohemianDome,
    ParametricBour,
    ParametricBoy,
    ParametricCatalanMinimal,
    ParametricConicSpiral,
    ParametricCrossCap,
    ParametricDini,
    ParametricEllipsoid,
    ParametricEnneper,
    ParametricFigure8Klein,
    ParametricHenneberg,
    parametric_keywords,
    ParametricKlein,
    ParametricKuen,
    ParametricMobius,
    ParametricPluckerConoid,
    ParametricPseudosphere,
    ParametricRandomHills,
    ParametricRoman,
    ParametricSuperEllipsoid,
    ParametricSuperToroid,
    ParametricTorus,
    Spline,
    surface_from_para,
)
from pyvista.utilities.reader import (
    AVSucdReader,
    BaseReader,
    BinaryMarchingCubesReader,
    BMPReader,
    BYUReader,
    CGNSReader,
    DEMReader,
    DICOMReader,
    EnSightReader,
    FacetReader,
    FluentReader,
    get_reader,
    GIFReader,
    GLTFReader,
    HDFReader,
    HDRReader,
    JPEGReader,
    MetaImageReader,
    MFIXReader,
    MultiBlockPlot3DReader,
    NIFTIReader,
    NRRDReader,
    OBJReader,
    OpenFOAMReader,
    Plot3DFunctionEnum,
    Plot3DMetaReader,
    PLYReader,
    PNGReader,
    PNMReader,
    PointCellDataSelection,
    POpenFOAMReader,
    PTSReader,
    PVDDataSet,
    PVDReader,
    SegYReader,
    SLCReader,
    STLReader,
    TecplotReader,
    TIFFReader,
    TimeReader,
    VTKDataSetReader,
    VTKPDataSetReader,
    XMLImageDataReader,
    XMLMultiBlockDataReader,
    XMLPImageDataReader,
    XMLPolyDataReader,
    XMLPRectilinearGridReader,
    XMLPUnstructuredGridReader,
    XMLRectilinearGridReader,
    XMLStructuredGridReader,
    XMLUnstructuredGridReader,
)
from pyvista.utilities.regression import compare_images
from pyvista.utilities.sphinx_gallery import (
    Scraper,
    # needs to be available per contract with Sphinx-Gallery:
    _get_sg_image_scraper,
)
from pyvista.utilities.wrappers import _wrappers
from pyvista.utilities.xvfb import start_xvfb

from pyvista.core import *
from pyvista import _vtk
from pyvista.jupyter import set_jupyter_backend
from pyvista.themes import set_plot_theme, load_theme, _rcParams
from pyvista.themes import DefaultTheme as _GlobalTheme  # hide this


global_theme = _GlobalTheme()
rcParams = _rcParams()  # raises DeprecationError when used

# Set preferred plot theme
_set_plot_theme_from_env()

# get the int type from vtk
ID_TYPE = _get_vtk_id_type()

# determine if using at least vtk 5.0.0
if vtk_version_info.major < 5:  # pragma: no cover
    from pyvista.core.errors import VTKVersionError

    raise VTKVersionError('VTK version must be 5.0 or greater.')

# catch annoying numpy/vtk future warning:
warnings.simplefilter(action='ignore', category=FutureWarning)

# A simple flag to set when generating the documentation
OFF_SCREEN = os.environ.get("PYVISTA_OFF_SCREEN", "false").lower() == "true"

# flag for when building the sphinx_gallery
BUILDING_GALLERY = False
if 'PYVISTA_BUILDING_GALLERY' in os.environ:
    if os.environ['PYVISTA_BUILDING_GALLERY'].lower() == 'true':
        BUILDING_GALLERY = True

# A threshold for the max cells to compute a volume for when repr-ing
REPR_VOLUME_MAX_CELLS = 1e6

# Set where figures are saved
FIGURE_PATH = None

# Send VTK messages to the logging module:
send_errors_to_logging()

# theme to use by default for the plot directive
PLOT_DIRECTIVE_THEME = None

# Set a parameter to control default print format for floats outside
# of the plotter
FLOAT_FORMAT = "{:.3e}"

# Serialization format to be used when pickling `DataObject`
PICKLE_FORMAT = 'xml'

# Name used for unnamed scalars
DEFAULT_SCALARS_NAME = 'Data'

# __all__ only left for mypy --strict to work when pyvista is installed
__all__ = [
    # constants
    'BUILDING_GALLERY',
    'DEFAULT_SCALARS_NAME',
    'FIGURE_PATH',
    'FLOAT_FORMAT',
    'FONTS',
    'ID_TYPE',
    'MAX_N_COLOR_BARS',
    'NORMALS',
    'OFF_SCREEN',
    'PARAVIEW_BACKGROUND',
    'PICKLE_FORMAT',
    'PLOT_DIRECTIVE_THEME',
    'REPR_VOLUME_MAX_CELLS',
    # classes
    'AVSucdReader',
    'Actor',
    'AmbiguousDataError',
    'Arrow',
    'Axes',
    'BMPReader',
    'BYUReader',
    'BackgroundPlotter',
    'BasePlotter',
    'BaseReader',
    'BinaryMarchingCubesReader',
    'BlockAttributes',
    'Box',
    'CGNSReader',
    'Camera',
    'CameraPosition',
    'CellType',
    'Chart2D',
    'ChartBox',
    'ChartMPL',
    'ChartPie',
    'Circle',
    'CircularArc',
    'CircularArcFromNormal',
    'Color',
    'CompositeAttributes',
    'CompositeFilters',
    'CompositePolyDataMapper',
    'Cone',
    'Cube',
    'Cylinder',
    'CylinderStructured',
    'DEMReader',
    'DICOMReader',
    'DataObject',
    'DataSet',
    'DataSetAttributes',
    'DataSetFilters',
    'DataSetMapper',
    'Disc',
    'Dodecahedron',
    'Ellipse',
    'EnSightReader',
    'ExplicitStructuredGrid',
    'FacetReader',
    'FieldAssociation',
    'FluentReader',
    'GIFReader',
    'GLTFReader',
    'GPUInfo',
    'Grid',
    'HDFReader',
    'HDRReader',
    'Icosahedron',
    'JPEGReader',
    'KochanekSpline',
    'Light',
    'Line',
    'LookupTable',
    'MFIXReader',
    'MetaImageReader',
    'MissingDataError',
    'MultiBlock',
    'MultiBlockPlot3DReader',
    'MultipleLines',
    'NIFTIReader',
    'NRRDReader',
    'OBJReader',
    'Observer',
    'Octahedron',
    'OpenFOAMReader',
    'PLYReader',
    'PNGReader',
    'PNMReader',
    'POpenFOAMReader',
    'PTSReader',
    'PVDDataSet',
    'PVDReader',
    'ParametricBohemianDome',
    'ParametricBour',
    'ParametricBoy',
    'ParametricCatalanMinimal',
    'ParametricConicSpiral',
    'ParametricCrossCap',
    'ParametricDini',
    'ParametricEllipsoid',
    'ParametricEnneper',
    'ParametricFigure8Klein',
    'ParametricHenneberg',
    'ParametricKlein',
    'ParametricKuen',
    'ParametricMobius',
    'ParametricPluckerConoid',
    'ParametricPseudosphere',
    'ParametricRandomHills',
    'ParametricRoman',
    'ParametricSuperEllipsoid',
    'ParametricSuperToroid',
    'ParametricTorus',
    'Plane',
    'PlatonicSolid',
    'Plot3DFunctionEnum',
    'Plot3DMetaReader',
    'Plotter',
    'PointCellDataSelection',
    'PointGrid',
    'PointSet',
    'PolyData',
    'PolyDataFilters',
    'Polygon',
    'ProgressMonitor',
    'Property',
    'PyVistaDeprecationWarning',
    'Pyramid',
    'QtDeprecationError',
    'QtInteractor',
    'Rectangle',
    'RectilinearGrid',
    'Renderer',
    'Report',
    'SLCReader',
    'STLReader',
    'Scraper',
    'SegYReader',
    'Sphere',
    'Spline',
    'StructuredGrid',
    'Superquadric',
    'TIFFReader',
    'Table',
    'TecplotReader',
    'Tetrahedron',
    'Text3D',
    'Texture',
    'TimeReader',
    'Triangle',
    'Tube',
    'UniformGrid',
    'UniformGridFilters',
    'UnstructuredGrid',
    'UnstructuredGridFilters',
    'VTKDataSetReader',
    'VTKPDataSetReader',
    'VtkErrorCatcher',
    'Wavelet',
    'WidgetHelper',
    'XMLImageDataReader',
    'XMLMultiBlockDataReader',
    'XMLPImageDataReader',
    'XMLPRectilinearGridReader',
    'XMLPUnstructuredGridReader',
    'XMLPolyDataReader',
    'XMLRectilinearGridReader',
    'XMLStructuredGridReader',
    'XMLUnstructuredGridReader',
    # privates and dunders
    '__version__',
    #'_GlobalTheme',
    #'_get_sg_image_scraper',
    #'_get_vtk_id_type',
    #'_rcParams',
    #'_set_plot_theme_from_env',
    #'_typing',
    #'_version',
    #'_vtk',
    #'_wrappers',
    # helpers and modules
    'abstract_class',
    'actor',
    'array_from_vtkmatrix',
    #'arrays',  # utilities.arrays
    'assert_empty_kwargs',
    'axes',
    'axis_rotation',
    'background_renderer',
    'camera',
    'cell',
    'cell_array',
    'charts',
    'check_depth_peeling',
    'check_valid_vector',
    'close_all',
    'color_char_to_word',
    'color_like',
    'colors',
    #'common',  # utilities.common
    'compare_images',
    'composite',
    'composite_mapper',
    'conditional_decorator',
    'convert_array',
    'convert_string_array',
    'core',
    'create_axes_marker',
    'create_axes_orientation_box',
    'create_grid',
    'cubemap',
    'cubemap_from_filenames',
    'dataobject',
    'dataset',
    'datasetattributes',
    'errors',
    'export_plotter_vtkjs',
    'export_vtkjs',
    #'features',  # utilities.features
    'field_array',
    'fileio',
    'filters',
    'fit_plane_to_points',
    'from_meshio',
    'generate_plane',
    #'geometric_objects',  # utilities.geometric_objects
    'get_array',
    'get_array_association',
    'get_cmap_safe',
    'get_ext',
    'get_gpu_info',
    'get_reader',
    'get_vtk_type',
    'get_vtkjs_url',
    'global_theme',
    'grid',
    'grid_from_sph_coords',
    'helpers',
    'hexcolors',
    'image_to_texture',
    'is_inside_bounds',
    'is_meshio_mesh',
    'is_pyvista_dataset',
    'jupyter',
    'lights',
    'line_segments_from_points',
    'lines_from_points',
    'load_theme',
    'lookup_table',
    'make_tri_mesh',
    'mapper',
    'merge',
    #'misc',  # utilities.misc
    'numpy_to_texture',
    'objects',
    'opacity_transfer_function',
    'parametric_keywords',
    #'parametric_objects',  # utilities.parametric_objects
    'parse_field_choice',
    'parse_font_family',
    'perlin_noise',
    'picking',
    'plot',
    'plot_arrows',
    'plot_compare_four',
    'plotting',
    'point_array',
    'pointset',
    #'pyvista',  # self-reference
    'pyvista_ndarray',
    'raise_not_matching',
    'rcParams',
    'read',
    'read_exodus',
    'read_legacy',
    'read_meshio',
    'read_plot3d',
    'read_texture',
    'reader',
    #'regression',  # utilities.regression
    'render_passes',
    'render_window_interactor',
    'renderer',
    'renderers',
    'row_array',
    'sample_function',
    'save_meshio',
    'scalar_bars',
    'scale_point',
    'send_errors_to_logging',
    'set_default_active_scalars',
    'set_default_active_vectors',
    'set_error_output_file',
    'set_jupyter_backend',
    'set_pickle_format',
    'set_plot_theme',
    'set_vtkwriter_mode',
    #'sphinx_gallery',  # utilities.sphinx_gallery
    'start_xvfb',
    'surface_from_para',
    'system_supports_plotting',
    'themes',
    'threaded',
    'tools',
    'trans_from_matrix',
    'transform_vectors_sph_to_cart',
    'transformations',
    'translate',
    'try_callback',
    'utilities',
    'vector_poly_data',
    'voxelize',
    'vtk_bit_array_to_char',
    'vtk_id_list_to_array',
    'vtk_points',
    'vtk_version_info',
    'vtkmatrix_from_array',
    'widgets',
    'wrap',
    #'xvfb',  # utilities.xvfb
]
