[tox]
min_version = 4.25
requires =
    tox-uv>=1

env_list =
    py3.11-numpy_latest-vtk_9.2.6
    py3.12-numpy_latest-vtk_9.3.1
    py3.13-numpy_latest-vtk_9.4.2
    py3.13-numpy_nightly-vtk_latest
    py3.{10-13}
    py3.{10-13}-vtk_main

# ================= DEFAULT ENVIRONMENTS =================
[testenv]
description = Run the tests for python {basepython}
package =
    cov: editable # Otherwise, the coverage is not computed correctly
    !cov: wheel
wheel_build_env = .pkg

passenv =
    PYVISTA*
    TRAME*
    JUPYTER*
    PLOT_SKIP*
    DISPLAY
    XAUTHORITY
    ALLOW_PLOTTING
    PYTEST*
    GITHUB*
    *SSL*
    COVERAGE*
    CI*
    MESA*
    VTK*
    DISPLAY*

setenv =
    TOX_ROOT = {tox_root}

dependency_groups = test
deps =
    numpy_1.23: numpy ~= 1.23.0
    numpy_1.26: numpy ~= 1.26.0
    vtk_9.2.2: vtk == 9.2.2
    vtk_9.2.6: vtk == 9.2.6
    vtk_9.3.1: vtk == 9.3.1
    vtk_9.4.2: vtk == 9.4.2

commands_pre=
    numpy_nightly: uv pip uninstall numpy matplotlib
    numpy_nightly: uv pip install --pre --no-deps -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple matplotlib numpy
    vtk_main: uv pip install --upgrade vtk --pre --no-cache --extra-index-url https://wheels.vtk.org
    {[testenv]software_report_cmdline}

commands =
    {[testenv]all_testing_cmdline}

cov_flags =
    --cov \
    pyvista \
    --cov-config \
    {tox_root}{/}pyproject.toml \
    --cov-context \
    test \
    --cov-report \
    term:skip-covered \
    --cov-report \
    xml:coverage_{env_name}.xml \
    --cov-report \
    html:coverage_{env_name}

test_downloads = --test_downloads
disallow_unused_cache = --disallow_unused_cache
common_flags = --color=yes -v
core_flags = --ignore=tests/plotting {[testenv]test_downloads}
plotting_flags = tests/plotting {[testenv]disallow_unused_cache}
all_flags = {[testenv]common_flags} {[testenv]test_downloads} {[testenv]disallow_unused_cache}

all_testing_cmdline =
    !cov-core: pytest {[testenv]common_flags} {[testenv]core_flags} {posargs}
    !cov-plotting: pytest {[testenv]common_flags} {[testenv]plotting_flags} {posargs}
    cov-core: pytest {[testenv]common_flags} {[testenv]core_flags} {[testenv]cov_flags} {posargs}
    cov-plotting: pytest {[testenv]common_flags} {[testenv]plotting_flags} {[testenv]cov_flags} {posargs}
    !cov-!plotting-!core: pytest {[testenv]all_flags}  {posargs}

software_report_cmdline=
    python -c "import pyvista;print(pyvista.Report(gpu=False));from pyvista import examples;print('User data path:', examples.USER_DATA_PATH)"
