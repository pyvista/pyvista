!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTOR_LOC_MAP	pyvista/plotting/renderer.py	/^ACTOR_LOC_MAP = [$/;"	v
ALLOWED_BACKENDS	pyvista/jupyter/__init__.py	/^ALLOWED_BACKENDS = [$/;"	v
AREA	pyvista/plotting/opts.py	/^    AREA = (0, 'Area')$/;"	v	class:PickerType
AVSucdReader	pyvista/core/utilities/reader.py	/^class AVSucdReader(BaseReader):$/;"	c
ActiveArrayInfo	pyvista/core/dataset.py	/^class ActiveArrayInfo:$/;"	c
ActiveArrayInfoTuple	pyvista/core/dataset.py	/^ActiveArrayInfoTuple = namedtuple('ActiveArrayInfoTuple', ['association', 'name'])$/;"	v
ActiveScalarsAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class ActiveScalarsAlgorithm(PreserveTypeAlgorithmBase):$/;"	c
Actor	pyvista/plotting/actor.py	/^class Actor(Prop3D, _vtk.vtkActor):$/;"	c
ActorProperties	pyvista/plotting/actor_properties.py	/^class ActorProperties:$/;"	c
AddIDsAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class AddIDsAlgorithm(PreserveTypeAlgorithmBase):$/;"	c
AddObserver	pyvista/core/utilities/reader.py	/^    def AddObserver(self, event_type, callback):$/;"	m	class:BaseVTKReader
AffineWidget3D	pyvista/plotting/affine_widget.py	/^class AffineWidget3D:$/;"	c
AmbiguousDataError	pyvista/core/errors.py	/^class AmbiguousDataError(ValueError):$/;"	c
AnnotatedIntEnum	pyvista/core/utilities/misc.py	/^class AnnotatedIntEnum(int, enum.Enum):$/;"	c
AreaPlot	pyvista/plotting/charts.py	/^class AreaPlot(_vtk.vtkPlotArea, _Plot):$/;"	c
Arrow	pyvista/core/utilities/geometric_objects.py	/^def Arrow($/;"	f
Axes	pyvista/plotting/axes.py	/^class Axes(_vtk.vtkAxes):$/;"	c
AxesActor	pyvista/plotting/axes_actor.py	/^class AxesActor(_vtk.vtkAxesActor):$/;"	c
Axis	pyvista/plotting/charts.py	/^class Axis(_vtkWrapper, _vtk.vtkAxis):$/;"	c
BEHAVIORS	pyvista/plotting/charts.py	/^    BEHAVIORS = {"auto": _vtk.vtkAxis.AUTO, "fixed": _vtk.vtkAxis.FIXED}$/;"	v	class:Axis
BEZIER_CURVE	pyvista/core/celltype.py	/^    BEZIER_CURVE = _vtk.VTK_BEZIER_CURVE$/;"	v	class:CellType
BEZIER_HEXAHEDRON	pyvista/core/celltype.py	/^    BEZIER_HEXAHEDRON = _vtk.VTK_BEZIER_HEXAHEDRON$/;"	v	class:CellType
BEZIER_PYRAMID	pyvista/core/celltype.py	/^    BEZIER_PYRAMID = _vtk.VTK_BEZIER_PYRAMID$/;"	v	class:CellType
BEZIER_QUADRILATERAL	pyvista/core/celltype.py	/^    BEZIER_QUADRILATERAL = _vtk.VTK_BEZIER_QUADRILATERAL$/;"	v	class:CellType
BEZIER_TETRAHEDRON	pyvista/core/celltype.py	/^    BEZIER_TETRAHEDRON = _vtk.VTK_BEZIER_TETRAHEDRON$/;"	v	class:CellType
BEZIER_TRIANGLE	pyvista/core/celltype.py	/^    BEZIER_TRIANGLE = _vtk.VTK_BEZIER_TRIANGLE$/;"	v	class:CellType
BEZIER_WEDGE	pyvista/core/celltype.py	/^    BEZIER_WEDGE = _vtk.VTK_BEZIER_WEDGE$/;"	v	class:CellType
BIQUADRATIC_QUAD	pyvista/core/celltype.py	/^    BIQUADRATIC_QUAD = _vtk.VTK_BIQUADRATIC_QUAD$/;"	v	class:CellType
BIQUADRATIC_QUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_HEXAHEDRON = _vtk.VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON$/;"	v	class:CellType
BIQUADRATIC_QUADRATIC_WEDGE	pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_WEDGE = _vtk.VTK_BIQUADRATIC_QUADRATIC_WEDGE$/;"	v	class:CellType
BIQUADRATIC_TRIANGLE	pyvista/core/celltype.py	/^    BIQUADRATIC_TRIANGLE = _vtk.VTK_BIQUADRATIC_TRIANGLE$/;"	v	class:CellType
BMPReader	pyvista/core/utilities/reader.py	/^class BMPReader(BaseReader):$/;"	c
BUILDDIR	doc/Makefile	/^BUILDDIR      = _build$/;"	m
BUILDING_GALLERY	pyvista/__init__.py	/^        BUILDING_GALLERY = True$/;"	v
BUILDING_GALLERY	pyvista/__init__.py	/^BUILDING_GALLERY = False$/;"	v
BUILDING_GALLERY_ERROR_MSG	pyvista/plotting/utilities/sphinx_gallery.py	/^BUILDING_GALLERY_ERROR_MSG = ($/;"	v
BYUReader	pyvista/core/utilities/reader.py	/^class BYUReader(BaseReader):$/;"	c
BackgroundPlotter	pyvista/plotting/__init__.py	/^class BackgroundPlotter:  # numpydoc ignore=PR01$/;"	c
BackgroundRenderer	pyvista/plotting/background_renderer.py	/^class BackgroundRenderer(Renderer):$/;"	c
BarPlot	pyvista/plotting/charts.py	/^class BarPlot(_vtk.vtkPlotBar, _MultiCompPlot):$/;"	c
BasePlotter	pyvista/plotting/plotter.py	/^class BasePlotter(PickingHelper, WidgetHelper):$/;"	c
BaseReader	pyvista/core/utilities/reader.py	/^class BaseReader:$/;"	c
BaseVTKReader	pyvista/core/utilities/reader.py	/^class BaseVTKReader(ABC):$/;"	c
BaseViewer	pyvista/trame/ui/base_viewer.py	/^class BaseViewer:$/;"	c
BinaryMarchingCubesReader	pyvista/core/utilities/reader.py	/^class BinaryMarchingCubesReader(BaseReader):$/;"	c
BlockAttributes	pyvista/plotting/composite_mapper.py	/^class BlockAttributes:$/;"	c
BoundsLike	pyvista/core/_typing_core.py	/^BoundsLike = Tuple[Number, Number, Number, Number, Number, Number]$/;"	v
Box	pyvista/core/utilities/geometric_objects.py	/^def Box(bounds=(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0), level=0, quads=True):$/;"	f
BoxPlot	pyvista/plotting/charts.py	/^class BoxPlot(_vtk.vtkPlotBox, _MultiCompPlot):$/;"	c
Brush	pyvista/plotting/charts.py	/^class Brush(_vtkWrapper, _vtk.vtkBrush):$/;"	c
CACHE_VERSION	pyvista/examples/downloads.py	/^CACHE_VERSION = 3$/;"	v
CAMERA_LIGHT	pyvista/plotting/lights.py	/^    CAMERA_LIGHT = 2$/;"	v	class:LightType
CAMERA_LIGHT	pyvista/plotting/lights.py	/^    CAMERA_LIGHT = LightType.CAMERA_LIGHT$/;"	v	class:Light
CAMERA_STR_ATTR_MAP	pyvista/plotting/renderer.py	/^    CAMERA_STR_ATTR_MAP = {$/;"	v	class:Renderer
CELL	pyvista/core/utilities/arrays.py	/^    CELL = _vtk.vtkDataObject.FIELD_ASSOCIATION_CELLS$/;"	v	class:FieldAssociation
CELL	pyvista/plotting/opts.py	/^    CELL = (1, 'Cell')$/;"	v	class:ElementType
CELL	pyvista/plotting/opts.py	/^    CELL = (1, 'Cell')$/;"	v	class:PickerType
CELL_LIST	tests/core/test_cells.py	/^CELL_LIST = [3, 0, 1, 2, 3, 3, 4, 5]$/;"	v
CGNSReader	pyvista/core/utilities/reader.py	/^class CGNSReader(BaseReader, PointCellDataSelection):$/;"	c
CHANNEL_NAMES	pyvista/plotting/colors.py	/^    CHANNEL_NAMES = ($/;"	v	class:Color
CHARTS_IMAGE_DIR	doc/source/make_tables.py	/^CHARTS_IMAGE_DIR = "images\/charts"$/;"	v
CHARTS_TABLE_DIR	doc/source/make_tables.py	/^CHARTS_TABLE_DIR = "api\/plotting\/charts"$/;"	v
CI_WINDOWS	tests/plotting/test_plotting.py	/^CI_WINDOWS = os.environ.get('CI_WINDOWS', 'false').lower() == 'true'$/;"	v
CLAMP_TO_BORDER	pyvista/plotting/texture.py	/^        CLAMP_TO_BORDER = (3, 'Clamp to border')$/;"	v	class:Texture.WrapType
CLAMP_TO_EDGE	pyvista/plotting/texture.py	/^        CLAMP_TO_EDGE = (0, 'Clamp to edge')$/;"	v	class:Texture.WrapType
CLASS_READERS	pyvista/core/utilities/reader.py	/^CLASS_READERS = {$/;"	v
CLOSED_PLOTTER_ERROR	pyvista/trame/views.py	/^CLOSED_PLOTTER_ERROR = "The render window for this plotter has been destroyed. Do not call `show()` for the plotter before passing to trame."$/;"	v
CODE_DIRS	Makefile	/^CODE_DIRS ?= doc examples examples_trame pyvista tests$/;"	m
CODE_FILES	Makefile	/^CODE_FILES ?= *.py *.rst *.md$/;"	m
COLORMAPS	tests/plotting/test_colors.py	/^COLORMAPS = ['Greys']$/;"	v
COLORS_TABLE_DIR	doc/source/make_tables.py	/^COLORS_TABLE_DIR = "api\/utilities"$/;"	v
COLOR_SCHEMES	pyvista/plotting/colors.py	/^COLOR_SCHEMES = {$/;"	v
CONE	pyvista/plotting/axes_actor.py	/^        CONE = 0$/;"	v	class:AxesActor.TipType
CONNECTIVITY_LIST	tests/core/test_cells.py	/^CONNECTIVITY_LIST = [0, 1, 2, 3, 4, 5]$/;"	v
CONVEX_POINT_SET	pyvista/core/celltype.py	/^    CONVEX_POINT_SET = _vtk.VTK_CONVEX_POINT_SET$/;"	v	class:CellType
CUBIC_LINE	pyvista/core/celltype.py	/^    CUBIC_LINE = _vtk.VTK_CUBIC_LINE$/;"	v	class:CellType
CYLINDER	pyvista/plotting/axes_actor.py	/^        CYLINDER = 0$/;"	v	class:AxesActor.ShaftType
Camera	pyvista/plotting/camera.py	/^class Camera(_vtk.vtkCamera):$/;"	c
CameraPosition	pyvista/plotting/renderer.py	/^class CameraPosition:$/;"	c
Cell	pyvista/core/cell.py	/^class Cell(_vtk.vtkGenericCell, DataObject):$/;"	c
CellArray	pyvista/core/cell.py	/^class CellArray(_vtk.vtkCellArray):$/;"	c
CellType	pyvista/core/celltype.py	/^class CellType(IntEnum):$/;"	c
Chart	pyvista/plotting/_typing.py	/^Chart = Union["Chart2D", "ChartBox", "ChartPie", "ChartMPL"]$/;"	v
Chart2D	pyvista/plotting/charts.py	/^class Chart2D(_vtk.vtkChartXY, _Chart):$/;"	c
ChartBox	pyvista/plotting/charts.py	/^class ChartBox(_vtk.vtkChartBox, _Chart):$/;"	c
ChartMPL	pyvista/plotting/charts.py	/^class ChartMPL(_vtk.vtkImageItem, _Chart):$/;"	c
ChartPie	pyvista/plotting/charts.py	/^class ChartPie(_vtk.vtkChartPie, _Chart):$/;"	c
Charts	pyvista/plotting/charts.py	/^class Charts:$/;"	c
Circle	pyvista/core/utilities/geometric_objects.py	/^def Circle(radius=0.5, resolution=100):$/;"	f
CircularArc	pyvista/core/utilities/geometric_objects.py	/^def CircularArc(pointa, pointb, center, resolution=100, negative=False):$/;"	f
CircularArcFromNormal	pyvista/core/utilities/geometric_objects.py	/^def CircularArcFromNormal(center, resolution=100, normal=None, polar=None, angle=None):$/;"	f
Color	pyvista/plotting/colors.py	/^class Color:$/;"	c
ColorLike	pyvista/plotting/_typing.py	/^ColorLike = Union[$/;"	v
ColorSchemeTable	doc/source/make_tables.py	/^class ColorSchemeTable(DocTable):$/;"	c
ColorTable	doc/source/make_tables.py	/^class ColorTable(DocTable):$/;"	c
CompositeAttributes	pyvista/plotting/composite_mapper.py	/^class CompositeAttributes(_vtk.vtkCompositeDataDisplayAttributes):$/;"	c
CompositeFilters	pyvista/core/filters/composite.py	/^class CompositeFilters:$/;"	c
CompositePolyDataMapper	pyvista/plotting/composite_mapper.py	/^class CompositePolyDataMapper(_vtk.vtkCompositePolyDataMapper2, _BaseMapper):$/;"	c
Cone	pyvista/core/utilities/geometric_objects.py	/^def Cone($/;"	f
ConeSource	pyvista/core/utilities/geometric_sources.py	/^class ConeSource(_vtk.vtkConeSource):$/;"	c
CornerAnnotation	pyvista/plotting/text.py	/^class CornerAnnotation(_vtk.vtkCornerAnnotation):$/;"	c
CoverageBuilder	pyvista/ext/coverage.py	/^class CoverageBuilder(Builder):$/;"	c
CrinkleAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class CrinkleAlgorithm(_vtk.VTKPythonAlgorithmBase):$/;"	c
Cube	pyvista/core/utilities/geometric_objects.py	/^def Cube(center=(0.0, 0.0, 0.0), x_length=1.0, y_length=1.0, z_length=1.0, bounds=None, clean=True):$/;"	f
CubeAxesActor	pyvista/plotting/cube_axes_actor.py	/^class CubeAxesActor(_vtk.vtkCubeAxesActor):$/;"	c
CustomStyle	pyvista/plotting/render_window_interactor.py	/^        class CustomStyle(getattr(vtkInteractionStyle, 'vtkInteractorStyle' + klass)):$/;"	c	function:_style_factory._make_class
Cylinder	pyvista/core/utilities/geometric_objects.py	/^def Cylinder($/;"	f
CylinderStructured	pyvista/core/utilities/geometric_objects.py	/^def CylinderStructured($/;"	f
DARK_YELLOW	pyvista/plotting/affine_widget.py	/^DARK_YELLOW = (0.9647058823529412, 0.7450980392156863, 0)$/;"	v
DEFAULTS	doc/Makefile	/^DEFAULTS	  = -w sphinx_warnings.txt -W --keep-going$/;"	m
DEFAULT_COLOR_SCHEME	pyvista/plotting/charts.py	/^    DEFAULT_COLOR_SCHEME = "qual_accent"$/;"	v	class:_MultiCompPlot
DEFAULT_INPLACE_WARNING	pyvista/core/pointset.py	/^DEFAULT_INPLACE_WARNING = ($/;"	v
DEFAULT_SCALARS_NAME	pyvista/__init__.py	/^DEFAULT_SCALARS_NAME = 'Data'$/;"	v
DEFAULT_VECTOR_KEY	pyvista/core/dataobject.py	/^DEFAULT_VECTOR_KEY = '_vectors'$/;"	v
DEFAULT_VECTOR_KEY	pyvista/core/dataset.py	/^DEFAULT_VECTOR_KEY = '_vectors'$/;"	v
DEMReader	pyvista/core/utilities/reader.py	/^class DEMReader(BaseReader):$/;"	c
DENSITY	pyvista/core/utilities/reader.py	/^    DENSITY = 100$/;"	v	class:Plot3DFunctionEnum
DENSITY	pyvista/core/utilities/reader.py	/^    DENSITY = Plot3DFunctionEnum.DENSITY$/;"	v	class:MultiBlockPlot3DReader
DICOMReader	pyvista/core/utilities/reader.py	/^class DICOMReader(BaseReader):$/;"	c
DarkTheme	pyvista/plotting/themes.py	/^class DarkTheme(Theme):$/;"	c
DataObject	pyvista/core/dataobject.py	/^class DataObject:$/;"	c
DataSet	pyvista/core/dataset.py	/^class DataSet(DataSetFilters, DataObject):$/;"	c
DataSetAttributes	pyvista/core/datasetattributes.py	/^class DataSetAttributes(_vtk.VTKObjectWrapper):$/;"	c
DataSetFilters	pyvista/core/filters/data_set.py	/^class DataSetFilters:$/;"	c
DataSetMapper	pyvista/plotting/mapper.py	/^class DataSetMapper(_vtk.vtkDataSetMapper, _BaseMapper):$/;"	c
DefaultTheme	pyvista/plotting/themes.py	/^class DefaultTheme(Theme):$/;"	c
DeprecationError	pyvista/core/errors.py	/^class DeprecationError(RuntimeError):$/;"	c
Disc	pyvista/core/utilities/geometric_objects.py	/^def Disc(center=(0.0, 0.0, 0.0), inner=0.25, outer=0.5, normal=(0.0, 0.0, 1.0), r_res=1, c_res=6):$/;"	f
DistanceCallback	tests/plotting/test_widgets.py	/^    class DistanceCallback:$/;"	c	function:test_measurement_widget
DocSubs	pyvista/plotting/charts.py	/^class DocSubs:$/;"	c
DocTable	doc/source/make_tables.py	/^class DocTable:$/;"	c
DocumentProTheme	pyvista/plotting/themes.py	/^class DocumentProTheme(DocumentTheme):$/;"	c
DocumentTheme	pyvista/plotting/themes.py	/^class DocumentTheme(Theme):$/;"	c
Dodecahedron	pyvista/core/utilities/geometric_objects.py	/^def Dodecahedron(radius=1.0, center=(0.0, 0.0, 0.0)):$/;"	f
DynamicScraper	pyvista/plotting/utilities/sphinx_gallery.py	/^class DynamicScraper:$/;"	c
EDGE	pyvista/plotting/opts.py	/^    EDGE = (3, 'Edge')$/;"	v	class:ElementType
EMPTY_CELL	pyvista/core/celltype.py	/^    EMPTY_CELL = _vtk.VTK_EMPTY_CELL$/;"	v	class:CellType
ENTHALPY	pyvista/core/utilities/reader.py	/^    ENTHALPY = 130$/;"	v	class:Plot3DFunctionEnum
ENTHALPY	pyvista/core/utilities/reader.py	/^    ENTHALPY = Plot3DFunctionEnum.ENTHALPY$/;"	v	class:MultiBlockPlot3DReader
ENTROPY	pyvista/core/utilities/reader.py	/^    ENTROPY = 170$/;"	v	class:Plot3DFunctionEnum
ENTROPY	pyvista/core/utilities/reader.py	/^    ENTROPY = Plot3DFunctionEnum.ENTROPY$/;"	v	class:MultiBlockPlot3DReader
ElementType	pyvista/plotting/opts.py	/^class ElementType(AnnotatedIntEnum):$/;"	c
Ellipse	pyvista/core/utilities/geometric_objects.py	/^def Ellipse(semi_major_axis=0.5, semi_minor_axis=0.2, resolution=100):$/;"	f
Empty	pyvista/examples/cells.py	/^def Empty() -> UnstructuredGrid:$/;"	f
EnSightReader	pyvista/core/utilities/reader.py	/^class EnSightReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
Example	doc/source/make_external_gallery.py	/^class Example:$/;"	c
ExplicitStructuredGrid	pyvista/core/pointset.py	/^class ExplicitStructuredGrid(_vtk.vtkExplicitStructuredGrid, PointGrid):$/;"	c
FACE	pyvista/plotting/opts.py	/^    FACE = (2, 'Face')$/;"	v	class:ElementType
FCONTIG_ARR	tests/core/test_cells.py	/^FCONTIG_ARR = np.array(np.vstack(([3, 0, 1, 2], [3, 3, 4, 5])), order='F')$/;"	v
FETCHER	pyvista/examples/downloads.py	/^FETCHER = pooch.create($/;"	v
FIGURE_PATH	pyvista/__init__.py	/^FIGURE_PATH = None$/;"	v
FLAT	pyvista/plotting/opts.py	/^    FLAT = (0, 'Flat')$/;"	v	class:InterpolationType
FLOAT_FORMAT	pyvista/__init__.py	/^FLOAT_FORMAT = "{:.3e}"$/;"	v
FONTS	pyvista/plotting/tools.py	/^class FONTS(Enum):$/;"	c
FacetReader	pyvista/core/utilities/reader.py	/^class FacetReader(BaseReader):$/;"	c
FieldAssociation	pyvista/core/utilities/arrays.py	/^class FieldAssociation(enum.Enum):$/;"	c
FixedPointVolumeRayCastMapper	pyvista/plotting/mapper.py	/^class FixedPointVolumeRayCastMapper(_vtk.vtkFixedPointVolumeRayCastMapper, _BaseVolumeMapper):$/;"	c
FluentReader	pyvista/core/utilities/reader.py	/^class FluentReader(BaseReader):$/;"	c
Foo	tests/core/test_helpers.py	/^    class Foo(pv.PolyData):$/;"	c	function:test_inheritance_no_wrappers
Foo	tests/core/test_helpers.py	/^    class Foo(pv.PolyData):$/;"	c	function:test_wrappers
FooData	examples/99-advanced/extending-pyvista.py	/^class FooData(pyvista.PolyData):$/;"	c
GIFReader	pyvista/core/utilities/reader.py	/^class GIFReader(BaseReader):$/;"	c
GLOBAL_AXES	pyvista/plotting/affine_widget.py	/^GLOBAL_AXES = np.eye(3)$/;"	v
GLTFReader	pyvista/core/utilities/reader.py	/^class GLTFReader(BaseReader):$/;"	c
GLTF_FETCHER	pyvista/examples/gltf.py	/^GLTF_FETCHER = pooch.create($/;"	v
GOURAUD	pyvista/plotting/opts.py	/^    GOURAUD = (1, 'Gouraud')$/;"	v	class:InterpolationType
GPUInfo	pyvista/report.py	/^class GPUInfo:$/;"	c
GPUVolumeRayCastMapper	pyvista/plotting/mapper.py	/^class GPUVolumeRayCastMapper(_vtk.vtkGPUVolumeRayCastMapper, _BaseVolumeMapper):$/;"	c
GcHandler	tests/plotting/conftest.py	/^    class GcHandler:$/;"	c	function:check_gc
GetInputData	pyvista/plotting/utilities/algorithms.py	/^    def GetInputData(self, inInfo, port, idx):$/;"	m	class:PreserveTypeAlgorithmBase
GetOutput	tests/core/test_dataset_filters.py	/^class GetOutput:$/;"	c
GetOutputDataObject	pyvista/core/utilities/reader.py	/^    def GetOutputDataObject(self, *args):$/;"	m	class:BaseVTKReader
GetProgress	pyvista/core/utilities/reader.py	/^    def GetProgress(self):$/;"	m	class:BaseVTKReader
GetProgress	pyvista/core/utilities/reader.py	/^    def GetProgress(self):$/;"	m	class:_GIFReader
Grid	pyvista/core/grid.py	/^class Grid(DataSet):$/;"	c
HARDWARE	pyvista/plotting/opts.py	/^    HARDWARE = (2, 'Hardware')$/;"	v	class:PickerType
HAS_IMAGEIO	tests/core/test_reader.py	/^    HAS_IMAGEIO = False$/;"	v
HAS_IMAGEIO	tests/core/test_reader.py	/^HAS_IMAGEIO = True$/;"	v
HAS_IMAGEIO	tests/plotting/test_plotting.py	/^    HAS_IMAGEIO = False$/;"	v
HAS_IMAGEIO	tests/plotting/test_plotting.py	/^HAS_IMAGEIO = True$/;"	v
HAS_IMAGEIO	tests/plotting/test_plotting_utilities.py	/^    HAS_IMAGEIO = False$/;"	v
HAS_IMAGEIO	tests/plotting/test_plotting_utilities.py	/^HAS_IMAGEIO = True$/;"	v
HDFReader	pyvista/core/utilities/reader.py	/^class HDFReader(BaseReader):$/;"	c
HDF_HELP	pyvista/core/utilities/reader.py	/^HDF_HELP = 'https:\/\/kitware.github.io\/vtk-examples\/site\/VTKFileFormats\/#hdf-file-formats'$/;"	v
HDRReader	pyvista/core/utilities/reader.py	/^class HDRReader(BaseReader):$/;"	c
HEADLIGHT	pyvista/plotting/lights.py	/^    HEADLIGHT = 1$/;"	v	class:LightType
HEADLIGHT	pyvista/plotting/lights.py	/^    HEADLIGHT = LightType.HEADLIGHT$/;"	v	class:Light
HEXAGONAL_PRISM	pyvista/core/celltype.py	/^    HEXAGONAL_PRISM = _vtk.VTK_HEXAGONAL_PRISM$/;"	v	class:CellType
HEXAHEDRON	pyvista/core/celltype.py	/^    HEXAHEDRON = _vtk.VTK_HEXAHEDRON$/;"	v	class:CellType
HEXBEAM_CELLS_BOOL	tests/core/test_grid.py	/^HEXBEAM_CELLS_BOOL = np.ones(40, dtype=bool)  # matches hexbeam.n_cells == 40$/;"	v
HIGHER_ORDER_EDGE	pyvista/core/celltype.py	/^    HIGHER_ORDER_EDGE = _vtk.VTK_HIGHER_ORDER_EDGE$/;"	v	class:CellType
HIGHER_ORDER_HEXAHEDRON	pyvista/core/celltype.py	/^    HIGHER_ORDER_HEXAHEDRON = _vtk.VTK_HIGHER_ORDER_HEXAHEDRON$/;"	v	class:CellType
HIGHER_ORDER_POLYGON	pyvista/core/celltype.py	/^    HIGHER_ORDER_POLYGON = _vtk.VTK_HIGHER_ORDER_POLYGON$/;"	v	class:CellType
HIGHER_ORDER_PYRAMID	pyvista/core/celltype.py	/^    HIGHER_ORDER_PYRAMID = _vtk.VTK_HIGHER_ORDER_PYRAMID$/;"	v	class:CellType
HIGHER_ORDER_QUAD	pyvista/core/celltype.py	/^    HIGHER_ORDER_QUAD = _vtk.VTK_HIGHER_ORDER_QUAD$/;"	v	class:CellType
HIGHER_ORDER_TETRAHEDRON	pyvista/core/celltype.py	/^    HIGHER_ORDER_TETRAHEDRON = _vtk.VTK_HIGHER_ORDER_TETRAHEDRON$/;"	v	class:CellType
HIGHER_ORDER_TRIANGLE	pyvista/core/celltype.py	/^    HIGHER_ORDER_TRIANGLE = _vtk.VTK_HIGHER_ORDER_TRIANGLE$/;"	v	class:CellType
HIGHER_ORDER_WEDGE	pyvista/core/celltype.py	/^    HIGHER_ORDER_WEDGE = _vtk.VTK_HIGHER_ORDER_WEDGE$/;"	v	class:CellType
HTML	pyvista/trame/jupyter.py	/^    HTML = object$/;"	v
HYPOTHESIS_MAX_EXAMPLES	tests/core/test_dataset.py	/^HYPOTHESIS_MAX_EXAMPLES = 20$/;"	v
HexagonalPrism	pyvista/examples/cells.py	/^def HexagonalPrism() -> UnstructuredGrid:$/;"	f
Hexahedron	pyvista/examples/cells.py	/^def Hexahedron() -> UnstructuredGrid:$/;"	f
ID_TYPE	pyvista/__init__.py	/^ID_TYPE = _get_vtk_id_type()$/;"	v
IMPORT_MATPLOTLIB_RE	doc/source/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	v
IMPORT_MATPLOTLIB_RE	tests/tinypages/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	v
IMPORT_PYVISTA_RE	doc/source/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	v
IMPORT_PYVISTA_RE	tests/tinypages/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	v
INTERNAL_ENERGY	pyvista/core/utilities/reader.py	/^    INTERNAL_ENERGY = 140$/;"	v	class:Plot3DFunctionEnum
INTERNAL_ENERGY	pyvista/core/utilities/reader.py	/^    INTERNAL_ENERGY = Plot3DFunctionEnum.INTERNAL_ENERGY$/;"	v	class:MultiBlockPlot3DReader
IPYGANY_MAP	pyvista/plotting/colors.py	/^IPYGANY_MAP = {$/;"	v
Icosahedron	pyvista/core/utilities/geometric_objects.py	/^def Icosahedron(radius=1.0, center=(0.0, 0.0, 0.0)):$/;"	f
Icosphere	pyvista/core/utilities/geometric_objects.py	/^def Icosphere(radius=1.0, center=(0.0, 0.0, 0.0), nsub=3):$/;"	f
ImageData	pyvista/core/grid.py	/^class ImageData(_vtk.vtkImageData, Grid, ImageDataFilters):$/;"	c
ImageDataFilters	pyvista/core/filters/image_data.py	/^class ImageDataFilters(DataSetFilters):$/;"	c
ImageFile	pyvista/ext/plot_directive.py	/^class ImageFile:$/;"	c
Initialize	pyvista/plotting/charts.py	/^        def Initialize(self, item):$/;"	m	class:_CustomContextItem.ItemWrapper
InterpolationType	pyvista/plotting/opts.py	/^class InterpolationType(AnnotatedIntEnum):$/;"	c
InterrogateVTKGlyph3D	tests/core/test_dataset_filters.py	/^class InterrogateVTKGlyph3D:$/;"	c
InvalidCameraError	pyvista/plotting/errors.py	/^class InvalidCameraError(ValueError):  # numpydoc ignore=PR01$/;"	c
ItemWrapper	pyvista/plotting/charts.py	/^    class ItemWrapper:$/;"	c	class:_CustomContextItem
JPEGReader	pyvista/core/utilities/reader.py	/^class JPEGReader(BaseReader):$/;"	c
KEY	tests/plotting/test_scalar_bars.py	/^KEY = 'Data'$/;"	v
KILL_DISPLAY	pyvista/plotting/plotter.py	/^        KILL_DISPLAY = False$/;"	v
KILL_DISPLAY	pyvista/plotting/plotter.py	/^KILL_DISPLAY = platform.system() == 'Linux' and os.environ.get('PYVISTA_KILL_DISPLAY')$/;"	v
KINETIC_ENERGY	pyvista/core/utilities/reader.py	/^    KINETIC_ENERGY = 144$/;"	v	class:Plot3DFunctionEnum
KINETIC_ENERGY	pyvista/core/utilities/reader.py	/^    KINETIC_ENERGY = Plot3DFunctionEnum.KINETIC_ENERGY$/;"	v	class:MultiBlockPlot3DReader
KochanekSpline	pyvista/core/utilities/parametric_objects.py	/^def KochanekSpline(points, tension=None, bias=None, continuity=None, n_points=None):$/;"	f
LAGRANGE_CURVE	pyvista/core/celltype.py	/^    LAGRANGE_CURVE = _vtk.VTK_LAGRANGE_CURVE$/;"	v	class:CellType
LAGRANGE_HEXAHEDRON	pyvista/core/celltype.py	/^    LAGRANGE_HEXAHEDRON = _vtk.VTK_LAGRANGE_HEXAHEDRON$/;"	v	class:CellType
LAGRANGE_PYRAMID	pyvista/core/celltype.py	/^    LAGRANGE_PYRAMID = _vtk.VTK_LAGRANGE_PYRAMID$/;"	v	class:CellType
LAGRANGE_QUADRILATERAL	pyvista/core/celltype.py	/^    LAGRANGE_QUADRILATERAL = _vtk.VTK_LAGRANGE_QUADRILATERAL$/;"	v	class:CellType
LAGRANGE_TETRAHEDRON	pyvista/core/celltype.py	/^    LAGRANGE_TETRAHEDRON = _vtk.VTK_LAGRANGE_TETRAHEDRON$/;"	v	class:CellType
LAGRANGE_TRIANGLE	pyvista/core/celltype.py	/^    LAGRANGE_TRIANGLE = _vtk.VTK_LAGRANGE_TRIANGLE$/;"	v	class:CellType
LAGRANGE_WEDGE	pyvista/core/celltype.py	/^    LAGRANGE_WEDGE = _vtk.VTK_LAGRANGE_WEDGE$/;"	v	class:CellType
LINE	pyvista/core/celltype.py	/^    LINE = _vtk.VTK_LINE$/;"	v	class:CellType
LINE	pyvista/plotting/axes_actor.py	/^        LINE = 1$/;"	v	class:AxesActor.ShaftType
LINE_STYLES	pyvista/plotting/charts.py	/^    LINE_STYLES = {  # descr is used in the documentation, set to None to hide it from the docs.$/;"	v	class:Pen
LOGO_TITLE	pyvista/demos/logo.py	/^LOGO_TITLE = 'PyVista'$/;"	v
Light	pyvista/plotting/lights.py	/^class Light(vtkLight):$/;"	c
LightType	pyvista/plotting/lights.py	/^class LightType(IntEnum):$/;"	c
Line	pyvista/core/utilities/geometric_objects.py	/^def Line(pointa=(-0.5, 0.0, 0.0), pointb=(0.5, 0.0, 0.0), resolution=1):$/;"	f
Line	pyvista/examples/cells.py	/^def Line() -> UnstructuredGrid:$/;"	f
LinePlot2D	pyvista/plotting/charts.py	/^class LinePlot2D(_vtk.vtkPlotLine, _Plot):$/;"	c
LineStyleTable	doc/source/make_tables.py	/^class LineStyleTable(DocTable):$/;"	c
LookupTable	pyvista/plotting/lookup_table.py	/^class LookupTable(_vtk.vtkLookupTable):$/;"	c
MACH	pyvista/core/utilities/reader.py	/^    MACH = 112$/;"	v	class:Plot3DFunctionEnum
MACH	pyvista/core/utilities/reader.py	/^    MACH = Plot3DFunctionEnum.MACH$/;"	v	class:MultiBlockPlot3DReader
MARKER_STYLES	pyvista/plotting/charts.py	/^    MARKER_STYLES = {  # descr is used in the documentation, set to None to hide it from the docs.$/;"	v	class:ScatterPlot2D
MAX_N_COLOR_BARS	pyvista/__init__.py	/^MAX_N_COLOR_BARS = 10$/;"	v
MESH	pyvista/plotting/opts.py	/^    MESH = (0, 'Mesh')$/;"	v	class:ElementType
MFIXReader	pyvista/core/utilities/reader.py	/^class MFIXReader(BaseReader):$/;"	c
MIRRORED_REPEAT	pyvista/plotting/texture.py	/^        MIRRORED_REPEAT = (2, 'Mirrored repeat')$/;"	v	class:Texture.WrapType
MOMENTUM	pyvista/core/utilities/reader.py	/^    MOMENTUM = 202$/;"	v	class:Plot3DFunctionEnum
MOMENTUM	pyvista/core/utilities/reader.py	/^    MOMENTUM = Plot3DFunctionEnum.MOMENTUM$/;"	v	class:MultiBlockPlot3DReader
MarkerStyleTable	doc/source/make_tables.py	/^class MarkerStyleTable(DocTable):$/;"	c
MetaImageReader	pyvista/core/utilities/reader.py	/^class MetaImageReader(BaseReader):$/;"	c
MissingDataError	pyvista/core/errors.py	/^class MissingDataError(ValueError):$/;"	c
MultiBlock	pyvista/core/composite.py	/^):$/;"	c
MultiBlockPlot3DReader	pyvista/core/utilities/reader.py	/^class MultiBlockPlot3DReader(BaseReader):$/;"	c
MultipleLines	pyvista/core/utilities/geometric_objects.py	/^def MultipleLines(points=[[-0.5, 0.0, 0.0], [0.5, 0.0, 0.0]]):$/;"	f
MyCustomRoutine	examples/03-widgets/multi-slider-widget.py	/^class MyCustomRoutine:$/;"	c
MyTheme	tests/plotting/test_theme.py	/^    class MyTheme(Theme):$/;"	c	function:test_user_theme
N	examples/01-filter/glyphs_table.py	/^N = 5$/;"	v
N	examples/02-plot/chart_basics.py	/^N = int(1e4)$/;"	v
N	examples/99-advanced/warp-by-vector-eigenmodes.py	/^N = 8  # maximum order of x^p y^q z^r polynomials$/;"	v
NCELLS	tests/core/test_cells.py	/^NCELLS = 2$/;"	v
NIFTIReader	pyvista/core/utilities/reader.py	/^class NIFTIReader(BaseReader):$/;"	c
NONE	pyvista/core/utilities/arrays.py	/^    NONE = _vtk.vtkDataObject.FIELD_ASSOCIATION_NONE$/;"	v	class:FieldAssociation
NORMALS	pyvista/core/utilities/geometric_objects.py	/^NORMALS = {$/;"	v
NRRDReader	pyvista/core/utilities/reader.py	/^class NRRDReader(BaseReader):$/;"	c
NotAllTrianglesError	pyvista/core/errors.py	/^class NotAllTrianglesError(ValueError):$/;"	c
Number	pyvista/core/_typing_core.py	/^Number = Union[float, int, np.number]$/;"	v
NumericArray	pyvista/core/_typing_core.py	/^NumericArray = Union[Sequence[Number], np.ndarray]$/;"	v
OBJReader	pyvista/core/utilities/reader.py	/^class OBJReader(BaseReader):$/;"	c
OFFSETS_LIST	tests/core/test_cells.py	/^OFFSETS_LIST = [0, 3, 6]$/;"	v
OFF_SCREEN	pyvista/__init__.py	/^OFF_SCREEN = os.environ.get("PYVISTA_OFF_SCREEN", "false").lower() == "true"$/;"	v
ORIENTATIONS	pyvista/plotting/charts.py	/^    ORIENTATIONS = {"H": _vtk.vtkPlotBar.HORIZONTAL, "V": _vtk.vtkPlotBar.VERTICAL}$/;"	v	class:BarPlot
Observer	pyvista/core/utilities/observers.py	/^class Observer:$/;"	c
Octahedron	pyvista/core/utilities/geometric_objects.py	/^def Octahedron(radius=1.0, center=(0.0, 0.0, 0.0)):$/;"	f
OfflineViewerDirective	pyvista/ext/viewer_directive.py	/^class OfflineViewerDirective(Directive):$/;"	c
OpenFOAMReader	pyvista/core/utilities/reader.py	/^class OpenFOAMReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
OpenGLGPUVolumeRayCastMapper	pyvista/plotting/mapper.py	/^class OpenGLGPUVolumeRayCastMapper(_vtk.vtkOpenGLGPUVolumeRayCastMapper, _BaseVolumeMapper):$/;"	c
PARAMETRIC_CURVE	pyvista/core/celltype.py	/^    PARAMETRIC_CURVE = _vtk.VTK_PARAMETRIC_CURVE$/;"	v	class:CellType
PARAMETRIC_HEX_REGION	pyvista/core/celltype.py	/^    PARAMETRIC_HEX_REGION = _vtk.VTK_PARAMETRIC_HEX_REGION$/;"	v	class:CellType
PARAMETRIC_QUAD_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_QUAD_SURFACE = _vtk.VTK_PARAMETRIC_QUAD_SURFACE$/;"	v	class:CellType
PARAMETRIC_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_SURFACE = _vtk.VTK_PARAMETRIC_SURFACE$/;"	v	class:CellType
PARAMETRIC_TETRA_REGION	pyvista/core/celltype.py	/^    PARAMETRIC_TETRA_REGION = _vtk.VTK_PARAMETRIC_TETRA_REGION$/;"	v	class:CellType
PARAMETRIC_TRI_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_TRI_SURFACE = _vtk.VTK_PARAMETRIC_TRI_SURFACE$/;"	v	class:CellType
PARAVIEW_BACKGROUND	pyvista/plotting/colors.py	/^PARAVIEW_BACKGROUND = Color('paraview').float_rgb  # [82, 87, 110] \/ 255$/;"	v
PBR	pyvista/plotting/opts.py	/^    PBR = (3, 'Physically based rendering')$/;"	v	class:InterpolationType
PENTAGONAL_PRISM	pyvista/core/celltype.py	/^    PENTAGONAL_PRISM = _vtk.VTK_PENTAGONAL_PRISM$/;"	v	class:CellType
PHONG	pyvista/plotting/opts.py	/^    PHONG = (2, 'PHONG')$/;"	v	class:InterpolationType
PICKED_REPRESENTATION_NAMES	pyvista/plotting/picking.py	/^PICKED_REPRESENTATION_NAMES = {$/;"	v
PICKLE_FORMAT	pyvista/__init__.py	/^PICKLE_FORMAT = 'xml'$/;"	v
PIXEL	pyvista/core/celltype.py	/^    PIXEL = _vtk.VTK_PIXEL$/;"	v	class:CellType
PLOT_DIRECTIVE_THEME	pyvista/__init__.py	/^PLOT_DIRECTIVE_THEME = None$/;"	v
PLOT_TYPES	pyvista/plotting/charts.py	/^    PLOT_TYPES = {$/;"	v	class:Chart2D
PLYReader	pyvista/core/utilities/reader.py	/^class PLYReader(BaseReader):$/;"	c
PNGReader	pyvista/core/utilities/reader.py	/^class PNGReader(BaseReader):$/;"	c
PNMReader	pyvista/core/utilities/reader.py	/^class PNMReader(BaseReader):$/;"	c
POINT	pyvista/core/utilities/arrays.py	/^    POINT = _vtk.vtkDataObject.FIELD_ASSOCIATION_POINTS$/;"	v	class:FieldAssociation
POINT	pyvista/plotting/opts.py	/^    POINT = (3, 'Point')$/;"	v	class:PickerType
POINT	pyvista/plotting/opts.py	/^    POINT = (4, 'Point')$/;"	v	class:ElementType
POINTS	pyvista/plotting/opts.py	/^    POINTS = (0, 'Points')$/;"	v	class:RepresentationType
POLYGON	pyvista/core/celltype.py	/^    POLYGON = _vtk.VTK_POLYGON$/;"	v	class:CellType
POLYHEDRON	pyvista/core/celltype.py	/^    POLYHEDRON = _vtk.VTK_POLYHEDRON$/;"	v	class:CellType
POLY_LINE	pyvista/core/celltype.py	/^    POLY_LINE = _vtk.VTK_POLY_LINE$/;"	v	class:CellType
POLY_VERTEX	pyvista/core/celltype.py	/^    POLY_VERTEX = _vtk.VTK_POLY_VERTEX$/;"	v	class:CellType
POOCH_LOGGER	pyvista/examples/downloads.py	/^POOCH_LOGGER = get_logger()$/;"	v
POST_PASS	pyvista/plotting/render_passes.py	/^POST_PASS = [$/;"	v
POpenFOAMReader	pyvista/core/utilities/reader.py	/^class POpenFOAMReader(OpenFOAMReader):$/;"	c
PRESSURE	pyvista/core/utilities/reader.py	/^    PRESSURE = 110$/;"	v	class:Plot3DFunctionEnum
PRESSURE	pyvista/core/utilities/reader.py	/^    PRESSURE = Plot3DFunctionEnum.PRESSURE$/;"	v	class:MultiBlockPlot3DReader
PRESSURE_COEFFICIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_COEFFICIENT = 111$/;"	v	class:Plot3DFunctionEnum
PRESSURE_COEFFICIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_COEFFICIENT = Plot3DFunctionEnum.PRESSURE_COEFFICIENT$/;"	v	class:MultiBlockPlot3DReader
PRESSURE_GRADIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_GRADIENT = 210$/;"	v	class:Plot3DFunctionEnum
PRESSURE_GRADIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_GRADIENT = Plot3DFunctionEnum.PRESSURE_GRADIENT$/;"	v	class:MultiBlockPlot3DReader
PRE_PASS	pyvista/plotting/render_passes.py	/^PRE_PASS = [$/;"	v
PROP	pyvista/plotting/opts.py	/^    PROP = (4, 'Prop')$/;"	v	class:PickerType
PTSReader	pyvista/core/utilities/reader.py	/^class PTSReader(BaseReader):$/;"	c
PVDDataSet	pyvista/core/utilities/reader.py	/^class PVDDataSet:$/;"	c
PVDReader	pyvista/core/utilities/reader.py	/^class PVDReader(BaseReader, TimeReader):$/;"	c
PYRAMID	pyvista/core/celltype.py	/^    PYRAMID = _vtk.VTK_PYRAMID$/;"	v	class:CellType
PYVISTA_OFF_SCREEN	Makefile	/^doctest-modules-local-namespace: export PYVISTA_OFF_SCREEN = True$/;"	m
PYVISTA_OFF_SCREEN	doc/Makefile	/^export PYVISTA_OFF_SCREEN := True$/;"	m
Paint	pyvista/plotting/charts.py	/^        def Paint(self, item, painter):$/;"	m	class:_CustomContextItem.ItemWrapper
ParaViewTheme	pyvista/plotting/themes.py	/^class ParaViewTheme(Theme):$/;"	c
ParametricBohemianDome	pyvista/core/utilities/parametric_objects.py	/^def ParametricBohemianDome(a=None, b=None, c=None, **kwargs):$/;"	f
ParametricBour	pyvista/core/utilities/parametric_objects.py	/^def ParametricBour(**kwargs):$/;"	f
ParametricBoy	pyvista/core/utilities/parametric_objects.py	/^def ParametricBoy(zscale=None, **kwargs):$/;"	f
ParametricCatalanMinimal	pyvista/core/utilities/parametric_objects.py	/^def ParametricCatalanMinimal(**kwargs):$/;"	f
ParametricConicSpiral	pyvista/core/utilities/parametric_objects.py	/^def ParametricConicSpiral(a=None, b=None, c=None, n=None, **kwargs):$/;"	f
ParametricCrossCap	pyvista/core/utilities/parametric_objects.py	/^def ParametricCrossCap(**kwargs):$/;"	f
ParametricDini	pyvista/core/utilities/parametric_objects.py	/^def ParametricDini(a=None, b=None, **kwargs):$/;"	f
ParametricEllipsoid	pyvista/core/utilities/parametric_objects.py	/^def ParametricEllipsoid(xradius=None, yradius=None, zradius=None, **kwargs):$/;"	f
ParametricEnneper	pyvista/core/utilities/parametric_objects.py	/^def ParametricEnneper(**kwargs):$/;"	f
ParametricFigure8Klein	pyvista/core/utilities/parametric_objects.py	/^def ParametricFigure8Klein(radius=None, **kwargs):$/;"	f
ParametricHenneberg	pyvista/core/utilities/parametric_objects.py	/^def ParametricHenneberg(**kwargs):$/;"	f
ParametricKlein	pyvista/core/utilities/parametric_objects.py	/^def ParametricKlein(**kwargs):$/;"	f
ParametricKuen	pyvista/core/utilities/parametric_objects.py	/^def ParametricKuen(deltav0=None, **kwargs):$/;"	f
ParametricMobius	pyvista/core/utilities/parametric_objects.py	/^def ParametricMobius(radius=None, **kwargs):$/;"	f
ParametricPluckerConoid	pyvista/core/utilities/parametric_objects.py	/^def ParametricPluckerConoid(n=None, **kwargs):$/;"	f
ParametricPseudosphere	pyvista/core/utilities/parametric_objects.py	/^def ParametricPseudosphere(**kwargs):$/;"	f
ParametricRandomHills	pyvista/core/utilities/parametric_objects.py	/^def ParametricRandomHills($/;"	f
ParametricRoman	pyvista/core/utilities/parametric_objects.py	/^def ParametricRoman(radius=None, **kwargs):$/;"	f
ParametricSuperEllipsoid	pyvista/core/utilities/parametric_objects.py	/^def ParametricSuperEllipsoid(xradius=None, yradius=None, zradius=None, n1=None, n2=None, **kwargs):$/;"	f
ParametricSuperToroid	pyvista/core/utilities/parametric_objects.py	/^def ParametricSuperToroid($/;"	f
ParametricTorus	pyvista/core/utilities/parametric_objects.py	/^def ParametricTorus(ringradius=None, crosssectionradius=None, **kwargs):$/;"	f
Pen	pyvista/plotting/charts.py	/^class Pen(_vtkWrapper, _vtk.vtkPen):$/;"	c
PentagonalPrism	pyvista/examples/cells.py	/^def PentagonalPrism() -> UnstructuredGrid:$/;"	f
PickCallback	tests/plotting/test_picking.py	/^    class PickCallback:$/;"	c	function:test_single_cell_picking
PickerType	pyvista/plotting/opts.py	/^class PickerType(AnnotatedIntEnum):$/;"	c
PickingHelper	pyvista/plotting/picking.py	/^class PickingHelper(PickingMethods):$/;"	c
PickingInterface	pyvista/plotting/picking.py	/^class PickingInterface:  # numpydoc ignore=PR01$/;"	c
PickingMethods	pyvista/plotting/picking.py	/^class PickingMethods(PickingInterface):  # numpydoc ignore=PR01$/;"	c
PiePlot	pyvista/plotting/charts.py	/^class PiePlot(_vtkWrapper, _vtk.vtkPlotPie, _MultiCompPlot):$/;"	c
Pixel	pyvista/examples/cells.py	/^def Pixel() -> UnstructuredGrid:$/;"	f
Plane	pyvista/core/utilities/geometric_objects.py	/^def Plane($/;"	f
PlatonicSolid	pyvista/core/utilities/geometric_objects.py	/^def PlatonicSolid(kind='tetrahedron', radius=1.0, center=(0.0, 0.0, 0.0)):$/;"	f
Plot3DFunctionEnum	pyvista/core/utilities/reader.py	/^class Plot3DFunctionEnum(enum.IntEnum):$/;"	c
Plot3DMetaReader	pyvista/core/utilities/reader.py	/^class Plot3DMetaReader(BaseReader):$/;"	c
PlotDirective	pyvista/ext/plot_directive.py	/^class PlotDirective(Directive):$/;"	c
PlotError	pyvista/ext/plot_directive.py	/^class PlotError(RuntimeError):$/;"	c
Plotter	pyvista/plotting/plotter.py	/^class Plotter(BasePlotter):$/;"	c
PlotterChanged	tests/plotting/test_charts.py	/^class PlotterChanged:$/;"	c
PointCellDataSelection	pyvista/core/utilities/reader.py	/^class PointCellDataSelection:$/;"	c
PointGaussianMapper	pyvista/plotting/mapper.py	/^class PointGaussianMapper(_vtk.vtkPointGaussianMapper, DataSetMapper):$/;"	c
PointGrid	pyvista/core/pointset.py	/^class PointGrid(_PointSet):$/;"	c
PointPickingElementHandler	pyvista/plotting/picking.py	/^class PointPickingElementHandler:$/;"	c
PointSet	pyvista/core/pointset.py	/^class PointSet(_vtk.vtkPointSet, _PointSet):$/;"	c
PointSetCellOperationError	pyvista/core/errors.py	/^class PointSetCellOperationError(PointSetNotSupported):$/;"	c
PointSetDimensionReductionError	pyvista/core/errors.py	/^class PointSetDimensionReductionError(PointSetNotSupported):$/;"	c
PointSetNotSupported	pyvista/core/errors.py	/^class PointSetNotSupported(TypeError):$/;"	c
PointSetToPolyDataAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class PointSetToPolyDataAlgorithm(_vtk.VTKPythonAlgorithmBase):$/;"	c
PolyData	pyvista/core/pointset.py	/^class PolyData(_vtk.vtkPolyData, _PointSet, PolyDataFilters):$/;"	c
PolyDataFilters	pyvista/core/filters/poly_data.py	/^class PolyDataFilters(DataSetFilters):$/;"	c
PolyLine	pyvista/examples/cells.py	/^def PolyLine() -> UnstructuredGrid:$/;"	f
PolyVertex	pyvista/examples/cells.py	/^def PolyVertex() -> UnstructuredGrid:$/;"	f
Polygon	pyvista/core/utilities/geometric_objects.py	/^def Polygon(center=(0.0, 0.0, 0.0), radius=1.0, normal=(0.0, 0.0, 1.0), n_sides=6, fill=True):$/;"	f
Polygon	pyvista/examples/cells.py	/^def Polygon() -> UnstructuredGrid:$/;"	f
Polyhedron	pyvista/examples/cells.py	/^def Polyhedron() -> UnstructuredGrid:$/;"	f
PreserveTypeAlgorithmBase	pyvista/plotting/utilities/algorithms.py	/^class PreserveTypeAlgorithmBase(_vtk.VTKPythonAlgorithmBase):$/;"	c
ProgressMonitor	pyvista/core/utilities/observers.py	/^class ProgressMonitor:$/;"	c
Prop3D	pyvista/plotting/prop3d.py	/^class Prop3D(_vtk.vtkProp3D):$/;"	c
Property	pyvista/plotting/_property.py	/^class Property(_vtk.vtkProperty):$/;"	c
PyVistaDeprecationWarning	pyvista/core/errors.py	/^class PyVistaDeprecationWarning(Warning):$/;"	c
PyVistaEfficiencyWarning	pyvista/core/errors.py	/^class PyVistaEfficiencyWarning(Warning):$/;"	c
PyVistaFutureWarning	pyvista/core/errors.py	/^class PyVistaFutureWarning(Warning):$/;"	c
PyVistaLocalView	pyvista/trame/views.py	/^class PyVistaLocalView(VtkLocalView, _BasePyVistaView):$/;"	c
PyVistaPickingError	pyvista/plotting/errors.py	/^class PyVistaPickingError(RuntimeError):$/;"	c
PyVistaPipelineError	pyvista/core/errors.py	/^class PyVistaPipelineError(RuntimeError):$/;"	c
PyVistaRemoteLocalView	pyvista/trame/views.py	/^class PyVistaRemoteLocalView(VtkRemoteLocalView, _BasePyVistaView):$/;"	c
PyVistaRemoteView	pyvista/trame/views.py	/^class PyVistaRemoteView(VtkRemoteView, _BasePyVistaView):$/;"	c
Pyramid	pyvista/core/utilities/geometric_objects.py	/^def Pyramid(points=None):$/;"	f
Pyramid	pyvista/examples/cells.py	/^def Pyramid() -> UnstructuredGrid:$/;"	f
Q	examples/99-advanced/sphere_eversion.py	/^Q = 2 \/ 3  # arbitrary < 1$/;"	v
QUAD	pyvista/core/celltype.py	/^    QUAD = _vtk.VTK_QUAD$/;"	v	class:CellType
QUADRATIC_EDGE	pyvista/core/celltype.py	/^    QUADRATIC_EDGE = _vtk.VTK_QUADRATIC_EDGE$/;"	v	class:CellType
QUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    QUADRATIC_HEXAHEDRON = _vtk.VTK_QUADRATIC_HEXAHEDRON$/;"	v	class:CellType
QUADRATIC_LINEAR_QUAD	pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_QUAD = _vtk.VTK_QUADRATIC_LINEAR_QUAD$/;"	v	class:CellType
QUADRATIC_LINEAR_WEDGE	pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_WEDGE = _vtk.VTK_QUADRATIC_LINEAR_WEDGE$/;"	v	class:CellType
QUADRATIC_POLYGON	pyvista/core/celltype.py	/^    QUADRATIC_POLYGON = _vtk.VTK_QUADRATIC_POLYGON$/;"	v	class:CellType
QUADRATIC_PYRAMID	pyvista/core/celltype.py	/^    QUADRATIC_PYRAMID = _vtk.VTK_QUADRATIC_PYRAMID$/;"	v	class:CellType
QUADRATIC_QUAD	pyvista/core/celltype.py	/^    QUADRATIC_QUAD = _vtk.VTK_QUADRATIC_QUAD$/;"	v	class:CellType
QUADRATIC_TETRA	pyvista/core/celltype.py	/^    QUADRATIC_TETRA = _vtk.VTK_QUADRATIC_TETRA$/;"	v	class:CellType
QUADRATIC_TRIANGLE	pyvista/core/celltype.py	/^    QUADRATIC_TRIANGLE = _vtk.VTK_QUADRATIC_TRIANGLE$/;"	v	class:CellType
QUADRATIC_WEDGE	pyvista/core/celltype.py	/^    QUADRATIC_WEDGE = _vtk.VTK_QUADRATIC_WEDGE$/;"	v	class:CellType
QtDeprecationError	pyvista/plotting/__init__.py	/^class QtDeprecationError(Exception):  # numpydoc ignore=PR01$/;"	c
QtInteractor	pyvista/plotting/__init__.py	/^class QtInteractor:  # numpydoc ignore=PR01$/;"	c
Quadrilateral	pyvista/core/utilities/geometric_objects.py	/^def Quadrilateral(points=None):$/;"	f
Quadrilateral	pyvista/examples/cells.py	/^def Quadrilateral() -> UnstructuredGrid:$/;"	f
RADIUS	examples/02-plot/spherical.py	/^RADIUS = 6371.0$/;"	v
RAMP_MAP	pyvista/plotting/lookup_table.py	/^RAMP_MAP = {0: 'linear', 1: 's-curve', 2: 'sqrt'}$/;"	v
RAMP_MAP_INV	pyvista/plotting/lookup_table.py	/^RAMP_MAP_INV = {k: v for v, k in RAMP_MAP.items()}$/;"	v
REGULAR_CELL_LIST	tests/core/test_cells.py	/^REGULAR_CELL_LIST = [[0, 1, 2], [3, 4, 5]]$/;"	v
RENDERED	pyvista/plotting/opts.py	/^    RENDERED = (5, 'Rendered')$/;"	v	class:PickerType
REPEAT	pyvista/plotting/texture.py	/^        REPEAT = (1, 'Repeat')$/;"	v	class:Texture.WrapType
REPR_VOLUME_MAX_CELLS	pyvista/__init__.py	/^REPR_VOLUME_MAX_CELLS = 1e6$/;"	v
RESLICE	pyvista/plotting/opts.py	/^    RESLICE = (6, 'Reslice')$/;"	v	class:PickerType
ROW	pyvista/core/utilities/arrays.py	/^    ROW = _vtk.vtkDataObject.FIELD_ASSOCIATION_ROWS$/;"	v	class:FieldAssociation
Rectangle	pyvista/core/utilities/geometric_objects.py	/^def Rectangle(points=None):$/;"	f
RectangleSelection	pyvista/plotting/picking.py	/^class RectangleSelection:$/;"	c
RectilinearGrid	pyvista/core/grid.py	/^class RectilinearGrid(_vtk.vtkRectilinearGrid, Grid, RectilinearGridFilters):$/;"	c
RectilinearGridFilters	pyvista/core/filters/rectilinear_grid.py	/^class RectilinearGridFilters:$/;"	c
RemoveObservers	pyvista/core/utilities/reader.py	/^    def RemoveObservers(self, *args):$/;"	m	class:BaseVTKReader
RenderPasses	pyvista/plotting/render_passes.py	/^class RenderPasses:$/;"	c
RenderWindowInteractor	pyvista/plotting/render_window_interactor.py	/^class RenderWindowInteractor:$/;"	c
RenderWindowUnavailable	pyvista/plotting/errors.py	/^class RenderWindowUnavailable(RuntimeError):  # numpydoc ignore=PR01$/;"	c
Renderer	pyvista/plotting/renderer.py	/^class Renderer(_vtk.vtkOpenGLRenderer):$/;"	c
Renderers	pyvista/plotting/renderers.py	/^class Renderers:$/;"	c
Report	pyvista/report.py	/^class Report(scooby.Report):$/;"	c
RepresentationType	pyvista/plotting/opts.py	/^class RepresentationType(AnnotatedIntEnum):$/;"	c
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, request, inInfo, outInfo):$/;"	m	class:ActiveScalarsAlgorithm
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, request, inInfo, outInfo):$/;"	m	class:AddIDsAlgorithm
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, request, inInfo, outInfo):$/;"	m	class:CrinkleAlgorithm
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, request, inInfo, outInfo):$/;"	m	class:PointSetToPolyDataAlgorithm
RequestDataObject	pyvista/plotting/utilities/algorithms.py	/^    def RequestDataObject(self, request, inInfo, outInfo):$/;"	m	class:PreserveTypeAlgorithmBase
ResetPyVista	doc/source/conf.py	/^class ResetPyVista:$/;"	c
SCENE	pyvista/plotting/opts.py	/^    SCENE = (7, 'Scene')$/;"	v	class:PickerType
SCENE_LIGHT	pyvista/plotting/lights.py	/^    SCENE_LIGHT = 3$/;"	v	class:LightType
SCENE_LIGHT	pyvista/plotting/lights.py	/^    SCENE_LIGHT = LightType.SCENE_LIGHT$/;"	v	class:Light
SCHEME_NAMES	pyvista/plotting/colors.py	/^SCHEME_NAMES = {$/;"	v
SKIP_PLOTTING	tests/plotting/conftest.py	/^SKIP_PLOTTING = not system_supports_plotting()$/;"	v
SLCReader	pyvista/core/utilities/reader.py	/^class SLCReader(BaseReader):$/;"	c
SOURCE	pyvista/examples/downloads.py	/^    SOURCE = "https:\/\/github.com\/pyvista\/vtk-data\/raw\/master\/Data\/"$/;"	v
SOURCE	pyvista/examples/downloads.py	/^    SOURCE = _path$/;"	v
SOURCEDIR	doc/Makefile	/^SOURCEDIR     = source$/;"	m
SPEED_OF_SOUND	pyvista/core/utilities/reader.py	/^    SPEED_OF_SOUND = 113$/;"	v	class:Plot3DFunctionEnum
SPEED_OF_SOUND	pyvista/core/utilities/reader.py	/^    SPEED_OF_SOUND = Plot3DFunctionEnum.SPEED_OF_SOUND$/;"	v	class:MultiBlockPlot3DReader
SPHERE	pyvista/plotting/axes_actor.py	/^        SPHERE = 1$/;"	v	class:AxesActor.TipType
SPHINXBUILD	doc/Makefile	/^SPHINXBUILD   = python -msphinx$/;"	m
SPHINXOPTS	doc/Makefile	/^SPHINXOPTS    =$/;"	m
SPHINXPROJ	doc/Makefile	/^SPHINXPROJ    = pyvista$/;"	m
STAGNATION_ENERGY	pyvista/core/utilities/reader.py	/^    STAGNATION_ENERGY = 163$/;"	v	class:Plot3DFunctionEnum
STAGNATION_ENERGY	pyvista/core/utilities/reader.py	/^    STAGNATION_ENERGY = Plot3DFunctionEnum.STAGNATION_ENERGY$/;"	v	class:MultiBlockPlot3DReader
STLReader	pyvista/core/utilities/reader.py	/^class STLReader(BaseReader):$/;"	c
STRAIN_RATE	pyvista/core/utilities/reader.py	/^    STRAIN_RATE = 212$/;"	v	class:Plot3DFunctionEnum
STRAIN_RATE	pyvista/core/utilities/reader.py	/^    STRAIN_RATE = Plot3DFunctionEnum.STRAIN_RATE$/;"	v	class:MultiBlockPlot3DReader
STRUCTGRID_CELLS_BOOL	tests/core/test_grid.py	/^STRUCTGRID_CELLS_BOOL = np.ones(729, dtype=bool)  # struct_grid.n_cells == 729$/;"	v
STRUCTGRID_POINTS_BOOL	tests/core/test_grid.py	/^STRUCTGRID_POINTS_BOOL = np.ones(1000, dtype=bool)  # struct_grid.n_points == 1000$/;"	v
SUPPORTED_FORMATS	pyvista/plotting/plotter.py	/^SUPPORTED_FORMATS = [".png", ".jpeg", ".jpg", ".bmp", ".tif", ".tiff"]$/;"	v
SUPPORTS_OPENGL	pyvista/plotting/tools.py	/^SUPPORTS_OPENGL = None$/;"	v
SUPPORTS_PLOTTING	pyvista/plotting/tools.py	/^SUPPORTS_PLOTTING = None$/;"	v
SURFACE	pyvista/plotting/opts.py	/^    SURFACE = (2, 'Surface')$/;"	v	class:RepresentationType
SWIRL	pyvista/core/utilities/reader.py	/^    SWIRL = 184$/;"	v	class:Plot3DFunctionEnum
SWIRL	pyvista/core/utilities/reader.py	/^    SWIRL = Plot3DFunctionEnum.SWIRL$/;"	v	class:MultiBlockPlot3DReader
ScalarBars	pyvista/plotting/scalar_bars.py	/^class ScalarBars:$/;"	c
ScatterPlot2D	pyvista/plotting/charts.py	/^class ScatterPlot2D(_vtk.vtkPlotPoints, _Plot):$/;"	c
Scraper	pyvista/plotting/utilities/sphinx_gallery.py	/^class Scraper:$/;"	c
SegYReader	pyvista/core/utilities/reader.py	/^class SegYReader(BaseReader):$/;"	c
SetFileName	pyvista/core/utilities/reader.py	/^    def SetFileName(self, filename):$/;"	m	class:BaseVTKReader
SetFileName	pyvista/core/utilities/reader.py	/^    def SetFileName(self, filename):$/;"	m	class:_PVDReader
SetVisibilityCallback	examples/03-widgets/checkbox-widget.py	/^class SetVisibilityCallback:$/;"	c
ShaftType	pyvista/plotting/axes_actor.py	/^    class ShaftType(Enum):$/;"	c	class:AxesActor
SmartVolumeMapper	pyvista/plotting/mapper.py	/^class SmartVolumeMapper(_vtk.vtkSmartVolumeMapper, _BaseVolumeMapper):$/;"	c
Sphere	pyvista/core/utilities/geometric_objects.py	/^def Sphere($/;"	f
Spline	pyvista/core/utilities/parametric_objects.py	/^def Spline(points, n_points=None):$/;"	f
StackPlot	pyvista/plotting/charts.py	/^class StackPlot(_vtk.vtkPlotStacked, _MultiCompPlot):$/;"	c
Startpos	examples/03-widgets/checkbox-widget.py	/^Startpos = 12$/;"	v
StructuredGrid	pyvista/core/pointset.py	/^class StructuredGrid(_vtk.vtkStructuredGrid, PointGrid, StructuredGridFilters):$/;"	c
StructuredGridFilters	pyvista/core/filters/structured_grid.py	/^class StructuredGridFilters(DataSetFilters):$/;"	c
Superquadric	pyvista/core/utilities/geometric_objects.py	/^def Superquadric($/;"	f
TEMPERATURE	pyvista/core/utilities/reader.py	/^    TEMPERATURE = 120$/;"	v	class:Plot3DFunctionEnum
TEMPERATURE	pyvista/core/utilities/reader.py	/^    TEMPERATURE = Plot3DFunctionEnum.TEMPERATURE$/;"	v	class:MultiBlockPlot3DReader
TETRA	pyvista/core/celltype.py	/^    TETRA = _vtk.VTK_TETRA$/;"	v	class:CellType
THIS_PATH	pyvista/demos/logo.py	/^THIS_PATH = os.path.dirname(os.path.realpath(__file__))$/;"	v
THIS_PATH	tests/plotting/test_plotting.py	/^THIS_PATH = pathlib.Path(__file__).parent.absolute()$/;"	v
TIFFReader	pyvista/core/utilities/reader.py	/^class TIFFReader(BaseReader):$/;"	c
TRIANGLE	pyvista/core/celltype.py	/^    TRIANGLE = _vtk.VTK_TRIANGLE$/;"	v	class:CellType
TRIANGLE_STRIP	pyvista/core/celltype.py	/^    TRIANGLE_STRIP = _vtk.VTK_TRIANGLE_STRIP$/;"	v	class:CellType
TRIQUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    TRIQUADRATIC_HEXAHEDRON = _vtk.VTK_TRIQUADRATIC_HEXAHEDRON$/;"	v	class:CellType
TRIQUADRATIC_PYRAMID	pyvista/core/celltype.py	/^        TRIQUADRATIC_PYRAMID = _vtk.VTK_TRIQUADRATIC_PYRAMID$/;"	v	class:CellType
Table	pyvista/core/objects.py	/^class Table(_vtk.vtkTable, DataObject):$/;"	c
TecplotReader	pyvista/core/utilities/reader.py	/^class TecplotReader(BaseReader):$/;"	c
Tetrahedron	pyvista/core/utilities/geometric_objects.py	/^def Tetrahedron(radius=1.0, center=(0.0, 0.0, 0.0)):$/;"	f
Tetrahedron	pyvista/examples/cells.py	/^def Tetrahedron() -> UnstructuredGrid:$/;"	f
Text	pyvista/plotting/text.py	/^class Text(_vtk.vtkTextActor):$/;"	c
Text3D	pyvista/core/utilities/geometric_objects.py	/^def Text3D(string, depth=0.5):$/;"	f
TextProperty	pyvista/plotting/text.py	/^class TextProperty(_vtk.vtkTextProperty):$/;"	c
Texture	pyvista/plotting/texture.py	/^class Texture(_vtk.vtkTexture, DataObject):$/;"	c
Theme	pyvista/plotting/themes.py	/^class Theme(_ThemeConfig):$/;"	c
TimeReader	pyvista/core/utilities/reader.py	/^class TimeReader(ABC):$/;"	c
Timer	pyvista/plotting/render_window_interactor.py	/^class Timer:$/;"	c
TipType	pyvista/plotting/axes_actor.py	/^    class TipType(Enum):$/;"	c	class:AxesActor
Tracker	tests/plotting/test_picking.py	/^    class Tracker:$/;"	c	function:test_element_picking
Tracker	tests/plotting/test_picking.py	/^    class Tracker:$/;"	c	function:test_point_picking_window
TrameJupyterServerDownError	pyvista/trame/jupyter.py	/^class TrameJupyterServerDownError(RuntimeError):$/;"	c
TrameServerDownError	pyvista/trame/jupyter.py	/^class TrameServerDownError(RuntimeError):  # numpydoc ignore=PR01$/;"	c
Triangle	pyvista/core/utilities/geometric_objects.py	/^def Triangle(points=None):$/;"	f
Triangle	pyvista/examples/cells.py	/^def Triangle() -> UnstructuredGrid:$/;"	f
TriangleStrip	pyvista/examples/cells.py	/^def TriangleStrip() -> UnstructuredGrid:$/;"	f
Tube	pyvista/core/utilities/geometric_objects.py	/^def Tube(pointa=(-0.5, 0.0, 0.0), pointb=(0.5, 0.0, 0.0), resolution=1, radius=1.0, n_sides=15):$/;"	f
UFO	examples/04-lights/actors.py	/^UFO = pv.Light(position=(0, 0, 10), focal_point=(0, 0, 0), color='white')$/;"	v
UI_TITLE	pyvista/trame/ui/__init__.py	/^UI_TITLE = 'PyVista'$/;"	v
USER_DATA_PATH	pyvista/examples/downloads.py	/^        USER_DATA_PATH = os.environ['PYVISTA_USERDATA_PATH']$/;"	v
USER_DATA_PATH	pyvista/examples/downloads.py	/^    USER_DATA_PATH = str(pooch.os_cache(f'pyvista_{CACHE_VERSION}'))$/;"	v
UniformGrid	pyvista/core/grid.py	/^class UniformGrid(ImageData):  # numpydoc ignore=PR01$/;"	c
UniformGridFilters	pyvista/core/filters/image_data.py	/^UniformGridFilters = ImageDataFilters$/;"	v
UnstructuredGrid	pyvista/core/pointset.py	/^class UnstructuredGrid(_vtk.vtkUnstructuredGrid, PointGrid, UnstructuredGridFilters):$/;"	c
UnstructuredGridFilters	pyvista/core/filters/unstructured_grid.py	/^class UnstructuredGridFilters(DataSetFilters):$/;"	c
UnstructuredGridVolumeRayCastMapper	pyvista/plotting/mapper.py	/^):$/;"	c
Update	pyvista/core/utilities/reader.py	/^    def Update(self):$/;"	m	class:BaseVTKReader
Update	pyvista/core/utilities/reader.py	/^    def Update(self):$/;"	m	class:_GIFReader
Update	pyvista/core/utilities/reader.py	/^    def Update(self):$/;"	m	class:_PVDReader
UpdateInformation	pyvista/core/utilities/reader.py	/^    def UpdateInformation(self):$/;"	m	class:BaseVTKReader
UpdateInformation	pyvista/core/utilities/reader.py	/^    def UpdateInformation(self):$/;"	m	class:_PVDReader
UpdateObservers	pyvista/core/utilities/reader.py	/^    def UpdateObservers(self, event_type):$/;"	m	class:BaseVTKReader
VELOCITY	pyvista/core/utilities/reader.py	/^    VELOCITY = 200$/;"	v	class:Plot3DFunctionEnum
VELOCITY	pyvista/core/utilities/reader.py	/^    VELOCITY = Plot3DFunctionEnum.VELOCITY$/;"	v	class:MultiBlockPlot3DReader
VELOCITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VELOCITY_MAGNITUDE = 153$/;"	v	class:Plot3DFunctionEnum
VELOCITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VELOCITY_MAGNITUDE = Plot3DFunctionEnum.VELOCITY_MAGNITUDE$/;"	v	class:MultiBlockPlot3DReader
VERTEX	pyvista/core/celltype.py	/^    VERTEX = _vtk.VTK_VERTEX$/;"	v	class:CellType
VOLUME	pyvista/plotting/opts.py	/^    VOLUME = (8, 'Volume')$/;"	v	class:PickerType
VORTICITY	pyvista/core/utilities/reader.py	/^    VORTICITY = 201$/;"	v	class:Plot3DFunctionEnum
VORTICITY	pyvista/core/utilities/reader.py	/^    VORTICITY = Plot3DFunctionEnum.VORTICITY$/;"	v	class:MultiBlockPlot3DReader
VORTICITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VORTICITY_MAGNITUDE = 211$/;"	v	class:Plot3DFunctionEnum
VORTICITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VORTICITY_MAGNITUDE = Plot3DFunctionEnum.VORTICITY_MAGNITUDE$/;"	v	class:MultiBlockPlot3DReader
VOXEL	pyvista/core/celltype.py	/^    VOXEL = _vtk.VTK_VOXEL$/;"	v	class:CellType
VTKDataSetReader	pyvista/core/utilities/reader.py	/^class VTKDataSetReader(BaseReader):$/;"	c
VTKPDataSetReader	pyvista/core/utilities/reader.py	/^class VTKPDataSetReader(BaseReader):$/;"	c
VTKVersionError	pyvista/core/errors.py	/^class VTKVersionError(RuntimeError):$/;"	c
VTKVersionInfo	pyvista/report.py	/^def VTKVersionInfo():$/;"	f
Vector	pyvista/core/_typing_core.py	/^Vector = Union[List[float], Tuple[float, float, float], np.ndarray]$/;"	v
VectorArray	pyvista/core/_typing_core.py	/^VectorArray = Union[np.ndarray, Sequence[Vector]]$/;"	v
Vertex	pyvista/examples/cells.py	/^def Vertex() -> UnstructuredGrid:$/;"	f
Viewer	pyvista/trame/ui/vuetify2.py	/^class Viewer(BaseViewer):$/;"	c
Viewer	pyvista/trame/ui/vuetify3.py	/^class Viewer(BaseViewer):$/;"	c
Volume	pyvista/plotting/volume.py	/^class Volume(Prop3D, _vtk.vtkVolume):$/;"	c
VolumeProperty	pyvista/plotting/volume_property.py	/^class VolumeProperty(_vtk.vtkVolumeProperty):$/;"	c
Voxel	pyvista/examples/cells.py	/^def Voxel() -> UnstructuredGrid:$/;"	f
VtkErrorCatcher	pyvista/core/utilities/observers.py	/^class VtkErrorCatcher:$/;"	c
WEDGE	pyvista/core/celltype.py	/^    WEDGE = _vtk.VTK_WEDGE$/;"	v	class:CellType
WIREFRAME	pyvista/plotting/opts.py	/^    WIREFRAME = (1, 'Wireframe')$/;"	v	class:RepresentationType
WORLD	pyvista/plotting/opts.py	/^    WORLD = (9, 'World')$/;"	v	class:PickerType
Wavelet	pyvista/core/utilities/geometric_objects.py	/^def Wavelet($/;"	f
Wedge	pyvista/examples/cells.py	/^def Wedge() -> UnstructuredGrid:$/;"	f
Widget	pyvista/trame/jupyter.py	/^class Widget(HTML):  # numpydoc ignore=PR01$/;"	c
WidgetHelper	pyvista/plotting/widgets.py	/^class WidgetHelper:$/;"	c
WrapType	pyvista/plotting/texture.py	/^    class WrapType(AnnotatedIntEnum):$/;"	c	class:Texture
X	pyvista/core/utilities/geometric_objects.py	/^    X = radius_matrix * np.cos(theta_matrix)$/;"	v
X11	pyvista/plotting/plotter.py	/^        X11 = ctypes.CDLL("libX11.so")$/;"	v
XMLImageDataReader	pyvista/core/utilities/reader.py	/^class XMLImageDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLMultiBlockDataReader	pyvista/core/utilities/reader.py	/^class XMLMultiBlockDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPImageDataReader	pyvista/core/utilities/reader.py	/^class XMLPImageDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPRectilinearGridReader	pyvista/core/utilities/reader.py	/^class XMLPRectilinearGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPUnstructuredGridReader	pyvista/core/utilities/reader.py	/^class XMLPUnstructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPolyDataReader	pyvista/core/utilities/reader.py	/^class XMLPolyDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLRectilinearGridReader	pyvista/core/utilities/reader.py	/^class XMLRectilinearGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLStructuredGridReader	pyvista/core/utilities/reader.py	/^class XMLStructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLUnstructuredGridReader	pyvista/core/utilities/reader.py	/^class XMLUnstructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XdmfReader	pyvista/core/utilities/reader.py	/^class XdmfReader(BaseReader, PointCellDataSelection):$/;"	c
Y	pyvista/core/utilities/geometric_objects.py	/^    Y = radius_matrix * np.sin(theta_matrix)$/;"	v
_	examples/00-load/create-unstructured-surface.py	/^_ = grid.plot(show_edges=True)$/;"	v
_	examples/01-filter/boolean-operations.py	/^_ = pl.add_mesh(result, color='lightblue')$/;"	v
_	examples/01-filter/boolean-operations.py	/^_ = pl.add_mesh(sphere_a, color='r', style='wireframe', line_width=3)$/;"	v
_	examples/01-filter/boolean-operations.py	/^_ = pl.add_mesh(sphere_b, color='b', style='wireframe', line_width=3)$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_legend()$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_mesh(mesh, style='wireframe', color='lightgray')$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_mesh(peak_mesh, color='red', label='Steepest Peak')$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_mesh(valley_mesh, color='blue', label='Closest Valley')$/;"	v
_	examples/02-plot/chart_overlays.py	/^_ = ax.set_ylabel('Height (m)')$/;"	v
_	examples/99-advanced/planets.py	/^_ = pl.add_actor(cubemap.to_skybox())$/;"	v
_	examples/99-advanced/ray-trace-moeller.py	/^    _ = pl.add_arrows($/;"	v
_AxesConfig	pyvista/plotting/themes.py	/^class _AxesConfig(_ThemeConfig):$/;"	c
_BaseMapper	pyvista/plotting/mapper.py	/^class _BaseMapper(_vtk.vtkAbstractMapper):$/;"	c
_BasePyVistaView	pyvista/trame/views.py	/^class _BasePyVistaView:$/;"	c
_BaseVolumeMapper	pyvista/plotting/mapper.py	/^class _BaseVolumeMapper(_BaseMapper):$/;"	c
_CLASSES	pyvista/plotting/render_window_interactor.py	/^_CLASSES = {}$/;"	v
_Chart	pyvista/plotting/charts.py	/^class _Chart(DocSubs):$/;"	c
_ChartBackground	pyvista/plotting/charts.py	/^class _ChartBackground(_CustomContextItem):$/;"	c
_ColorbarConfig	pyvista/plotting/themes.py	/^class _ColorbarConfig(_ThemeConfig):$/;"	c
_CustomContextItem	pyvista/plotting/charts.py	/^class _CustomContextItem(_vtk.vtkPythonItem):$/;"	c
_DOC_STORE	pyvista/plotting/charts.py	/^    _DOC_STORE = {}  # type: ignore$/;"	v	class:DocSubs
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:AreaPlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:BarPlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:BoxPlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:Chart2D
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:ChartBox
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:ChartMPL
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:ChartPie
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:LinePlot2D
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:PiePlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:ScatterPlot2D
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {$/;"	v	class:StackPlot
_DOC_TAG	pyvista/plotting/charts.py	/^    _DOC_TAG = ":DOC_SUBS:"$/;"	v	class:DocSubs
_DepthPeelingConfig	pyvista/plotting/themes.py	/^class _DepthPeelingConfig(_ThemeConfig):$/;"	c
_FILE_CACHE	pyvista/examples/downloads.py	/^    _FILE_CACHE = False$/;"	v
_FILE_CACHE	pyvista/examples/downloads.py	/^    _FILE_CACHE = True$/;"	v
_Font	pyvista/plotting/themes.py	/^class _Font(_ThemeConfig):$/;"	c
_GIFReader	pyvista/core/utilities/reader.py	/^class _GIFReader(BaseVTKReader):$/;"	c
_LightingConfig	pyvista/plotting/themes.py	/^class _LightingConfig(_ThemeConfig):$/;"	c
_MODULES	pyvista/errors.py	/^_MODULES = [$/;"	v
_MODULES	pyvista/utilities/__init__.py	/^_MODULES = [$/;"	v
_MultiCompPlot	pyvista/plotting/charts.py	/^class _MultiCompPlot(_Plot):$/;"	c
_NATIVE_THEMES	pyvista/plotting/themes.py	/^class _NATIVE_THEMES(Enum):$/;"	c
_PLOT_CLASSES	pyvista/plotting/charts.py	/^    _PLOT_CLASSES = {plot_class: plot_type for (plot_type, plot_class) in PLOT_TYPES.items()}$/;"	v	class:Chart2D
_PVDReader	pyvista/core/utilities/reader.py	/^class _PVDReader(BaseVTKReader):$/;"	c
_Plot	pyvista/plotting/charts.py	/^class _Plot(DocSubs):$/;"	c
_PointSet	pyvista/core/pointset.py	/^class _PointSet(DataSet):$/;"	c
_SENTINEL	pyvista/core/datasetattributes.py	/^_SENTINEL = pyvista_ndarray([])$/;"	v
_SetActiveTime	pyvista/core/utilities/reader.py	/^    def _SetActiveTime(self, time_value):$/;"	m	class:_PVDReader
_SilhouetteConfig	pyvista/plotting/themes.py	/^class _SilhouetteConfig(_ThemeConfig):$/;"	c
_SliderConfig	pyvista/plotting/themes.py	/^class _SliderConfig(_ThemeConfig):$/;"	c
_SliderStyleConfig	pyvista/plotting/themes.py	/^class _SliderStyleConfig(_ThemeConfig):$/;"	c
_TestingTheme	pyvista/plotting/themes.py	/^class _TestingTheme(Theme):$/;"	c
_ThemeConfig	pyvista/plotting/themes.py	/^class _ThemeConfig:$/;"	c
_TrameConfig	pyvista/plotting/themes.py	/^class _TrameConfig(_ThemeConfig):$/;"	c
_TypeMultiBlockLeaf	pyvista/core/composite.py	/^_TypeMultiBlockLeaf = Union['MultiBlock', DataSet]$/;"	v
_WRITERS	pyvista/core/composite.py	/^    _WRITERS = dict.fromkeys(['.vtm', '.vtmb'], _vtk.vtkXMLMultiBlockDataWriter)$/;"	v	class:MultiBlock
_WRITERS	pyvista/core/grid.py	/^    _WRITERS = {'.vtk': _vtk.vtkDataSetWriter, '.vti': _vtk.vtkXMLImageDataWriter}$/;"	v	class:ImageData
_WRITERS	pyvista/core/grid.py	/^    _WRITERS = {'.vtk': _vtk.vtkRectilinearGridWriter, '.vtr': _vtk.vtkXMLRectilinearGridWriter}$/;"	v	class:RectilinearGrid
_WRITERS	pyvista/core/pointset.py	/^    _WRITERS = {".xyz": _vtk.vtkSimplePointsWriter}$/;"	v	class:_PointSet
_WRITERS	pyvista/core/pointset.py	/^    _WRITERS = {$/;"	v	class:PolyData
_WRITERS	pyvista/core/pointset.py	/^    _WRITERS = {'.vtk': _vtk.vtkStructuredGridWriter, '.vts': _vtk.vtkXMLStructuredGridWriter}$/;"	v	class:StructuredGrid
_WRITERS	pyvista/core/pointset.py	/^    _WRITERS = {'.vtu': _vtk.vtkXMLUnstructuredGridWriter, '.vtk': _vtk.vtkUnstructuredGridWriter}$/;"	v	class:ExplicitStructuredGrid
_WRITERS	pyvista/core/pointset.py	/^    _WRITERS = {'.vtu': _vtk.vtkXMLUnstructuredGridWriter, '.vtk': _vtk.vtkUnstructuredGridWriter}$/;"	v	class:UnstructuredGrid
__add__	pyvista/core/filters/data_set.py	/^    def __add__(self, dataset):$/;"	m	class:DataSetFilters	file:
__add__	pyvista/core/filters/poly_data.py	/^    def __add__(self, dataset):$/;"	m	class:PolyDataFilters	file:
__all__	pyvista/core/filters/__init__.py	/^__all__ = [$/;"	v
__all__	pyvista/trame/__init__.py	/^__all__ = [$/;"	v
__array_finalize__	pyvista/core/pyvista_ndarray.py	/^    def __array_finalize__(self, obj):$/;"	m	class:pyvista_ndarray	file:
__array_finalize__	pyvista/plotting/lookup_table.py	/^    def __array_finalize__(self, obj):$/;"	m	class:lookup_table_ndarray	file:
__array_wrap__	pyvista/core/pyvista_ndarray.py	/^    def __array_wrap__(self, out_arr, context=None):$/;"	m	class:pyvista_ndarray	file:
__array_wrap__	pyvista/plotting/lookup_table.py	/^    def __array_wrap__(self, out_arr, context=None):$/;"	m	class:lookup_table_ndarray	file:
__bool__	pyvista/core/datasetattributes.py	/^    def __bool__(self) -> bool:$/;"	m	class:DataSetAttributes	file:
__call__	doc/source/conf.py	/^    def __call__(self, gallery_conf, fname):$/;"	m	class:ResetPyVista	file:
__call__	examples/03-widgets/checkbox-widget.py	/^    def __call__(self, state):$/;"	m	class:SetVisibilityCallback	file:
__call__	examples/03-widgets/multi-slider-widget.py	/^    def __call__(self, param, value):$/;"	m	class:MyCustomRoutine	file:
__call__	pyvista/core/utilities/misc.py	/^    def __call__(self, func):$/;"	m	class:conditional_decorator	file:
__call__	pyvista/core/utilities/observers.py	/^    def __call__(self, obj, event, *args):$/;"	m	class:ProgressMonitor	file:
__call__	pyvista/core/utilities/observers.py	/^    def __call__(self, obj, event, message):$/;"	m	class:Observer	file:
__call__	pyvista/plotting/charts.py	/^    def __call__(cls, *args, _wrap=None, **kwargs):$/;"	m	class:_vtkWrapperMeta	file:
__call__	pyvista/plotting/lookup_table.py	/^    def __call__(self, value):$/;"	m	class:LookupTable	file:
__call__	pyvista/plotting/picking.py	/^    def __call__(self, picked_point, picker):$/;"	m	class:PointPickingElementHandler	file:
__call__	pyvista/plotting/utilities/sphinx_gallery.py	/^    def __call__(self, block, block_vars, gallery_conf):$/;"	m	class:DynamicScraper	file:
__call__	pyvista/plotting/utilities/sphinx_gallery.py	/^    def __call__(self, block, block_vars, gallery_conf):$/;"	m	class:Scraper	file:
__call__	tests/core/test_dataset_filters.py	/^    def __call__(self, algorithm, *args, **kwargs):$/;"	m	class:GetOutput	file:
__call__	tests/plotting/test_charts.py	/^    def __call__(self):$/;"	m	class:PlotterChanged	file:
__call__	tests/plotting/test_picking.py	/^        def __call__(self, *args, **kwargs):$/;"	m	class:test_single_cell_picking.PickCallback	file:
__call__	tests/plotting/test_picking.py	/^        def __call__(self, picked):$/;"	m	class:test_element_picking.Tracker	file:
__call__	tests/plotting/test_picking.py	/^        def __call__(self, picked_point):$/;"	m	class:test_point_picking_window.Tracker	file:
__call__	tests/plotting/test_widgets.py	/^        def __call__(self, *args, **kwargs):$/;"	m	class:test_measurement_widget.DistanceCallback	file:
__contains__	pyvista/core/datasetattributes.py	/^    def __contains__(self, name: str) -> bool:$/;"	m	class:DataSetAttributes	file:
__contains__	pyvista/plotting/scalar_bars.py	/^    def __contains__(self, key):$/;"	m	class:ScalarBars	file:
__del__	pyvista/core/pointset.py	/^    def __del__(self):$/;"	m	class:PolyData	file:
__del__	pyvista/plotting/axes.py	/^    def __del__(self):$/;"	m	class:Axes	file:
__del__	pyvista/plotting/camera.py	/^    def __del__(self):$/;"	m	class:Camera	file:
__del__	pyvista/plotting/charts.py	/^    def __del__(self):$/;"	m	class:Charts	file:
__del__	pyvista/plotting/lights.py	/^    def __del__(self):$/;"	m	class:Light	file:
__del__	pyvista/plotting/mapper.py	/^    def __del__(self):$/;"	m	class:_BaseVolumeMapper	file:
__del__	pyvista/plotting/plotter.py	/^    def __del__(self):$/;"	m	class:BasePlotter	file:
__del__	pyvista/plotting/renderer.py	/^    def __del__(self):$/;"	m	class:Renderer	file:
__del__	pyvista/plotting/renderers.py	/^    def __del__(self):$/;"	m	class:Renderers	file:
__delitem__	pyvista/core/composite.py	/^    def __delitem__(self, index: Union[int, str, slice]) -> None:$/;"	m	class:MultiBlock	file:
__delitem__	pyvista/core/datasetattributes.py	/^    def __delitem__(self, key: str):$/;"	m	class:DataSetAttributes	file:
__delitem__	pyvista/core/objects.py	/^    def __delitem__(self, name):$/;"	m	class:Table	file:
__enter__	pyvista/core/utilities/observers.py	/^    def __enter__(self):$/;"	m	class:ProgressMonitor	file:
__enter__	pyvista/core/utilities/observers.py	/^    def __enter__(self):$/;"	m	class:VtkErrorCatcher	file:
__eq__	pyvista/core/composite.py	/^    def __eq__(self, other):$/;"	m	class:MultiBlock	file:
__eq__	pyvista/core/dataobject.py	/^    def __eq__(self, other):$/;"	m	class:DataObject	file:
__eq__	pyvista/core/dataset.py	/^    def __eq__(self, other):$/;"	m	class:ActiveArrayInfo	file:
__eq__	pyvista/core/datasetattributes.py	/^    def __eq__(self, other: Any) -> bool:$/;"	m	class:DataSetAttributes	file:
__eq__	pyvista/plotting/camera.py	/^    def __eq__(self, other):$/;"	m	class:Camera	file:
__eq__	pyvista/plotting/colors.py	/^    def __eq__(self, other):$/;"	m	class:Color	file:
__eq__	pyvista/plotting/lights.py	/^    def __eq__(self, other):$/;"	m	class:Light	file:
__eq__	pyvista/plotting/renderer.py	/^    def __eq__(self, other):$/;"	m	class:CameraPosition	file:
__eq__	pyvista/plotting/themes.py	/^    def __eq__(self, other):$/;"	m	class:_ThemeConfig	file:
__exit__	pyvista/core/utilities/observers.py	/^    def __exit__(self, type, val, tb):$/;"	m	class:VtkErrorCatcher	file:
__exit__	pyvista/core/utilities/observers.py	/^    def __exit__(self, type, value, traceback):$/;"	m	class:ProgressMonitor	file:
__getattr__	pyvista/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	pyvista/core/dataobject.py	/^    def __getattr__(self, item: str) -> Any:$/;"	m	class:DataObject	file:
__getattr__	pyvista/core/dataset.py	/^    def __getattr__(self, item) -> Any:$/;"	m	class:DataSet	file:
__getattr__	pyvista/core/dataset.py	/^    def __getattr__(self, item):$/;"	m	class:ActiveArrayInfo	file:
__getattr__	pyvista/core/pyvista_ndarray.py	/^    __getattr__ = _vtk.VTKArray.__getattr__$/;"	v	class:pyvista_ndarray
__getattr__	pyvista/errors.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	pyvista/plotting/lookup_table.py	/^    __getattr__ = _vtk.VTKArray.__getattr__$/;"	v	class:lookup_table_ndarray
__getattr__	pyvista/plotting/plotting/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	pyvista/utilities/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattribute__	pyvista/plotting/charts.py	/^    def __getattribute__(self, item):$/;"	m	class:_vtkWrapper	file:
__getitem__	pyvista/core/composite.py	/^    def __getitem__($/;"	m	class:MultiBlock	file:
__getitem__	pyvista/core/composite.py	/^    def __getitem__(self, index):$/;"	m	class:MultiBlock	file:
__getitem__	pyvista/core/composite.py	/^    def __getitem__(self, index: slice) -> 'MultiBlock':  # noqa: D105$/;"	m	class:MultiBlock	file:
__getitem__	pyvista/core/dataset.py	/^    def __getitem__(self, index: Union[Iterable, str]) -> np.ndarray:$/;"	m	class:DataSet	file:
__getitem__	pyvista/core/dataset.py	/^    def __getitem__(self, item):$/;"	m	class:ActiveArrayInfo	file:
__getitem__	pyvista/core/datasetattributes.py	/^    def __getitem__(self, key: str) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes	file:
__getitem__	pyvista/core/objects.py	/^    def __getitem__(self, index):$/;"	m	class:Table	file:
__getitem__	pyvista/core/pointset.py	/^    def __getitem__(self, key):$/;"	m	class:StructuredGrid	file:
__getitem__	pyvista/plotting/charts.py	/^    def __getitem__(self, index) -> Chart:$/;"	m	class:Charts	file:
__getitem__	pyvista/plotting/colors.py	/^    def __getitem__(self, item):$/;"	m	class:Color	file:
__getitem__	pyvista/plotting/composite_mapper.py	/^    def __getitem__(self, index):$/;"	m	class:CompositeAttributes	file:
__getitem__	pyvista/plotting/renderer.py	/^    def __getitem__(self, index):$/;"	m	class:CameraPosition	file:
__getitem__	pyvista/plotting/renderers.py	/^    def __getitem__(self, index):$/;"	m	class:Renderers	file:
__getitem__	pyvista/plotting/scalar_bars.py	/^    def __getitem__(self, index):$/;"	m	class:ScalarBars	file:
__getitem__	pyvista/plotting/themes.py	/^    def __getitem__(self, key):$/;"	m	class:_ThemeConfig	file:
__getstate__	pyvista/core/dataobject.py	/^    def __getstate__(self):$/;"	m	class:DataObject	file:
__getstate__	pyvista/core/dataset.py	/^    def __getstate__(self):$/;"	m	class:ActiveArrayInfo	file:
__hash__	pyvista/plotting/colors.py	/^    def __hash__(self):  # pragma: no cover$/;"	m	class:Color	file:
__iadd__	pyvista/core/filters/data_set.py	/^    def __iadd__(self, dataset):$/;"	m	class:DataSetFilters	file:
__iadd__	pyvista/core/filters/poly_data.py	/^    def __iadd__(self, dataset):$/;"	m	class:PolyDataFilters	file:
__init__	doc/source/make_external_gallery.py	/^    def __init__(self, title, description, link, image):$/;"	m	class:Example
__init__	examples/03-widgets/checkbox-widget.py	/^    def __init__(self, actor):$/;"	m	class:SetVisibilityCallback
__init__	examples/03-widgets/multi-slider-widget.py	/^    def __init__(self, mesh):$/;"	m	class:MyCustomRoutine
__init__	pyvista/core/_vtk_core.py	/^        def __init__(self):  # pragma: no cover$/;"	m	class:vtkPythonItem
__init__	pyvista/core/cell.py	/^    def __init__(self, cells=None, n_cells=None, deep=False):$/;"	m	class:CellArray
__init__	pyvista/core/cell.py	/^    def __init__(self, vtk_cell=None, cell_type=None, deep=False):$/;"	m	class:Cell
__init__	pyvista/core/composite.py	/^    def __init__(self, *args, **kwargs) -> None:$/;"	m	class:MultiBlock
__init__	pyvista/core/dataobject.py	/^    def __init__(self, *args, **kwargs) -> None:$/;"	m	class:DataObject
__init__	pyvista/core/dataset.py	/^    def __init__(self, *args, **kwargs) -> None:$/;"	m	class:DataSet
__init__	pyvista/core/dataset.py	/^    def __init__(self, association, name):$/;"	m	class:ActiveArrayInfo
__init__	pyvista/core/datasetattributes.py	/^    def __init__($/;"	m	class:DataSetAttributes
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetCellOperationError
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetDimensionReductionError
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetNotSupported
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PyVistaPipelineError
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:VTKVersionError
__init__	pyvista/core/errors.py	/^    def __init__(self, message="Multiple data available."):$/;"	m	class:AmbiguousDataError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='Mesh must consist of only triangles'):$/;"	m	class:NotAllTrianglesError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='No data available.'):$/;"	m	class:MissingDataError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='This feature has been deprecated'):$/;"	m	class:DeprecationError
__init__	pyvista/core/grid.py	/^    def __init__($/;"	m	class:ImageData
__init__	pyvista/core/grid.py	/^    def __init__($/;"	m	class:RectilinearGrid
__init__	pyvista/core/grid.py	/^    def __init__($/;"	m	class:UniformGrid
__init__	pyvista/core/grid.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Grid
__init__	pyvista/core/objects.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Table
__init__	pyvista/core/pointset.py	/^    def __init__($/;"	m	class:PolyData
__init__	pyvista/core/pointset.py	/^    def __init__(self, *args, **kwargs) -> None:$/;"	m	class:PointGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, *args, deep=False, **kwargs) -> None:$/;"	m	class:UnstructuredGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, *args, deep=False, **kwargs):$/;"	m	class:ExplicitStructuredGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, uinput=None, y=None, z=None, *args, deep=False, **kwargs) -> None:$/;"	m	class:StructuredGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, var_inp=None, deep=False, force_float=True):$/;"	m	class:PointSet
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:ConeSource
__init__	pyvista/core/utilities/misc.py	/^    def __init__(self, dec, condition):$/;"	m	class:conditional_decorator
__init__	pyvista/core/utilities/observers.py	/^    def __init__(self, algorithm, message="", scaling=None):$/;"	m	class:ProgressMonitor
__init__	pyvista/core/utilities/observers.py	/^    def __init__(self, event_type='ErrorEvent', log=True, store_history=False):$/;"	m	class:Observer
__init__	pyvista/core/utilities/observers.py	/^    def __init__(self, raise_errors=False, send_to_logging=True):$/;"	m	class:VtkErrorCatcher
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self):$/;"	m	class:BaseVTKReader
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self):$/;"	m	class:_GIFReader
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self):$/;"	m	class:_PVDReader
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self, path):$/;"	m	class:BaseReader
__init__	pyvista/ext/plot_directive.py	/^    def __init__(self, dirname, basename):$/;"	m	class:ImageFile
__init__	pyvista/plotting/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:BackgroundPlotter
__init__	pyvista/plotting/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:QtInteractor
__init__	pyvista/plotting/__init__.py	/^    def __init__(self, feature_name):$/;"	m	class:QtDeprecationError
__init__	pyvista/plotting/_property.py	/^    def __init__($/;"	m	class:Property
__init__	pyvista/plotting/actor.py	/^    def __init__(self, mapper=None, prop=None, name=None):$/;"	m	class:Actor
__init__	pyvista/plotting/actor_properties.py	/^    def __init__(self, properties: _vtk.vtkProperty) -> None:$/;"	m	class:ActorProperties
__init__	pyvista/plotting/affine_widget.py	/^    def __init__($/;"	m	class:AffineWidget3D
__init__	pyvista/plotting/axes.py	/^    def __init__($/;"	m	class:Axes
__init__	pyvista/plotting/axes_actor.py	/^    def __init__(self):$/;"	m	class:AxesActor
__init__	pyvista/plotting/background_renderer.py	/^    def __init__(self, parent, image_path, scale=1, view_port=None):$/;"	m	class:BackgroundRenderer
__init__	pyvista/plotting/camera.py	/^    def __init__(self, renderer=None):$/;"	m	class:Camera
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:BarPlot
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:Chart2D
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartBox
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartMPL
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartPie
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:LinePlot2D
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ScatterPlot2D
__init__	pyvista/plotting/charts.py	/^    def __init__(cls, clsname, bases, attrs):$/;"	m	class:_vtkWrapperMeta
__init__	pyvista/plotting/charts.py	/^    def __init__(self):$/;"	m	class:_CustomContextItem
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart):$/;"	m	class:_ChartBackground
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart):$/;"	m	class:_MultiCompPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart):$/;"	m	class:_Plot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, data, colors=None, labels=None):$/;"	m	class:BoxPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, data, colors=None, labels=None):$/;"	m	class:PiePlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, x, y1, y2=None, color="b", label=""):$/;"	m	class:AreaPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, x, ys, colors=None, labels=None):$/;"	m	class:StackPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, color="k", texture=None):$/;"	m	class:Brush
__init__	pyvista/plotting/charts.py	/^    def __init__(self, color="k", width=1, style="-"):$/;"	m	class:Pen
__init__	pyvista/plotting/charts.py	/^    def __init__(self, label="", range=None, grid=True):$/;"	m	class:Axis
__init__	pyvista/plotting/charts.py	/^    def __init__(self, renderer):$/;"	m	class:Charts
__init__	pyvista/plotting/charts.py	/^    def __init__(self, size=(1, 1), loc=(0, 0)):$/;"	m	class:_Chart
__init__	pyvista/plotting/colors.py	/^    def __init__($/;"	m	class:Color
__init__	pyvista/plotting/composite_mapper.py	/^    def __init__($/;"	m	class:CompositePolyDataMapper
__init__	pyvista/plotting/composite_mapper.py	/^    def __init__(self, block, attr):$/;"	m	class:BlockAttributes
__init__	pyvista/plotting/composite_mapper.py	/^    def __init__(self, mapper, dataset):$/;"	m	class:CompositeAttributes
__init__	pyvista/plotting/cube_axes_actor.py	/^    def __init__($/;"	m	class:CubeAxesActor
__init__	pyvista/plotting/errors.py	/^    def __init__(self, message="Render window is not available."):$/;"	m	class:RenderWindowUnavailable
__init__	pyvista/plotting/errors.py	/^    def __init__(self, message=CAMERA_ERROR_MESSAGE):$/;"	m	class:InvalidCameraError
__init__	pyvista/plotting/lights.py	/^    def __init__($/;"	m	class:Light
__init__	pyvista/plotting/lookup_table.py	/^    def __init__($/;"	m	class:LookupTable
__init__	pyvista/plotting/mapper.py	/^    def __init__($/;"	m	class:DataSetMapper
__init__	pyvista/plotting/mapper.py	/^    def __init__(self, theme=None):$/;"	m	class:_BaseVolumeMapper
__init__	pyvista/plotting/mapper.py	/^    def __init__(self, theme=None, **kwargs):$/;"	m	class:_BaseMapper
__init__	pyvista/plotting/mapper.py	/^    def __init__(self, theme=None, emissive=None, scale_factor=1.0) -> None:$/;"	m	class:PointGaussianMapper
__init__	pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingHelper
__init__	pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingInterface
__init__	pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingMethods
__init__	pyvista/plotting/picking.py	/^    def __init__(self, frustum, viewport):$/;"	m	class:RectangleSelection
__init__	pyvista/plotting/picking.py	/^    def __init__(self, mode: ElementType = ElementType.CELL, callback=None):$/;"	m	class:PointPickingElementHandler
__init__	pyvista/plotting/plotter.py	/^    def __init__($/;"	m	class:BasePlotter
__init__	pyvista/plotting/plotter.py	/^    def __init__($/;"	m	class:Plotter
__init__	pyvista/plotting/prop3d.py	/^    def __init__(self):$/;"	m	class:Prop3D
__init__	pyvista/plotting/render_passes.py	/^    def __init__(self, renderer):$/;"	m	class:RenderPasses
__init__	pyvista/plotting/render_window_interactor.py	/^            def __init__(self, parent):$/;"	m	class:_style_factory._make_class.CustomStyle
__init__	pyvista/plotting/render_window_interactor.py	/^    def __init__(self, max_steps, callback):$/;"	m	class:Timer
__init__	pyvista/plotting/render_window_interactor.py	/^    def __init__(self, plotter, desired_update_rate=30, light_follow_camera=True, interactor=None):$/;"	m	class:RenderWindowInteractor
__init__	pyvista/plotting/renderer.py	/^    def __init__($/;"	m	class:Renderer
__init__	pyvista/plotting/renderer.py	/^    def __init__(self, position, focal_point, viewup):$/;"	m	class:CameraPosition
__init__	pyvista/plotting/renderers.py	/^    def __init__($/;"	m	class:Renderers
__init__	pyvista/plotting/scalar_bars.py	/^    def __init__(self, plotter):$/;"	m	class:ScalarBars
__init__	pyvista/plotting/text.py	/^    def __init__($/;"	m	class:TextProperty
__init__	pyvista/plotting/text.py	/^    def __init__(self, position, text, prop=None, linear_font_scale_factor=None):$/;"	m	class:CornerAnnotation
__init__	pyvista/plotting/text.py	/^    def __init__(self, text=None, position=None, prop=None):$/;"	m	class:Text
__init__	pyvista/plotting/texture.py	/^    def __init__(self, uinput=None, **kwargs):$/;"	m	class:Texture
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DarkTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DefaultTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DocumentProTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DocumentTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:ParaViewTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:Theme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_AxesConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_ColorbarConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_DepthPeelingConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_Font
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_LightingConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SilhouetteConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SliderConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SliderStyleConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_TestingTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_TrameConfig
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self):$/;"	m	class:CrinkleAlgorithm
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self):$/;"	m	class:PointSetToPolyDataAlgorithm
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, nInputPorts=1, nOutputPorts=1):$/;"	m	class:PreserveTypeAlgorithmBase
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, name: str, preference: str = 'point'):$/;"	m	class:ActiveScalarsAlgorithm
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, point_ids=True, cell_ids=True):$/;"	m	class:AddIDsAlgorithm
__init__	pyvista/plotting/volume.py	/^    def __init__(self):$/;"	m	class:Volume
__init__	pyvista/plotting/volume_property.py	/^    def __init__($/;"	m	class:VolumeProperty
__init__	pyvista/plotting/widgets.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:WidgetHelper
__init__	pyvista/report.py	/^    def __init__(self):$/;"	m	class:GPUInfo
__init__	pyvista/report.py	/^    def __init__(self, additional=None, ncol=3, text_width=80, sort=False, gpu=True):$/;"	m	class:Report
__init__	pyvista/trame/jupyter.py	/^    def __init__(self):$/;"	m	class:TrameJupyterServerDownError
__init__	pyvista/trame/jupyter.py	/^    def __init__(self, server_name):$/;"	m	class:TrameServerDownError
__init__	pyvista/trame/jupyter.py	/^    def __init__(self, viewer, src, width, height, **kwargs):$/;"	m	class:Widget
__init__	pyvista/trame/ui/base_viewer.py	/^    def __init__(self, plotter, server=None, suppress_rendering=False):$/;"	m	class:BaseViewer
__init__	pyvista/trame/ui/vuetify2.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Viewer
__init__	pyvista/trame/ui/vuetify3.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Viewer
__init__	pyvista/trame/views.py	/^    def __init__($/;"	m	class:PyVistaRemoteLocalView
__init__	pyvista/trame/views.py	/^    def __init__($/;"	m	class:PyVistaRemoteView
__init__	pyvista/trame/views.py	/^    def __init__(self, plotter):$/;"	m	class:_BasePyVistaView
__init__	pyvista/trame/views.py	/^    def __init__(self, plotter, namespace=None, **kwargs):$/;"	m	class:PyVistaLocalView
__init__	tests/core/test_dataset_filters.py	/^    def __init__(self):$/;"	m	class:GetOutput
__init__	tests/core/test_dataset_filters.py	/^    def __init__(self, alg: _vtk_core.vtkGlyph3D):$/;"	m	class:InterrogateVTKGlyph3D
__init__	tests/plotting/conftest.py	/^        def __init__(self) -> None:$/;"	m	class:check_gc.GcHandler
__init__	tests/plotting/test_charts.py	/^    def __init__(self, plotter):$/;"	m	class:PlotterChanged
__init__	tests/plotting/test_picking.py	/^        def __init__(self):$/;"	m	class:test_element_picking.Tracker
__init__	tests/plotting/test_picking.py	/^        def __init__(self):$/;"	m	class:test_point_picking_window.Tracker
__init__	tests/plotting/test_picking.py	/^        def __init__(self):$/;"	m	class:test_single_cell_picking.PickCallback
__init__	tests/plotting/test_theme.py	/^        def __init__(self):$/;"	m	class:test_user_theme.MyTheme
__init__	tests/plotting/test_widgets.py	/^        def __init__(self):$/;"	m	class:test_measurement_widget.DistanceCallback
__init_subclass__	pyvista/plotting/charts.py	/^    def __init_subclass__(cls, **kwargs):$/;"	m	class:DocSubs	file:
__iter__	pyvista/core/composite.py	/^    def __iter__(self) -> 'MultiBlock':$/;"	m	class:MultiBlock	file:
__iter__	pyvista/core/dataset.py	/^    def __iter__(self):$/;"	m	class:ActiveArrayInfo	file:
__iter__	pyvista/core/datasetattributes.py	/^    def __iter__(self) -> Iterator[str]:$/;"	m	class:DataSetAttributes	file:
__iter__	pyvista/core/objects.py	/^    def __iter__(self):$/;"	m	class:Table	file:
__iter__	pyvista/plotting/charts.py	/^    def __iter__(self):$/;"	m	class:Charts	file:
__iter__	pyvista/plotting/colors.py	/^    def __iter__(self):$/;"	m	class:Color	file:
__iter__	pyvista/plotting/composite_mapper.py	/^    def __iter__(self):$/;"	m	class:CompositeAttributes	file:
__iter__	pyvista/plotting/renderers.py	/^    def __iter__(self):$/;"	m	class:Renderers	file:
__iter__	pyvista/plotting/themes.py	/^    def __iter__(self):$/;"	m	class:_SliderConfig	file:
__len__	pyvista/core/composite.py	/^    def __len__(self) -> int:$/;"	m	class:MultiBlock	file:
__len__	pyvista/core/datasetattributes.py	/^    def __len__(self) -> int:$/;"	m	class:DataSetAttributes	file:
__len__	pyvista/plotting/charts.py	/^    def __len__(self):$/;"	m	class:Charts	file:
__len__	pyvista/plotting/composite_mapper.py	/^    def __len__(self):$/;"	m	class:CompositeAttributes	file:
__len__	pyvista/plotting/renderers.py	/^    def __len__(self):$/;"	m	class:Renderers	file:
__len__	pyvista/plotting/scalar_bars.py	/^    def __len__(self):$/;"	m	class:ScalarBars	file:
__new__	pyvista/core/pointset.py	/^    def __new__(cls, *args, **kwargs):$/;"	m	class:PointSet	file:
__new__	pyvista/core/pyvista_ndarray.py	/^    def __new__($/;"	m	class:pyvista_ndarray	file:
__new__	pyvista/core/utilities/misc.py	/^    def __new__(cls, *args, **kwargs):$/;"	f	function:abstract_class	file:
__new__	pyvista/core/utilities/misc.py	/^    def __new__(cls, value, annotation):$/;"	m	class:AnnotatedIntEnum	file:
__new__	pyvista/plotting/lookup_table.py	/^    def __new__($/;"	m	class:lookup_table_ndarray	file:
__next__	pyvista/core/composite.py	/^    def __next__(self) -> Optional[_TypeMultiBlockLeaf]:$/;"	m	class:MultiBlock	file:
__repr__	doc/source/conf.py	/^    def __repr__(self):$/;"	m	class:ResetPyVista	file:
__repr__	pyvista/core/cell.py	/^    def __repr__(self) -> str:$/;"	m	class:Cell	file:
__repr__	pyvista/core/composite.py	/^    def __repr__(self) -> str:$/;"	m	class:MultiBlock	file:
__repr__	pyvista/core/dataset.py	/^    def __repr__(self) -> str:$/;"	m	class:DataSet	file:
__repr__	pyvista/core/dataset.py	/^    def __repr__(self):$/;"	m	class:ActiveArrayInfo	file:
__repr__	pyvista/core/datasetattributes.py	/^    def __repr__(self) -> str:$/;"	m	class:DataSetAttributes	file:
__repr__	pyvista/core/grid.py	/^    def __repr__(self):$/;"	m	class:ImageData	file:
__repr__	pyvista/core/grid.py	/^    def __repr__(self):$/;"	m	class:RectilinearGrid	file:
__repr__	pyvista/core/objects.py	/^    def __repr__(self):$/;"	m	class:Table	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:ExplicitStructuredGrid	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:PointSet	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:PolyData	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:StructuredGrid	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:UnstructuredGrid	file:
__repr__	pyvista/core/utilities/reader.py	/^    def __repr__(self):$/;"	m	class:BaseReader	file:
__repr__	pyvista/plotting/_property.py	/^    def __repr__(self):$/;"	m	class:Property	file:
__repr__	pyvista/plotting/actor.py	/^    def __repr__(self):$/;"	m	class:Actor	file:
__repr__	pyvista/plotting/camera.py	/^    def __repr__(self):$/;"	m	class:Camera	file:
__repr__	pyvista/plotting/colors.py	/^    def __repr__(self):  # pragma: no cover$/;"	m	class:Color	file:
__repr__	pyvista/plotting/composite_mapper.py	/^    def __repr__(self):$/;"	m	class:BlockAttributes	file:
__repr__	pyvista/plotting/lights.py	/^    def __repr__(self):$/;"	m	class:Light	file:
__repr__	pyvista/plotting/lookup_table.py	/^    def __repr__(self):$/;"	m	class:LookupTable	file:
__repr__	pyvista/plotting/mapper.py	/^    def __repr__(self):$/;"	m	class:DataSetMapper	file:
__repr__	pyvista/plotting/mapper.py	/^    def __repr__(self):$/;"	m	class:PointGaussianMapper	file:
__repr__	pyvista/plotting/renderer.py	/^    def __repr__(self):$/;"	m	class:CameraPosition	file:
__repr__	pyvista/plotting/scalar_bars.py	/^    def __repr__(self):$/;"	m	class:ScalarBars	file:
__repr__	pyvista/plotting/texture.py	/^    def __repr__(self):$/;"	m	class:Texture	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:Theme	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_AxesConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_ColorbarConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_DepthPeelingConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_Font	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SilhouetteConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SliderConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SliderStyleConfig	file:
__repr__	pyvista/plotting/volume_property.py	/^    def __repr__(self):$/;"	m	class:VolumeProperty	file:
__repr__	pyvista/report.py	/^    def __repr__(self):$/;"	m	class:GPUInfo	file:
__setattr__	pyvista/core/utilities/misc.py	/^    def __setattr__(self, name, value):$/;"	f	function:no_new_attr	file:
__setitem__	pyvista/core/composite.py	/^    def __setitem__($/;"	m	class:MultiBlock	file:
__setitem__	pyvista/core/dataset.py	/^    def __setitem__($/;"	m	class:DataSet	file:
__setitem__	pyvista/core/dataset.py	/^    def __setitem__(self, key, value):$/;"	m	class:ActiveArrayInfo	file:
__setitem__	pyvista/core/datasetattributes.py	/^    def __setitem__($/;"	m	class:DataSetAttributes	file:
__setitem__	pyvista/core/objects.py	/^    def __setitem__(self, name, scalars):$/;"	m	class:Table	file:
__setitem__	pyvista/core/pyvista_ndarray.py	/^    def __setitem__(self, key: Union[int, np.ndarray], value):$/;"	m	class:pyvista_ndarray	file:
__setitem__	pyvista/plotting/lookup_table.py	/^    def __setitem__(self, key, value):$/;"	m	class:lookup_table_ndarray	file:
__setitem__	pyvista/plotting/themes.py	/^    def __setitem__(self, key, value):$/;"	m	class:_ThemeConfig	file:
__setstate__	pyvista/core/dataobject.py	/^    def __setstate__(self, state):$/;"	m	class:DataObject	file:
__setstate__	pyvista/core/dataset.py	/^    def __setstate__(self, state):$/;"	m	class:ActiveArrayInfo	file:
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:Theme
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_LightingConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_SliderStyleConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_TrameConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_classic', '_modern']$/;"	v	class:_SliderConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_color', '_line_width', '_opacity', '_feature_angle', '_decimate', '_enabled']$/;"	v	class:_SilhouetteConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_family', '_size', '_title_size', '_label_size', '_color', '_fmt']$/;"	v	class:_Font
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_number_of_peels', '_occlusion_ratio', '_enabled']$/;"	v	class:_DepthPeelingConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_width', '_height', '_position_x', '_position_y']$/;"	v	class:_ColorbarConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_x_color', '_y_color', '_z_color', '_box', '_show']$/;"	v	class:_AxesConfig
__str__	pyvista/core/cell.py	/^    def __str__(self) -> str:$/;"	m	class:Cell	file:
__str__	pyvista/core/composite.py	/^    def __str__(self) -> str:$/;"	m	class:MultiBlock	file:
__str__	pyvista/core/dataset.py	/^    def __str__(self) -> str:$/;"	m	class:DataSet	file:
__str__	pyvista/core/grid.py	/^    def __str__(self):$/;"	m	class:ImageData	file:
__str__	pyvista/core/grid.py	/^    def __str__(self):$/;"	m	class:RectilinearGrid	file:
__str__	pyvista/core/objects.py	/^    def __str__(self):$/;"	m	class:Table	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:ExplicitStructuredGrid	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:PointSet	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:PolyData	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:StructuredGrid	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:UnstructuredGrid	file:
__str__	pyvista/plotting/charts.py	/^    def __str__(self):$/;"	m	class:_vtkWrapper	file:
__str__	pyvista/plotting/lights.py	/^    def __str__(self):$/;"	m	class:LightType	file:
__sub__	pyvista/core/pointset.py	/^    def __sub__(self, cutting_mesh):$/;"	m	class:PolyData	file:
__version__	pyvista/_version.py	/^__version__ = '.'.join(map(str, version_info))$/;"	v
_activate_plotting_scalars	pyvista/core/composite.py	/^    def _activate_plotting_scalars(self, scalars_name, preference, component, rgb):$/;"	m	class:MultiBlock
_add_legend_label	pyvista/plotting/plotter.py	/^    def _add_legend_label(self, actor, label, scalars, color):$/;"	m	class:BasePlotter
_add_pass	pyvista/plotting/render_passes.py	/^    def _add_pass(self, render_pass):$/;"	m	class:RenderPasses
_add_plot	pyvista/plotting/charts.py	/^    def _add_plot(self, plot_type, *args, **kwargs):$/;"	m	class:Chart2D
_aligned_dedent	doc/source/make_tables.py	/^def _aligned_dedent(txt):$/;"	f
_apply_attrs_to_reader	pyvista/core/utilities/fileio.py	/^def _apply_attrs_to_reader(reader, attrs):$/;"	f
_assoc_array	pyvista/core/utilities/arrays.py	/^def _assoc_array(obj, name, association='point'):$/;"	f
_attr	pyvista/plotting/composite_mapper.py	/^    def _attr(self):$/;"	m	class:BlockAttributes
_background_color_set	pyvista/plotting/text.py	/^    _background_color_set = None$/;"	v	class:TextProperty
_before_close_callback	pyvista/plotting/plotter.py	/^    def _before_close_callback(self):$/;"	m	class:BasePlotter
_before_close_callback	pyvista/plotting/plotter.py	/^    def _before_close_callback(self, func):$/;"	m	class:BasePlotter
_before_render_event	pyvista/plotting/renderer.py	/^    def _before_render_event(self, *args, **kwargs):$/;"	m	class:Renderer
_boolean	pyvista/core/filters/poly_data.py	/^    def _boolean(self, btype, other_mesh, tolerance, progress_bar=False):$/;"	m	class:PolyDataFilters
_camera_pass	pyvista/plotting/render_passes.py	/^    def _camera_pass(self):$/;"	m	class:RenderPasses
_capture	tests/plotting/test_charts.py	/^    def _capture(self):$/;"	m	class:PlotterChanged
_cell_bounds	examples/02-plot/spherical.py	/^def _cell_bounds(points, bound_position=0.5):$/;"	f
_change_fft_output_scalars	pyvista/core/filters/image_data.py	/^    def _change_fft_output_scalars(self, dataset, orig_name, out_name):$/;"	m	class:ImageDataFilters
_charts	pyvista/plotting/renderer.py	/^    def _charts(self):$/;"	m	class:Renderer
_check_actor	pyvista/plotting/lights.py	/^    def _check_actor(self):$/;"	m	class:Light
_check_callable	pyvista/plotting/affine_widget.py	/^def _check_callable(func, name='callback'):$/;"	f
_check_fft_scalars	pyvista/core/filters/image_data.py	/^    def _check_fft_scalars(self):$/;"	m	class:ImageDataFilters
_check_for_consistency	pyvista/core/pointset.py	/^    def _check_for_consistency(self):$/;"	m	class:UnstructuredGrid
_check_has_ren_win	pyvista/plotting/plotter.py	/^    def _check_has_ren_win(self):$/;"	m	class:BasePlotter
_check_percent	pyvista/core/filters/data_set.py	/^        def _check_percent(percent):$/;"	f	function:DataSetFilters.threshold_percent
_check_range	pyvista/core/utilities/misc.py	/^def _check_range(value, rng, parm_name):$/;"	f
_check_rendered	pyvista/plotting/plotter.py	/^    def _check_rendered(self):$/;"	m	class:BasePlotter
_class_reader	pyvista/core/utilities/reader.py	/^    _class_reader = _GIFReader$/;"	v	class:GIFReader
_class_reader	pyvista/core/utilities/reader.py	/^    _class_reader = _PVDReader$/;"	v	class:PVDReader
_class_reader	pyvista/core/utilities/reader.py	/^    _class_reader = staticmethod(lazy_vtkPOpenFOAMReader)$/;"	v	class:POpenFOAMReader
_clear_g_path_event_watcher	pyvista/plotting/picking.py	/^        def _clear_g_path_event_watcher():$/;"	f	function:PickingHelper.enable_geodesic_picking
_clear_horizon_event_watcher	pyvista/plotting/picking.py	/^        def _clear_horizon_event_watcher():$/;"	f	function:PickingHelper.enable_horizon_picking
_clear_path_event_watcher	pyvista/plotting/picking.py	/^        def _clear_path_event_watcher():$/;"	f	function:PickingHelper.enable_path_picking
_clear_picking_representations	pyvista/plotting/picking.py	/^    def _clear_picking_representations(self):$/;"	m	class:PickingInterface
_clear_ren_win	pyvista/plotting/plotter.py	/^    def _clear_ren_win(self):$/;"	m	class:BasePlotter
_click_event	pyvista/plotting/render_window_interactor.py	/^    def _click_event(self, obj, event):$/;"	m	class:RenderWindowInteractor
_clip_with_function	pyvista/core/filters/data_set.py	/^    def _clip_with_function($/;"	m	class:DataSetFilters
_cmap	pyvista/plotting/lookup_table.py	/^    _cmap = None$/;"	v	class:LookupTable
_cmap	pyvista/plotting/mapper.py	/^    _cmap = None$/;"	v	class:DataSetMapper
_coerce_pointslike_arg	pyvista/core/utilities/arrays.py	/^def _coerce_pointslike_arg($/;"	f
_color_set	pyvista/plotting/_property.py	/^    _color_set = None$/;"	v	class:Property
_color_set	pyvista/plotting/text.py	/^    _color_set = None$/;"	v	class:TextProperty
_common_arg_parser	pyvista/plotting/_plotting.py	/^def _common_arg_parser($/;"	f
_compute_normals	pyvista/core/filters/composite.py	/^    def _compute_normals($/;"	m	class:CompositeFilters
_configure_scalars_mode	pyvista/plotting/mapper.py	/^    def _configure_scalars_mode($/;"	m	class:DataSetMapper
_connectivity_array	pyvista/core/pointset.py	/^    def _connectivity_array(self):$/;"	m	class:PolyData
_contains_doctest	pyvista/ext/plot_directive.py	/^def _contains_doctest(text):$/;"	f
_convert_to_real_scalars	pyvista/core/composite.py	/^    def _convert_to_real_scalars(self, data_attr: str, scalars_name: str):$/;"	m	class:MultiBlock
_convert_to_single_component	pyvista/core/composite.py	/^    def _convert_to_single_component($/;"	m	class:MultiBlock
_cubemap_from_paths	pyvista/plotting/utilities/cubemap.py	/^def _cubemap_from_paths(image_paths):$/;"	f
_datasets	pyvista/plotting/plotter.py	/^    def _datasets(self):$/;"	m	class:BasePlotter
_dimensions	pyvista/core/pointset.py	/^    def _dimensions(self):$/;"	m	class:ExplicitStructuredGrid
_disable_fxaa	pyvista/plotting/renderer.py	/^    def _disable_fxaa(self):$/;"	m	class:Renderer
_download_and_read	pyvista/examples/downloads.py	/^def _download_and_read(filename, texture=False, file_format=None, load=True):$/;"	f
_download_archive	pyvista/examples/downloads.py	/^def _download_archive(filename, target_file=None):  # pragma: no cover$/;"	f
_download_file	pyvista/examples/downloads.py	/^def _download_file(filename):$/;"	f
_enable_fxaa	pyvista/plotting/renderer.py	/^    def _enable_fxaa(self):$/;"	m	class:Renderer
_end_handler	pyvista/plotting/picking.py	/^        def _end_handler(picked):$/;"	f	function:PickingMethods.enable_element_picking
_end_pick_event	pyvista/plotting/picking.py	/^        def _end_pick_event(picked_point, picker):$/;"	f	function:PickingMethods.enable_surface_point_picking
_end_pick_event	pyvista/plotting/picking.py	/^        def _end_pick_event(picker, event):$/;"	f	function:PickingInterface.enable_point_picking
_end_pick_helper	pyvista/plotting/picking.py	/^        def _end_pick_helper(picker, *args):$/;"	f	function:PickingInterface.enable_rectangle_picking
_extract_points	pyvista/core/filters/data_set.py	/^        def _extract_points(_input, points):$/;"	f	function:DataSetFilters.connectivity
_file_copier	pyvista/examples/downloads.py	/^def _file_copier(input_file, output_file, pooch):$/;"	f
_flip_uniform	pyvista/core/filters/image_data.py	/^    def _flip_uniform(self, axis) -> 'pyvista.ImageData':$/;"	m	class:ImageDataFilters
_font_family	pyvista/plotting/text.py	/^    _font_family = None$/;"	v	class:TextProperty
_from_array	pyvista/plotting/texture.py	/^    def _from_array(self, image):$/;"	m	class:Texture
_from_arrays	pyvista/core/grid.py	/^    def _from_arrays($/;"	m	class:RectilinearGrid
_from_arrays	pyvista/core/objects.py	/^    def _from_arrays(self, arrays):$/;"	m	class:Table
_from_arrays	pyvista/core/pointset.py	/^    def _from_arrays($/;"	m	class:UnstructuredGrid
_from_arrays	pyvista/core/pointset.py	/^    def _from_arrays(self, dims: Sequence, corners: Sequence) -> None:$/;"	m	class:ExplicitStructuredGrid
_from_arrays	pyvista/core/pointset.py	/^    def _from_arrays(self, x, y, z, force_float=True):$/;"	m	class:StructuredGrid
_from_cells_dict	pyvista/core/pointset.py	/^    def _from_cells_dict(self, cells_dict, points, deep=True):$/;"	m	class:UnstructuredGrid
_from_dict	pyvista/core/objects.py	/^    def _from_dict(self, array_dict):$/;"	m	class:Table
_from_dict	pyvista/plotting/colors.py	/^    def _from_dict(self, dct):$/;"	m	class:Color
_from_file	pyvista/core/dataobject.py	/^    def _from_file(self, filename: Union[str, Path], **kwargs):$/;"	m	class:DataObject
_from_file	pyvista/plotting/texture.py	/^    def _from_file(self, filename, **kwargs):$/;"	m	class:Texture
_from_hex	pyvista/plotting/colors.py	/^    def _from_hex(self, h):$/;"	m	class:Color
_from_image_data	pyvista/plotting/texture.py	/^    def _from_image_data(self, image):$/;"	m	class:Texture
_from_pandas	pyvista/core/objects.py	/^    def _from_pandas(self, data_frame):$/;"	m	class:Table
_from_rgba	pyvista/plotting/colors.py	/^    def _from_rgba(self, rgba):$/;"	m	class:Color
_from_specs	pyvista/core/grid.py	/^    def _from_specs($/;"	m	class:ImageData
_from_str	pyvista/plotting/colors.py	/^    def _from_str(self, n: str):$/;"	m	class:Color
_from_texture	pyvista/plotting/texture.py	/^    def _from_texture(self, texture):$/;"	m	class:Texture
_generate_vtk_err	tests/core/test_utilities.py	/^def _generate_vtk_err():$/;"	f
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartBox
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartMPL
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartPie
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:_Chart
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, val):$/;"	m	class:_Chart
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, value):$/;"	m	class:ChartBox
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, value):$/;"	m	class:ChartMPL
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, value):$/;"	m	class:ChartPie
_get_attrs	pyvista/core/cell.py	/^    def _get_attrs(self):$/;"	m	class:Cell
_get_attrs	pyvista/core/composite.py	/^    def _get_attrs(self):$/;"	m	class:MultiBlock
_get_attrs	pyvista/core/dataobject.py	/^    def _get_attrs(self):  # pragma: no cover$/;"	m	class:DataObject
_get_attrs	pyvista/core/dataset.py	/^    def _get_attrs(self):$/;"	m	class:DataSet
_get_attrs	pyvista/core/grid.py	/^    def _get_attrs(self):$/;"	m	class:Grid
_get_attrs	pyvista/core/grid.py	/^    def _get_attrs(self):$/;"	m	class:ImageData
_get_attrs	pyvista/core/objects.py	/^    def _get_attrs(self):$/;"	m	class:Table
_get_attrs	pyvista/core/pointset.py	/^    def _get_attrs(self):$/;"	m	class:StructuredGrid
_get_attrs	pyvista/plotting/texture.py	/^    def _get_attrs(self):$/;"	m	class:Texture
_get_charts_by_pos	pyvista/plotting/renderer.py	/^    def _get_charts_by_pos(self, pos):$/;"	m	class:Renderer
_get_click_event	pyvista/plotting/render_window_interactor.py	/^    def _get_click_event(side):$/;"	m	class:RenderWindowInteractor
_get_connectivity_array	pyvista/core/cell.py	/^def _get_connectivity_array(cellarr: _vtk.vtkCellArray):$/;"	f
_get_consistent_active_scalars	pyvista/core/composite.py	/^    def _get_consistent_active_scalars(self):$/;"	m	class:MultiBlock
_get_event_str	pyvista/plotting/render_window_interactor.py	/^    def _get_event_str(event):$/;"	m	class:RenderWindowInteractor
_get_ext_force	pyvista/core/utilities/fileio.py	/^def _get_ext_force(filename, force_ext=None):$/;"	f
_get_levels_neihgbors	pyvista/core/dataset.py	/^    def _get_levels_neihgbors($/;"	m	class:DataSet
_get_offset_array	pyvista/core/cell.py	/^def _get_offset_array(cellarr: _vtk.vtkCellArray):$/;"	f
_get_output	pyvista/core/filters/__init__.py	/^def _get_output($/;"	f
_get_quarter	pyvista/core/filters/data_set.py	/^            def _get_quarter(dmin, dmax):$/;"	f	function:DataSetFilters.clip_box
_get_regular_cells	pyvista/core/cell.py	/^def _get_regular_cells(cellarr: _vtk.vtkCellArray) -> np.ndarray:$/;"	f
_get_sg_image_scraper	pyvista/plotting/utilities/sphinx_gallery.py	/^def _get_sg_image_scraper():$/;"	f
_get_val	pyvista/core/filters/data_set.py	/^        def _get_val(percent, dmin, dmax):$/;"	f	function:DataSetFilters.threshold_percent
_get_vtk_id_type	pyvista/core/cell.py	/^def _get_vtk_id_type():$/;"	f
_get_world_coord_rot	pyvista/plotting/affine_widget.py	/^    def _get_world_coord_rot(self, interactor):$/;"	m	class:AffineWidget3D
_get_world_coord_trans	pyvista/plotting/affine_widget.py	/^    def _get_world_coord_trans(self, interactor):$/;"	m	class:AffineWidget3D
_has_color	pyvista/plotting/composite_mapper.py	/^    def _has_color(self):$/;"	m	class:BlockAttributes
_has_opacity	pyvista/plotting/composite_mapper.py	/^    def _has_opacity(self):$/;"	m	class:BlockAttributes
_has_pickable	pyvista/plotting/composite_mapper.py	/^    def _has_pickable(self):$/;"	m	class:BlockAttributes
_has_visibility	pyvista/plotting/composite_mapper.py	/^    def _has_visibility(self):$/;"	m	class:BlockAttributes
_init_actors	pyvista/plotting/affine_widget.py	/^    def _init_actors(self, scale, always_visible):$/;"	m	class:AffineWidget3D
_init_click_picking_callback	pyvista/plotting/picking.py	/^    def _init_click_picking_callback(self, left_clicking=False):$/;"	m	class:PickingInterface
_init_passes	pyvista/plotting/render_passes.py	/^    def _init_passes(self):$/;"	m	class:RenderPasses
_interactive	pyvista/plotting/charts.py	/^    def _interactive(self):$/;"	m	class:_Chart
_interactive	pyvista/plotting/charts.py	/^    def _interactive(self, val):$/;"	m	class:_Chart
_ipython_key_completions_	pyvista/core/composite.py	/^    def _ipython_key_completions_(self) -> List[Optional[str]]:$/;"	m	class:MultiBlock
_ipython_key_completions_	pyvista/core/dataset.py	/^    def _ipython_key_completions_(self) -> List[str]:$/;"	m	class:DataSet
_ipython_key_completions_	pyvista/core/objects.py	/^    def _ipython_key_completions_(self):$/;"	m	class:Table
_is_vtk	tests/plotting/conftest.py	/^def _is_vtk(obj):$/;"	f
_is_within	pyvista/plotting/charts.py	/^    def _is_within(self, pos):$/;"	m	class:_Chart
_kill_display	pyvista/plotting/plotter.py	/^def _kill_display(disp_id):  # pragma: no cover$/;"	f
_launch_pick_event	pyvista/plotting/picking.py	/^def _launch_pick_event(interactor, event):$/;"	f
_lazy_vtk_instantiation	pyvista/core/utilities/reader.py	/^def _lazy_vtk_instantiation(module_name, class_name):$/;"	f
_line_for_legend	pyvista/plotting/renderer.py	/^def _line_for_legend():$/;"	f
_lookup_type	pyvista/plotting/lookup_table.py	/^    def _lookup_type(self) -> str:$/;"	m	class:LookupTable
_make_class	pyvista/plotting/render_window_interactor.py	/^    def _make_class(klass):$/;"	f	function:_style_factory
_make_quarter_arc	pyvista/plotting/affine_widget.py	/^def _make_quarter_arc():$/;"	f
_make_render_window_current	pyvista/plotting/plotter.py	/^    def _make_render_window_current(self):$/;"	m	class:BasePlotter
_make_vertex_cells	pyvista/core/pointset.py	/^    def _make_vertex_cells(npoints):$/;"	m	class:PolyData
_mouse_left_button_click	pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_left_button_press	pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_press($/;"	m	class:RenderWindowInteractor
_mouse_left_button_release	pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_release($/;"	m	class:RenderWindowInteractor
_mouse_move	pyvista/plotting/render_window_interactor.py	/^    def _mouse_move(self, x, y):  # pragma:$/;"	m	class:RenderWindowInteractor
_mouse_right_button_click	pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_right_button_press	pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_press($/;"	m	class:RenderWindowInteractor
_mouse_right_button_release	pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_release($/;"	m	class:RenderWindowInteractor
_move_callback	pyvista/plotting/affine_widget.py	/^    def _move_callback(self, interactor, event):$/;"	m	class:AffineWidget3D
_namedtuple	pyvista/core/dataset.py	/^    def _namedtuple(self):$/;"	m	class:ActiveArrayInfo
_nan_color_set	pyvista/plotting/lookup_table.py	/^    _nan_color_set = False$/;"	v	class:LookupTable
_new_attr_exceptions	pyvista/plotting/actor.py	/^    _new_attr_exceptions = ['_name']$/;"	v	class:Actor
_new_attr_exceptions	pyvista/plotting/mapper.py	/^    _new_attr_exceptions = ('_theme',)$/;"	v	class:_BaseMapper
_offset_array	pyvista/core/pointset.py	/^    def _offset_array(self):$/;"	m	class:PolyData
_on_first_render_request	pyvista/plotting/plotter.py	/^    def _on_first_render_request(self):$/;"	m	class:BasePlotter
_option_boolean	pyvista/ext/plot_directive.py	/^def _option_boolean(arg):$/;"	f
_option_context	pyvista/ext/plot_directive.py	/^def _option_context(arg):$/;"	f
_option_format	pyvista/ext/plot_directive.py	/^def _option_format(arg):$/;"	f
_parse_format	pyvista/plotting/charts.py	/^    def _parse_format(cls, fmt):$/;"	m	class:Chart2D
_parse_interaction_event	pyvista/plotting/widgets.py	/^def _parse_interaction_event(interaction_event):$/;"	f
_pass_collection	pyvista/plotting/render_passes.py	/^    def _pass_collection(self):$/;"	m	class:RenderPasses
_patch_type	pyvista/core/datasetattributes.py	/^    def _patch_type(self, narray):$/;"	m	class:DataSetAttributes
_path	pyvista/examples/downloads.py	/^        _path = _path + '\/'$/;"	v
_path	pyvista/examples/downloads.py	/^        _path = os.path.join(_path, 'Data')$/;"	v
_path	pyvista/examples/downloads.py	/^    _path = os.environ['PYVISTA_VTK_DATA']$/;"	v
_play	examples/99-advanced/customization-trame-toolbar.py	/^async def _play(play, **kwargs):$/;"	f
_plot_skybox	pyvista/plotting/texture.py	/^    def _plot_skybox(self, **kwargs):$/;"	m	class:Texture
_plotter	pyvista/plotting/render_window_interactor.py	/^    def _plotter(self):$/;"	m	class:RenderWindowInteractor
_poked_context_callback	pyvista/plotting/picking.py	/^def _poked_context_callback(plotter, *args, **kwargs):$/;"	f
_post_file_load_processing	pyvista/core/dataobject.py	/^    def _post_file_load_processing(self):$/;"	m	class:DataObject
_post_file_load_processing	pyvista/core/pointset.py	/^    def _post_file_load_processing(self):$/;"	m	class:PolyData
_post_initialize	pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:PyVistaLocalView
_post_initialize	pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:PyVistaRemoteLocalView
_post_initialize	pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:_BasePyVistaView
_prep_for_close	pyvista/plotting/plotter.py	/^    def _prep_for_close(self):$/;"	m	class:BasePlotter
_prepare_array	pyvista/core/datasetattributes.py	/^    def _prepare_array($/;"	m	class:DataSetAttributes
_prepare_arrays	pyvista/core/objects.py	/^    def _prepare_arrays(arrays):$/;"	m	class:Table
_press	pyvista/plotting/render_window_interactor.py	/^            def _press(self, obj, event):$/;"	m	class:_style_factory._make_class.CustomStyle
_press_callback	pyvista/plotting/affine_widget.py	/^    def _press_callback(self, interactor, event):$/;"	m	class:AffineWidget3D
_process_filename	pyvista/core/utilities/fileio.py	/^def _process_filename(filename):$/;"	f
_raise_field_data_no_scalars_vectors	pyvista/core/datasetattributes.py	/^    def _raise_field_data_no_scalars_vectors(self):$/;"	m	class:DataSetAttributes
_raise_index_out_of_bounds	pyvista/core/datasetattributes.py	/^    def _raise_index_out_of_bounds(self, index: Any):$/;"	m	class:DataSetAttributes
_raise_no_normals	pyvista/core/datasetattributes.py	/^    def _raise_no_normals(self):$/;"	m	class:DataSetAttributes
_raise_no_t_coords	pyvista/core/datasetattributes.py	/^    def _raise_no_t_coords(self):$/;"	m	class:DataSetAttributes
_redraw	pyvista/plotting/charts.py	/^    def _redraw(self, event=None):$/;"	m	class:ChartMPL
_release	pyvista/plotting/render_window_interactor.py	/^            def _release(self, obj, event):$/;"	m	class:_style_factory._make_class.CustomStyle
_release_callback	pyvista/plotting/affine_widget.py	/^    def _release_callback(self, interactor, event):$/;"	m	class:AffineWidget3D
_remove_array	pyvista/core/objects.py	/^    def _remove_array(self, field, key):$/;"	m	class:Table
_remove_mapper_from_plotter	pyvista/plotting/scalar_bars.py	/^    def _remove_mapper_from_plotter($/;"	m	class:ScalarBars
_remove_pass	pyvista/plotting/render_passes.py	/^    def _remove_pass(self, render_pass):$/;"	m	class:RenderPasses
_remove_ref	pyvista/core/composite.py	/^    def _remove_ref(self, index: int):$/;"	m	class:MultiBlock
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, **kwargs):$/;"	m	class:ChartBox
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, **kwargs):$/;"	m	class:ChartPie
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render=False, **kwargs):$/;"	m	class:Chart2D
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render=False, **kwargs):$/;"	m	class:ChartMPL
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render=False, **kwargs):$/;"	m	class:_Chart
_renderer	pyvista/plotting/charts.py	/^    def _renderer(self):$/;"	m	class:Charts
_renderer	pyvista/plotting/charts.py	/^    def _renderer(self):$/;"	m	class:_Chart
_renderer	pyvista/plotting/render_passes.py	/^    def _renderer(self):$/;"	m	class:RenderPasses
_repr_html_	pyvista/core/composite.py	/^    def _repr_html_(self) -> str:$/;"	m	class:MultiBlock
_repr_html_	pyvista/core/dataobject.py	/^    def _repr_html_(self):  # pragma: no cover$/;"	m	class:DataObject
_repr_html_	pyvista/core/dataset.py	/^    def _repr_html_(self) -> str:$/;"	m	class:DataSet
_repr_html_	pyvista/core/objects.py	/^    def _repr_html_(self):$/;"	m	class:Table
_repr_html_	pyvista/report.py	/^    def _repr_html_(self):$/;"	m	class:GPUInfo
_reset	pyvista/plotting/affine_widget.py	/^    def _reset(self):$/;"	m	class:AffineWidget3D
_reshape_cell_array	pyvista/core/pointset.py	/^    def _reshape_cell_array(self, array):$/;"	m	class:StructuredGrid
_reshape_point_array	pyvista/core/pointset.py	/^    def _reshape_point_array(self, array):$/;"	m	class:StructuredGrid
_resize	pyvista/plotting/charts.py	/^    def _resize(self):$/;"	m	class:ChartMPL
_resize	pyvista/plotting/charts.py	/^    def _resize(self):$/;"	m	class:_Chart
_restore_metadata	pyvista/core/dataobject.py	/^    def _restore_metadata(self):$/;"	m	class:DataObject
_row_array	pyvista/core/objects.py	/^    def _row_array(self, name=None):$/;"	m	class:Table
_run_code	pyvista/ext/plot_directive.py	/^def _run_code(code, code_path, ns=None, function_name=None):$/;"	f
_save_image	pyvista/plotting/plotter.py	/^    def _save_image(image, filename, return_img):$/;"	m	class:BasePlotter
_scalar_bar_slot_lookup	pyvista/plotting/plotter.py	/^    def _scalar_bar_slot_lookup(self):$/;"	m	class:BasePlotter
_scalar_bar_slot_lookup	pyvista/plotting/plotter.py	/^    def _scalar_bar_slot_lookup(self, value):$/;"	m	class:BasePlotter
_scalar_bar_slots	pyvista/plotting/plotter.py	/^    def _scalar_bar_slots(self):$/;"	m	class:BasePlotter
_scalar_bar_slots	pyvista/plotting/plotter.py	/^    def _scalar_bar_slots(self, value):$/;"	m	class:BasePlotter
_scene	pyvista/plotting/charts.py	/^    def _scene(self):$/;"	m	class:_Chart
_seq_pass	pyvista/plotting/render_passes.py	/^    def _seq_pass(self):$/;"	m	class:RenderPasses
_set_cells	pyvista/core/cell.py	/^    def _set_cells(self, cells, n_cells, deep):$/;"	m	class:CellArray
_set_context_style	pyvista/plotting/render_window_interactor.py	/^    def _set_context_style(self, scene):$/;"	m	class:RenderWindowInteractor
_set_data	pyvista/core/cell.py	/^    def _set_data(self, offsets, connectivity, deep=False):$/;"	m	class:CellArray
_set_defaults	pyvista/core/utilities/reader.py	/^    def _set_defaults(self):$/;"	m	class:BaseReader
_set_defaults	pyvista/core/utilities/reader.py	/^    def _set_defaults(self):$/;"	m	class:MultiBlockPlot3DReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self):$/;"	m	class:BaseReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self):$/;"	m	class:CGNSReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self):$/;"	m	class:OpenFOAMReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self):$/;"	m	class:VTKDataSetReader
_set_directory	pyvista/core/utilities/reader.py	/^    def _set_directory(self, directory):$/;"	m	class:BaseReader
_set_filename	pyvista/core/utilities/reader.py	/^    def _set_filename(self, filename):$/;"	m	class:BaseReader
_set_filename	pyvista/core/utilities/reader.py	/^    def _set_filename(self, filename):$/;"	m	class:EnSightReader
_set_plot_theme_from_env	pyvista/plotting/themes.py	/^def _set_plot_theme_from_env():$/;"	f
_set_threshold_limit	pyvista/core/filters/data_set.py	/^def _set_threshold_limit(alg, value, method, invert):$/;"	f
_setup_scene	pyvista/plotting/charts.py	/^    def _setup_scene(self):$/;"	m	class:Charts
_simulate_keypress	pyvista/plotting/render_window_interactor.py	/^    def _simulate_keypress(self, key):  # pragma:$/;"	m	class:RenderWindowInteractor
_sphere_with_texture_map	pyvista/examples/planets.py	/^def _sphere_with_texture_map(radius=1.0, lat_resolution=50, lon_resolution=100):$/;"	f
_split_code_at_show	pyvista/ext/plot_directive.py	/^def _split_code_at_show(text):$/;"	f
_store_metadata	pyvista/core/dataobject.py	/^    def _store_metadata(self):$/;"	m	class:DataObject
_str_examples	doc/source/conf.py	/^def _str_examples(self):$/;"	f
_str_examples	tests/tinypages/conf.py	/^def _str_examples(self):$/;"	f
_strip_comments	pyvista/ext/plot_directive.py	/^def _strip_comments(code):$/;"	f
_style_factory	pyvista/plotting/render_window_interactor.py	/^def _style_factory(klass):$/;"	f
_system_supports_plotting	pyvista/plotting/tools.py	/^def _system_supports_plotting():$/;"	f
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(*args):$/;"	f	function:PickingHelper.enable_fly_to_right_click
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(path):$/;"	f	function:PickingHelper.enable_horizon_picking
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(picked_point, picker):$/;"	f	function:PickingHelper.enable_geodesic_picking
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(picked_point, picker):$/;"	f	function:PickingHelper.enable_path_picking
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(box_widget, event_id):$/;"	f	function:WidgetHelper.add_box_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(value):$/;"	f	function:WidgetHelper.add_text_slider_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, event):$/;"	f	function:WidgetHelper.add_checkbox_button_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, event):$/;"	f	function:WidgetHelper.add_slider_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, event_id):$/;"	f	function:WidgetHelper.add_line_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, event_id):$/;"	f	function:WidgetHelper.add_plane_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, event_id):$/;"	f	function:WidgetHelper.add_sphere_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, event_id):$/;"	f	function:WidgetHelper.add_spline_widget
_theme	pyvista/plotting/_property.py	/^    _theme = None$/;"	v	class:Property
_theme	pyvista/plotting/text.py	/^    _theme = Theme()$/;"	v	class:TextProperty
_to_pos	pyvista/plotting/plotter.py	/^        def _to_pos(elevation, azimuth):$/;"	f	function:BasePlotter.enable_3_lights
_toggle_chart_interaction	pyvista/plotting/render_window_interactor.py	/^    def _toggle_chart_interaction(self, mouse_pos):$/;"	m	class:RenderWindowInteractor
_try_imageio_imread	pyvista/core/utilities/fileio.py	/^def _try_imageio_imread(filename):$/;"	f
_try_import	pyvista/errors.py	/^def _try_import(module, name):$/;"	f
_try_import	pyvista/utilities/__init__.py	/^def _try_import(module, name):$/;"	f
_unravel_and_validate_ids	pyvista/core/filters/data_set.py	/^        def _unravel_and_validate_ids(ids):$/;"	f	function:DataSetFilters.connectivity
_update_alg	pyvista/core/filters/__init__.py	/^def _update_alg(alg, progress_bar=False, message=''):$/;"	f
_update_axes_label_color	pyvista/plotting/tools.py	/^def _update_axes_label_color(axes_actor, color=None):$/;"	f
_update_bounds	pyvista/plotting/renderer.py	/^        def _update_bounds(bounds):$/;"	f	function:Renderer.bounds
_update_dimensions	pyvista/core/grid.py	/^    def _update_dimensions(self):$/;"	m	class:RectilinearGrid
_update_information	pyvista/core/utilities/reader.py	/^    def _update_information(self):$/;"	m	class:BaseReader
_update_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_labels(self):$/;"	m	class:CubeAxesActor
_update_passes	pyvista/plotting/render_passes.py	/^    def _update_passes(self):$/;"	m	class:RenderPasses
_update_textureprops	pyvista/plotting/charts.py	/^    def _update_textureprops(self):$/;"	m	class:Brush
_update_ticks	pyvista/plotting/charts.py	/^    def _update_ticks(self):$/;"	m	class:Axis
_update_x_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_x_labels(self):$/;"	m	class:CubeAxesActor
_update_y_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_y_labels(self):$/;"	m	class:CubeAxesActor
_update_z_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_z_labels(self):$/;"	m	class:CubeAxesActor
_validate_axes	pyvista/plotting/affine_widget.py	/^def _validate_axes(axes):$/;"	f
_validate_jupyter_backend	pyvista/jupyter/__init__.py	/^def _validate_jupyter_backend(backend):$/;"	f
_validate_picker_not_in_use	pyvista/plotting/picking.py	/^    def _validate_picker_not_in_use(self):$/;"	m	class:PickingInterface
_values_manual	pyvista/plotting/lookup_table.py	/^    _values_manual = False$/;"	v	class:LookupTable
_vtkWrapper	pyvista/plotting/charts.py	/^class _vtkWrapper(metaclass=_vtkWrapperMeta):$/;"	c
_vtkWrapperMeta	pyvista/plotting/charts.py	/^class _vtkWrapperMeta(type):$/;"	c
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkAVSucdReader"$/;"	v	class:AVSucdReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkBMPReader"$/;"	v	class:BMPReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkBYUReader"$/;"	v	class:BYUReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkCGNSReader"$/;"	v	class:CGNSReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkDEMReader"$/;"	v	class:DEMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkDICOMImageReader"$/;"	v	class:DICOMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkDataSetReader"$/;"	v	class:VTKDataSetReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkFLUENTReader"$/;"	v	class:FluentReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkFacetReader"$/;"	v	class:FacetReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkGLTFReader"$/;"	v	class:GLTFReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkGenericEnSightReader"$/;"	v	class:EnSightReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkHDFReader"$/;"	v	class:HDFReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkHDRReader"$/;"	v	class:HDRReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkJPEGReader"$/;"	v	class:JPEGReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkMCubesReader"$/;"	v	class:BinaryMarchingCubesReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkMFIXReader"$/;"	v	class:MFIXReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkMetaImageReader"$/;"	v	class:MetaImageReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkMultiBlockPLOT3DReader"$/;"	v	class:MultiBlockPlot3DReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkNIFTIImageReader"$/;"	v	class:NIFTIReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkNrrdReader"$/;"	v	class:NRRDReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkOBJReader"$/;"	v	class:OBJReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkOpenFOAMReader"$/;"	v	class:OpenFOAMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkPDataSetReader"$/;"	v	class:VTKPDataSetReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkPLYReader"$/;"	v	class:PLYReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkPNGReader"$/;"	v	class:PNGReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkPNMReader"$/;"	v	class:PNMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkPTSReader"$/;"	v	class:PTSReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkPlot3DMetaReader"$/;"	v	class:Plot3DMetaReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkSLCReader"$/;"	v	class:SLCReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkSTLReader"$/;"	v	class:STLReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkSegYReader"$/;"	v	class:SegYReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkTIFFReader"$/;"	v	class:TIFFReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkTecplotReader"$/;"	v	class:TecplotReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLImageDataReader"$/;"	v	class:XMLImageDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLMultiBlockDataReader"$/;"	v	class:XMLMultiBlockDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLPImageDataReader"$/;"	v	class:XMLPImageDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLPRectilinearGridReader"$/;"	v	class:XMLPRectilinearGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLPUnstructuredGridReader"$/;"	v	class:XMLPUnstructuredGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLPolyDataReader"$/;"	v	class:XMLPolyDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLRectilinearGridReader"$/;"	v	class:XMLRectilinearGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLStructuredGridReader"$/;"	v	class:XMLStructuredGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXMLUnstructuredGridReader"$/;"	v	class:XMLUnstructuredGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = "vtkXdmfReader"$/;"	v	class:XdmfReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = ''$/;"	v	class:POpenFOAMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkFiltersHybrid"$/;"	v	class:FacetReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOCGNSReader"$/;"	v	class:CGNSReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOEnSight"$/;"	v	class:EnSightReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:AVSucdReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:BYUReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:BinaryMarchingCubesReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:FluentReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:GLTFReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:MFIXReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:OBJReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:OpenFOAMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:PTSReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:STLReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOGeometry"$/;"	v	class:TecplotReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOHDF"$/;"	v	class:HDFReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:BMPReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:DEMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:DICOMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:HDRReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:JPEGReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:MetaImageReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:NIFTIReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:NRRDReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:PNGReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:PNMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:SLCReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOImage"$/;"	v	class:TIFFReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOLegacy"$/;"	v	class:VTKDataSetReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOPLY"$/;"	v	class:PLYReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOParallel"$/;"	v	class:MultiBlockPlot3DReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOParallel"$/;"	v	class:Plot3DMetaReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOParallel"$/;"	v	class:VTKPDataSetReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOSegY"$/;"	v	class:SegYReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLImageDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLMultiBlockDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLPImageDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLPRectilinearGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLPUnstructuredGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLPolyDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLRectilinearGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLStructuredGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXML"$/;"	v	class:XMLUnstructuredGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = "vtkIOXdmf2"$/;"	v	class:XdmfReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = ''$/;"	v	class:POpenFOAMReader
_warn_xserver	pyvista/plotting/plotter.py	/^def _warn_xserver():  # pragma: no cover$/;"	f
_wrap_member	pyvista/plotting/charts.py	/^    def _wrap_member(member):$/;"	m	class:DocSubs
_wrappers	pyvista/core/wrappers.py	/^_wrappers = {$/;"	v
a	examples/01-filter/flying_edges.py	/^a = 0.9$/;"	v
a	examples/01-filter/geodesic.py	/^a = land.geodesic(cape_town, dubai)$/;"	v
a	examples/01-filter/slicing.py	/^a = mesh.center + normal * mesh.length \/ 3.0$/;"	v
a	examples/02-plot/plot-over-circular-arc.py	/^a = arc.points[0]$/;"	v
a	examples/02-plot/plot-over-line.py	/^a = [mesh.bounds[0], mesh.bounds[2], mesh.bounds[4]]$/;"	v
a	examples/02-plot/plot-over-line.py	/^a = [mesh.center[0], mesh.bounds[2], mesh.bounds[5]]$/;"	v
a	examples/99-advanced/antarctica-compare.py	/^a = extract_node(12)$/;"	v
a	examples/99-advanced/fea-hertzian-contact-pressure.py	/^a = [0.1, ypos, 0.2 - 1e-4]$/;"	v
a_part	pyvista/demos/logo.py	/^    a_part = grid.extract_cells(mask)$/;"	v
above_color	examples/01-filter/connectivity.py	/^    above_color='red',$/;"	v
above_range_color	pyvista/plotting/lookup_table.py	/^    def above_range_color(self) -> Optional[Color]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
above_range_color	pyvista/plotting/lookup_table.py	/^    def above_range_color(self, value: Union[bool, ColorLike]):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
above_range_color	pyvista/plotting/themes.py	/^    def above_range_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
above_range_color	pyvista/plotting/themes.py	/^    def above_range_color(self, value: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
above_range_opacity	pyvista/plotting/lookup_table.py	/^    def above_range_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
above_range_opacity	pyvista/plotting/lookup_table.py	/^    def above_range_opacity(self, value):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
absolute	pyvista/core/utilities/parametric_objects.py	/^            absolute=False,$/;"	v
abstract_class	pyvista/core/utilities/misc.py	/^def abstract_class(cls_):  # numpydoc ignore=RT01$/;"	f
action	tests/check_doctest_names.py	/^        action='store_false',$/;"	v
active_background_color	pyvista/plotting/charts.py	/^    def active_background_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
active_background_color	pyvista/plotting/charts.py	/^    def active_background_color(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
active_border_color	pyvista/plotting/charts.py	/^    def active_border_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
active_border_color	pyvista/plotting/charts.py	/^    def active_border_color(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
active_component_consistency_check	tests/core/test_dataset.py	/^def active_component_consistency_check(grid, component_type, field_association="point"):$/;"	f
active_datasets	pyvista/core/utilities/reader.py	/^    def active_datasets(self):  # numpydoc ignore=RT01$/;"	m	class:PVDReader
active_index	pyvista/plotting/renderers.py	/^    def active_index(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
active_normals	pyvista/core/dataset.py	/^    def active_normals(self) -> Optional[pyvista_ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_normals	pyvista/core/datasetattributes.py	/^    def active_normals(self) -> Optional[pyvista_ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_normals	pyvista/core/datasetattributes.py	/^    def active_normals(self, normals: Union[Sequence[Number], np.ndarray]):  # numpydoc ignore=GL08$/;"	m	class:DataSetAttributes
active_normals_name	pyvista/core/datasetattributes.py	/^    def active_normals_name(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_normals_name	pyvista/core/datasetattributes.py	/^    def active_normals_name(self, name: str) -> None:  # numpydoc ignore=GL08$/;"	m	class:DataSetAttributes
active_readers	pyvista/core/utilities/reader.py	/^    def active_readers(self):  # numpydoc ignore=RT01$/;"	m	class:PVDReader
active_renderer	pyvista/plotting/renderers.py	/^    def active_renderer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
active_scalars	pyvista/core/dataset.py	/^    def active_scalars(self) -> Optional[pyvista_ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_scalars	pyvista/core/datasetattributes.py	/^    def active_scalars(self) -> Optional[pyvista_ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_scalars_algorithm	pyvista/plotting/utilities/algorithms.py	/^def active_scalars_algorithm(inp, name, preference='point'):$/;"	f
active_scalars_info	pyvista/core/dataset.py	/^    def active_scalars_info(self) -> ActiveArrayInfo:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_scalars_name	pyvista/core/dataset.py	/^    def active_scalars_name(self) -> str:  # type: ignore  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_scalars_name	pyvista/core/dataset.py	/^    def active_scalars_name(self, name: str):  # numpydoc ignore=GL08$/;"	m	class:DataSet
active_scalars_name	pyvista/core/datasetattributes.py	/^    def active_scalars_name(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_scalars_name	pyvista/core/datasetattributes.py	/^    def active_scalars_name(self, name: str) -> None:  # numpydoc ignore=GL08$/;"	m	class:DataSetAttributes
active_t_coords	pyvista/core/dataset.py	/^    def active_t_coords(self) -> Optional[pyvista_ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_t_coords	pyvista/core/dataset.py	/^    def active_t_coords(self, t_coords: np.ndarray):  # numpydoc ignore=GL08$/;"	m	class:DataSet
active_t_coords	pyvista/core/datasetattributes.py	/^    def active_t_coords(self) -> Optional[pyvista_ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_t_coords	pyvista/core/datasetattributes.py	/^    def active_t_coords(self, t_coords: np.ndarray):  # numpydoc ignore=GL08$/;"	m	class:DataSetAttributes
active_t_coords_name	pyvista/core/datasetattributes.py	/^    def active_t_coords_name(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_t_coords_name	pyvista/core/datasetattributes.py	/^    def active_t_coords_name(self, name: str) -> None:  # numpydoc ignore=GL08$/;"	m	class:DataSetAttributes
active_tensors	pyvista/core/dataset.py	/^    def active_tensors(self) -> Optional[np.ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_tensors_info	pyvista/core/dataset.py	/^    def active_tensors_info(self) -> ActiveArrayInfo:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_tensors_name	pyvista/core/dataset.py	/^    def active_tensors_name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_tensors_name	pyvista/core/dataset.py	/^    def active_tensors_name(self, name: str):  # numpydoc ignore=GL08$/;"	m	class:DataSet
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102  # numpydoc ignore=RT01$/;"	m	class:EnSightReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102  # numpydoc ignore=RT01$/;"	m	class:PVDReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # numpydoc ignore=RT01$/;"	m	class:TimeReader
active_vectors	pyvista/core/dataset.py	/^    def active_vectors(self) -> Optional[pyvista_ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_vectors	pyvista/core/datasetattributes.py	/^    def active_vectors(self) -> Optional[np.ndarray]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_vectors_info	pyvista/core/dataset.py	/^    def active_vectors_info(self) -> ActiveArrayInfo:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_vectors_name	pyvista/core/dataset.py	/^    def active_vectors_name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:DataSet
active_vectors_name	pyvista/core/dataset.py	/^    def active_vectors_name(self, name: str):  # numpydoc ignore=GL08$/;"	m	class:DataSet
active_vectors_name	pyvista/core/datasetattributes.py	/^    def active_vectors_name(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
active_vectors_name	pyvista/core/datasetattributes.py	/^    def active_vectors_name(self, name: str) -> None:  # numpydoc ignore=GL08$/;"	m	class:DataSetAttributes
actor	examples/02-plot/backface_props.py	/^actor = plotter.add_mesh(catalan, color='dodgerblue', smooth_shading=True)$/;"	v
actor	examples/02-plot/background_image.py	/^actor = pl.add_mesh(earth_alt, cmap='gist_earth')$/;"	v
actor	examples/02-plot/background_image.py	/^actor = pl.add_mesh(examples.load_airplane(), smooth_shading=True)$/;"	v
actor	examples/02-plot/background_image.py	/^actor = pl.add_mesh(topo, cmap='gist_earth')$/;"	v
actor	examples/02-plot/clear.py	/^actor = plotter.add_mesh(pv.Sphere())$/;"	v
actor	examples/02-plot/lookup-table.py	/^actor = pl.add_mesh(bracket)$/;"	v
actor	examples/02-plot/lookup-table.py	/^actor = pl.add_mesh(bracket, cmap=lut, lighting=False)$/;"	v
actor	examples/02-plot/point-clouds.py	/^actor = pl.add_points($/;"	v
actor	examples/03-widgets/animation.py	/^actor = pl.add_mesh(sphere)$/;"	v
actor	examples/03-widgets/checkbox-widget.py	/^actor = p.add_mesh(mesh)$/;"	v
actor	examples/99-advanced/add-example.py	/^actor = pl.add_mesh(dataset)$/;"	v
actor	examples/99-advanced/add-example.py	/^actor = pl.add_mesh(sphere)$/;"	v
actor	examples_trame/advanced/contour.py	/^actor = pl.add_mesh(contour, cmap="viridis", clim=data_range)$/;"	v
actor	examples_trame/advanced/custom_ui.py	/^actor = plotter.add_mesh(mesh, cmap="viridis")$/;"	v
actor	examples_trame/basic/PyVistaLocalView.py	/^actor = plotter.add_mesh(mesh)$/;"	v
actor	examples_trame/basic/PyVistaRemoteLocalView.py	/^actor = plotter.add_mesh(mesh, cmap="viridis")$/;"	v
actor	examples_trame/basic/PyVistaRemoteView.py	/^actor = plotter.add_mesh(mesh, cmap="viridis")$/;"	v
actor	examples_trame/basic/actor_color.py	/^actor = pl.add_mesh(mesh, color='seagreen')$/;"	v
actor	examples_trame/basic/mesh_scalars.py	/^actor = pl.add_mesh(mesh)$/;"	v
actor	examples_trame/basic/ui_template.py	/^actor = plotter.add_mesh(mesh, cmap="viridis")$/;"	v
actor	examples_trame/validation/many_actors.py	/^        actor = plotter.add_mesh(pv.Sphere(center=(i, j, 0)))$/;"	v
actor	pyvista/plotting/tools.py	/^        actor = axes_actor$/;"	v
actor	pyvista/plotting/tools.py	/^        actor = prop_assembly$/;"	v
actor	tests/plotting/test_actor.py	/^def actor():$/;"	f
actor	tests/test.py	/^actor = pl.add_mesh(pyvista.Cone())$/;"	v
actor_from_multi_block	tests/plotting/test_actor.py	/^def actor_from_multi_block():$/;"	f
actors	examples/02-plot/volume.py	/^actors = pl.add_volume(bolt_nut, cmap="coolwarm", opacity="sigmoid_5", show_scalar_bar=False)$/;"	v
actors	pyvista/plotting/plotter.py	/^    def actors(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
actors	pyvista/plotting/renderer.py	/^    def actors(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
actors	pyvista/trame/ui/base_viewer.py	/^    def actors(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
actual_memory_size	pyvista/core/dataobject.py	/^    def actual_memory_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:DataObject
add_actor	pyvista/plotting/plotter.py	/^    def add_actor(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_actor	pyvista/plotting/renderer.py	/^    def add_actor($/;"	m	class:Renderer
add_affine_transform_widget	pyvista/plotting/widgets.py	/^    def add_affine_transform_widget($/;"	m	class:WidgetHelper
add_arrows	pyvista/plotting/plotter.py	/^    def add_arrows(self, cent, direction, mag=1, **kwargs):$/;"	m	class:BasePlotter
add_axes	pyvista/plotting/plotter.py	/^    def add_axes(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_axes	pyvista/plotting/renderer.py	/^    def add_axes($/;"	m	class:Renderer
add_axes_at_origin	pyvista/plotting/plotter.py	/^    def add_axes_at_origin(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_axes_at_origin	pyvista/plotting/renderer.py	/^    def add_axes_at_origin($/;"	m	class:Renderer
add_background_image	pyvista/plotting/plotter.py	/^    def add_background_image(self, image_path, scale=1.0, auto_resize=True, as_global=True):$/;"	m	class:BasePlotter
add_background_renderer	pyvista/plotting/renderers.py	/^    def add_background_renderer(self, image_path, scale, as_global):$/;"	m	class:Renderers
add_blur_pass	pyvista/plotting/render_passes.py	/^    def add_blur_pass(self):$/;"	m	class:RenderPasses
add_blurring	pyvista/plotting/plotter.py	/^    def add_blurring(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_blurring	pyvista/plotting/renderer.py	/^    def add_blurring(self):$/;"	m	class:Renderer
add_border	pyvista/plotting/renderer.py	/^    def add_border(self, color='white', width=2.0):$/;"	m	class:Renderer
add_bounding_box	pyvista/plotting/plotter.py	/^    def add_bounding_box(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_bounding_box	pyvista/plotting/renderer.py	/^    def add_bounding_box($/;"	m	class:Renderer
add_box_widget	pyvista/plotting/widgets.py	/^    def add_box_widget($/;"	m	class:WidgetHelper
add_camera_orientation_widget	pyvista/plotting/widgets.py	/^    def add_camera_orientation_widget(self, animate=True, n_frames=20):$/;"	m	class:WidgetHelper
add_cell_helper	examples/00-load/linear-cells.py	/^def add_cell_helper(pl, text, grid, subplot, cpos=None):$/;"	f
add_chart	pyvista/plotting/charts.py	/^    def add_chart(self, *charts):$/;"	m	class:Charts
add_chart	pyvista/plotting/plotter.py	/^    def add_chart(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_chart	pyvista/plotting/renderer.py	/^    def add_chart(self, chart, *charts):$/;"	m	class:Renderer
add_checkbox_button_widget	pyvista/plotting/widgets.py	/^    def add_checkbox_button_widget($/;"	m	class:WidgetHelper
add_composite	pyvista/plotting/plotter.py	/^    def add_composite($/;"	m	class:BasePlotter
add_cursor	pyvista/plotting/plotter.py	/^    def add_cursor($/;"	m	class:Plotter
add_field_data	pyvista/core/dataobject.py	/^    def add_field_data(self, array: np.ndarray, name: str, deep=True):$/;"	m	class:DataObject
add_floor	pyvista/plotting/plotter.py	/^    def add_floor(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_floor	pyvista/plotting/renderer.py	/^    def add_floor($/;"	m	class:Renderer
add_function	pyvista/core/utilities/reader.py	/^    def add_function(self, value: Union[int, Plot3DFunctionEnum]):$/;"	m	class:MultiBlockPlot3DReader
add_ids_algorithm	pyvista/plotting/utilities/algorithms.py	/^def add_ids_algorithm(inp, point_ids=True, cell_ids=True):$/;"	f
add_key_event	pyvista/plotting/plotter.py	/^    def add_key_event(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_key_event	pyvista/plotting/render_window_interactor.py	/^    def add_key_event(self, key, callback):$/;"	m	class:RenderWindowInteractor
add_legend	pyvista/plotting/plotter.py	/^    def add_legend(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_legend	pyvista/plotting/renderer.py	/^    def add_legend($/;"	m	class:Renderer
add_legend_scale	pyvista/plotting/plotter.py	/^    def add_legend_scale(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_legend_scale	pyvista/plotting/renderer.py	/^    def add_legend_scale($/;"	m	class:Renderer
add_light	pyvista/plotting/plotter.py	/^    def add_light(self, light, only_active=False):$/;"	m	class:BasePlotter
add_light	pyvista/plotting/renderer.py	/^    def add_light(self, light):$/;"	m	class:Renderer
add_line_widget	pyvista/plotting/widgets.py	/^    def add_line_widget($/;"	m	class:WidgetHelper
add_lines	pyvista/plotting/plotter.py	/^    def add_lines(self, lines, color='w', width=5, label=None, name=None, connected=False):$/;"	m	class:BasePlotter
add_measurement_widget	pyvista/plotting/widgets.py	/^    def add_measurement_widget($/;"	m	class:WidgetHelper
add_menu	pyvista/trame/jupyter.py	/^        add_menu=add_menu,$/;"	v
add_menu_items	pyvista/trame/jupyter.py	/^        add_menu_items=add_menu_items,$/;"	v
add_mesh	pyvista/plotting/plotter.py	/^    def add_mesh($/;"	m	class:BasePlotter
add_mesh_clip_box	pyvista/plotting/widgets.py	/^    def add_mesh_clip_box($/;"	m	class:WidgetHelper
add_mesh_clip_plane	pyvista/plotting/widgets.py	/^    def add_mesh_clip_plane($/;"	m	class:WidgetHelper
add_mesh_isovalue	pyvista/plotting/widgets.py	/^    def add_mesh_isovalue($/;"	m	class:WidgetHelper
add_mesh_slice	pyvista/plotting/widgets.py	/^    def add_mesh_slice($/;"	m	class:WidgetHelper
add_mesh_slice_orthogonal	pyvista/plotting/widgets.py	/^    def add_mesh_slice_orthogonal($/;"	m	class:WidgetHelper
add_mesh_slice_spline	pyvista/plotting/widgets.py	/^    def add_mesh_slice_spline($/;"	m	class:WidgetHelper
add_mesh_threshold	pyvista/plotting/widgets.py	/^    def add_mesh_threshold($/;"	m	class:WidgetHelper
add_module_names	doc/source/conf.py	/^add_module_names = False$/;"	v
add_observer	pyvista/plotting/render_window_interactor.py	/^            def add_observer(self, event, callback):$/;"	m	class:_style_factory._make_class.CustomStyle
add_observer	pyvista/plotting/render_window_interactor.py	/^    def add_observer(self, event, call):$/;"	m	class:RenderWindowInteractor
add_on_render_callback	pyvista/plotting/plotter.py	/^    def add_on_render_callback(self, callback, render_event=False):$/;"	m	class:BasePlotter
add_orientation_widget	pyvista/plotting/plotter.py	/^    def add_orientation_widget(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_orientation_widget	pyvista/plotting/renderer.py	/^    def add_orientation_widget($/;"	m	class:Renderer
add_pick_obeserver	pyvista/plotting/render_window_interactor.py	/^    def add_pick_obeserver(self, observer):$/;"	m	class:RenderWindowInteractor
add_plane_widget	pyvista/plotting/widgets.py	/^    def add_plane_widget($/;"	m	class:WidgetHelper
add_point_labels	pyvista/plotting/plotter.py	/^    def add_point_labels($/;"	m	class:BasePlotter
add_point_scalar_labels	pyvista/plotting/plotter.py	/^    def add_point_scalar_labels(self, points, labels, fmt=None, preamble='', **kwargs):$/;"	m	class:BasePlotter
add_points	pyvista/plotting/plotter.py	/^    def add_points(self, points, style='points', **kwargs):$/;"	m	class:BasePlotter
add_q_files	pyvista/core/utilities/reader.py	/^    def add_q_files(self, files):$/;"	m	class:MultiBlockPlot3DReader
add_renderer	pyvista/plotting/lights.py	/^    def add_renderer(self, renderer):$/;"	m	class:Light
add_ruler	pyvista/plotting/plotter.py	/^    def add_ruler(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_ruler	pyvista/plotting/renderer.py	/^    def add_ruler($/;"	m	class:Renderer
add_scalar_bar	pyvista/plotting/plotter.py	/^    def add_scalar_bar(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_scalar_bar	pyvista/plotting/scalar_bars.py	/^    def add_scalar_bar($/;"	m	class:ScalarBars
add_silhouette	pyvista/plotting/plotter.py	/^    def add_silhouette($/;"	m	class:BasePlotter
add_slider_widget	pyvista/plotting/widgets.py	/^    def add_slider_widget($/;"	m	class:WidgetHelper
add_sphere_widget	pyvista/plotting/widgets.py	/^    def add_sphere_widget($/;"	m	class:WidgetHelper
add_spline_widget	pyvista/plotting/widgets.py	/^    def add_spline_widget($/;"	m	class:WidgetHelper
add_text	pyvista/plotting/plotter.py	/^    def add_text($/;"	m	class:BasePlotter
add_text_slider_widget	pyvista/plotting/widgets.py	/^    def add_text_slider_widget($/;"	m	class:WidgetHelper
add_timer_event	pyvista/plotting/plotter.py	/^    def add_timer_event(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_timer_event	pyvista/plotting/render_window_interactor.py	/^    def add_timer_event(self, max_steps, duration, callback):$/;"	m	class:RenderWindowInteractor
add_title	pyvista/plotting/plotter.py	/^    def add_title(self, title, font_size=18, color=None, font=None, shadow=False):$/;"	m	class:Plotter
add_volume	pyvista/plotting/plotter.py	/^    def add_volume($/;"	m	class:BasePlotter
add_volume_clip_plane	pyvista/plotting/widgets.py	/^    def add_volume_clip_plane($/;"	m	class:WidgetHelper
adjust_edge_curvatures	curvatures_adjust_edges.py	/^def adjust_edge_curvatures(source, curvature_name, epsilon=1.0e-08):$/;"	f
adjust_edge_curvatures	examples/01-filter/curvatures_adjust_edges.py	/^def adjust_edge_curvatures(source, curvature_name, epsilon=1.0e-08):$/;"	f
adjust_ranges	curvatures_adjust_edges.py	/^def adjust_ranges(bands, freq):$/;"	f
adjust_ranges	examples/01-filter/curvatures_adjust_edges.py	/^def adjust_ranges(bands, freq):$/;"	f
aero_sandbox	doc/source/make_external_gallery.py	/^    aero_sandbox=Example($/;"	v
agree	examples/99-advanced/antarctica-compare.py	/^agree = flow_a.dot(flow_b.mean(0))$/;"	v
agree	examples/99-advanced/antarctica-compare.py	/^agree = flow_b.dot(flow_a.mean(0))$/;"	v
air	examples/99-advanced/openfoam-tubes.py	/^air = block[0]$/;"	v
airplane	examples/01-filter/reflect.py	/^airplane = examples.load_airplane()$/;"	v
airplane	tests/conftest.py	/^def airplane():$/;"	f
airplane	tests/test_meshio.py	/^airplane = examples.load_airplane().cast_to_unstructured_grid()$/;"	v
airplane_reflected	examples/01-filter/reflect.py	/^airplane_reflected = airplane.reflect((0, 0, 1), point=(0, 0, -100))$/;"	v
algo	examples/99-advanced/customization-trame-toolbar.py	/^algo = pv.ConeSource()$/;"	v
algo	examples/99-advanced/plotting-algorithms.py	/^algo = pv.ConeSource()$/;"	v
algo	pyvista/core/utilities/geometric_objects.py	/^    algo = ConeSource($/;"	v
algorithm_to_mesh_handler	pyvista/plotting/utilities/algorithms.py	/^def algorithm_to_mesh_handler(mesh_or_algo, port=0):$/;"	f
alien	examples/00-load/create-pixel-art.py	/^alien = []$/;"	v
align	pyvista/core/filters/data_set.py	/^    def align($/;"	m	class:DataSetFilters
all_attenuation_values	examples/04-lights/attenuation.py	/^all_attenuation_values = [(1, 0, 0), (0, 2, 0), (0, 0, 2)]$/;"	v
all_attenuation_values	examples/04-lights/attenuation.py	/^all_attenuation_values = [(2, 0, 0), (0, 2, 0), (0, 0, 2)]$/;"	v
all_cell_arrays_status	pyvista/core/utilities/reader.py	/^    def all_cell_arrays_status(self):$/;"	m	class:PointCellDataSelection
all_patch_arrays_status	pyvista/core/utilities/reader.py	/^    def all_patch_arrays_status(self):  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
all_point_arrays_status	pyvista/core/utilities/reader.py	/^    def all_point_arrays_status(self):$/;"	m	class:PointCellDataSelection
all_regions	examples/01-filter/connectivity.py	/^all_regions = pine_roots.connectivity('all')$/;"	v
alpha	examples/99-advanced/sphere_eversion.py	/^alpha = alpha_final$/;"	v
alpha_final	examples/99-advanced/sphere_eversion.py	/^alpha_final = 1  # arbitrary > 1$/;"	v
alpha_range	pyvista/plotting/lookup_table.py	/^    def alpha_range(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
alpha_range	pyvista/plotting/lookup_table.py	/^    def alpha_range(self, value: tuple):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
alphas	examples/02-plot/chart_basics.py	/^alphas = [0.5 + i for i in range(5)]$/;"	v
alphas	examples/99-advanced/sphere_eversion.py	/^alphas = np.linspace(0, alpha_final, n_steps)$/;"	v
alphas	examples/99-advanced/sphere_eversion.py	/^alphas = np.linspace(alpha_final, 0, n_steps + 1)[1:]$/;"	v
always_visible	examples/00-load/create-polyhedron.py	/^    always_visible=True,$/;"	v
ambient	examples/02-plot/point-clouds.py	/^    ambient=0.7,$/;"	v
ambient	examples/02-plot/point-clouds.py	/^    ambient=1.0,$/;"	v
ambient	examples/04-lights/shadows.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/atomic-orbitals.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/fea-hertzian-contact-pressure.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/magnetic-fields.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/pump-bracket.py	/^    ambient=0.2,$/;"	v
ambient	pyvista/plotting/_property.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
ambient	pyvista/plotting/_property.py	/^    def ambient(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
ambient	pyvista/plotting/themes.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
ambient	pyvista/plotting/themes.py	/^    def ambient(self, ambient: float):  # numpydoc ignore=GL08$/;"	m	class:_LightingConfig
ambient	pyvista/plotting/volume_property.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
ambient	pyvista/plotting/volume_property.py	/^    def ambient(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
ambient_color	pyvista/plotting/_property.py	/^    def ambient_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
ambient_color	pyvista/plotting/_property.py	/^    def ambient_color(self, value):  # numpydoc ignore=GL08$/;"	m	class:Property
ambient_color	pyvista/plotting/lights.py	/^    def ambient_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
ambient_color	pyvista/plotting/lights.py	/^    def ambient_color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Light
analytical_integral_rppd	examples/99-advanced/warp-by-vector-eigenmodes.py	/^def analytical_integral_rppd(p, q, r, a, b, c):$/;"	f
angle	examples/02-plot/plot-over-circular-arc.py	/^angle = 90.0$/;"	v
angle	pyvista/core/utilities/geometric_objects.py	/^        angle=angle,$/;"	v
angle	pyvista/core/utilities/geometric_sources.py	/^    def angle(self) -> float:$/;"	m	class:ConeSource
angle	pyvista/core/utilities/geometric_sources.py	/^    def angle(self, angle: float):$/;"	m	class:ConeSource
angle_to_range	examples/01-filter/flying_edges.py	/^def angle_to_range(angle):$/;"	f
angle_u	examples/02-plot/moving_cmap.py	/^angle_u = np.linspace(-np.pi, np.pi, 400)$/;"	v
angle_v	examples/02-plot/moving_cmap.py	/^angle_v = np.linspace(0, np.pi, 200)$/;"	v
anisotropy	pyvista/plotting/_property.py	/^    def anisotropy(self):  # numpydoc ignore=RT01$/;"	m	class:Property
anisotropy	pyvista/plotting/_property.py	/^    def anisotropy(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
anisotropy	pyvista/plotting/actor_properties.py	/^    def anisotropy(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
anisotropy	pyvista/plotting/actor_properties.py	/^    def anisotropy(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
anisotropy_rotation	pyvista/plotting/actor_properties.py	/^    def anisotropy_rotation(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
anisotropy_rotation	pyvista/plotting/actor_properties.py	/^    def anisotropy_rotation(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
annotations	examples/02-plot/scalar-bars.py	/^annotations = {$/;"	v
annotations	pyvista/plotting/lookup_table.py	/^    def annotations(self) -> dict:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
annotations	pyvista/plotting/lookup_table.py	/^    def annotations(self, values: Optional[dict]):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
ant	tests/conftest.py	/^def ant():$/;"	f
antfile	pyvista/examples/examples.py	/^antfile = os.path.join(dir_path, 'ant.ply')$/;"	v
anti_aliasing	examples/99-advanced/pump-bracket.py	/^    anti_aliasing='fxaa',$/;"	v
anti_aliasing	pyvista/plotting/themes.py	/^    def anti_aliasing(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:Theme
anti_aliasing	pyvista/plotting/themes.py	/^    def anti_aliasing(self, anti_aliasing: Union[str, None]):  # numpydoc ignore=GL08$/;"	m	class:Theme
anvil_cirrus_plumes	doc/source/make_external_gallery.py	/^    anvil_cirrus_plumes=Example($/;"	v
append	pyvista/core/composite.py	/^    def append(self, dataset: Optional[_TypeMultiBlockLeaf], name: Optional[str] = None):$/;"	m	class:MultiBlock
append_polydata	pyvista/core/filters/poly_data.py	/^    def append_polydata($/;"	m	class:PolyDataFilters
apply_cmap	pyvista/plotting/lookup_table.py	/^    def apply_cmap(self, cmap, n_values: int = 256, flip: bool = False):$/;"	m	class:LookupTable
apply_lookup_table	pyvista/plotting/volume_property.py	/^    def apply_lookup_table(self, lookup_table: 'pv.LookupTable'):$/;"	m	class:VolumeProperty
apply_opacity	pyvista/plotting/lookup_table.py	/^    def apply_opacity(self, opacity, interpolate: bool = True, kind: str = 'quadratic'):$/;"	m	class:LookupTable
apply_transformation_to_points	pyvista/core/utilities/transformations.py	/^def apply_transformation_to_points(transformation, points, inplace=False):$/;"	f
aprox_le	tests/core/test_dataset_filters.py	/^def aprox_le(a, b, rtol=1e-5, atol=1e-8):$/;"	f
arc	examples/00-load/create-parametric-geometric-objects.py	/^arc = pv.CircularArc(pointa, pointb, center, resolution)$/;"	v
arc	examples/02-plot/plot-over-circular-arc.py	/^arc = pv.CircularArcFromNormal(center, 100, normal, polar, angle)$/;"	v
area	examples/01-filter/integrate-data.py	/^area = integrated_data["Area"][0]$/;"	v
area	pyvista/core/dataset.py	/^    def area(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:DataSet
area	pyvista/core/pointset.py	/^    def area(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointSet
area	pyvista/plotting/charts.py	/^    def area(self, x, y1, y2=None, color="b", label=""):$/;"	m	class:Chart2D
area_plot	tests/plotting/test_charts.py	/^def area_plot(chart_2d):$/;"	f
args	tests/check_doctest_names.py	/^    args = parser.parse_args()$/;"	v
arial	pyvista/plotting/tools.py	/^    arial = _vtk.VTK_ARIAL$/;"	v	class:FONTS
arr	examples/03-widgets/line-widget.py	/^arr = np.linalg.norm(mesh['velocity'], axis=1)$/;"	v
array_from_vtkmatrix	pyvista/core/utilities/arrays.py	/^def array_from_vtkmatrix(matrix):$/;"	f
array_name	pyvista/plotting/mapper.py	/^    def array_name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
array_name	pyvista/plotting/mapper.py	/^    def array_name(self, name: str):  # numpydoc ignore=GL08$/;"	m	class:_BaseMapper
array_names	pyvista/core/dataset.py	/^    def array_names(self) -> List[str]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
arrow	examples/00-load/create-geometric-objects.py	/^arrow = pv.Arrow()$/;"	v
arrow	pyvista/core/utilities/geometric_objects.py	/^    arrow = _vtk.vtkArrowSource()$/;"	v
arrows	examples/00-load/create-point-cloud.py	/^arrows = point_cloud.glyph($/;"	v
arrows	examples/01-filter/contouring.py	/^arrows = mesh.glyph(scale="Normals", orient="Normals", tolerance=0.05)$/;"	v
arrows	examples/01-filter/glyphs.py	/^arrows = mesh.glyph(scale="Normals", orient="Normals", tolerance=0.05)$/;"	v
arrows	examples_trame/basic/multi_views.py	/^arrows = mesh.glyph(scale="Normals", orient="Normals", tolerance=0.05)$/;"	v
arrows	pyvista/core/dataset.py	/^    def arrows(self) -> Optional[pyvista.PolyData]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
articles	doc/source/make_external_gallery.py	/^articles = dict($/;"	v
as_polydata_blocks	pyvista/core/composite.py	/^    def as_polydata_blocks(self, copy=False):$/;"	m	class:MultiBlock
as_rgba	pyvista/plotting/mapper.py	/^    def as_rgba(self):  # numpydoc ignore=GL08$/;"	m	class:DataSetMapper
assemble_mass_and_stiffness	examples/99-advanced/warp-by-vector-eigenmodes.py	/^def assemble_mass_and_stiffness(N, F, geom_params, cijkl):$/;"	f
assert_area	tests/core/test_dataset.py	/^    def assert_area(grid):$/;"	f	function:test_volume_area
assert_empty_kwargs	pyvista/core/utilities/misc.py	/^def assert_empty_kwargs(**kwargs):$/;"	f
assert_volume	tests/core/test_dataset.py	/^    def assert_volume(grid):$/;"	f	function:test_volume_area
atmos_conv	doc/source/make_external_gallery.py	/^    atmos_conv=Example($/;"	v
atmosphere_texture	examples/99-advanced/planets.py	/^atmosphere_texture = examples.planets.download_venus_surface(atmosphere=True, texture=True)$/;"	v
atomize	pyvista/demos/logo.py	/^def atomize(grid, shift_fac=0.1, scale=0.9):$/;"	f
attach_export	pyvista/trame/ui/vuetify2.py	/^            def attach_export():$/;"	f	function:Viewer.ui_controls
attach_export	pyvista/trame/ui/vuetify3.py	/^            def attach_export():$/;"	f	function:Viewer.ui_controls
attach_screenshot	pyvista/trame/ui/vuetify2.py	/^                def attach_screenshot():$/;"	f	function:Viewer.ui_controls
attach_screenshot	pyvista/trame/ui/vuetify3.py	/^                def attach_screenshot():$/;"	f	function:Viewer.ui_controls
attenuation_values	examples/04-lights/shadows.py	/^    attenuation_values=(2, 0, 0),$/;"	v
attenuation_values	pyvista/plotting/lights.py	/^    def attenuation_values(self):  # numpydoc ignore=RT01$/;"	m	class:Light
attenuation_values	pyvista/plotting/lights.py	/^    def attenuation_values(self, values):  # numpydoc ignore=GL08$/;"	m	class:Light
attr_type	pyvista/core/datasetattributes.py	/^attr_type = [$/;"	v
author	doc/source/conf.py	/^author = "Alex Kaszynski and Bane Sullivan"$/;"	v
auto_close	pyvista/_plot.py	/^        auto_close=auto_close,$/;"	v
auto_close	pyvista/_plot.py	/^    auto_close = kwargs.get('auto_close')$/;"	v
auto_close	pyvista/plotting/themes.py	/^    def auto_close(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
auto_close	pyvista/plotting/themes.py	/^    def auto_close(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
auto_detect_format	pyvista/core/utilities/reader.py	/^    def auto_detect_format(self):  # numpydoc ignore=RT01$/;"	m	class:MultiBlockPlot3DReader
auto_detect_format	pyvista/core/utilities/reader.py	/^    def auto_detect_format(self, value):  # numpydoc ignore=GL08$/;"	m	class:MultiBlockPlot3DReader
autoclose_plotters	pyvista/conftest.py	/^def autoclose_plotters():$/;"	f
autodoc_type_aliases	doc/source/conf.py	/^autodoc_type_aliases = {"Chart": "pyvista.Chart", "ColorLike": "pyvista.ColorLike"}$/;"	v
autosummary_context	doc/source/conf.py	/^autosummary_context = {$/;"	v
average_velocity	examples/01-filter/integrate-data.py	/^average_velocity = total_flow_rate \/ area$/;"	v
axes	examples/01-filter/rotate.py	/^axes = pv.Axes(show_actor=True, actor_scale=2.0, line_width=5)$/;"	v
axes	pyvista/plotting/affine_widget.py	/^    def axes(self):$/;"	m	class:AffineWidget3D
axes	pyvista/plotting/affine_widget.py	/^    def axes(self, axes):  # numpydoc ignore=GL08$/;"	m	class:AffineWidget3D
axes	pyvista/plotting/themes.py	/^    def axes(self) -> _AxesConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
axes	pyvista/plotting/themes.py	/^    def axes(self, config: _AxesConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
axes	tests/plotting/test_axes.py	/^def axes():$/;"	f
axes_actor	pyvista/plotting/tools.py	/^    axes_actor = _vtk.vtkAnnotatedCubeActor()$/;"	v
axes_actor	pyvista/plotting/tools.py	/^    axes_actor = _vtk.vtkAxesActor()$/;"	v
axes_actor	tests/plotting/test_axes.py	/^def axes_actor(axes):$/;"	f
axes_enabled	pyvista/plotting/renderer.py	/^    def axes_enabled(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
axes_ranges	examples/01-filter/image-fft-perlin-noise.py	/^    axes_ranges=(0, max_freq, 0, max_freq, 0, warped_subset.bounds[-1]),$/;"	v
axes_ranges	examples/02-plot/bounds.py	/^    axes_ranges=[0, x_size, 0, y_size, 0, z_size],$/;"	v
axial_num_puppies	examples/02-plot/texture.py	/^axial_num_puppies = 4$/;"	v
axis	examples/02-plot/spherical.py	/^    axis=1,$/;"	v
axis	tests/plotting/test_charts.py	/^def axis(chart_2d):$/;"	f
axis_angle_rotation	pyvista/core/utilities/transformations.py	/^def axis_angle_rotation(axis, angle, point=None, deg=True):$/;"	f
axis_rotation	pyvista/core/utilities/helpers.py	/^def axis_rotation(points, angle, inplace=False, deg=True, axis='z'):$/;"	f
azimuth	pyvista/plotting/camera.py	/^    def azimuth(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
azimuth	pyvista/plotting/camera.py	/^    def azimuth(self, angle):  # numpydoc ignore=GL08$/;"	m	class:Camera
b	examples/00-load/create-kochanek-spline.py	/^b = [-1.0, -0.5, 0.0, 0.5, 1.0]$/;"	v
b	examples/01-filter/compute-volume.py	/^    b = bodies[key]$/;"	v
b	examples/01-filter/geodesic.py	/^b = land.geodesic(cape_town, bangkok)$/;"	v
b	examples/01-filter/slicing.py	/^b = mesh.center - normal * mesh.length \/ 3.0$/;"	v
b	examples/02-plot/plot-over-circular-arc.py	/^b = arc.points[-1]$/;"	v
b	examples/02-plot/plot-over-line.py	/^b = [mesh.bounds[1], mesh.bounds[3], mesh.bounds[5]]$/;"	v
b	examples/02-plot/plot-over-line.py	/^b = [mesh.center[0], mesh.bounds[3], mesh.bounds[5]]$/;"	v
b	examples/99-advanced/antarctica-compare.py	/^b = extract_node(20)$/;"	v
b	examples/99-advanced/fea-hertzian-contact-pressure.py	/^b = [0.095, ypos, 0.2 - 1e-4]$/;"	v
backface_culling	pyvista/demos/logo.py	/^        backface_culling=True,$/;"	v
backface_params	examples/02-plot/backface_props.py	/^    backface_params={'color': 'r'},$/;"	v
backface_params	examples/02-plot/backface_props.py	/^    backface_params={'color': [0.2, 0.2, 0.2]},$/;"	v
backface_params	examples/02-plot/backface_props.py	/^backface_params = dict(color='mediumseagreen', specular=1.0, specular_power=50.0)$/;"	v
backface_params	examples/02-plot/backface_props.py	/^backface_params = dict(color='orangered')$/;"	v
backface_params	examples/02-plot/backface_props.py	/^backface_params = dict(opacity=0.5)$/;"	v
backface_params	examples/99-advanced/sphere_eversion.py	/^    backface_params=dict(color='forestgreen'),$/;"	v
backface_prop	pyvista/plotting/actor.py	/^    def backface_prop(self) -> Optional['pv.Property']:  # numpydoc ignore=RT01$/;"	m	class:Actor
backface_prop	pyvista/plotting/actor.py	/^    def backface_prop(self, value: 'pv.Property'):  # numpydoc ignore=GL08$/;"	m	class:Actor
background	examples/00-load/create-truss.py	/^    background='w',$/;"	v
background	examples/01-filter/sampling_functions_3d.py	/^    background='white',$/;"	v
background	examples/99-advanced/atomic-orbitals.py	/^    background='k',$/;"	v
background	pyvista/plotting/themes.py	/^    def background(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
background	pyvista/plotting/themes.py	/^    def background(self, new_background: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
background_color	pyvista/plotting/charts.py	/^    def background_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
background_color	pyvista/plotting/charts.py	/^    def background_color(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
background_color	pyvista/plotting/plotter.py	/^    def background_color(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
background_color	pyvista/plotting/plotter.py	/^    def background_color(self, color):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
background_color	pyvista/plotting/renderer.py	/^    def background_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
background_color	pyvista/plotting/renderer.py	/^    def background_color(self, color):  # numpydoc ignore=GL08$/;"	m	class:Renderer
background_color	pyvista/plotting/text.py	/^    def background_color(self) -> Color:$/;"	m	class:TextProperty
background_color	pyvista/plotting/text.py	/^    def background_color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
background_opacity	pyvista/plotting/text.py	/^    def background_opacity(self) -> float:$/;"	m	class:TextProperty
background_opacity	pyvista/plotting/text.py	/^    def background_opacity(self, opacity: float):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
background_texture	pyvista/plotting/charts.py	/^    def background_texture(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
background_texture	pyvista/plotting/charts.py	/^    def background_texture(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
bangkok	examples/01-filter/geodesic.py	/^bangkok = land.find_closest_point((-0.177077, 0.955419, 0.236273))$/;"	v
bar	pyvista/plotting/charts.py	/^    def bar(self, x, y, color=None, orientation="V", label=None):$/;"	m	class:Chart2D
bar_plot	tests/plotting/test_charts.py	/^def bar_plot(chart_2d):$/;"	f
barth_sextic	examples/01-filter/flying_edges.py	/^def barth_sextic(x, y, z):$/;"	f
base_array_names	pyvista/core/utilities/reader.py	/^    def base_array_names(self):  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
base_array_status	pyvista/core/utilities/reader.py	/^    def base_array_status(self, name: str) -> bool:$/;"	m	class:CGNSReader
base_mesh	examples/04-lights/shadows.py	/^base_mesh = pyvista.Cube(center, width, length, height)$/;"	v
base_url	pyvista/examples/downloads.py	/^    base_url=SOURCE,$/;"	v
base_url	pyvista/examples/gltf.py	/^    base_url='https:\/\/raw.githubusercontent.com\/KhronosGroup\/glTF-Sample-Models\/master\/2.0\/',$/;"	v
beam	tests/test_meshio.py	/^beam = pv.UnstructuredGrid(examples.hexbeamfile)$/;"	v
before_close_callback	pyvista/_plot.py	/^        before_close_callback=before_close_callback,$/;"	v
before_close_callback	pyvista/_plot.py	/^    before_close_callback = kwargs.pop('before_close_callback', None)$/;"	v
before_close_callback	pyvista/plotting/themes.py	/^    def before_close_callback($/;"	m	class:Theme
before_close_callback	pyvista/plotting/themes.py	/^    def before_close_callback(self) -> Callable[['pyvista.Plotter'], None]:  # numpydoc ignore=RT01$/;"	m	class:Theme
behavior	pyvista/plotting/charts.py	/^    def behavior(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
behavior	pyvista/plotting/charts.py	/^    def behavior(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
below_color	examples/01-filter/connectivity.py	/^    below_color='blue',$/;"	v
below_range_color	pyvista/plotting/lookup_table.py	/^    def below_range_color(self) -> Optional[Color]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
below_range_color	pyvista/plotting/lookup_table.py	/^    def below_range_color(self, value: Union[bool, ColorLike]):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
below_range_color	pyvista/plotting/themes.py	/^    def below_range_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
below_range_color	pyvista/plotting/themes.py	/^    def below_range_color(self, value: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
below_range_opacity	pyvista/plotting/lookup_table.py	/^    def below_range_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
below_range_opacity	pyvista/plotting/lookup_table.py	/^    def below_range_opacity(self, value):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
beta	examples/99-advanced/sphere_eversion.py	/^beta = 1  # arbitrary > 1$/;"	v
betas	examples/02-plot/chart_basics.py	/^betas = [*reversed(alphas)]$/;"	v
billboard	examples/04-lights/attenuation.py	/^billboard = pv.Plane(direction=(1, 0, 0), i_size=6, j_size=6)$/;"	v
black	examples/02-plot/cmap.py	/^black = np.array([11 \/ 256, 11 \/ 256, 11 \/ 256, 1.0])$/;"	v
blend_mode	pyvista/plotting/mapper.py	/^    def blend_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
blend_mode	pyvista/plotting/mapper.py	/^    def blend_mode(self, value: Union[str, int]):  # numpydoc ignore=GL08$/;"	m	class:_BaseVolumeMapper
block	examples/00-load/load-gltf.py	/^block = pyvista.read(helmet_file)$/;"	v
block	examples/99-advanced/openfoam-tubes.py	/^block = examples.download_openfoam_tubes()$/;"	v
block_attr	pyvista/plotting/composite_mapper.py	/^    def block_attr(self) -> CompositeAttributes:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
block_attr	tests/plotting/mappers/test_composite_mapper.py	/^def block_attr(block_attributes):$/;"	f
block_attributes	tests/plotting/mappers/test_composite_mapper.py	/^def block_attributes(composite_mapper):$/;"	f
blocks	examples/02-plot/composite-picking.py	/^blocks = pv.MultiBlock([make_poly() for _ in range(100)])$/;"	v
blue	examples/02-plot/cmap.py	/^blue = np.array([12 \/ 256, 238 \/ 256, 246 \/ 256, 1.0])$/;"	v
bodies	examples/01-filter/compute-volume.py	/^bodies = channels.split_bodies()$/;"	v
bodies	examples/01-filter/compute-volume.py	/^bodies = threshed.split_bodies()$/;"	v
bohemiandome	examples/00-load/create-parametric-geometric-objects.py	/^bohemiandome = pv.ParametricBohemianDome()$/;"	v
bold	examples/02-plot/bounds.py	/^    bold=True,$/;"	v
bolt_nut	examples/02-plot/volume.py	/^bolt_nut = examples.download_bolt_nut()$/;"	v
boolean_add	pyvista/core/filters/poly_data.py	/^    def boolean_add(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:PolyDataFilters
boolean_cut	pyvista/core/filters/poly_data.py	/^    def boolean_cut(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:PolyDataFilters
boolean_difference	pyvista/core/filters/poly_data.py	/^    def boolean_difference(self, other_mesh, tolerance=1e-5, progress_bar=False):$/;"	m	class:PolyDataFilters
boolean_intersection	pyvista/core/filters/poly_data.py	/^    def boolean_intersection(self, other_mesh, tolerance=1e-5, progress_bar=False):$/;"	m	class:PolyDataFilters
boolean_union	pyvista/core/filters/poly_data.py	/^    def boolean_union(self, other_mesh, tolerance=1e-5, progress_bar=False):$/;"	m	class:PolyDataFilters
border	pyvista/_plot.py	/^        border=border,$/;"	v
border_color	pyvista/_plot.py	/^        border_color=border_color,$/;"	v
border_color	pyvista/plotting/charts.py	/^    def border_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_color	pyvista/plotting/charts.py	/^    def border_color(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
border_color	pyvista/plotting/renderer.py	/^    def border_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
border_style	pyvista/plotting/charts.py	/^    def border_style(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_style	pyvista/plotting/charts.py	/^    def border_style(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
border_width	pyvista/_plot.py	/^        border_width=border_width,$/;"	v
border_width	pyvista/plotting/charts.py	/^    def border_width(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_width	pyvista/plotting/charts.py	/^    def border_width(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
border_width	pyvista/plotting/renderer.py	/^    def border_width(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
boring_cmap	examples/02-plot/cmap.py	/^boring_cmap = plt.cm.get_cmap("viridis", 5)$/;"	v
bottom	examples/00-load/create-structured-surface.py	/^bottom = struct.points.copy()$/;"	v
boundaries	examples/03-widgets/sphere-widget.py	/^boundaries = np.array([[xmin, ymin, 0], [xmin, ymax, 0], [xmax, ymin, 0], [xmax, ymax, 0]])$/;"	v
boundaries	examples/99-advanced/openfoam-example.py	/^boundaries = mesh["boundary"]$/;"	v
boundary	examples/01-filter/integrate-data.py	/^boundary = dataset.decimate_boundary().extract_all_edges()$/;"	v
boundary	examples/01-filter/streamlines.py	/^boundary = mesh.decimate_boundary().extract_all_edges()$/;"	v
bounds	examples/01-filter/clipping.py	/^bounds = [2, 4.5, 2, 4.5, 1, 3]$/;"	v
bounds	examples/02-plot/topo-map.py	/^bounds = (1818000, 1824500, 5645000, 5652500, 0, 3000)$/;"	v
bounds	examples/04-lights/shadows.py	/^bounds = mesh.bounds$/;"	v
bounds	examples/99-advanced/openfoam-cooling.py	/^bounds = np.array(air.bounds) * 1.2$/;"	v
bounds	examples/99-advanced/openfoam-tubes.py	/^bounds = np.array(air.bounds) * 1.2$/;"	v
bounds	pyvista/core/cell.py	/^    def bounds(self) -> Tuple[float, float, float, float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Cell
bounds	pyvista/core/composite.py	/^    def bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
bounds	pyvista/core/dataset.py	/^    def bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:DataSet
bounds	pyvista/plotting/cube_axes_actor.py	/^    def bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
bounds	pyvista/plotting/cube_axes_actor.py	/^    def bounds(self, bounds: BoundsLike):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
bounds	pyvista/plotting/mapper.py	/^    def bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
bounds	pyvista/plotting/plotter.py	/^    def bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
bounds	pyvista/plotting/prop3d.py	/^    def bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
bounds	pyvista/plotting/renderer.py	/^    def bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:Renderer
bour	examples/00-load/create-parametric-geometric-objects.py	/^bour = pv.ParametricBour()$/;"	v
box	examples/00-load/create-geometric-objects.py	/^box = pv.Box()$/;"	v
box	pyvista/plotting/themes.py	/^    def box(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
box	pyvista/plotting/themes.py	/^    def box(self, box: bool):  # numpydoc ignore=GL08$/;"	m	class:_AxesConfig
box_plot	tests/plotting/test_charts.py	/^def box_plot(chart_box):$/;"	f
boy	examples/00-load/create-parametric-geometric-objects.py	/^boy = pv.ParametricBoy()$/;"	v
bprop	examples/02-plot/backface_props.py	/^bprop = actor.backface_prop$/;"	v
bracket	examples/02-plot/lookup-table.py	/^bracket = examples.download_fea_bracket().cell_data_to_point_data()$/;"	v
brush	pyvista/plotting/charts.py	/^    def brush(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
build_c_coverage	pyvista/ext/coverage.py	/^    def build_c_coverage(self) -> None:$/;"	m	class:CoverageBuilder
build_py_coverage	pyvista/ext/coverage.py	/^    def build_py_coverage(self) -> None:$/;"	m	class:CoverageBuilder
build_url	pyvista/trame/jupyter.py	/^def build_url($/;"	f
bunnies	examples/02-plot/depth_of_field.py	/^bunnies = grid.glyph(geom=mesh, scale=False, orient=False)$/;"	v
bunny	examples/02-plot/silhouette.py	/^bunny = examples.download_bunny()$/;"	v
bunny	tests/core/test_geometric_objects.py	/^def bunny():$/;"	f
button	pyvista/trame/ui/vuetify2.py	/^def button(click, icon, tooltip):  # numpydoc ignore=PR01$/;"	f
button	pyvista/trame/ui/vuetify3.py	/^def button(click, icon, tooltip):  # numpydoc ignore=PR01$/;"	f
button_play	examples/99-advanced/customization-trame-toolbar.py	/^def button_play():$/;"	f
c	examples/00-load/create-kochanek-spline.py	/^c = [-1.0, -0.5, 0.0, 0.5, 1.0]$/;"	v
c	examples/01-filter/geodesic.py	/^c = land.geodesic(cape_town, rome)$/;"	v
callback	examples/02-plot/composite-picking.py	/^def callback(index, *args):$/;"	f
callback	examples/02-plot/distance_measurement.py	/^def callback(a, b, distance):$/;"	f
callback	examples/02-plot/mesh-picking.py	/^def callback(actor):$/;"	f
callback	examples/02-plot/mesh-picking.py	/^def callback(mesh):$/;"	f
callback	examples/02-plot/surface-picking.py	/^def callback(point):$/;"	f
callback	examples/03-widgets/animation.py	/^def callback(step):$/;"	f
callback	examples/03-widgets/multi-slider-widget.py	/^    callback=lambda value: engine('phi_resolution', int(value)),$/;"	v	class:MyCustomRoutine
callback	examples/03-widgets/multi-slider-widget.py	/^    callback=lambda value: engine('radius', value),$/;"	v
callback	examples/03-widgets/multi-slider-widget.py	/^    callback=lambda value: engine('theta_resolution', int(value)),$/;"	v
callback	examples/03-widgets/sphere-widget.py	/^def callback(point):$/;"	f
callback	examples/03-widgets/sphere-widget.py	/^def callback(point, i):$/;"	f
callback	pyvista/plotting/widgets.py	/^        def callback(normal, loc):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_mesh_clip_plane
callback	pyvista/plotting/widgets.py	/^        def callback(normal, origin):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_mesh_slice
callback	pyvista/plotting/widgets.py	/^        def callback(normal, origin):  # numpydoc ignore=PR01$/;"	f	function:WidgetHelper.add_volume_clip_plane
callback	pyvista/plotting/widgets.py	/^        def callback(planes):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_mesh_clip_box
callback	pyvista/plotting/widgets.py	/^        def callback(spline):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_mesh_slice_spline
callback	pyvista/plotting/widgets.py	/^        def callback(value):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_mesh_isovalue
callback	pyvista/plotting/widgets.py	/^        def callback(value):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_mesh_threshold
callback	tests/plotting/test_picking.py	/^        callback=callback,$/;"	v	class:test_single_cell_picking.PickCallback
callback	tests/plotting/test_picking.py	/^        callback=tracker,$/;"	v	class:test_element_picking.Tracker
callback	tests/plotting/test_picking.py	/^        callback=tracker,$/;"	v	class:test_point_picking_window.Tracker
callback	tests/plotting/test_picking.py	/^    def callback(click_point):$/;"	f	function:test_fly_to_right_click
callback	tests/plotting/test_picking.py	/^    def callback(click_point):$/;"	f	function:test_fly_to_right_click_multi_render
callback	tests/plotting/test_picking.py	/^    def callback(click_point):$/;"	f	function:test_switch_picking_type
callback	tests/plotting/test_picking.py	/^    def callback(picked):$/;"	f	function:test_switch_picking_type
callback	tests/plotting/test_picking.py	/^    def callback(picked_actor):$/;"	f	function:test_actor_picking
callback	tests/plotting/test_picking.py	/^    def callback(picked_cells):$/;"	f	function:test_cell_picking_interactive
callback	tests/plotting/test_picking.py	/^    def callback(picked_cells):$/;"	f	function:test_cell_picking_interactive_subplot
callback	tests/plotting/test_picking.py	/^    def callback(picked_mesh):$/;"	f	function:test_mesh_picking
callback	tests/plotting/test_picking.py	/^    def callback(picked_point):$/;"	f	function:test_point_picking
callback	tests/plotting/test_picking.py	/^    def callback(point):$/;"	f	function:test_surface_point_picking
callback	tests/plotting/test_plotting.py	/^    def callback(this_pl):$/;"	f	function:test_plotter_render_callback
callback	tests/plotting/test_render_window_interactor.py	/^    def callback(a, b, *, c, d=1.0):$/;"	f	function:test_observers
callback	tests/plotting/test_render_window_interactor.py	/^    def callback(mouse_point):$/;"	f	function:test_track_click_position_multi_render
callback	tests/plotting/test_render_window_interactor.py	/^    def callback(step):$/;"	f	function:test_add_timer_event
camera	examples/01-filter/rotate.py	/^camera = pv.Camera()$/;"	v
camera	pyvista/plotting/cube_axes_actor.py	/^    def camera(self) -> 'pv.Camera':  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
camera	pyvista/plotting/cube_axes_actor.py	/^    def camera(self, camera: 'pv.Camera'):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
camera	pyvista/plotting/plotter.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera	pyvista/plotting/plotter.py	/^    def camera(self, camera):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
camera	pyvista/plotting/renderer.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera	pyvista/plotting/renderer.py	/^    def camera(self, source):  # numpydoc ignore=GL08$/;"	m	class:Renderer
camera	pyvista/plotting/themes.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
camera	pyvista/plotting/themes.py	/^    def camera(self, camera):  # numpydoc ignore=GL08$/;"	m	class:Theme
camera	tests/plotting/test_camera.py	/^def camera():$/;"	f
camera_position	examples/01-filter/streamlines_2D.py	/^camera_position = [(7, 0, 20.0), (7, 0.0, 0.0), (0.0, 1.0, 0.0)]$/;"	v
camera_position	pyvista/plotting/plotter.py	/^    def camera_position(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera_position	pyvista/plotting/plotter.py	/^    def camera_position(self, camera_location):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
camera_position	pyvista/plotting/renderer.py	/^    def camera_position(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera_position	pyvista/plotting/renderer.py	/^    def camera_position(self, camera_location):  # numpydoc ignore=GL08$/;"	m	class:Renderer
camera_set	pyvista/plotting/plotter.py	/^    def camera_set(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera_set	pyvista/plotting/plotter.py	/^    def camera_set(self, is_set):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
camera_set	pyvista/plotting/renderer.py	/^    def camera_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera_set	pyvista/plotting/renderer.py	/^    def camera_set(self, is_set: bool):  # numpydoc ignore=GL08$/;"	m	class:Renderer
cap_length	pyvista/plotting/themes.py	/^    def cap_length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_length	pyvista/plotting/themes.py	/^    def cap_length(self, cap_length: float):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
cap_opacity	pyvista/plotting/themes.py	/^    def cap_opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_opacity	pyvista/plotting/themes.py	/^    def cap_opacity(self, cap_opacity: float):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
cap_width	pyvista/plotting/themes.py	/^    def cap_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_width	pyvista/plotting/themes.py	/^    def cap_width(self, cap_width: float):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
cape_town	examples/01-filter/geodesic.py	/^cape_town = land.find_closest_point((0.790801, 0.264598, -0.551942))$/;"	v
capping	pyvista/core/utilities/geometric_objects.py	/^        capping=capping,$/;"	v
capping	pyvista/core/utilities/geometric_sources.py	/^    def capping(self) -> bool:$/;"	m	class:ConeSource
capping	pyvista/core/utilities/geometric_sources.py	/^    def capping(self, capping: bool):$/;"	m	class:ConeSource
cartesian_to_spherical	pyvista/core/utilities/features.py	/^def cartesian_to_spherical(x, y, z):$/;"	f
case_type	pyvista/core/utilities/reader.py	/^    def case_type(self):  # numpydoc ignore=RT01$/;"	m	class:POpenFOAMReader
case_type	pyvista/core/utilities/reader.py	/^    def case_type(self, value):  # numpydoc ignore=GL08$/;"	m	class:POpenFOAMReader
cast_to_explicit_structured_grid	pyvista/core/pointset.py	/^    def cast_to_explicit_structured_grid(self):$/;"	m	class:UnstructuredGrid
cast_to_pointset	pyvista/core/dataset.py	/^    def cast_to_pointset(self, pass_cell_data: bool = False) -> pyvista.PointSet:$/;"	m	class:DataSet
cast_to_poly_points	pyvista/core/dataset.py	/^    def cast_to_poly_points(self, pass_cell_data: bool = False) -> pyvista.PolyData:$/;"	m	class:DataSet
cast_to_polydata	pyvista/core/pointset.py	/^    def cast_to_polydata(self, deep=True):$/;"	m	class:PointSet
cast_to_rectilinear_grid	pyvista/core/grid.py	/^    def cast_to_rectilinear_grid(self) -> 'RectilinearGrid':$/;"	m	class:ImageData
cast_to_structured_grid	pyvista/core/grid.py	/^    def cast_to_structured_grid(self) -> 'pyvista.StructuredGrid':$/;"	m	class:ImageData
cast_to_structured_grid	pyvista/core/grid.py	/^    def cast_to_structured_grid(self) -> 'pyvista.StructuredGrid':$/;"	m	class:RectilinearGrid
cast_to_unstructured_grid	pyvista/core/cell.py	/^    def cast_to_unstructured_grid(self) -> pyvista.UnstructuredGrid:$/;"	m	class:Cell
cast_to_unstructured_grid	pyvista/core/dataset.py	/^    def cast_to_unstructured_grid(self) -> pyvista.UnstructuredGrid:$/;"	m	class:DataSet
cast_to_unstructured_grid	pyvista/core/pointset.py	/^    def cast_to_unstructured_grid(self) -> 'UnstructuredGrid':$/;"	m	class:ExplicitStructuredGrid
catalan	examples/02-plot/backface_props.py	/^catalan = pv.ParametricCatalanMinimal()$/;"	v
catalanminimal	examples/00-load/create-parametric-geometric-objects.py	/^catalanminimal = pv.ParametricCatalanMinimal()$/;"	v
categories	examples/01-filter/connectivity.py	/^    categories=True,$/;"	v
category	doc/source/conf.py	/^    category=PyVistaDeprecationWarning,$/;"	v
category	doc/source/conf.py	/^    category=UserWarning,$/;"	v
cell	pyvista/core/dataset.py	/^    def cell(self) -> Iterator[pyvista.Cell]:  # numpydoc ignore=RT01$/;"	m	class:DataSet
cell1	examples/00-load/create-unstructured-surface.py	/^cell1 = np.array($/;"	v
cell2	examples/00-load/create-unstructured-surface.py	/^cell2 = np.array($/;"	v
cell_array	pyvista/core/utilities/arrays.py	/^def cell_array(obj, name):$/;"	f
cell_array_names	pyvista/core/utilities/reader.py	/^    def cell_array_names(self):$/;"	m	class:PointCellDataSelection
cell_array_status	pyvista/core/utilities/reader.py	/^    def cell_array_status(self, name):$/;"	m	class:PointCellDataSelection
cell_centers	pyvista/core/filters/composite.py	/^    cell_centers = DataSetFilters.cell_centers$/;"	v	class:CompositeFilters
cell_centers	pyvista/core/filters/data_set.py	/^    def cell_centers(self, vertex=True, progress_bar=False):$/;"	m	class:DataSetFilters
cell_connectivity	pyvista/core/pointset.py	/^    def cell_connectivity(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cell_coords	pyvista/core/pointset.py	/^    def cell_coords(self, ind):$/;"	m	class:ExplicitStructuredGrid
cell_data	pyvista/core/dataset.py	/^    def cell_data(self) -> DataSetAttributes:  # numpydoc ignore=RT01$/;"	m	class:DataSet
cell_data_to_point_data	pyvista/core/filters/composite.py	/^    cell_data_to_point_data = DataSetFilters.cell_data_to_point_data$/;"	v	class:CompositeFilters
cell_data_to_point_data	pyvista/core/filters/data_set.py	/^    def cell_data_to_point_data(self, pass_cell_data=False, progress_bar=False):$/;"	m	class:DataSetFilters
cell_data_to_point_data	pyvista/core/pointset.py	/^    def cell_data_to_point_data(self, *args, **kwargs):$/;"	m	class:PointSet
cell_data_to_point_data_algorithm	pyvista/plotting/utilities/algorithms.py	/^def cell_data_to_point_data_algorithm(inp, pass_cell_data=False):$/;"	f
cell_id	pyvista/core/pointset.py	/^    def cell_id(self, coords) -> Union[int, np.ndarray, None]:$/;"	m	class:ExplicitStructuredGrid
cell_ids	tests/core/test_cells.py	/^cell_ids = list(map(repr, types))$/;"	v
cell_neighbors	pyvista/core/dataset.py	/^    def cell_neighbors(self, ind: int, connections: str = "points") -> List[int]:$/;"	m	class:DataSet
cell_neighbors_levels	pyvista/core/dataset.py	/^    def cell_neighbors_levels($/;"	m	class:DataSet
cell_normals	pyvista/core/pointset.py	/^    def cell_normals(self) -> 'pyvista.pyvista_ndarray':  # numpydoc ignore=RT01$/;"	m	class:PolyData
cell_num	pyvista/core/utilities/cell_type_helper.py	/^            cell_num = getattr(vtkCommonDataModel, cell_num_str)$/;"	v
cell_to_point_creation	pyvista/core/utilities/reader.py	/^    def cell_to_point_creation(self):  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
cell_to_point_creation	pyvista/core/utilities/reader.py	/^    def cell_to_point_creation(self, value):  # numpydoc ignore=GL08$/;"	m	class:OpenFOAMReader
cell_type	examples/00-load/create-unstructured-surface.py	/^cell_type = np.array([CellType.HEXAHEDRON, CellType.HEXAHEDRON])$/;"	v
cell_volumes	examples/01-filter/compute-volume.py	/^cell_volumes = sized.cell_data["Volume"]$/;"	v
cells	examples/00-load/create-polyhedron.py	/^cells = quad + polygon + hexa + polyhedron$/;"	v
cells	examples/00-load/create-unstructured-surface.py	/^cells = np.array($/;"	v
cells	examples/00-load/create-unstructured-surface.py	/^cells = np.array([8, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14, 15])$/;"	v
cells	examples/00-load/linear-cells.py	/^cells = [len(points)] + list(range(len(points)))$/;"	v
cells	examples/01-filter/extract-surface.py	/^cells = np.hstack((20, np.arange(20))).astype(np.int64, copy=False)$/;"	v
cells	pyvista/core/cell.py	/^    def cells(self):  # numpydoc ignore=RT01$/;"	m	class:CellArray
cells	pyvista/core/pointset.py	/^    def cells(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cells	pyvista/core/pointset.py	/^    def cells(self, cells):  # numpydoc ignore=GL08$/;"	m	class:UnstructuredGrid
cells	pyvista/demos/logo.py	/^    cells = a_part.cells.reshape(-1, 5)$/;"	v
cells	pyvista/demos/logo.py	/^    cells = grid.cells.reshape(-1, 5)$/;"	v
cells	tests/core/test_cells.py	/^cells = [$/;"	v
cells	tests/test_meshio.py	/^    cells=[("triangle", [[0, 1, 2], [1, 3, 2]])],$/;"	v
cells_dict	pyvista/core/pointset.py	/^    def cells_dict(self) -> dict:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cells_hex	examples/00-load/create-unstructured-surface.py	/^cells_hex = np.arange(16).reshape([2, 8])$/;"	v
celltypes	examples/00-load/create-polyhedron.py	/^celltypes = [pv.CellType.QUAD, pv.CellType.POLYGON, pv.CellType.HEXAHEDRON, pv.CellType.POLYHEDRON]$/;"	v
celltypes	examples/00-load/create-unstructured-surface.py	/^celltypes = np.full(10, fill_value=CellType.TETRA, dtype=np.uint8)$/;"	v
celltypes	examples/00-load/create-unstructured-surface.py	/^celltypes = np.full(8, CellType.HEXAHEDRON, dtype=np.uint8)$/;"	v
celltypes	examples/01-filter/extract-surface.py	/^celltypes = np.array([CellType.QUADRATIC_HEXAHEDRON])$/;"	v
celltypes	pyvista/core/pointset.py	/^    def celltypes(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
center	examples/00-load/create-parametric-geometric-objects.py	/^center = [0, 0, 0]$/;"	v
center	examples/01-filter/extrude-trim.py	/^    center=(disc.center[0], disc.center[1], -1),$/;"	v
center	examples/01-filter/extrude-trim.py	/^    center=(mesh.center[0], mesh.center[1], -5),$/;"	v
center	examples/01-filter/integrate-data.py	/^center = integrated_volume.points[0]$/;"	v
center	examples/02-plot/plot-over-circular-arc.py	/^center = [mesh.bounds[0], mesh.bounds[2], mesh.bounds[4]]$/;"	v
center	examples/02-plot/silhouette.py	/^    center=(0, 0.04, 0), direction=(0, 1, 0), radius=0.15, height=0.03$/;"	v
center	examples/04-lights/shadows.py	/^center = np.array(mesh.center)$/;"	v
center	pyvista/core/cell.py	/^    def center(self) -> Tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Cell
center	pyvista/core/composite.py	/^    def center(self) -> Any:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
center	pyvista/core/dataset.py	/^    def center(self) -> Vector:  # numpydoc ignore=RT01$/;"	m	class:DataSet
center	pyvista/core/utilities/geometric_objects.py	/^        center=center,$/;"	v
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self) -> Sequence[float]:$/;"	m	class:ConeSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self, center: Sequence[float]):$/;"	m	class:ConeSource
center	pyvista/core/utilities/parametric_objects.py	/^    center = kwargs.pop('center', [0.0, 0.0, 0.0])$/;"	v
center	pyvista/plotting/plotter.py	/^    def center(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
center	pyvista/plotting/prop3d.py	/^    def center(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
center	pyvista/plotting/renderer.py	/^    def center(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
center_of_mass	pyvista/core/pointset.py	/^    def center_of_mass(self, scalars_weight=False):$/;"	m	class:_PointSet
centers	examples/00-load/create-platonic-solids.py	/^centers = [$/;"	v
centers	examples/01-filter/cell-centers.py	/^centers = grid.cell_centers()$/;"	v
centers	examples/01-filter/cell-centers.py	/^centers = mesh.cell_centers()$/;"	v
centers	examples/02-plot/depth-peeling.py	/^centers = [(0, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, -1, 0)]$/;"	v
centers	examples/04-lights/beam_shape.py	/^centers = [(0, 0, 0), (0, 1.5, 0), (0, 1.5 * 0.5, 1.5 * 3**0.5 \/ 2)]$/;"	v
central_gear	examples/02-plot/bounds.py	/^central_gear = split_gears.pop(1)$/;"	v
cf	tests/plotting/conftest.py	/^        cf = inspect.currentframe()$/;"	v	class:check_gc.GcHandler
channels	examples/01-filter/compute-volume.py	/^channels = data.threshold([0.9, 1.1])$/;"	v
channelsfile	pyvista/examples/examples.py	/^channelsfile = os.path.join(dir_path, 'channels.vti')$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.Chart2D()$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.ChartBox(data)$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.ChartMPL(f)$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.ChartPie(data)$/;"	v
chart_2d	tests/plotting/test_charts.py	/^def chart_2d():$/;"	f
chart_box	tests/plotting/test_charts.py	/^def chart_box():$/;"	f
chart_mpl	tests/plotting/test_charts.py	/^def chart_mpl():$/;"	f
chart_pie	tests/plotting/test_charts.py	/^def chart_pie():$/;"	f
check_depth_peeling	pyvista/plotting/utilities/gl_checks.py	/^def check_depth_peeling(number_of_peels=100, occlusion_ratio=0.0):$/;"	f
check_doctests	tests/check_doctest_names.py	/^def check_doctests(modules=None, respect_skips=True, verbose=True):$/;"	f
check_gc	tests/plotting/conftest.py	/^def check_gc():$/;"	f
check_math_text_support	pyvista/plotting/tools.py	/^def check_math_text_support():$/;"	f
check_matplotlib_vtk_compatibility	pyvista/plotting/tools.py	/^def check_matplotlib_vtk_compatibility():$/;"	f
check_valid_vector	pyvista/core/utilities/misc.py	/^def check_valid_vector(point, name=''):$/;"	f
checkbox	pyvista/trame/ui/vuetify2.py	/^def checkbox(model, icons, tooltip):  # numpydoc ignore=PR01$/;"	f
checkbox	pyvista/trame/ui/vuetify3.py	/^def checkbox(model, icons, tooltip):  # numpydoc ignore=PR01$/;"	f
circle	tests/core/test_helpers.py	/^        circle = pv.Circle()$/;"	v	class:test_wrappers.Foo
clamping	tests/core/test_dataset_filters.py	/^    def clamping(self):$/;"	m	class:InterrogateVTKGlyph3D
classes	examples_trame/basic/PyVistaLocalView.py	/^            classes="pa-0 fill-height",$/;"	v
classes	examples_trame/basic/multi_views.py	/^            classes="pa-0 fill-height",$/;"	v
classic	pyvista/plotting/themes.py	/^    def classic(self) -> _SliderStyleConfig:  # numpydoc ignore=RT01$/;"	m	class:_SliderConfig
classic	pyvista/plotting/themes.py	/^    def classic(self, config: _SliderStyleConfig):  # numpydoc ignore=GL08$/;"	m	class:_SliderConfig
classifier	examples/01-filter/compute-volume.py	/^classifier = threshed.cell_data["Spatial Cell Data"] > cval$/;"	v
clean	pyvista/core/composite.py	/^    def clean(self, empty=True):$/;"	m	class:MultiBlock
clean	pyvista/core/filters/poly_data.py	/^    def clean($/;"	m	class:PolyDataFilters
clean	pyvista/core/filters/unstructured_grid.py	/^    def clean($/;"	m	class:UnstructuredGridFilters
clear	pyvista/core/datasetattributes.py	/^    def clear(self):$/;"	m	class:DataSetAttributes
clear	pyvista/plotting/charts.py	/^    def clear(self, plot_type=None):$/;"	m	class:Chart2D
clear	pyvista/plotting/plotter.py	/^    def clear(self):$/;"	m	class:BasePlotter
clear	pyvista/plotting/renderer.py	/^    def clear(self):$/;"	m	class:Renderer
clear	pyvista/plotting/renderers.py	/^    def clear(self):$/;"	m	class:Renderers
clear	pyvista/plotting/scalar_bars.py	/^    def clear(self):$/;"	m	class:ScalarBars
clear_actors	pyvista/plotting/plotter.py	/^    def clear_actors(self):$/;"	m	class:BasePlotter
clear_actors	pyvista/plotting/renderer.py	/^    def clear_actors(self):$/;"	m	class:Renderer
clear_actors	pyvista/plotting/renderers.py	/^    def clear_actors(self):$/;"	m	class:Renderers
clear_background_renderers	pyvista/plotting/renderers.py	/^    def clear_background_renderers(self):$/;"	m	class:Renderers
clear_box_widgets	pyvista/plotting/widgets.py	/^    def clear_box_widgets(self):$/;"	m	class:WidgetHelper
clear_button_widgets	pyvista/plotting/widgets.py	/^    def clear_button_widgets(self):$/;"	m	class:WidgetHelper
clear_camera_widgets	pyvista/plotting/widgets.py	/^    def clear_camera_widgets(self):$/;"	m	class:WidgetHelper
clear_cell_data	pyvista/core/dataset.py	/^    def clear_cell_data(self):$/;"	m	class:DataSet
clear_data	pyvista/core/dataset.py	/^    def clear_data(self):$/;"	m	class:DataSet
clear_events_for_key	pyvista/plotting/plotter.py	/^    def clear_events_for_key(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
clear_events_for_key	pyvista/plotting/render_window_interactor.py	/^    def clear_events_for_key(self, key, raise_on_missing=False):$/;"	m	class:RenderWindowInteractor
clear_field_data	pyvista/core/dataobject.py	/^    def clear_field_data(self):$/;"	m	class:DataObject
clear_key_event_callbacks	pyvista/plotting/render_window_interactor.py	/^    def clear_key_event_callbacks(self):$/;"	m	class:RenderWindowInteractor
clear_line_widgets	pyvista/plotting/widgets.py	/^    def clear_line_widgets(self):$/;"	m	class:WidgetHelper
clear_measure_widgets	pyvista/plotting/widgets.py	/^    def clear_measure_widgets(self):$/;"	m	class:WidgetHelper
clear_on_render_callbacks	pyvista/plotting/plotter.py	/^    def clear_on_render_callbacks(self):$/;"	m	class:BasePlotter
clear_plane_widgets	pyvista/plotting/widgets.py	/^    def clear_plane_widgets(self):$/;"	m	class:WidgetHelper
clear_point_data	pyvista/core/dataset.py	/^    def clear_point_data(self):$/;"	m	class:DataSet
clear_slider_widgets	pyvista/plotting/widgets.py	/^    def clear_slider_widgets(self):$/;"	m	class:WidgetHelper
clear_sphere_widgets	pyvista/plotting/widgets.py	/^    def clear_sphere_widgets(self):$/;"	m	class:WidgetHelper
clear_spline_widgets	pyvista/plotting/widgets.py	/^    def clear_spline_widgets(self):$/;"	m	class:WidgetHelper
click_position	pyvista/plotting/plotter.py	/^    click_position = None$/;"	v	class:BasePlotter
clim	examples/01-filter/clipping-with-surface.py	/^    clim=[-1, 1],$/;"	v
clim	examples/01-filter/connectivity.py	/^    clim=[-0.5, 0.5],$/;"	v
clim	examples/01-filter/sampling_functions_2d.py	/^    clim=clim,$/;"	v
clim	examples/01-filter/sampling_functions_2d.py	/^clim = (z.max() - rng * 1.65, z.max())$/;"	v
clim	examples/01-filter/sampling_functions_3d.py	/^    clim=clim,$/;"	v
clim	examples/01-filter/sampling_functions_3d.py	/^clim = (mn, mx * 1.8)$/;"	v
clim	examples/01-filter/streamlines.py	/^    clim=[0, 1000],$/;"	v
clim	examples/01-filter/streamlines_2D.py	/^clim = [0, 20]$/;"	v
clim	examples/02-plot/gif.py	/^    clim=[-1, 1],$/;"	v
clim	examples/02-plot/isovalue.py	/^    clim=vol.get_data_range(),$/;"	v
clim	examples/02-plot/movie_glyphs.py	/^    clim=[0, 1],$/;"	v
clim	examples/02-plot/volume.py	/^    clim=clim,$/;"	v
clim	examples/02-plot/volume.py	/^clim = [0, 100]$/;"	v
clim	examples/03-widgets/line-widget.py	/^clim = [arr.min(), arr.max()]$/;"	v
clim	examples/99-advanced/fea-hertzian-contact-pressure.py	/^    clim=[0, 1.2e9],$/;"	v
clip	pyvista/core/filters/composite.py	/^    clip = DataSetFilters.clip$/;"	v	class:CompositeFilters
clip	pyvista/core/filters/data_set.py	/^    def clip($/;"	m	class:DataSetFilters
clip_box	pyvista/core/filters/composite.py	/^    clip_box = DataSetFilters.clip_box$/;"	v	class:CompositeFilters
clip_box	pyvista/core/filters/data_set.py	/^    def clip_box($/;"	m	class:DataSetFilters
clip_closed_surface	pyvista/core/filters/poly_data.py	/^    def clip_closed_surface($/;"	m	class:PolyDataFilters
clip_scalar	pyvista/core/filters/data_set.py	/^    def clip_scalar($/;"	m	class:DataSetFilters
clip_surface	pyvista/core/filters/data_set.py	/^    def clip_surface($/;"	m	class:DataSetFilters
clipped	examples/00-load/create-pointset.py	/^clipped = lidar.clip(origin=(0, 0, 1.76e3), normal=(0, 0, 1))$/;"	v
clipped	examples/01-filter/clipping-with-surface.py	/^clipped = dataset.clip_surface(surface, invert=False)$/;"	v
clipped	examples/01-filter/clipping.py	/^clipped = dataset.clip('y', invert=False)$/;"	v
clipped	examples/01-filter/clipping.py	/^clipped = dataset.clip_box(bounds)$/;"	v
clipped	examples/01-filter/clipping.py	/^clipped = mesh.clip(normal=normal)$/;"	v
clipped	examples/02-plot/backface_props.py	/^clipped = globe.clip(normal='z', value=4.37e9)$/;"	v
clipped_pset	examples/00-load/create-pointset.py	/^    clipped_pset = lidar_pset.clip(origin=(0, 0, 1.76e3), normal=(0, 0, 1))$/;"	v
clipped_sphere	examples/02-plot/backface_props.py	/^clipped_sphere = sphere.clip(normal='z', value=0.4)$/;"	v
clipping_range	pyvista/plotting/camera.py	/^    def clipping_range(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
clipping_range	pyvista/plotting/camera.py	/^    def clipping_range(self, points):  # numpydoc ignore=GL08$/;"	m	class:Camera
close	pyvista/plotting/plotter.py	/^    def close(self, render=False):$/;"	m	class:BasePlotter
close	pyvista/plotting/render_window_interactor.py	/^    def close(self):$/;"	m	class:RenderWindowInteractor
close	pyvista/plotting/renderer.py	/^    def close(self):$/;"	m	class:Renderer
close	pyvista/plotting/renderers.py	/^    def close(self):$/;"	m	class:Renderers
close	pyvista/plotting/widgets.py	/^    def close(self):$/;"	m	class:WidgetHelper
close_all	pyvista/plotting/plotter.py	/^def close_all():$/;"	f
close_wormhole	examples/99-advanced/sphere_eversion.py	/^def close_wormhole(x0, y0, z0, eta, xi, alpha):$/;"	f
cloud	examples/00-load/create-tri-surface.py	/^cloud = pv.PolyData(points)$/;"	v
cloud	examples/00-load/wrap-trimesh.py	/^cloud = pv.wrap(points)$/;"	v
cloud	examples/02-plot/point-clouds.py	/^cloud = examples.download_cloud_dark_matter()$/;"	v
cmap	examples/00-load/create-truss.py	/^    cmap='jet',$/;"	v
cmap	examples/01-filter/clipping-with-surface.py	/^    cmap="bwr",$/;"	v
cmap	examples/01-filter/connectivity.py	/^    cmap='bwr',$/;"	v
cmap	examples/01-filter/connectivity.py	/^    cmap='glasbey',$/;"	v
cmap	examples/01-filter/sampling_functions_2d.py	/^    cmap='gist_earth',$/;"	v
cmap	examples/01-filter/sampling_functions_3d.py	/^    cmap='gist_earth_r',$/;"	v
cmap	examples/01-filter/slicing.py	/^cmap = plt.cm.get_cmap("viridis", 4)$/;"	v
cmap	examples/02-plot/cmap.py	/^    cmap="fire",$/;"	v
cmap	examples/02-plot/cmap.py	/^    cmap="hot",$/;"	v
cmap	examples/02-plot/depth-peeling.py	/^cmap = "viridis_r"$/;"	v
cmap	examples/02-plot/movie_glyphs.py	/^    cmap='bwr',$/;"	v
cmap	examples/02-plot/opacity.py	/^    cmap='bwr',$/;"	v
cmap	examples/02-plot/texture.py	/^cmap = get_cmap("nipy_spectral")$/;"	v
cmap	examples/02-plot/vector-component.py	/^    cmap="jet",$/;"	v
cmap	examples/02-plot/volume.py	/^    cmap="magma",$/;"	v
cmap	examples/99-advanced/atomic-orbitals.py	/^    cmap=['red', 'green'],$/;"	v
cmap	examples/99-advanced/fea-hertzian-contact-pressure.py	/^    cmap='gouldian',$/;"	v
cmap	examples/99-advanced/magnetic-fields.py	/^    cmap='bwr',$/;"	v
cmap	examples/99-advanced/magnetic-fields.py	/^    cmap='hot',$/;"	v
cmap	examples/99-advanced/openfoam-cooling.py	/^    cmap='autumn_r',$/;"	v
cmap	examples/99-advanced/openfoam-cooling.py	/^    cmap='reds',$/;"	v
cmap	pyvista/demos/logo.py	/^        cmap='gist_heat',$/;"	v
cmap	pyvista/plotting/lookup_table.py	/^    def cmap(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
cmap	pyvista/plotting/lookup_table.py	/^    def cmap(self, value):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
cmap	pyvista/plotting/mapper.py	/^    def cmap(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:DataSetMapper
cmap	pyvista/plotting/themes.py	/^    def cmap(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
cmap	pyvista/plotting/themes.py	/^    def cmap(self, cmap):  # numpydoc ignore=GL08$/;"	m	class:Theme
cn	tests/plotting/conftest.py	/^        cn = obj.__class__.__name__$/;"	v	class:check_gc.GcHandler
cname	doc/source/conf.py	/^cname = os.getenv("DOCUMENTATION_CNAME", "docs.pyvista.org")$/;"	v
coil_block	examples/99-advanced/magnetic-fields.py	/^coil_block = pv.MultiBlock(coils)$/;"	v
coils	examples/99-advanced/magnetic-fields.py	/^coils = []$/;"	v
col_weights	examples/02-plot/multi-window.py	/^col_weights = [1, 1, 0.5, 2]$/;"	v
collapse_menu	pyvista/trame/jupyter.py	/^        collapse_menu=collapse_menu,$/;"	v
collision	pyvista/core/filters/poly_data.py	/^    def collision($/;"	m	class:PolyDataFilters
collision_mask	examples/01-filter/collisions.py	/^    collision_mask = np.zeros(sphere0.n_cells, dtype=bool)$/;"	v
color	examples/00-load/create-kochanek-spline.py	/^        color="k",$/;"	v
color	examples/01-filter/cell-centers.py	/^    color='r',$/;"	v
color	examples/01-filter/extrude-rotate.py	/^    color="red",$/;"	v
color	examples/01-filter/image-fft-perlin-noise.py	/^    color='k',$/;"	v
color	examples/02-plot/point-clouds.py	/^    color='#fff7c2',$/;"	v
color	examples/02-plot/silhouette.py	/^    color="green",$/;"	v
color	examples/02-plot/silhouette.py	/^    color='lightblue',$/;"	v
color	examples/02-plot/silhouette.py	/^    color='red',$/;"	v
color	examples/02-plot/vertices.py	/^    color='magenta',$/;"	v
color	examples/04-lights/shadows.py	/^    color='cyan',$/;"	v
color	examples/04-lights/shadows.py	/^    color='orange',$/;"	v
color	examples/04-lights/shadows.py	/^    color=[1.0, 0.83921, 0.6666, 1.0],  # Color temp. 2850 K$/;"	v
color	examples/04-lights/shadows.py	/^    color=[1.0, 1.0, 0.9843, 1.0],  # Color temp. 5400 K$/;"	v
color	examples/98-common/project-points-tessellate.py	/^    color='red',$/;"	v
color	examples/99-advanced/magnetic-fields.py	/^    color='black',$/;"	v
color	examples/99-advanced/ray-trace-moeller.py	/^        color='r',$/;"	v
color	examples/99-advanced/sphere_eversion.py	/^    color='aquamarine',$/;"	v
color	examples_trame/basic/actor_color.py	/^def color(color="seagreen", **kwargs):$/;"	f
color	pyvista/demos/logo.py	/^        color='r',$/;"	v
color	pyvista/plotting/_property.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
color	pyvista/plotting/_property.py	/^    def color(self, value):  # numpydoc ignore=GL08$/;"	m	class:Property
color	pyvista/plotting/actor_properties.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
color	pyvista/plotting/actor_properties.py	/^    def color(self, color: tuple):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
color	pyvista/plotting/charts.py	/^    def color(self, val):  # numpydoc ignore=GL08$/;"	m	class:Brush
color	pyvista/plotting/charts.py	/^    def color(self, val):  # numpydoc ignore=GL08$/;"	m	class:Pen
color	pyvista/plotting/charts.py	/^    def color(self, val):  # numpydoc ignore=GL08$/;"	m	class:_MultiCompPlot
color	pyvista/plotting/charts.py	/^    def color(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Plot
color	pyvista/plotting/composite_mapper.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
color	pyvista/plotting/composite_mapper.py	/^    def color(self, new_color):  # numpydoc ignore=GL08$/;"	m	class:BlockAttributes
color	pyvista/plotting/text.py	/^    def color(self) -> Color:$/;"	m	class:TextProperty
color	pyvista/plotting/text.py	/^    def color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
color	pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
color	pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_Font
color	pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
color	pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
color	pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:_Font
color	pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:_SilhouetteConfig
color_char_to_word	pyvista/plotting/colors.py	/^color_char_to_word = {$/;"	v
color_cycler	pyvista/plotting/themes.py	/^    def color_cycler(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
color_cycler	pyvista/plotting/themes.py	/^    def color_cycler(self, color_cycler):  # numpydoc ignore=GL08$/;"	m	class:Theme
color_missing_with_nan	pyvista/plotting/composite_mapper.py	/^    def color_missing_with_nan(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
color_missing_with_nan	pyvista/plotting/composite_mapper.py	/^    def color_missing_with_nan(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CompositePolyDataMapper
color_mode	pyvista/plotting/mapper.py	/^    def color_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
color_mode	pyvista/plotting/mapper.py	/^    def color_mode(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:_BaseMapper
color_names	pyvista/plotting/colors.py	/^color_names = {h.lower(): n for n, h in hexcolors.items()}$/;"	v
color_scheme	pyvista/plotting/charts.py	/^    def color_scheme(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
color_scheme	pyvista/plotting/charts.py	/^    def color_scheme(self, val):  # numpydoc ignore=GL08$/;"	m	class:_MultiCompPlot
color_scheme_to_cycler	pyvista/plotting/colors.py	/^def color_scheme_to_cycler(scheme):$/;"	f
color_synonyms	pyvista/plotting/colors.py	/^color_synonyms = {$/;"	v
colorbar_horizontal	pyvista/plotting/themes.py	/^    def colorbar_horizontal(self) -> _ColorbarConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_horizontal	pyvista/plotting/themes.py	/^    def colorbar_horizontal(self, config: _ColorbarConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
colorbar_orientation	pyvista/plotting/themes.py	/^    def colorbar_orientation(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_orientation	pyvista/plotting/themes.py	/^    def colorbar_orientation(self, colorbar_orientation: str):  # numpydoc ignore=GL08$/;"	m	class:Theme
colorbar_vertical	pyvista/plotting/themes.py	/^    def colorbar_vertical(self) -> _ColorbarConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_vertical	pyvista/plotting/themes.py	/^    def colorbar_vertical(self, config: _ColorbarConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
colorful_tetrahedron	tests/plotting/conftest.py	/^def colorful_tetrahedron():$/;"	f
colors	examples/00-load/create-truss.py	/^colors = range(edges.shape[0])$/;"	v
colors	examples/02-plot/color_cycler.py	/^colors = cycler('color', ['lightcoral', 'seagreen', 'aqua', 'firebrick'])()$/;"	v
colors	examples/02-plot/depth_of_field.py	/^colors = bunnies.points - bunnies.bounds[::2]$/;"	v
colors	examples/02-plot/depth_of_field.py	/^colors = colors.astype(np.uint8)$/;"	v
colors	examples/02-plot/pbr.py	/^colors = ['red', 'teal', 'black', 'orange', 'silver']$/;"	v
colors	examples/02-plot/texture.py	/^    colors = (cmap(hue)[:, 0:3] * 255.0).astype(np.uint8)$/;"	v
colors	examples/02-plot/texture.py	/^colors = (cmap(hue)[:, 0:3] * 255.0).astype(np.uint8)$/;"	v
colors	examples/03-widgets/checkbox-widget.py	/^colors = [$/;"	v
colors	examples/03-widgets/sphere-widget.py	/^colors = get_colors(len(points))$/;"	v
colors	examples/04-lights/actors.py	/^colors = ['red', 'lime', 'blue']$/;"	v
colors	pyvista/plotting/charts.py	/^    def colors(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
colors	pyvista/plotting/charts.py	/^    def colors(self, val):  # numpydoc ignore=GL08$/;"	m	class:_MultiCompPlot
combine	pyvista/core/filters/composite.py	/^    def combine(self, merge_points=False, tolerance=0.0):$/;"	m	class:CompositeFilters
combined	examples/00-load/linear-cells.py	/^combined = grid_b + grid_a$/;"	v
combined_lines	examples/99-advanced/osmnx-example.py	/^combined_lines = lines[0].merge(lines[1:])$/;"	v
compare_images	pyvista/plotting/utilities/regression.py	/^def compare_images(im1, im2, threshold=1, use_vtk=True):$/;"	f
compile_regex_list	pyvista/ext/coverage.py	/^def compile_regex_list(name: str, exps: str) -> List[Pattern]:$/;"	f
component	examples/01-filter/integrate-data.py	/^    component=2,$/;"	v
composite	tests/core/test_dataset_filters.py	/^def composite(datasets):$/;"	f
composite_mapper	tests/plotting/mappers/test_composite_mapper.py	/^def composite_mapper(multiblock_poly):$/;"	f
compute_arc_length	pyvista/core/filters/poly_data.py	/^    def compute_arc_length(self, progress_bar=False):$/;"	m	class:PolyDataFilters
compute_cell_quality	pyvista/core/filters/data_set.py	/^    def compute_cell_quality($/;"	m	class:DataSetFilters
compute_cell_sizes	pyvista/core/filters/composite.py	/^    compute_cell_sizes = DataSetFilters.compute_cell_sizes$/;"	v	class:CompositeFilters
compute_cell_sizes	pyvista/core/filters/data_set.py	/^    def compute_cell_sizes(self, length=True, area=True, volume=True, progress_bar=False):$/;"	m	class:DataSetFilters
compute_connections	pyvista/core/pointset.py	/^    def compute_connections(self, inplace=False):$/;"	m	class:ExplicitStructuredGrid
compute_connectivity	pyvista/core/pointset.py	/^    def compute_connectivity(self, inplace=False) -> 'ExplicitStructuredGrid':$/;"	m	class:ExplicitStructuredGrid
compute_derivative	pyvista/core/filters/data_set.py	/^    def compute_derivative($/;"	m	class:DataSetFilters
compute_distance	curvatures_adjust_edges.py	/^    def compute_distance(pt_id_a, pt_id_b):$/;"	f	function:adjust_edge_curvatures
compute_distance	examples/01-filter/curvatures_adjust_edges.py	/^    def compute_distance(pt_id_a, pt_id_b):$/;"	f	function:adjust_edge_curvatures
compute_implicit_distance	pyvista/core/filters/data_set.py	/^    def compute_implicit_distance(self, surface, inplace=False):$/;"	m	class:DataSetFilters
compute_normals	pyvista/core/filters/poly_data.py	/^    def compute_normals($/;"	m	class:PolyDataFilters
compute_vectors	examples/00-load/create-point-cloud.py	/^def compute_vectors(mesh):$/;"	f
compute_vorticity	examples/01-filter/streamlines_2D.py	/^    compute_vorticity=False,  # vorticity already exists in dataset$/;"	v
concatenate	pyvista/core/filters/structured_grid.py	/^    def concatenate(self, other, axis, tolerance=0.0):$/;"	m	class:StructuredGridFilters
conditional_decorator	pyvista/core/utilities/misc.py	/^class conditional_decorator:$/;"	c
cone	examples/00-load/create-geometric-objects.py	/^cone = pv.Cone()$/;"	v
cone_angle	examples/04-lights/shadows.py	/^    cone_angle=15,$/;"	v
cone_angle	pyvista/plotting/lights.py	/^    def cone_angle(self):  # numpydoc ignore=RT01$/;"	m	class:Light
cone_angle	pyvista/plotting/lights.py	/^    def cone_angle(self, angle):  # numpydoc ignore=GL08$/;"	m	class:Light
cone_radius	pyvista/plotting/axes_actor.py	/^    def cone_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cone_radius	pyvista/plotting/axes_actor.py	/^    def cone_radius(self, rad: float):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
cone_resolution	pyvista/plotting/axes_actor.py	/^    def cone_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cone_resolution	pyvista/plotting/axes_actor.py	/^    def cone_resolution(self, res: int):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
configuration	tests/plotting/test_camera.py	/^configuration = [$/;"	v
configuration	tests/plotting/test_lights.py	/^configuration = [$/;"	v
conicspiral	examples/00-load/create-parametric-geometric-objects.py	/^conicspiral = pv.ParametricConicSpiral()$/;"	v
conn	examples/01-filter/connectivity.py	/^conn = mesh.connectivity('all')$/;"	v
connected_datasets	tests/core/test_dataset_filters.py	/^def connected_datasets():$/;"	f
connected_datasets_single_disconnected_cell	tests/core/test_dataset_filters.py	/^def connected_datasets_single_disconnected_cell(connected_datasets):$/;"	f
connectivity	pyvista/core/filters/data_set.py	/^    def connectivity($/;"	m	class:DataSetFilters
connectivity	pyvista/core/pointset.py	/^        def connectivity(ind):  # numpydoc ignore=GL08$/;"	f	function:ExplicitStructuredGrid.neighbors
connectivity_array	pyvista/core/cell.py	/^    def connectivity_array(self):  # numpydoc ignore=RT01$/;"	m	class:CellArray
constrain_curvatures	curvatures_adjust_edges.py	/^def constrain_curvatures(source, curvature_name, lower_bound=0.0, upper_bound=0.0):$/;"	f
constrain_curvatures	examples/01-filter/curvatures_adjust_edges.py	/^def constrain_curvatures(source, curvature_name, lower_bound=0.0, upper_bound=0.0):$/;"	f
contour	examples/99-advanced/plotting-algorithms.py	/^contour = vtk.vtkContourFilter()$/;"	v
contour	examples_trame/advanced/contour.py	/^contour = vtkContourFilter()$/;"	v
contour	pyvista/core/filters/data_set.py	/^    def contour($/;"	m	class:DataSetFilters
contour	pyvista/core/pointset.py	/^    def contour(self, *args, **kwargs):$/;"	m	class:PointSet
contour_banded	pyvista/core/filters/poly_data.py	/^    def contour_banded($/;"	m	class:PolyDataFilters
contour_value	examples_trame/advanced/contour.py	/^contour_value = 0.5 * (data_range[0] + data_range[1])$/;"	v
contours	examples/01-filter/contouring.py	/^contours = mesh.contour()$/;"	v
contours	examples/01-filter/contouring.py	/^contours = mesh.contour(np.linspace(50, 200, 5))$/;"	v
contours	examples/01-filter/using-filters.py	/^contours = dataset.contour()$/;"	v
contours	examples/01-filter/voxelize.py	/^contours = voxels.contour(6, scalars="implicit_distance")$/;"	v
contours	examples/02-plot/opacity.py	/^contours = model.contour(10, scalars='Temperature')$/;"	v
contours	examples/99-advanced/atomic-orbitals.py	/^contours = contours.interpolate(grid)$/;"	v
contours	examples/99-advanced/atomic-orbitals.py	/^contours = grid.contour($/;"	v
convert_array	pyvista/core/utilities/arrays.py	/^def convert_array(arr, name=None, deep=False, array_type=None):$/;"	f
convert_color_channel	pyvista/plotting/colors.py	/^    def convert_color_channel(val: Union[int, np.integer, float, np.floating, str]) -> int:$/;"	m	class:Color
convert_string_array	pyvista/core/utilities/arrays.py	/^def convert_string_array(arr, name=None):$/;"	f
copy	pyvista/core/cell.py	/^    def copy(self, deep=True) -> Cell:$/;"	m	class:Cell
copy	pyvista/core/composite.py	/^    def copy(self, deep=True):$/;"	m	class:MultiBlock
copy	pyvista/core/dataobject.py	/^    def copy(self, deep=True):$/;"	m	class:DataObject
copy	pyvista/core/dataset.py	/^    def copy(self):$/;"	m	class:ActiveArrayInfo
copy	pyvista/plotting/_property.py	/^    def copy(self) -> 'Property':$/;"	m	class:Property
copy	pyvista/plotting/actor.py	/^    def copy(self, deep=True) -> 'Actor':$/;"	m	class:Actor
copy	pyvista/plotting/camera.py	/^    def copy(self):$/;"	m	class:Camera
copy	pyvista/plotting/lights.py	/^    def copy(self, deep=True):$/;"	m	class:Light
copy	pyvista/plotting/mapper.py	/^    def copy(self) -> '_BaseMapper':$/;"	m	class:_BaseMapper
copy	pyvista/plotting/texture.py	/^    def copy(self):$/;"	m	class:Texture
copy	pyvista/plotting/volume_property.py	/^    def copy(self) -> 'VolumeProperty':$/;"	m	class:VolumeProperty
copy_attributes	pyvista/core/dataobject.py	/^    def copy_attributes(self, dataset: _vtk.vtkDataSet):$/;"	m	class:DataObject
copy_from	pyvista/core/dataset.py	/^    def copy_from(self, mesh: _vtk.vtkDataSet, deep: bool = True):$/;"	m	class:DataSet
copy_mesh	examples/01-filter/image-fft.py	/^    copy_mesh=True,  # don't overwrite scalars when plotting$/;"	v
copy_meta_from	pyvista/core/composite.py	/^    def copy_meta_from(self, ido, deep):  # numpydoc ignore=PR01$/;"	m	class:MultiBlock
copy_meta_from	pyvista/core/dataobject.py	/^    def copy_meta_from(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:DataObject
copy_meta_from	pyvista/core/dataset.py	/^    def copy_meta_from(self, ido: DataSet, deep: bool = True):$/;"	m	class:DataSet
copy_structure	pyvista/core/dataobject.py	/^    def copy_structure(self, dataset: _vtk.vtkDataSet):$/;"	m	class:DataObject
copy_vtk_array	pyvista/core/utilities/arrays.py	/^def copy_vtk_array(array, deep=True):$/;"	f
copybutton_prompt_is_regexp	doc/source/conf.py	/^copybutton_prompt_is_regexp = True$/;"	v
copybutton_prompt_text	doc/source/conf.py	/^copybutton_prompt_text = r'>>> ?|\\.\\.\\. '$/;"	v
copyright	doc/source/conf.py	/^copyright = f"2017-{year}, The PyVista Developers"$/;"	v
copyright	tests/tinypages/conf.py	/^copyright = f"2021-{year}, PyVista developers"$/;"	v
corner_annotation	tests/plotting/test_text.py	/^def corner_annotation():$/;"	f
corners	examples/00-load/create-explicit-structured-grid.py	/^corners = corners.transpose()$/;"	v
corners	examples/00-load/create-explicit-structured-grid.py	/^corners = np.stack((xcorn, ycorn, zcorn))$/;"	v
courier	pyvista/plotting/tools.py	/^    courier = _vtk.VTK_COURIER$/;"	v	class:FONTS
coverage_additional_modules	doc/source/conf.py	/^coverage_additional_modules = [$/;"	v
coverage_ignore_modules	doc/source/conf.py	/^coverage_ignore_modules = [$/;"	v
cow	examples/04-lights/actors.py	/^cow = examples.download_cow()$/;"	v
cp	examples/01-filter/gaussian-smoothing.py	/^cp = [(319.5, 239.5, 1053.7372980874645), (319.5, 239.5, 0.0), (0.0, 1.0, 0.0)]$/;"	v
cpos	examples/00-load/create-parametric-geometric-objects.py	/^cpos = [$/;"	v
cpos	examples/00-load/create-poly.py	/^    cpos=[-1, 1, 0.5],$/;"	v
cpos	examples/00-load/create-surface-draped.py	/^cpos = [$/;"	v
cpos	examples/00-load/linear-cells.py	/^    cpos='xy',$/;"	v
cpos	examples/00-load/read-file.py	/^cpos = [(0.2, 0.3, 0.9), (0, 0, 0), (0, 1, 0)]$/;"	v
cpos	examples/00-load/read-file.py	/^cpos = [(107.0, 68.5, 204.0), (128.0, 86.5, 223.5), (0.45, 0.36, -0.8)]$/;"	v
cpos	examples/00-load/read-file.py	/^cpos = mesh.plot()$/;"	v
cpos	examples/00-load/terrain-mesh.py	/^cpos = [$/;"	v
cpos	examples/00-load/wrap-trimesh.py	/^    cpos='xz',$/;"	v
cpos	examples/01-filter/cell-centers.py	/^cpos = [$/;"	v
cpos	examples/01-filter/compute-normals.py	/^cpos = [$/;"	v
cpos	examples/01-filter/connectivity.py	/^    cpos=cpos,$/;"	v
cpos	examples/01-filter/connectivity.py	/^cpos = [(10.5, 12.2, 18.3), (0.0, 0.0, 0.0), (0.0, 1.0, 0.0)]$/;"	v
cpos	examples/01-filter/connectivity.py	/^cpos = [(40.6018, -280.533, 47.0172), (40.6018, 37.2813, 50.1953), (0.0, 0.0, 1.0)]$/;"	v
cpos	examples/01-filter/decimate.py	/^cpos = [(0.4, -0.07, -0.31), (0.05, -0.13, -0.06), (-0.1, 1, 0.08)]$/;"	v
cpos	examples/01-filter/extract-cells-inside-surface.py	/^cpos = [(13.0, 7.6, -13.85), (0.44, -0.4, -0.37), (-0.28, 0.9, 0.3)]$/;"	v
cpos	examples/01-filter/glyphs.py	/^cpos = pl.show(return_cpos=True)$/;"	v
cpos	examples/01-filter/image-fft.py	/^    cpos="xy",$/;"	v
cpos	examples/01-filter/interpolate.py	/^cpos = [$/;"	v
cpos	examples/01-filter/mesh-quality.py	/^cpos = [$/;"	v
cpos	examples/01-filter/resample.py	/^cpos = [$/;"	v
cpos	examples/01-filter/streamlines.py	/^cpos = [(1.2, 1.2, 1.2), (-0.0, -0.0, -0.0), (0.0, 0.0, 1.0)]$/;"	v
cpos	examples/01-filter/subdivide.py	/^cpos = [$/;"	v
cpos	examples/01-filter/surface-smoothing.py	/^cpos = [-2, 5, 3]$/;"	v
cpos	examples/01-filter/voxelize.py	/^cpos = [$/;"	v
cpos	examples/02-plot/depth_of_field.py	/^cpos = [(11.6159, -1.2803, 1.5338), (4.1354, 1.4796, 1.2711), (-0.0352, -0.0004, 1.0)]$/;"	v
cpos	examples/02-plot/lighting_mesh.py	/^cpos = [(575848.0, 5128459.0, 22289.0), (562835.0, 5114981.5, 2294.5), (-0.5, -0.5, 0.7)]$/;"	v
cpos	examples/02-plot/lookup-table.py	/^cpos = pl.show(return_cpos=True)$/;"	v
cpos	examples/02-plot/ortho-slices.py	/^cpos = [$/;"	v
cpos	examples/02-plot/pbr.py	/^cpos = [(-313.40, 66.09, 1000.61), (0.0, 0.0, 0.0), (0.018, 0.99, -0.06)]$/;"	v
cpos	examples/02-plot/pbr.py	/^cpos = plotter.show()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = pl.show()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = plotter.show()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = pv.Sphere().plot()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = pv.Sphere().plot(theme=my_theme)$/;"	v
cpos	examples/02-plot/vertices.py	/^cpos = [(0.036, 0.367, 0.884), (0.024, 0.033, -0.022), (-0.303, 0.895, -0.325)]$/;"	v
cpos	examples/02-plot/volume.py	/^cpos = [(-381.74, -46.02, 216.54), (74.8305, 89.2905, 100.0), (0.23, 0.072, 0.97)]$/;"	v
cpos	examples/02-plot/volume.py	/^cpos = pl.show(return_cpos=True)$/;"	v
cpos	examples/03-widgets/animation.py	/^cpos = [(0.0, 0.0, 10.0), (0.0, 0.0, 0.0), (0.0, 1.0, 0.0)]$/;"	v
cpos	examples/99-advanced/atomic-orbitals.py	/^    cpos='xz',$/;"	v
cpos	examples/99-advanced/pump-bracket.py	/^    cpos=cpos,$/;"	v
cpos	examples/99-advanced/pump-bracket.py	/^cpos = [$/;"	v
cpos	pyvista/_plot.py	/^        cpos = pl.get_default_cam_pos()$/;"	v
cpos_final	pyvista/demos/logo.py	/^        cpos_final = plotter.camera_position$/;"	v
cpos_param	tests/plotting/test_plotting.py	/^cpos_param = [$/;"	v
create_axes_marker	pyvista/plotting/tools.py	/^def create_axes_marker($/;"	f
create_axes_orientation_box	pyvista/plotting/tools.py	/^def create_axes_orientation_box($/;"	f
create_button	pyvista/plotting/widgets.py	/^        def create_button(color1, color2, color3, dims=(size, size, 1)):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_checkbox_button_widget
create_grid	pyvista/core/utilities/features.py	/^def create_grid(dataset, dimensions=(101, 101, 101)):$/;"	f
create_hex_example	tests/core/test_grid.py	/^def create_hex_example():$/;"	f
create_mesh	examples/03-widgets/slider-bar-widget.py	/^def create_mesh(value):$/;"	f
create_mixed_cells	pyvista/core/utilities/cells.py	/^def create_mixed_cells(mixed_cell_dict, nr_points=None):$/;"	f
create_timer	pyvista/plotting/render_window_interactor.py	/^    def create_timer(self, duration, repeating=True):$/;"	m	class:RenderWindowInteractor
crinkle_algorithm	pyvista/plotting/utilities/algorithms.py	/^def crinkle_algorithm(clip, source):$/;"	f
crinkled	examples/01-filter/clipping.py	/^crinkled = mesh.clip(normal=normal, crinkle=True)$/;"	v
crosscap	examples/00-load/create-parametric-geometric-objects.py	/^crosscap = pv.ParametricCrossCap()$/;"	v
ctp	pyvista/core/filters/data_set.py	/^    def ctp(self, pass_cell_data=False, progress_bar=False, **kwargs):$/;"	m	class:DataSetFilters
cube	examples/01-filter/boolean-operations.py	/^cube = pv.Cube().triangulate().subdivide(3)$/;"	v
cube	examples/02-plot/distance_measurement.py	/^cube = pv.Cube()$/;"	v
cube	examples/02-plot/mesh-picking.py	/^cube = pv.Cube()$/;"	v
cube	examples/02-plot/point-picking.py	/^cube = pv.Cube().translate([10, 10, 0])$/;"	v
cube	examples/02-plot/surface-picking.py	/^cube = pv.Cube()$/;"	v
cube	pyvista/plotting/tools.py	/^        cube = pyvista.Cube()$/;"	v
cube	tests/conftest.py	/^def cube():$/;"	f
cube2	examples/02-plot/distance_measurement.py	/^cube2 = pv.Cube([10, 10, 0])$/;"	v
cube_actor	examples/02-plot/point-picking.py	/^cube_actor = p.add_mesh(cube, pickable=False)  # initially unpickable$/;"	v
cube_actor	pyvista/plotting/tools.py	/^        cube_actor = pyvista.Actor(mapper=cube_mapper)$/;"	v
cube_axes_actor	tests/plotting/test_cube_axes_actor.py	/^def cube_axes_actor():$/;"	f
cube_dense	tests/core/test_polydata.py	/^def cube_dense():$/;"	f
cube_map	pyvista/plotting/texture.py	/^    def cube_map(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
cube_map	pyvista/plotting/texture.py	/^    def cube_map(self, flag: bool):  # numpydoc ignore=GL08$/;"	m	class:Texture
cube_mapper	pyvista/plotting/tools.py	/^        cube_mapper = _vtk.vtkPolyDataMapper()$/;"	v
cubemap	examples/02-plot/depth_of_field.py	/^cubemap = examples.download_sky_box_cube_map()$/;"	v
cubemap	examples/02-plot/pbr.py	/^cubemap = examples.download_sky_box_cube_map()$/;"	v
cubemap	examples/99-advanced/planets.py	/^cubemap = examples.download_cubemap_space_16k()$/;"	v
cubemap	pyvista/plotting/utilities/cubemap.py	/^def cubemap(path='', prefix='', ext='.jpg'):$/;"	f
cubemap	tests/plotting/conftest.py	/^def cubemap(texture):$/;"	f
cubemap_from_filenames	pyvista/plotting/utilities/cubemap.py	/^def cubemap_from_filenames(image_paths):$/;"	f
culling	pyvista/plotting/_property.py	/^    def culling(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Property
culling	pyvista/plotting/_property.py	/^    def culling(self, value):  # numpydoc ignore=GL08$/;"	m	class:Property
current_index	examples/99-advanced/warp-by-vector-eigenmodes.py	/^        current_index = 4 * i + j$/;"	v
curvature	pyvista/core/filters/poly_data.py	/^    def curvature(self, curv_type='mean', progress_bar=False):$/;"	m	class:PolyDataFilters
curvsurf	examples/02-plot/texture.py	/^curvsurf = pv.StructuredGrid(x, y, z)$/;"	v
custom_tools	examples/99-advanced/customization-trame-toolbar.py	/^def custom_tools():$/;"	f
custom_tools	tests/plotting/jupyter/test_trame.py	/^    def custom_tools():$/;"	f	function:test_trame_custom_menu_items
cval	examples/01-filter/compute-volume.py	/^cval = ((rng[1] - rng[0]) * 0.20) + rng[0]$/;"	v
cyl	examples/00-load/create-geometric-objects.py	/^cyl = pv.Cylinder()$/;"	v
cyl	examples/02-plot/interpolate-before-map.py	/^cyl = pv.Cylinder(direction=(0, 0, 1), height=2).elevation()$/;"	v
cyl_source	test.py	/^cyl_source = pv.CylinderSource()$/;"	v
cylinder	examples/02-plot/silhouette.py	/^cylinder = pyvista.Cylinder($/;"	v
cylinderSource	pyvista/core/utilities/geometric_objects.py	/^    cylinderSource = _vtk.vtkCylinderSource()$/;"	v
cylinder_radius	pyvista/plotting/axes_actor.py	/^    def cylinder_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cylinder_radius	pyvista/plotting/axes_actor.py	/^    def cylinder_radius(self, rad: float):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
cylinder_resolution	pyvista/plotting/axes_actor.py	/^    def cylinder_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cylinder_resolution	pyvista/plotting/axes_actor.py	/^    def cylinder_resolution(self, res: int):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
cylinder_to_wormhole	examples/99-advanced/sphere_eversion.py	/^def cylinder_to_wormhole(h, phi, t, p, q):$/;"	f
d_exact	examples/01-filter/distance-between-surfaces.py	/^d_exact = np.linalg.norm(h0.points - closest_points, axis=1)$/;"	v
damavand	doc/source/make_external_gallery.py	/^    damavand=Example($/;"	v
dargs	examples/01-filter/contouring.py	/^dargs = dict(scalars='Elevation', n_colors=n_contours - 1, cmap='Set3')$/;"	v
dargs	examples/01-filter/decimate.py	/^dargs = dict(show_edges=True, color=True)$/;"	v
dargs	examples/01-filter/extract-cells-inside-surface.py	/^dargs = dict(show_edges=True)$/;"	v
dargs	examples/01-filter/gaussian-smoothing.py	/^dargs = dict(clim=smoothed_data.get_data_range(), opacity=[0, 0, 0, 0.1, 0.3, 0.6, 1])$/;"	v
dargs	examples/01-filter/interpolate.py	/^dargs = dict(cmap="coolwarm", clim=[0, 300], scalars="temperature (C)")$/;"	v
dargs	examples/01-filter/resample.py	/^dargs = dict(clim=[0, 200], cmap='rainbow')$/;"	v
dargs	examples/02-plot/depth-peeling.py	/^dargs = dict(opacity=0.5, color="red", smooth_shading=True)$/;"	v
dargs	examples/02-plot/interpolate-before-map.py	/^dargs = dict(scalars='Elevation', cmap='rainbow', show_edges=True)$/;"	v
dargs	examples/02-plot/interpolate-before-map.py	/^dargs = dict(scalars='Elevation', cmap='rainbow', show_edges=True, style='wireframe')$/;"	v
dargs	examples/02-plot/interpolate-before-map.py	/^dargs = dict(scalars='RTData', cmap='rainbow', show_edges=True)$/;"	v
dargs	examples/02-plot/interpolate-before-map.py	/^dargs = dict(scalars='RTData', cmap='rainbow', show_edges=True, n_colors=8)$/;"	v
dargs	examples/02-plot/ortho-slices.py	/^dargs = dict(cmap='gist_ncar_r')$/;"	v
dargs	examples/02-plot/vector-component.py	/^dargs = dict($/;"	v
dark	pyvista/plotting/themes.py	/^    dark = DarkTheme$/;"	v	class:_NATIVE_THEMES
data	examples/00-load/create-point-cloud.py	/^data = points[:, -1]$/;"	v
data	examples/00-load/create-surface-draped.py	/^data = examples.download_gpr_data_array()$/;"	v
data	examples/01-filter/compute-volume.py	/^data = examples.load_channels()$/;"	v
data	examples/01-filter/gaussian-smoothing.py	/^data = examples.download_brain()$/;"	v
data	examples/01-filter/gaussian-smoothing.py	/^data = examples.download_gourds()$/;"	v
data	examples/01-filter/image-fft.py	/^data = fft_image['PNGImage'].reshape(height, width)  # note: axes flipped$/;"	v
data	examples/01-filter/surface-smoothing.py	/^data = examples.load_uniform()$/;"	v
data	examples/02-plot/chart_basics.py	/^data = [rng.beta(alpha, beta, N) for alpha, beta in zip(alphas, betas)]$/;"	v
data	examples/02-plot/chart_basics.py	/^data = [rng.poisson(lam, 20) for lam in range(2, 12, 2)]$/;"	v
data	examples/02-plot/chart_basics.py	/^data = np.array([8.4, 6.1, 2.7, 2.4, 0.9])$/;"	v
data	pyvista/plotting/charts.py	/^    def data(self):  # numpydoc ignore=RT01$/;"	m	class:BoxPlot
data	pyvista/plotting/charts.py	/^    def data(self):  # numpydoc ignore=RT01$/;"	m	class:PiePlot
data_range	examples_trame/advanced/contour.py	/^data_range = tuple(volume.get_data_range())$/;"	v
data_to_probe	examples/01-filter/resample.py	/^data_to_probe = examples.download_embryo()$/;"	v
data_to_probe	examples/01-filter/resample.py	/^data_to_probe = examples.load_uniform()$/;"	v
dataset	examples/01-filter/clipping-with-surface.py	/^dataset = pv.RectilinearGrid(xx, yy, zz)$/;"	v
dataset	examples/01-filter/clipping.py	/^dataset = examples.download_bunny_coarse()$/;"	v
dataset	examples/01-filter/clipping.py	/^dataset = examples.download_office()$/;"	v
dataset	examples/01-filter/compute-volume.py	/^dataset = examples.load_uniform()$/;"	v
dataset	examples/01-filter/integrate-data.py	/^dataset = examples.download_blood_vessels()$/;"	v
dataset	examples/01-filter/using-filters.py	/^dataset = examples.load_uniform()$/;"	v
dataset	examples/99-advanced/add-example.py	/^dataset = examples.download_bunny()$/;"	v
dataset	examples/99-advanced/add-example.py	/^dataset = pv.Sphere()$/;"	v
dataset	examples/99-advanced/pump-bracket.py	/^dataset = examples.download_pump_bracket()$/;"	v
dataset	pyvista/plotting/composite_mapper.py	/^    def dataset(self) -> 'pv.MultiBlock':  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
dataset	pyvista/plotting/composite_mapper.py	/^    def dataset(self, obj: 'pv.MultiBlock'):  # numpydoc ignore=GL08$/;"	m	class:CompositePolyDataMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset($/;"	m	class:DataSetMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset($/;"	m	class:_BaseVolumeMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset(self) -> Optional['pv.core.dataset.DataSet']:  # numpydoc ignore=RT01$/;"	m	class:DataSetMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset(self):  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
dataset_mapper	tests/plotting/mappers/test_mapper.py	/^def dataset_mapper(sphere):$/;"	f
datasets	pyvista/core/utilities/reader.py	/^    def datasets(self):  # numpydoc ignore=RT01$/;"	m	class:PVDReader
datasets	pyvista/plotting/helpers.py	/^    datasets = [[data_a, data_b], [data_c, data_d]]$/;"	v
datasets	tests/conftest.py	/^def datasets():$/;"	f
datasets_vtk9	tests/conftest.py	/^def datasets_vtk9():$/;"	f
decimate	pyvista/core/filters/poly_data.py	/^    def decimate($/;"	m	class:PolyDataFilters
decimate	pyvista/plotting/themes.py	/^    def decimate(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
decimate	pyvista/plotting/themes.py	/^    def decimate(self, decimate: float):  # numpydoc ignore=GL08$/;"	m	class:_SilhouetteConfig
decimate_boundary	pyvista/core/filters/data_set.py	/^    def decimate_boundary(self, target_reduction=0.5, progress_bar=False):$/;"	m	class:DataSetFilters
decimate_boundary	pyvista/core/pointset.py	/^    def decimate_boundary(self, *args, **kwargs):$/;"	m	class:PointSet
decimate_pro	pyvista/core/filters/poly_data.py	/^    def decimate_pro($/;"	m	class:PolyDataFilters
decimated	examples/01-filter/decimate.py	/^decimated = mesh.decimate(target_reduction)$/;"	v
decimated	examples/02-plot/linked.py	/^decimated = mesh.decimate_boundary(target_reduction=0.75)$/;"	v
decimated_foo_sphere	examples/99-advanced/extending-pyvista.py	/^decimated_foo_sphere = FooData(foo_sphere.decimate(0.5))$/;"	v
decimated_foo_sphere	examples/99-advanced/extending-pyvista.py	/^decimated_foo_sphere = foo_sphere.decimate(0.5)$/;"	v
decimation_algorithm	pyvista/plotting/utilities/algorithms.py	/^def decimation_algorithm(inp, target_reduction):$/;"	f
decompose_polyhedra	pyvista/core/utilities/reader.py	/^    def decompose_polyhedra(self):  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
decompose_polyhedra	pyvista/core/utilities/reader.py	/^    def decompose_polyhedra(self, value):  # numpydoc ignore=GL08$/;"	m	class:OpenFOAMReader
deep_clean	pyvista/plotting/charts.py	/^    def deep_clean(self):$/;"	m	class:Charts
deep_clean	pyvista/plotting/plotter.py	/^    def deep_clean(self):$/;"	m	class:BasePlotter
deep_clean	pyvista/plotting/render_passes.py	/^    def deep_clean(self):$/;"	m	class:RenderPasses
deep_clean	pyvista/plotting/renderer.py	/^    def deep_clean(self, render=False):$/;"	m	class:Renderer
deep_clean	pyvista/plotting/renderers.py	/^    def deep_clean(self):$/;"	m	class:Renderers
deep_copy	pyvista/core/dataobject.py	/^    def deep_copy(self, to_copy: _vtk.vtkDataObject) -> _vtk.vtkDataObject:$/;"	m	class:DataObject
default	pyvista/plotting/themes.py	/^    default = DocumentTheme$/;"	v	class:_NATIVE_THEMES
default_mode	pyvista/plotting/themes.py	/^    def default_mode(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
default_mode	pyvista/plotting/themes.py	/^    def default_mode(self, mode: str):  # numpydoc ignore=GL08$/;"	m	class:_TrameConfig
default_server_rendering	pyvista/trame/jupyter.py	/^        default_server_rendering=default_server_rendering,$/;"	v
default_theme	tests/plotting/test_theme.py	/^def default_theme():$/;"	f
delaunay_2d	pyvista/core/filters/poly_data.py	/^    def delaunay_2d($/;"	m	class:PolyDataFilters
delaunay_2d	pyvista/core/filters/unstructured_grid.py	/^    def delaunay_2d(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:UnstructuredGridFilters
delaunay_3d	pyvista/core/filters/data_set.py	/^    def delaunay_3d(self, alpha=0.0, tol=0.001, offset=2.5, progress_bar=False):$/;"	m	class:DataSetFilters
delaunay_3d	pyvista/core/pointset.py	/^    def delaunay_3d(self, *args, **kwargs):$/;"	m	class:PointSet
delete_downloads	pyvista/examples/downloads.py	/^def delete_downloads():$/;"	f
delta_x	examples/01-filter/collisions.py	/^delta_x = 0.05$/;"	v
dem	examples/00-load/terrain-mesh.py	/^dem = examples.download_crater_topo()$/;"	v
dense	examples_trame/basic/file_viewer.py	/^            dense=True,$/;"	v
depth_peeling	pyvista/plotting/themes.py	/^    def depth_peeling(self) -> _DepthPeelingConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
depth_peeling	pyvista/plotting/themes.py	/^    def depth_peeling(self, config: _DepthPeelingConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
dest	tests/check_doctest_names.py	/^        dest='respect_skips',$/;"	v
destroy_timer	pyvista/plotting/render_window_interactor.py	/^    def destroy_timer(self, timer_id):$/;"	m	class:RenderWindowInteractor
dh	pyvista/trame/jupyter.py	/^        dh = f'{dh}px'$/;"	v
diff	examples/01-filter/sampling_functions_2d.py	/^diff = z.max() - z.min()$/;"	v
diffuse	examples/04-lights/shadows.py	/^    diffuse=0.5,$/;"	v
diffuse	pyvista/plotting/_property.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
diffuse	pyvista/plotting/_property.py	/^    def diffuse(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
diffuse	pyvista/plotting/themes.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
diffuse	pyvista/plotting/themes.py	/^    def diffuse(self, diffuse: float):  # numpydoc ignore=GL08$/;"	m	class:_LightingConfig
diffuse	pyvista/plotting/volume_property.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
diffuse	pyvista/plotting/volume_property.py	/^    def diffuse(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
diffuse_color	pyvista/plotting/_property.py	/^    def diffuse_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
diffuse_color	pyvista/plotting/_property.py	/^    def diffuse_color(self, value):  # numpydoc ignore=GL08$/;"	m	class:Property
diffuse_color	pyvista/plotting/lights.py	/^    def diffuse_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
diffuse_color	pyvista/plotting/lights.py	/^    def diffuse_color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Light
dimension	pyvista/core/cell.py	/^    def dimension(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Cell
dimensions	examples/01-filter/flying_edges.py	/^    dimensions=(n, n, n),$/;"	v
dimensions	examples/99-advanced/openfoam-cooling.py	/^dimensions = ($/;"	v
dimensions	examples/99-advanced/openfoam-tubes.py	/^dimensions = ($/;"	v
dimensions	pyvista/core/grid.py	/^    def dimensions(self) -> Tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:Grid
dimensions	pyvista/core/grid.py	/^    def dimensions(self, dims):  # numpydoc ignore=GL08$/;"	m	class:RectilinearGrid
dimensions	pyvista/core/grid.py	/^    def dimensions(self, dims: Sequence[int]):  # numpydoc ignore=GL08$/;"	m	class:Grid
dimensions	pyvista/core/pointset.py	/^    def dimensions(self) -> Tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:ExplicitStructuredGrid
dimensions	pyvista/core/pointset.py	/^    def dimensions(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
dimensions	pyvista/core/pointset.py	/^    def dimensions(self, dims):  # numpydoc ignore=GL08$/;"	m	class:StructuredGrid
dimensions	pyvista/plotting/texture.py	/^    def dimensions(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:Texture
dims	examples/00-load/create-explicit-structured-grid.py	/^dims = np.asarray((ni, nj, nk)) + 1$/;"	v
dims	tests/core/test_cells.py	/^dims = [3, 2, 3, 2, 3, 3, 3]$/;"	v
dini	examples/00-load/create-parametric-geometric-objects.py	/^dini = pv.ParametricDini()$/;"	v
dir_path	pyvista/examples/examples.py	/^dir_path = os.path.dirname(os.path.realpath(__file__))$/;"	v
direction	examples/01-filter/extrude-trim.py	/^    direction=(0, 0, -1),$/;"	v
direction	examples/99-advanced/ray-trace-moeller.py	/^direction = np.array([0, 0, -1])$/;"	v
direction	pyvista/core/utilities/geometric_objects.py	/^        direction=direction,$/;"	v
direction	pyvista/core/utilities/geometric_sources.py	/^    def direction(self) -> Sequence[float]:$/;"	m	class:ConeSource
direction	pyvista/core/utilities/geometric_sources.py	/^    def direction(self, direction: Sequence[float]):$/;"	m	class:ConeSource
direction	pyvista/core/utilities/parametric_objects.py	/^    direction = kwargs.pop('direction', [1.0, 0.0, 0.0])$/;"	v
direction	pyvista/plotting/camera.py	/^    def direction(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
disable	pyvista/plotting/affine_widget.py	/^    def disable(self):$/;"	m	class:AffineWidget3D
disable	pyvista/plotting/plotter.py	/^    def disable(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable	pyvista/plotting/renderer.py	/^    def disable(self):$/;"	m	class:Renderer
disable_3_lights	pyvista/plotting/plotter.py	/^    def disable_3_lights(self):$/;"	m	class:BasePlotter
disable_all_bases	pyvista/core/utilities/reader.py	/^    def disable_all_bases(self):$/;"	m	class:CGNSReader
disable_all_cell_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_cell_arrays(self):$/;"	m	class:PointCellDataSelection
disable_all_families	pyvista/core/utilities/reader.py	/^    def disable_all_families(self):$/;"	m	class:CGNSReader
disable_all_patch_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_patch_arrays(self):$/;"	m	class:OpenFOAMReader
disable_all_point_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_point_arrays(self):$/;"	m	class:PointCellDataSelection
disable_anti_aliasing	pyvista/plotting/plotter.py	/^    def disable_anti_aliasing(self, all_renderers=True):$/;"	m	class:BasePlotter
disable_anti_aliasing	pyvista/plotting/renderer.py	/^    def disable_anti_aliasing(self):$/;"	m	class:Renderer
disable_cell_array	pyvista/core/utilities/reader.py	/^    def disable_cell_array(self, name):$/;"	m	class:PointCellDataSelection
disable_depth_of_field	pyvista/plotting/plotter.py	/^    def disable_depth_of_field(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_depth_of_field	pyvista/plotting/renderer.py	/^    def disable_depth_of_field(self):$/;"	m	class:Renderer
disable_depth_of_field_pass	pyvista/plotting/render_passes.py	/^    def disable_depth_of_field_pass(self):$/;"	m	class:RenderPasses
disable_depth_peeling	pyvista/plotting/plotter.py	/^    def disable_depth_peeling(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_depth_peeling	pyvista/plotting/renderer.py	/^    def disable_depth_peeling(self):$/;"	m	class:Renderer
disable_edl_pass	pyvista/plotting/render_passes.py	/^    def disable_edl_pass(self):$/;"	m	class:RenderPasses
disable_eye_dome_lighting	pyvista/plotting/plotter.py	/^    def disable_eye_dome_lighting(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_eye_dome_lighting	pyvista/plotting/renderer.py	/^    def disable_eye_dome_lighting(self):$/;"	m	class:Renderer
disable_hidden_line_removal	pyvista/plotting/plotter.py	/^    def disable_hidden_line_removal(self, all_renderers=True):$/;"	m	class:BasePlotter
disable_hidden_line_removal	pyvista/plotting/renderer.py	/^    def disable_hidden_line_removal(self):$/;"	m	class:Renderer
disable_parallel_projection	pyvista/plotting/camera.py	/^    def disable_parallel_projection(self):$/;"	m	class:Camera
disable_parallel_projection	pyvista/plotting/plotter.py	/^    def disable_parallel_projection(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_parallel_projection	pyvista/plotting/renderer.py	/^    def disable_parallel_projection(self):$/;"	m	class:Renderer
disable_patch_array	pyvista/core/utilities/reader.py	/^    def disable_patch_array(self, name):$/;"	m	class:OpenFOAMReader
disable_picking	pyvista/plotting/picking.py	/^    def disable_picking(self):$/;"	m	class:PickingInterface
disable_picking	pyvista/plotting/picking.py	/^    def disable_picking(self):$/;"	m	class:PickingMethods
disable_point_array	pyvista/core/utilities/reader.py	/^    def disable_point_array(self, name):$/;"	m	class:PointCellDataSelection
disable_shadow_pass	pyvista/plotting/render_passes.py	/^    def disable_shadow_pass(self):$/;"	m	class:RenderPasses
disable_shadows	pyvista/plotting/plotter.py	/^    def disable_shadows(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_shadows	pyvista/plotting/renderer.py	/^    def disable_shadows(self):$/;"	m	class:Renderer
disable_ssaa_pass	pyvista/plotting/render_passes.py	/^    def disable_ssaa_pass(self):$/;"	m	class:RenderPasses
disable_ssao	pyvista/plotting/plotter.py	/^    def disable_ssao(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_ssao	pyvista/plotting/renderer.py	/^    def disable_ssao(self):$/;"	m	class:Renderer
disable_ssao_pass	pyvista/plotting/render_passes.py	/^    def disable_ssao_pass(self):$/;"	m	class:RenderPasses
disable_stereo_render	pyvista/plotting/plotter.py	/^    def disable_stereo_render(self):$/;"	m	class:BasePlotter
disc	examples/00-load/create-geometric-objects.py	/^disc = pv.Disc()$/;"	v
disc	examples/01-filter/extrude-trim.py	/^disc = pv.Disc(c_res=3, r_res=4, inner=0)$/;"	v
discover_modules	tests/check_doctest_names.py	/^def discover_modules(entry=pyvista, recurse=True):$/;"	f
discretize	doc/source/make_external_gallery.py	/^    discretize=Example($/;"	v
displacement_points	examples/99-advanced/warp-by-vector-eigenmodes.py	/^    displacement_points = np.zeros_like(vol.points)$/;"	v
display_kwargs	pyvista/plotting/helpers.py	/^        display_kwargs = {}$/;"	v
dist	examples/01-filter/distance-between-surfaces.py	/^    dist = np.sqrt(np.sum((ip - p) ** 2))$/;"	v
dist	examples/01-filter/flying_edges.py	/^dist = np.linalg.norm(mesh.points, axis=1)$/;"	v
distance	examples/01-filter/geodesic.py	/^distance = land.geodesic_distance(cape_town, rome)$/;"	v
distance	pyvista/plotting/camera.py	/^    def distance(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
distance	pyvista/plotting/camera.py	/^    def distance(self, distance):  # numpydoc ignore=GL08$/;"	m	class:Camera
distribute_blocks	pyvista/core/utilities/reader.py	/^    def distribute_blocks(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
distribute_blocks	pyvista/core/utilities/reader.py	/^    def distribute_blocks(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CGNSReader
dists	examples/02-plot/distance-along-spline.py	/^dists = [0, 4, 8, 11]$/;"	v
dists	examples/02-plot/moving_cmap.py	/^dists = 2 * np.pi * (dists - dists.min()) \/ (dists.max() - dists.min())$/;"	v
dists	examples/02-plot/moving_cmap.py	/^dists = np.linalg.norm(mesh.points, axis=1)$/;"	v
divider	pyvista/trame/ui/vuetify2.py	/^def divider(**kwargs):  # numpydoc ignore=PR01$/;"	f
divider	pyvista/trame/ui/vuetify3.py	/^def divider(**kwargs):  # numpydoc ignore=PR01$/;"	f
doc_subs	pyvista/plotting/charts.py	/^def doc_subs(member):  # numpydoc ignore=PR01,RT01$/;"	f
document	pyvista/plotting/themes.py	/^    document = DocumentTheme$/;"	v	class:_NATIVE_THEMES
document_pro	pyvista/plotting/themes.py	/^    document_pro = DocumentProTheme$/;"	v	class:_NATIVE_THEMES
dolfin	examples/00-load/read-dolfin.py	/^dolfin = pv.read(saved_file)$/;"	v
double_click_callback	tests/plotting/test_render_window_interactor.py	/^    def double_click_callback(mouse_position):$/;"	f	function:test_track_click_position
download_action_figure	pyvista/examples/downloads.py	/^def download_action_figure(load=True):  # pragma: no cover$/;"	f
download_aero_bracket	pyvista/examples/downloads.py	/^def download_aero_bracket(load=True):  # pragma: no cover$/;"	f
download_angular_sector	pyvista/examples/downloads.py	/^def download_angular_sector(load=True):  # pragma: no cover$/;"	f
download_antarctica_velocity	pyvista/examples/downloads.py	/^def download_antarctica_velocity(load=True):  # pragma: no cover$/;"	f
download_armadillo	pyvista/examples/downloads.py	/^def download_armadillo(load=True):  # pragma: no cover$/;"	f
download_avocado	pyvista/examples/gltf.py	/^def download_avocado():  # pragma: no cover$/;"	f
download_backward_facing_step	pyvista/examples/downloads.py	/^def download_backward_facing_step(load=True):  # pragma: no cover$/;"	f
download_beach	pyvista/examples/downloads.py	/^def download_beach(load=True):  # pragma: no cover$/;"	f
download_bird	pyvista/examples/downloads.py	/^def download_bird(load=True):  # pragma: no cover$/;"	f
download_bird_bath	pyvista/examples/downloads.py	/^def download_bird_bath(load=True):  # pragma: no cover$/;"	f
download_bird_texture	pyvista/examples/downloads.py	/^def download_bird_texture(load=True):  # pragma: no cover$/;"	f
download_black_vase	pyvista/examples/downloads.py	/^def download_black_vase(load=True):  # pragma: no cover$/;"	f
download_blood_vessels	pyvista/examples/downloads.py	/^def download_blood_vessels(load=True):  # pragma: no cover$/;"	f
download_blow	pyvista/examples/downloads.py	/^def download_blow(load=True):  # pragma: no cover$/;"	f
download_bolt_nut	pyvista/examples/downloads.py	/^def download_bolt_nut(load=True):  # pragma: no cover$/;"	f
download_brain	pyvista/examples/downloads.py	/^def download_brain(load=True):  # pragma: no cover$/;"	f
download_brain_atlas_with_sides	pyvista/examples/downloads.py	/^def download_brain_atlas_with_sides(load=True):  # pragma: no cover$/;"	f
download_bunny	pyvista/examples/downloads.py	/^def download_bunny(load=True):  # pragma: no cover$/;"	f
download_bunny_coarse	pyvista/examples/downloads.py	/^def download_bunny_coarse(load=True):  # pragma: no cover$/;"	f
download_cad_model	pyvista/examples/downloads.py	/^def download_cad_model(load=True):  # pragma: no cover$/;"	f
download_cad_model_case	pyvista/examples/downloads.py	/^def download_cad_model_case(load=True):  # pragma: no cover$/;"	f
download_cake_easy	pyvista/examples/downloads.py	/^def download_cake_easy(load=True):  # pragma: no cover$/;"	f
download_cake_easy_texture	pyvista/examples/downloads.py	/^def download_cake_easy_texture(load=True):  # pragma: no cover$/;"	f
download_can	pyvista/examples/downloads.py	/^def download_can(partial=False, load=True):  # pragma: no cover$/;"	f
download_can_crushed_hdf	pyvista/examples/downloads.py	/^def download_can_crushed_hdf(load=True):  # pragma: no cover$/;"	f
download_carburator	pyvista/examples/downloads.py	/^def download_carburator(load=True):  # pragma: no cover$/;"	f
download_carburetor	pyvista/examples/downloads.py	/^def download_carburetor(load=True):  # pragma: no cover$/;"	f
download_carotid	pyvista/examples/downloads.py	/^def download_carotid(load=True):  # pragma: no cover$/;"	f
download_cavity	pyvista/examples/downloads.py	/^def download_cavity(load=True):  # pragma: no cover$/;"	f
download_cells_nd	pyvista/examples/downloads.py	/^def download_cells_nd(load=True):  # pragma: no cover$/;"	f
download_cgns_multi	pyvista/examples/downloads.py	/^def download_cgns_multi(load=True):  # pragma: no cover$/;"	f
download_cgns_structured	pyvista/examples/downloads.py	/^def download_cgns_structured(load=True):  # pragma: no cover$/;"	f
download_chest	pyvista/examples/downloads.py	/^def download_chest(load=True):  # pragma: no cover$/;"	f
download_cloud_dark_matter	pyvista/examples/downloads.py	/^def download_cloud_dark_matter(load=True):  # pragma: no cover$/;"	f
download_cloud_dark_matter_dense	pyvista/examples/downloads.py	/^def download_cloud_dark_matter_dense(load=True):  # pragma: no cover$/;"	f
download_clown	pyvista/examples/downloads.py	/^def download_clown(load=True):  # pragma: no cover$/;"	f
download_coastlines	pyvista/examples/downloads.py	/^def download_coastlines(load=True):  # pragma: no cover$/;"	f
download_coil_magnetic_field	pyvista/examples/downloads.py	/^def download_coil_magnetic_field(load=True):  # pragma: no cover$/;"	f
download_cow	pyvista/examples/downloads.py	/^def download_cow(load=True):  # pragma: no cover$/;"	f
download_cow_head	pyvista/examples/downloads.py	/^def download_cow_head(load=True):  # pragma: no cover$/;"	f
download_crater_imagery	pyvista/examples/downloads.py	/^def download_crater_imagery(load=True):  # pragma: no cover$/;"	f
download_crater_topo	pyvista/examples/downloads.py	/^def download_crater_topo(load=True):  # pragma: no cover$/;"	f
download_cubemap_park	pyvista/examples/downloads.py	/^def download_cubemap_park():  # pragma: no cover$/;"	f
download_cubemap_space_16k	pyvista/examples/downloads.py	/^def download_cubemap_space_16k():  # pragma: no cover$/;"	f
download_cubemap_space_4k	pyvista/examples/downloads.py	/^def download_cubemap_space_4k():  # pragma: no cover$/;"	f
download_cylinder_crossflow	pyvista/examples/downloads.py	/^def download_cylinder_crossflow(load=True):  # pragma: no cover$/;"	f
download_damaged_helmet	pyvista/examples/gltf.py	/^def download_damaged_helmet():  # pragma: no cover$/;"	f
download_damavand_volcano	pyvista/examples/downloads.py	/^def download_damavand_volcano(load=True):  # pragma: no cover$/;"	f
download_delaunay_example	pyvista/examples/downloads.py	/^def download_delaunay_example(load=True):  # pragma: no cover$/;"	f
download_dicom_stack	pyvista/examples/downloads.py	/^def download_dicom_stack(load: bool = True) -> Union[pyvista.ImageData, str]:  # pragma: no cover$/;"	f
download_dikhololo_night	pyvista/examples/downloads.py	/^def download_dikhololo_night():  # pragma: no cover$/;"	f
download_disc_quads	pyvista/examples/downloads.py	/^def download_disc_quads(load=True):  # pragma: no cover$/;"	f
download_dolfin	pyvista/examples/downloads.py	/^def download_dolfin(load=True):  # pragma: no cover$/;"	f
download_doorman	pyvista/examples/downloads.py	/^def download_doorman(load=True):  # pragma: no cover$/;"	f
download_dragon	pyvista/examples/downloads.py	/^def download_dragon(load=True):  # pragma: no cover$/;"	f
download_drill	pyvista/examples/downloads.py	/^def download_drill(load=True):  # pragma: no cover$/;"	f
download_dual_sphere_animation	pyvista/examples/downloads.py	/^def download_dual_sphere_animation(load=True):  # pragma: no cover$/;"	f
download_electronics_cooling	pyvista/examples/downloads.py	/^def download_electronics_cooling(load=True):  # pragma: no cover$/;"	f
download_embryo	pyvista/examples/downloads.py	/^def download_embryo(load=True):  # pragma: no cover$/;"	f
download_emoji	pyvista/examples/downloads.py	/^def download_emoji(load=True):  # pragma: no cover$/;"	f
download_emoji_texture	pyvista/examples/downloads.py	/^def download_emoji_texture(load=True):  # pragma: no cover$/;"	f
download_exodus	pyvista/examples/downloads.py	/^def download_exodus(load=True):  # pragma: no cover$/;"	f
download_face	pyvista/examples/downloads.py	/^def download_face(load=True):  # pragma: no cover$/;"	f
download_face2	pyvista/examples/downloads.py	/^def download_face2(load=True):  # pragma: no cover$/;"	f
download_faults	pyvista/examples/downloads.py	/^def download_faults(load=True):  # pragma: no cover$/;"	f
download_fea_bracket	pyvista/examples/downloads.py	/^def download_fea_bracket(load=True):  # pragma: no cover$/;"	f
download_fea_hertzian_contact_cylinder	pyvista/examples/downloads.py	/^def download_fea_hertzian_contact_cylinder(load=True):  # pragma: no cover$/;"	f
download_file	pyvista/examples/downloads.py	/^def download_file(filename):$/;"	f
download_filled_contours	pyvista/examples/downloads.py	/^def download_filled_contours(load=True):  # pragma: no cover$/;"	f
download_foot_bones	pyvista/examples/downloads.py	/^def download_foot_bones(load=True):  # pragma: no cover$/;"	f
download_frog	pyvista/examples/downloads.py	/^def download_frog(load=True):  # pragma: no cover$/;"	f
download_frog_tissue	pyvista/examples/downloads.py	/^def download_frog_tissue(load=True):  # pragma: no cover$/;"	f
download_gearbox	pyvista/examples/gltf.py	/^def download_gearbox():  # pragma: no cover$/;"	f
download_gears	pyvista/examples/downloads.py	/^def download_gears(load=True):  # pragma: no cover$/;"	f
download_gif_simple	pyvista/examples/downloads.py	/^def download_gif_simple(load=True):  # pragma: no cover$/;"	f
download_gourds	pyvista/examples/downloads.py	/^def download_gourds(zoom=False, load=True):  # pragma: no cover$/;"	f
download_gourds_pnm	pyvista/examples/downloads.py	/^def download_gourds_pnm(load=True):  # pragma: no cover$/;"	f
download_gourds_texture	pyvista/examples/downloads.py	/^def download_gourds_texture(zoom=False, load=True):  # pragma: no cover$/;"	f
download_gpr_data_array	pyvista/examples/downloads.py	/^def download_gpr_data_array(load=True):  # pragma: no cover$/;"	f
download_gpr_path	pyvista/examples/downloads.py	/^def download_gpr_path(load=True):  # pragma: no cover$/;"	f
download_guitar	pyvista/examples/downloads.py	/^def download_guitar(load=True):  # pragma: no cover$/;"	f
download_head	pyvista/examples/downloads.py	/^def download_head(load=True):  # pragma: no cover$/;"	f
download_head_2	pyvista/examples/downloads.py	/^def download_head_2(load=True):  # pragma: no cover$/;"	f
download_honolulu	pyvista/examples/downloads.py	/^def download_honolulu(load=True):  # pragma: no cover$/;"	f
download_horse	pyvista/examples/downloads.py	/^def download_horse(load=True):  # pragma: no cover$/;"	f
download_horse_points	pyvista/examples/downloads.py	/^def download_horse_points(load=True):  # pragma: no cover$/;"	f
download_human	pyvista/examples/downloads.py	/^def download_human(load=True):  # pragma: no cover$/;"	f
download_iron_protein	pyvista/examples/downloads.py	/^def download_iron_protein(load=True):  # pragma: no cover$/;"	f
download_ivan_angel	pyvista/examples/downloads.py	/^def download_ivan_angel(load=True):  # pragma: no cover$/;"	f
download_jupiter_surface	pyvista/examples/planets.py	/^def download_jupiter_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_kitchen	pyvista/examples/downloads.py	/^def download_kitchen(split=False, load=True):  # pragma: no cover$/;"	f
download_knee	pyvista/examples/downloads.py	/^def download_knee(load=True):  # pragma: no cover$/;"	f
download_knee_full	pyvista/examples/downloads.py	/^def download_knee_full(load=True):  # pragma: no cover$/;"	f
download_letter_a	pyvista/examples/downloads.py	/^def download_letter_a(load=True):  # pragma: no cover$/;"	f
download_letter_k	pyvista/examples/downloads.py	/^def download_letter_k(load=True):  # pragma: no cover$/;"	f
download_lidar	pyvista/examples/downloads.py	/^def download_lidar(load=True):  # pragma: no cover$/;"	f
download_lobster	pyvista/examples/downloads.py	/^def download_lobster(load=True):  # pragma: no cover$/;"	f
download_louis_louvre	pyvista/examples/downloads.py	/^def download_louis_louvre(load=True):  # pragma: no cover$/;"	f
download_lucy	pyvista/examples/downloads.py	/^def download_lucy(load=True):  # pragma: no cover$/;"	f
download_mars_jpg	pyvista/examples/downloads.py	/^def download_mars_jpg():$/;"	f
download_mars_surface	pyvista/examples/planets.py	/^def download_mars_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_masonry_texture	pyvista/examples/downloads.py	/^def download_masonry_texture(load=True):  # pragma: no cover$/;"	f
download_mercury_surface	pyvista/examples/planets.py	/^def download_mercury_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_meshio_xdmf	pyvista/examples/downloads.py	/^def download_meshio_xdmf(load=True):  # pragma: no cover$/;"	f
download_milk_truck	pyvista/examples/gltf.py	/^def download_milk_truck():  # pragma: no cover$/;"	f
download_milkyway_sky_background	pyvista/examples/planets.py	/^def download_milkyway_sky_background(texture=False, load=True):  # pragma: no cover$/;"	f
download_model_with_variance	pyvista/examples/downloads.py	/^def download_model_with_variance(load=True):  # pragma: no cover$/;"	f
download_moon_surface	pyvista/examples/planets.py	/^def download_moon_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_moonlanding_image	pyvista/examples/downloads.py	/^def download_moonlanding_image(load=True):  # pragma: no cover$/;"	f
download_motor	pyvista/examples/downloads.py	/^def download_motor(load=True):  # pragma: no cover$/;"	f
download_mount_damavand	pyvista/examples/downloads.py	/^def download_mount_damavand(load=True):  # pragma: no cover$/;"	f
download_mug	pyvista/examples/downloads.py	/^def download_mug(load=True):  # pragma: no cover$/;"	f
download_naca	pyvista/examples/downloads.py	/^def download_naca(load=True):  # pragma: no cover$/;"	f
download_nefertiti	pyvista/examples/downloads.py	/^def download_nefertiti(load=True):  # pragma: no cover$/;"	f
download_neptune_surface	pyvista/examples/planets.py	/^def download_neptune_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_notch_displacement	pyvista/examples/downloads.py	/^def download_notch_displacement(load=True):  # pragma: no cover$/;"	f
download_notch_stress	pyvista/examples/downloads.py	/^def download_notch_stress(load=True):  # pragma: no cover$/;"	f
download_oblique_cone	pyvista/examples/downloads.py	/^def download_oblique_cone(load=True):  # pragma: no cover$/;"	f
download_office	pyvista/examples/downloads.py	/^def download_office(load=True):  # pragma: no cover$/;"	f
download_openfoam_tubes	pyvista/examples/downloads.py	/^def download_openfoam_tubes(load=True):  # pragma: no cover$/;"	f
download_osmnx_graph	pyvista/examples/downloads.py	/^def download_osmnx_graph():  # pragma: no cover$/;"	f
download_owl	pyvista/examples/downloads.py	/^def download_owl(load=True):  # pragma: no cover$/;"	f
download_parched_canal_4k	pyvista/examples/downloads.py	/^def download_parched_canal_4k(load=True):  # pragma: no cover$/;"	f
download_particles_lethe	pyvista/examples/downloads.py	/^def download_particles_lethe(load=True):  # pragma: no cover$/;"	f
download_pepper	pyvista/examples/downloads.py	/^def download_pepper(load=True):  # pragma: no cover$/;"	f
download_pine_roots	pyvista/examples/downloads.py	/^def download_pine_roots(load=True):  # pragma: no cover$/;"	f
download_plastic_vase	pyvista/examples/downloads.py	/^def download_plastic_vase(load=True):  # pragma: no cover$/;"	f
download_pluto_surface	pyvista/examples/planets.py	/^def download_pluto_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_poly_line	pyvista/examples/downloads.py	/^def download_poly_line(load=True):  # pragma: no cover$/;"	f
download_prostate	pyvista/examples/downloads.py	/^def download_prostate(load=True):  # pragma: no cover$/;"	f
download_pump_bracket	pyvista/examples/downloads.py	/^def download_pump_bracket(load=True):  # pragma: no cover$/;"	f
download_puppy	pyvista/examples/downloads.py	/^def download_puppy(load=True):  # pragma: no cover$/;"	f
download_puppy_texture	pyvista/examples/downloads.py	/^def download_puppy_texture(load=True):  # pragma: no cover$/;"	f
download_quadratic_pyramid	pyvista/examples/downloads.py	/^def download_quadratic_pyramid(load=True):  # pragma: no cover$/;"	f
download_rectilinear_grid	pyvista/examples/downloads.py	/^def download_rectilinear_grid(load=True):  # pragma: no cover$/;"	f
download_rgba_texture	pyvista/examples/downloads.py	/^def download_rgba_texture(load=True):  # pragma: no cover$/;"	f
download_room_surface_mesh	pyvista/examples/downloads.py	/^def download_room_surface_mesh(load=True):  # pragma: no cover$/;"	f
download_saddle_surface	pyvista/examples/downloads.py	/^def download_saddle_surface(load=True):  # pragma: no cover$/;"	f
download_saturn_rings	pyvista/examples/planets.py	/^def download_saturn_rings(texture=False, load=True):  # pragma: no cover$/;"	f
download_saturn_surface	pyvista/examples/planets.py	/^def download_saturn_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_sea_vase	pyvista/examples/downloads.py	/^def download_sea_vase(load=True):  # pragma: no cover$/;"	f
download_sextant	pyvista/examples/vrml.py	/^def download_sextant():  # pragma: no cover$/;"	f
download_shark	pyvista/examples/downloads.py	/^def download_shark(load=True):  # pragma: no cover$/;"	f
download_sheen_chair	pyvista/examples/gltf.py	/^def download_sheen_chair():  # pragma: no cover$/;"	f
download_single_sphere_animation	pyvista/examples/downloads.py	/^def download_single_sphere_animation(load=True):  # pragma: no cover$/;"	f
download_sky_box_cube_map	pyvista/examples/downloads.py	/^def download_sky_box_cube_map():  # pragma: no cover$/;"	f
download_sky_box_nz	pyvista/examples/downloads.py	/^def download_sky_box_nz(load=True):  # pragma: no cover$/;"	f
download_sky_box_nz_texture	pyvista/examples/downloads.py	/^def download_sky_box_nz_texture(load=True):  # pragma: no cover$/;"	f
download_sparse_points	pyvista/examples/downloads.py	/^def download_sparse_points(load=True):  # pragma: no cover$/;"	f
download_spider	pyvista/examples/downloads.py	/^def download_spider(load=True):  # pragma: no cover$/;"	f
download_st_helens	pyvista/examples/downloads.py	/^def download_st_helens(load=True):  # pragma: no cover$/;"	f
download_stars_cloud_hyg	pyvista/examples/downloads.py	/^def download_stars_cloud_hyg(load=True):  # pragma: no cover$/;"	f
download_stars_jpg	pyvista/examples/downloads.py	/^def download_stars_jpg():$/;"	f
download_stars_sky_background	pyvista/examples/planets.py	/^def download_stars_sky_background(texture=False, load=True):  # pragma: no cover$/;"	f
download_structured_grid	pyvista/examples/downloads.py	/^def download_structured_grid(load=True):  # pragma: no cover$/;"	f
download_structured_grid_two	pyvista/examples/downloads.py	/^def download_structured_grid_two(load=True):  # pragma: no cover$/;"	f
download_sun_surface	pyvista/examples/planets.py	/^def download_sun_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_teapot	pyvista/examples/downloads.py	/^def download_teapot(load=True):  # pragma: no cover$/;"	f
download_teapot	pyvista/examples/vrml.py	/^def download_teapot():  # pragma: no cover$/;"	f
download_tecplot_ascii	pyvista/examples/downloads.py	/^def download_tecplot_ascii(load=True):  # pragma: no cover$/;"	f
download_tensors	pyvista/examples/downloads.py	/^def download_tensors(load=True):  # pragma: no cover$/;"	f
download_tetra_dc_mesh	pyvista/examples/downloads.py	/^def download_tetra_dc_mesh():  # pragma: no cover$/;"	f
download_tetrahedron	pyvista/examples/downloads.py	/^def download_tetrahedron(load=True):  # pragma: no cover$/;"	f
download_thermal_probes	pyvista/examples/downloads.py	/^def download_thermal_probes(load=True):  # pragma: no cover$/;"	f
download_topo_global	pyvista/examples/downloads.py	/^def download_topo_global(load=True):  # pragma: no cover$/;"	f
download_topo_land	pyvista/examples/downloads.py	/^def download_topo_land(load=True):  # pragma: no cover$/;"	f
download_torso	pyvista/examples/downloads.py	/^def download_torso(load=True):  # pragma: no cover$/;"	f
download_tri_quadratic_hexahedron	pyvista/examples/downloads.py	/^def download_tri_quadratic_hexahedron(load=True):  # pragma: no cover$/;"	f
download_trumpet	pyvista/examples/downloads.py	/^def download_trumpet(load=True):  # pragma: no cover$/;"	f
download_turbine_blade	pyvista/examples/downloads.py	/^def download_turbine_blade(load=True):  # pragma: no cover$/;"	f
download_unstructured_grid	pyvista/examples/downloads.py	/^def download_unstructured_grid(load=True):  # pragma: no cover$/;"	f
download_uranus_surface	pyvista/examples/planets.py	/^def download_uranus_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_urn	pyvista/examples/downloads.py	/^def download_urn(load=True):  # pragma: no cover$/;"	f
download_usa	pyvista/examples/downloads.py	/^def download_usa(load=True):  # pragma: no cover$/;"	f
download_usa_texture	pyvista/examples/downloads.py	/^def download_usa_texture(load=True):  # pragma: no cover$/;"	f
download_venus_surface	pyvista/examples/planets.py	/^def download_venus_surface(atmosphere=True, texture=False, load=True):  # pragma: no cover$/;"	f
download_vtk	pyvista/examples/downloads.py	/^def download_vtk(load=True):  # pragma: no cover$/;"	f
download_vtk_logo	pyvista/examples/downloads.py	/^def download_vtk_logo(load=True):  # pragma: no cover$/;"	f
download_wavy	pyvista/examples/downloads.py	/^def download_wavy(load=True):  # pragma: no cover$/;"	f
download_woman	pyvista/examples/downloads.py	/^def download_woman(load=True):  # pragma: no cover$/;"	f
dplot	examples/99-advanced/atomic-orbitals.py	/^dplot = point_cloud.glyph($/;"	v
dragon	examples/02-plot/silhouette.py	/^dragon = examples.download_dragon()$/;"	v
draw_pixels	examples/00-load/create-pixel-art.py	/^def draw_pixels(plotter, pixels, center, color):$/;"	f
ds	examples/99-advanced/pump-bracket.py	/^ds = dataset.copy()$/;"	v
dubai	examples/01-filter/geodesic.py	/^dubai = land.find_closest_point((0.512642, 0.745898, 0.425255))$/;"	v
dw	pyvista/trame/jupyter.py	/^        dw = f'{dw}px'$/;"	v
dz	pyvista/core/utilities/geometric_objects.py	/^    dz = height \/ (z_resolution - 1)$/;"	v
earth	examples/99-advanced/planets.py	/^earth = examples.planets.load_earth(radius=6378.1)$/;"	v
earth_alt	examples/02-plot/background_image.py	/^earth_alt = examples.download_topo_global()$/;"	v
earth_texture	examples/99-advanced/planets.py	/^earth_texture = examples.load_globe_texture()$/;"	v
edge_centers	examples/01-filter/cell-centers.py	/^edge_centers = mesh.extract_all_edges().cell_centers().points$/;"	v
edge_color	pyvista/plotting/_property.py	/^    def edge_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
edge_color	pyvista/plotting/_property.py	/^    def edge_color(self, value):  # numpydoc ignore=GL08$/;"	m	class:Property
edge_color	pyvista/plotting/themes.py	/^    def edge_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
edge_color	pyvista/plotting/themes.py	/^    def edge_color(self, edge_color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
edge_color	pyvista/plotting/tools.py	/^    edge_color = Color(edge_color, default_color=pyvista.global_theme.edge_color)$/;"	v
edge_mask	pyvista/core/filters/poly_data.py	/^    def edge_mask(self, angle, progress_bar=False):$/;"	m	class:PolyDataFilters
edges	examples/00-load/create-truss.py	/^edges = np.array($/;"	v
edges	examples/01-filter/extract-edges.py	/^edges = mesh.extract_feature_edges(20)$/;"	v
edges	examples/01-filter/extract-edges.py	/^edges = mesh.extract_feature_edges(45)$/;"	v
edges	examples/01-filter/extract-edges.py	/^edges = mesh.extract_feature_edges(boundary_edges=True, feature_edges=False, manifold_edges=False)$/;"	v
edges	examples/02-plot/shading.py	/^edges = mesh.extract_feature_edges($/;"	v
edges	pyvista/core/cell.py	/^    def edges(self) -> List[Cell]:  # numpydoc ignore=RT01$/;"	m	class:Cell
edges_w_padding	examples/00-load/create-truss.py	/^edges_w_padding = np.vstack((padding, edges.T)).T$/;"	v
eigenvector	examples/99-advanced/warp-by-vector-eigenmodes.py	/^    eigenvector = vr[:, mode_index]$/;"	v
elegantly_launch	pyvista/trame/jupyter.py	/^def elegantly_launch(*args, **kwargs):  # numpydoc ignore=PR01$/;"	f
elevated	examples/02-plot/texture.py	/^elevated = curvsurf.elevation()$/;"	v
elevation	examples/02-plot/topo-map.py	/^elevation = examples.download_crater_topo().warp_by_scalar()$/;"	v
elevation	pyvista/core/filters/composite.py	/^    elevation = DataSetFilters.elevation$/;"	v	class:CompositeFilters
elevation	pyvista/core/filters/data_set.py	/^    def elevation($/;"	m	class:DataSetFilters
elevation	pyvista/plotting/camera.py	/^    def elevation(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
elevation	pyvista/plotting/camera.py	/^    def elevation(self, angle):  # numpydoc ignore=GL08$/;"	m	class:Camera
ellipsoid	examples/00-load/create-parametric-geometric-objects.py	/^ellipsoid = pv.ParametricEllipsoid(10, 5, 5)$/;"	v
emissive	examples/02-plot/point-clouds.py	/^    emissive=False,$/;"	v
emissive	examples/02-plot/point-clouds.py	/^    emissive=True,$/;"	v
emissive	examples/99-advanced/atomic-orbitals.py	/^    emissive=True,$/;"	v
emissive	pyvista/plotting/mapper.py	/^    def emissive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
emissive	pyvista/plotting/mapper.py	/^    def emissive(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:PointGaussianMapper
emissive	pyvista/plotting/themes.py	/^    def emissive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
emissive	pyvista/plotting/themes.py	/^    def emissive(self, emissive: bool):  # numpydoc ignore=GL08$/;"	m	class:_LightingConfig
empty_callback	tests/plotting/test_render_window_interactor.py	/^def empty_callback():$/;"	f
enable	pyvista/plotting/affine_widget.py	/^    def enable(self):$/;"	m	class:AffineWidget3D
enable	pyvista/plotting/plotter.py	/^    def enable(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable	pyvista/plotting/renderer.py	/^    def enable(self):$/;"	m	class:Renderer
enable_3_lights	pyvista/plotting/plotter.py	/^    def enable_3_lights(self, only_active=False):$/;"	m	class:BasePlotter
enable_all_bases	pyvista/core/utilities/reader.py	/^    def enable_all_bases(self):$/;"	m	class:CGNSReader
enable_all_cell_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_cell_arrays(self):$/;"	m	class:PointCellDataSelection
enable_all_families	pyvista/core/utilities/reader.py	/^    def enable_all_families(self):$/;"	m	class:CGNSReader
enable_all_patch_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_patch_arrays(self):$/;"	m	class:OpenFOAMReader
enable_all_point_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_point_arrays(self):$/;"	m	class:PointCellDataSelection
enable_anti_aliasing	pyvista/plotting/plotter.py	/^    def enable_anti_aliasing(self, aa_type='ssaa', multi_samples=None, all_renderers=True):$/;"	m	class:BasePlotter
enable_anti_aliasing	pyvista/plotting/renderer.py	/^    def enable_anti_aliasing(self, aa_type='ssaa'):$/;"	m	class:Renderer
enable_block_picking	pyvista/plotting/picking.py	/^    def enable_block_picking(self, callback=None, side='left'):$/;"	m	class:PickingMethods
enable_camera_orientation_widget	pyvista/plotting/themes.py	/^    def enable_camera_orientation_widget(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
enable_camera_orientation_widget	pyvista/plotting/themes.py	/^    def enable_camera_orientation_widget(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
enable_cell_array	pyvista/core/utilities/reader.py	/^    def enable_cell_array(self, name):$/;"	m	class:PointCellDataSelection
enable_cell_picking	pyvista/plotting/picking.py	/^    def enable_cell_picking($/;"	m	class:PickingMethods
enable_depth_of_field	pyvista/plotting/plotter.py	/^    def enable_depth_of_field(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_depth_of_field	pyvista/plotting/renderer.py	/^    def enable_depth_of_field(self, automatic_focal_distance=True):$/;"	m	class:Renderer
enable_depth_of_field_pass	pyvista/plotting/render_passes.py	/^    def enable_depth_of_field_pass(self, automatic_focal_distance=True):$/;"	m	class:RenderPasses
enable_depth_peeling	pyvista/plotting/plotter.py	/^    def enable_depth_peeling(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_depth_peeling	pyvista/plotting/renderer.py	/^    def enable_depth_peeling(self, number_of_peels=None, occlusion_ratio=None):$/;"	m	class:Renderer
enable_edl_pass	pyvista/plotting/render_passes.py	/^    def enable_edl_pass(self):$/;"	m	class:RenderPasses
enable_element_picking	pyvista/plotting/picking.py	/^    def enable_element_picking($/;"	m	class:PickingMethods
enable_eye_dome_lighting	pyvista/plotting/plotter.py	/^    def enable_eye_dome_lighting(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_eye_dome_lighting	pyvista/plotting/renderer.py	/^    def enable_eye_dome_lighting(self):$/;"	m	class:Renderer
enable_fly_to_right_click	pyvista/plotting/picking.py	/^    def enable_fly_to_right_click(self, callback=None):$/;"	m	class:PickingHelper
enable_geodesic_picking	pyvista/plotting/picking.py	/^    def enable_geodesic_picking($/;"	m	class:PickingHelper
enable_hidden_line_removal	pyvista/plotting/plotter.py	/^    def enable_hidden_line_removal(self, all_renderers=True):$/;"	m	class:BasePlotter
enable_hidden_line_removal	pyvista/plotting/renderer.py	/^    def enable_hidden_line_removal(self):$/;"	m	class:Renderer
enable_horizon_picking	pyvista/plotting/picking.py	/^    def enable_horizon_picking($/;"	m	class:PickingHelper
enable_image_style	pyvista/plotting/plotter.py	/^    def enable_image_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_image_style	pyvista/plotting/render_window_interactor.py	/^    def enable_image_style(self):$/;"	m	class:RenderWindowInteractor
enable_joystick_actor_style	pyvista/plotting/plotter.py	/^    def enable_joystick_actor_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_joystick_actor_style	pyvista/plotting/render_window_interactor.py	/^    def enable_joystick_actor_style(self):$/;"	m	class:RenderWindowInteractor
enable_joystick_style	pyvista/plotting/plotter.py	/^    def enable_joystick_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_joystick_style	pyvista/plotting/render_window_interactor.py	/^    def enable_joystick_style(self):$/;"	m	class:RenderWindowInteractor
enable_lightkit	pyvista/plotting/plotter.py	/^    def enable_lightkit(self, only_active=False):$/;"	m	class:BasePlotter
enable_mesh_picking	pyvista/plotting/picking.py	/^    def enable_mesh_picking($/;"	m	class:PickingMethods
enable_parallel_projection	pyvista/plotting/camera.py	/^    def enable_parallel_projection(self):$/;"	m	class:Camera
enable_parallel_projection	pyvista/plotting/plotter.py	/^    def enable_parallel_projection(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_parallel_projection	pyvista/plotting/renderer.py	/^    def enable_parallel_projection(self):$/;"	m	class:Renderer
enable_patch_array	pyvista/core/utilities/reader.py	/^    def enable_patch_array(self, name):$/;"	m	class:OpenFOAMReader
enable_path_picking	pyvista/plotting/picking.py	/^    def enable_path_picking($/;"	m	class:PickingHelper
enable_point_array	pyvista/core/utilities/reader.py	/^    def enable_point_array(self, name):$/;"	m	class:PointCellDataSelection
enable_point_picking	pyvista/plotting/picking.py	/^    def enable_point_picking($/;"	m	class:PickingInterface
enable_rectangle_picking	pyvista/plotting/picking.py	/^    def enable_rectangle_picking($/;"	m	class:PickingInterface
enable_rectangle_through_picking	pyvista/plotting/picking.py	/^    def enable_rectangle_through_picking($/;"	m	class:PickingMethods
enable_rectangle_visible_picking	pyvista/plotting/picking.py	/^    def enable_rectangle_visible_picking($/;"	m	class:PickingMethods
enable_rubber_band_2d_style	pyvista/plotting/plotter.py	/^    def enable_rubber_band_2d_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_rubber_band_2d_style	pyvista/plotting/render_window_interactor.py	/^    def enable_rubber_band_2d_style(self):$/;"	m	class:RenderWindowInteractor
enable_rubber_band_style	pyvista/plotting/plotter.py	/^    def enable_rubber_band_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_rubber_band_style	pyvista/plotting/render_window_interactor.py	/^    def enable_rubber_band_style(self):$/;"	m	class:RenderWindowInteractor
enable_shadow	pyvista/plotting/text.py	/^    def enable_shadow(self) -> None:$/;"	m	class:TextProperty
enable_shadow_pass	pyvista/plotting/render_passes.py	/^    def enable_shadow_pass(self):$/;"	m	class:RenderPasses
enable_shadows	pyvista/plotting/plotter.py	/^    def enable_shadows(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_shadows	pyvista/plotting/renderer.py	/^    def enable_shadows(self):$/;"	m	class:Renderer
enable_ssaa_pass	pyvista/plotting/render_passes.py	/^    def enable_ssaa_pass(self):$/;"	m	class:RenderPasses
enable_ssao	pyvista/plotting/plotter.py	/^    def enable_ssao(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_ssao	pyvista/plotting/renderer.py	/^    def enable_ssao(self, radius=0.5, bias=0.005, kernel_size=256, blur=True):$/;"	m	class:Renderer
enable_ssao_pass	pyvista/plotting/render_passes.py	/^    def enable_ssao_pass(self, radius, bias, kernel_size, blur):$/;"	m	class:RenderPasses
enable_stereo_render	pyvista/plotting/plotter.py	/^    def enable_stereo_render(self):$/;"	m	class:BasePlotter
enable_surface_picking	pyvista/plotting/picking.py	/^    def enable_surface_picking(self, *args, **kwargs):$/;"	m	class:PickingMethods
enable_surface_point_picking	pyvista/plotting/picking.py	/^    def enable_surface_point_picking($/;"	m	class:PickingMethods
enable_terrain_style	pyvista/plotting/plotter.py	/^    def enable_terrain_style(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_terrain_style	pyvista/plotting/render_window_interactor.py	/^    def enable_terrain_style(self, mouse_wheel_zooms=False, shift_pans=False):$/;"	m	class:RenderWindowInteractor
enable_trackball_actor_style	pyvista/plotting/plotter.py	/^    def enable_trackball_actor_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_trackball_actor_style	pyvista/plotting/render_window_interactor.py	/^    def enable_trackball_actor_style(self):$/;"	m	class:RenderWindowInteractor
enable_trackball_style	pyvista/plotting/plotter.py	/^    def enable_trackball_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_trackball_style	pyvista/plotting/render_window_interactor.py	/^    def enable_trackball_style(self):$/;"	m	class:RenderWindowInteractor
enable_zoom_style	pyvista/plotting/plotter.py	/^    def enable_zoom_style(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_zoom_style	pyvista/plotting/render_window_interactor.py	/^    def enable_zoom_style(self):$/;"	m	class:RenderWindowInteractor
enabled	pyvista/plotting/themes.py	/^    def enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
enabled	pyvista/plotting/themes.py	/^    def enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
enabled	pyvista/plotting/themes.py	/^    def enabled(self, enabled: bool):  # numpydoc ignore=GL08$/;"	m	class:_DepthPeelingConfig
enabled	pyvista/plotting/themes.py	/^    def enabled(self, enabled: bool):  # numpydoc ignore=GL08$/;"	m	class:_SilhouetteConfig
enabled_sidesets	pyvista/core/utilities/fileio.py	/^        enabled_sidesets = list(range(reader.GetNumberOfSideSetArrays()))$/;"	v
end_pick_call_back	pyvista/plotting/picking.py	/^        def end_pick_call_back(_, picker):  # numpydoc ignore=GL08$/;"	f	function:PickingMethods.enable_mesh_picking
engine	examples/03-widgets/multi-slider-widget.py	/^engine = MyCustomRoutine(starting_mesh)$/;"	v
enneper	examples/00-load/create-parametric-geometric-objects.py	/^enneper = pv.ParametricEnneper()$/;"	v
entry	doc/source/make_external_gallery.py	/^    entry=Example($/;"	v
enum_cell_type_nr_points_map	pyvista/core/utilities/cell_type_helper.py	/^enum_cell_type_nr_points_map = {}$/;"	v
epilog	pyvista/ext/coverage.py	/^    epilog = __($/;"	v	class:CoverageBuilder
error	examples/99-advanced/warp-by-vector-eigenmodes.py	/^    error = np.abs(freq2 - freq1) \/ freq1 * 100.0$/;"	v
eta	examples/99-advanced/sphere_eversion.py	/^eta = 1$/;"	v
eta	examples/99-advanced/sphere_eversion.py	/^eta = eta_final$/;"	v
eta_final	examples/99-advanced/sphere_eversion.py	/^eta_final = 2  # arbitrary > 1$/;"	v
etas	examples/99-advanced/sphere_eversion.py	/^etas = np.linspace(1, eta_final, n_steps)$/;"	v
etas	examples/99-advanced/sphere_eversion.py	/^etas = np.linspace(eta_final, 1, n_steps + 1)[1:]$/;"	v
eval_at	examples/99-advanced/atomic-orbitals.py	/^eval_at = grid['real_wf'].max() * 0.1$/;"	v
example_with_closed_plotter	tests/tinypages/samples.py	/^def example_with_closed_plotter():$/;"	f
example_with_empty_plotter	tests/tinypages/samples.py	/^def example_with_empty_plotter():$/;"	f
exclude_patterns	doc/source/conf.py	/^exclude_patterns = ["_build", "Thumbs.db", ".DS_Store", "**.ipynb_checkpoints", "_templates*"]$/;"	v
exclude_patterns	tests/tinypages/conf.py	/^exclude_patterns = ['_build']$/;"	v
execute	pyvista/plotting/render_window_interactor.py	/^    def execute(self, obj, event):  # pragma: no cover # numpydoc ignore=PR01,RT01$/;"	m	class:Timer
existing	doc/source/make_external_gallery.py	/^            existing = existing_fid.read()$/;"	v
existing	doc/source/make_external_gallery.py	/^    existing = ""$/;"	v
expand	examples/04-lights/shadows.py	/^expand = 1.0$/;"	v
expected_freqs_kHz	examples/99-advanced/warp-by-vector-eigenmodes.py	/^expected_freqs_kHz = np.array([704.8, 949.0, 965.2, 1096.3, 1128.4, 1182.8, 1338.9, 1360.9])$/;"	v
explode	pyvista/core/filters/data_set.py	/^    def explode(self, factor=0.1):$/;"	m	class:DataSetFilters
explode	pyvista/core/pointset.py	/^    def explode(self, *args, **kwargs):$/;"	m	class:PointSet
exploded	examples/99-advanced/add-example.py	/^    exploded = sphere.explode(factor=i \/ (n_frames * 2)).extract_surface()$/;"	v
exponent	pyvista/plotting/lights.py	/^    def exponent(self):  # numpydoc ignore=RT01$/;"	m	class:Light
exponent	pyvista/plotting/lights.py	/^    def exponent(self, exp):  # numpydoc ignore=GL08$/;"	m	class:Light
exponents	examples/04-lights/beam_shape.py	/^exponents = [1, 0.3, 5]$/;"	v
export	pyvista/trame/ui/base_viewer.py	/^    def export(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
export_gltf	pyvista/plotting/plotter.py	/^    def export_gltf(self, filename, inline_data=True, rotate_scene=True, save_normals=True):$/;"	m	class:BasePlotter
export_html	pyvista/plotting/plotter.py	/^    def export_html(self, filename):$/;"	m	class:BasePlotter
export_html	pyvista/trame/views.py	/^    def export_html(self):$/;"	m	class:_BasePyVistaView
export_obj	pyvista/plotting/plotter.py	/^    def export_obj(self, filename):$/;"	m	class:BasePlotter
export_vrml	pyvista/plotting/plotter.py	/^    def export_vrml(self, filename):$/;"	m	class:BasePlotter
export_vtkjs	pyvista/plotting/plotter.py	/^    def export_vtkjs(self, *args, **kwargs):$/;"	m	class:BasePlotter
export_vtksz	pyvista/plotting/plotter.py	/^    def export_vtksz(self, filename='scene-export.vtksz', format='zip'):$/;"	m	class:BasePlotter
extend	pyvista/core/composite.py	/^    def extend(self, datasets: Iterable[_TypeMultiBlockLeaf]) -> None:$/;"	m	class:MultiBlock
extensions	doc/source/conf.py	/^extensions = [$/;"	v
extensions	tests/tinypages/conf.py	/^extensions = [$/;"	v
extensions	tests/tinypages/conf.py	/^extensions = ['pyvista.ext.plot_directive']$/;"	v
extent	pyvista/core/grid.py	/^    def extent(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:ImageData
extent	pyvista/core/grid.py	/^    def extent(self, new_extent: Sequence[int]):  # numpydoc ignore=GL08$/;"	m	class:ImageData
extract_all_edges	pyvista/core/filters/composite.py	/^    extract_all_edges = DataSetFilters.extract_all_edges$/;"	v	class:CompositeFilters
extract_all_edges	pyvista/core/filters/data_set.py	/^    def extract_all_edges(self, use_all_points=False, clear_data=False, progress_bar=False):$/;"	m	class:DataSetFilters
extract_cells	pyvista/core/filters/data_set.py	/^    def extract_cells(self, ind, invert=False, progress_bar=False):$/;"	m	class:DataSetFilters
extract_cells_by_type	pyvista/core/filters/data_set.py	/^    def extract_cells_by_type(self, cell_types, progress_bar=False):$/;"	m	class:DataSetFilters
extract_feature_edges	pyvista/core/filters/data_set.py	/^    def extract_feature_edges($/;"	m	class:DataSetFilters
extract_geometry	pyvista/core/filters/composite.py	/^    def extract_geometry(self):$/;"	m	class:CompositeFilters
extract_geometry	pyvista/core/filters/data_set.py	/^    def extract_geometry(self, extent: Optional[Sequence[float]] = None, progress_bar=False):$/;"	m	class:DataSetFilters
extract_geometry	pyvista/core/pointset.py	/^    def extract_geometry(self, *args, **kwargs):$/;"	m	class:PointSet
extract_largest	pyvista/core/filters/data_set.py	/^    def extract_largest(self, inplace=False, progress_bar=False):$/;"	m	class:DataSetFilters
extract_node	examples/99-advanced/antarctica-compare.py	/^def extract_node(node):$/;"	f
extract_points	pyvista/core/filters/data_set.py	/^    def extract_points(self, ind, adjacent_cells=True, include_cells=True, progress_bar=False):$/;"	m	class:DataSetFilters
extract_points_invalid	tests/core/test_dataset_filters.py	/^def extract_points_invalid(sphere):$/;"	f
extract_subset	pyvista/core/filters/image_data.py	/^    def extract_subset(self, voi, rate=(1, 1, 1), boundary=False, progress_bar=False):$/;"	m	class:ImageDataFilters
extract_subset	pyvista/core/filters/structured_grid.py	/^    def extract_subset(self, voi, rate=(1, 1, 1), boundary=False):$/;"	m	class:StructuredGridFilters
extract_surface	pyvista/core/filters/data_set.py	/^    def extract_surface($/;"	m	class:DataSetFilters
extract_surface	pyvista/core/pointset.py	/^    def extract_surface(self, *args, **kwargs):$/;"	m	class:PointSet
extract_surface_algorithm	pyvista/plotting/utilities/algorithms.py	/^def extract_surface_algorithm(inp, pass_pointid=False, pass_cellid=False, nonlinear_subdivision=1):$/;"	f
extracted	examples/01-filter/clipping.py	/^extracted = mesh.clip_box(roi, invert=False)$/;"	v
extrude	pyvista/core/filters/poly_data.py	/^    def extrude(self, vector, capping=None, inplace=False, progress_bar=False):$/;"	m	class:PolyDataFilters
extrude_rotate	pyvista/core/filters/poly_data.py	/^    def extrude_rotate($/;"	m	class:PolyDataFilters
extrude_trim	pyvista/core/filters/poly_data.py	/^    def extrude_trim($/;"	m	class:PolyDataFilters
extruded_disc	examples/01-filter/extrude-trim.py	/^extruded_disc = disc.extrude_trim((0, 0, -1.0), plane)$/;"	v
extruded_disc_all	examples/01-filter/extrude-trim.py	/^extruded_disc_all = disc.extrude_trim((0, 0, -1.0), plane, extrusion='all_edges')$/;"	v
extruded_hills	examples/01-filter/extrude-trim.py	/^extruded_hills = mesh.extrude_trim((0, 0, -1.0), plane)$/;"	v
extruded_line	examples/01-filter/extrude-trim.py	/^extruded_line = line.extrude_trim((0, 0, 1), plane)$/;"	v
eye_dome_lighting	pyvista/_plot.py	/^    eye_dome_lighting = kwargs.pop("edl", eye_dome_lighting)$/;"	v
face_a	examples/00-load/create-poly.py	/^face_a = [6, 0, 1, 2, 3, 4, 5]$/;"	v
face_b	examples/00-load/create-poly.py	/^face_b = [6, 6, 7, 8, 1, 0, 9]$/;"	v
face_c	examples/00-load/create-poly.py	/^face_c = [6, 10, 11, 12, 7, 6, 13]$/;"	v
face_colors	pyvista/plotting/tools.py	/^        face_colors = np.array($/;"	v
face_normals	pyvista/core/pointset.py	/^    def face_normals(self) -> 'pyvista.pyvista_ndarray':  # numpydoc ignore=RT01$/;"	m	class:PolyData
face_view	examples/02-plot/edges.py	/^face_view = [$/;"	v
faces	examples/00-load/create-poly.py	/^faces = np.concatenate((face_a, face_b, face_c))$/;"	v
faces	examples/00-load/create-poly.py	/^faces = np.hstack($/;"	v
faces	examples/00-load/create-polydata-strips.py	/^faces = trimesh.faces.reshape(-1, 4)$/;"	v
faces	examples/00-load/wrap-trimesh.py	/^faces = [[0, 1, 2]]$/;"	v
faces	examples/01-filter/extrude-rotate.py	/^faces = np.hstack([[8, 0, 1, 2, 3, 4, 5, 6, 7]])$/;"	v
faces	examples/99-advanced/ray-trace-moeller.py	/^faces = np.array([3, 0, 1, 2])$/;"	v
faces	pyvista/core/cell.py	/^    def faces(self) -> List[Cell]:  # numpydoc ignore=RT01$/;"	m	class:Cell
faces	pyvista/core/pointset.py	/^    def faces(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
faces	pyvista/core/pointset.py	/^    def faces(self, faces):  # numpydoc ignore=GL08$/;"	m	class:PolyData
faces	pyvista/demos/logo.py	/^    faces = v_grid_atom_surf.faces.reshape(-1, 5).copy()$/;"	v
factor	examples/00-load/create-point-cloud.py	/^    factor=0.15,$/;"	v
failures	tests/check_doctest_names.py	/^    failures = check_doctests(verbose=args.verbose, respect_skips=args.respect_skips)$/;"	v
family	pyvista/plotting/themes.py	/^    def family(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_Font
family	pyvista/plotting/themes.py	/^    def family(self, family: str):  # numpydoc ignore=GL08$/;"	m	class:_Font
family_array_names	pyvista/core/utilities/reader.py	/^    def family_array_names(self) -> List[str]:  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
family_array_status	pyvista/core/utilities/reader.py	/^    def family_array_status(self, name) -> bool:$/;"	m	class:CGNSReader
feature_angle	pyvista/plotting/themes.py	/^    def feature_angle(self) -> Union[float, None]:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
feature_angle	pyvista/plotting/themes.py	/^    def feature_angle(self, feature_angle: Union[float, None]):  # numpydoc ignore=GL08$/;"	m	class:_SilhouetteConfig
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:ColorSchemeTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:ColorTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:DocTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:LineStyleTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:MarkerStyleTable
ffmpeg_failed	tests/plotting/test_plotting.py	/^    ffmpeg_failed = True$/;"	v
ffmpeg_failed	tests/plotting/test_plotting.py	/^ffmpeg_failed = False$/;"	v
fft	pyvista/core/filters/image_data.py	/^    def fft(self, output_scalars_name=None, progress_bar=False):$/;"	m	class:ImageDataFilters
fft_image	examples/01-filter/image-fft.py	/^fft_image = image.fft()$/;"	v
field_array	pyvista/core/utilities/arrays.py	/^def field_array(obj, name):$/;"	f
field_data	pyvista/core/dataobject.py	/^    def field_data(self) -> DataSetAttributes:  # numpydoc ignore=RT01$/;"	m	class:DataObject
figsize	examples/02-plot/plot-over-line.py	/^    figsize=(10, 5),$/;"	v
figure	pyvista/plotting/charts.py	/^    def figure(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
figure8klein	examples/00-load/create-parametric-geometric-objects.py	/^figure8klein = pv.ParametricFigure8Klein()$/;"	v
file_from_files	pyvista/examples/downloads.py	/^def file_from_files(target_path, fnames):$/;"	f
filename	examples/00-load/read-file.py	/^filename = examples.planefile$/;"	v
filename	examples/00-load/read-parallel.py	/^filename = examples.download_blood_vessels(load=False)$/;"	v
filename	examples/00-load/reader.py	/^filename = examples.download_naca(load=False)$/;"	v
filename	examples/00-load/reader.py	/^filename = examples.download_wavy(load=False)$/;"	v
filename	examples/02-plot/isovalue.py	/^filename = "isovalue.gif"$/;"	v
filename	examples/02-plot/movie.py	/^filename = "sphere-shrinking.mp4"$/;"	v
filename	examples/02-plot/screenshot.py	/^filename = examples.planefile$/;"	v
filename	examples/99-advanced/add-example.py	/^filename = examples.download_file('bunny.ply')$/;"	v
filename	examples/99-advanced/openfoam-example.py	/^filename = examples.download_cavity(load=False)$/;"	v
filename	pyvista/ext/plot_directive.py	/^    def filename(self):  # numpydoc ignore=RT01$/;"	m	class:ImageFile
fill_holes	pyvista/core/filters/poly_data.py	/^    def fill_holes(self, hole_size, inplace=False, progress_bar=False):  # pragma: no cover$/;"	m	class:PolyDataFilters
final_argument_whitespace	pyvista/ext/plot_directive.py	/^    final_argument_whitespace = False$/;"	v	class:PlotDirective
final_argument_whitespace	pyvista/ext/viewer_directive.py	/^    final_argument_whitespace = True$/;"	v	class:OfflineViewerDirective
finalize	pyvista/plotting/picking.py	/^        def finalize(picked):  # numpydoc ignore=GL08$/;"	f	function:PickingMethods.enable_rectangle_through_picking
finalize	pyvista/plotting/picking.py	/^        def finalize(picked):  # numpydoc ignore=GL08$/;"	f	function:PickingMethods.enable_rectangle_visible_picking
find_cells_along_line	pyvista/core/dataset.py	/^    def find_cells_along_line($/;"	m	class:DataSet
find_cells_along_line	pyvista/core/pointset.py	/^    def find_cells_along_line(self, *args, **kwargs):$/;"	m	class:PointSet
find_cells_intersecting_line	pyvista/core/dataset.py	/^    def find_cells_intersecting_line($/;"	m	class:DataSet
find_cells_within_bounds	pyvista/core/dataset.py	/^    def find_cells_within_bounds(self, bounds: Iterable[float]) -> np.ndarray:$/;"	m	class:DataSet
find_closest_cell	pyvista/core/dataset.py	/^    def find_closest_cell($/;"	m	class:DataSet
find_closest_point	pyvista/core/dataset.py	/^    def find_closest_point(self, point: Iterable[float], n=1) -> int:$/;"	m	class:DataSet
find_containing_cell	pyvista/core/dataset.py	/^    def find_containing_cell($/;"	m	class:DataSet
finish	pyvista/ext/coverage.py	/^    def finish(self) -> None:$/;"	m	class:CoverageBuilder
first	pyvista/core/utilities/features.py	/^    first = datasets[0]$/;"	v
fit_plane_to_points	pyvista/core/utilities/points.py	/^def fit_plane_to_points(points, return_meta=False):$/;"	f
fix_edit_link_button	pyvista/core/utilities/docs.py	/^    def fix_edit_link_button(link: str) -> str:$/;"	f	function:pv_html_page_context
flem	doc/source/make_external_gallery.py	/^    flem=Example($/;"	v
flip	pyvista/plotting/texture.py	/^    def flip(self, axis):$/;"	m	class:Texture
flip_normal	pyvista/core/dataset.py	/^    def flip_normal($/;"	m	class:DataSet
flip_normals	pyvista/core/filters/poly_data.py	/^    def flip_normals(self):$/;"	m	class:PolyDataFilters
flip_x	pyvista/core/dataset.py	/^    def flip_x(self, point=None, transform_all_input_vectors=False, inplace=False):$/;"	m	class:DataSet
flip_x	pyvista/plotting/texture.py	/^    def flip_x(self) -> 'Texture':$/;"	m	class:Texture
flip_y	pyvista/core/dataset.py	/^    def flip_y(self, point=None, transform_all_input_vectors=False, inplace=False):$/;"	m	class:DataSet
flip_y	pyvista/plotting/texture.py	/^    def flip_y(self) -> 'Texture':$/;"	m	class:Texture
flip_z	pyvista/core/dataset.py	/^    def flip_z(self, point=None, transform_all_input_vectors=False, inplace=False):$/;"	m	class:DataSet
float_rgb	pyvista/plotting/colors.py	/^    def float_rgb(self) -> Tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Color
float_rgba	pyvista/plotting/colors.py	/^    def float_rgba(self) -> Tuple[float, float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Color
floor	examples/04-lights/actors.py	/^floor = pv.Plane(center=(*cow.center[:2], cow.bounds[-2]), i_size=30, j_size=25)$/;"	v
floor_color	pyvista/plotting/themes.py	/^    def floor_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
floor_color	pyvista/plotting/themes.py	/^    def floor_color(self, floor_color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
flow_a	examples/99-advanced/antarctica-compare.py	/^flow_a = a.point_data['ssavelocity'].copy()$/;"	v
flow_b	examples/99-advanced/antarctica-compare.py	/^flow_b = b.point_data['ssavelocity'].copy()$/;"	v
fluid	examples_trame/basic/PyVistaLocalView.py	/^            fluid=True,$/;"	v
fluid	examples_trame/basic/multi_views.py	/^            fluid=True,$/;"	v
fluid_mesh	examples/01-filter/streamlines_2D.py	/^fluid_mesh = mesh[0]$/;"	v
fly_to	pyvista/plotting/plotter.py	/^    def fly_to(self, point):$/;"	m	class:BasePlotter
fly_to	pyvista/plotting/render_window_interactor.py	/^    def fly_to(self, renderer, point):$/;"	m	class:RenderWindowInteractor
fly_to_mouse_position	pyvista/plotting/picking.py	/^    def fly_to_mouse_position(self, focus=False):$/;"	m	class:PickingHelper
fmt	examples/01-filter/connectivity.py	/^    fmt='%.f',$/;"	v
fmt	examples/02-plot/scalar-bars.py	/^    fmt="%.1f",$/;"	v
fmt	pyvista/plotting/themes.py	/^    def fmt(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_Font
fmt	pyvista/plotting/themes.py	/^    def fmt(self, fmt: str):  # numpydoc ignore=GL08$/;"	m	class:_Font
focal_point	examples/04-lights/beam_shape.py	/^    focal_point = center[0] - 1, center[1], center[2]$/;"	v
focal_point	examples/04-lights/shadows.py	/^    focal_point=(0, 0, 0),$/;"	v
focal_point	examples/04-lights/shadows.py	/^    focal_point=(0, 1, 0),$/;"	v
focal_point	pyvista/plotting/camera.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
focal_point	pyvista/plotting/camera.py	/^    def focal_point(self, point):  # numpydoc ignore=GL08$/;"	m	class:Camera
focal_point	pyvista/plotting/lights.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Light
focal_point	pyvista/plotting/lights.py	/^    def focal_point(self, pos):  # numpydoc ignore=GL08$/;"	m	class:Light
focal_point	pyvista/plotting/renderer.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
focal_point	pyvista/plotting/renderer.py	/^    def focal_point(self, value):  # numpydoc ignore=GL08$/;"	m	class:CameraPosition
focus	examples/04-lights/actors.py	/^    focus = rot120 @ focus$/;"	v
focus	examples/04-lights/actors.py	/^focus = (-0.5, -0.5, 0)$/;"	v
font	pyvista/plotting/themes.py	/^    def font(self) -> _Font:  # numpydoc ignore=RT01$/;"	m	class:Theme
font	pyvista/plotting/themes.py	/^    def font(self, config: _Font):  # numpydoc ignore=GL08$/;"	m	class:Theme
font_family	examples/02-plot/scalar-bars.py	/^    font_family="arial",$/;"	v
font_family	pyvista/plotting/text.py	/^    def font_family(self) -> str | None:$/;"	m	class:TextProperty
font_family	pyvista/plotting/text.py	/^    def font_family(self, font_family: str | None):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
font_size	examples/00-load/create-polyhedron.py	/^    font_size=20,$/;"	v
font_size	examples/01-filter/image-fft-perlin-noise.py	/^    font_size=26,$/;"	v
font_size	examples/99-advanced/warp-by-vector-eigenmodes.py	/^            font_size=10,$/;"	v
font_size	pyvista/plotting/text.py	/^    def font_size(self) -> int:$/;"	m	class:TextProperty
font_size	pyvista/plotting/text.py	/^    def font_size(self, font_size: int):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
foo_sphere	examples/99-advanced/extending-pyvista.py	/^foo_sphere = FooData(pyvista.Sphere(theta_resolution=100, phi_resolution=100))$/;"	v
foo_sphere	examples/99-advanced/extending-pyvista.py	/^foo_sphere = pyvista.Sphere(theta_resolution=100, phi_resolution=100)$/;"	v
foot_bones	tests/core/test_dataset_filters.py	/^def foot_bones():$/;"	f
forge	doc/source/make_external_gallery.py	/^    forge=Example($/;"	v
format	doc/source/make_external_gallery.py	/^    def format(self):$/;"	m	class:Example
format_array	pyvista/core/dataset.py	/^            def format_array(name, arr, field):$/;"	f	function:DataSet._repr_html_
format_array	pyvista/core/objects.py	/^            def format_array(key):$/;"	f	function:Table._repr_html_
format_icon	doc/source/make_external_gallery.py	/^def format_icon(title, description, link, image):$/;"	f
frame_color	pyvista/plotting/text.py	/^    def frame_color(self) -> Color:$/;"	m	class:TextProperty
frame_color	pyvista/plotting/text.py	/^    def frame_color(self, color):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
frame_width	pyvista/plotting/text.py	/^    def frame_width(self) -> int:$/;"	m	class:TextProperty
frame_width	pyvista/plotting/text.py	/^    def frame_width(self, width: int):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
freq	examples/01-filter/image-fft-perlin-noise.py	/^freq = [10, 5, 0]$/;"	v
freq	examples/01-filter/image-fft-perlin-noise.py	/^freq = np.fft.fftfreq(sampled.dimensions[0], sampled.spacing[0])$/;"	v
freq	examples/01-filter/sampling_functions_2d.py	/^freq = [0.689, 0.562, 0.683]$/;"	v
freq	examples/01-filter/sampling_functions_3d.py	/^freq = (1, 1, 1)$/;"	v
freqs	examples/99-advanced/warp-by-vector-eigenmodes.py	/^freqs = omegas \/ (2 * np.pi)$/;"	v
frog	examples/02-plot/volume.py	/^frog = examples.download_frog()$/;"	v
from_any	pyvista/core/utilities/misc.py	/^    def from_any(cls, value):$/;"	m	class:AnnotatedIntEnum
from_arrays	pyvista/core/cell.py	/^    def from_arrays(offsets, connectivity, deep=False) -> CellArray:$/;"	m	class:CellArray
from_dict	pyvista/plotting/colors.py	/^    def from_dict(cls, dict_):$/;"	m	class:Color
from_dict	pyvista/plotting/themes.py	/^    def from_dict(cls, dict_):$/;"	m	class:_ThemeConfig
from_meshio	pyvista/core/utilities/fileio.py	/^def from_meshio(mesh):$/;"	f
from_paraview_pvcc	pyvista/plotting/camera.py	/^    def from_paraview_pvcc(cls, filename: Union[str, Path]) -> Camera:$/;"	m	class:Camera
from_regular_cells	pyvista/core/cell.py	/^    def from_regular_cells(cls, cells, deep=False):$/;"	m	class:CellArray
from_regular_faces	pyvista/core/pointset.py	/^    def from_regular_faces($/;"	m	class:PolyData
from_str	pyvista/core/utilities/misc.py	/^    def from_str(cls, input_str):$/;"	m	class:AnnotatedIntEnum
from_str	pyvista/plotting/opts.py	/^    def from_str(cls, input_str):$/;"	m	class:InterpolationType
from_vtk	pyvista/plotting/lights.py	/^    def from_vtk(cls, vtk_light):$/;"	m	class:Light
frustum	pyvista/plotting/picking.py	/^    def frustum(self) -> _vtk.vtkPlanes:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
frustum_mesh	pyvista/plotting/picking.py	/^    def frustum_mesh(self) -> 'pyvista.PolyData':  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
full_screen	pyvista/_plot.py	/^        full_screen=full_screen,$/;"	v
full_screen	pyvista/plotting/themes.py	/^    def full_screen(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
full_screen	pyvista/plotting/themes.py	/^    def full_screen(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
fun	tests/plotting/test_theme.py	/^    def fun(plotter):$/;"	f	function:test_save_before_close_callback
furniture	examples/03-widgets/line-widget.py	/^furniture = examples.download_kitchen(split=True)$/;"	v
gamma	pyvista/core/utilities/reader.py	/^    def gamma(self):  # numpydoc ignore=RT01$/;"	m	class:MultiBlockPlot3DReader
gamma	pyvista/core/utilities/reader.py	/^    def gamma(self, val):  # numpydoc ignore=GL08$/;"	m	class:MultiBlockPlot3DReader
gaussian_smooth	pyvista/core/filters/image_data.py	/^    def gaussian_smooth(self, radius_factor=1.5, std_dev=2.0, scalars=None, progress_bar=False):$/;"	m	class:ImageDataFilters
gears	examples/02-plot/bounds.py	/^gears = examples.download_gears()$/;"	v
geemap	doc/source/make_external_gallery.py	/^    geemap=Example($/;"	v
gemgis	doc/source/make_external_gallery.py	/^    gemgis=Example($/;"	v
gen_coords	pyvista/core/grid.py	/^        def gen_coords(i):  # numpydoc ignore=GL08$/;"	f	function:ImageData.cast_to_rectilinear_grid
generate	doc/source/make_tables.py	/^    def generate(cls):$/;"	m	class:DocTable
generate_ids	pyvista/core/dataset.py	/^        def generate_ids(i: int, connections: str):  # numpydoc ignore=GL08$/;"	f	function:DataSet.cell_neighbors
generate_img	doc/source/make_tables.py	/^    def generate_img(color_scheme, img_path):$/;"	m	class:ColorSchemeTable
generate_img	doc/source/make_tables.py	/^    def generate_img(line_style, img_path):$/;"	m	class:LineStyleTable
generate_img	doc/source/make_tables.py	/^    def generate_img(marker_style, img_path):$/;"	m	class:MarkerStyleTable
generate_orbital_path	pyvista/plotting/plotter.py	/^    def generate_orbital_path(self, factor=3.0, n_points=20, viewup=None, shift=0.0):$/;"	m	class:BasePlotter
generate_plane	pyvista/core/utilities/helpers.py	/^def generate_plane(normal, origin):$/;"	f
generate_points	examples/00-load/create-point-cloud.py	/^def generate_points(subset=0.02):$/;"	f
geodesic	pyvista/core/filters/poly_data.py	/^    def geodesic($/;"	m	class:PolyDataFilters
geodesic_distance	pyvista/core/filters/poly_data.py	/^    def geodesic_distance($/;"	m	class:PolyDataFilters
geom	examples/01-filter/glyphs.py	/^geom = pv.Arrow()  # This could be any dataset$/;"	v
geom	examples/99-advanced/atomic-orbitals.py	/^    geom=pv.Sphere(theta_resolution=8, phi_resolution=8), scale=False, orient=False$/;"	v
geometric	pyvista/core/pointset.py	/^        def geometric(ind):  # numpydoc ignore=GL08$/;"	f	function:ExplicitStructuredGrid.neighbors
geometry_parameters	examples/99-advanced/warp-by-vector-eigenmodes.py	/^geometry_parameters = {'a': l1 \/ 2.0, 'b': l2 \/ 2.0, 'c': l3 \/ 2.0}$/;"	v
geoms	examples/01-filter/glyphs_table.py	/^geoms = [pv.ParametricSuperToroid(n1=n1, n2=n2) for n1, n2 in params]$/;"	v
geovista	doc/source/make_external_gallery.py	/^    geovista=Example($/;"	v
get	pyvista/core/composite.py	/^    def get($/;"	m	class:MultiBlock
get	pyvista/core/datasetattributes.py	/^    def get(self, key: str, value: Optional[Any] = None) -> Optional[pyvista_ndarray]:$/;"	m	class:DataSetAttributes
get	pyvista/core/objects.py	/^    def get(self, index):$/;"	m	class:Table
get_angle	pyvista/plotting/affine_widget.py	/^def get_angle(v1, v2):$/;"	f
get_array	pyvista/core/dataset.py	/^    def get_array($/;"	m	class:DataSet
get_array	pyvista/core/datasetattributes.py	/^    def get_array(self, key: Union[str, int]) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes
get_array	pyvista/core/utilities/arrays.py	/^def get_array(mesh, name, preference='cell', err=False) -> Optional[np.ndarray]:$/;"	f
get_array_association	pyvista/core/dataset.py	/^    def get_array_association($/;"	m	class:DataSet
get_array_association	pyvista/core/utilities/arrays.py	/^def get_array_association(mesh, name, preference='cell', err=False) -> FieldAssociation:$/;"	f
get_array_vtk	tests/core/test_utilities.py	/^def get_array_vtk(hexbeam):$/;"	f
get_bands	curvatures_adjust_edges.py	/^def get_bands(d_r, number_of_bands, precision=2, nearest_integer=False):$/;"	f
get_bands	examples/01-filter/curvatures_adjust_edges.py	/^def get_bands(d_r, number_of_bands, precision=2, nearest_integer=False):$/;"	f
get_block	pyvista/plotting/composite_mapper.py	/^    def get_block(self, index):$/;"	m	class:CompositeAttributes
get_block_name	pyvista/core/composite.py	/^    def get_block_name(self, index: int) -> Optional[str]:$/;"	m	class:MultiBlock
get_bour	curvatures_adjust_edges.py	/^def get_bour():$/;"	f
get_bour	examples/01-filter/curvatures_adjust_edges.py	/^def get_bour():$/;"	f
get_cavity_reader	tests/core/test_reader.py	/^def get_cavity_reader():$/;"	f
get_cell	pyvista/core/dataset.py	/^    def get_cell(self, index: int) -> pyvista.Cell:$/;"	m	class:DataSet
get_cell	pyvista/plotting/picking.py	/^    def get_cell(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_charts_by_pos	pyvista/plotting/charts.py	/^    def get_charts_by_pos(self, pos):$/;"	m	class:Charts
get_cmap_safe	pyvista/plotting/colors.py	/^def get_cmap_safe(cmap):$/;"	f
get_colors	examples/03-widgets/sphere-widget.py	/^def get_colors(n):$/;"	f
get_cube	curvatures_adjust_edges.py	/^def get_cube():$/;"	f
get_cube	examples/01-filter/curvatures_adjust_edges.py	/^def get_cube():$/;"	f
get_cycler	pyvista/plotting/colors.py	/^def get_cycler(color_cycler):$/;"	f
get_data_range	pyvista/core/composite.py	/^    def get_data_range(self, name: str, allow_missing: bool = False) -> Tuple[float, float]:  # type: ignore$/;"	m	class:MultiBlock
get_data_range	pyvista/core/dataobject.py	/^    def get_data_range(self):  # pragma: no cover$/;"	m	class:DataObject
get_data_range	pyvista/core/dataset.py	/^    def get_data_range($/;"	m	class:DataSet
get_data_range	pyvista/core/objects.py	/^    def get_data_range(self, arr=None, preference='row'):$/;"	m	class:Table
get_default_cam_pos	pyvista/plotting/plotter.py	/^    def get_default_cam_pos(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
get_default_cam_pos	pyvista/plotting/renderer.py	/^    def get_default_cam_pos(self, negative=False):$/;"	m	class:Renderer
get_default_cycler	pyvista/plotting/colors.py	/^def get_default_cycler():$/;"	f
get_desired_update_rate	pyvista/plotting/render_window_interactor.py	/^    def get_desired_update_rate(self):$/;"	m	class:RenderWindowInteractor
get_diverging_lut	curvatures_adjust_edges.py	/^def get_diverging_lut():$/;"	f
get_diverging_lut	examples/01-filter/curvatures_adjust_edges.py	/^def get_diverging_lut():$/;"	f
get_diverging_lut1	curvatures_adjust_edges.py	/^def get_diverging_lut1():$/;"	f
get_diverging_lut1	examples/01-filter/curvatures_adjust_edges.py	/^def get_diverging_lut1():$/;"	f
get_edge	pyvista/core/cell.py	/^    def get_edge(self, index: int) -> Cell:$/;"	m	class:Cell
get_edge	pyvista/plotting/picking.py	/^    def get_edge(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_enneper	curvatures_adjust_edges.py	/^def get_enneper():$/;"	f
get_enneper	examples/01-filter/curvatures_adjust_edges.py	/^def get_enneper():$/;"	f
get_event_position	pyvista/plotting/render_window_interactor.py	/^    def get_event_position(self):$/;"	m	class:RenderWindowInteractor
get_event_subplot_loc	pyvista/plotting/render_window_interactor.py	/^    def get_event_subplot_loc(self):$/;"	m	class:RenderWindowInteractor
get_ext	pyvista/core/utilities/fileio.py	/^def get_ext(filename):$/;"	f
get_face	pyvista/core/cell.py	/^    def get_face(self, index: int) -> Cell:$/;"	m	class:Cell
get_face	pyvista/plotting/picking.py	/^    def get_face(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_first_N_above_thresh	examples/99-advanced/warp-by-vector-eigenmodes.py	/^def get_first_N_above_thresh(N, freqs, thresh, decimals=3):$/;"	f
get_frequencies	curvatures_adjust_edges.py	/^def get_frequencies(bands, src):$/;"	f
get_frequencies	examples/01-filter/curvatures_adjust_edges.py	/^def get_frequencies(bands, src):$/;"	f
get_gpu_info	pyvista/report.py	/^def get_gpu_info():  # numpydoc ignore=RT01$/;"	f
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:ColorSchemeTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:ColorTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:DocTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:LineStyleTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:MarkerStyleTable
get_hexcolors_cycler	pyvista/plotting/colors.py	/^def get_hexcolors_cycler():$/;"	f
get_hills	curvatures_adjust_edges.py	/^def get_hills():$/;"	f
get_hills	examples/01-filter/curvatures_adjust_edges.py	/^def get_hills():$/;"	f
get_image_depth	pyvista/plotting/plotter.py	/^    def get_image_depth(self, fill_value=np.nan, reset_camera_clipping_range=True):$/;"	m	class:BasePlotter
get_index_by_name	pyvista/core/composite.py	/^    def get_index_by_name(self, name: str) -> int:$/;"	m	class:MultiBlock
get_info	pyvista/report.py	/^    def get_info(self):$/;"	m	class:GPUInfo
get_interactor_style	pyvista/plotting/render_window_interactor.py	/^    def get_interactor_style(self):$/;"	m	class:RenderWindowInteractor
get_matplotlib_theme_cycler	pyvista/plotting/colors.py	/^def get_matplotlib_theme_cycler():$/;"	f
get_mesh	pyvista/plotting/picking.py	/^    def get_mesh(self):$/;"	m	class:PointPickingElementHandler
get_message	pyvista/core/utilities/observers.py	/^    def get_message(self, etc=False):$/;"	m	class:Observer
get_mixed_cells	pyvista/core/utilities/cells.py	/^def get_mixed_cells(vtkobj):$/;"	f
get_mobius	curvatures_adjust_edges.py	/^def get_mobius():$/;"	f
get_mobius	examples/01-filter/curvatures_adjust_edges.py	/^def get_mobius():$/;"	f
get_outdated_docs	pyvista/ext/coverage.py	/^    def get_outdated_docs(self) -> str:$/;"	m	class:CoverageBuilder
get_pick_position	pyvista/plotting/picking.py	/^    def get_pick_position(self):$/;"	m	class:PickingInterface
get_pick_position	pyvista/plotting/renderer.py	/^    def get_pick_position(self):$/;"	m	class:Renderer
get_picked_block	pyvista/plotting/picking.py	/^        def get_picked_block(*args, **kwargs):  # numpydoc ignore=PR01$/;"	f	function:PickingMethods.enable_block_picking
get_picker	pyvista/plotting/render_window_interactor.py	/^    def get_picker(self):$/;"	m	class:RenderWindowInteractor
get_point	pyvista/plotting/picking.py	/^    def get_point(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_point_along_spline	examples/02-plot/distance-along-spline.py	/^def get_point_along_spline(distance):$/;"	f
get_poked_renderer	pyvista/plotting/render_window_interactor.py	/^    def get_poked_renderer(self, x=None, y=None):$/;"	m	class:RenderWindowInteractor
get_random_hills	curvatures_adjust_edges.py	/^def get_random_hills():$/;"	f
get_reader	pyvista/core/utilities/reader.py	/^def get_reader(filename, force_ext=None):$/;"	f
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:ColorSchemeTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:ColorTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:DocTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:LineStyleTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:MarkerStyleTable
get_server	pyvista/trame/views.py	/^def get_server(*args, **kwargs):  # numpydoc ignore=RT01$/;"	f
get_source	curvatures_adjust_edges.py	/^def get_source(source):$/;"	f
get_source	examples/01-filter/curvatures_adjust_edges.py	/^def get_source(source):$/;"	f
get_sphere	curvatures_adjust_edges.py	/^def get_sphere():$/;"	f
get_sphere	examples/01-filter/curvatures_adjust_edges.py	/^def get_sphere():$/;"	f
get_text	pyvista/plotting/text.py	/^    def get_text(self, position):$/;"	m	class:CornerAnnotation
get_torus	curvatures_adjust_edges.py	/^def get_torus():$/;"	f
get_torus	examples/01-filter/curvatures_adjust_edges.py	/^def get_torus():$/;"	f
get_version_match	doc/source/conf.py	/^def get_version_match(semver):$/;"	f
get_viewer	pyvista/trame/ui/__init__.py	/^def get_viewer(plotter, server=None, suppress_rendering=False):$/;"	f
get_vtk_type	pyvista/core/utilities/arrays.py	/^def get_vtk_type(typ):$/;"	f
gettext_additional_targets	doc/source/conf.py	/^gettext_additional_targets = ["raw"]$/;"	v
ghosts	examples/02-plot/ghost-cells.py	/^ghosts = np.argwhere(mesh["facies"] < 1.0)$/;"	v
gif_file	tests/plotting/test_plotting_utilities.py	/^def gif_file(tmpdir):$/;"	f
global_theme	pyvista/plotting/__init__.py	/^global_theme = _GlobalTheme()$/;"	v
globe	examples/02-plot/backface_props.py	/^globe = examples.load_globe()$/;"	v
globe	examples/02-plot/background_image.py	/^globe = examples.load_globe()$/;"	v
globe	examples/02-plot/multi-window.py	/^globe = examples.load_globe()$/;"	v
globe	tests/conftest.py	/^def globe():$/;"	f
globefile	pyvista/examples/examples.py	/^globefile = os.path.join(dir_path, 'globe.vtk')$/;"	v
glyph	pyvista/core/filters/data_set.py	/^    def glyph($/;"	m	class:DataSetFilters
glyphs	examples/01-filter/glyphs.py	/^glyphs = mesh.glyph(orient="vectors", scale="scalars", factor=0.003, geom=geom)$/;"	v
glyphs	examples/01-filter/glyphs_table.py	/^glyphs = mesh.glyph(geom=geoms, indices=values, scale=False, factor=0.3, rng=(0, N - 1))$/;"	v
glyphs	examples/01-filter/using-filters.py	/^glyphs = dataset.glyph(factor=1e-3, geom=pv.Sphere())$/;"	v
glyphs	pyvista/demos/demos.py	/^def glyphs(grid_sz=3):$/;"	f
gmshmodel	doc/source/make_external_gallery.py	/^    gmshmodel=Example($/;"	v
grad_descent_visualizer	doc/source/make_external_gallery.py	/^    grad_descent_visualizer=Example($/;"	v
gradients	examples/01-filter/gradients.py	/^gradients = gradients_to_dict(mesh_g["gradient"])$/;"	v
gradients_to_dict	examples/01-filter/gradients.py	/^def gradients_to_dict(arr):$/;"	f
graph	examples/99-advanced/osmnx-example.py	/^graph = examples.download_osmnx_graph()$/;"	v
grey	examples/02-plot/cmap.py	/^grey = np.array([189 \/ 256, 189 \/ 256, 189 \/ 256, 1.0])$/;"	v
grey_theme	examples/01-filter/image-fft.py	/^grey_theme = pv.themes.DocumentTheme()$/;"	v
grid	examples/00-load/create-explicit-structured-grid.py	/^grid = grid.compute_connectivity()$/;"	v
grid	examples/00-load/create-explicit-structured-grid.py	/^grid = pv.ExplicitStructuredGrid(dims, corners)$/;"	v
grid	examples/00-load/create-polyhedron.py	/^grid = pv.UnstructuredGrid(cells, celltypes, points)$/;"	v
grid	examples/00-load/create-structured-surface.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/00-load/create-surface-draped.py	/^grid = pv.StructuredGrid()$/;"	v
grid	examples/00-load/create-uniform-grid.py	/^grid = pv.ImageData()$/;"	v
grid	examples/00-load/create-unstructured-surface.py	/^grid = pv.UnstructuredGrid($/;"	v
grid	examples/00-load/create-unstructured-surface.py	/^grid = pv.UnstructuredGrid(cells, cell_type, points)$/;"	v
grid	examples/00-load/create-unstructured-surface.py	/^grid = pv.UnstructuredGrid(cells, celltypes, points)$/;"	v
grid	examples/00-load/create-unstructured-surface.py	/^grid = pv.UnstructuredGrid({CellType.HEXAHEDRON: cells.reshape([-1, 9])[:, 1:]}, points)$/;"	v
grid	examples/00-load/create-unstructured-surface.py	/^grid = pv.UnstructuredGrid({CellType.HEXAHEDRON: cells_hex}, points)$/;"	v
grid	examples/00-load/linear-cells.py	/^grid = example_cells.Wedge()$/;"	v
grid	examples/01-filter/cell-centers.py	/^grid = examples.download_letter_a()$/;"	v
grid	examples/01-filter/cell-centers.py	/^grid = pv.ImageData(dimensions=(10, 10, 1))$/;"	v
grid	examples/01-filter/clipping-with-surface.py	/^grid = pv.create_grid(surface)$/;"	v
grid	examples/01-filter/extract-surface.py	/^grid = pv.UnstructuredGrid(cells, celltypes, pts)$/;"	v
grid	examples/01-filter/flying_edges.py	/^grid = pv.ImageData($/;"	v
grid	examples/01-filter/image-fft-perlin-noise.py	/^grid = pv.ImageData(dimensions=sampled.dimensions, spacing=sampled.spacing)$/;"	v
grid	examples/01-filter/interpolate.py	/^grid = pv.ImageData()$/;"	v
grid	examples/01-filter/sampling_functions_3d.py	/^grid = pv.sample_function(noise, [0, 3.0, -0, 1.0, 0, 1.0], dim=(120, 40, 40))$/;"	v
grid	examples/02-plot/blurring.py	/^grid = pv.ImageData(dimensions=(4, 4, 4), spacing=(1, 1, 1))$/;"	v
grid	examples/02-plot/bounds.py	/^    grid=False,$/;"	v
grid	examples/02-plot/depth_of_field.py	/^grid = pv.ImageData(dimensions=(4, 3, 3), spacing=(3, 1, 1))$/;"	v
grid	examples/02-plot/gif.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/labels.py	/^grid = pv.UnstructuredGrid(examples.hexbeamfile)$/;"	v
grid	examples/02-plot/movie_glyphs.py	/^    grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/movie_glyphs.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/moving_cmap.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/point-cell-scalars.py	/^grid = examples.load_hexbeam().extract_cells(range(4))$/;"	v
grid	examples/02-plot/ssao.py	/^grid = pv.ImageData(dimensions=(5, 5, 5)).explode(0.2)$/;"	v
grid	examples/03-widgets/clip-volume.py	/^grid = pv.ImageData(dimensions=(200, 200, 200))$/;"	v
grid	examples/99-advanced/atomic-orbitals.py	/^grid = examples.load_hydrogen_orbital(3, 2, -2)$/;"	v
grid	examples/99-advanced/magnetic-fields.py	/^grid = examples.download_coil_magnetic_field()$/;"	v
grid	examples/99-advanced/openfoam-cooling.py	/^grid = grid.sample(air)$/;"	v
grid	examples/99-advanced/openfoam-cooling.py	/^grid = pv.ImageData(dimensions=dimensions, spacing=spacing, origin=origin)$/;"	v
grid	examples/99-advanced/openfoam-tubes.py	/^grid = grid.sample(air)$/;"	v
grid	examples/99-advanced/openfoam-tubes.py	/^grid = pv.ImageData(dimensions=dimensions, spacing=spacing, origin=origin)$/;"	v
grid	examples/99-advanced/warp-by-vector-eigenmodes.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	pyvista/core/utilities/geometric_objects.py	/^    grid = pyvista.StructuredGrid()$/;"	v
grid	pyvista/demos/logo.py	/^    grid = examples.download_letter_a()$/;"	v
grid	pyvista/plotting/charts.py	/^    def grid(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
grid	pyvista/plotting/charts.py	/^    def grid(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
grid	pyvista/plotting/charts.py	/^    def grid(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
grid	pyvista/plotting/charts.py	/^    def grid(self, val):  # numpydoc ignore=GL08$/;"	m	class:Chart2D
grid	tests/core/test_dataset.py	/^def grid():$/;"	f
grid_a	examples/00-load/linear-cells.py	/^grid_a = example_cells.Hexahedron()$/;"	v
grid_b	examples/00-load/linear-cells.py	/^grid_b = example_cells.HexagonalPrism()$/;"	v
grid_from_sph_coords	pyvista/core/utilities/features.py	/^def grid_from_sph_coords(theta, phi, r):$/;"	f
grid_scalar	examples/02-plot/spherical.py	/^grid_scalar = pv.grid_from_sph_coords(xx_bounds, yy_bounds, levels)$/;"	v
grid_scalar_3d	examples/02-plot/spherical.py	/^grid_scalar_3d = pv.grid_from_sph_coords(xx_bounds, yy_bounds, levels)$/;"	v
grid_winds	examples/02-plot/spherical.py	/^grid_winds = pv.grid_from_sph_coords(x, y_polar, wind_level)$/;"	v
grids	tests/core/test_cells.py	/^grids = [$/;"	v
grids	tests/core/test_dataset.py	/^grids = [$/;"	v
grids_cells	tests/core/test_dataset.py	/^grids_cells = grids[:-1]$/;"	v
groups	examples/02-plot/multi-window.py	/^groups = [$/;"	v
h	examples/02-plot/chart_overlays.py	/^h = np.sin(t)$/;"	v
h0	examples/01-filter/distance-between-surfaces.py	/^h0 = hill(1).elevation()$/;"	v
h0n	examples/01-filter/distance-between-surfaces.py	/^h0n = h0.compute_normals(point_normals=True, cell_normals=False, auto_orient_normals=True)$/;"	v
h1	examples/01-filter/distance-between-surfaces.py	/^h1 = h1.elevation()$/;"	v
h1	examples/01-filter/distance-between-surfaces.py	/^h1 = hill(10)$/;"	v
h_chart	examples/02-plot/chart_overlays.py	/^h_chart = pv.ChartMPL(f, size=(0.46, 0.25), loc=(0.02, 0.06))$/;"	v
h_line	examples/02-plot/chart_overlays.py	/^h_line = ax.plot(t[:1], h[:1])[0]$/;"	v
h_pressure	examples/99-advanced/fea-hertzian-contact-pressure.py	/^h_pressure = np.array($/;"	v
handle	examples_trame/basic/file_viewer.py	/^def handle(file_exchange, **kwargs):$/;"	f
handle_plotter	pyvista/jupyter/notebook.py	/^def handle_plotter(plotter, backend=None, screenshot=None, **kwargs):$/;"	f
handler	pyvista/core/utilities/observers.py	/^    def handler(self, sig, frame):$/;"	m	class:ProgressMonitor
handler	tests/plotting/jupyter/test_trame.py	/^    def handler(viewer, src, **kwargs):$/;"	f	function:test_trame_jupyter_custom_handler
has_active_background_renderer	pyvista/plotting/renderers.py	/^    def has_active_background_renderer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
has_border	pyvista/plotting/renderer.py	/^    def has_border(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
has_charts	pyvista/plotting/renderer.py	/^    def has_charts(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
has_content	pyvista/ext/plot_directive.py	/^    has_content = True$/;"	v	class:PlotDirective
has_content	pyvista/ext/viewer_directive.py	/^    has_content = True$/;"	v	class:OfflineViewerDirective
has_duplicates	pyvista/core/utilities/arrays.py	/^def has_duplicates(arr):$/;"	f
has_event_occurred	pyvista/core/utilities/observers.py	/^    def has_event_occurred(self):$/;"	m	class:Observer
has_ipython	tests/plotting/jupyter/test_static.py	/^    has_ipython = False$/;"	v
has_ipython	tests/plotting/jupyter/test_static.py	/^has_ipython = True$/;"	v
has_module	pyvista/core/utilities/misc.py	/^def has_module(module_name):$/;"	f
has_osmnx	doc/source/conf.py	/^    has_osmnx = True$/;"	v
has_osmnx	doc/source/conf.py	/^has_osmnx = False$/;"	v
has_trame	tests/plotting/jupyter/test_trame.py	/^    has_trame = False$/;"	v
has_trame	tests/plotting/jupyter/test_trame.py	/^has_trame = True$/;"	v
head	examples/02-plot/volume.py	/^head = examples.download_head()$/;"	v
head	pyvista/core/dataobject.py	/^    def head(self, display=True, html=None):$/;"	m	class:DataObject
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:ColorSchemeTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:ColorTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:LineStyleTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:MarkerStyleTable
height	examples/04-lights/shadows.py	/^height = rnge[2] * 0.05$/;"	v
height	pyvista/core/utilities/geometric_objects.py	/^        height=height,$/;"	v
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self) -> float:$/;"	m	class:ConeSource
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self, height: float):$/;"	m	class:ConeSource
height	pyvista/plotting/renderer.py	/^    def height(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
height	pyvista/plotting/themes.py	/^    def height(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
height	pyvista/plotting/themes.py	/^    def height(self, height: float):  # numpydoc ignore=GL08$/;"	m	class:_ColorbarConfig
helmet_file	examples/00-load/load-gltf.py	/^helmet_file = examples.gltf.download_damaged_helmet()$/;"	v
help	tests/check_doctest_names.py	/^        help='ignore doctest SKIP directives',$/;"	v
hemi	examples/04-lights/beam_shape.py	/^    hemi = hemi_template.copy()$/;"	v
hemi	examples/04-lights/beam_shape.py	/^hemi = hemi.rotate_z(180, inplace=False)$/;"	v
hemi	examples/04-lights/beam_shape.py	/^hemi = hemi.translate((0, offset, 0), inplace=False)$/;"	v
hemi	examples/04-lights/beam_shape.py	/^hemi = pv.Sphere().clip()$/;"	v
hemi_template	examples/04-lights/beam_shape.py	/^hemi_template = pv.Sphere().clip()$/;"	v
henneberg	examples/00-load/create-parametric-geometric-objects.py	/^henneberg = pv.ParametricHenneberg()$/;"	v
henneberg	examples/02-plot/backface_props.py	/^henneberg = pv.ParametricHenneberg().scale(0.25, inplace=False)$/;"	v
hex_grid	examples/00-load/linear-cells.py	/^hex_grid = example_cells.Hexahedron()$/;"	v
hex_rgb	pyvista/plotting/colors.py	/^    def hex_rgb(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Color
hex_rgba	pyvista/plotting/colors.py	/^    def hex_rgba(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Color
hexa	examples/00-load/create-polyhedron.py	/^hexa = [8, 9, 10, 11, 12, 13, 14, 15, 16]$/;"	v
hexa_points	examples/00-load/create-polyhedron.py	/^hexa_points = [$/;"	v
hexbeam	tests/conftest.py	/^def hexbeam():$/;"	f
hexbeam_field_attributes	tests/core/test_datasetattributes.py	/^def hexbeam_field_attributes(hexbeam):$/;"	f
hexbeam_point_attributes	tests/core/test_datasetattributes.py	/^def hexbeam_point_attributes(hexbeam):$/;"	f
hexbeamfile	pyvista/examples/examples.py	/^hexbeamfile = os.path.join(dir_path, 'hexbeam.vtk')$/;"	v
hexcolors	pyvista/plotting/colors.py	/^hexcolors = {$/;"	v
hidden_line_removal	pyvista/plotting/themes.py	/^    def hidden_line_removal(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
hidden_line_removal	pyvista/plotting/themes.py	/^    def hidden_line_removal(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
hide_actor	pyvista/plotting/axes.py	/^    def hide_actor(self):$/;"	m	class:Axes
hide_actor	pyvista/plotting/lights.py	/^    def hide_actor(self):$/;"	m	class:Light
hide_axes	pyvista/plotting/charts.py	/^    def hide_axes(self):$/;"	m	class:Chart2D
hide_axes	pyvista/plotting/plotter.py	/^    def hide_axes(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
hide_axes	pyvista/plotting/renderer.py	/^    def hide_axes(self):$/;"	m	class:Renderer
hide_axes_all	pyvista/plotting/plotter.py	/^    def hide_axes_all(self):$/;"	m	class:BasePlotter
hide_cells	pyvista/core/pointset.py	/^    def hide_cells(self, ind, inplace=False):$/;"	m	class:StructuredGrid
hide_cells	pyvista/core/pointset.py	/^    def hide_cells(self, ind: Sequence[int], inplace=False) -> 'ExplicitStructuredGrid':$/;"	m	class:ExplicitStructuredGrid
hide_details	examples_trame/basic/file_viewer.py	/^            hide_details=True,$/;"	v
hide_points	pyvista/core/pointset.py	/^    def hide_points(self, ind):$/;"	m	class:StructuredGrid
hide_progress	pyvista/core/utilities/reader.py	/^    def hide_progress(self):$/;"	m	class:BaseReader
hide_symmetric	pyvista/plotting/axes.py	/^    def hide_symmetric(self):$/;"	m	class:Axes
high_pass	examples/01-filter/image-fft-perlin-noise.py	/^high_pass = sampled_fft.high_pass(1.0, 1.0, 1.0).rfft()$/;"	v
high_pass	pyvista/core/filters/image_data.py	/^    def high_pass($/;"	m	class:ImageDataFilters
hill	examples/01-filter/distance-between-surfaces.py	/^def hill(seed):$/;"	f
hopf_fiber	examples/02-plot/moving_cmap.py	/^def hopf_fiber(p, phi):$/;"	f
hopf_torus	examples/02-plot/moving_cmap.py	/^def hopf_torus(t, phi):$/;"	f
horse	examples/04-lights/mesh_lighting.py	/^horse = examples.download_horse().decimate(0.9)$/;"	v
host	pyvista/trame/jupyter.py	/^        host=kwargs.get('host', 'localhost'),$/;"	v
html_context	doc/source/conf.py	/^html_context = {$/;"	v
html_copy_source	doc/source/conf.py	/^html_copy_source = False$/;"	v
html_css_files	doc/source/conf.py	/^html_css_files = [$/;"	v
html_logo	doc/source/conf.py	/^html_logo = ".\/_static\/pyvista_logo_sm.png"$/;"	v
html_rst	pyvista/plotting/utilities/sphinx_gallery.py	/^def html_rst($/;"	f
html_show_sourcelink	doc/source/conf.py	/^html_show_sourcelink = False$/;"	v
html_show_sphinx	doc/source/conf.py	/^html_show_sphinx = False$/;"	v
html_static_path	doc/source/conf.py	/^html_static_path = ["_static"]$/;"	v
html_static_path	tests/tinypages/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	doc/source/conf.py	/^html_theme = "pydata_sphinx_theme"$/;"	v
html_theme	tests/tinypages/conf.py	/^    html_theme = 'classic'$/;"	v
html_theme	tests/tinypages/conf.py	/^    html_theme = 'default'$/;"	v
html_theme_options	doc/source/conf.py	/^html_theme_options = {$/;"	v
htmlhelp_basename	doc/source/conf.py	/^htmlhelp_basename = "pyvistadoc"$/;"	v
hue	examples/02-plot/texture.py	/^    hue = norm(zz.ravel()) * 0.5 * (1.0 + np.sin(phase))$/;"	v
hue	examples/02-plot/texture.py	/^hue = norm(zz.ravel())$/;"	v
hue_range	pyvista/plotting/lookup_table.py	/^    def hue_range(self) -> Optional[tuple]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
hue_range	pyvista/plotting/lookup_table.py	/^    def hue_range(self, value: tuple):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
hvol	examples/01-filter/compute-volume.py	/^hvol = np.sum(volumes[idx])$/;"	v
hydro_orbital	examples/99-advanced/atomic-orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(3, 1, 0)$/;"	v
hydro_orbital	examples/99-advanced/atomic-orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(4, 2, -1)$/;"	v
hydro_orbital	examples/99-advanced/atomic-orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(4, 2, 0)$/;"	v
hydro_orbital	examples/99-advanced/atomic-orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(4, 2, 0, zoom_fac=0.5)$/;"	v
i0s	tests/core/test_dataset.py	/^i0s = [0, 1]$/;"	v
i_grid	pyvista/demos/logo.py	/^    i_grid = pyvista.voxelize(mesh_letters['i'], density=0.1)$/;"	v
i_size	examples/01-filter/extrude-trim.py	/^    i_size=1,$/;"	v
i_size	examples/01-filter/extrude-trim.py	/^    i_size=30,$/;"	v
ids	examples/00-load/create-tri-surface.py	/^ids = [22, 23, 24, 25, 35, 45, 44, 43, 42, 32]$/;"	v
ids	examples/01-filter/compute-normals.py	/^ids = np.arange(mesh.n_cells)[mesh['Normals'][:, 2] > 0.0]$/;"	v
ids	tests/core/test_cells.py	/^ids = [str(type(grid)) for grid in grids]$/;"	v
ids	tests/core/test_dataset.py	/^ids = list(map(type, grids))$/;"	v
ids_cells	tests/core/test_dataset.py	/^ids_cells = list(map(type, grids_cells))$/;"	v
idx	examples/01-filter/compute-volume.py	/^idx = np.argwhere(classifier)$/;"	v
idx	examples/01-filter/compute-volume.py	/^idx = np.argwhere(~classifier)$/;"	v
idx	examples/01-filter/warp-by-vector.py	/^        idx = 2 * i + j$/;"	v
ignore_pyobj	pyvista/ext/coverage.py	/^    def ignore_pyobj(self, full_name: str) -> bool:$/;"	m	class:CoverageBuilder
image	examples/00-load/read-image.py	/^image = examples.download_puppy()$/;"	v
image	examples/01-filter/image-fft.py	/^image = examples.download_moonlanding_image()$/;"	v
image	examples/02-plot/opacity.py	/^image = examples.download_st_helens()$/;"	v
image	examples/02-plot/texture.py	/^    image = colors.reshape((xx.shape[0], xx.shape[1], 3), order="F")$/;"	v
image	examples/02-plot/texture.py	/^image = colors.reshape((xx.shape[0], xx.shape[1], 3), order="F")$/;"	v
image	pyvista/plotting/plotter.py	/^    def image(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image	tests/conftest.py	/^def image(texture):$/;"	f
image	tests/core/test_helpers.py	/^        image = pv.ImageData()$/;"	v	class:test_wrappers.Foo
image_depth	pyvista/plotting/plotter.py	/^    def image_depth(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image_dilate_erode	pyvista/core/filters/image_data.py	/^    def image_dilate_erode($/;"	m	class:ImageDataFilters
image_file	examples/02-plot/texture.py	/^image_file = examples.mapfile$/;"	v
image_from_window	pyvista/plotting/utilities/regression.py	/^def image_from_window(render_window, as_vtk=False, ignore_alpha=False, scale=1):$/;"	f
image_scale	pyvista/plotting/plotter.py	/^    def image_scale(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image_scale	pyvista/plotting/plotter.py	/^    def image_scale(self, value: int):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
image_scale	pyvista/plotting/themes.py	/^    def image_scale(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Theme
image_scale	pyvista/plotting/themes.py	/^    def image_scale(self, value: int):  # numpydoc ignore=GL08$/;"	m	class:Theme
image_scale_context	pyvista/plotting/plotter.py	/^    def image_scale_context(self, scale: Optional[int] = None):$/;"	m	class:BasePlotter
image_threshold	pyvista/core/filters/image_data.py	/^    def image_threshold($/;"	m	class:ImageDataFilters
image_to_texture	pyvista/plotting/texture.py	/^def image_to_texture(image):$/;"	f
import_gltf	pyvista/plotting/plotter.py	/^    def import_gltf(self, filename, set_camera=True):$/;"	m	class:BasePlotter
import_vrml	pyvista/plotting/plotter.py	/^    def import_vrml(self, filename):$/;"	m	class:BasePlotter
increment	examples/01-filter/slicing.py	/^increment = np.pi \/ 6.0$/;"	v
increment_point_size_and_line_width	pyvista/plotting/plotter.py	/^    def increment_point_size_and_line_width(self, increment):$/;"	m	class:BasePlotter
independent_components	pyvista/plotting/volume_property.py	/^    def independent_components(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
independent_components	pyvista/plotting/volume_property.py	/^    def independent_components(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
index_of_refraction	pyvista/plotting/actor_properties.py	/^    def index_of_refraction(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
index_of_refraction	pyvista/plotting/actor_properties.py	/^    def index_of_refraction(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
index_to_loc	pyvista/plotting/renderers.py	/^    def index_to_loc(self, index):$/;"	m	class:Renderers
indices	examples/99-advanced/atomic-orbitals.py	/^indices = np.random.choice(hydro_orbital.n_points, 10000, p=prob)$/;"	v
init	pyvista/ext/coverage.py	/^    def init(self) -> None:$/;"	m	class:CoverageBuilder
init_mesh	examples/01-filter/image-fft-perlin-noise.py	/^init_mesh = warp_low_pass_noise(1e-2)$/;"	v
initial_step_length	examples/01-filter/streamlines.py	/^    initial_step_length=2.0,$/;"	v
initial_step_length	examples/99-advanced/magnetic-fields.py	/^    initial_step_length=0.1,$/;"	v
initialize	pyvista/plotting/render_window_interactor.py	/^    def initialize(self):$/;"	m	class:RenderWindowInteractor
initialize	pyvista/trame/jupyter.py	/^def initialize($/;"	f
initialized	pyvista/plotting/render_window_interactor.py	/^    def initialized(self):  # numpydoc ignore=RT01$/;"	m	class:RenderWindowInteractor
inlet	examples/99-advanced/openfoam-tubes.py	/^inlet = block[1][2]$/;"	v
inlet_surface	examples/01-filter/integrate-data.py	/^inlet_surface = dataset.slice('z', origin=(0, 0, 182))$/;"	v
inner	examples/01-filter/clipping-with-surface.py	/^inner = dataset.threshold(0.0, scalars="implicit_distance", invert=True)$/;"	v
inner	examples/99-advanced/planets.py	/^inner = 60268.0 + 7000.0$/;"	v
input	pyvista/plotting/text.py	/^    def input(self):$/;"	m	class:Text
input	pyvista/plotting/text.py	/^    def input(self, text: str):  # numpydoc ignore=GL08$/;"	m	class:Text
input_active_scalars_info	tests/core/test_dataset_filters.py	/^    def input_active_scalars_info(self):$/;"	m	class:InterrogateVTKGlyph3D
input_active_vectors_info	tests/core/test_dataset_filters.py	/^    def input_active_vectors_info(self):$/;"	m	class:InterrogateVTKGlyph3D
input_data_object	tests/core/test_dataset_filters.py	/^    def input_data_object(self):$/;"	m	class:InterrogateVTKGlyph3D
insert	pyvista/core/composite.py	/^    def insert(self, index: int, dataset: _TypeMultiBlockLeaf, name: Optional[str] = None) -> None:$/;"	m	class:MultiBlock
insert_arange_narray	tests/core/test_datasetattributes.py	/^def insert_arange_narray(hexbeam_point_attributes):$/;"	f
insert_bool_array	tests/core/test_datasetattributes.py	/^def insert_bool_array(hexbeam_point_attributes):$/;"	f
insert_string_array	tests/core/test_datasetattributes.py	/^def insert_string_array(hexbeam_point_attributes):$/;"	f
inside	examples/01-filter/extract-cells-inside-surface.py	/^inside = select.threshold(0.5)$/;"	v
int_rgb	pyvista/plotting/colors.py	/^    def int_rgb(self) -> Tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:Color
int_rgba	pyvista/plotting/colors.py	/^    def int_rgba(self) -> Tuple[int, int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:Color
integrate_data	pyvista/core/filters/data_set.py	/^    def integrate_data(self, progress_bar=False):$/;"	m	class:DataSetFilters
integrated_data	examples/01-filter/integrate-data.py	/^integrated_data = inlet_surface.integrate_data()$/;"	v
integrated_volume	examples/01-filter/integrate-data.py	/^integrated_volume = dataset.integrate_data()$/;"	v
integration_direction	examples/99-advanced/magnetic-fields.py	/^    integration_direction='both',$/;"	v
intensity	examples/04-lights/shadows.py	/^    intensity=0.3,$/;"	v
intensity	examples/04-lights/shadows.py	/^    intensity=1,$/;"	v
intensity	examples/04-lights/shadows.py	/^    intensity=15,$/;"	v
intensity	pyvista/plotting/lights.py	/^    def intensity(self):  # numpydoc ignore=RT01$/;"	m	class:Light
intensity	pyvista/plotting/lights.py	/^    def intensity(self, intensity):  # numpydoc ignore=GL08$/;"	m	class:Light
interact_callback	tests/plotting/test_widgets.py	/^    def interact_callback(transform):$/;"	f	function:test_affine_widget
interaction_event	examples/02-plot/chart_overlays.py	/^    interaction_event='always',$/;"	v
interaction_event	examples/02-plot/lookup-table.py	/^    interaction_event='always',$/;"	v
interaction_event	examples/03-widgets/clip-volume.py	/^    interaction_event='always',$/;"	v
interactive	pyvista/_plot.py	/^        interactive=interactive,$/;"	v
interactive	pyvista/plotting/themes.py	/^    def interactive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
interactive	pyvista/plotting/themes.py	/^    def interactive(self, interactive: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
interactive_ratio	pyvista/plotting/themes.py	/^    def interactive_ratio(self) -> Number:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
interactive_ratio	pyvista/plotting/themes.py	/^    def interactive_ratio(self, interactive_ratio: Number):  # numpydoc ignore=GL08$/;"	m	class:_TrameConfig
internal_mesh	examples/99-advanced/openfoam-example.py	/^internal_mesh = mesh["internalMesh"]  # or internal_mesh = mesh[0]$/;"	v
internal_mesh	examples/99-advanced/openfoam-example.py	/^internal_mesh = mesh["internalMesh"]$/;"	v
internal_mesh	examples/99-advanced/openfoam-example.py	/^internal_mesh = reader.read()["internalMesh"]$/;"	v
interp	examples/01-filter/interpolate.py	/^interp = grid.interpolate(probes, radius=15000, sharpness=10, strategy='mask_points')$/;"	v
interpolate	pyvista/core/filters/data_set.py	/^    def interpolate($/;"	m	class:DataSetFilters
interpolate	pyvista/plotting/texture.py	/^    def interpolate(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
interpolate	pyvista/plotting/texture.py	/^    def interpolate(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Texture
interpolate_before_map	examples/02-plot/interpolate-before-map.py	/^    interpolate_before_map=False,$/;"	v
interpolate_before_map	examples/02-plot/interpolate-before-map.py	/^    interpolate_before_map=True,$/;"	v
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self):  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self, *args):  # numpydoc ignore=GL08$/;"	m	class:_BaseVolumeMapper
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:_BaseMapper
interpolate_before_map	pyvista/plotting/themes.py	/^    def interpolate_before_map(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
interpolate_before_map	pyvista/plotting/themes.py	/^    def interpolate_before_map(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
interpolated	examples/01-filter/interpolate.py	/^interpolated = surface.interpolate(points, radius=12.0)$/;"	v
interpolation	pyvista/plotting/_property.py	/^    def interpolation(self) -> InterpolationType:  # numpydoc ignore=RT01$/;"	m	class:Property
interpolation	pyvista/plotting/_property.py	/^    def interpolation(self, value: Union[str, int, InterpolationType]):  # numpydoc ignore=GL08$/;"	m	class:Property
interpolation	pyvista/plotting/themes.py	/^    def interpolation($/;"	m	class:_LightingConfig
interpolation	pyvista/plotting/themes.py	/^    def interpolation(self) -> InterpolationType:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
interpolation_model	pyvista/plotting/actor_properties.py	/^    def interpolation_model(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
interpolation_model	pyvista/plotting/actor_properties.py	/^    def interpolation_model(self, model: InterpolationType):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
interpolation_type	pyvista/plotting/volume_property.py	/^    def interpolation_type(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
interpolation_type	pyvista/plotting/volume_property.py	/^    def interpolation_type(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
intersection	examples/01-filter/poly-ray-trace.py	/^intersection = pv.PolyData(points)$/;"	v
intersection	examples/99-advanced/ray-trace.py	/^intersection = pv.PolyData(points)$/;"	v
intersection	pyvista/core/filters/poly_data.py	/^    def intersection(self, mesh, split_first=True, split_second=True, progress_bar=False):$/;"	m	class:PolyDataFilters
intersphinx_mapping	doc/source/conf.py	/^intersphinx_mapping = {$/;"	v
intersphinx_timeout	doc/source/conf.py	/^intersphinx_timeout = 10$/;"	v
inv_axes	examples/02-plot/spherical.py	/^inv_axes = [*range(u_vec.ndim)[::-1]]$/;"	v
is_all_polydata	pyvista/core/composite.py	/^    def is_all_polydata(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_all_triangles	pyvista/core/pointset.py	/^    def is_all_triangles(self):  # numpydoc ignore=RT01$/;"	m	class:PolyData
is_binary	tests/core/test_polydata.py	/^def is_binary(filename):$/;"	f
is_camera_light	pyvista/plotting/lights.py	/^    def is_camera_light(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_headlight	pyvista/plotting/lights.py	/^    def is_headlight(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_inside_bounds	pyvista/core/utilities/helpers.py	/^def is_inside_bounds(point, bounds):$/;"	f
is_linear	pyvista/core/cell.py	/^    def is_linear(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Cell
is_manifold	pyvista/core/pointset.py	/^    def is_manifold(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PolyData
is_meshio_mesh	pyvista/core/utilities/fileio.py	/^def is_meshio_mesh(obj):$/;"	f
is_pyvista_dataset	pyvista/core/utilities/helpers.py	/^def is_pyvista_dataset(obj):$/;"	f
is_scene_light	pyvista/plotting/lights.py	/^    def is_scene_light(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_set	pyvista/plotting/camera.py	/^    def is_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Camera
is_set	pyvista/plotting/camera.py	/^    def is_set(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Camera
isarr_0	pyvista/_plot.py	/^            isarr_0 = isinstance(var_item[0], np.ndarray)$/;"	v
isarr_1	pyvista/_plot.py	/^            isarr_1 = isinstance(var_item[1], np.ndarray)$/;"	v
isometric_view	pyvista/plotting/plotter.py	/^    def isometric_view(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
isometric_view	pyvista/plotting/renderer.py	/^    def isometric_view(self):$/;"	m	class:Renderer
isometric_view_interactive	pyvista/plotting/plotter.py	/^    def isometric_view_interactive(self):$/;"	m	class:BasePlotter
italic	examples/02-plot/scalar-bars.py	/^    italic=True,$/;"	v
items	pyvista/core/datasetattributes.py	/^    def items(self) -> List[Tuple[str, pyvista_ndarray]]:$/;"	m	class:DataSetAttributes
items	pyvista/core/objects.py	/^    def items(self):$/;"	m	class:Table
items	pyvista/plotting/scalar_bars.py	/^    def items(self):$/;"	m	class:ScalarBars
j_size	examples/01-filter/extrude-trim.py	/^    j_size=1,$/;"	v
j_size	examples/01-filter/extrude-trim.py	/^    j_size=30,$/;"	v
jupiter	examples/99-advanced/planets.py	/^jupiter = examples.planets.load_jupiter(radius=71492.0)$/;"	v
jupiter_texture	examples/99-advanced/planets.py	/^jupiter_texture = examples.planets.download_jupiter_surface(texture=True)$/;"	v
jupyter_backend	pyvista/_plot.py	/^        jupyter_backend=jupyter_backend,$/;"	v
jupyter_backend	pyvista/plotting/themes.py	/^    def jupyter_backend(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
jupyter_backend	pyvista/plotting/themes.py	/^    def jupyter_backend(self, backend: 'str'):  # numpydoc ignore=GL08$/;"	m	class:Theme
jupyter_kwargs	pyvista/_plot.py	/^        jupyter_kwargs = {}$/;"	v
jupyter_kwargs	pyvista/_plot.py	/^        jupyter_kwargs=jupyter_kwargs,$/;"	v
jupyter_server_name	pyvista/plotting/themes.py	/^    def jupyter_server_name(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_server_name	pyvista/plotting/themes.py	/^    def jupyter_server_name(self, name: str):  # numpydoc ignore=GL08$/;"	m	class:_TrameConfig
jupyter_server_port	pyvista/plotting/themes.py	/^    def jupyter_server_port(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_server_port	pyvista/plotting/themes.py	/^    def jupyter_server_port(self, port: int):  # numpydoc ignore=GL08$/;"	m	class:_TrameConfig
k	examples/01-filter/flying_edges.py	/^k = 2.0$/;"	v
kappa	examples/99-advanced/sphere_eversion.py	/^kappa = (n - 1) \/ (2 * n)$/;"	v
key_press_event	pyvista/plotting/plotter.py	/^    def key_press_event(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
key_press_event	pyvista/plotting/render_window_interactor.py	/^    def key_press_event(self, obj, event):$/;"	m	class:RenderWindowInteractor
keys	examples/01-filter/gradients.py	/^keys = np.array(list(gradients.keys())).reshape(1, 3)$/;"	v
keys	examples/01-filter/gradients.py	/^keys = np.array(list(gradients.keys())).reshape(3, 3)$/;"	v
keys	pyvista/core/composite.py	/^    def keys(self) -> List[Optional[str]]:$/;"	m	class:MultiBlock
keys	pyvista/core/datasetattributes.py	/^    def keys(self) -> List[str]:$/;"	m	class:DataSetAttributes
keys	pyvista/core/objects.py	/^    def keys(self):$/;"	m	class:Table
keys	pyvista/plotting/scalar_bars.py	/^    def keys(self):$/;"	m	class:ScalarBars
kinds	examples/00-load/create-platonic-solids.py	/^kinds = [$/;"	v
kitchen	examples/01-filter/streamlines.py	/^kitchen = examples.download_kitchen(split=True)$/;"	v
klein	examples/00-load/create-parametric-geometric-objects.py	/^klein = pv.ParametricKlein()$/;"	v
klein	examples/02-plot/backface_props.py	/^klein = pv.ParametricKlein().rotate_z(150, inplace=False).translate((6, 0, 0), inplace=False)$/;"	v
knee	examples/02-plot/opacity.py	/^knee = examples.download_knee()$/;"	v
kochanek_spline	examples/00-load/create-kochanek-spline.py	/^    kochanek_spline = pv.KochanekSpline(points, bias=[b[i], b[i], b[i]], n_points=1000)$/;"	v
kochanek_spline	examples/00-load/create-kochanek-spline.py	/^    kochanek_spline = pv.KochanekSpline(points, continuity=[c[i], c[i], c[i]], n_points=1000)$/;"	v
kochanek_spline	examples/00-load/create-kochanek-spline.py	/^    kochanek_spline = pv.KochanekSpline(points, tension=[t[i], t[i], t[i]], n_points=1000)$/;"	v
kpos	examples/01-filter/streamlines.py	/^kpos = [(-6.68, 11.9, 11.6), (3.5, 2.5, 1.26), (0.45, -0.4, 0.8)]$/;"	v
kuen	examples/00-load/create-parametric-geometric-objects.py	/^kuen = pv.ParametricKuen()$/;"	v
label	examples/01-filter/clipping-with-surface.py	/^    label='Inner region',$/;"	v
label	examples/01-filter/clipping-with-surface.py	/^    label='Outer region',$/;"	v
label	examples/98-common/project-points-tessellate.py	/^    label='Points to project',$/;"	v
label	pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label	pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
label	pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
label	pyvista/plotting/charts.py	/^    def label(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
label	pyvista/plotting/charts.py	/^    def label(self, val):  # numpydoc ignore=GL08$/;"	m	class:_MultiCompPlot
label	pyvista/plotting/charts.py	/^    def label(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Plot
label_font_size	examples/02-plot/scalar-bars.py	/^    label_font_size=16,$/;"	v
label_offset	pyvista/plotting/cube_axes_actor.py	/^    def label_offset(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
label_offset	pyvista/plotting/cube_axes_actor.py	/^    def label_offset(self, offset: float):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
label_points	examples/02-plot/distance-along-spline.py	/^label_points = []$/;"	v
label_position	pyvista/plotting/axes_actor.py	/^    def label_position(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
label_position	pyvista/plotting/axes_actor.py	/^    def label_position(self, length):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
label_size	pyvista/plotting/charts.py	/^    def label_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label_size	pyvista/plotting/charts.py	/^    def label_size(self, size):  # numpydoc ignore=GL08$/;"	m	class:Axis
label_size	pyvista/plotting/themes.py	/^    def label_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
label_size	pyvista/plotting/themes.py	/^    def label_size(self, label_size: int):  # numpydoc ignore=GL08$/;"	m	class:_Font
label_visible	pyvista/plotting/charts.py	/^    def label_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label_visible	pyvista/plotting/charts.py	/^    def label_visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
labels	examples/02-plot/chart_basics.py	/^labels = [f"Machine {i}" for i in range(5)]$/;"	v
labels	examples/02-plot/chart_basics.py	/^labels = [f"Segment {i}" for i in range(5)]$/;"	v
labels	examples/02-plot/distance-along-spline.py	/^labels = []$/;"	v
labels	pyvista/plotting/charts.py	/^    def labels(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
labels	pyvista/plotting/charts.py	/^    def labels(self, val):  # numpydoc ignore=GL08$/;"	m	class:_MultiCompPlot
labels	pyvista/plotting/helpers.py	/^    labels = [labels[0:2], labels[2:4]]$/;"	v
lactor	tests/plotting/test_theme.py	/^        lactor = pl.add_mesh(lines)$/;"	v	class:test_user_theme.MyTheme
land	examples/01-filter/geodesic.py	/^land = examples.download_topo_land().triangulate().decimate(0.98)$/;"	v
language	doc/source/conf.py	/^language = 'en'$/;"	v
large_vol	examples/02-plot/volume.py	/^large_vol = examples.download_damavand_volcano()$/;"	v
large_volume	examples/01-filter/compute-volume.py	/^large_volume = largest.volume$/;"	v
largest	examples/01-filter/compute-volume.py	/^largest = threshed.connectivity('largest', scalar_range=scalar_range)$/;"	v
largest	examples/01-filter/connectivity.py	/^largest = pine_roots.connectivity('largest')$/;"	v
last_update_time	pyvista/plotting/plotter.py	/^    last_update_time = 0.0$/;"	v	class:Plotter
latest_algorithm	tests/core/test_dataset_filters.py	/^    def latest_algorithm(self):$/;"	m	class:GetOutput
latex_documents	doc/source/conf.py	/^latex_documents = [$/;"	v
latex_elements	doc/source/conf.py	/^latex_elements = {$/;"	v
launch_it	pyvista/trame/jupyter.py	/^    async def launch_it():  # numpydoc ignore=GL08$/;"	f	function:elegantly_launch
launch_server	pyvista/trame/jupyter.py	/^def launch_server(server=None, port=None, host=None, **kwargs):$/;"	f
layer	pyvista/plotting/renderer.py	/^    def layer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
layer	pyvista/plotting/renderer.py	/^    def layer(self, layer):  # numpydoc ignore=GL08$/;"	m	class:Renderer
lazy_vtkPOpenFOAMReader	pyvista/core/utilities/reader.py	/^def lazy_vtkPOpenFOAMReader():$/;"	f
left_button_down	pyvista/plotting/plotter.py	/^    def left_button_down(self, obj, event_type):$/;"	m	class:BasePlotter
left_clicking	tests/plotting/test_picking.py	/^        left_clicking=True,$/;"	v	class:test_element_picking.Tracker
legend	pyvista/plotting/plotter.py	/^    def legend(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
legend	pyvista/plotting/renderer.py	/^    def legend(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartMPL
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
length	examples/04-lights/shadows.py	/^length = rnge[1] * (1 + expand)$/;"	v
length	pyvista/core/composite.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
length	pyvista/core/dataset.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:DataSet
length	pyvista/plotting/plotter.py	/^    def length(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
length	pyvista/plotting/renderer.py	/^    def length(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
levels	examples/02-plot/spherical.py	/^levels = [RADIUS * 1.01]$/;"	v
levels	examples/02-plot/spherical.py	/^levels = z_scale * (np.arange(scalar_3d.shape[0] + 1)) ** 2 + z_offset$/;"	v
lidar	examples/00-load/create-pointset.py	/^lidar = examples.download_lidar()$/;"	v
lidar_pset	examples/00-load/create-pointset.py	/^    lidar_pset = lidar.cast_to_pointset()$/;"	v
light	examples/02-plot/pbr.py	/^light = pv.Light((-2, 2, 0), (0, 0, 0), 'white')$/;"	v
light	examples/02-plot/pbr.py	/^light = pv.Light((0, 0, 10), (0, 0, 0), 'white')$/;"	v
light	examples/02-plot/pbr.py	/^light = pv.Light((2, 0, 0), (0, 0, 0), (0.7, 0.0862, 0.0549))$/;"	v
light	examples/04-lights/actors.py	/^    light = pv.Light(position=position, focal_point=focus, color=color)$/;"	v
light	examples/04-lights/attenuation.py	/^    light = pv.Light(position=(0.1, offset, 2), focal_point=(0.1, offset, 1), color='cyan')$/;"	v
light	examples/04-lights/attenuation.py	/^    light = pv.Light(position=(0.5, offset, 3), focal_point=(0.5, offset, 1), color='cyan')$/;"	v
light	examples/04-lights/attenuation.py	/^    light = pv.Light(position=(light_x, 0, 0), focal_point=(light_x, 1, 0), color='cyan')$/;"	v
light	examples/04-lights/beam_shape.py	/^    light = pv.Light(position=center, focal_point=focal_point)$/;"	v
light	examples/04-lights/beam_shape.py	/^light = pv.Light(position=(0, 0, 0), focal_point=(-1, 0, 0))$/;"	v
light	examples/04-lights/beam_shape.py	/^light = pv.Light(position=(0, offset, 0), focal_point=(-1, offset, 0))$/;"	v
light	examples/04-lights/light_types.py	/^light = pv.Light(light_type='headlight')$/;"	v
light	examples/04-lights/light_types.py	/^light = pv.Light(position=(0, 1, 0), light_type='scene light')$/;"	v
light	examples/04-lights/light_types.py	/^light = pv.Light(position=(1, 0, 0), light_type='camera light')$/;"	v
light	examples/04-lights/plotter_builtins.py	/^light = pv.Light()$/;"	v
light	examples/04-lights/shadows.py	/^light = pyvista.Light($/;"	v
light	examples/99-advanced/planets.py	/^light = pyvista.Light()$/;"	v
light1	examples/04-lights/shadows.py	/^light1 = pyvista.Light($/;"	v
light2	examples/04-lights/shadows.py	/^light2 = pyvista.Light($/;"	v
light_offsets	examples/04-lights/attenuation.py	/^light_offsets = [-6, 0, 6]$/;"	v
light_type	pyvista/plotting/lights.py	/^    def light_type(self):  # numpydoc ignore=RT01$/;"	m	class:Light
light_type	pyvista/plotting/lights.py	/^    def light_type(self, ltype):  # numpydoc ignore=GL08$/;"	m	class:Light
light_types	examples/04-lights/plotter_builtins.py	/^light_types = [light.light_type for light in plotter.renderer.lights]$/;"	v
lighting	examples/01-filter/integrate-data.py	/^    lighting=False,$/;"	v
lighting	examples/01-filter/sampling_functions_3d.py	/^    lighting=True,$/;"	v
lighting	examples/01-filter/streamlines.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/backface_props.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/cmap.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/cmap.py	/^    lighting=True,$/;"	v
lighting	examples/02-plot/gif.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/vertices.py	/^    lighting=False,$/;"	v
lighting	examples/99-advanced/fea-hertzian-contact-pressure.py	/^    lighting=True,$/;"	v
lighting	examples/99-advanced/openfoam-tubes.py	/^    lighting=False,$/;"	v
lighting	pyvista/plotting/_property.py	/^    def lighting(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
lighting	pyvista/plotting/_property.py	/^    def lighting(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Property
lighting	pyvista/plotting/actor_properties.py	/^    def lighting(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
lighting	pyvista/plotting/actor_properties.py	/^    def lighting(self, flag: bool):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
lighting	pyvista/plotting/themes.py	/^    def lighting(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
lighting	pyvista/plotting/themes.py	/^    def lighting(self, lighting: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
lighting_params	pyvista/plotting/themes.py	/^    def lighting_params(self) -> _LightingConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
lighting_params	pyvista/plotting/themes.py	/^    def lighting_params(self, config: _LightingConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
lights	pyvista/plotting/renderer.py	/^    def lights(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
lin_pts	examples/01-filter/extract-surface.py	/^lin_pts = np.array($/;"	v
line	examples/00-load/create-geometric-objects.py	/^line = pv.Line()$/;"	v
line	examples/00-load/create-spline.py	/^line = lines_from_points(points)$/;"	v
line	examples/01-filter/extrude-rotate.py	/^line = pyvista.Line(pointa=(0, 0, 0), pointb=(1, 0, 0), resolution=2)$/;"	v
line	examples/01-filter/extrude-trim.py	/^line = pv.Line()$/;"	v
line	examples/01-filter/slicing.py	/^line = pv.Line(a, b, n_slices)$/;"	v
line	examples/02-plot/plot-over-line.py	/^line = pv.Line(a, b)$/;"	v
line	examples/99-advanced/fea-hertzian-contact-pressure.py	/^line = pv.Line(a, b, resolution=100)$/;"	v
line	examples/99-advanced/osmnx-example.py	/^    line = pv.lines_from_points(pts)$/;"	v
line	pyvista/plotting/charts.py	/^    def line(self, x, y, color="b", width=1.0, style="-", label=""):$/;"	m	class:Chart2D
line_plot_2d	tests/plotting/test_charts.py	/^def line_plot_2d(chart_2d):$/;"	f
line_segments_from_points	pyvista/core/utilities/points.py	/^def line_segments_from_points(points):$/;"	f
line_streamlines	examples/01-filter/streamlines_2D.py	/^line_streamlines = fluid_mesh.streamlines($/;"	v
line_streamlines	examples/01-filter/streamlines_2D.py	/^line_streamlines = fluid_mesh.streamlines_evenly_spaced_2D($/;"	v
line_style	pyvista/plotting/charts.py	/^    def line_style(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
line_style	pyvista/plotting/charts.py	/^    def line_style(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Plot
line_width	examples/00-load/create-poly.py	/^    line_width=5,$/;"	v
line_width	examples/00-load/create-truss.py	/^    line_width=10,$/;"	v
line_width	examples/02-plot/opacity.py	/^    line_width=5,$/;"	v
line_width	examples/02-plot/silhouette.py	/^    line_width=8.0,$/;"	v
line_width	examples/99-advanced/openfoam-tubes.py	/^    line_width=3,$/;"	v
line_width	pyvista/demos/logo.py	/^        line_width=2,$/;"	v
line_width	pyvista/plotting/_property.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
line_width	pyvista/plotting/_property.py	/^    def line_width(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
line_width	pyvista/plotting/charts.py	/^    def line_width(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
line_width	pyvista/plotting/charts.py	/^    def line_width(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Plot
line_width	pyvista/plotting/themes.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
line_width	pyvista/plotting/themes.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
line_width	pyvista/plotting/themes.py	/^    def line_width(self, line_width: float):  # numpydoc ignore=GL08$/;"	m	class:Theme
line_width	pyvista/plotting/themes.py	/^    def line_width(self, line_width: float):  # numpydoc ignore=GL08$/;"	m	class:_SilhouetteConfig
linear_copy	pyvista/core/pointset.py	/^    def linear_copy(self, deep=False):$/;"	m	class:UnstructuredGrid
linear_font_scale_factor	pyvista/plotting/text.py	/^    def linear_font_scale_factor(self) -> float:$/;"	m	class:CornerAnnotation
linear_font_scale_factor	pyvista/plotting/text.py	/^    def linear_font_scale_factor(self, factor: float):  # numpydoc ignore=GL08$/;"	m	class:CornerAnnotation
linear_to_srgb	pyvista/plotting/colors.py	/^    def linear_to_srgb(self):$/;"	m	class:Color
lines	examples/99-advanced/openfoam-cooling.py	/^lines = air.streamlines_from_source(points, max_time=2.0)$/;"	v
lines	examples/99-advanced/openfoam-tubes.py	/^lines = air.streamlines_from_source($/;"	v
lines	examples/99-advanced/osmnx-example.py	/^lines = []$/;"	v
lines	pyvista/core/pointset.py	/^    def lines(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
lines	pyvista/core/pointset.py	/^    def lines(self, lines):  # numpydoc ignore=GL08$/;"	m	class:PolyData
lines_from_points	examples/00-load/create-spline.py	/^def lines_from_points(points):$/;"	f
lines_from_points	pyvista/core/utilities/points.py	/^def lines_from_points(points, close=False):$/;"	f
lines_to_points	pyvista/core/utilities/parametric_objects.py	/^            lines_to_points=False,$/;"	v
link_views	pyvista/plotting/plotter.py	/^    def link_views(self, views=0):$/;"	m	class:BasePlotter
linkcheck_ignore	doc/source/conf.py	/^linkcheck_ignore = [$/;"	v
linkcheck_retries	doc/source/conf.py	/^linkcheck_retries = 3$/;"	v
linkcheck_timeout	doc/source/conf.py	/^linkcheck_timeout = 500$/;"	v
linkcode_resolve	pyvista/core/utilities/docs.py	/^def linkcode_resolve(domain, info, edit=False):$/;"	f
load_airplane	pyvista/examples/examples.py	/^def load_airplane():$/;"	f
load_ant	pyvista/examples/examples.py	/^def load_ant():$/;"	f
load_boundary_patch	pyvista/core/utilities/reader.py	/^    def load_boundary_patch(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
load_boundary_patch	pyvista/core/utilities/reader.py	/^    def load_boundary_patch(self, enabled: bool):  # numpydoc ignore=GL08$/;"	m	class:CGNSReader
load_channels	pyvista/examples/examples.py	/^def load_channels():$/;"	f
load_earth	pyvista/examples/planets.py	/^def load_earth(radius=1.0, lat_resolution=50, lon_resolution=100):$/;"	f
load_explicit_structured	pyvista/examples/examples.py	/^def load_explicit_structured(dimensions=(5, 6, 7), spacing=(20, 10, 1)):$/;"	f
load_globe	pyvista/examples/examples.py	/^def load_globe():$/;"	f
load_globe_texture	pyvista/examples/examples.py	/^def load_globe_texture():$/;"	f
load_hexbeam	pyvista/examples/examples.py	/^def load_hexbeam():$/;"	f
load_hydrogen_orbital	pyvista/examples/examples.py	/^def load_hydrogen_orbital(n=1, l=0, m=0, zoom_fac=1.0):$/;"	f
load_jupiter	pyvista/examples/planets.py	/^def load_jupiter(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_mars	pyvista/examples/planets.py	/^def load_mars(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_mercury	pyvista/examples/planets.py	/^def load_mercury(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_moon	pyvista/examples/planets.py	/^def load_moon(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_neptune	pyvista/examples/planets.py	/^def load_neptune(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_nut	pyvista/examples/examples.py	/^def load_nut():$/;"	f
load_pluto	pyvista/examples/planets.py	/^def load_pluto(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_random_hills	pyvista/examples/examples.py	/^def load_random_hills():$/;"	f
load_rectilinear	pyvista/examples/examples.py	/^def load_rectilinear():$/;"	f
load_saturn	pyvista/examples/planets.py	/^def load_saturn(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_saturn_rings	pyvista/examples/planets.py	/^def load_saturn_rings(inner=0.25, outer=0.5, c_res=6):  # pragma: no cover$/;"	f
load_sphere	pyvista/examples/examples.py	/^def load_sphere():$/;"	f
load_sphere_vectors	pyvista/examples/examples.py	/^def load_sphere_vectors():$/;"	f
load_spline	pyvista/examples/examples.py	/^def load_spline():$/;"	f
load_structured	pyvista/examples/examples.py	/^def load_structured():$/;"	f
load_sun	pyvista/examples/planets.py	/^def load_sun(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_tetbeam	pyvista/examples/examples.py	/^def load_tetbeam():$/;"	f
load_theme	pyvista/plotting/themes.py	/^    def load_theme(self, theme):$/;"	m	class:Theme
load_theme	pyvista/plotting/themes.py	/^def load_theme(filename):$/;"	f
load_uniform	pyvista/examples/examples.py	/^def load_uniform():$/;"	f
load_uranus	pyvista/examples/planets.py	/^def load_uranus(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_venus	pyvista/examples/planets.py	/^def load_venus(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
loc	pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
loc	pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
loc	pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
loc	pyvista/plotting/charts.py	/^    def loc(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartBox
loc	pyvista/plotting/charts.py	/^    def loc(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartPie
loc	pyvista/plotting/charts.py	/^    def loc(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
loc_to_group	pyvista/plotting/renderers.py	/^    def loc_to_group(self, loc):$/;"	m	class:Renderers
loc_to_index	pyvista/plotting/renderers.py	/^    def loc_to_index(self, loc):$/;"	m	class:Renderers
local	examples/02-plot/topo-map.py	/^local = elevation.clip_box(bounds, invert=False)$/;"	v
log	pyvista/plotting/plotter.py	/^log = logging.getLogger(__name__)$/;"	v
log	pyvista/plotting/render_window_interactor.py	/^log = logging.getLogger(__name__)$/;"	v
log_message	pyvista/core/utilities/observers.py	/^    def log_message(self, kind, alert):$/;"	m	class:Observer
log_scale	examples/01-filter/image-fft.py	/^    log_scale=True,$/;"	v
log_scale	pyvista/plotting/charts.py	/^    def log_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
log_scale	pyvista/plotting/charts.py	/^    def log_scale(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
log_scale	pyvista/plotting/lookup_table.py	/^    def log_scale(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
log_scale	pyvista/plotting/lookup_table.py	/^    def log_scale(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
logger	pyvista/ext/coverage.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	pyvista/ext/viewer_directive.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	pyvista/trame/jupyter.py	/^logger = logging.getLogger(__name__)$/;"	v
logo_atomized	pyvista/demos/logo.py	/^def logo_atomized(density=0.05, scale=0.6, depth=0.05):$/;"	f
logo_basic	pyvista/demos/logo.py	/^def logo_basic():$/;"	f
logo_letters	pyvista/demos/logo.py	/^def logo_letters(merge=False, depth=0.3):$/;"	f
logo_voxel	pyvista/demos/logo.py	/^def logo_voxel(density=0.03):$/;"	f
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self) -> 'pv.LookupTable':  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self):  # numpydoc ignore=GL08  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self, lut):  # numpydoc ignore=GL08$/;"	m	class:_BaseVolumeMapper
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self, table):  # numpydoc ignore=GL08$/;"	m	class:_BaseMapper
lookup_table_ndarray	pyvista/plotting/lookup_table.py	/^class lookup_table_ndarray(np.ndarray):$/;"	c
low_pass	examples/01-filter/image-fft-perlin-noise.py	/^low_pass = sampled_fft.low_pass(1.0, 1.0, 1.0).rfft()$/;"	v
low_pass	pyvista/core/filters/image_data.py	/^    def low_pass($/;"	m	class:ImageDataFilters
lut	examples/02-plot/lookup-table.py	/^lut = pv.LookupTable()$/;"	v
lut	examples/02-plot/lookup-table.py	/^lut = pv.LookupTable(cmap='magma')$/;"	v
lut	tests/plotting/test_lookup_table.py	/^def lut():$/;"	f
lut_w_cmap	tests/plotting/test_lookup_table.py	/^def lut_w_cmap():$/;"	f
lvol	examples/01-filter/compute-volume.py	/^lvol = np.sum(volumes[idx])$/;"	v
magpylib	doc/source/make_external_gallery.py	/^    magpylib=Example($/;"	v
main	curvatures_adjust_edges.py	/^def main(argv):$/;"	f
main	examples/01-filter/curvatures_adjust_edges.py	/^def main(argv):$/;"	f
main_has_priority	pyvista/core/utilities/features.py	/^        main_has_priority=main_has_priority,$/;"	v
make_all_tables	doc/source/make_tables.py	/^def make_all_tables():$/;"	f
make_axis_labels	pyvista/plotting/cube_axes_actor.py	/^def make_axis_labels(vmin, vmax, n, fmt):$/;"	f
make_cijkl_E_nu	examples/99-advanced/warp-by-vector-eigenmodes.py	/^def make_cijkl_E_nu(E=200, nu=0.3):$/;"	f
make_double_slider	examples/02-plot/lookup-table.py	/^def make_double_slider(attr, idx):$/;"	f
make_example_gallery	doc/source/make_external_gallery.py	/^def make_example_gallery():$/;"	f
make_legend_face	pyvista/plotting/renderer.py	/^def make_legend_face(face):$/;"	f
make_line_cells	pyvista/plotting/picking.py	/^        def make_line_cells(n_points):  # numpydoc ignore=GL08$/;"	f	function:PickingHelper.enable_path_picking
make_passes	tests/plotting/test_render_pass.py	/^def make_passes():$/;"	f
make_point_set	examples/00-load/create-structured-surface.py	/^def make_point_set():$/;"	f
make_points	examples/00-load/create-kochanek-spline.py	/^def make_points():$/;"	f
make_points	examples/00-load/create-spline.py	/^def make_points():$/;"	f
make_poly	examples/02-plot/composite-picking.py	/^def make_poly():$/;"	f
make_sphere	tests/tinypages/samples.py	/^def make_sphere():$/;"	f
make_tri_mesh	pyvista/core/utilities/points.py	/^def make_tri_mesh(points, faces):$/;"	f
make_two_char_img	tests/plotting/conftest.py	/^def make_two_char_img(text):$/;"	f
man_pages	doc/source/conf.py	/^man_pages = [(master_doc, "pyvista", "pyvista Documentation", [author], 1)]$/;"	v
map_loc_to_pos	pyvista/plotting/renderer.py	/^def map_loc_to_pos(loc, size, border=0.05):$/;"	f
map_value	pyvista/plotting/lookup_table.py	/^    def map_value(self, value: float, opacity: bool = True) -> tuple:$/;"	m	class:LookupTable
mapfile	pyvista/examples/examples.py	/^mapfile = os.path.join(dir_path, '2k_earth_daymap.jpg')$/;"	v
mapper	pyvista/plotting/actor.py	/^    def mapper(self) -> _BaseMapper:  # numpydoc ignore=RT01$/;"	m	class:Actor
mapper	pyvista/plotting/actor.py	/^    def mapper(self, obj):  # numpydoc ignore=GL08$/;"	m	class:Actor
mapper	pyvista/plotting/volume.py	/^    def mapper(self) -> _BaseMapper:  # numpydoc ignore=RT01$/;"	m	class:Volume
mapper	pyvista/plotting/volume.py	/^    def mapper(self, obj):  # numpydoc ignore=GL08$/;"	m	class:Volume
mapper	tests/plotting/mappers/test_gaussian_mapper.py	/^def mapper(sphere):$/;"	f
mapping	examples/02-plot/cmap.py	/^mapping = np.linspace(mesh['values'].min(), mesh['values'].max(), 256)$/;"	v
margin	pyvista/plotting/charts.py	/^    def margin(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
margin	pyvista/plotting/charts.py	/^    def margin(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
marker_names	tests/conftest.py	/^def marker_names(item):$/;"	f
marker_size	pyvista/plotting/charts.py	/^    def marker_size(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
marker_size	pyvista/plotting/charts.py	/^    def marker_size(self, val):  # numpydoc ignore=GL08$/;"	m	class:ScatterPlot2D
marker_style	pyvista/plotting/charts.py	/^    def marker_style(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
marker_style	pyvista/plotting/charts.py	/^    def marker_style(self, val):  # numpydoc ignore=GL08$/;"	m	class:ScatterPlot2D
mars	examples/99-advanced/planets.py	/^mars = examples.planets.load_mars(radius=3397.2)$/;"	v
mars_texture	examples/99-advanced/planets.py	/^mars_texture = examples.planets.download_mars_surface(texture=True)$/;"	v
mask	examples/01-filter/glyphs.py	/^mask = mesh['scalars'] < 210$/;"	v
mask	pyvista/demos/logo.py	/^    mask = grid.points[cells[:, 1:], 2] < 0.2$/;"	v
mask	pyvista/demos/logo.py	/^    mask = mask.all(1)$/;"	v
master_doc	doc/source/conf.py	/^master_doc = "index"$/;"	v
master_doc	tests/tinypages/conf.py	/^master_doc = 'index'$/;"	v
matching_point_data	tests/core/test_polydata.py	/^    def matching_point_data(this, that, scalars_name):$/;"	f	function:test_merge_main_has_priority
matplotlib_default_colors	pyvista/plotting/colors.py	/^matplotlib_default_colors = [$/;"	v
max_examples	tests/core/test_dataset.py	/^    max_examples=HYPOTHESIS_MAX_EXAMPLES,$/;"	v
max_freq	examples/01-filter/image-fft-perlin-noise.py	/^max_freq = freq.max()$/;"	v
max_point	examples/99-advanced/extending-pyvista.py	/^    def max_point(self):$/;"	m	class:FooData
max_time	examples/01-filter/streamlines.py	/^    max_time=100.0,$/;"	v
max_time	examples/01-filter/streamlines_2D.py	/^    max_time=100.0,$/;"	v
max_time	examples/99-advanced/magnetic-fields.py	/^    max_time=180,$/;"	v
max_time	examples/99-advanced/openfoam-tubes.py	/^    max_time=1.0,$/;"	v
mean_density	examples/01-filter/integrate-data.py	/^mean_density = integrated_volume['density'][0] \/ volume$/;"	v
mean_velocity	examples/01-filter/integrate-data.py	/^mean_velocity = integrated_volume['velocity'][0] \/ volume$/;"	v
median_smooth	pyvista/core/filters/image_data.py	/^    def median_smooth($/;"	m	class:ImageDataFilters
mem_sub	pyvista/plotting/charts.py	/^            def mem_sub(*args, **kwargs):$/;"	f	function:DocSubs._wrap_member
memory_address	pyvista/core/dataobject.py	/^    def memory_address(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:DataObject
memory_address	pyvista/plotting/actor.py	/^    def memory_address(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
mercury	examples/99-advanced/planets.py	/^mercury = examples.planets.load_mercury(radius=2439.0)$/;"	v
mercury_texture	examples/99-advanced/planets.py	/^mercury_texture = examples.planets.download_mercury_surface(texture=True)$/;"	v
merge	pyvista/core/filters/data_set.py	/^    def merge($/;"	m	class:DataSetFilters
merge	pyvista/core/filters/poly_data.py	/^    def merge($/;"	m	class:PolyDataFilters
merge	pyvista/core/utilities/features.py	/^def merge($/;"	f
merge_points	pyvista/core/utilities/features.py	/^        merge_points=merge_points,$/;"	v
mesh	examples/00-load/create-poly.py	/^mesh = pv.PolyData(points, faces)$/;"	v
mesh	examples/00-load/create-polydata-strips.py	/^mesh = pv.PolyData(points, strips=strips)$/;"	v
mesh	examples/00-load/create-structured-surface.py	/^mesh = pv.StructuredGrid()$/;"	v
mesh	examples/00-load/create-truss.py	/^mesh = pyvista.PolyData(nodes, edges_w_padding)$/;"	v
mesh	examples/00-load/load-gltf.py	/^mesh = block[0][0][0]$/;"	v
mesh	examples/00-load/read-file.py	/^mesh = examples.download_bunny_coarse()$/;"	v
mesh	examples/00-load/read-file.py	/^mesh = examples.download_cad_model()$/;"	v
mesh	examples/00-load/read-file.py	/^mesh = examples.download_doorman()$/;"	v
mesh	examples/00-load/read-file.py	/^mesh = examples.download_teapot()$/;"	v
mesh	examples/00-load/read-file.py	/^mesh = pv.read(filename)$/;"	v
mesh	examples/00-load/read-parallel.py	/^mesh = pv.read(filename)$/;"	v
mesh	examples/00-load/reader.py	/^    mesh = reader.read()[0]  # This dataset only has 1 block$/;"	v
mesh	examples/00-load/reader.py	/^mesh = pyvista.Sphere()$/;"	v
mesh	examples/00-load/terrain-mesh.py	/^mesh = pv.StructuredGrid(xx, yy, zz)$/;"	v
mesh	examples/00-load/wrap-trimesh.py	/^mesh = pv.wrap(point)$/;"	v
mesh	examples/00-load/wrap-trimesh.py	/^mesh = pv.wrap(tmesh)$/;"	v
mesh	examples/01-filter/cell-centers.py	/^mesh = examples.download_teapot()$/;"	v
mesh	examples/01-filter/cell-centers.py	/^mesh = pv.Cube()$/;"	v
mesh	examples/01-filter/clipping.py	/^mesh = examples.load_airplane()$/;"	v
mesh	examples/01-filter/clipping.py	/^mesh = pv.Wavelet()$/;"	v
mesh	examples/01-filter/compute-normals.py	/^mesh = examples.download_nefertiti()$/;"	v
mesh	examples/01-filter/compute-normals.py	/^mesh = examples.download_topo_global()$/;"	v
mesh	examples/01-filter/connectivity.py	/^mesh = examples.download_foot_bones()$/;"	v
mesh	examples/01-filter/connectivity.py	/^mesh = pv.ParametricRandomHills()$/;"	v
mesh	examples/01-filter/contouring.py	/^mesh = examples.download_embryo()$/;"	v
mesh	examples/01-filter/contouring.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples/01-filter/decimate.py	/^mesh = examples.download_face()$/;"	v
mesh	examples/01-filter/extract-cells-inside-surface.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/01-filter/extract-edges.py	/^mesh = examples.download_bunny()$/;"	v
mesh	examples/01-filter/extract-edges.py	/^mesh = examples.download_cad_model()$/;"	v
mesh	examples/01-filter/extract-edges.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/01-filter/extrude-trim.py	/^mesh = pv.ParametricRandomHills(randomseed=2)$/;"	v
mesh	examples/01-filter/flying_edges.py	/^mesh = grid.contour([0], values, method='flying_edges')$/;"	v
mesh	examples/01-filter/flying_edges.py	/^mesh = grid.contour([1], values, method='marching_cubes')$/;"	v
mesh	examples/01-filter/glyphs.py	/^mesh = examples.download_carotid().threshold(145, scalars="scalars")$/;"	v
mesh	examples/01-filter/glyphs.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples/01-filter/glyphs_table.py	/^mesh = pv.StructuredGrid(x, y, z)$/;"	v
mesh	examples/01-filter/gradients.py	/^mesh = examples.download_carotid()$/;"	v
mesh	examples/01-filter/image-fft-perlin-noise.py	/^    mesh = warp_low_pass_noise(freq)$/;"	v
mesh	examples/01-filter/mesh-quality.py	/^mesh = examples.download_cow().triangulate().decimate(0.7)$/;"	v
mesh	examples/01-filter/resample.py	/^mesh = pv.Sphere(center=(4.5, 4.5, 4.5), radius=4.5)$/;"	v
mesh	examples/01-filter/resample.py	/^mesh = pv.create_grid(data_to_probe, dimensions=(75, 75, 75))$/;"	v
mesh	examples/01-filter/rotate.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/01-filter/sampling_functions_2d.py	/^mesh = mesh.extract_surface()$/;"	v
mesh	examples/01-filter/sampling_functions_2d.py	/^mesh = mesh.smooth(n_iter=100, inplace=False, relaxation_factor=1)$/;"	v
mesh	examples/01-filter/sampling_functions_2d.py	/^mesh = sampled.warp_by_scalar('scalars')$/;"	v
mesh	examples/01-filter/slicing.py	/^mesh = examples.download_brain()$/;"	v
mesh	examples/01-filter/slicing.py	/^mesh = examples.load_channels()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = examples.download_blood_vessels().cell_data_to_point_data()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = examples.download_carotid()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = examples.download_kitchen()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = pv.ImageData(dimensions=(nx, ny, nz), spacing=(0.1, 0.1, 0.1), origin=origin)$/;"	v
mesh	examples/01-filter/streamlines_2D.py	/^mesh = examples.download_cylinder_crossflow()$/;"	v
mesh	examples/01-filter/subdivide.py	/^mesh = examples.download_bunny_coarse().triangulate()$/;"	v
mesh	examples/02-plot/anti-aliasing.py	/^mesh = pv.Icosphere()$/;"	v
mesh	examples/02-plot/backface_props.py	/^mesh = pv.ParametricEllipsoid(min_v=np.pi \/ 2 - 0.2, max_v=np.pi \/ 2 + 0.2)$/;"	v
mesh	examples/02-plot/bounds.py	/^    mesh=central_gear,$/;"	v
mesh	examples/02-plot/cmap.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/depth-peeling.py	/^mesh = examples.download_brain().contour(5)$/;"	v
mesh	examples/02-plot/depth_of_field.py	/^mesh = examples.download_bunny()$/;"	v
mesh	examples/02-plot/depth_of_field.py	/^mesh = mesh.rotate_x(90, inplace=False).rotate_z(90, inplace=False).scale(4, 4, 4)$/;"	v
mesh	examples/02-plot/element-picking.py	/^mesh = pv.Wavelet()$/;"	v
mesh	examples/02-plot/floors.py	/^mesh = examples.download_dragon()$/;"	v
mesh	examples/02-plot/ghost-cells.py	/^mesh = vol.cast_to_unstructured_grid()$/;"	v
mesh	examples/02-plot/image_depth.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples/02-plot/labels.py	/^mesh = examples.load_uniform().slice()$/;"	v
mesh	examples/02-plot/lighting_mesh.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/linked.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/02-plot/movie.py	/^mesh = pv.Sphere()$/;"	v
mesh	examples/02-plot/moving_cmap.py	/^mesh = grid.extract_geometry().clean(tolerance=1e-6)$/;"	v
mesh	examples/02-plot/opacity.py	/^mesh = image.warp_by_scalar()$/;"	v
mesh	examples/02-plot/orbit.py	/^mesh = examples.download_dragon()$/;"	v
mesh	examples/02-plot/orbit.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/ortho-slices.py	/^mesh = examples.download_embryo()$/;"	v
mesh	examples/02-plot/pbr.py	/^mesh = examples.download_louis_louvre()$/;"	v
mesh	examples/02-plot/pbr.py	/^mesh = examples.download_nefertiti()$/;"	v
mesh	examples/02-plot/plot-over-circular-arc.py	/^mesh = examples.load_uniform()$/;"	v
mesh	examples/02-plot/plot-over-line.py	/^mesh = examples.download_kitchen()$/;"	v
mesh	examples/02-plot/plot-over-line.py	/^mesh = examples.download_st_helens()$/;"	v
mesh	examples/02-plot/scalar-bars.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/screenshot.py	/^mesh = pv.read(filename)$/;"	v
mesh	examples/02-plot/shading.py	/^mesh = examples.load_nut()$/;"	v
mesh	examples/02-plot/ssao.py	/^mesh = examples.download_cad_model_case()$/;"	v
mesh	examples/02-plot/texture.py	/^mesh = pv.Sphere()$/;"	v
mesh	examples/02-plot/themes.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/vector-component.py	/^mesh = examples.download_notch_displacement()$/;"	v
mesh	examples/02-plot/vertices.py	/^mesh = examples.download_bunny_coarse()$/;"	v
mesh	examples/03-widgets/box-widget.py	/^mesh = examples.download_nefertiti()$/;"	v
mesh	examples/03-widgets/checkbox-widget.py	/^mesh = pv.Sphere()$/;"	v
mesh	examples/03-widgets/line-widget.py	/^mesh = examples.download_kitchen()$/;"	v
mesh	examples/03-widgets/plane-widget.py	/^mesh = examples.download_carotid()$/;"	v
mesh	examples/03-widgets/slider-bar-widget.py	/^mesh = examples.download_knee_full()$/;"	v
mesh	examples/03-widgets/spline-widget.py	/^mesh = pv.Wavelet()$/;"	v
mesh	examples/04-lights/light_types.py	/^mesh = examples.download_bunny()$/;"	v
mesh	examples/04-lights/plotter_builtins.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/04-lights/shadows.py	/^mesh = examples.download_dragon()$/;"	v
mesh	examples/98-common/project-points-tessellate.py	/^mesh = polydata.delaunay_2d()$/;"	v
mesh	examples/99-advanced/antarctica-compare.py	/^mesh = examples.download_antarctica_velocity()$/;"	v
mesh	examples/99-advanced/fea-hertzian-contact-pressure.py	/^mesh = examples.download_fea_hertzian_contact_cylinder()$/;"	v
mesh	examples/99-advanced/openfoam-example.py	/^mesh = reader.read()$/;"	v
mesh	examples/99-advanced/plotting-algorithms.py	/^mesh = examples.download_bunny_coarse()$/;"	v
mesh	examples_trame/advanced/custom_ui.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/PyVistaLocalView.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/PyVistaRemoteLocalView.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/PyVistaRemoteView.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/actor_color.py	/^mesh = pv.Cone()$/;"	v
mesh	examples_trame/basic/mesh_scalars.py	/^mesh = examples.download_antarctica_velocity()$/;"	v
mesh	examples_trame/basic/multi_views.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/ui_template.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	pyvista/demos/logo.py	/^    mesh = mesh_letters['s']$/;"	v
mesh	pyvista/demos/logo.py	/^    mesh = mesh_letters['t'].clean().compute_normals()$/;"	v
mesh2d	tests/test_meshio.py	/^mesh2d = meshio.Mesh($/;"	v
mesh_0	examples/00-load/reader.py	/^mesh_0 = reader.read()$/;"	v
mesh_1	examples/00-load/reader.py	/^mesh_1 = reader.read()$/;"	v
mesh_2D_velocity	tests/core/test_dataset_filters.py	/^def mesh_2D_velocity():$/;"	f
mesh_actor	examples/99-advanced/customization-trame-toolbar.py	/^mesh_actor = pl.add_mesh(algo)$/;"	v
mesh_fix	doc/source/make_external_gallery.py	/^    mesh_fix=Example($/;"	v
mesh_g	examples/01-filter/gradients.py	/^mesh_g = mesh.compute_derivative(scalars="scalars")$/;"	v
mesh_g	examples/01-filter/gradients.py	/^mesh_g = mesh.compute_derivative(scalars="vectors")$/;"	v
mesh_inside_out	examples/02-plot/backface_props.py	/^mesh_inside_out = mesh.translate((0, 0, 1), inplace=False)$/;"	v
mesh_letters	pyvista/demos/logo.py	/^    mesh_letters = logo_letters()$/;"	v
meshes	examples/02-plot/backface_props.py	/^meshes = henneberg + klein$/;"	v
meshes	examples/02-plot/backface_props.py	/^meshes = mesh + mesh_inside_out$/;"	v
meshes	pyvista/plotting/plotter.py	/^    def meshes(self):  # numpydoc ignore=RT01$/;"	m	class:Plotter
meshgrid	pyvista/core/grid.py	/^    def meshgrid(self) -> list:  # numpydoc ignore=RT01$/;"	m	class:RectilinearGrid
message	doc/source/conf.py	/^    message="Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.",$/;"	v
metallic	examples/02-plot/backface_props.py	/^    metallic=1.0,$/;"	v
metallic	pyvista/plotting/_property.py	/^    def metallic(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
metallic	pyvista/plotting/_property.py	/^    def metallic(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
metallic	pyvista/plotting/actor_properties.py	/^    def metallic(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
metallic	pyvista/plotting/actor_properties.py	/^    def metallic(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
metallic	pyvista/plotting/themes.py	/^    def metallic(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
metallic	pyvista/plotting/themes.py	/^    def metallic(self, metallic: float):  # numpydoc ignore=GL08$/;"	m	class:_LightingConfig
method	examples/99-advanced/atomic-orbitals.py	/^    method='marching_cubes',$/;"	v
method_from_obj	pyvista/ext/coverage.py	/^def method_from_obj(obj_name):$/;"	f
mipmap	pyvista/plotting/texture.py	/^    def mipmap(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
mipmap	pyvista/plotting/texture.py	/^    def mipmap(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Texture
mobius	examples/00-load/create-parametric-geometric-objects.py	/^mobius = pv.ParametricMobius()$/;"	v
mobius	examples/02-plot/backface_props.py	/^mobius = pv.ParametricMobius().rotate_z(-90, inplace=False)$/;"	v
mode	pyvista/trame/jupyter.py	/^        mode=mode,$/;"	v
mode	tests/plotting/test_picking.py	/^        mode=mode,$/;"	v	class:test_element_picking.Tracker
mode_shape	examples/99-advanced/pump-bracket.py	/^mode_shape = 'disp_6'$/;"	v
model	examples/01-filter/clipping-with-surface.py	/^model = grid.clip_surface(surface)$/;"	v
model	examples/01-filter/slicing.py	/^model = examples.load_channels()$/;"	v
model	examples/02-plot/opacity.py	/^model = examples.download_model_with_variance()$/;"	v
model_transform_matrix	pyvista/plotting/camera.py	/^    def model_transform_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
model_transform_matrix	pyvista/plotting/camera.py	/^    def model_transform_matrix(self, matrix):  # numpydoc ignore=GL08$/;"	m	class:Camera
modern	pyvista/plotting/themes.py	/^    def modern(self) -> _SliderStyleConfig:  # numpydoc ignore=RT01$/;"	m	class:_SliderConfig
modern	pyvista/plotting/themes.py	/^    def modern(self, config: _SliderStyleConfig):  # numpydoc ignore=GL08$/;"	m	class:_SliderConfig
mouse_position	pyvista/plotting/plotter.py	/^    mouse_position = None$/;"	v	class:BasePlotter
multi_from_datasets	tests/core/test_composite.py	/^def multi_from_datasets(*datasets):$/;"	f
multi_ray_trace	pyvista/core/filters/poly_data.py	/^    def multi_ray_trace($/;"	m	class:PolyDataFilters
multi_rendering_splitting_position	pyvista/plotting/themes.py	/^    def multi_rendering_splitting_position($/;"	m	class:Theme
multi_rendering_splitting_position	pyvista/plotting/themes.py	/^    def multi_rendering_splitting_position(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
multi_samples	pyvista/plotting/themes.py	/^    def multi_samples(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Theme
multi_samples	pyvista/plotting/themes.py	/^    def multi_samples(self, multi_samples: int):  # numpydoc ignore=GL08$/;"	m	class:Theme
multiblock_all	tests/conftest.py	/^def multiblock_all(datasets):$/;"	f
multiblock_poly	tests/conftest.py	/^def multiblock_poly():$/;"	f
multicomp_poly	tests/plotting/test_plotting.py	/^def multicomp_poly():$/;"	f
my_colormap	examples/02-plot/cmap.py	/^my_colormap = ListedColormap(newcolors)$/;"	v
my_plane_func	examples/03-widgets/plane-widget.py	/^def my_plane_func(normal, origin):$/;"	f
my_theme	examples/02-plot/themes.py	/^my_theme = themes.DarkTheme()$/;"	v
my_theme	examples/02-plot/themes.py	/^my_theme = themes.DocumentTheme()$/;"	v
n	examples/00-load/create-tri-surface.py	/^n = 20$/;"	v
n	examples/01-filter/clipping-with-surface.py	/^n = 51$/;"	v
n	examples/01-filter/flying_edges.py	/^n = 100$/;"	v
n	examples/01-filter/gaussian-smoothing.py	/^n = [100, 150, 200, 245, 255]$/;"	v
n	examples/99-advanced/plotting-algorithms.py	/^n = 200$/;"	v
n	examples/99-advanced/sphere_eversion.py	/^n = 2  # arbitrary integer > 1, the number of "lobes"$/;"	v
n_arrays	pyvista/core/dataset.py	/^    def n_arrays(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:DataSet
n_arrays	pyvista/core/objects.py	/^    def n_arrays(self):  # numpydoc ignore=RT01$/;"	m	class:Table
n_blocks	pyvista/core/composite.py	/^    def n_blocks(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
n_blocks	pyvista/core/composite.py	/^    def n_blocks(self, n):  # numpydoc ignore=GL08$/;"	m	class:MultiBlock
n_cells	pyvista/core/cell.py	/^    def n_cells(self):  # numpydoc ignore=RT01$/;"	m	class:CellArray
n_cells	pyvista/core/dataset.py	/^    def n_cells(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:DataSet
n_colors	examples/01-filter/sampling_functions_2d.py	/^    n_colors=10,$/;"	v
n_columns	pyvista/core/objects.py	/^    def n_columns(self):  # numpydoc ignore=RT01$/;"	m	class:Table
n_components	pyvista/plotting/texture.py	/^    def n_components(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Texture
n_contours	examples/01-filter/contouring.py	/^n_contours = 8$/;"	v
n_edges	pyvista/core/cell.py	/^    def n_edges(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Cell
n_faces	pyvista/core/cell.py	/^    def n_faces(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Cell
n_faces	pyvista/core/pointset.py	/^    def n_faces(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_frames	examples/99-advanced/add-example.py	/^n_frames = 20$/;"	v
n_frames	examples/99-advanced/pump-bracket.py	/^n_frames = 16$/;"	v
n_labels	examples/02-plot/scalar-bars.py	/^    n_labels=3,$/;"	v
n_lines	pyvista/core/pointset.py	/^    def n_lines(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_numbers	tests/core/test_dataset.py	/^def n_numbers(draw, n):$/;"	f
n_open_edges	pyvista/core/pointset.py	/^    def n_open_edges(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_points	examples/01-filter/streamlines.py	/^    n_points=25,$/;"	v
n_points	examples/01-filter/streamlines_2D.py	/^    n_points=25,$/;"	v
n_points	pyvista/core/cell.py	/^    def n_points(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Cell
n_points	pyvista/core/dataset.py	/^    def n_points(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:DataSet
n_points	pyvista/core/utilities/cell_type_helper.py	/^            n_points = getattr(vtkCommonDataModel, cell_str)().GetNumberOfPoints()$/;"	v
n_points	tests/core/test_dataset.py	/^def n_points(dataset):$/;"	f
n_rows	pyvista/core/objects.py	/^    def n_rows(self):  # numpydoc ignore=RT01$/;"	m	class:Table
n_rows	pyvista/core/objects.py	/^    def n_rows(self, n):  # numpydoc ignore=GL08$/;"	m	class:Table
n_slices	examples/01-filter/slicing.py	/^n_slices = 5$/;"	v
n_steps	examples/99-advanced/sphere_eversion.py	/^n_steps = 30  # number of steps for a given stage of the animation$/;"	v
n_strips	pyvista/core/pointset.py	/^    def n_strips(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_values	pyvista/plotting/lookup_table.py	/^    def n_values(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
n_values	pyvista/plotting/lookup_table.py	/^    def n_values(self, value: int):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
n_verts	pyvista/core/pointset.py	/^    def n_verts(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_xlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_xlabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_xlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_xlabels(self, value: int):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
n_ylabels	pyvista/plotting/cube_axes_actor.py	/^    def n_ylabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_ylabels	pyvista/plotting/cube_axes_actor.py	/^    def n_ylabels(self, value: int):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
n_zlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_zlabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_zlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_zlabels(self, value: int):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
name	examples/01-filter/gradients.py	/^        name = keys[i, j]$/;"	v
name	examples/01-filter/resample.py	/^name = "Spatial Point Data"$/;"	v
name	examples/01-filter/slicing.py	/^    name = f'Bearing: {np.rad2deg(theta):.2f}'$/;"	v
name	pyvista/core/utilities/fileio.py	/^            name = reader.GetSideSetArrayName(sideset)$/;"	v
name	pyvista/core/utilities/fileio.py	/^            name = sideset$/;"	v
name	pyvista/ext/coverage.py	/^    name = 'coverage'$/;"	v	class:CoverageBuilder
name	pyvista/plotting/actor.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Actor
name	pyvista/plotting/actor.py	/^    def name(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:Actor
name	pyvista/plotting/colors.py	/^    def name(self) -> Optional[str]:  # numpydoc ignore=RT01$/;"	m	class:Color
name	pyvista/plotting/themes.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
name	pyvista/plotting/themes.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
name	pyvista/plotting/themes.py	/^    def name(self, name: str):  # numpydoc ignore=GL08$/;"	m	class:Theme
name	pyvista/plotting/themes.py	/^    def name(self, name: str):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
namespace	tests/namespace/test_plotting_namespace.py	/^    namespace = [n.split(', ')[0] for n in namespace if not n.startswith('#')]$/;"	v
namespace	tests/namespace/test_plotting_namespace.py	/^    namespace = f.read().splitlines()$/;"	v
namespace	tests/namespace/test_public_namespace.py	/^    namespace = [n.split(', ')[0] for n in namespace if not n.startswith('#')]$/;"	v
namespace	tests/namespace/test_public_namespace.py	/^    namespace = f.read().splitlines()$/;"	v
namespace	tests/namespace/test_utilities_namespace.py	/^    namespace = [n.split(', ')[0] for n in namespace if not n.startswith('#')]$/;"	v
namespace	tests/namespace/test_utilities_namespace.py	/^    namespace = f.read().splitlines()$/;"	v
namespace_data	tests/namespace/test_plotting_namespace.py	/^namespace_data = pathlib.Path(__file__).parent \/ 'namespace-plotting.txt'$/;"	v
namespace_data	tests/namespace/test_public_namespace.py	/^namespace_data = pathlib.Path(__file__).parent \/ 'namespace-top.txt'$/;"	v
namespace_data	tests/namespace/test_utilities_namespace.py	/^namespace_data = pathlib.Path(__file__).parent \/ 'namespace-utilities.txt'$/;"	v
nan_color	pyvista/plotting/lookup_table.py	/^    def nan_color(self) -> Optional[Color]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
nan_color	pyvista/plotting/lookup_table.py	/^    def nan_color(self, value):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
nan_color	pyvista/plotting/themes.py	/^    def nan_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
nan_color	pyvista/plotting/themes.py	/^    def nan_color(self, nan_color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
nan_opacity	pyvista/plotting/lookup_table.py	/^    def nan_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
nan_opacity	pyvista/plotting/lookup_table.py	/^    def nan_opacity(self, value):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
ncells_from_cells	pyvista/core/utilities/cells.py	/^def ncells_from_cells(cells):$/;"	f
nedges	tests/core/test_cells.py	/^nedges = [12, 3, 12, 4, 6, 12, 6]$/;"	v
nefertiti	examples/02-plot/edges.py	/^nefertiti = examples.download_nefertiti()$/;"	v
nefertiti	examples/02-plot/edl.py	/^nefertiti = examples.download_nefertiti()$/;"	v
neighbors	pyvista/core/pointset.py	/^    def neighbors(self, ind, rel='connectivity') -> list:$/;"	m	class:ExplicitStructuredGrid
neptune	examples/99-advanced/planets.py	/^neptune = examples.planets.load_neptune(radius=24764.0)$/;"	v
neptune_texture	examples/99-advanced/planets.py	/^neptune_texture = examples.planets.download_neptune_surface(texture=True)$/;"	v
new_arrays	examples/01-filter/integrate-data.py	/^new_arrays = [name for name in integrated_data.array_names if name not in inlet_surface.array_names]$/;"	v
new_mesh	examples/00-load/reader.py	/^new_mesh = pyvista.read(temp_file.name)$/;"	v
new_spheres	examples/02-plot/movie_glyphs.py	/^    new_spheres = grid.glyph(scale='size', geom=sphere, orient=False)$/;"	v
new_text	doc/source/make_external_gallery.py	/^        new_text = new_fid.read()$/;"	v
newcolors	examples/02-plot/cmap.py	/^newcolors = np.empty((256, 4))$/;"	v
next_color	pyvista/plotting/renderer.py	/^    def next_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
nfaces	tests/core/test_cells.py	/^nfaces = [6, 0, 6, 0, 4, 6, 4]$/;"	v
nframe	examples/02-plot/gif.py	/^nframe = 15$/;"	v
nframe	examples/02-plot/linked.py	/^nframe = 15$/;"	v
nframe	examples/02-plot/movie_glyphs.py	/^nframe = 30$/;"	v
nframe	examples/02-plot/texture.py	/^nframe = 15$/;"	v
nikolov1	doc/source/make_external_gallery.py	/^    nikolov1=Example($/;"	v
nikolov2	doc/source/make_external_gallery.py	/^    nikolov2=Example($/;"	v
nikolov3	doc/source/make_external_gallery.py	/^    nikolov3=Example($/;"	v
nitpick_ignore_regex	doc/source/conf.py	/^nitpick_ignore_regex = [$/;"	v
nlev	examples/02-plot/spherical.py	/^nlev = 10$/;"	v
no_new_attr	pyvista/core/utilities/misc.py	/^def no_new_attr(cls):  # numpydoc ignore=RT01$/;"	f
nodes	examples/00-load/create-truss.py	/^nodes = [$/;"	v
noise	examples/01-filter/connectivity.py	/^noise = pine_roots.connectivity('specified', noise_region_ids)$/;"	v
noise	examples/01-filter/image-fft-perlin-noise.py	/^noise = pv.perlin_noise(1, freq, (0, 0, 0))$/;"	v
noise	examples/01-filter/sampling_functions_2d.py	/^noise = pv.perlin_noise(1, freq, (0, 0, 0))$/;"	v
noise	examples/01-filter/sampling_functions_3d.py	/^noise = pv.perlin_noise(1, freq, (0, 0, 0))$/;"	v
noise_2d	tests/conftest.py	/^def noise_2d():$/;"	f
noise_region_ids	examples/01-filter/connectivity.py	/^noise_region_ids = region_ids[1::]  # All region ids except '0'$/;"	v
norm	examples/02-plot/texture.py	/^norm = lambda x: (x - np.nanmin(x)) \/ (np.nanmax(x) - np.nanmin(x))$/;"	v
normal	examples/01-filter/clipping.py	/^normal = (1, 1, 1)$/;"	v
normal	examples/01-filter/slicing.py	/^    normal = np.array([np.cos(theta), np.sin(theta), 0.0]).dot(np.pi \/ 2.0)$/;"	v
normal	examples/01-filter/slicing.py	/^normal = vec \/ np.linalg.norm(vec)$/;"	v
normal	examples/02-plot/plot-over-circular-arc.py	/^normal = [0, 1, 0]$/;"	v
normal	examples/03-widgets/clip-volume.py	/^    normal='-x',$/;"	v
normal	examples/03-widgets/clip-volume.py	/^    normal='-y',$/;"	v
normal	examples/98-common/project-points-tessellate.py	/^normal = [0, 0, 1]$/;"	v
normal_rotation	examples/03-widgets/clip-volume.py	/^    normal_rotation=False,$/;"	v
normalize	pyvista/plotting/tools.py	/^def normalize(x, minimum=None, maximum=None):$/;"	f
normalize	pyvista/plotting/widgets.py	/^        def normalize(point, viewport):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_slider_widget
normals	tests/core/test_dataset_filters.py	/^normals = ['x', 'y', '-z', (1, 1, 1), (3.3, 5.4, 0.8)]$/;"	v
not_called	tests/tinypages/plot_polygon.py	/^def not_called():$/;"	f
notebook	pyvista/_plot.py	/^        notebook=notebook,$/;"	v
notebook	pyvista/plotting/themes.py	/^    def notebook(self) -> Union[bool, None]:  # numpydoc ignore=RT01$/;"	m	class:Theme
notebook	pyvista/plotting/themes.py	/^    def notebook(self, value: Union[bool, None]):  # numpydoc ignore=GL08$/;"	m	class:Theme
notfound_context	doc/source/conf.py	/^notfound_context = {$/;"	v
notfound_no_urls_prefix	doc/source/conf.py	/^notfound_no_urls_prefix = True$/;"	v
npoints	tests/core/test_cells.py	/^npoints = [8, 3, 8, 4, 4, 8, 4]$/;"	v
nr	pyvista/core/utilities/geometric_objects.py	/^    nr = len(r)$/;"	v
num_points	examples/98-common/project-points-tessellate.py	/^num_points = 100$/;"	v
number_base_arrays	pyvista/core/utilities/reader.py	/^    def number_base_arrays(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
number_cell_arrays	pyvista/core/utilities/reader.py	/^    def number_cell_arrays(self):$/;"	m	class:PointCellDataSelection
number_family_arrays	pyvista/core/utilities/reader.py	/^    def number_family_arrays(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
number_grids	pyvista/core/utilities/reader.py	/^    def number_grids(self):  # numpydoc ignore=RT01$/;"	m	class:XdmfReader
number_of_cells	pyvista/core/dataset.py	/^    def number_of_cells(self) -> int:  # pragma: no cover  # numpydoc ignore=RT01$/;"	m	class:DataSet
number_of_peels	pyvista/plotting/themes.py	/^    def number_of_peels(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
number_of_peels	pyvista/plotting/themes.py	/^    def number_of_peels(self, number_of_peels: int):  # numpydoc ignore=GL08$/;"	m	class:_DepthPeelingConfig
number_of_points	pyvista/core/dataset.py	/^    def number_of_points(self) -> int:  # pragma: no cover  # numpydoc ignore=RT01$/;"	m	class:DataSet
number_patch_arrays	pyvista/core/utilities/reader.py	/^    def number_patch_arrays(self):  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
number_point_arrays	pyvista/core/utilities/reader.py	/^    def number_point_arrays(self):$/;"	m	class:PointCellDataSelection
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102  # numpydoc ignore=RT01$/;"	m	class:EnSightReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102  # numpydoc ignore=RT01$/;"	m	class:PVDReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # numpydoc ignore=RT01$/;"	m	class:TimeReader
numfig	doc/source/conf.py	/^numfig = False$/;"	v
numpy_to_idarr	pyvista/core/utilities/cells.py	/^def numpy_to_idarr(ind, deep=False, return_ind=False):$/;"	f
numpy_to_texture	pyvista/plotting/texture.py	/^def numpy_to_texture(image):$/;"	f
numpydoc_show_class_members	doc/source/conf.py	/^numpydoc_show_class_members = False$/;"	v
numpydoc_use_plots	doc/source/conf.py	/^numpydoc_use_plots = True$/;"	v
numpydoc_xref_param_type	doc/source/conf.py	/^numpydoc_xref_param_type = True$/;"	v
nx	examples/01-filter/streamlines.py	/^nx = 20$/;"	v
ny	examples/01-filter/streamlines.py	/^ny = 15$/;"	v
nz	examples/01-filter/streamlines.py	/^nz = 5$/;"	v
obbTree	pyvista/core/pointset.py	/^    def obbTree(self):  # numpydoc ignore=RT01$/;"	m	class:PolyData
observe	pyvista/core/utilities/observers.py	/^    def observe(self, algorithm):$/;"	m	class:Observer
occlusion_ratio	pyvista/plotting/themes.py	/^    def occlusion_ratio(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
occlusion_ratio	pyvista/plotting/themes.py	/^    def occlusion_ratio(self, occlusion_ratio: float):  # numpydoc ignore=GL08$/;"	m	class:_DepthPeelingConfig
off_screen	pyvista/_plot.py	/^        off_screen=off_screen,$/;"	v
offset	examples/04-lights/beam_shape.py	/^offset = 1.5$/;"	v
offset	pyvista/core/pointset.py	/^    def offset(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
offset_array	pyvista/core/cell.py	/^    def offset_array(self):  # numpydoc ignore=RT01$/;"	m	class:CellArray
offsets	examples/04-lights/attenuation.py	/^offsets = [-2, 0, 2]$/;"	v
omegas	examples/99-advanced/warp-by-vector-eigenmodes.py	/^omegas = np.sqrt(np.abs(w) \/ rho) * 1e5  # convert back to Hz$/;"	v
omf	doc/source/make_external_gallery.py	/^    omf=Example($/;"	v
on	pyvista/plotting/lights.py	/^    def on(self):  # numpydoc ignore=RT01$/;"	m	class:Light
on	pyvista/plotting/lights.py	/^    def on(self, state):  # numpydoc ignore=GL08$/;"	m	class:Light
on_axis_visiblity_change	pyvista/trame/ui/base_viewer.py	/^    def on_axis_visiblity_change(self, **kwargs):$/;"	m	class:BaseViewer
on_edge_visiblity_change	pyvista/trame/ui/base_viewer.py	/^    def on_edge_visiblity_change(self, **kwargs):$/;"	m	class:BaseViewer
on_grid_visiblity_change	pyvista/trame/ui/base_viewer.py	/^    def on_grid_visiblity_change(self, **kwargs):$/;"	m	class:BaseViewer
on_outline_visiblity_change	pyvista/trame/ui/base_viewer.py	/^    def on_outline_visiblity_change(self, **kwargs):$/;"	m	class:BaseViewer
on_plotter_render	pyvista/plotting/renderer.py	/^    def on_plotter_render(self):$/;"	m	class:Renderer
on_plotter_render	pyvista/plotting/renderers.py	/^    def on_plotter_render(self):$/;"	m	class:Renderers
on_ready	pyvista/trame/jupyter.py	/^    def on_ready(**_):  # numpydoc ignore=GL08$/;"	f	function:launch_server
on_rendering_mode_change	pyvista/trame/ui/base_viewer.py	/^    def on_rendering_mode_change(self, **kwargs):$/;"	m	class:BaseViewer
on_timer	tests/plotting/test_render_window_interactor.py	/^    def on_timer(obj, event):$/;"	f	function:test_timer
one_streamline	examples/01-filter/streamlines_2D.py	/^one_streamline = fluid_mesh.streamlines($/;"	v
opac	examples/99-advanced/openfoam-cooling.py	/^opac = np.zeros(20)$/;"	v
opacity	examples/00-load/wrap-trimesh.py	/^    opacity=points[:, 0],$/;"	v
opacity	examples/01-filter/clipping-with-surface.py	/^    opacity=0.75,$/;"	v
opacity	examples/02-plot/isovalue.py	/^    opacity=0.5,$/;"	v
opacity	examples/02-plot/opacity.py	/^    opacity='Temperature_var',$/;"	v
opacity	examples/02-plot/opacity.py	/^opacity = [0, 0.2, 0.9, 0.6, 0.3]$/;"	v
opacity	examples/02-plot/point-clouds.py	/^    opacity=0.25,$/;"	v
opacity	examples/02-plot/point-clouds.py	/^    opacity=0.99,$/;"	v
opacity	examples/02-plot/volume.py	/^    opacity=opacity,$/;"	v
opacity	examples/02-plot/volume.py	/^opacity = [0, 0, 0, 0.1, 0.3, 0.6, 1]$/;"	v
opacity	examples/02-plot/volume.py	/^opacity = [0, 0.75, 0, 0.75, 1.0]$/;"	v
opacity	examples/03-widgets/clip-volume.py	/^opacity = np.zeros(100)$/;"	v
opacity	examples/99-advanced/magnetic-fields.py	/^    opacity=opacity,$/;"	v
opacity	examples/99-advanced/magnetic-fields.py	/^opacity = 1 - np.geomspace(1.0, 0.05, 10)$/;"	v
opacity	examples/99-advanced/openfoam-cooling.py	/^    opacity=opac,$/;"	v
opacity	examples/99-advanced/openfoam-tubes.py	/^    opacity='linear',$/;"	v
opacity	pyvista/plotting/_property.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
opacity	pyvista/plotting/_property.py	/^    def opacity(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
opacity	pyvista/plotting/actor_properties.py	/^    def opacity(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
opacity	pyvista/plotting/actor_properties.py	/^    def opacity(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
opacity	pyvista/plotting/colors.py	/^    def opacity(self):  # numpydoc ignore=RT01$/;"	m	class:Color
opacity	pyvista/plotting/composite_mapper.py	/^    def opacity(self) -> Optional[float]:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
opacity	pyvista/plotting/composite_mapper.py	/^    def opacity(self, new_opacity: float):  # numpydoc ignore=GL08$/;"	m	class:BlockAttributes
opacity	pyvista/plotting/text.py	/^    def opacity(self) -> float:$/;"	m	class:TextProperty
opacity	pyvista/plotting/text.py	/^    def opacity(self, opacity: float):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
opacity	pyvista/plotting/themes.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
opacity	pyvista/plotting/themes.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
opacity	pyvista/plotting/themes.py	/^    def opacity(self, opacity: float):  # numpydoc ignore=GL08$/;"	m	class:Theme
opacity	pyvista/plotting/themes.py	/^    def opacity(self, opacity: float):  # numpydoc ignore=GL08$/;"	m	class:_SilhouetteConfig
opacity_transfer_function	pyvista/plotting/tools.py	/^def opacity_transfer_function(mapping, n_colors, interpolate=True, kind='quadratic'):$/;"	f
opacity_unit_distance	examples/02-plot/volume.py	/^    opacity_unit_distance=6000,$/;"	v
opacity_unit_distance	pyvista/plotting/volume_property.py	/^    def opacity_unit_distance(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
opacity_unit_distance	pyvista/plotting/volume_property.py	/^    def opacity_unit_distance(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
open_foam	doc/source/make_external_gallery.py	/^    open_foam=Example($/;"	v
open_gif	pyvista/plotting/plotter.py	/^    def open_gif($/;"	m	class:BasePlotter
open_movie	pyvista/plotting/plotter.py	/^    def open_movie(self, filename, framerate=24, quality=5, **kwargs):$/;"	m	class:BasePlotter
optimization	doc/source/make_external_gallery.py	/^    optimization=Example($/;"	v
option_spec	pyvista/ext/plot_directive.py	/^    option_spec = {$/;"	v	class:PlotDirective
optional_arguments	pyvista/ext/plot_directive.py	/^    optional_arguments = 2$/;"	v	class:PlotDirective
optional_arguments	pyvista/ext/viewer_directive.py	/^    optional_arguments = 0$/;"	v	class:OfflineViewerDirective
opts	examples/99-advanced/sphere_eversion.py	/^opts = dict($/;"	v
orbit	examples/02-plot/backface_props.py	/^orbit = plotter.generate_orbital_path(n_points=24, shift=0.0, viewup=viewup)$/;"	v
orbit	pyvista/plotting/plotter.py	/^        def orbit():$/;"	f	function:BasePlotter.orbit_on_path
orbit_on_path	pyvista/plotting/plotter.py	/^    def orbit_on_path($/;"	m	class:BasePlotter
orient	examples/00-load/create-point-cloud.py	/^    orient='vectors',$/;"	v
orientation	pyvista/plotting/charts.py	/^    def orientation(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
orientation	pyvista/plotting/charts.py	/^    def orientation(self, val):  # numpydoc ignore=GL08$/;"	m	class:BarPlot
orientation	pyvista/plotting/prop3d.py	/^    def orientation(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
orientation	pyvista/plotting/prop3d.py	/^    def orientation(self, value: tuple):  # numpydoc ignore=GL08$/;"	m	class:Prop3D
orientation	pyvista/plotting/text.py	/^    def orientation(self) -> float:$/;"	m	class:TextProperty
orientation	pyvista/plotting/text.py	/^    def orientation(self, orientation: float):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
orientation_cube	pyvista/demos/demos.py	/^def orientation_cube():$/;"	f
orientation_plotter	pyvista/demos/demos.py	/^def orientation_plotter():$/;"	f
orig_edges	examples/01-filter/surface-smoothing.py	/^orig_edges = surf.extract_feature_edges()$/;"	v
origin	examples/01-filter/flying_edges.py	/^    origin=(x_min, y_min, z_min),$/;"	v
origin	examples/01-filter/project-plane.py	/^origin = poly.center$/;"	v
origin	examples/01-filter/streamlines.py	/^origin = (-(nx - 1) * 0.1 \/ 2, -(ny - 1) * 0.1 \/ 2, -(nz - 1) * 0.1 \/ 2)$/;"	v
origin	examples/98-common/project-points-tessellate.py	/^origin = [0, 0, 0]$/;"	v
origin	examples/99-advanced/openfoam-cooling.py	/^origin = (bounds[0], bounds[2], bounds[4])$/;"	v
origin	examples/99-advanced/openfoam-tubes.py	/^origin = (bounds[0], bounds[2], bounds[4])$/;"	v
origin	pyvista/core/grid.py	/^    def origin(self) -> Tuple[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
origin	pyvista/core/grid.py	/^    def origin(self, origin: Sequence[Union[float, int]]):  # numpydoc ignore=GL08$/;"	m	class:ImageData
origin	pyvista/plotting/affine_widget.py	/^    def origin(self) -> tuple:$/;"	m	class:AffineWidget3D
origin	pyvista/plotting/affine_widget.py	/^    def origin(self, value):  # numpydoc ignore=GL08$/;"	m	class:AffineWidget3D
origin	pyvista/plotting/axes.py	/^    def origin(self):  # numpydoc ignore=RT01$/;"	m	class:Axes
origin	pyvista/plotting/axes.py	/^    def origin(self, value):  # numpydoc ignore=GL08$/;"	m	class:Axes
orvisu	doc/source/make_external_gallery.py	/^    orvisu=Example($/;"	v
out	examples/01-filter/sampling_functions_3d.py	/^out = grid.threshold(0.02)$/;"	v
outer	examples/01-filter/clipping-with-surface.py	/^outer = dataset.threshold(0.0, scalars="implicit_distance", invert=False)$/;"	v
outer	examples/99-advanced/planets.py	/^outer = 60268.0 + 80000.0$/;"	v
outline	examples/01-filter/using-filters.py	/^outline = dataset.outline()$/;"	v
outline	pyvista/core/filters/composite.py	/^    def outline(self, generate_faces=False, nested=False, progress_bar=False):$/;"	m	class:CompositeFilters
outline	pyvista/core/filters/data_set.py	/^    def outline(self, generate_faces=False, progress_bar=False):$/;"	m	class:DataSetFilters
outline_algorithm	pyvista/plotting/utilities/algorithms.py	/^def outline_algorithm(inp, generate_faces=False):$/;"	f
outline_color	pyvista/plotting/themes.py	/^    def outline_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
outline_color	pyvista/plotting/themes.py	/^    def outline_color(self, outline_color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Theme
outline_corners	pyvista/core/filters/composite.py	/^    def outline_corners(self, factor=0.2, nested=False, progress_bar=False):$/;"	m	class:CompositeFilters
outline_corners	pyvista/core/filters/data_set.py	/^    def outline_corners(self, factor=0.2, progress_bar=False):$/;"	m	class:DataSetFilters
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self):$/;"	m	class:ConeSource
outside	examples/01-filter/extract-cells-inside-surface.py	/^outside = select.threshold(0.5, invert=True)$/;"	v
overwrite	pyvista/core/dataset.py	/^    def overwrite(self, mesh: _vtk.vtkDataSet):  # numpydoc ignore=GL09$/;"	m	class:DataSet
p	examples/00-load/create-geometric-objects.py	/^p = pv.Plotter(shape=(3, 3))$/;"	v
p	examples/00-load/create-kochanek-spline.py	/^p = pv.Plotter(shape=(3, 5))$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [-22.0, -22.0], "red")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [-22.0, 0.0], "blue")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [-22.0, 22.0], "green")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [0.0, -22.0], "red")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [0.0, 0.0], "blue")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [0.0, 22.0], "green")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [22.0, -22.0], "red")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [22.0, 0.0], "blue")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = draw_pixels(p, alien, [22.0, 22.0], "green")$/;"	v
p	examples/00-load/create-pixel-art.py	/^p = pv.Plotter()$/;"	v
p	examples/00-load/create-platonic-solids.py	/^p = pv.Plotter(window_size=[1000, 1000])$/;"	v
p	examples/00-load/create-surface-draped.py	/^p = pv.Plotter()$/;"	v
p	examples/00-load/create-tri-surface.py	/^p = pv.Plotter()$/;"	v
p	examples/00-load/wrap-trimesh.py	/^p = [1.0, 2.0, 3.0]$/;"	v
p	examples/01-filter/clipping-with-surface.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/clipping.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/clipping.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/connectivity.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/distance-between-surfaces.py	/^    p = h0n.points[i]$/;"	v
p	examples/01-filter/distance-between-surfaces.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/extract-cells-inside-surface.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/extract-edges.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/gaussian-smoothing.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/gaussian-smoothing.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/01-filter/geodesic.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/glyphs.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/gradients.py	/^p = pv.Plotter(shape=keys.shape)$/;"	v
p	examples/01-filter/interpolate.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/interpolate.py	/^p = pv.Plotter(shape=(1, 2), window_size=[1024 * 3, 768 * 2])$/;"	v
p	examples/01-filter/poly-ray-trace.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/project-plane.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/reflect.py	/^p = pyvista.Plotter()$/;"	v
p	examples/01-filter/resample.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/resample.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/rotate.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/slicing.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/streamlines.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/streamlines_2D.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/using-filters.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/using-filters.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/01-filter/voxelize.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/warp-by-vector.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/warp-by-vector.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/02-plot/chart_basics.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/chart_overlays.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/cmap.py	/^p = pv.Plotter(shape=(2, 2), border=False)$/;"	v
p	examples/02-plot/depth-peeling.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/02-plot/depth-peeling.py	/^p = pv.Plotter(shape=(1, 2), multi_samples=4)$/;"	v
p	examples/02-plot/depth-peeling.py	/^p = pv.Plotter(shape=(1, 2), multi_samples=8)$/;"	v
p	examples/02-plot/edl.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/edl.py	/^p = pv.Plotter(shape=(1, 2), border=False)$/;"	v
p	examples/02-plot/image_depth.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/interpolate-before-map.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/02-plot/labels.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/lighting_mesh.py	/^p = pv.Plotter(shape=(1, 2), window_size=[1500, 500])$/;"	v
p	examples/02-plot/linked.py	/^p = pv.Plotter(shape=(1, 2), border=False)$/;"	v
p	examples/02-plot/opacity.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/opacity.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/02-plot/opacity.py	/^p = pv.Plotter(shape=(2, 2), border=False)$/;"	v
p	examples/02-plot/orbit.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/ortho-slices.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/ortho-slices.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/02-plot/pbr.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/plot-over-circular-arc.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/plot-over-line.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/point-picking.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/scalar-bars.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/scalar-bars.py	/^p = pv.Plotter(notebook=False)  # If in IPython, be sure to show the scene$/;"	v
p	examples/02-plot/spherical.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/topo-map.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/box-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/checkbox-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/line-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/multi-slider-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/plane-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/slider-bar-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/sphere-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/spline-widget.py	/^p = pv.Plotter()$/;"	v
p	examples/99-advanced/antarctica-compare.py	/^p = pv.Plotter()$/;"	v
p	examples/99-advanced/plotting-algorithms.py	/^p = pv.Plotter()$/;"	v
p	examples/99-advanced/plotting-algorithms.py	/^p = pv.Plotter(notebook=0)$/;"	v
p	examples/99-advanced/ray-trace.py	/^p = pv.Plotter(off_screen=True)$/;"	v
p	examples/99-advanced/sphere_eversion.py	/^    p = 1 - abs(q * t)$/;"	v
p0	examples/01-filter/distance-between-surfaces.py	/^    p0 = p - vec$/;"	v
p1	examples/01-filter/distance-between-surfaces.py	/^    p1 = p + vec$/;"	v
p_mesh	pyvista/demos/logo.py	/^    p_mesh = mesh_letters['P'].compute_normals(split_vertices=True)$/;"	v
pactor	tests/plotting/test_theme.py	/^        pactor = pl.add_mesh(points)$/;"	v	class:test_user_theme.MyTheme
padding	examples/00-load/create-truss.py	/^padding = np.empty(edges.shape[0], int) * 2$/;"	v
paint	pyvista/plotting/charts.py	/^    def paint(self, painter):$/;"	m	class:_ChartBackground
paint	pyvista/plotting/charts.py	/^    def paint(self, painter):$/;"	m	class:_CustomContextItem
pan_on_shift_callback	pyvista/plotting/render_window_interactor.py	/^            def pan_on_shift_callback(obj, event):  # pragma: no cover$/;"	f	function:RenderWindowInteractor.enable_terrain_style
panels_add_bootstrap_css	doc/source/conf.py	/^panels_add_bootstrap_css = False$/;"	v
para_source	pyvista/core/utilities/parametric_objects.py	/^    para_source = _vtk.vtkParametricFunctionSource()$/;"	v
parallel_projection	pyvista/plotting/camera.py	/^    def parallel_projection(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
parallel_projection	pyvista/plotting/camera.py	/^    def parallel_projection(self, state):  # numpydoc ignore=GL08$/;"	m	class:Camera
parallel_projection	pyvista/plotting/plotter.py	/^    def parallel_projection(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
parallel_projection	pyvista/plotting/plotter.py	/^    def parallel_projection(self, state):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
parallel_projection	pyvista/plotting/renderer.py	/^    def parallel_projection(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
parallel_projection	pyvista/plotting/renderer.py	/^    def parallel_projection(self, state):  # numpydoc ignore=GL08$/;"	m	class:Renderer
parallel_scale	pyvista/plotting/camera.py	/^    def parallel_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
parallel_scale	pyvista/plotting/camera.py	/^    def parallel_scale(self, scale):  # numpydoc ignore=GL08$/;"	m	class:Camera
parallel_scale	pyvista/plotting/plotter.py	/^    def parallel_scale(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
parallel_scale	pyvista/plotting/plotter.py	/^    def parallel_scale(self, value):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
parallel_scale	pyvista/plotting/renderer.py	/^    def parallel_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
parallel_scale	pyvista/plotting/renderer.py	/^    def parallel_scale(self, value):  # numpydoc ignore=GL08$/;"	m	class:Renderer
parametric_function	pyvista/core/utilities/parametric_objects.py	/^    parametric_function = _vtk.vtkParametricRandomHills()$/;"	v
parametric_function	pyvista/core/utilities/parametric_objects.py	/^    parametric_function = _vtk.vtkParametricSuperToroid()$/;"	v
parametric_keywords	pyvista/core/utilities/parametric_objects.py	/^def parametric_keywords($/;"	f
params	examples/01-filter/glyphs_table.py	/^params = np.array($/;"	v
paraview	pyvista/plotting/themes.py	/^    paraview = ParaViewTheme$/;"	v	class:_NATIVE_THEMES
paraview_pvcc	tests/plotting/test_camera.py	/^def paraview_pvcc():$/;"	f
parse_field_choice	pyvista/core/utilities/arrays.py	/^def parse_field_choice(field):$/;"	f
parse_font_family	pyvista/plotting/tools.py	/^def parse_font_family(font_family: str) -> int:$/;"	f
parse_message	pyvista/core/utilities/observers.py	/^    def parse_message(message):$/;"	m	class:Observer
parser	tests/check_doctest_names.py	/^    parser = ArgumentParser(description='Look for name errors in doctests.')$/;"	v
part_ellipsoid	examples/00-load/create-parametric-geometric-objects.py	/^part_ellipsoid = pv.ParametricEllipsoid(10, 5, 5, max_v=pi \/ 2)$/;"	v
partition	pyvista/core/filters/data_set.py	/^    def partition(self, n_partitions, generate_global_id=False, as_composite=True):$/;"	m	class:DataSetFilters
patch_array_names	pyvista/core/utilities/reader.py	/^    def patch_array_names(self):  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
patch_array_status	pyvista/core/utilities/reader.py	/^    def patch_array_status(self, name):$/;"	m	class:OpenFOAMReader
path	doc/source/make_tables.py	/^    path = None  # Path to the rst file to which the table will be written$/;"	v	class:DocTable
path	doc/source/make_tables.py	/^    path = f"{CHARTS_TABLE_DIR}\/pen_line_styles.rst"$/;"	v	class:LineStyleTable
path	doc/source/make_tables.py	/^    path = f"{CHARTS_TABLE_DIR}\/plot_color_schemes.rst"$/;"	v	class:ColorSchemeTable
path	doc/source/make_tables.py	/^    path = f"{CHARTS_TABLE_DIR}\/scatter_marker_styles.rst"$/;"	v	class:MarkerStyleTable
path	doc/source/make_tables.py	/^    path = f"{COLORS_TABLE_DIR}\/colors.rst"$/;"	v	class:ColorTable
path	examples/00-load/create-surface-draped.py	/^path = examples.download_gpr_path().points$/;"	v
path	examples/00-load/read-parallel.py	/^path = os.path.dirname(filename)$/;"	v
path	examples/01-filter/slicing.py	/^def path(y):$/;"	f
path	examples/02-plot/orbit.py	/^path = p.generate_orbital_path(factor=2.0, n_points=36, viewup=viewup, shift=0.2)$/;"	v
path	examples/02-plot/orbit.py	/^path = p.generate_orbital_path(factor=2.0, shift=10000, viewup=viewup, n_points=36)$/;"	v
path	examples/02-plot/orbit.py	/^path = p.generate_orbital_path(n_points=36, shift=mesh.length)$/;"	v
path	examples/02-plot/point-clouds.py	/^path = pl.generate_orbital_path(n_points=36, shift=cloud.length, factor=3.0)$/;"	v
path	pyvista/core/utilities/reader.py	/^    def path(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:BaseReader
path	pyvista/core/utilities/reader.py	/^    def path(self, path: str):  # numpydoc ignore=GL08$/;"	m	class:BaseReader
path	pyvista/examples/downloads.py	/^    path=USER_DATA_PATH,$/;"	v
path	pyvista/examples/gltf.py	/^    path=USER_DATA_PATH,$/;"	v
pbr	examples/02-plot/backface_props.py	/^    pbr=True,$/;"	v
pd	tests/core/test_objects.py	/^    pd = None$/;"	v
peak_mesh	examples/01-filter/connectivity.py	/^peak_mesh = mesh.connectivity('point_seed', peak_point_id, scalar_range=peak_range)$/;"	v
peak_point	examples/01-filter/connectivity.py	/^peak_point = mesh.points[peak_point_id]$/;"	v
peak_point_id	examples/01-filter/connectivity.py	/^peak_point_id = np.argmax(mesh['Curvature'])$/;"	v
peak_range	examples/01-filter/connectivity.py	/^peak_range = [0.2, data_max]  # Peak if curvature > 0.2$/;"	v
pen	pyvista/plotting/charts.py	/^    def pen(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
perlin_noise	pyvista/core/utilities/features.py	/^def perlin_noise(amplitude, freq: Sequence[float], phase: Sequence[float]):$/;"	f
phi	examples/01-filter/flying_edges.py	/^phi = (1 + np.sqrt(5)) \/ 2$/;"	v
phi2	examples/01-filter/flying_edges.py	/^phi2 = phi * phi$/;"	v
pick_click_position	pyvista/plotting/picking.py	/^    def pick_click_position(self):$/;"	m	class:PickingInterface
pick_mouse_position	pyvista/plotting/picking.py	/^    def pick_mouse_position(self):$/;"	m	class:PickingInterface
pickable	pyvista/plotting/actor.py	/^    def pickable(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
pickable	pyvista/plotting/actor.py	/^    def pickable(self, value):  # numpydoc ignore=GL08$/;"	m	class:Actor
pickable	pyvista/plotting/composite_mapper.py	/^    def pickable(self) -> Optional[bool]:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
pickable	pyvista/plotting/composite_mapper.py	/^    def pickable(self, new_pickable: bool):  # numpydoc ignore=GL08$/;"	m	class:BlockAttributes
pickable_actors	pyvista/plotting/plotter.py	/^    def pickable_actors(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
pickable_actors	pyvista/plotting/plotter.py	/^    def pickable_actors(self, actors=None):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
pickable_window	tests/plotting/test_picking.py	/^        pickable_window=pickable_window,$/;"	v	class:test_point_picking_window.Tracker
picked_actor	pyvista/plotting/picking.py	/^    def picked_actor(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_block_index	pyvista/plotting/picking.py	/^    def picked_block_index(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_cell	pyvista/plotting/picking.py	/^    def picked_cell(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_cells	pyvista/plotting/picking.py	/^    def picked_cells(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_mesh	pyvista/plotting/picking.py	/^    def picked_mesh(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_point	pyvista/plotting/picking.py	/^    def picked_point(self):  # numpydoc ignore=RT01$/;"	m	class:PickingInterface
picker	pyvista/plotting/picking.py	/^    def picker(self):  # numpydoc ignore=RT01$/;"	m	class:PointPickingElementHandler
picker	pyvista/plotting/picking.py	/^    def picker(self, picker):  # numpydoc ignore=GL08$/;"	m	class:PointPickingElementHandler
picker	pyvista/plotting/render_window_interactor.py	/^    def picker(self):  # numpydoc ignore=RT01$/;"	m	class:RenderWindowInteractor
picker	pyvista/plotting/render_window_interactor.py	/^    def picker(self, picker):  # numpydoc ignore=GL08$/;"	m	class:RenderWindowInteractor
picker	tests/plotting/test_picking.py	/^        picker='hardware',  # picker allows picking in the window$/;"	v	class:test_point_picking_window.Tracker
pid	examples/00-load/wrap-trimesh.py	/^pid = points.InsertNextPoint(p)$/;"	v
pie_plot	tests/plotting/test_charts.py	/^def pie_plot(chart_pie):$/;"	f
pine_roots	examples/01-filter/connectivity.py	/^pine_roots = examples.download_pine_roots()$/;"	v
pl	examples/00-load/create-parametric-geometric-objects.py	/^pl = pv.Plotter()$/;"	v
pl	examples/00-load/create-polydata-strips.py	/^pl = pv.Plotter()$/;"	v
pl	examples/00-load/create-polyhedron.py	/^pl = pv.Plotter()$/;"	v
pl	examples/00-load/linear-cells.py	/^pl = pv.Plotter(shape=(4, 4))$/;"	v
pl	examples/00-load/load-gltf.py	/^pl = pyvista.Plotter()$/;"	v
pl	examples/00-load/load-vrml.py	/^pl = pyvista.Plotter()$/;"	v
pl	examples/01-filter/boolean-operations.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/cell-centers.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/collisions.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/contouring.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/decimate.py	/^pl = pv.Plotter(shape=(1, 3))$/;"	v
pl	examples/01-filter/extrude-trim.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/extrude-trim.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/01-filter/flying_edges.py	/^pl = pv.Plotter(window_size=[800, 800], off_screen=True)$/;"	v
pl	examples/01-filter/glyphs.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/image-fft-perlin-noise.py	/^pl = pv.Plotter(lighting='three lights')$/;"	v
pl	examples/01-filter/image-fft-perlin-noise.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/01-filter/sampling_functions_2d.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/sampling_functions_2d.py	/^pl = pv.Plotter(lighting=None)$/;"	v
pl	examples/01-filter/surface-smoothing.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/surface_reconstruction.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/02-plot/anti-aliasing.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/backface_props.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/background_image.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/background_image.py	/^pl = pv.Plotter(shape=(2, 2))$/;"	v
pl	examples/02-plot/blurring.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/color_cycler.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/color_cycler.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/02-plot/composite-picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/depth_of_field.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/distance-along-spline.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/distance_measurement.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/element-picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/lookup-table.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/mesh-picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/point-clouds.py	/^pl = pv.Plotter(off_screen=True)$/;"	v
pl	examples/02-plot/point-clouds.py	/^pl = pv.Plotter(shape=(2, 2))$/;"	v
pl	examples/02-plot/shading.py	/^pl = pyvista.Plotter()$/;"	v
pl	examples/02-plot/ssao.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/surface-picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/themes.py	/^pl = pv.Plotter(theme=my_theme)$/;"	v
pl	examples/02-plot/vector-component.py	/^pl = pv.Plotter(shape=(2, 2))$/;"	v
pl	examples/02-plot/vertices.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/volume.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/volume.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/03-widgets/animation.py	/^pl = pv.Plotter()$/;"	v
pl	examples/03-widgets/clip-volume.py	/^pl = pv.Plotter()$/;"	v
pl	examples/04-lights/shadows.py	/^pl = pyvista.Plotter(lighting=None, window_size=(800, 800))$/;"	v
pl	examples/98-common/project-points-tessellate.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/add-example.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/add-example.py	/^pl = pv.Plotter(off_screen=True)$/;"	v
pl	examples/99-advanced/antarctica-compare.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/atomic-orbitals.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/customization-trame-toolbar.py	/^pl = pv.Plotter(notebook=True)$/;"	v
pl	examples/99-advanced/fea-hertzian-contact-pressure.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/magnetic-fields.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/openfoam-cooling.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/openfoam-tubes.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/planets.py	/^pl = pyvista.Plotter(lighting="none")$/;"	v
pl	examples/99-advanced/planets.py	/^pl = pyvista.Plotter(shape=(1, 2))$/;"	v
pl	examples/99-advanced/planets.py	/^pl = pyvista.Plotter(shape=(3, 2))$/;"	v
pl	examples/99-advanced/pump-bracket.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/pump-bracket.py	/^pl = pv.Plotter(off_screen=True)$/;"	v
pl	examples/99-advanced/ray-trace-moeller.py	/^    pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/warp-by-vector-eigenmodes.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/warp-by-vector-eigenmodes.py	/^pl = pv.Plotter(shape=(2, 4))$/;"	v
pl	examples_trame/advanced/contour.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/actor_color.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/algorithm.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/file_viewer.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/mesh_scalars.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/multi_views.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	pyvista/_plot.py	/^    pl = pyvista.Plotter($/;"	v
pl	pyvista/plotting/helpers.py	/^    pl = pyvista.Plotter(shape=(2, 2), **plotter_kwargs)$/;"	v
pl	test.py	/^pl = pv.Plotter()$/;"	v
pl	tests/plotting/test_charts.py	/^def pl():$/;"	f
pl	tests/plotting/test_theme.py	/^        pl = pv.Plotter()$/;"	v	class:test_user_theme.MyTheme
pl	tests/test.py	/^pl = pyvista.Plotter()$/;"	v
place_point	pyvista/plotting/widgets.py	/^        def place_point(*_):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_measurement_widget
plane	examples/00-load/create-geometric-objects.py	/^plane = pv.Plane()$/;"	v
plane	examples/01-filter/clipping.py	/^plane = pv.Plane(i_size=30, j_size=30, direction=normal)$/;"	v
plane	examples/01-filter/extrude-trim.py	/^plane = pv.Plane($/;"	v
plane	examples/01-filter/extrude-trim.py	/^plane = pv.Plane(center=(0, 0, 1), i_size=2, j_size=0.2, direction=[1, 1, 1], j_resolution=1)$/;"	v
plane	examples/04-lights/actors.py	/^plane = pv.Plane(i_size=4, j_size=4)$/;"	v
plane	examples/98-common/project-points-tessellate.py	/^plane = pv.Plane(center=origin, direction=normal)$/;"	v
plane	tests/conftest.py	/^def plane():$/;"	f
planeSource	pyvista/core/utilities/geometric_objects.py	/^    planeSource = _vtk.vtkPlaneSource()$/;"	v
plane_vis	examples/98-common/project-points-tessellate.py	/^plane_vis = pv.Plane($/;"	v
planefile	pyvista/examples/examples.py	/^planefile = os.path.join(dir_path, 'airplane.ply')$/;"	v
plot	pyvista/_plot.py	/^def plot($/;"	f
plot	pyvista/core/cell.py	/^    def plot(self, **kwargs):$/;"	m	class:Cell
plot	pyvista/core/composite.py	/^    plot = pyvista._plot.plot$/;"	v	class:MultiBlock
plot	pyvista/core/dataset.py	/^    plot = pyvista._plot.plot$/;"	v	class:DataSet
plot	pyvista/core/pointset.py	/^    def plot(self, *args, **kwargs):$/;"	m	class:PointSet
plot	pyvista/plotting/_property.py	/^    def plot(self, **kwargs) -> None:$/;"	m	class:Property
plot	pyvista/plotting/actor.py	/^    def plot(self, **kwargs):$/;"	m	class:Actor
plot	pyvista/plotting/charts.py	/^    def plot(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
plot	pyvista/plotting/charts.py	/^    def plot(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
plot	pyvista/plotting/charts.py	/^    def plot(self, x, y=None, fmt='-'):$/;"	m	class:Chart2D
plot	pyvista/plotting/lookup_table.py	/^    def plot(self, **kwargs):$/;"	m	class:LookupTable
plot	pyvista/plotting/texture.py	/^    def plot(self, **kwargs):$/;"	m	class:Texture
plot_ants_plane	pyvista/demos/demos.py	/^def plot_ants_plane(notebook=None):$/;"	f
plot_arrows	pyvista/plotting/helpers.py	/^def plot_arrows(cent, direction, **kwargs):$/;"	f
plot_beam	pyvista/demos/demos.py	/^def plot_beam(notebook=None):$/;"	f
plot_boundaries	pyvista/core/filters/poly_data.py	/^    def plot_boundaries(self, edge_color="red", line_width=None, progress_bar=False, **kwargs):$/;"	m	class:PolyDataFilters
plot_cell	pyvista/examples/cells.py	/^def plot_cell(grid, cpos=None, **kwargs):$/;"	f
plot_cleanup	doc/source/conf.py	/^plot_cleanup = plot_setup$/;"	v
plot_cleanup	tests/tinypages/conf.py	/^plot_cleanup = plot_setup$/;"	v
plot_compare_four	pyvista/plotting/helpers.py	/^def plot_compare_four($/;"	f
plot_context	pyvista/ext/plot_directive.py	/^plot_context = {}$/;"	v
plot_curvature	pyvista/core/filters/poly_data.py	/^    def plot_curvature(self, curv_type='mean', **kwargs):$/;"	m	class:PolyDataFilters
plot_curvature	pyvista/core/pointset.py	/^    def plot_curvature(self, curv_type='mean', **kwargs):$/;"	m	class:PointGrid
plot_datasets	pyvista/demos/demos.py	/^def plot_datasets(dataset_type=None):$/;"	f
plot_example	examples/02-plot/themes.py	/^def plot_example():$/;"	f
plot_file	tests/test_tinypages.py	/^    def plot_file(plt, num, subnum):$/;"	f	function:test_tinypages
plot_glyphs	pyvista/demos/demos.py	/^def plot_glyphs(grid_sz=3, **kwargs):$/;"	f
plot_logo	pyvista/demos/logo.py	/^def plot_logo($/;"	f
plot_normals	pyvista/core/filters/poly_data.py	/^    def plot_normals($/;"	m	class:PolyDataFilters
plot_orbital	examples/99-advanced/atomic-orbitals.py	/^def plot_orbital(orbital, cpos='iso', clip_plane='x'):$/;"	f
plot_over_circular_arc	pyvista/core/filters/data_set.py	/^    def plot_over_circular_arc($/;"	m	class:DataSetFilters
plot_over_circular_arc_normal	pyvista/core/filters/data_set.py	/^    def plot_over_circular_arc_normal($/;"	m	class:DataSetFilters
plot_over_line	pyvista/core/filters/data_set.py	/^    def plot_over_line($/;"	m	class:DataSetFilters
plot_poly	tests/tinypages/plot_polygon.py	/^def plot_poly():$/;"	f
plot_subdivisions	examples/01-filter/subdivide.py	/^def plot_subdivisions(mesh, a, b):$/;"	f
plot_wave	pyvista/demos/demos.py	/^def plot_wave(fps=30, frequency=1, wavetime=3, interactive=False, notebook=None):$/;"	f
plots	pyvista/plotting/charts.py	/^    def plots(self, plot_type=None):$/;"	m	class:Chart2D
plotter	examples/00-load/create-point-cloud.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/00-load/read-file.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples/00-load/reader.py	/^plotter = pyvista.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/00-load/reader.py	/^plotter = pyvista.Plotter(shape='2|1')$/;"	v
plotter	examples/01-filter/extrude-rotate.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/01-filter/extrude-rotate.py	/^plotter = pyvista.Plotter(shape=(2, 1))$/;"	v
plotter	examples/01-filter/glyphs_table.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/01-filter/image-fft-perlin-noise.py	/^plotter = pv.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/01-filter/integrate-data.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/01-filter/subdivide.py	/^plotter = plot_subdivisions(mesh, 1, 3)$/;"	v
plotter	examples/02-plot/backface_props.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/bounds.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/clear.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/floors.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/gif.py	/^plotter = pv.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/02-plot/isovalue.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples/02-plot/labels.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/movie.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/movie_glyphs.py	/^plotter = pv.Plotter(notebook=False)$/;"	v
plotter	examples/02-plot/multi-window.py	/^plotter = pv.Plotter(shape='3|1', window_size=(1000, 1200))$/;"	v
plotter	examples/02-plot/multi-window.py	/^plotter = pv.Plotter(shape=(1, 2))$/;"	v
plotter	examples/02-plot/multi-window.py	/^plotter = pv.Plotter(shape=(2, 2))$/;"	v
plotter	examples/02-plot/multi-window.py	/^plotter = pv.Plotter(shape=shape, row_weights=row_weights, col_weights=col_weights, groups=groups)$/;"	v
plotter	examples/02-plot/pbr.py	/^plotter = pv.Plotter(lighting=None)$/;"	v
plotter	examples/02-plot/screenshot.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples/02-plot/silhouette.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/02-plot/silhouette.py	/^plotter = pyvista.Plotter(shape=(1, 2))$/;"	v
plotter	examples/02-plot/silhouette.py	/^plotter = pyvista.Plotter(shape=(1, 3))$/;"	v
plotter	examples/02-plot/texture.py	/^plotter = pv.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/02-plot/themes.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/actors.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/actors.py	/^plotter = pv.Plotter(lighting='none', window_size=(1000, 1000))$/;"	v
plotter	examples/04-lights/attenuation.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/beam_shape.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/beam_shape.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/light_types.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/mesh_lighting.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/plotter_builtins.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/plotter_builtins.py	/^plotter = pv.Plotter(lighting='none', window_size=(1000, 1000))$/;"	v
plotter	examples/04-lights/plotter_builtins.py	/^plotter = pv.Plotter(lighting='three lights')$/;"	v
plotter	examples/04-lights/shadows.py	/^plotter = pyvista.Plotter(lighting=None, window_size=(800, 800))$/;"	v
plotter	examples/99-advanced/openfoam-example.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/99-advanced/sphere_eversion.py	/^plotter = pv.Plotter(window_size=(300, 300))$/;"	v
plotter	examples/99-advanced/sphere_eversion.py	/^plotter = pv.Plotter(window_size=(512, 512))$/;"	v
plotter	examples_trame/advanced/custom_ui.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/basic/PyVistaLocalView.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples_trame/basic/PyVistaRemoteLocalView.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/basic/PyVistaRemoteView.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/basic/ui_template.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/validation/many_actors.py	/^plotter = pv.Plotter()$/;"	v
plotter	pyvista/demos/logo.py	/^    plotter = pyvista.Plotter(window_size=window_size, off_screen=off_screen)$/;"	v
plotter_kwargs	pyvista/plotting/helpers.py	/^        plotter_kwargs = {}$/;"	v
plotter_ui	pyvista/trame/ui/__init__.py	/^def plotter_ui($/;"	f
pltr	examples/02-plot/moving_cmap.py	/^pltr = pv.Plotter(window_size=[512, 512])$/;"	v
pluckerconoid	examples/00-load/create-parametric-geometric-objects.py	/^pluckerconoid = pv.ParametricPluckerConoid()$/;"	v
pluto	examples/99-advanced/planets.py	/^pluto = examples.planets.load_pluto(radius=1151.0)$/;"	v
pluto_texture	examples/99-advanced/planets.py	/^pluto_texture = examples.planets.download_pluto_surface(texture=True)$/;"	v
point	examples/00-load/wrap-trimesh.py	/^point = vtk.vtkPolyData()$/;"	v
point	examples/01-filter/slicing.py	/^point = np.array(model.center) - ranges * 0.25$/;"	v
point	examples/02-plot/distance-along-spline.py	/^    point = get_point_along_spline(dist)$/;"	v
point	examples/99-advanced/ray-trace-moeller.py	/^    point = tri.points[0] * a + tri.points[1] * b + tri.points[2] * c$/;"	v
point_array	pyvista/core/utilities/arrays.py	/^def point_array(obj, name):$/;"	f
point_array_names	pyvista/core/utilities/reader.py	/^    def point_array_names(self):$/;"	m	class:PointCellDataSelection
point_array_status	pyvista/core/utilities/reader.py	/^    def point_array_status(self, name):$/;"	m	class:PointCellDataSelection
point_cell_ids	pyvista/core/dataset.py	/^    def point_cell_ids(self, ind: int) -> List[int]:$/;"	m	class:DataSet
point_cloud	examples/00-load/create-point-cloud.py	/^point_cloud = pv.PolyData(points)$/;"	v
point_cloud	examples/02-plot/edl.py	/^point_cloud = examples.download_lidar()$/;"	v
point_cloud	examples/98-common/project-points-tessellate.py	/^point_cloud = np.random.random((num_points, 3))$/;"	v
point_cloud	examples/99-advanced/atomic-orbitals.py	/^point_cloud = pv.PolyData(points)$/;"	v
point_data	pyvista/core/dataset.py	/^    def point_data(self) -> DataSetAttributes:  # numpydoc ignore=RT01$/;"	m	class:DataSet
point_data_to_cell_data	pyvista/core/filters/composite.py	/^    point_data_to_cell_data = DataSetFilters.point_data_to_cell_data$/;"	v	class:CompositeFilters
point_data_to_cell_data	pyvista/core/filters/data_set.py	/^    def point_data_to_cell_data(self, pass_point_data=False, progress_bar=False):$/;"	m	class:DataSetFilters
point_data_to_cell_data	pyvista/core/pointset.py	/^    def point_data_to_cell_data(self, *args, **kwargs):$/;"	m	class:PointSet
point_data_to_cell_data_algorithm	pyvista/plotting/utilities/algorithms.py	/^def point_data_to_cell_data_algorithm(inp, pass_point_data=False):$/;"	f
point_ids	pyvista/core/cell.py	/^    def point_ids(self) -> List[int]:  # numpydoc ignore=RT01$/;"	m	class:Cell
point_is_inside_cell	pyvista/core/dataset.py	/^    def point_is_inside_cell($/;"	m	class:DataSet
point_is_inside_cell	pyvista/core/pointset.py	/^    def point_is_inside_cell(self, *args, **kwargs):$/;"	m	class:PointSet
point_neighbors	pyvista/core/dataset.py	/^    def point_neighbors(self, ind: int) -> List[int]:$/;"	m	class:DataSet
point_neighbors_levels	pyvista/core/dataset.py	/^    def point_neighbors_levels($/;"	m	class:DataSet
point_neighbourhood	curvatures_adjust_edges.py	/^    def point_neighbourhood(pt_id):$/;"	f	function:adjust_edge_curvatures
point_neighbourhood	examples/01-filter/curvatures_adjust_edges.py	/^    def point_neighbourhood(pt_id):$/;"	f	function:adjust_edge_curvatures
point_normals	pyvista/core/pointset.py	/^    def point_normals(self) -> 'pyvista.pyvista_ndarray':  # numpydoc ignore=RT01$/;"	m	class:PolyData
point_size	examples/00-load/create-kochanek-spline.py	/^        point_size=10,$/;"	v
point_size	examples/00-load/wrap-trimesh.py	/^    point_size=50,$/;"	v
point_size	examples/01-filter/cell-centers.py	/^    point_size=20,$/;"	v
point_size	examples/01-filter/extrude-rotate.py	/^    point_size=10,$/;"	v
point_size	examples/02-plot/point-clouds.py	/^    point_size=10,$/;"	v
point_size	examples/02-plot/point-clouds.py	/^    point_size=20,$/;"	v
point_size	examples/02-plot/point-clouds.py	/^    point_size=4.0,$/;"	v
point_size	examples/02-plot/vertices.py	/^    point_size=10,$/;"	v
point_size	examples/98-common/project-points-tessellate.py	/^    point_size=10,$/;"	v
point_size	examples/99-advanced/atomic-orbitals.py	/^    point_size=3,$/;"	v
point_size	pyvista/demos/logo.py	/^        point_size=14,$/;"	v
point_size	pyvista/plotting/_property.py	/^    def point_size(self):  # numpydoc ignore=RT01$/;"	m	class:Property
point_size	pyvista/plotting/_property.py	/^    def point_size(self, new_size):  # numpydoc ignore=GL08$/;"	m	class:Property
point_size	pyvista/plotting/themes.py	/^    def point_size(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
point_size	pyvista/plotting/themes.py	/^    def point_size(self, point_size: float):  # numpydoc ignore=GL08$/;"	m	class:Theme
pointa	examples/00-load/create-parametric-geometric-objects.py	/^pointa = [-1, 0, 0]$/;"	v
pointa	examples/01-filter/streamlines_2D.py	/^    pointa=(0, -5, 0),$/;"	v
pointa	examples/03-widgets/multi-slider-widget.py	/^    pointa=(0.025, 0.1),$/;"	v	class:MyCustomRoutine
pointa	examples/03-widgets/multi-slider-widget.py	/^    pointa=(0.35, 0.1),$/;"	v
pointa	examples/03-widgets/multi-slider-widget.py	/^    pointa=(0.67, 0.1),$/;"	v
pointb	examples/00-load/create-parametric-geometric-objects.py	/^pointb = [0, 1, 0]$/;"	v
pointb	examples/00-load/create-parametric-geometric-objects.py	/^pointb = [1, 0, 0]$/;"	v
pointb	examples/01-filter/streamlines_2D.py	/^    pointb=(0, 5, 0),$/;"	v
pointb	examples/03-widgets/multi-slider-widget.py	/^    pointb=(0.31, 0.1),$/;"	v	class:MyCustomRoutine
pointb	examples/03-widgets/multi-slider-widget.py	/^    pointb=(0.64, 0.1),$/;"	v
pointb	examples/03-widgets/multi-slider-widget.py	/^    pointb=(0.98, 0.1),$/;"	v
points	examples/00-load/create-kochanek-spline.py	/^points = make_points()$/;"	v
points	examples/00-load/create-point-cloud.py	/^points = generate_points()$/;"	v
points	examples/00-load/create-point-cloud.py	/^points = np.random.rand(100, 3)$/;"	v
points	examples/00-load/create-poly.py	/^points = np.array($/;"	v
points	examples/00-load/create-polydata-strips.py	/^points = np.array($/;"	v
points	examples/00-load/create-polyhedron.py	/^points = quad_points + polygon_points + hexa_points + polyhedron_points$/;"	v
points	examples/00-load/create-spline.py	/^points = make_points()$/;"	v
points	examples/00-load/create-structured-surface.py	/^points = make_point_set()$/;"	v
points	examples/00-load/create-surface-draped.py	/^points = np.repeat(path, nsamples, axis=0)$/;"	v
points	examples/00-load/create-tri-surface.py	/^points = np.c_[xx.reshape(-1), yy.reshape(-1), zz.reshape(-1)]$/;"	v
points	examples/00-load/create-tri-surface.py	/^points = np.column_stack((xx.ravel(order="F"), yy.ravel(order="F"), zz.ravel(order="F")))$/;"	v
points	examples/00-load/create-unstructured-surface.py	/^points = np.array($/;"	v
points	examples/00-load/create-unstructured-surface.py	/^points = np.vstack((cell1, cell2)).astype(float)$/;"	v
points	examples/00-load/linear-cells.py	/^points = [$/;"	v
points	examples/00-load/wrap-trimesh.py	/^points = [[0, 0, 0], [0, 0, 1], [0, 1, 0]]$/;"	v
points	examples/00-load/wrap-trimesh.py	/^points = np.random.random((30, 3))$/;"	v
points	examples/00-load/wrap-trimesh.py	/^points = vtk.vtkPoints()$/;"	v
points	examples/01-filter/cell-centers.py	/^points = grid.cell_centers().points$/;"	v
points	examples/01-filter/interpolate.py	/^points = examples.download_sparse_points()$/;"	v
points	examples/01-filter/slicing.py	/^points = np.c_[x, y, zo]$/;"	v
points	examples/01-filter/surface_reconstruction.py	/^points = pv.wrap(pv.Sphere().points)$/;"	v
points	examples/02-plot/distance-along-spline.py	/^points = np.column_stack((x, y, z))$/;"	v
points	examples/02-plot/labels.py	/^points = grid.points$/;"	v
points	examples/02-plot/point-clouds.py	/^points = rng.random((1000, 3))$/;"	v
points	examples/03-widgets/sphere-widget.py	/^points = np.array([[33, 25, 45], [70, 80, 13], [51, 57, 10], [25, 69, 20]])$/;"	v
points	examples/03-widgets/spline-widget.py	/^points = np.array($/;"	v
points	examples/99-advanced/atomic-orbitals.py	/^points = hydro_orbital.points[indices]$/;"	v
points	examples/99-advanced/openfoam-cooling.py	/^points = []$/;"	v
points	examples/99-advanced/openfoam-cooling.py	/^points = pv.PointSet(points)$/;"	v
points	examples/99-advanced/ray-trace-moeller.py	/^points = np.array([[0, 0, 0], [0, 1, 0], [1, 0, 0]])$/;"	v
points	pyvista/core/cell.py	/^    def points(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:Cell
points	pyvista/core/dataset.py	/^    def points($/;"	m	class:DataSet
points	pyvista/core/dataset.py	/^    def points(self) -> pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:DataSet
points	pyvista/core/grid.py	/^    def points(self) -> np.ndarray:  # type: ignore  # numpydoc ignore=RT01$/;"	m	class:ImageData
points	pyvista/core/grid.py	/^    def points(self) -> np.ndarray:  # type: ignore  # numpydoc ignore=RT01$/;"	m	class:RectilinearGrid
points	pyvista/core/grid.py	/^    def points(self, points):  # numpydoc ignore=PR01$/;"	m	class:ImageData
points	pyvista/core/grid.py	/^    def points(self, points):  # numpydoc ignore=PR01$/;"	m	class:RectilinearGrid
points	tests/test_meshio.py	/^    points=[[0.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 1.0]],$/;"	v
points_matrix	pyvista/core/pointset.py	/^    def points_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
points_to_double	pyvista/core/pointset.py	/^    def points_to_double(self):$/;"	m	class:_PointSet
pointset	tests/conftest.py	/^def pointset():$/;"	f
pointset_to_polydata_algorithm	pyvista/plotting/utilities/algorithms.py	/^def pointset_to_polydata_algorithm(inp):$/;"	f
pointsetmark	tests/core/test_grid.py	/^pointsetmark = pytest.mark.skipif($/;"	v
poked_subplot	pyvista/plotting/render_window_interactor.py	/^    def poked_subplot(self):$/;"	m	class:RenderWindowInteractor
polar	examples/02-plot/plot-over-circular-arc.py	/^polar = [mesh.bounds[0], mesh.bounds[2], mesh.bounds[5]]$/;"	v
polar2cart	tests/core/test_utilities.py	/^    def polar2cart(r, theta, phi):$/;"	f	function:test_cartesian_to_spherical
poly	examples/00-load/create-geometric-objects.py	/^poly = pv.Polygon()$/;"	v
poly	examples/00-load/create-parametric-geometric-objects.py	/^poly = arc.extrude([0, 0, 1])$/;"	v
poly	examples/01-filter/extrude-rotate.py	/^poly = line.extrude_rotate(resolution=resolution)$/;"	v
poly	examples/01-filter/project-plane.py	/^poly = examples.load_random_hills()$/;"	v
poly	examples/02-plot/labels.py	/^poly = pv.PolyData(np.random.rand(10, 3))$/;"	v
poly_object	examples/99-advanced/extending-pyvista.py	/^poly_object = pyvista.PolyData(vtk.vtkPolyData())$/;"	v
poly_source	examples/99-advanced/plotting-algorithms.py	/^poly_source = vtk.vtkRegularPolygonSource()$/;"	v
polydata	examples/98-common/project-points-tessellate.py	/^polydata = pv.PolyData(projected_points)$/;"	v
polygon	examples/00-load/create-polyhedron.py	/^polygon = [5, 4, 5, 6, 7, 8]$/;"	v
polygon	examples/00-load/create-tri-surface.py	/^polygon = pv.PolyData()$/;"	v
polygon_points	examples/00-load/create-polyhedron.py	/^polygon_points = [$/;"	v
polyhedron	examples/00-load/create-polyhedron.py	/^polyhedron = [len(polyhedron_connectivity)] + polyhedron_connectivity$/;"	v
polyhedron_connectivity	examples/00-load/create-polyhedron.py	/^polyhedron_connectivity = [$/;"	v
polyhedron_points	examples/00-load/create-polyhedron.py	/^polyhedron_points = [$/;"	v
polyline	examples/00-load/create-spline.py	/^polyline = polyline_from_points(points)$/;"	v
polyline_from_points	examples/00-load/create-spline.py	/^def polyline_from_points(points):$/;"	f
polys_to_lines	pyvista/core/utilities/parametric_objects.py	/^            polys_to_lines=False,$/;"	v
pop	pyvista/core/composite.py	/^    def pop(self, index: Union[int, str] = -1) -> Optional[_TypeMultiBlockLeaf]:$/;"	m	class:MultiBlock
pop	pyvista/core/datasetattributes.py	/^    def pop(self, key: str, default=_SENTINEL) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes
pop	pyvista/core/objects.py	/^    def pop(self, name):$/;"	m	class:Table
position	examples/04-lights/actors.py	/^    position = rot120 @ position$/;"	v
position	examples/04-lights/actors.py	/^position = (-1.5, -1.5, 3)$/;"	v
position	examples/04-lights/shadows.py	/^    position=(0, 0, 0),$/;"	v
position	examples/04-lights/shadows.py	/^    position=(0, 0.2, 1.0),$/;"	v
position	examples/04-lights/shadows.py	/^    position=(0, 1.0, 1.0),$/;"	v
position	pyvista/plotting/camera.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
position	pyvista/plotting/camera.py	/^    def position(self, value):  # numpydoc ignore=GL08$/;"	m	class:Camera
position	pyvista/plotting/charts.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
position	pyvista/plotting/charts.py	/^    def position(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartMPL
position	pyvista/plotting/lights.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:Light
position	pyvista/plotting/lights.py	/^    def position(self, pos):  # numpydoc ignore=GL08$/;"	m	class:Light
position	pyvista/plotting/prop3d.py	/^    def position(self) -> Tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
position	pyvista/plotting/prop3d.py	/^    def position(self, value: Vector):  # numpydoc ignore=GL08$/;"	m	class:Prop3D
position	pyvista/plotting/renderer.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
position	pyvista/plotting/renderer.py	/^    def position(self, value):  # numpydoc ignore=GL08$/;"	m	class:CameraPosition
position	pyvista/plotting/text.py	/^    def position(self):$/;"	m	class:Text
position	pyvista/plotting/text.py	/^    def position(self, position: Sequence[float]):  # numpydoc ignore=GL08$/;"	m	class:Text
position_x	pyvista/plotting/themes.py	/^    def position_x(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
position_x	pyvista/plotting/themes.py	/^    def position_x(self, position_x: float):  # numpydoc ignore=GL08$/;"	m	class:_ColorbarConfig
position_y	pyvista/plotting/themes.py	/^    def position_y(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
position_y	pyvista/plotting/themes.py	/^    def position_y(self, position_y: float):  # numpydoc ignore=GL08$/;"	m	class:_ColorbarConfig
positional	examples/04-lights/shadows.py	/^    positional=True,$/;"	v
positional	pyvista/plotting/lights.py	/^    def positional(self):  # numpydoc ignore=RT01$/;"	m	class:Light
positional	pyvista/plotting/lights.py	/^    def positional(self, state):  # numpydoc ignore=GL08$/;"	m	class:Light
prepare_smooth_shading	pyvista/plotting/_plotting.py	/^def prepare_smooth_shading(mesh, scalars, texture, split_sharp_edges, feature_angle, preference):$/;"	f
preserve_intermediate_functions	pyvista/core/utilities/reader.py	/^    def preserve_intermediate_functions(self):  # numpydoc ignore=RT01$/;"	m	class:MultiBlockPlot3DReader
preserve_intermediate_functions	pyvista/core/utilities/reader.py	/^    def preserve_intermediate_functions(self, val):  # numpydoc ignore=GL08$/;"	m	class:MultiBlockPlot3DReader
print_bands_frequencies	curvatures_adjust_edges.py	/^def print_bands_frequencies(bands, freq, precision=2):$/;"	f
print_bands_frequencies	examples/01-filter/curvatures_adjust_edges.py	/^def print_bands_frequencies(bands, freq, precision=2):$/;"	f
pro_decimated	examples/01-filter/decimate.py	/^pro_decimated = mesh.decimate_pro(target_reduction, preserve_topology=True)$/;"	v
prob	examples/99-advanced/atomic-orbitals.py	/^prob = np.abs(hydro_orbital['real_wf']) ** 2$/;"	v
probe	pyvista/core/filters/data_set.py	/^    def probe($/;"	m	class:DataSetFilters
probes	examples/01-filter/interpolate.py	/^probes = examples.download_thermal_probes()$/;"	v
process_events	pyvista/plotting/render_window_interactor.py	/^    def process_events(self):$/;"	m	class:RenderWindowInteractor
process_events	tests/plotting/test_render_window_interactor.py	/^    def process_events(iren, duration):$/;"	f	function:test_timer
process_opacity	pyvista/plotting/_plotting.py	/^def process_opacity(mesh, opacity, preference, n_colors, scalars, use_transparency):$/;"	f
profile	examples/01-filter/extrude-rotate.py	/^profile = pyvista.PolyData(vertices, faces)$/;"	v
progress_bar	pyvista/core/utilities/features.py	/^        progress_bar=progress_bar,$/;"	v
project	doc/source/conf.py	/^project = "PyVista"$/;"	v
project	tests/tinypages/conf.py	/^project = 'tinypages'$/;"	v
project_points_to_plane	examples/98-common/project-points-tessellate.py	/^def project_points_to_plane(points, plane_origin, plane_normal):$/;"	f
project_points_to_plane	pyvista/core/filters/poly_data.py	/^    def project_points_to_plane(self, origin=None, normal=(0.0, 0.0, 1.0), inplace=False):$/;"	m	class:PolyDataFilters
projected	examples/01-filter/project-plane.py	/^projected = poly.project_points_to_plane(origin=origin)$/;"	v
projected_points	examples/98-common/project-points-tessellate.py	/^projected_points = project_points_to_plane(point_cloud, origin, normal)$/;"	v
prop	pyvista/plotting/actor.py	/^    def prop(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
prop	pyvista/plotting/actor.py	/^    def prop(self, obj: Property):  # numpydoc ignore=GL08$/;"	m	class:Actor
prop	pyvista/plotting/text.py	/^    def prop(self) -> TextProperty:$/;"	m	class:CornerAnnotation
prop	pyvista/plotting/text.py	/^    def prop(self):$/;"	m	class:Text
prop	pyvista/plotting/text.py	/^    def prop(self, prop: TextProperty):  # numpydoc ignore=GL08$/;"	m	class:CornerAnnotation
prop	pyvista/plotting/text.py	/^    def prop(self, prop: TextProperty):  # numpydoc ignore=GL08$/;"	m	class:Text
prop	pyvista/plotting/volume.py	/^    def prop(self):  # numpydoc ignore=RT01$/;"	m	class:Volume
prop	pyvista/plotting/volume.py	/^    def prop(self, obj: Property):  # numpydoc ignore=GL08$/;"	m	class:Volume
prop	tests/plotting/test_property.py	/^def prop():$/;"	f
prop	tests/plotting/test_text.py	/^def prop():$/;"	f
prop_assembly	pyvista/plotting/tools.py	/^        prop_assembly = _vtk.vtkPropAssembly()$/;"	v
protocol	pyvista/trame/jupyter.py	/^        protocol=kwargs.get('protocol', 'http'),$/;"	v
pset	examples/99-advanced/openfoam-tubes.py	/^pset = pv.PointSet(inlet.points[::5])$/;"	v
pseudosphere	examples/00-load/create-parametric-geometric-objects.py	/^pseudosphere = pv.ParametricPseudosphere()$/;"	v
ptc	pyvista/core/filters/data_set.py	/^    def ptc(self, pass_point_data=False, progress_bar=False, **kwargs):$/;"	m	class:DataSetFilters
ptera_software	doc/source/make_external_gallery.py	/^    ptera_software=Example($/;"	v
pts	examples/01-filter/extract-surface.py	/^pts = np.vstack((lin_pts, quad_pts))$/;"	v
pts	examples/02-plot/gif.py	/^pts = grid.points.copy()$/;"	v
pts	examples/02-plot/texture.py	/^pts = curvsurf.points.copy()$/;"	v
pts	examples/99-advanced/osmnx-example.py	/^    pts = np.column_stack((x_pts, y_pts, z_pts))$/;"	v
puppy_coords	examples/02-plot/texture.py	/^puppy_coords = np.c_[yyc.ravel(), xxc.ravel()]$/;"	v
push_camera	pyvista/trame/ui/base_viewer.py	/^    def push_camera(self, **kwargs):$/;"	m	class:BaseViewer
push_camera	pyvista/trame/views.py	/^    def push_camera(self, *args, **kwargs):$/;"	m	class:PyVistaRemoteView
pv_data	tests/core/test_helpers.py	/^        pv_data = pv.wrap(vtk_data)$/;"	v	class:test_wrappers.Foo
pv_html_page_context	pyvista/core/utilities/docs.py	/^def pv_html_page_context($/;"	f
pvgeo	doc/source/make_external_gallery.py	/^    pvgeo=Example($/;"	v
pyfbs	doc/source/make_external_gallery.py	/^    pyfbs=Example($/;"	v
pygments_style	doc/source/conf.py	/^pygments_style = "friendly"$/;"	v
pygments_style	tests/tinypages/conf.py	/^pygments_style = 'sphinx'$/;"	v
pyrmaid	examples/00-load/linear-cells.py	/^pyrmaid = pv.UnstructuredGrid(cells, [pv.CellType.PYRAMID], points)$/;"	v
pytest_addoption	tests/conftest.py	/^def pytest_addoption(parser):$/;"	f
pytest_collection_modifyitems	tests/conftest.py	/^def pytest_collection_modifyitems(config, items):$/;"	f
pytest_configure	tests/plotting/conftest.py	/^def pytest_configure(config):$/;"	f
pytest_report_header	tests/conftest.py	/^def pytest_report_header(config):$/;"	f
pytest_runtest_setup	tests/conftest.py	/^def pytest_runtest_setup(item):$/;"	f
pytest_runtest_setup	tests/plotting/conftest.py	/^def pytest_runtest_setup(item):$/;"	f
pytestmark	tests/core/test_pointset.py	/^pytestmark = pytest.mark.skipif($/;"	v
pytestmark	tests/core/test_reader.py	/^pytestmark = pytest.mark.skipif($/;"	v
pytestmark	tests/examples/test_download_files.py	/^pytestmark = pytest.mark.needs_download$/;"	v
pytestmark	tests/plotting/jupyter/test_trame.py	/^    pytestmark = [skip_no_trame, pytest.mark.skip_plotting]$/;"	v
pytestmark	tests/plotting/jupyter/test_trame.py	/^    pytestmark = pytest.mark.skip$/;"	v
pytestmark	tests/plotting/test_picking.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_plotting.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_regression.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_scraper.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_widgets.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/test_tinypages.py	/^    pytestmark = pytest.mark.skip(reason='Requires system to support plotting')$/;"	v
pyvista_artworks	doc/source/make_external_gallery.py	/^    pyvista_artworks=Example($/;"	v
pyvista_initialize	pyvista/trame/views.py	/^    def pyvista_initialize(self):$/;"	m	class:_BasePyVistaView
pyvista_ndarray	pyvista/core/pyvista_ndarray.py	/^class pyvista_ndarray(np.ndarray):  # numpydoc ignore=PR02$/;"	c
pyvista_ndarray_1d	tests/core/test_pyvista_ndarray.py	/^def pyvista_ndarray_1d():$/;"	f
q	examples/99-advanced/sphere_eversion.py	/^q = Q$/;"	v
quad	examples/00-load/create-polyhedron.py	/^quad = [4, 0, 1, 2, 3]$/;"	v
quad_grid	examples/00-load/linear-cells.py	/^quad_grid = example_cells.Quadrilateral()$/;"	v
quad_points	examples/00-load/create-polyhedron.py	/^quad_points = [$/;"	v
quad_pts	examples/01-filter/extract-surface.py	/^quad_pts = np.array($/;"	v
qual	examples/00-load/read-dolfin.py	/^qual = dolfin.compute_cell_quality()$/;"	v
qual	examples/01-filter/mesh-quality.py	/^qual = mesh.compute_cell_quality(quality_measure='scaled_jacobian')$/;"	v
r	examples/00-load/create-structured-surface.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	examples/02-plot/distance-along-spline.py	/^r = z**2 + 1$/;"	v
r	examples/02-plot/gif.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	examples/02-plot/movie_glyphs.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	examples/02-plot/texture.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	pyvista/core/utilities/geometric_objects.py	/^    r = np.array([radius]).ravel()$/;"	v
r_gas_constant	pyvista/core/utilities/reader.py	/^    def r_gas_constant(self):  # numpydoc ignore=RT01$/;"	m	class:MultiBlockPlot3DReader
r_gas_constant	pyvista/core/utilities/reader.py	/^    def r_gas_constant(self, val):  # numpydoc ignore=GL08$/;"	m	class:MultiBlockPlot3DReader
r_mat_to_euler_angles	tests/plotting/test_widgets.py	/^def r_mat_to_euler_angles(R):$/;"	f
radii	examples/02-plot/depth-peeling.py	/^radii = [1, 0.5, 0.5, 0.5, 0.5]$/;"	v
radius	pyvista/core/utilities/geometric_objects.py	/^        radius=radius,$/;"	v
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self) -> bool:$/;"	m	class:ConeSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self, radius: float):$/;"	m	class:ConeSource
radius	tests/core/test_polydata.py	/^radius = 0.5$/;"	v
raise_has_duplicates	pyvista/core/utilities/arrays.py	/^def raise_has_duplicates(arr):$/;"	f
raise_not_matching	pyvista/core/utilities/arrays.py	/^def raise_not_matching(scalars, dataset):$/;"	f
ramp	pyvista/plotting/lookup_table.py	/^    def ramp(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
ramp	pyvista/plotting/lookup_table.py	/^    def ramp(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
random_points	examples/02-plot/movie.py	/^    random_points = np.random.random(mesh.points.shape)$/;"	v
randomhills	examples/00-load/create-parametric-geometric-objects.py	/^randomhills = pv.ParametricRandomHills()$/;"	v
range	pyvista/plotting/charts.py	/^    def range(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
range	pyvista/plotting/charts.py	/^    def range(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
ranges	examples/01-filter/slicing.py	/^ranges = np.array(model.bounds).reshape(-1, 2).ptp(axis=1)$/;"	v
ratio_to_keep	examples/01-filter/image-fft.py	/^ratio_to_keep = 0.10$/;"	v
ray	examples/01-filter/poly-ray-trace.py	/^ray = pv.Line(start, stop)$/;"	v
ray	examples/99-advanced/ray-trace.py	/^ray = pv.Line(start, stop)$/;"	v
ray_plane_intersection	pyvista/plotting/affine_widget.py	/^def ray_plane_intersection(start_point, direction, plane_point, normal):$/;"	f
ray_trace	pyvista/core/filters/poly_data.py	/^    def ray_trace(self, origin, end_point, first_point=False, plot=False, off_screen=None):$/;"	m	class:PolyDataFilters
ray_triangle_intersection	examples/99-advanced/ray-trace-moeller.py	/^def ray_triangle_intersection(ray_start, ray_vec, triangle):$/;"	f
read	pyvista/core/utilities/fileio.py	/^def read(filename, attrs=None, force_ext=None, file_format=None, progress_bar=False):$/;"	f
read	pyvista/core/utilities/reader.py	/^    def read(self):$/;"	m	class:BaseReader
read	pyvista/core/utilities/reader.py	/^    def read(self):$/;"	m	class:HDFReader
read_exodus	pyvista/core/utilities/fileio.py	/^def read_exodus($/;"	f
read_legacy	pyvista/core/utilities/fileio.py	/^def read_legacy(filename, progress_bar=False):$/;"	f
read_meshio	pyvista/core/utilities/fileio.py	/^def read_meshio(filename, file_format=None):$/;"	f
read_plot3d	pyvista/core/utilities/fileio.py	/^def read_plot3d(filename, q_filenames=(), auto_detect=True, attrs=None, progress_bar=False):$/;"	f
read_texture	pyvista/core/utilities/fileio.py	/^def read_texture(filename, attrs=None, progress_bar=False):$/;"	f
reader	examples/00-load/reader.py	/^reader = pyvista.get_reader(filename)$/;"	v
reader	examples/00-load/reader.py	/^reader = pyvista.get_reader(temp_file.name)$/;"	v
reader	examples/99-advanced/openfoam-example.py	/^reader = pyvista.POpenFOAMReader(filename)$/;"	v
reader	pyvista/core/utilities/fileio.py	/^    reader = vtkExodusIIReader()$/;"	v
reader	pyvista/core/utilities/reader.py	/^    def reader(self):  # numpydoc ignore=RT01$/;"	m	class:BaseReader
reader_mesh	examples/00-load/reader.py	/^reader_mesh = reader.read()$/;"	v
reader_mesh_2	examples/00-load/reader.py	/^reader_mesh_2 = reader.read()$/;"	v
reason	tests/core/test_datasetattributes.py	/^    reason='Test fails on Apple Silicon',$/;"	v
reason	tests/plotting/test_render_window_interactor.py	/^    reason='Other RenderWindowInteractors do not invoke TimerEvents during ProcessEvents.',$/;"	v
reason	tests/plotting/test_render_window_interactor.py	/^    reason='vtkXRenderWindowInteractor (Linux) does not invoke TimerEvents during ProcessEvents until VTK9.2.',$/;"	v
rebuild	pyvista/plotting/lookup_table.py	/^    def rebuild(self):$/;"	m	class:LookupTable
reconstruct_surface	pyvista/core/filters/poly_data.py	/^    def reconstruct_surface(self, nbr_sz=None, sample_spacing=None, progress_bar=False):$/;"	m	class:PolyDataFilters
reconstruct_surface	pyvista/core/filters/unstructured_grid.py	/^    def reconstruct_surface(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:UnstructuredGridFilters
rectfile	pyvista/examples/examples.py	/^rectfile = os.path.join(dir_path, 'rectilinear.vtk')$/;"	v
rectilinear	tests/conftest.py	/^def rectilinear():$/;"	f
red	examples/02-plot/cmap.py	/^red = np.array([1.0, 0.0, 0.0, 1.0])$/;"	v
redraw_on_render	pyvista/plotting/charts.py	/^    def redraw_on_render(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
redraw_on_render	pyvista/plotting/charts.py	/^    def redraw_on_render(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartMPL
referrers	tests/plotting/conftest.py	/^        referrers = [v for v in gc.get_referrers(obj) if v is not after and v is not cf]$/;"	v	class:check_gc.GcHandler
reflect	pyvista/core/filters/data_set.py	/^    def reflect($/;"	m	class:DataSetFilters
reflection	pyvista/core/utilities/transformations.py	/^def reflection(normal, point=None):$/;"	f
region_ids	examples/01-filter/connectivity.py	/^region_ids = np.unique(all_regions['RegionId'])$/;"	v
registry	pyvista/examples/downloads.py	/^    registry={},$/;"	v
registry	pyvista/examples/gltf.py	/^    registry={$/;"	v
regular_cells	pyvista/core/cell.py	/^    def regular_cells(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:CellArray
regular_faces	pyvista/core/pointset.py	/^    def regular_faces($/;"	m	class:PolyData
regular_faces	pyvista/core/pointset.py	/^    def regular_faces(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
release	doc/source/conf.py	/^release = pyvista.__version__$/;"	v
release	tests/tinypages/conf.py	/^release = '0.1'$/;"	v
release_callback	tests/plotting/test_widgets.py	/^    def release_callback(transform):$/;"	f	function:test_affine_widget
remove	pyvista/core/datasetattributes.py	/^    def remove(self, key: str) -> None:$/;"	m	class:DataSetAttributes
remove	pyvista/plotting/affine_widget.py	/^    def remove(self):$/;"	m	class:AffineWidget3D
remove_actor	pyvista/plotting/plotter.py	/^    def remove_actor(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_actor	pyvista/plotting/renderer.py	/^    def remove_actor(self, actor, reset_camera=False, render=True):$/;"	m	class:Renderer
remove_all_functions	pyvista/core/utilities/reader.py	/^    def remove_all_functions(self):$/;"	m	class:MultiBlockPlot3DReader
remove_all_lights	pyvista/plotting/plotter.py	/^    def remove_all_lights(self, only_active=False):$/;"	m	class:BasePlotter
remove_all_lights	pyvista/plotting/renderer.py	/^    def remove_all_lights(self):$/;"	m	class:Renderer
remove_all_lights	pyvista/plotting/renderers.py	/^    def remove_all_lights(self):$/;"	m	class:Renderers
remove_alpha	pyvista/plotting/utilities/regression.py	/^def remove_alpha(img):$/;"	f
remove_background_image	pyvista/plotting/plotter.py	/^    def remove_background_image(self):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_background_image	pyvista/plotting/renderers.py	/^    def remove_background_image(self):$/;"	m	class:Renderers
remove_blur_pass	pyvista/plotting/render_passes.py	/^    def remove_blur_pass(self):$/;"	m	class:RenderPasses
remove_blurring	pyvista/plotting/plotter.py	/^    def remove_blurring(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_blurring	pyvista/plotting/renderer.py	/^    def remove_blurring(self):$/;"	m	class:Renderer
remove_bounding_box	pyvista/plotting/plotter.py	/^    def remove_bounding_box(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_bounding_box	pyvista/plotting/renderer.py	/^    def remove_bounding_box(self, render=True):$/;"	m	class:Renderer
remove_bounds_axes	pyvista/plotting/plotter.py	/^    def remove_bounds_axes(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_bounds_axes	pyvista/plotting/renderer.py	/^    def remove_bounds_axes(self):$/;"	m	class:Renderer
remove_cells	pyvista/core/pointset.py	/^    def remove_cells(self, *args, **kwargs):$/;"	m	class:PointSet
remove_cells	pyvista/core/pointset.py	/^    def remove_cells(self, ind, inplace=False):$/;"	m	class:_PointSet
remove_chart	pyvista/plotting/charts.py	/^    def remove_chart(self, chart_or_index):$/;"	m	class:Charts
remove_chart	pyvista/plotting/plotter.py	/^    def remove_chart(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_chart	pyvista/plotting/renderer.py	/^    def remove_chart(self, chart_or_index):$/;"	m	class:Renderer
remove_environment_texture	pyvista/plotting/plotter.py	/^    def remove_environment_texture(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_environment_texture	pyvista/plotting/renderer.py	/^    def remove_environment_texture(self):$/;"	m	class:Renderer
remove_floors	pyvista/plotting/plotter.py	/^    def remove_floors(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_floors	pyvista/plotting/renderer.py	/^    def remove_floors(self, clear_kwargs=True, render=True):$/;"	m	class:Renderer
remove_function	pyvista/core/utilities/reader.py	/^    def remove_function(self, value: Union[int, Plot3DFunctionEnum]):$/;"	m	class:MultiBlockPlot3DReader
remove_legend	pyvista/plotting/plotter.py	/^    def remove_legend(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_legend	pyvista/plotting/renderer.py	/^    def remove_legend(self, render=True):$/;"	m	class:Renderer
remove_observer	pyvista/plotting/render_window_interactor.py	/^    def remove_observer(self, observer):$/;"	m	class:RenderWindowInteractor
remove_observers	pyvista/plotting/render_window_interactor.py	/^            def remove_observers(self):$/;"	m	class:_style_factory._make_class.CustomStyle
remove_observers	pyvista/plotting/render_window_interactor.py	/^    def remove_observers(self, event=None):$/;"	m	class:RenderWindowInteractor
remove_plot	pyvista/plotting/charts.py	/^    def remove_plot(self, plot):$/;"	m	class:Chart2D
remove_points	pyvista/core/filters/poly_data.py	/^    def remove_points(self, remove, mode='any', keep_scalars=True, inplace=False):$/;"	m	class:PolyDataFilters
remove_scalar_bar	pyvista/plotting/plotter.py	/^    def remove_scalar_bar(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_scalar_bar	pyvista/plotting/scalar_bars.py	/^    def remove_scalar_bar(self, title=None, render=True):$/;"	m	class:ScalarBars
rename_array	pyvista/core/dataset.py	/^    def rename_array(self, old_name: str, new_name: str, preference='cell'):$/;"	m	class:DataSet
render	pyvista/plotting/plotter.py	/^    def render(self):$/;"	m	class:BasePlotter
render_figures	pyvista/ext/plot_directive.py	/^def render_figures($/;"	f
render_lines_as_tubes	examples/00-load/create-truss.py	/^    render_lines_as_tubes=True,$/;"	v
render_lines_as_tubes	examples/99-advanced/openfoam-tubes.py	/^    render_lines_as_tubes=True,$/;"	v
render_lines_as_tubes	pyvista/demos/logo.py	/^        render_lines_as_tubes=True,$/;"	v
render_lines_as_tubes	pyvista/plotting/_property.py	/^    def render_lines_as_tubes(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
render_lines_as_tubes	pyvista/plotting/_property.py	/^    def render_lines_as_tubes(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Property
render_lines_as_tubes	pyvista/plotting/themes.py	/^    def render_lines_as_tubes(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
render_lines_as_tubes	pyvista/plotting/themes.py	/^    def render_lines_as_tubes(self, render_lines_as_tubes: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
render_points_as_spheres	examples/00-load/create-kochanek-spline.py	/^        render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/00-load/wrap-trimesh.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/01-filter/cell-centers.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/01-filter/extrude-rotate.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/02-plot/point-clouds.py	/^    render_points_as_spheres=False,$/;"	v
render_points_as_spheres	examples/02-plot/point-clouds.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/02-plot/vertices.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/98-common/project-points-tessellate.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/99-advanced/atomic-orbitals.py	/^    render_points_as_spheres=False,$/;"	v
render_points_as_spheres	pyvista/demos/logo.py	/^        render_points_as_spheres=True,$/;"	v
render_points_as_spheres	pyvista/plotting/_property.py	/^    def render_points_as_spheres(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
render_points_as_spheres	pyvista/plotting/_property.py	/^    def render_points_as_spheres(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Property
render_points_as_spheres	pyvista/plotting/themes.py	/^    def render_points_as_spheres(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
render_points_as_spheres	pyvista/plotting/themes.py	/^    def render_points_as_spheres(self, render_points_as_spheres: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
render_window	pyvista/plotting/plotter.py	/^    def render_window(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
renderer	pyvista/plotting/plotter.py	/^    def renderer(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
renderer	pyvista/report.py	/^    def renderer(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
renderers	pyvista/plotting/lights.py	/^    def renderers(self):  # numpydoc ignore=RT01$/;"	m	class:Light
repeat	pyvista/plotting/texture.py	/^    def repeat(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
repeat	pyvista/plotting/texture.py	/^    def repeat(self, flag: bool):  # numpydoc ignore=GL08$/;"	m	class:Texture
replace	pyvista/core/composite.py	/^    def replace(self, index: int, dataset: Optional[_TypeMultiBlockLeaf]) -> None:$/;"	m	class:MultiBlock
representation	pyvista/plotting/actor_properties.py	/^    def representation(self) -> RepresentationType:  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
representation	pyvista/plotting/actor_properties.py	/^    def representation(self, value: RepresentationType):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
required_arguments	pyvista/ext/plot_directive.py	/^    required_arguments = 0$/;"	v	class:PlotDirective
required_arguments	pyvista/ext/viewer_directive.py	/^    required_arguments = 1$/;"	v	class:OfflineViewerDirective
reset	examples/02-plot/mesh-picking.py	/^def reset():$/;"	f
reset	tests/core/test_dataset_filters.py	/^    def reset(self, *args, **kwargs):$/;"	m	class:GetOutput
reset_camera	examples/99-advanced/sphere_eversion.py	/^    reset_camera=True,$/;"	v
reset_camera	pyvista/plotting/plotter.py	/^    def reset_camera(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
reset_camera	pyvista/plotting/renderer.py	/^    def reset_camera(self, render=True, bounds=None):$/;"	m	class:Renderer
reset_camera	pyvista/trame/ui/base_viewer.py	/^    def reset_camera(self, **kwargs):$/;"	m	class:BaseViewer
reset_camera_clipping_range	pyvista/plotting/plotter.py	/^    def reset_camera_clipping_range(self):$/;"	m	class:BasePlotter
reset_camera_clipping_range	pyvista/plotting/renderer.py	/^    def reset_camera_clipping_range(self):$/;"	m	class:Renderer
reset_clipping_range	pyvista/plotting/camera.py	/^    def reset_clipping_range(self):$/;"	m	class:Camera
reset_colors	pyvista/plotting/composite_mapper.py	/^    def reset_colors(self):$/;"	m	class:CompositeAttributes
reset_gloal_theme	pyvista/conftest.py	/^def reset_gloal_theme():$/;"	f
reset_key_events	pyvista/plotting/plotter.py	/^    def reset_key_events(self):$/;"	m	class:BasePlotter
reset_opacities	pyvista/plotting/composite_mapper.py	/^    def reset_opacities(self):$/;"	m	class:CompositeAttributes
reset_pickabilities	pyvista/plotting/composite_mapper.py	/^    def reset_pickabilities(self):$/;"	m	class:CompositeAttributes
reset_picker	pyvista/plotting/render_window_interactor.py	/^    def reset_picker(self):$/;"	m	class:RenderWindowInteractor
reset_pyvista	doc/source/conf.py	/^reset_pyvista = ResetPyVista()$/;"	v
reset_visibilities	pyvista/plotting/composite_mapper.py	/^    def reset_visibilities(self):$/;"	m	class:CompositeAttributes
resize	pyvista/plotting/background_renderer.py	/^    def resize(self, *args):$/;"	m	class:BackgroundRenderer
resolution	examples/00-load/create-parametric-geometric-objects.py	/^resolution = 100$/;"	v
resolution	examples/01-filter/extrude-rotate.py	/^resolution = 10$/;"	v
resolution	examples/02-plot/plot-over-line.py	/^    resolution=10000,$/;"	v
resolution	pyvista/core/utilities/geometric_objects.py	/^        resolution=resolution,$/;"	v
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self) -> int:$/;"	m	class:ConeSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self, resolution: int):$/;"	m	class:ConeSource
restore_defaults	pyvista/plotting/themes.py	/^    def restore_defaults(self):  # numpydoc ignore=GL08$/;"	m	class:Theme
restripped	examples/00-load/create-polydata-strips.py	/^restripped = trimesh.strip()$/;"	v
result	examples/01-filter/boolean-operations.py	/^result = cube.boolean_difference(sphere)$/;"	v
result	examples/01-filter/boolean-operations.py	/^result = sphere_a.boolean_difference(sphere_b)$/;"	v
result	examples/01-filter/boolean-operations.py	/^result = sphere_a.boolean_intersection(sphere_b)$/;"	v
result	examples/01-filter/boolean-operations.py	/^result = sphere_a.boolean_union(sphere_b)$/;"	v
result	examples/01-filter/resample.py	/^result = mesh.sample(data_to_probe)$/;"	v
result	examples/01-filter/using-filters.py	/^result = dataset.threshold().elevation().clip(normal="z").slice_orthogonal()$/;"	v
retry_if_failed	pyvista/examples/downloads.py	/^    retry_if_failed=3,$/;"	v
retry_if_failed	pyvista/examples/gltf.py	/^    retry_if_failed=3,$/;"	v
return_cpos	pyvista/_plot.py	/^        return_cpos=return_cpos,$/;"	v
return_cpos	pyvista/plotting/themes.py	/^    def return_cpos(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
return_cpos	pyvista/plotting/themes.py	/^    def return_cpos(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
return_img	pyvista/_plot.py	/^        return_img=return_img,$/;"	v
return_source	examples/01-filter/streamlines.py	/^    return_source=True,$/;"	v
return_viewer	pyvista/_plot.py	/^        return_viewer=return_viewer,$/;"	v
reverse	pyvista/core/composite.py	/^    def reverse(self):$/;"	m	class:MultiBlock
rfft	examples/01-filter/image-fft.py	/^rfft = fft_image.rfft()$/;"	v
rfft	pyvista/core/filters/image_data.py	/^    def rfft(self, output_scalars_name=None, progress_bar=False):$/;"	m	class:ImageDataFilters
rgba	examples/02-plot/point-clouds.py	/^    rgba=True,$/;"	v
rgba	examples/02-plot/point-clouds.py	/^rgba = points - points.min(axis=0)$/;"	v
rgba	examples/02-plot/texture.py	/^rgba = examples.download_rgba_texture()$/;"	v
rho	examples/99-advanced/warp-by-vector-eigenmodes.py	/^rho = 8.0  # g\/cm^3$/;"	v
ribbon	examples/00-load/create-spline.py	/^ribbon = spline.compute_arc_length().ribbon(width=0.75, scalars='arc_length')$/;"	v
ribbon	pyvista/core/filters/poly_data.py	/^    def ribbon($/;"	m	class:PolyDataFilters
rmtx	pyvista/core/utilities/geometric_objects.py	/^        rmtx = np.array([vx, vy, direction])$/;"	v
rng	examples/00-load/linear-cells.py	/^rng = np.random.default_rng(2)$/;"	v
rng	examples/01-filter/compute-volume.py	/^rng = dataset.get_data_range()$/;"	v
rng	examples/01-filter/sampling_functions_2d.py	/^rng = z.max() - z.min()$/;"	v
rng	examples/02-plot/chart_basics.py	/^rng = np.random.default_rng(1)  # Seeded random number generator for consistent data generation$/;"	v
rng	examples/02-plot/point-clouds.py	/^rng = np.random.default_rng()$/;"	v
rng	examples/03-widgets/multi-slider-widget.py	/^    rng=[0.1, 1.5],$/;"	v
rng	examples/03-widgets/multi-slider-widget.py	/^    rng=[3, 60],$/;"	v
rng	examples/03-widgets/multi-slider-widget.py	/^    rng=[3, 60],$/;"	v	class:MyCustomRoutine
rng	examples/99-advanced/openfoam-tubes.py	/^    rng=(0, 212),$/;"	v
rng_int	examples/01-filter/glyphs_table.py	/^rng_int = np.array($/;"	v
rnge	examples/04-lights/shadows.py	/^rnge = (bounds[1] - bounds[0], bounds[3] - bounds[2], bounds[5] - bounds[4])$/;"	v
roi	examples/01-filter/clipping.py	/^roi = pv.Cube(center=(0.9e3, 0.2e3, mesh.center[2]), x_length=500, y_length=500, z_length=500)$/;"	v
roll	pyvista/plotting/camera.py	/^    def roll(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
roll	pyvista/plotting/camera.py	/^    def roll(self, angle):  # numpydoc ignore=GL08$/;"	m	class:Camera
roman	examples/00-load/create-parametric-geometric-objects.py	/^roman = pv.ParametricRoman()$/;"	v
rome	examples/01-filter/geodesic.py	/^rome = land.find_closest_point((0.718047, 0.163038, 0.676684))$/;"	v
room	examples/02-plot/depth-peeling.py	/^room = examples.download_room_surface_mesh()$/;"	v
rot	examples/01-filter/extract-cells-inside-surface.py	/^rot = mesh.rotate_y(90, inplace=False)$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.copy()$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.rotate_x(60 * i, point=axes.origin, inplace=False)$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.rotate_y(60 * i, point=axes.origin, inplace=False)$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.rotate_z(60 * i, point=axes.origin, inplace=False)$/;"	v
rot120	examples/04-lights/actors.py	/^rot120 = np.array([[-0.5, -np.sqrt(3) \/ 2, 0], [np.sqrt(3) \/ 2, -0.5, 0], [0, 0, 1]])$/;"	v
rotate_ccw	pyvista/plotting/texture.py	/^    def rotate_ccw(self) -> 'Texture':$/;"	m	class:Texture
rotate_cw	pyvista/plotting/texture.py	/^    def rotate_cw(self) -> 'Texture':$/;"	m	class:Texture
rotate_vector	pyvista/core/dataset.py	/^    def rotate_vector($/;"	m	class:DataSet
rotate_x	pyvista/core/dataset.py	/^    def rotate_x($/;"	m	class:DataSet
rotate_x	pyvista/plotting/prop3d.py	/^    def rotate_x(self, angle: float):$/;"	m	class:Prop3D
rotate_y	pyvista/core/dataset.py	/^    def rotate_y($/;"	m	class:DataSet
rotate_y	pyvista/plotting/prop3d.py	/^    def rotate_y(self, angle: float):$/;"	m	class:Prop3D
rotate_z	pyvista/core/dataset.py	/^    def rotate_z($/;"	m	class:DataSet
rotate_z	pyvista/plotting/prop3d.py	/^    def rotate_z(self, angle: float):$/;"	m	class:Prop3D
roughness	examples/02-plot/backface_props.py	/^    roughness=0.2,$/;"	v
roughness	pyvista/plotting/_property.py	/^    def roughness(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
roughness	pyvista/plotting/_property.py	/^    def roughness(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Property
roughness	pyvista/plotting/actor_properties.py	/^    def roughness(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
roughness	pyvista/plotting/actor_properties.py	/^    def roughness(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
roughness	pyvista/plotting/themes.py	/^    def roughness(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
roughness	pyvista/plotting/themes.py	/^    def roughness(self, roughness: float):  # numpydoc ignore=GL08$/;"	m	class:_LightingConfig
row_array	pyvista/core/utilities/arrays.py	/^def row_array(obj, name):$/;"	f
row_arrays	pyvista/core/objects.py	/^    def row_arrays(self):  # numpydoc ignore=RT01$/;"	m	class:Table
row_plot	examples/01-filter/subdivide.py	/^    def row_plot(row, subfilter):$/;"	f	function:plot_subdivisions
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:ColorSchemeTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:ColorTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:LineStyleTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:MarkerStyleTable
row_weights	examples/02-plot/multi-window.py	/^row_weights = [0.5, 1, 1, 2, 1]$/;"	v
run	pyvista/ext/plot_directive.py	/^    def run(self):$/;"	m	class:PlotDirective
run	pyvista/ext/plot_directive.py	/^def run(arguments, content, options, state_machine, state, lineno):$/;"	f
run	pyvista/ext/viewer_directive.py	/^    def run(self):  # pragma: no cover$/;"	m	class:OfflineViewerDirective
run_image_filter	pyvista/plotting/utilities/regression.py	/^def run_image_filter(imfilter: _vtk.vtkWindowToImageFilter):$/;"	f
s	examples/02-plot/lighting_mesh.py	/^s = 1.0$/;"	v
sactor	tests/plotting/test_theme.py	/^        sactor = pl.add_mesh(sphere)$/;"	v	class:test_user_theme.MyTheme
sactor	tests/plotting/test_theme.py	/^        sactor = pl.add_mesh(sphere, pbr=True)$/;"	v	class:test_user_theme.MyTheme
samp_z_stress	examples/99-advanced/fea-hertzian-contact-pressure.py	/^samp_z_stress = -sampled['Stress'][:, 2]$/;"	v
sample	pyvista/core/filters/composite.py	/^    sample = DataSetFilters.sample$/;"	v	class:CompositeFilters
sample	pyvista/core/filters/data_set.py	/^    def sample($/;"	m	class:DataSetFilters
sample_function	pyvista/core/utilities/features.py	/^def sample_function($/;"	f
sample_over_circular_arc	pyvista/core/filters/data_set.py	/^    def sample_over_circular_arc($/;"	m	class:DataSetFilters
sample_over_circular_arc_normal	pyvista/core/filters/data_set.py	/^    def sample_over_circular_arc_normal($/;"	m	class:DataSetFilters
sample_over_line	pyvista/core/filters/data_set.py	/^    def sample_over_line(self, pointa, pointb, resolution=None, tolerance=None, progress_bar=False):$/;"	m	class:DataSetFilters
sample_over_multiple_lines	pyvista/core/filters/data_set.py	/^    def sample_over_multiple_lines(self, points, tolerance=None, progress_bar=False):$/;"	m	class:DataSetFilters
sample_test	tests/core/test_dataset_filters.py	/^    def sample_test(**kwargs):$/;"	f	function:test_sample
sampled	examples/01-filter/image-fft-perlin-noise.py	/^sampled = pv.sample_function(noise, bounds=(0, 10, 0, 10, 0, 10), dim=(xdim, ydim, 1))$/;"	v
sampled	examples/01-filter/sampling_functions_2d.py	/^sampled = pv.sample_function(noise, bounds=(-10, 10, -10, 10, -10, 10), dim=(500, 500, 1))$/;"	v
sampled	examples/99-advanced/fea-hertzian-contact-pressure.py	/^sampled = line.sample(mesh, tolerance=1e-3)$/;"	v
sampled_fft	examples/01-filter/image-fft-perlin-noise.py	/^sampled_fft = sampled.fft()$/;"	v
sargs	examples/01-filter/streamlines.py	/^sargs = dict(vertical=True, title_font_size=16)$/;"	v
sargs	examples/02-plot/scalar-bars.py	/^sargs = dict($/;"	v
sargs	examples/02-plot/scalar-bars.py	/^sargs = dict(height=0.25, vertical=True, position_x=0.05, position_y=0.05)$/;"	v
sargs	examples/02-plot/scalar-bars.py	/^sargs = dict(interactive=True)  # Simply make the bar interactive$/;"	v
saturation_range	pyvista/plotting/lookup_table.py	/^    def saturation_range(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
saturation_range	pyvista/plotting/lookup_table.py	/^    def saturation_range(self, value: tuple):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
saturn	examples/99-advanced/planets.py	/^saturn = examples.planets.load_saturn(radius=60268.0)$/;"	v
saturn_rings	examples/99-advanced/planets.py	/^saturn_rings = examples.planets.load_saturn_rings(inner=inner, outer=outer, c_res=50)$/;"	v
saturn_rings_texture	examples/99-advanced/planets.py	/^saturn_rings_texture = examples.planets.download_saturn_rings(texture=True)$/;"	v
saturn_texture	examples/99-advanced/planets.py	/^saturn_texture = examples.planets.download_saturn_surface(texture=True)$/;"	v
save	pyvista/core/dataobject.py	/^    def save(self, filename: str, binary=True, texture=None):$/;"	m	class:DataObject
save	pyvista/core/objects.py	/^    def save(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:Table
save	pyvista/core/pointset.py	/^    def save(self, filename, binary=True):$/;"	m	class:ExplicitStructuredGrid
save	pyvista/core/pointset.py	/^    def save(self, filename, binary=True, texture=None, recompute_normals=True):$/;"	m	class:PolyData
save	pyvista/plotting/themes.py	/^    def save(self, filename):$/;"	m	class:Theme
save_frame	examples/99-advanced/sphere_eversion.py	/^def save_frame(x, y, z):$/;"	f
save_graphic	pyvista/plotting/plotter.py	/^    def save_graphic(self, filename, title='PyVista Export', raster=True, painter=True):$/;"	m	class:BasePlotter
save_meshio	pyvista/core/utilities/fileio.py	/^def save_meshio(filename, mesh, file_format=None, **kwargs):$/;"	f
saved_file	examples/00-load/read-dolfin.py	/^saved_file = examples.download_file("dolfin_fine.xml")$/;"	v
scalar	examples/02-plot/spherical.py	/^scalar = u_vec**2 + v_vec**2$/;"	v
scalar_3d	examples/02-plot/spherical.py	/^scalar_3d = ($/;"	v
scalar_bar	pyvista/plotting/plotter.py	/^    def scalar_bar(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scalar_bar_args	examples/01-filter/connectivity.py	/^    scalar_bar_args=scalar_bar_args,$/;"	v
scalar_bar_args	examples/01-filter/connectivity.py	/^scalar_bar_args = dict($/;"	v
scalar_bar_args	examples/01-filter/integrate-data.py	/^    scalar_bar_args=dict(vertical=True, title_font_size=16),$/;"	v
scalar_bar_args	examples/01-filter/streamlines.py	/^    scalar_bar_args=sargs,$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': "Colorcet Fire (No Lighting)"},$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': "Colorcet Fire"},$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': "Matplotlib Hot (No Lighting)"},$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': "Matplotlib Hot"},$/;"	v
scalar_bar_args	examples/02-plot/gif.py	/^    scalar_bar_args={"title": "Height"},$/;"	v
scalar_bar_args	examples/02-plot/interpolate-before-map.py	/^    scalar_bar_args={'title': 'Elevation - not interpolated'},$/;"	v
scalar_bar_args	examples/02-plot/interpolate-before-map.py	/^    scalar_bar_args={'title': 'RTData - interpolated'},$/;"	v
scalar_bar_args	examples/02-plot/interpolate-before-map.py	/^    scalar_bar_args={'title': 'RTData - not interpolated'},$/;"	v
scalar_bar_args	examples/99-advanced/fea-hertzian-contact-pressure.py	/^    scalar_bar_args={'title': 'Z Component Stress (Pa)', 'color': 'w'},$/;"	v
scalar_bar_args	examples/99-advanced/openfoam-cooling.py	/^    scalar_bar_args={'title': 'Temperature'},$/;"	v
scalar_bar_args	examples/99-advanced/openfoam-tubes.py	/^    scalar_bar_args={'title': 'Flow Velocity'},$/;"	v
scalar_bar_args	examples/99-advanced/openfoam-tubes.py	/^    scalar_bar_args={'title': 'Turbulent Kinematic Viscosity'},$/;"	v
scalar_bars	pyvista/plotting/plotter.py	/^    def scalar_bars(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scalar_bars	tests/plotting/test_scalar_bars.py	/^def scalar_bars(sphere):$/;"	f
scalar_map_mode	pyvista/plotting/mapper.py	/^    def scalar_map_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_map_mode	pyvista/plotting/mapper.py	/^    def scalar_map_mode(self, scalar_mode: Union[str, FieldAssociation]):  # numpydoc ignore=GL08$/;"	m	class:_BaseMapper
scalar_range	examples/01-filter/compute-volume.py	/^scalar_range = [0, 77]  # Range corresponding to bottom 15% of values$/;"	v
scalar_range	pyvista/plotting/lookup_table.py	/^    def scalar_range(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
scalar_range	pyvista/plotting/lookup_table.py	/^    def scalar_range(self, value: tuple):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self, clim):  # numpydoc ignore=GL08$/;"	m	class:_BaseMapper
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self, clim):  # numpydoc ignore=GL08$/;"	m	class:_BaseVolumeMapper
scalar_visibility	pyvista/plotting/mapper.py	/^    def scalar_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_visibility	pyvista/plotting/mapper.py	/^    def scalar_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:_BaseMapper
scalars	examples/00-load/create-poly.py	/^    scalars=np.arange(3),$/;"	v
scalars	examples/00-load/create-truss.py	/^    scalars=colors,$/;"	v
scalars	examples/00-load/wrap-trimesh.py	/^    scalars=points[:, 2],$/;"	v
scalars	examples/01-filter/clipping-with-surface.py	/^    scalars="implicit_distance",$/;"	v
scalars	examples/01-filter/image-fft.py	/^    scalars=np.abs(data),$/;"	v
scalars	examples/01-filter/image-fft.py	/^    scalars=np.abs(fft_image.point_data['PNGImage']),$/;"	v
scalars	examples/01-filter/integrate-data.py	/^    scalars="normal_velocity",$/;"	v
scalars	examples/01-filter/sampling_functions_2d.py	/^    scalars=z,$/;"	v
scalars	examples/01-filter/streamlines.py	/^    scalars="IntegrationTime",$/;"	v
scalars	examples/02-plot/cmap.py	/^    scalars='Elevation',$/;"	v
scalars	examples/02-plot/cmap.py	/^scalars = np.empty(mesh.n_points)$/;"	v
scalars	examples/02-plot/gif.py	/^    scalars=z.ravel(),$/;"	v
scalars	examples/02-plot/opacity.py	/^    scalars='Temperature',$/;"	v
scalars	examples/02-plot/point-clouds.py	/^    scalars=points[:, 2],$/;"	v
scalars	examples/02-plot/point-clouds.py	/^    scalars=rgba,$/;"	v
scalars	examples/02-plot/point-clouds.py	/^    scalars=scalars,$/;"	v
scalars	examples/02-plot/point-clouds.py	/^scalars = np.linalg.norm(cloud.points - cloud.center, axis=1)$/;"	v
scalars	examples/02-plot/vector-component.py	/^    scalars="Nodal Displacement",$/;"	v
scalars	examples/02-plot/vertices.py	/^    scalars=surf_points[:, 1],$/;"	v
scalars	examples/99-advanced/atomic-orbitals.py	/^    scalars=np.abs(grid['real_wf']),$/;"	v
scalars	examples/99-advanced/fea-hertzian-contact-pressure.py	/^    scalars=z_stress,$/;"	v
scalars	examples/99-advanced/magnetic-fields.py	/^    scalars=scalars,$/;"	v
scalars	examples/99-advanced/magnetic-fields.py	/^scalars = np.linalg.norm(grid['B'], axis=1)$/;"	v
scalars	examples/99-advanced/openfoam-cooling.py	/^    scalars='T',$/;"	v
scalars	examples/99-advanced/openfoam-tubes.py	/^    scalars='U',$/;"	v
scalars	examples/99-advanced/openfoam-tubes.py	/^    scalars='nut',$/;"	v
scalars	examples/99-advanced/pump-bracket.py	/^    scalars='disp_3',$/;"	v
scalars	pyvista/demos/logo.py	/^        scalars='scalars',$/;"	v
scalars	pyvista/demos/logo.py	/^    scalars = grid.points[cells[:, 1], 1]$/;"	v
scalars	pyvista/demos/logo.py	/^    scalars = mesh.points[:, 0]$/;"	v
scalars_rng	examples/02-plot/lookup-table.py	/^scalars_rng = (bracket.active_scalars.min(), bracket.active_scalars.max())$/;"	v
scale	examples/00-load/create-point-cloud.py	/^    scale=False,$/;"	v
scale	pyvista/core/dataset.py	/^    def scale($/;"	m	class:DataSet
scale	pyvista/core/utilities/geometric_objects.py	/^        scale = float(np.linalg.norm(direction))$/;"	v
scale	pyvista/plotting/plotter.py	/^    def scale(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scale	pyvista/plotting/plotter.py	/^    def scale(self, scale):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
scale	pyvista/plotting/prop3d.py	/^    def scale(self) -> Tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
scale	pyvista/plotting/prop3d.py	/^    def scale(self, value: Vector):  # numpydoc ignore=GL08$/;"	m	class:Prop3D
scale_factor	pyvista/plotting/mapper.py	/^    def scale_factor(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
scale_factor	pyvista/plotting/mapper.py	/^    def scale_factor(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:PointGaussianMapper
scale_factor	tests/core/test_dataset_filters.py	/^    def scale_factor(self):$/;"	m	class:InterrogateVTKGlyph3D
scale_mode	tests/core/test_dataset_filters.py	/^    def scale_mode(self):$/;"	m	class:InterrogateVTKGlyph3D
scale_point	pyvista/plotting/renderer.py	/^def scale_point(camera, point, invert=False):$/;"	f
scaling	tests/core/test_dataset_filters.py	/^    def scaling(self):$/;"	m	class:InterrogateVTKGlyph3D
scatter	pyvista/plotting/charts.py	/^    def scatter(self, x, y, color="b", size=10, style="o", label=""):$/;"	m	class:Chart2D
scatter_plot_2d	tests/plotting/test_charts.py	/^def scatter_plot_2d(chart_2d):$/;"	f
screen	examples/04-lights/attenuation.py	/^        screen = pv.Plane(center=(light_x, plane_y, 0), direction=(0, 1, 0), i_size=5, j_size=5)$/;"	v
screen	examples/04-lights/shadows.py	/^    screen = pyvista.Plane(center=(0, plane_y, 0), direction=(0, 1, 0), i_size=5, j_size=5)$/;"	v
screenshot	pyvista/_plot.py	/^        screenshot=screenshot,$/;"	v
screenshot	pyvista/plotting/plotter.py	/^    def screenshot($/;"	m	class:BasePlotter
screenshot	pyvista/trame/ui/base_viewer.py	/^    def screenshot(self):$/;"	m	class:BaseViewer
scurve	examples/02-plot/moving_cmap.py	/^def scurve(t):$/;"	f
seed	examples/99-advanced/magnetic-fields.py	/^seed = pv.Disc(inner=1, outer=5.4, r_res=2, c_res=12)$/;"	v
seed_mesh	examples/01-filter/streamlines.py	/^seed_mesh = source_mesh.decimate_boundary(0.4)$/;"	v
select	examples/01-filter/extract-cells-inside-surface.py	/^select = mesh.select_enclosed_points(rot)$/;"	v
select	pyvista/trame/ui/vuetify2.py	/^def select(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
select	pyvista/trame/ui/vuetify3.py	/^def select(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
select_enclosed_points	pyvista/core/filters/data_set.py	/^    def select_enclosed_points($/;"	m	class:DataSetFilters
send_errors_to_logging	pyvista/core/utilities/observers.py	/^def send_errors_to_logging():$/;"	f
separate_cells	pyvista/core/filters/data_set.py	/^    def separate_cells(self):$/;"	m	class:DataSetFilters
separate_cells	pyvista/core/pointset.py	/^    def separate_cells(self, *args, **kwargs):$/;"	m	class:PointSet
separating_distance	examples/01-filter/streamlines_2D.py	/^    separating_distance=3,$/;"	v
separating_distance	examples/99-advanced/openfoam-example.py	/^    separating_distance=1,$/;"	v
separating_distance_ratio	examples/01-filter/streamlines_2D.py	/^    separating_distance_ratio=0.2,$/;"	v
separating_distance_ratio	examples/99-advanced/openfoam-example.py	/^    separating_distance_ratio=0.1,$/;"	v
server	examples_trame/advanced/contour.py	/^server = get_server()$/;"	v
server	examples_trame/advanced/custom_ui.py	/^server = get_server()$/;"	v
server	examples_trame/basic/PyVistaLocalView.py	/^server = get_server()$/;"	v
server	examples_trame/basic/PyVistaRemoteLocalView.py	/^server = get_server()$/;"	v
server	examples_trame/basic/PyVistaRemoteView.py	/^server = get_server()$/;"	v
server	examples_trame/basic/actor_color.py	/^server = get_server()$/;"	v
server	examples_trame/basic/algorithm.py	/^server = get_server()$/;"	v
server	examples_trame/basic/file_viewer.py	/^server = get_server()$/;"	v
server	examples_trame/basic/mesh_scalars.py	/^server = get_server()$/;"	v
server	examples_trame/basic/multi_views.py	/^server = get_server()$/;"	v
server	examples_trame/basic/ui_template.py	/^server = get_server()$/;"	v
server	examples_trame/validation/many_actors.py	/^server = get_server()$/;"	v
server	pyvista/trame/jupyter.py	/^        server = get_server(name=name)$/;"	v
server	pyvista/trame/jupyter.py	/^        server = get_server(name=pyvista.global_theme.trame.jupyter_server_name)$/;"	v
server_proxy_enabled	pyvista/plotting/themes.py	/^    def server_proxy_enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
server_proxy_enabled	pyvista/plotting/themes.py	/^    def server_proxy_enabled(self, enabled: bool):  # numpydoc ignore=GL08$/;"	m	class:_TrameConfig
server_proxy_enabled	pyvista/trame/jupyter.py	/^        server_proxy_enabled = pyvista.global_theme.trame.server_proxy_enabled$/;"	v
server_proxy_enabled	pyvista/trame/jupyter.py	/^        server_proxy_enabled=server_proxy_enabled,$/;"	v
server_proxy_prefix	pyvista/plotting/themes.py	/^    def server_proxy_prefix(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
server_proxy_prefix	pyvista/plotting/themes.py	/^    def server_proxy_prefix(self, prefix: str):  # numpydoc ignore=GL08$/;"	m	class:_TrameConfig
server_proxy_prefix	pyvista/trame/jupyter.py	/^            server_proxy_prefix = pyvista.global_theme.trame.server_proxy_prefix$/;"	v
server_proxy_prefix	pyvista/trame/jupyter.py	/^        server_proxy_prefix=server_proxy_prefix,$/;"	v
set_active_renderer	pyvista/plotting/renderers.py	/^    def set_active_renderer(self, index_row, index_column=None):$/;"	m	class:Renderers
set_active_scalars	pyvista/core/composite.py	/^    def set_active_scalars($/;"	m	class:MultiBlock
set_active_scalars	pyvista/core/dataset.py	/^    def set_active_scalars(self, name: Optional[str], preference='cell'):$/;"	m	class:DataSet
set_active_tensors	pyvista/core/dataset.py	/^    def set_active_tensors(self, name: Optional[str], preference='point'):$/;"	m	class:DataSet
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):  # noqa: D102$/;"	m	class:EnSightReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):  # noqa: D102$/;"	m	class:OpenFOAMReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):  # noqa: D102$/;"	m	class:PVDReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):$/;"	m	class:TimeReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:EnSightReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:OpenFOAMReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:PVDReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:XdmfReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):$/;"	m	class:TimeReader
set_active_vectors	pyvista/core/dataset.py	/^    def set_active_vectors(self, name: Optional[str], preference='point'):$/;"	m	class:DataSet
set_algorithm_input	pyvista/plotting/utilities/algorithms.py	/^def set_algorithm_input(alg, inp, port=0):$/;"	f
set_array	pyvista/core/datasetattributes.py	/^    def set_array($/;"	m	class:DataSetAttributes
set_background	pyvista/plotting/plotter.py	/^    def set_background(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_background	pyvista/plotting/renderer.py	/^    def set_background(self, color, top=None):$/;"	m	class:Renderer
set_background	pyvista/plotting/renderers.py	/^    def set_background(self, color, top=None, all_renderers=True):$/;"	m	class:Renderers
set_block_name	pyvista/core/composite.py	/^    def set_block_name(self, index: int, name: Optional[str]):$/;"	m	class:MultiBlock
set_camera_light	pyvista/plotting/lights.py	/^    def set_camera_light(self):$/;"	m	class:Light
set_chart_interaction	pyvista/plotting/plotter.py	/^    def set_chart_interaction(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_chart_interaction	pyvista/plotting/renderer.py	/^    def set_chart_interaction(self, interactive, toggle=False):  # numpydoc ignore=PR01,RT01$/;"	m	class:Renderer
set_chart_interaction	pyvista/plotting/renderers.py	/^    def set_chart_interaction(self, interactive, toggle=False):$/;"	m	class:Renderers
set_color_cycler	pyvista/plotting/plotter.py	/^    def set_color_cycler(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_color_cycler	pyvista/plotting/renderer.py	/^    def set_color_cycler(self, color_cycler):$/;"	m	class:Renderer
set_color_cycler	pyvista/plotting/renderers.py	/^    def set_color_cycler(self, color_cycler, all_renderers=True):$/;"	m	class:Renderers
set_custom_opacity	pyvista/plotting/mapper.py	/^    def set_custom_opacity(self, opacity, color, n_colors, preference='point'):$/;"	m	class:DataSetMapper
set_default_active_scalars	pyvista/core/utilities/arrays.py	/^def set_default_active_scalars(mesh: 'pyvista.DataSet') -> None:$/;"	f
set_default_active_vectors	pyvista/core/utilities/arrays.py	/^def set_default_active_vectors(mesh: 'pyvista.DataSet') -> None:$/;"	f
set_direction_angle	pyvista/plotting/lights.py	/^    def set_direction_angle(self, elev, azim):$/;"	m	class:Light
set_environment_texture	pyvista/plotting/plotter.py	/^    def set_environment_texture(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_environment_texture	pyvista/plotting/renderer.py	/^    def set_environment_texture(self, texture, is_srgb=False):$/;"	m	class:Renderer
set_error_output_file	pyvista/core/utilities/observers.py	/^def set_error_output_file(filename):$/;"	f
set_focus	pyvista/plotting/plotter.py	/^    def set_focus(self, *args, render=True, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_focus	pyvista/plotting/renderer.py	/^    def set_focus(self, point):$/;"	m	class:Renderer
set_font_file	pyvista/plotting/text.py	/^    def set_font_file(self, font_file: str):$/;"	m	class:TextProperty
set_headlight	pyvista/plotting/lights.py	/^    def set_headlight(self):$/;"	m	class:Light
set_interaction	pyvista/plotting/charts.py	/^    def set_interaction(self, interactive, toggle=False):$/;"	m	class:Charts
set_jupyter_backend	pyvista/jupyter/__init__.py	/^def set_jupyter_backend(backend, name=None, **kwargs):$/;"	f
set_log_scale	examples_trame/basic/mesh_scalars.py	/^def set_log_scale(log_scale=False, **kwargs):$/;"	f
set_max	examples/02-plot/lookup-table.py	/^    def set_max(max_value):$/;"	f	function:make_double_slider
set_max_alpha	examples/02-plot/lookup-table.py	/^def set_max_alpha(max_value):$/;"	f
set_min	examples/02-plot/lookup-table.py	/^    def set_min(min_value):$/;"	f	function:make_double_slider
set_min_alpha	examples/02-plot/lookup-table.py	/^def set_min_alpha(min_value):$/;"	f
set_mpl	tests/conftest.py	/^def set_mpl():$/;"	f
set_picker	pyvista/plotting/render_window_interactor.py	/^    def set_picker(self, picker):$/;"	m	class:RenderWindowInteractor
set_pickle_format	pyvista/core/utilities/fileio.py	/^def set_pickle_format(format: str):$/;"	f
set_plot_theme	pyvista/plotting/themes.py	/^def set_plot_theme(theme):$/;"	f
set_position	pyvista/plotting/plotter.py	/^    def set_position(self, *args, render=True, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_position	pyvista/plotting/renderer.py	/^    def set_position(self, point, reset=False, render=True):$/;"	m	class:Renderer
set_render_window	pyvista/plotting/render_window_interactor.py	/^    def set_render_window(self, render_window):$/;"	m	class:RenderWindowInteractor
set_scalars	examples_trame/basic/mesh_scalars.py	/^def set_scalars(scalars=mesh.active_scalars_name, **kwargs):$/;"	f
set_scalars	pyvista/core/datasetattributes.py	/^    def set_scalars($/;"	m	class:DataSetAttributes
set_scalars	pyvista/plotting/composite_mapper.py	/^    def set_scalars($/;"	m	class:CompositePolyDataMapper
set_scalars	pyvista/plotting/mapper.py	/^    def set_scalars($/;"	m	class:DataSetMapper
set_scale	pyvista/plotting/plotter.py	/^    def set_scale(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_scale	pyvista/plotting/renderer.py	/^    def set_scale(self, xscale=None, yscale=None, zscale=None, reset_camera=True, render=True):$/;"	m	class:Renderer
set_scene_light	pyvista/plotting/lights.py	/^    def set_scene_light(self):$/;"	m	class:Light
set_text	pyvista/plotting/text.py	/^    def set_text(self, position, text):$/;"	m	class:CornerAnnotation
set_unique_colors	pyvista/plotting/composite_mapper.py	/^    def set_unique_colors(self):$/;"	m	class:CompositePolyDataMapper
set_vectors	pyvista/core/datasetattributes.py	/^    def set_vectors($/;"	m	class:DataSetAttributes
set_viewup	pyvista/plotting/plotter.py	/^    def set_viewup(self, *args, render=True, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_viewup	pyvista/plotting/renderer.py	/^    def set_viewup(self, vector, reset=True, render=True):$/;"	m	class:Renderer
set_visibility	examples/99-advanced/customization-trame-toolbar.py	/^def set_visibility(visibility, **kwargs):$/;"	f
set_visibility	tests/plotting/jupyter/test_trame.py	/^    def set_visibility(visibility, **kwargs):$/;"	f	function:test_trame_custom_menu_items
set_vtkwriter_mode	pyvista/core/utilities/fileio.py	/^def set_vtkwriter_mode(vtk_writer, use_binary=True):$/;"	f
setup	doc/source/conf.py	/^def setup(app):$/;"	f
setup	pyvista/ext/coverage.py	/^def setup(app: Sphinx) -> Dict[str, Any]:$/;"	f
setup	pyvista/ext/plot_directive.py	/^def setup(app):$/;"	f
setup	pyvista/ext/viewer_directive.py	/^def setup(app):$/;"	f
sextant_file	examples/00-load/load-vrml.py	/^sextant_file = examples.vrml.download_sextant()$/;"	v
shade	pyvista/plotting/volume_property.py	/^    def shade(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
shade	pyvista/plotting/volume_property.py	/^    def shade(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
shading	pyvista/plotting/actor_properties.py	/^    def shading(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
shading	pyvista/plotting/actor_properties.py	/^    def shading(self, is_active: bool):  # numpydoc ignore=GL08$/;"	m	class:ActorProperties
shadow	examples/02-plot/scalar-bars.py	/^    shadow=True,$/;"	v
shadow_attenuation	examples/04-lights/shadows.py	/^    shadow_attenuation=0.95,$/;"	v
shadow_attenuation	pyvista/plotting/lights.py	/^    def shadow_attenuation(self):  # numpydoc ignore=RT01$/;"	m	class:Light
shadow_attenuation	pyvista/plotting/lights.py	/^    def shadow_attenuation(self, value):  # numpydoc ignore=GL08$/;"	m	class:Light
shadow_renderer	pyvista/plotting/renderers.py	/^    def shadow_renderer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
shaft_length	pyvista/plotting/axes_actor.py	/^    def shaft_length(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
shaft_length	pyvista/plotting/axes_actor.py	/^    def shaft_length(self, length):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
shaft_type	pyvista/plotting/axes_actor.py	/^    def shaft_type(self) -> ShaftType:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
shaft_type	pyvista/plotting/axes_actor.py	/^    def shaft_type(self, shaft_type: Union[ShaftType, int]):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
shallow_copy	pyvista/core/dataobject.py	/^    def shallow_copy(self, to_copy: _vtk.vtkDataObject) -> _vtk.vtkDataObject:$/;"	m	class:DataObject
shallow_copy	pyvista/core/pointset.py	/^    def shallow_copy(self, to_copy):$/;"	m	class:_PointSet
shape	examples/02-plot/multi-window.py	/^shape = (5, 4)  # 5 by 4 grid$/;"	v
shape	pyvista/plotting/plotter.py	/^    def shape(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
shape	pyvista/plotting/renderers.py	/^    def shape(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
sharp_edges_feature_angle	pyvista/plotting/themes.py	/^    def sharp_edges_feature_angle(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
sharp_edges_feature_angle	pyvista/plotting/themes.py	/^    def sharp_edges_feature_angle(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Theme
shifted	examples/04-lights/mesh_lighting.py	/^shifted = horse.translate((0, 10, 0), inplace=False)$/;"	v
show	pyvista/plotting/charts.py	/^    def show($/;"	m	class:_Chart
show	pyvista/plotting/plotter.py	/^    def show($/;"	m	class:Plotter
show	pyvista/plotting/themes.py	/^    def show(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
show	pyvista/plotting/themes.py	/^    def show(self, show: bool):  # numpydoc ignore=GL08$/;"	m	class:_AxesConfig
show	tests/plotting/test_picking.py	/^        show=True,$/;"	v	class:test_single_cell_picking.PickCallback
show_actor	pyvista/plotting/axes.py	/^    def show_actor(self):$/;"	m	class:Axes
show_actor	pyvista/plotting/lights.py	/^    def show_actor(self):$/;"	m	class:Light
show_axes	pyvista/_plot.py	/^        show_axes = pl.theme.axes.show$/;"	v
show_axes	pyvista/plotting/plotter.py	/^    def show_axes(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_axes	pyvista/plotting/renderer.py	/^    def show_axes(self):$/;"	m	class:Renderer
show_axes_all	pyvista/plotting/plotter.py	/^    def show_axes_all(self):$/;"	m	class:BasePlotter
show_bounds	pyvista/plotting/plotter.py	/^    def show_bounds(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_bounds	pyvista/plotting/renderer.py	/^    def show_bounds($/;"	m	class:Renderer
show_cells	pyvista/core/pointset.py	/^    def show_cells(self, inplace=False) -> 'ExplicitStructuredGrid':$/;"	m	class:ExplicitStructuredGrid
show_edges	examples/00-load/create-poly.py	/^    show_edges=True,$/;"	v
show_edges	examples/01-filter/clipping-with-surface.py	/^    show_edges=True,$/;"	v
show_edges	examples/01-filter/sampling_functions_3d.py	/^    show_edges=False,$/;"	v
show_edges	examples/02-plot/gif.py	/^    show_edges=True,$/;"	v
show_edges	examples/02-plot/movie_glyphs.py	/^    show_edges=False,$/;"	v
show_edges	examples/02-plot/vertices.py	/^    show_edges=True,$/;"	v
show_edges	examples/99-advanced/fea-hertzian-contact-pressure.py	/^    show_edges=False,$/;"	v
show_edges	pyvista/plotting/_property.py	/^    def show_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
show_edges	pyvista/plotting/_property.py	/^    def show_edges(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Property
show_edges	pyvista/plotting/themes.py	/^    def show_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_edges	pyvista/plotting/themes.py	/^    def show_edges(self, show_edges: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
show_frame	pyvista/plotting/text.py	/^    def show_frame(self) -> bool:$/;"	m	class:TextProperty
show_frame	pyvista/plotting/text.py	/^    def show_frame(self, frame: bool):  # numpydoc ignore=GL08$/;"	m	class:TextProperty
show_grid	pyvista/_plot.py	/^    show_grid = kwargs.pop('show_grid', False)$/;"	v
show_grid	pyvista/plotting/plotter.py	/^    def show_grid(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_grid	pyvista/plotting/renderer.py	/^    def show_grid(self, **kwargs):$/;"	m	class:Renderer
show_kwargs	pyvista/plotting/helpers.py	/^        show_kwargs = {}$/;"	v
show_message	tests/plotting/test_picking.py	/^        show_message=True,$/;"	v	class:test_element_picking.Tracker
show_progress	pyvista/core/utilities/reader.py	/^    def show_progress(self, msg=None):$/;"	m	class:BaseReader
show_scalar_bar	examples/00-load/create-poly.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/00-load/create-truss.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/01-filter/sampling_functions_2d.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/01-filter/sampling_functions_3d.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/isovalue.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/movie_glyphs.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/point-clouds.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/vector-component.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/vertices.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/atomic-orbitals.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/magnetic-fields.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/openfoam-cooling.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/openfoam-cooling.py	/^    show_scalar_bar=True,$/;"	v
show_scalar_bar	examples/99-advanced/pump-bracket.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/ray-trace-moeller.py	/^        show_scalar_bar=False,$/;"	v
show_scalar_bar	pyvista/demos/logo.py	/^        show_scalar_bar=False,$/;"	v
show_scalar_bar	pyvista/plotting/themes.py	/^    def show_scalar_bar(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_scalar_bar	pyvista/plotting/themes.py	/^    def show_scalar_bar(self, show_scalar_bar: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
show_size	examples_trame/basic/file_viewer.py	/^            show_size=True,$/;"	v
show_static_image	pyvista/jupyter/notebook.py	/^def show_static_image(plotter, screenshot):$/;"	f
show_symmetric	pyvista/plotting/axes.py	/^    def show_symmetric(self):$/;"	m	class:Axes
show_trame	pyvista/trame/jupyter.py	/^def show_trame($/;"	f
show_vertices	examples/02-plot/vertices.py	/^    show_vertices=True,$/;"	v
show_vertices	pyvista/plotting/themes.py	/^    def show_vertices(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_vertices	pyvista/plotting/themes.py	/^    def show_vertices(self, show_vertices: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
show_xaxis	examples/02-plot/bounds.py	/^    show_xaxis=False,$/;"	v
show_zlabels	examples/01-filter/image-fft-perlin-noise.py	/^    show_zlabels=False,$/;"	v
shrink	pyvista/core/filters/data_set.py	/^    def shrink(self, shrink_factor=1.0, progress_bar=False):$/;"	m	class:DataSetFilters
shrink	pyvista/core/pointset.py	/^    def shrink(self, *args, **kwargs):$/;"	m	class:PointSet
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(color='red', line_width=8.0, decimate=None),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(color='red', line_width=8.0, decimate=None, feature_angle=True),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(decimate=None, feature_angle=True, line_width=8, color='white'),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(line_width=8, color='white'),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^silhouette = dict($/;"	v
silhouette	pyvista/plotting/themes.py	/^    def silhouette(self) -> _SilhouetteConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
silhouette	pyvista/plotting/themes.py	/^    def silhouette(self, config: _SilhouetteConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
simulate	examples/03-widgets/line-widget.py	/^def simulate(pointa, pointb):$/;"	f
single_click_callback	tests/plotting/test_render_window_interactor.py	/^    def single_click_callback(mouse_position):$/;"	f	function:test_track_click_position
single_slice	examples/01-filter/slicing.py	/^single_slice = mesh.slice(normal=[1, 1, 0])$/;"	v
size	examples/02-plot/chart_overlays.py	/^    size=(0.46, 0.25), loc=(0.52, 0.06), x_label="Time (s)", y_label="Velocity (m\/s)"$/;"	v
size	examples/03-widgets/checkbox-widget.py	/^size = 50$/;"	v
size	pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
size	pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
size	pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
size	pyvista/plotting/charts.py	/^    def size(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartBox
size	pyvista/plotting/charts.py	/^    def size(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartPie
size	pyvista/plotting/charts.py	/^    def size(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
size	pyvista/plotting/themes.py	/^    def size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
size	pyvista/plotting/themes.py	/^    def size(self, size: int):  # numpydoc ignore=GL08$/;"	m	class:_Font
sized	examples/01-filter/compute-volume.py	/^sized = dataset.compute_cell_sizes()$/;"	v
sizes	examples/01-filter/compute-volume.py	/^sizes = threshed.compute_cell_sizes()$/;"	v
skip_9_0_X	tests/plotting/test_plotting.py	/^skip_9_0_X = pytest.mark.skipif(pv.vtk_version_info < (9, 1), reason="Flaky on 9.0.X")$/;"	v
skip_9_1_0	tests/plotting/test_plotting.py	/^skip_9_1_0 = pytest.mark.needs_vtk_version(9, 1, 0)$/;"	v
skip_apple_silicon	tests/core/test_datasetattributes.py	/^skip_apple_silicon = mark.skipif($/;"	v
skip_check_gc	tests/plotting/conftest.py	/^def skip_check_gc(check_gc):$/;"	f
skip_check_gc	tests/plotting/jupyter/conftest.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_check_gc	tests/plotting/test_axes.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_check_gc	tests/plotting/test_charts.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_check_gc	tests/plotting/test_cube_axes_actor.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_lesser_9_0_X	tests/plotting/test_plotting.py	/^skip_lesser_9_0_X = pytest.mark.skipif($/;"	v
skip_lesser_9_2_2	tests/core/test_unstructured_grid_filters.py	/^skip_lesser_9_2_2 = pytest.mark.skipif($/;"	v
skip_mac	tests/core/test_composite.py	/^skip_mac = pytest.mark.skipif(platform.system() == 'Darwin', reason="Flaky Mac tests")$/;"	v
skip_mac	tests/core/test_dataset_filters.py	/^skip_mac = pytest.mark.skipif(platform.system() == 'Darwin', reason="Flaky Mac tests")$/;"	v
skip_mac	tests/plotting/test_actor.py	/^skip_mac = pytest.mark.skipif($/;"	v
skip_mac	tests/plotting/test_charts.py	/^skip_mac = pytest.mark.skipif($/;"	v
skip_mac	tests/plotting/test_plotting.py	/^skip_mac = pytest.mark.skipif($/;"	v
skip_mac_flaky	tests/plotting/test_plotting.py	/^skip_mac_flaky = pytest.mark.skipif($/;"	v
skip_mesa	tests/plotting/test_plotting.py	/^skip_mesa = pytest.mark.skipif(using_mesa(), reason='Does not display correctly within OSMesa')$/;"	v
skip_no_ipython	tests/plotting/jupyter/test_static.py	/^skip_no_ipython = pytest.mark.skipif(not has_ipython, reason="Requires IPython package")$/;"	v
skip_no_plotting	tests/plotting/test_demos.py	/^skip_no_plotting = pytest.mark.skipif($/;"	v
skip_no_trame	tests/plotting/jupyter/test_trame.py	/^    skip_no_trame = pytest.mark.skipif(not has_trame, reason="Requires trame")$/;"	v
skip_windows	tests/core/test_datasetattributes.py	/^skip_windows = mark.skipif(os.name == 'nt', reason='Test fails on Windows')$/;"	v
skip_windows	tests/core/test_reader.py	/^skip_windows = pytest.mark.skipif(os.name == 'nt', reason='Test fails on Windows')$/;"	v
skip_windows	tests/plotting/test_plotting.py	/^skip_windows = pytest.mark.skipif(os.name == 'nt', reason='Test fails on Windows')$/;"	v
skip_windows_mesa	tests/plotting/test_plotting.py	/^skip_windows_mesa = pytest.mark.skipif($/;"	v
skip_zero_time	pyvista/core/utilities/reader.py	/^    def skip_zero_time(self):  # numpydoc ignore=RT01$/;"	m	class:OpenFOAMReader
skip_zero_time	pyvista/core/utilities/reader.py	/^    def skip_zero_time(self, value):  # numpydoc ignore=GL08$/;"	m	class:OpenFOAMReader
slc	examples/01-filter/slicing.py	/^slc = model.slice_along_line(spline)$/;"	v
slice	examples/99-advanced/warp-by-vector-eigenmodes.py	/^    slice = grid.points.copy()$/;"	v
slice	pyvista/core/filters/composite.py	/^    slice = DataSetFilters.slice$/;"	v	class:CompositeFilters
slice	pyvista/core/filters/data_set.py	/^    def slice($/;"	m	class:DataSetFilters
slice	pyvista/core/pointset.py	/^    def slice(self, *args, **kwargs):$/;"	m	class:PointSet
slice_along_axis	pyvista/core/filters/composite.py	/^    slice_along_axis = DataSetFilters.slice_along_axis$/;"	v	class:CompositeFilters
slice_along_axis	pyvista/core/filters/data_set.py	/^    def slice_along_axis($/;"	m	class:DataSetFilters
slice_along_axis	pyvista/core/pointset.py	/^    def slice_along_axis(self, *args, **kwargs):$/;"	m	class:PointSet
slice_along_line	pyvista/core/filters/composite.py	/^    slice_along_line = DataSetFilters.slice_along_line$/;"	v	class:CompositeFilters
slice_along_line	pyvista/core/filters/data_set.py	/^    def slice_along_line(self, line, generate_triangles=False, contour=False, progress_bar=False):$/;"	m	class:DataSetFilters
slice_along_line	pyvista/core/pointset.py	/^    def slice_along_line(self, *args, **kwargs):$/;"	m	class:PointSet
slice_boundaries	examples/99-advanced/openfoam-example.py	/^slice_boundaries = pyvista.MultiBlock($/;"	v
slice_implicit	pyvista/core/filters/data_set.py	/^    def slice_implicit($/;"	m	class:DataSetFilters
slice_implicit	pyvista/core/pointset.py	/^    def slice_implicit(self, *args, **kwargs):$/;"	m	class:PointSet
slice_internal_mesh	examples/99-advanced/openfoam-example.py	/^slice_internal_mesh = slice_z_center(internal_mesh)$/;"	v
slice_orthogonal	pyvista/core/filters/composite.py	/^    slice_orthogonal = DataSetFilters.slice_orthogonal$/;"	v	class:CompositeFilters
slice_orthogonal	pyvista/core/filters/data_set.py	/^    def slice_orthogonal($/;"	m	class:DataSetFilters
slice_orthogonal	pyvista/core/pointset.py	/^    def slice_orthogonal(self, *args, **kwargs):$/;"	m	class:PointSet
slice_z_center	examples/99-advanced/openfoam-example.py	/^def slice_z_center(mesh):$/;"	f
slices	examples/01-filter/slicing.py	/^slices = mesh.slice_along_axis(n=7, axis="y")$/;"	v
slices	examples/01-filter/slicing.py	/^slices = mesh.slice_orthogonal()$/;"	v
slices	examples/01-filter/slicing.py	/^slices = mesh.slice_orthogonal(x=20, y=20, z=30)$/;"	v
slices	examples/01-filter/slicing.py	/^slices = pv.MultiBlock()  # treat like a dictionary\/list$/;"	v
slices	examples/01-filter/slicing.py	/^slices = pv.MultiBlock()$/;"	v
slices	examples/01-filter/using-filters.py	/^slices = dataset.slice_orthogonal()$/;"	v
slices	examples/02-plot/ortho-slices.py	/^slices = mesh.slice_orthogonal(x=100, z=75)$/;"	v
slices	examples/99-advanced/warp-by-vector-eigenmodes.py	/^slices = []$/;"	v
slider	pyvista/trame/ui/vuetify2.py	/^def slider(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
slider	pyvista/trame/ui/vuetify3.py	/^def slider(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
slider_color	pyvista/plotting/themes.py	/^    def slider_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_color	pyvista/plotting/themes.py	/^    def slider_color(self, slider_color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
slider_length	pyvista/plotting/themes.py	/^    def slider_length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_length	pyvista/plotting/themes.py	/^    def slider_length(self, slider_length: float):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
slider_styles	pyvista/plotting/themes.py	/^    def slider_styles(self) -> _SliderConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
slider_styles	pyvista/plotting/themes.py	/^    def slider_styles(self, config: _SliderConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
slider_width	pyvista/plotting/themes.py	/^    def slider_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_width	pyvista/plotting/themes.py	/^    def slider_width(self, slider_width: float):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
small_chips	examples_trame/basic/file_viewer.py	/^            small_chips=True,$/;"	v
smooth	examples/01-filter/surface-smoothing.py	/^smooth = surf.smooth()$/;"	v
smooth	examples/01-filter/surface-smoothing.py	/^smooth = surf.smooth(n_iter=100)$/;"	v
smooth	examples/01-filter/surface-smoothing.py	/^smooth = surf.smooth(n_iter=1000)$/;"	v
smooth	pyvista/core/filters/poly_data.py	/^    def smooth($/;"	m	class:PolyDataFilters
smooth_shading	examples/01-filter/sampling_functions_2d.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/02-plot/backface_props.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/02-plot/silhouette.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/04-lights/shadows.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/99-advanced/atomic-orbitals.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/99-advanced/openfoam-cooling.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/99-advanced/sphere_eversion.py	/^    smooth_shading=True,$/;"	v
smooth_shading	pyvista/plotting/themes.py	/^    def smooth_shading(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
smooth_shading	pyvista/plotting/themes.py	/^    def smooth_shading(self, smooth_shading: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
smooth_taubin	pyvista/core/filters/poly_data.py	/^    def smooth_taubin($/;"	m	class:PolyDataFilters
smooth_w_taubin	examples/01-filter/surface-smoothing.py	/^smooth_w_taubin = surf.smooth_taubin(n_iter=50, pass_band=0.05)$/;"	v
smoothed_data	examples/01-filter/gaussian-smoothing.py	/^smoothed_data = data.gaussian_smooth(std_dev=3.0)$/;"	v
solids	examples/00-load/create-platonic-solids.py	/^solids = [pv.PlatonicSolid(kind, radius=0.4, center=center) for kind, center in zip(kinds, centers)]$/;"	v
source	examples_trame/basic/algorithm.py	/^source = pv.ConeSource()$/;"	v
source_center	examples/01-filter/streamlines.py	/^    source_center=(133.1, 116.3, 5.0),$/;"	v
source_mesh	examples/01-filter/streamlines.py	/^source_mesh = mesh.slice('z', origin=(0, 0, 182))  # inlet surface$/;"	v
source_radius	examples/01-filter/streamlines.py	/^    source_radius=2.0,$/;"	v
source_suffix	doc/source/conf.py	/^source_suffix = ".rst"$/;"	v
source_suffix	tests/tinypages/conf.py	/^source_suffix = '.rst'$/;"	v
spacing	examples/01-filter/flying_edges.py	/^    spacing=(abs(x_min) \/ n * 2, abs(y_min) \/ n * 2, abs(z_min) \/ n * 2),$/;"	v
spacing	examples/99-advanced/openfoam-cooling.py	/^spacing = (0.002, 0.002, 0.002)$/;"	v
spacing	examples/99-advanced/openfoam-tubes.py	/^spacing = (0.003, 0.003, 0.003)$/;"	v
spacing	pyvista/core/grid.py	/^    def spacing(self) -> Tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
spacing	pyvista/core/grid.py	/^    def spacing(self, spacing: Sequence[Union[float, int]]):  # numpydoc ignore=GL08$/;"	m	class:ImageData
specular	examples/02-plot/silhouette.py	/^    specular=1,$/;"	v
specular	examples/04-lights/shadows.py	/^    specular=0.5,$/;"	v
specular	examples/99-advanced/sphere_eversion.py	/^    specular=1.0,$/;"	v
specular	pyvista/plotting/_property.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
specular	pyvista/plotting/_property.py	/^    def specular(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
specular	pyvista/plotting/themes.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
specular	pyvista/plotting/themes.py	/^    def specular(self, specular: float):  # numpydoc ignore=GL08$/;"	m	class:_LightingConfig
specular	pyvista/plotting/volume_property.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
specular	pyvista/plotting/volume_property.py	/^    def specular(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
specular_color	pyvista/plotting/_property.py	/^    def specular_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
specular_color	pyvista/plotting/_property.py	/^    def specular_color(self, value):  # numpydoc ignore=GL08$/;"	m	class:Property
specular_color	pyvista/plotting/lights.py	/^    def specular_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
specular_color	pyvista/plotting/lights.py	/^    def specular_color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:Light
specular_power	examples/04-lights/shadows.py	/^    specular_power=90,$/;"	v
specular_power	examples/99-advanced/sphere_eversion.py	/^    specular_power=50.0,$/;"	v
specular_power	pyvista/plotting/_property.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
specular_power	pyvista/plotting/_property.py	/^    def specular_power(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:Property
specular_power	pyvista/plotting/themes.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
specular_power	pyvista/plotting/themes.py	/^    def specular_power(self, specular_power: float):  # numpydoc ignore=GL08$/;"	m	class:_LightingConfig
specular_power	pyvista/plotting/volume_property.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
specular_power	pyvista/plotting/volume_property.py	/^    def specular_power(self, value: float):  # numpydoc ignore=GL08$/;"	m	class:VolumeProperty
sphere	examples/00-load/create-geometric-objects.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/01-filter/boolean-operations.py	/^sphere = pv.Sphere(radius=0.6)$/;"	v
sphere	examples/01-filter/glyphs.py	/^sphere = pv.Sphere(radius=3.14)$/;"	v
sphere	examples/01-filter/poly-ray-trace.py	/^sphere = pv.Sphere(radius=0.85)$/;"	v
sphere	examples/01-filter/warp-by-vector.py	/^sphere = examples.load_sphere_vectors()$/;"	v
sphere	examples/02-plot/backface_props.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/element-picking.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/mesh-picking.py	/^sphere = pv.Sphere(center=(1, 0, 0))$/;"	v
sphere	examples/02-plot/movie_glyphs.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/multi-window.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/pbr.py	/^        sphere = pv.Sphere(radius=0.5, center=(0.0, 4 - i, j))$/;"	v
sphere	examples/02-plot/point-picking.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/texture.py	/^sphere = pv.Sphere($/;"	v
sphere	examples/03-widgets/animation.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/99-advanced/add-example.py	/^sphere = pv.Sphere(theta_resolution=10, phi_resolution=10)$/;"	v
sphere	examples/99-advanced/ray-trace.py	/^sphere = pv.Sphere(radius=0.85)$/;"	v
sphere	pyvista/core/utilities/geometric_objects.py	/^    sphere = _vtk.vtkSphereSource()$/;"	v
sphere	tests/conftest.py	/^def sphere():$/;"	f
sphere	tests/core/test_helpers.py	/^        sphere = pv.Sphere()$/;"	v	class:test_wrappers.Foo
sphere	tests/core/test_polydata.py	/^def sphere():$/;"	f
sphere0	examples/01-filter/collisions.py	/^sphere0 = pv.Sphere()$/;"	v
sphere1	examples/01-filter/collisions.py	/^sphere1 = pv.Sphere(radius=0.6, center=(-1, 0, 0))$/;"	v
sphere_a	examples/01-filter/boolean-operations.py	/^sphere_a = pv.Sphere()$/;"	v
sphere_actor	examples/02-plot/point-picking.py	/^sphere_actor = p.add_mesh(sphere, pickable=True)  # initially pickable$/;"	v
sphere_b	examples/01-filter/boolean-operations.py	/^sphere_b = pv.Sphere(center=(0.5, 0, 0))$/;"	v
sphere_dense	tests/core/test_polydata.py	/^def sphere_dense():$/;"	f
sphere_radius	pyvista/plotting/axes_actor.py	/^    def sphere_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
sphere_radius	pyvista/plotting/axes_actor.py	/^    def sphere_radius(self, rad: float):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
sphere_resolution	pyvista/plotting/axes_actor.py	/^    def sphere_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
sphere_resolution	pyvista/plotting/axes_actor.py	/^    def sphere_resolution(self, res: int):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
sphere_shifted	tests/core/test_polydata.py	/^def sphere_shifted():$/;"	f
sphere_to_cylinder	examples/99-advanced/sphere_eversion.py	/^def sphere_to_cylinder(theta, phi):$/;"	f
spherefile	pyvista/examples/examples.py	/^spherefile = os.path.join(dir_path, 'sphere.ply')$/;"	v
spheres	examples/02-plot/blurring.py	/^spheres = grid.glyph(geom=pv.Sphere(), scale=False, orient=False)$/;"	v
spheres	examples/02-plot/depth-peeling.py	/^spheres = pv.MultiBlock()$/;"	v
spheres	examples/02-plot/movie_glyphs.py	/^spheres = grid.glyph(scale='size', geom=sphere, orient=False)$/;"	v
sphinx_gallery_conf	doc/source/conf.py	/^sphinx_gallery_conf = {$/;"	v
spider_cage	examples/01-filter/flying_edges.py	/^def spider_cage(x, y, z):$/;"	f
splatter	examples/99-advanced/plotting-algorithms.py	/^splatter = vtk.vtkGaussianSplatter()$/;"	v
spline	examples/00-load/create-spline.py	/^spline = pv.Spline(points, 1000)$/;"	v
spline	examples/00-load/create-spline.py	/^spline = pv.Spline(points, 400)$/;"	v
spline	examples/01-filter/slicing.py	/^spline = pv.Spline(points, 15)$/;"	v
spline	examples/02-plot/distance-along-spline.py	/^spline = pv.Spline(points, 1000)$/;"	v
spline	tests/conftest.py	/^def spline():$/;"	f
split_bodies	pyvista/core/filters/data_set.py	/^    def split_bodies(self, label=False, progress_bar=False):$/;"	m	class:DataSetFilters
split_cells	examples/00-load/create-unstructured-surface.py	/^split_cells = grid.explode(0.5)$/;"	v
split_cells	examples/02-plot/point-cell-scalars.py	/^split_cells = grid.separate_cells()$/;"	v
split_gears	examples/02-plot/bounds.py	/^split_gears = gears.split_bodies()$/;"	v
split_sharp_edges	examples/99-advanced/openfoam-cooling.py	/^    split_sharp_edges=True,$/;"	v
split_sharp_edges	pyvista/plotting/themes.py	/^    def split_sharp_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
split_sharp_edges	pyvista/plotting/themes.py	/^    def split_sharp_edges(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
spring	examples/01-filter/extrude-rotate.py	/^spring = profile.extrude_rotate(resolution=360, translation=6.0, dradius=1.0, angle=2160.0)$/;"	v
src	pyvista/trame/jupyter.py	/^        src = ($/;"	v
src	pyvista/trame/jupyter.py	/^        src = f'{protocol}:\/\/{host}:{_server.port}\/index.html{params}'$/;"	v
src	pyvista/trame/jupyter.py	/^    def src(self):  # numpydoc ignore=RT01$/;"	m	class:Widget
src	pyvista/trame/jupyter.py	/^    src = build_url($/;"	v
srgb_to_linear	pyvista/plotting/colors.py	/^    def srgb_to_linear(self):$/;"	m	class:Color
stack	pyvista/plotting/charts.py	/^    def stack(self, x, ys, colors=None, labels=None):$/;"	m	class:Chart2D
stack_plot	tests/plotting/test_charts.py	/^def stack_plot(chart_2d):$/;"	f
start	examples/01-filter/poly-ray-trace.py	/^start = [0, 0, 0]$/;"	v
start	examples/99-advanced/ray-trace-moeller.py	/^start = np.array([0.3, 0.25, 1])$/;"	v
start	examples/99-advanced/ray-trace.py	/^start = [0, 0, 0]$/;"	v
start	pyvista/plotting/render_window_interactor.py	/^    def start(self):$/;"	m	class:RenderWindowInteractor
start	tests/plotting/test_picking.py	/^        start=False,$/;"	v	class:test_single_cell_picking.PickCallback
start_position	examples/01-filter/streamlines_2D.py	/^    start_position=(0.0, 0.4, 0.0),$/;"	v
start_position	examples/01-filter/streamlines_2D.py	/^    start_position=(4, 0.1, 0.0),$/;"	v
start_position	examples/99-advanced/openfoam-example.py	/^    start_position=(0.05, 0.05, 0),$/;"	v
start_xvfb	pyvista/plotting/utilities/xvfb.py	/^def start_xvfb(wait=3, window_size=None):$/;"	f
starting_mesh	examples/03-widgets/multi-slider-widget.py	/^starting_mesh = pv.Sphere()$/;"	v
stats	pyvista/plotting/charts.py	/^    def stats(self):  # numpydoc ignore=RT01$/;"	m	class:BoxPlot
stereo_proj	examples/02-plot/moving_cmap.py	/^def stereo_proj(q):$/;"	f
still_ratio	pyvista/plotting/themes.py	/^    def still_ratio(self) -> Number:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
still_ratio	pyvista/plotting/themes.py	/^    def still_ratio(self, still_ratio: Number):  # numpydoc ignore=GL08$/;"	m	class:_TrameConfig
stop	examples/01-filter/poly-ray-trace.py	/^stop = [0.25, 1, 0.5]$/;"	v
stop	examples/99-advanced/ray-trace.py	/^stop = [0.25, 1, 0.5]$/;"	v
store_click_position	pyvista/plotting/plotter.py	/^    def store_click_position(self, *args):$/;"	m	class:BasePlotter
store_image	pyvista/plotting/plotter.py	/^    def store_image(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
store_image	pyvista/plotting/plotter.py	/^    def store_image(self, value):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
store_mouse_position	pyvista/plotting/plotter.py	/^    def store_mouse_position(self, *args):$/;"	m	class:BasePlotter
streamlines	examples/01-filter/streamlines.py	/^streamlines = mesh.streamlines(n_points=40, source_center=(0.08, 3, 0.71))$/;"	v
streamlines	examples/01-filter/streamlines.py	/^streamlines = mesh.streamlines_from_source(seed_mesh, integration_direction="forward")$/;"	v
streamlines	examples/99-advanced/openfoam-example.py	/^streamlines = slice_internal_mesh.streamlines_evenly_spaced_2D($/;"	v
streamlines	pyvista/core/filters/data_set.py	/^    def streamlines($/;"	m	class:DataSetFilters
streamlines_evenly_spaced_2D	pyvista/core/filters/data_set.py	/^    def streamlines_evenly_spaced_2D($/;"	m	class:DataSetFilters
streamlines_from_source	pyvista/core/filters/data_set.py	/^    def streamlines_from_source($/;"	m	class:DataSetFilters
strip	pyvista/core/filters/poly_data.py	/^    def strip($/;"	m	class:PolyDataFilters
strip_hex_prefix	pyvista/plotting/colors.py	/^    def strip_hex_prefix(h: str) -> str:$/;"	m	class:Color
strips	examples/00-load/create-polydata-strips.py	/^strips = np.array([8, 0, 1, 2, 3, 4, 5, 6, 7])$/;"	v
strips	pyvista/core/pointset.py	/^    def strips(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
strips	pyvista/core/pointset.py	/^    def strips(self, strips):  # numpydoc ignore=GL08$/;"	m	class:PolyData
strips_to_polys	pyvista/core/utilities/parametric_objects.py	/^            strips_to_polys=False,$/;"	v
strl	examples/99-advanced/magnetic-fields.py	/^strl = grid.streamlines_from_source($/;"	v
struct	examples/00-load/create-structured-surface.py	/^struct = examples.load_structured()$/;"	v
struct_grid	tests/conftest.py	/^def struct_grid():$/;"	f
structured_grids_split_coincident	tests/core/test_dataset_filters.py	/^def structured_grids_split_coincident():$/;"	f
structured_grids_split_disconnected	tests/core/test_dataset_filters.py	/^def structured_grids_split_disconnected():$/;"	f
structured_points	tests/core/test_grid.py	/^def structured_points():$/;"	f
style	examples/00-load/create-truss.py	/^    style='wireframe',$/;"	v
style	examples/02-plot/point-clouds.py	/^    style='points',$/;"	v
style	examples/02-plot/point-clouds.py	/^    style='points_gaussian',$/;"	v
style	examples/03-widgets/multi-slider-widget.py	/^    style='modern',$/;"	v
style	examples/03-widgets/multi-slider-widget.py	/^    style='modern',$/;"	v	class:MyCustomRoutine
style	examples/99-advanced/atomic-orbitals.py	/^    style='points_gaussian',$/;"	v
style	examples/99-advanced/ray-trace-moeller.py	/^        style='wireframe',$/;"	v
style	examples_trame/basic/file_viewer.py	/^            style="max-width: 300px;",$/;"	v
style	pyvista/demos/logo.py	/^        style='points',$/;"	v
style	pyvista/demos/logo.py	/^        style='wireframe',$/;"	v
style	pyvista/plotting/_property.py	/^    def style(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Property
style	pyvista/plotting/_property.py	/^    def style(self, new_style: str):  # numpydoc ignore=GL08$/;"	m	class:Property
style	pyvista/plotting/charts.py	/^    def style(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
style	pyvista/plotting/charts.py	/^    def style(self, val):  # numpydoc ignore=GL08$/;"	m	class:Pen
subdivide	pyvista/core/filters/poly_data.py	/^    def subdivide(self, nsub, subfilter='linear', inplace=False, progress_bar=False):$/;"	m	class:PolyDataFilters
subdivide_adaptive	pyvista/core/filters/poly_data.py	/^    def subdivide_adaptive($/;"	m	class:PolyDataFilters
subdivide_tetra	pyvista/core/filters/unstructured_grid.py	/^    def subdivide_tetra(self):$/;"	m	class:UnstructuredGridFilters
subplot	pyvista/plotting/plotter.py	/^    def subplot(self, index_row, index_column=None):$/;"	m	class:BasePlotter
subset	examples/00-load/terrain-mesh.py	/^subset = dem.extract_subset((500, 900, 400, 800, 0, 0), (5, 5, 1))$/;"	v
subset	examples/01-filter/image-fft-perlin-noise.py	/^subset = sampled_fft.extract_subset((0, xdim \/\/ 2, 0, ydim \/\/ 2, 0, 0))$/;"	v
sunkit	doc/source/make_external_gallery.py	/^    sunkit=Example($/;"	v
superellipsoid	examples/00-load/create-parametric-geometric-objects.py	/^superellipsoid = pv.ParametricSuperEllipsoid(n1=0.1, n2=2)$/;"	v
superquadricSource	pyvista/core/utilities/geometric_objects.py	/^    superquadricSource = _vtk.vtkSuperquadricSource()$/;"	v
supertoroid	examples/00-load/create-parametric-geometric-objects.py	/^supertoroid = pv.ParametricSuperToroid(n1=0.5)$/;"	v
supports_open_gl	pyvista/plotting/tools.py	/^def supports_open_gl():$/;"	f
suppress_health_check	tests/core/test_dataset.py	/^    suppress_health_check=[HealthCheck.function_scoped_fixture],$/;"	v
suppress_rendering	pyvista/plotting/plotter.py	/^    def suppress_rendering(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
suppress_rendering	pyvista/plotting/plotter.py	/^    def suppress_rendering(self, value):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
surf	examples/00-load/create-poly.py	/^surf = pv.PolyData(vertices, faces)$/;"	v
surf	examples/00-load/create-tri-surface.py	/^surf = cloud.delaunay_2d()$/;"	v
surf	examples/00-load/create-tri-surface.py	/^surf = cloud.delaunay_2d(alpha=1.0)$/;"	v
surf	examples/00-load/create-tri-surface.py	/^surf = cloud.delaunay_2d(alpha=1.0, edge_source=polygon)$/;"	v
surf	examples/01-filter/extract-surface.py	/^surf = grid.extract_surface()$/;"	v
surf	examples/01-filter/surface-smoothing.py	/^surf = vol.extract_geometry()$/;"	v
surf	examples/01-filter/surface_reconstruction.py	/^surf = points.reconstruct_surface()$/;"	v
surf	examples/02-plot/texture.py	/^surf = pv.Cylinder()$/;"	v
surf	examples/03-widgets/sphere-widget.py	/^surf = pv.PolyData()$/;"	v
surf	examples/03-widgets/sphere-widget.py	/^surf = pv.StructuredGrid(xx, yy, zz)$/;"	v
surf	pyvista/core/utilities/geometric_objects.py	/^    surf = wrap(arrow.GetOutput())$/;"	v
surf	pyvista/core/utilities/geometric_objects.py	/^    surf = wrap(cylinderSource.GetOutput())$/;"	v
surf	pyvista/core/utilities/geometric_objects.py	/^    surf = wrap(planeSource.GetOutput())$/;"	v
surf	pyvista/core/utilities/geometric_objects.py	/^    surf = wrap(sphere.GetOutput())$/;"	v
surf	pyvista/core/utilities/parametric_objects.py	/^        surf = surf.clean($/;"	v
surf	pyvista/core/utilities/parametric_objects.py	/^    surf = surface_from_para(parametric_function, **kwargs)$/;"	v
surf	pyvista/core/utilities/parametric_objects.py	/^    surf = wrap(para_source.GetOutput())$/;"	v
surf_points	examples/02-plot/vertices.py	/^surf_points = mesh.extract_surface().points$/;"	v
surf_subdivided	examples/01-filter/extract-surface.py	/^surf_subdivided = grid.extract_surface(nonlinear_subdivision=5)$/;"	v
surface	examples/01-filter/clipping-with-surface.py	/^surface = examples.load_random_hills()$/;"	v
surface	examples/01-filter/clipping-with-surface.py	/^surface = pv.Cone(direction=(0, 0, -1), height=3.0, radius=1, resolution=50, capping=False)$/;"	v
surface	examples/01-filter/interpolate.py	/^surface = examples.download_saddle_surface()$/;"	v
surface	examples/01-filter/voxelize.py	/^surface = examples.download_foot_bones()$/;"	v
surface	examples/02-plot/isovalue.py	/^surface = surfaces[0].copy()$/;"	v
surface	examples/02-plot/isovalue.py	/^surface = vol.contour(values[:1])$/;"	v
surface	tests/core/test_helpers.py	/^        surface = image.extract_surface()$/;"	v	class:test_wrappers.Foo
surface_from_para	pyvista/core/utilities/parametric_objects.py	/^def surface_from_para($/;"	f
surface_indices	pyvista/core/filters/data_set.py	/^    def surface_indices(self, progress_bar=False):$/;"	m	class:DataSetFilters
surface_texture	examples/99-advanced/planets.py	/^surface_texture = examples.planets.download_venus_surface(atmosphere=False, texture=True)$/;"	v
surfaces	examples/02-plot/isovalue.py	/^surfaces = [vol.contour([v]) for v in values]$/;"	v
surfaces	examples/02-plot/spherical.py	/^surfaces = grid_scalar_3d.cell_data_to_point_data().contour(isosurfaces=[1, 5, 10, 15])$/;"	v
surrounding	examples/02-plot/topo-map.py	/^surrounding = elevation.clip_box(bounds, invert=True)$/;"	v
switch_off	pyvista/plotting/lights.py	/^    def switch_off(self):$/;"	m	class:Light
switch_on	pyvista/plotting/lights.py	/^    def switch_on(self):$/;"	m	class:Light
system_supports_plotting	pyvista/plotting/tools.py	/^def system_supports_plotting():$/;"	f
t	examples/00-load/create-kochanek-spline.py	/^t = [-1.0, -0.5, 0.0, 0.5, 1.0]$/;"	v
t	examples/02-plot/chart_overlays.py	/^t = np.linspace(0, 5, 50)$/;"	v
t	examples/99-advanced/sphere_eversion.py	/^t = -1 \/ Q$/;"	v
t_elapsed	examples/00-load/create-pointset.py	/^    t_elapsed = time.time() - tstart$/;"	v
t_elapsed	examples/00-load/create-pointset.py	/^t_elapsed = time.time() - tstart$/;"	v
target_reduction	examples/01-filter/decimate.py	/^target_reduction = 0.7$/;"	v
teapot	examples/00-load/create-platonic-solids.py	/^teapot = examples.download_teapot()$/;"	v
temp_file	examples/00-load/reader.py	/^temp_file = NamedTemporaryFile('w', suffix=".vtp")$/;"	v
templates_path	doc/source/conf.py	/^templates_path = ["_templates"]$/;"	v
templates_path	tests/tinypages/conf.py	/^templates_path = ['_templates']$/;"	v
terminal_speed	examples/01-filter/streamlines.py	/^    terminal_speed=0.1,$/;"	v
terminate_app	pyvista/plotting/render_window_interactor.py	/^    def terminate_app(self):$/;"	m	class:RenderWindowInteractor
terrain	examples/00-load/terrain-mesh.py	/^terrain = subset.warp_by_scalar()$/;"	v
tessellate	pyvista/core/filters/data_set.py	/^    def tessellate(self, max_n_subdivide=3, merge_points=True, progress_bar=False):$/;"	m	class:DataSetFilters
tessellate	pyvista/core/pointset.py	/^    def tessellate(self, *args, **kwargs):$/;"	m	class:PointSet
test_ExplicitStructuredGrid_cast_to_unstructured_grid	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_cast_to_unstructured_grid():$/;"	f
test_ExplicitStructuredGrid_cell_coords	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_cell_coords():$/;"	f
test_ExplicitStructuredGrid_cell_id	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_cell_id():$/;"	f
test_ExplicitStructuredGrid_compute_connections	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_compute_connections():$/;"	f
test_ExplicitStructuredGrid_compute_connectivity	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_compute_connectivity():$/;"	f
test_ExplicitStructuredGrid_dimensions	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_dimensions():$/;"	f
test_ExplicitStructuredGrid_hide_cells	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_hide_cells():$/;"	f
test_ExplicitStructuredGrid_init	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_init():$/;"	f
test_ExplicitStructuredGrid_neighbors	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_neighbors():$/;"	f
test_ExplicitStructuredGrid_raise_init	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_raise_init():$/;"	f
test_ExplicitStructuredGrid_save	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_save():$/;"	f
test_ExplicitStructuredGrid_show_cells	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_show_cells():$/;"	f
test_ExplicitStructuredGrid_visible_bounds	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_visible_bounds():$/;"	f
test_ParametricBohemianDome	tests/core/test_parametric_geometry.py	/^def test_ParametricBohemianDome():$/;"	f
test_ParametricBour	tests/core/test_parametric_geometry.py	/^def test_ParametricBour():$/;"	f
test_ParametricBoy	tests/core/test_parametric_geometry.py	/^def test_ParametricBoy():$/;"	f
test_ParametricCatalanMinimal	tests/core/test_parametric_geometry.py	/^def test_ParametricCatalanMinimal():$/;"	f
test_ParametricConicSpiral	tests/core/test_parametric_geometry.py	/^def test_ParametricConicSpiral():$/;"	f
test_ParametricCrossCap	tests/core/test_parametric_geometry.py	/^def test_ParametricCrossCap():$/;"	f
test_ParametricDini	tests/core/test_parametric_geometry.py	/^def test_ParametricDini():$/;"	f
test_ParametricEllipsoid	tests/core/test_parametric_geometry.py	/^def test_ParametricEllipsoid():$/;"	f
test_ParametricEnneper	tests/core/test_parametric_geometry.py	/^def test_ParametricEnneper():$/;"	f
test_ParametricFigure8Klein	tests/core/test_parametric_geometry.py	/^def test_ParametricFigure8Klein():$/;"	f
test_ParametricHenneberg	tests/core/test_parametric_geometry.py	/^def test_ParametricHenneberg():$/;"	f
test_ParametricKlein	tests/core/test_parametric_geometry.py	/^def test_ParametricKlein():$/;"	f
test_ParametricKuen	tests/core/test_parametric_geometry.py	/^def test_ParametricKuen():$/;"	f
test_ParametricMobius	tests/core/test_parametric_geometry.py	/^def test_ParametricMobius():$/;"	f
test_ParametricPluckerConoid	tests/core/test_parametric_geometry.py	/^def test_ParametricPluckerConoid():$/;"	f
test_ParametricPseudosphere	tests/core/test_parametric_geometry.py	/^def test_ParametricPseudosphere():$/;"	f
test_ParametricRandomHills	tests/core/test_parametric_geometry.py	/^def test_ParametricRandomHills():$/;"	f
test_ParametricRoman	tests/core/test_parametric_geometry.py	/^def test_ParametricRoman():$/;"	f
test_ParametricSuperEllipsoid	tests/core/test_parametric_geometry.py	/^def test_ParametricSuperEllipsoid():$/;"	f
test_ParametricSuperToroid	tests/core/test_parametric_geometry.py	/^def test_ParametricSuperToroid():$/;"	f
test_ParametricTorus	tests/core/test_parametric_geometry.py	/^def test_ParametricTorus():$/;"	f
test_Quadrilateral	tests/examples/test_cell_examples.py	/^def test_Quadrilateral():$/;"	f
test_UnstructuredGrid_cast_to_explicit_structured_grid	tests/core/test_grid.py	/^def test_UnstructuredGrid_cast_to_explicit_structured_grid():$/;"	f
test_above_below_scalar_range_annotations	tests/plotting/test_plotting.py	/^def test_above_below_scalar_range_annotations():$/;"	f
test_above_range_color	tests/plotting/test_lookup_table.py	/^def test_above_range_color(lut):$/;"	f
test_above_range_color	tests/plotting/test_theme.py	/^def test_above_range_color(default_theme):$/;"	f
test_activate_scalars	tests/core/test_composite.py	/^def test_activate_scalars(multiblock_poly):$/;"	f
test_active_normals	tests/core/test_dataset.py	/^def test_active_normals(sphere):$/;"	f
test_active_scalars_cell	tests/core/test_dataset.py	/^def test_active_scalars_cell(grid):$/;"	f
test_active_scalars_name	tests/core/test_datasetattributes.py	/^def test_active_scalars_name(sphere):$/;"	f
test_active_scalars_remain	tests/plotting/test_plotter.py	/^def test_active_scalars_remain(sphere, hexbeam):$/;"	f
test_active_scalars_setter	tests/core/test_datasetattributes.py	/^def test_active_scalars_setter(hexbeam_point_attributes):$/;"	f
test_active_scalars_setter_no_override	tests/core/test_datasetattributes.py	/^def test_active_scalars_setter_no_override(hexbeam):$/;"	f
test_active_t_coords_name	tests/core/test_datasetattributes.py	/^def test_active_t_coords_name(plane):$/;"	f
test_active_vectors_eq	tests/core/test_datasetattributes.py	/^def test_active_vectors_eq():$/;"	f
test_active_vectors_name_setter	tests/core/test_datasetattributes.py	/^def test_active_vectors_name_setter():$/;"	f
test_actor_backface_prop	tests/plotting/test_actor.py	/^def test_actor_backface_prop(actor):$/;"	f
test_actor_bounds	tests/plotting/test_actor.py	/^def test_actor_bounds(actor):$/;"	f
test_actor_center	tests/plotting/test_actor.py	/^def test_actor_center(actor):$/;"	f
test_actor_copy_deep	tests/plotting/test_actor.py	/^def test_actor_copy_deep(actor):$/;"	f
test_actor_copy_shallow	tests/plotting/test_actor.py	/^def test_actor_copy_shallow(actor):$/;"	f
test_actor_from_plotter	tests/plotting/test_actor.py	/^def test_actor_from_plotter():$/;"	f
test_actor_init_empty	tests/plotting/test_actor.py	/^def test_actor_init_empty():$/;"	f
test_actor_mblock_copy_shallow	tests/plotting/test_actor.py	/^def test_actor_mblock_copy_shallow(actor_from_multi_block):$/;"	f
test_actor_orientation	tests/plotting/test_actor.py	/^def test_actor_orientation(actor):$/;"	f
test_actor_pickable	tests/plotting/test_actor.py	/^def test_actor_pickable(actor):$/;"	f
test_actor_picking	tests/plotting/test_picking.py	/^def test_actor_picking(sphere):$/;"	f
test_actor_position	tests/plotting/test_actor.py	/^def test_actor_position(actor):$/;"	f
test_actor_rotate_x	tests/plotting/test_actor.py	/^def test_actor_rotate_x(actor):$/;"	f
test_actor_rotate_y	tests/plotting/test_actor.py	/^def test_actor_rotate_y(actor):$/;"	f
test_actor_rotate_z	tests/plotting/test_actor.py	/^def test_actor_rotate_z(actor):$/;"	f
test_actor_scale	tests/plotting/test_actor.py	/^def test_actor_scale(actor):$/;"	f
test_actor_texture	tests/plotting/test_actor.py	/^def test_actor_texture(actor):$/;"	f
test_actor_unit_matrix	tests/plotting/test_actor.py	/^def test_actor_unit_matrix(actor):$/;"	f
test_actor_visible	tests/plotting/test_actor.py	/^def test_actor_visible(actor):$/;"	f
test_actors	tests/plotting/test_axes.py	/^def test_actors(axes):$/;"	f
test_actors	tests/plotting/test_lights.py	/^def test_actors():$/;"	f
test_actual_memory_size	tests/core/test_dataset.py	/^def test_actual_memory_size(grid):$/;"	f
test_add	tests/core/test_polydata.py	/^def test_add(sphere, sphere_shifted):$/;"	f
test_add_1d	tests/core/test_pyvista_ndarray.py	/^def test_add_1d():$/;"	f
test_add_array	tests/plotting/test_collection.py	/^def test_add_array(sphere):$/;"	f
test_add_arrows	tests/plotting/test_plotting.py	/^def test_add_arrows():$/;"	f
test_add_axes_parameters	tests/plotting/test_plotting.py	/^def test_add_axes_parameters():$/;"	f
test_add_axes_twice	tests/plotting/test_plotting.py	/^def test_add_axes_twice():$/;"	f
test_add_background_image_global	tests/plotting/test_plotting.py	/^def test_add_background_image_global(sphere):$/;"	f
test_add_background_image_not_global	tests/plotting/test_plotting.py	/^def test_add_background_image_not_global(sphere):$/;"	f
test_add_background_image_subplots	tests/plotting/test_plotting.py	/^def test_add_background_image_subplots(airplane):$/;"	f
test_add_camera_orientation_widget	tests/plotting/test_widgets.py	/^def test_add_camera_orientation_widget(uniform):$/;"	f
test_add_cursor	tests/plotting/test_plotting.py	/^def test_add_cursor():$/;"	f
test_add_fail	tests/plotting/test_scalar_bars.py	/^def test_add_fail(scalar_bars):$/;"	f
test_add_field_data	tests/core/test_dataset.py	/^def test_add_field_data(grid, field):$/;"	f
test_add_ids_algorithm	tests/plotting/test_plotting.py	/^def test_add_ids_algorithm():$/;"	f
test_add_legend	tests/plotting/test_plotting.py	/^def test_add_legend(sphere):$/;"	f
test_add_legend_loc	tests/plotting/test_renderer.py	/^def test_add_legend_loc(loc):$/;"	f
test_add_legend_no_face	tests/plotting/test_renderer.py	/^def test_add_legend_no_face(sphere):$/;"	f
test_add_lines	tests/plotting/test_plotter.py	/^def test_add_lines(connected, n_lines):$/;"	f
test_add_lines_invalid	tests/plotting/test_plotting.py	/^def test_add_lines_invalid():$/;"	f
test_add_matrix	tests/core/test_datasetattributes.py	/^def test_add_matrix(hexbeam):$/;"	f
test_add_multiple	tests/plotting/test_plotter.py	/^def test_add_multiple(sphere):$/;"	f
test_add_point_array_list	tests/core/test_dataset.py	/^def test_add_point_array_list(grid):$/;"	f
test_add_point_labels	tests/plotting/test_plotting.py	/^def test_add_point_labels():$/;"	f
test_add_point_labels_always_visible	tests/plotting/test_plotting.py	/^def test_add_point_labels_always_visible(always_visible):$/;"	f
test_add_point_scalar_labels_fmt	tests/plotting/test_plotting.py	/^def test_add_point_scalar_labels_fmt():$/;"	f
test_add_point_scalar_labels_list	tests/plotting/test_plotting.py	/^def test_add_point_scalar_labels_list():$/;"	f
test_add_points	tests/plotting/test_plotting.py	/^def test_add_points():$/;"	f
test_add_points_invalid_style	tests/plotting/test_plotter.py	/^def test_add_points_invalid_style(sphere):$/;"	f
test_add_remove_background	tests/plotting/test_plotting.py	/^def test_add_remove_background(sphere):$/;"	f
test_add_remove_floor	tests/plotting/test_plotting.py	/^def test_add_remove_floor(sphere):$/;"	f
test_add_remove_legend	tests/plotting/test_renderer.py	/^def test_add_remove_legend(sphere):$/;"	f
test_add_remove_scalar_bar	tests/plotting/test_plotting.py	/^def test_add_remove_scalar_bar(sphere):$/;"	f
test_add_should_contain_array_name	tests/core/test_datasetattributes.py	/^def test_add_should_contain_array_name(insert_arange_narray):$/;"	f
test_add_should_contain_exact_array	tests/core/test_datasetattributes.py	/^def test_add_should_contain_exact_array(insert_arange_narray):$/;"	f
test_add_should_not_add_none_array	tests/core/test_datasetattributes.py	/^def test_add_should_not_add_none_array(hexbeam_point_attributes):$/;"	f
test_add_text	tests/plotting/test_plotting.py	/^def test_add_text():$/;"	f
test_add_text_font_file	tests/plotting/test_plotting.py	/^def test_add_text_font_file():$/;"	f
test_add_text_latex	tests/plotting/test_plotting.py	/^def test_add_text_latex():$/;"	f
test_add_timer_event	tests/plotting/test_render_window_interactor.py	/^def test_add_timer_event():$/;"	f
test_add_title	tests/plotting/test_plotting.py	/^def test_add_title(verify_image_cache):$/;"	f
test_add_two_vectors	tests/core/test_datasetattributes.py	/^def test_add_two_vectors():$/;"	f
test_add_volume_clip_plane	tests/plotting/test_widgets.py	/^def test_add_volume_clip_plane(uniform):$/;"	f
test_add_vtk_light	tests/plotting/test_lights.py	/^def test_add_vtk_light():$/;"	f
test_affine_widget	tests/plotting/test_widgets.py	/^def test_affine_widget(sphere):$/;"	f
test_algorithm_add_point_labels	tests/plotting/test_plotting.py	/^def test_algorithm_add_point_labels():$/;"	f
test_algorithm_add_points	tests/plotting/test_plotting.py	/^def test_algorithm_add_points():$/;"	f
test_align	tests/core/test_dataset_filters.py	/^def test_align():$/;"	f
test_alpha_range	tests/plotting/test_lookup_table.py	/^def test_alpha_range(lut, lut_w_cmap):$/;"	f
test_annotations	tests/plotting/test_lookup_table.py	/^def test_annotations(lut):$/;"	f
test_anti_aliasing	tests/plotting/test_theme.py	/^def test_anti_aliasing(default_theme):$/;"	f
test_anti_aliasing_fxaa	tests/plotting/test_theme.py	/^def test_anti_aliasing_fxaa(default_theme):$/;"	f
test_anti_aliasing_invalid	tests/plotting/test_plotter.py	/^def test_anti_aliasing_invalid():$/;"	f
test_anti_aliasing_msaa	tests/plotting/test_theme.py	/^def test_anti_aliasing_msaa(default_theme):$/;"	f
test_anti_aliasing_multiplot	tests/plotting/test_plotter.py	/^def test_anti_aliasing_multiplot(sphere):$/;"	f
test_anti_aliasing_ssaa	tests/plotting/test_theme.py	/^def test_anti_aliasing_ssaa(default_theme):$/;"	f
test_append	tests/core/test_polydata.py	/^def test_append($/;"	f
test_append_raises	tests/core/test_polydata.py	/^def test_append_raises(sphere: pv.PolyData):$/;"	f
test_apply_cmap	tests/plotting/test_lookup_table.py	/^def test_apply_cmap(lut):$/;"	f
test_apply_transformation_to_points	tests/core/test_utilities.py	/^def test_apply_transformation_to_points():$/;"	f
test_area	tests/core/test_polydata.py	/^def test_area(sphere_dense, cube_dense):$/;"	f
test_areaplot	tests/plotting/test_charts.py	/^def test_areaplot(chart_2d, area_plot):$/;"	f
test_array_association	tests/core/test_helpers.py	/^def test_array_association():$/;"	f
test_array_name	tests/plotting/mappers/test_mapper.py	/^def test_array_name(dataset_mapper):$/;"	f
test_array_volume_rendering	tests/plotting/test_plotting.py	/^def test_array_volume_rendering(uniform, verify_image_cache):$/;"	f
test_arrow	tests/core/test_geometric_objects.py	/^def test_arrow(scale):$/;"	f
test_arrow_raises_error	tests/core/test_geometric_objects.py	/^def test_arrow_raises_error():$/;"	f
test_arrows	tests/core/test_dataset.py	/^def test_arrows():$/;"	f
test_assert_empty_kwargs	tests/core/test_utilities.py	/^def test_assert_empty_kwargs():$/;"	f
test_assign_labels_to_points	tests/core/test_datasetattributes.py	/^def test_assign_labels_to_points(hexbeam):$/;"	f
test_atomized	tests/plotting/test_demos.py	/^def test_atomized():$/;"	f
test_attr_repr	tests/plotting/mappers/test_composite_mapper.py	/^def test_attr_repr(block_attr):$/;"	f
test_avsucd_reader	tests/core/test_reader.py	/^def test_avsucd_reader():$/;"	f
test_axes	tests/plotting/test_plotting.py	/^def test_axes():$/;"	f
test_axes_actor_axis_labels	tests/plotting/test_axes.py	/^def test_axes_actor_axis_labels(axes_actor):$/;"	f
test_axes_actor_cone_rad	tests/plotting/test_axes.py	/^def test_axes_actor_cone_rad(axes_actor):$/;"	f
test_axes_actor_cone_res	tests/plotting/test_axes.py	/^def test_axes_actor_cone_res(axes_actor):$/;"	f
test_axes_actor_cylinder_rad	tests/plotting/test_axes.py	/^def test_axes_actor_cylinder_rad(axes_actor):$/;"	f
test_axes_actor_cylinder_res	tests/plotting/test_axes.py	/^def test_axes_actor_cylinder_res(axes_actor):$/;"	f
test_axes_actor_label_pos	tests/plotting/test_axes.py	/^def test_axes_actor_label_pos(axes_actor):$/;"	f
test_axes_actor_properties	tests/plotting/test_plotting.py	/^def test_axes_actor_properties():$/;"	f
test_axes_actor_shaft_len	tests/plotting/test_axes.py	/^def test_axes_actor_shaft_len(axes_actor):$/;"	f
test_axes_actor_shaft_type	tests/plotting/test_axes.py	/^def test_axes_actor_shaft_type(axes_actor):$/;"	f
test_axes_actor_sphere_rad	tests/plotting/test_axes.py	/^def test_axes_actor_sphere_rad(axes_actor):$/;"	f
test_axes_actor_sphere_res	tests/plotting/test_axes.py	/^def test_axes_actor_sphere_res(axes_actor):$/;"	f
test_axes_actor_tip_len	tests/plotting/test_axes.py	/^def test_axes_actor_tip_len(axes_actor):$/;"	f
test_axes_actor_tip_type	tests/plotting/test_axes.py	/^def test_axes_actor_tip_type(axes_actor):$/;"	f
test_axes_actor_total_len	tests/plotting/test_axes.py	/^def test_axes_actor_total_len(axes_actor):$/;"	f
test_axes_actor_visibility	tests/plotting/test_axes.py	/^def test_axes_actor_visibility(axes_actor):$/;"	f
test_axes_box	tests/plotting/test_theme.py	/^def test_axes_box(default_theme):$/;"	f
test_axes_eq	tests/plotting/test_theme.py	/^def test_axes_eq(default_theme):$/;"	f
test_axes_show	tests/plotting/test_theme.py	/^def test_axes_show(default_theme):$/;"	f
test_axis_angle_rotation	tests/core/test_utilities.py	/^def test_axis_angle_rotation():$/;"	f
test_axis_angle_rotation_many_times	tests/core/test_utilities.py	/^def test_axis_angle_rotation_many_times(axis, angle, times):$/;"	f
test_axis_grid	tests/plotting/test_charts.py	/^def test_axis_grid(axis):$/;"	f
test_axis_init	tests/plotting/test_charts.py	/^def test_axis_init():$/;"	f
test_axis_label	tests/plotting/test_charts.py	/^def test_axis_label(axis):$/;"	f
test_axis_label_font_size	tests/plotting/test_charts.py	/^def test_axis_label_font_size(chart_2d):$/;"	f
test_axis_margin	tests/plotting/test_charts.py	/^def test_axis_margin(axis):$/;"	f
test_axis_minor_tick_visibility	tests/plotting/test_cube_axes_actor.py	/^def test_axis_minor_tick_visibility(cube_axes_actor):$/;"	f
test_axis_range	tests/plotting/test_charts.py	/^def test_axis_range(axis):$/;"	f
test_axis_rotation_invalid	tests/core/test_dataset.py	/^def test_axis_rotation_invalid():$/;"	f
test_axis_rotation_not_inplace	tests/core/test_dataset.py	/^def test_axis_rotation_not_inplace():$/;"	f
test_axis_scale	tests/plotting/test_charts.py	/^def test_axis_scale(chart_2d, axis):$/;"	f
test_axis_tick_count	tests/plotting/test_charts.py	/^def test_axis_tick_count(axis):$/;"	f
test_axis_tick_labels_visible	tests/plotting/test_charts.py	/^def test_axis_tick_labels_visible(axis):$/;"	f
test_axis_tick_locations	tests/plotting/test_charts.py	/^def test_axis_tick_locations(chart_2d, axis):$/;"	f
test_axis_tick_offset	tests/plotting/test_charts.py	/^def test_axis_tick_offset(axis):$/;"	f
test_axis_tick_size	tests/plotting/test_charts.py	/^def test_axis_tick_size(axis):$/;"	f
test_axis_tick_visible	tests/plotting/test_charts.py	/^def test_axis_tick_visible(axis):$/;"	f
test_axis_visible	tests/plotting/test_charts.py	/^def test_axis_visible(axis):$/;"	f
test_azimuth	tests/plotting/test_camera.py	/^def test_azimuth(camera):$/;"	f
test_backface_params	tests/plotting/test_plotting.py	/^def test_backface_params():$/;"	f
test_bad_init	tests/core/test_cells.py	/^def test_bad_init():$/;"	f
test_bad_instantiation	tests/core/test_dataset.py	/^def test_bad_instantiation():$/;"	f
test_bad_keyword_arguments	tests/plotting/test_plotting.py	/^def test_bad_keyword_arguments():$/;"	f
test_bad_legend_origin_and_size	tests/plotting/test_renderer.py	/^def test_bad_legend_origin_and_size(sphere):$/;"	f
test_barplot	tests/plotting/test_charts.py	/^def test_barplot(chart_2d, bar_plot):$/;"	f
test_base_viewer_ui	tests/plotting/jupyter/test_trame.py	/^def test_base_viewer_ui():$/;"	f
test_basic_mapper	tests/plotting/mappers/test_composite_mapper.py	/^def test_basic_mapper(composite_mapper):$/;"	f
test_beam_example	tests/plotting/test_demos.py	/^def test_beam_example():$/;"	f
test_below_range_color	tests/plotting/test_lookup_table.py	/^def test_below_range_color(lut):$/;"	f
test_below_range_color	tests/plotting/test_theme.py	/^def test_below_range_color(default_theme):$/;"	f
test_binarymarchingcubesreader	tests/core/test_reader.py	/^def test_binarymarchingcubesreader():$/;"	f
test_bitarray_cells	tests/core/test_dataset.py	/^def test_bitarray_cells(grid):$/;"	f
test_bitarray_field	tests/core/test_dataset.py	/^def test_bitarray_field(grid):$/;"	f
test_bitarray_points	tests/core/test_dataset.py	/^def test_bitarray_points(grid):$/;"	f
test_block_attr	tests/plotting/mappers/test_composite_mapper.py	/^def test_block_attr(block_attributes):$/;"	f
test_block_attr_get_item_	tests/plotting/mappers/test_composite_mapper.py	/^def test_block_attr_get_item_(multiblock_poly):$/;"	f
test_block_attributes	tests/plotting/mappers/test_composite_mapper.py	/^def test_block_attributes(block_attributes):$/;"	f
test_block_picking	tests/plotting/test_picking.py	/^def test_block_picking(multiblock_poly):$/;"	f
test_blur_pass	tests/plotting/test_render_pass.py	/^def test_blur_pass():$/;"	f
test_blurring	tests/plotting/test_plotting.py	/^def test_blurring():$/;"	f
test_bmpreader	tests/core/test_reader.py	/^def test_bmpreader():$/;"	f
test_bool	tests/core/test_datasetattributes.py	/^def test_bool(hexbeam_point_attributes):$/;"	f
test_bool_scalars	tests/plotting/test_plotting.py	/^def test_bool_scalars(sphere):$/;"	f
test_boolean_difference	tests/core/test_polydata.py	/^def test_boolean_difference(sphere, sphere_shifted):$/;"	f
test_boolean_difference_fail	tests/core/test_polydata.py	/^def test_boolean_difference_fail(plane, sphere):$/;"	f
test_boolean_intersect_edge_case	tests/core/test_polydata_filters.py	/^def test_boolean_intersect_edge_case():$/;"	f
test_boolean_union_intersection	tests/core/test_polydata.py	/^def test_boolean_union_intersection(sphere, sphere_shifted):$/;"	f
test_border	tests/plotting/test_renderer.py	/^def test_border(has_border):$/;"	f
test_bounds	tests/plotting/mappers/test_mapper.py	/^def test_bounds(dataset_mapper):$/;"	f
test_box	tests/core/test_geometric_objects.py	/^def test_box():$/;"	f
test_box_axes	tests/plotting/test_plotting.py	/^def test_box_axes():$/;"	f
test_box_axes_color_box	tests/plotting/test_plotting.py	/^def test_box_axes_color_box():$/;"	f
test_brush	tests/plotting/test_charts.py	/^def test_brush():$/;"	f
test_byureader	tests/core/test_reader.py	/^def test_byureader():$/;"	f
test_call	tests/plotting/test_lookup_table.py	/^def test_call(lut):$/;"	f
test_camera	tests/plotting/test_plotting.py	/^def test_camera(sphere):$/;"	f
test_camera	tests/plotting/test_theme.py	/^def test_camera(default_theme):$/;"	f
test_camera_from_paraview_pvcc	tests/plotting/test_camera.py	/^def test_camera_from_paraview_pvcc(paraview_pvcc):$/;"	f
test_camera_is_set	tests/plotting/test_renderer.py	/^def test_camera_is_set():$/;"	f
test_camera_position	tests/plotting/test_camera.py	/^def test_camera_position(camera):$/;"	f
test_camera_position	tests/plotting/test_renderer.py	/^def test_camera_position():$/;"	f
test_camera_to_paraview_pvcc	tests/plotting/test_camera.py	/^def test_camera_to_paraview_pvcc(camera, tmp_path):$/;"	f
test_cartesian_to_spherical	tests/core/test_utilities.py	/^def test_cartesian_to_spherical():$/;"	f
test_cast_rectilinear_grid	tests/core/test_grid.py	/^def test_cast_rectilinear_grid():$/;"	f
test_cast_to_pointset	tests/core/test_dataset.py	/^def test_cast_to_pointset(sphere):$/;"	f
test_cast_to_pointset_implicit	tests/core/test_dataset.py	/^def test_cast_to_pointset_implicit(uniform):$/;"	f
test_cast_to_poly_points_implicit	tests/core/test_dataset.py	/^def test_cast_to_poly_points_implicit(uniform):$/;"	f
test_cast_to_polydata	tests/core/test_pointset.py	/^def test_cast_to_polydata(pointset, deep):$/;"	f
test_cast_uniform_to_rectilinear	tests/core/test_grid.py	/^def test_cast_uniform_to_rectilinear():$/;"	f
test_cast_uniform_to_structured	tests/core/test_grid.py	/^def test_cast_uniform_to_structured():$/;"	f
test_cell_array_range	tests/core/test_dataset.py	/^def test_cell_array_range(grid):$/;"	f
test_cell_attribute	tests/core/test_cells.py	/^def test_cell_attribute(grid):$/;"	f
test_cell_bounds	tests/core/test_cells.py	/^def test_cell_bounds(grid):$/;"	f
test_cell_cast_to_unstructured_grid	tests/core/test_cells.py	/^def test_cell_cast_to_unstructured_grid(cell):$/;"	f
test_cell_center	tests/core/test_cells.py	/^def test_cell_center(grid):$/;"	f
test_cell_center_value	tests/core/test_cells.py	/^def test_cell_center_value():$/;"	f
test_cell_centers	tests/core/test_dataset_filters.py	/^def test_cell_centers(datasets):$/;"	f
test_cell_centers_composite	tests/core/test_dataset_filters.py	/^def test_cell_centers_composite(composite):$/;"	f
test_cell_copy	tests/core/test_cells.py	/^def test_cell_copy():$/;"	f
test_cell_copy_generic	tests/core/test_cells.py	/^def test_cell_copy_generic(cell):$/;"	f
test_cell_data	tests/core/test_dataset.py	/^def test_cell_data(grid):$/;"	f
test_cell_data_bad_value	tests/core/test_dataset.py	/^def test_cell_data_bad_value(grid):$/;"	f
test_cell_data_to_point_data	tests/core/test_dataset_filters.py	/^def test_cell_data_to_point_data():$/;"	f
test_cell_data_to_point_data_composite	tests/core/test_dataset_filters.py	/^def test_cell_data_to_point_data_composite(composite):$/;"	f
test_cell_dimension	tests/core/test_cells.py	/^def test_cell_dimension(cell, dim):$/;"	f
test_cell_edge_neighbors_ids	tests/core/test_dataset.py	/^def test_cell_edge_neighbors_ids(grid: DataSet, i0):$/;"	f
test_cell_edges	tests/core/test_cells.py	/^def test_cell_edges(cell):$/;"	f
test_cell_edges_point_ids	tests/core/test_cells.py	/^def test_cell_edges_point_ids(cell):$/;"	f
test_cell_face_neighbors_ids	tests/core/test_dataset.py	/^def test_cell_face_neighbors_ids(grid: DataSet, i0):$/;"	f
test_cell_faces	tests/core/test_cells.py	/^def test_cell_faces(cell):$/;"	f
test_cell_faces_point_ids	tests/core/test_cells.py	/^def test_cell_faces_point_ids(cell):$/;"	f
test_cell_get_cell	tests/core/test_cells.py	/^def test_cell_get_cell():$/;"	f
test_cell_get_edges	tests/core/test_cells.py	/^def test_cell_get_edges(cell):$/;"	f
test_cell_is_linear	tests/core/test_cells.py	/^def test_cell_is_linear(cell):$/;"	f
test_cell_n_edges	tests/core/test_cells.py	/^def test_cell_n_edges(cell, ne):$/;"	f
test_cell_n_faces	tests/core/test_cells.py	/^def test_cell_n_faces(cell, nf):$/;"	f
test_cell_n_points	tests/core/test_cells.py	/^def test_cell_n_points(cell, np):$/;"	f
test_cell_neighbors_levels	tests/core/test_dataset.py	/^def test_cell_neighbors_levels(grid: DataSet, i0, n_levels, connections):$/;"	f
test_cell_no_field_data	tests/core/test_cells.py	/^def test_cell_no_field_data():$/;"	f
test_cell_normals	tests/core/test_polydata.py	/^def test_cell_normals(sphere):$/;"	f
test_cell_picking_interactive	tests/plotting/test_picking.py	/^def test_cell_picking_interactive():$/;"	f
test_cell_picking_interactive_subplot	tests/plotting/test_picking.py	/^def test_cell_picking_interactive_subplot():$/;"	f
test_cell_point_ids	tests/core/test_cells.py	/^def test_cell_point_ids(grid):$/;"	f
test_cell_point_neighbors_ids	tests/core/test_dataset.py	/^def test_cell_point_neighbors_ids(grid: DataSet, i0):$/;"	f
test_cell_points	tests/core/test_cells.py	/^def test_cell_points(cell):$/;"	f
test_cell_type	tests/core/test_cells.py	/^def test_cell_type(cell, type):$/;"	f
test_cell_type_is_inside_enum	tests/core/test_cells.py	/^def test_cell_type_is_inside_enum(cell):$/;"	f
test_cell_types	tests/core/test_cells.py	/^def test_cell_types():$/;"	f
test_cells_dict_alternating_cells	tests/core/test_grid.py	/^def test_cells_dict_alternating_cells():$/;"	f
test_cells_dict_empty_grid	tests/core/test_grid.py	/^def test_cells_dict_empty_grid():$/;"	f
test_cells_dict_hexbeam_file	tests/core/test_grid.py	/^def test_cells_dict_hexbeam_file():$/;"	f
test_cells_dict_utils	tests/core/test_utilities.py	/^def test_cells_dict_utils():$/;"	f
test_cells_dict_variable_length	tests/core/test_grid.py	/^def test_cells_dict_variable_length():$/;"	f
test_cells_np_bool	tests/core/test_dataset.py	/^def test_cells_np_bool(grid):$/;"	f
test_cells_uint8	tests/core/test_dataset.py	/^def test_cells_uint8(grid):$/;"	f
test_center_of_mass	tests/core/test_pointset.py	/^def test_center_of_mass():$/;"	f
test_center_of_mass	tests/core/test_polydata.py	/^def test_center_of_mass(sphere):$/;"	f
test_change_name_fail	tests/core/test_dataset.py	/^def test_change_name_fail(grid):$/;"	f
test_chart_2d	tests/plotting/test_charts.py	/^def test_chart_2d(pl, chart_2d):$/;"	f
test_chart_box	tests/plotting/test_charts.py	/^def test_chart_box(pl, chart_box, box_plot):$/;"	f
test_chart_common	tests/plotting/test_charts.py	/^def test_chart_common(pl, chart_f, request):$/;"	f
test_chart_interaction	tests/plotting/test_charts.py	/^def test_chart_interaction():$/;"	f
test_chart_matplotlib_plot	tests/plotting/test_plotting.py	/^def test_chart_matplotlib_plot(verify_image_cache):$/;"	f
test_chart_mpl	tests/plotting/test_charts.py	/^def test_chart_mpl(pl, chart_mpl):$/;"	f
test_chart_mpl_update	tests/plotting/test_charts.py	/^def test_chart_mpl_update(pl):$/;"	f
test_chart_pie	tests/plotting/test_charts.py	/^def test_chart_pie(pl, chart_pie, pie_plot):$/;"	f
test_chart_plot	tests/plotting/test_plotting.py	/^def test_chart_plot():$/;"	f
test_charts	tests/plotting/test_charts.py	/^def test_charts(pl):$/;"	f
test_charts_sin	tests/plotting/test_plotting.py	/^def test_charts_sin():$/;"	f
test_check_range	tests/plotting/test_property.py	/^def test_check_range():$/;"	f
test_check_valid_vector	tests/core/test_utilities.py	/^def test_check_valid_vector():$/;"	f
test_circle	tests/core/test_geometric_objects.py	/^def test_circle():$/;"	f
test_circular_arc	tests/core/test_geometric_objects.py	/^def test_circular_arc():$/;"	f
test_circular_arc_from_normal	tests/core/test_geometric_objects.py	/^def test_circular_arc_from_normal():$/;"	f
test_clean	tests/core/test_polydata.py	/^def test_clean(sphere):$/;"	f
test_clean_grid	tests/core/test_unstructured_grid_filters.py	/^def test_clean_grid(hexbeam):$/;"	f
test_clean_points	tests/core/test_unstructured_grid_filters.py	/^def test_clean_points():$/;"	f
test_clear	tests/plotting/test_plotting.py	/^def test_clear(sphere):$/;"	f
test_clear	tests/plotting/test_scalar_bars.py	/^def test_clear(scalar_bars):$/;"	f
test_clear_actors	tests/plotting/test_plotter.py	/^def test_clear_actors(cube, sphere):$/;"	f
test_clear_data	tests/core/test_dataset.py	/^def test_clear_data():$/;"	f
test_clear_key_event_callbacks	tests/plotting/test_render_window_interactor.py	/^def test_clear_key_event_callbacks():$/;"	f
test_clip_box	tests/core/test_dataset_filters.py	/^def test_clip_box(datasets):$/;"	f
test_clip_box_composite	tests/core/test_dataset_filters.py	/^def test_clip_box_composite(composite):$/;"	f
test_clip_by_scalars_filter	tests/core/test_dataset_filters.py	/^def test_clip_by_scalars_filter(datasets, both, invert):$/;"	f
test_clip_closed_surface	tests/core/test_dataset_filters.py	/^def test_clip_closed_surface():$/;"	f
test_clip_filter	tests/core/test_dataset_filters.py	/^def test_clip_filter(datasets):$/;"	f
test_clip_filter_composite	tests/core/test_dataset_filters.py	/^def test_clip_filter_composite(composite):$/;"	f
test_clip_filter_no_active	tests/core/test_dataset_filters.py	/^def test_clip_filter_no_active(sphere):$/;"	f
test_clip_filter_scalar_multiple	tests/core/test_dataset_filters.py	/^def test_clip_filter_scalar_multiple():$/;"	f
test_clip_plane	tests/core/test_polydata.py	/^def test_clip_plane(sphere):$/;"	f
test_clip_surface	tests/core/test_dataset_filters.py	/^def test_clip_surface():$/;"	f
test_clipping_range	tests/plotting/test_camera.py	/^def test_clipping_range(camera):$/;"	f
test_closing_and_mem_cleanup	tests/plotting/test_plotting.py	/^def test_closing_and_mem_cleanup(verify_image_cache):$/;"	f
test_cmap	tests/plotting/test_theme.py	/^def test_cmap(default_theme):$/;"	f
test_cmap_list	tests/plotting/test_plotting.py	/^def test_cmap_list(sphere, verify_image_cache):$/;"	f
test_coerce_point_like_arg	tests/core/test_utilities.py	/^def test_coerce_point_like_arg():$/;"	f
test_coerce_point_like_arg_copy	tests/core/test_utilities.py	/^def test_coerce_point_like_arg_copy():$/;"	f
test_coerce_point_like_arg_errors	tests/core/test_utilities.py	/^def test_coerce_point_like_arg_errors():$/;"	f
test_coerce_points_like_args_does_not_copy	tests/core/test_utilities.py	/^def test_coerce_points_like_args_does_not_copy():$/;"	f
test_collision	tests/core/test_dataset_filters.py	/^def test_collision(sphere):$/;"	f
test_collision_plot	tests/plotting/test_plotting.py	/^def test_collision_plot(verify_image_cache):$/;"	f
test_collision_solid_non_triangle	tests/core/test_dataset_filters.py	/^def test_collision_solid_non_triangle(hexbeam):$/;"	f
test_color	tests/plotting/mappers/test_composite_mapper.py	/^def test_color(block_attr):$/;"	f
test_color	tests/plotting/test_colors.py	/^def test_color():$/;"	f
test_color_cycler	tests/plotting/test_plotting.py	/^def test_color_cycler():$/;"	f
test_color_cycler_names	tests/plotting/test_plotting.py	/^def test_color_cycler_names(name):$/;"	f
test_color_missing_with_nan	tests/plotting/mappers/test_composite_mapper.py	/^def test_color_missing_with_nan(composite_mapper):$/;"	f
test_color_mode	tests/plotting/mappers/test_mapper.py	/^def test_color_mode(dataset_mapper):$/;"	f
test_color_opacity	tests/plotting/test_colors.py	/^def test_color_opacity():$/;"	f
test_color_str	tests/plotting/test_theme.py	/^def test_color_str():$/;"	f
test_colorbar_eq	tests/plotting/test_theme.py	/^def test_colorbar_eq(default_theme):$/;"	f
test_colorbar_height	tests/plotting/test_theme.py	/^def test_colorbar_height(default_theme):$/;"	f
test_colorbar_position_x	tests/plotting/test_theme.py	/^def test_colorbar_position_x(default_theme):$/;"	f
test_colorbar_position_y	tests/plotting/test_theme.py	/^def test_colorbar_position_y(default_theme):$/;"	f
test_colorbar_width	tests/plotting/test_theme.py	/^def test_colorbar_width(default_theme):$/;"	f
test_colors	tests/plotting/test_lights.py	/^def test_colors():$/;"	f
test_combine_filter	tests/core/test_composite.py	/^def test_combine_filter(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_common_plotting_import_paths	tests/namespace/test_plotting_namespace.py	/^def test_common_plotting_import_paths():$/;"	f
test_common_utilities_import_paths	tests/namespace/test_utilities_namespace.py	/^def test_common_utilities_import_paths():$/;"	f
test_compare_images_two_plotter_different	tests/plotting/test_regression.py	/^def test_compare_images_two_plotter_different(sphere, airplane, tmpdir):$/;"	f
test_compare_images_two_plotters_same	tests/plotting/test_regression.py	/^def test_compare_images_two_plotters_same(sphere, tmpdir):$/;"	f
test_complex	tests/core/test_datasetattributes.py	/^def test_complex(plane, dtype_str):$/;"	f
test_complex_collection	tests/plotting/test_collection.py	/^def test_complex_collection(plane):$/;"	f
test_complex_raises	tests/core/test_datasetattributes.py	/^def test_complex_raises(plane):$/;"	f
test_composite_mapper_non_poly	tests/plotting/mappers/test_composite_mapper.py	/^def test_composite_mapper_non_poly(multiblock_all):$/;"	f
test_compute_cell_quality	tests/core/test_dataset_filters.py	/^def test_compute_cell_quality():$/;"	f
test_compute_cell_sizes	tests/core/test_dataset_filters.py	/^def test_compute_cell_sizes(datasets):$/;"	f
test_compute_cell_sizes_composite	tests/core/test_dataset_filters.py	/^def test_compute_cell_sizes_composite(composite):$/;"	f
test_compute_derivatives	tests/core/test_dataset_filters.py	/^def test_compute_derivatives():$/;"	f
test_compute_normals	tests/core/test_composite.py	/^def test_compute_normals(multiblock_poly):$/;"	f
test_compute_normals	tests/core/test_polydata.py	/^def test_compute_normals(sphere):$/;"	f
test_compute_normals_inplace	tests/core/test_polydata.py	/^def test_compute_normals_inplace(sphere):$/;"	f
test_compute_normals_split_vertices	tests/core/test_polydata.py	/^def test_compute_normals_split_vertices(cube):$/;"	f
test_concatenate_structured	tests/core/test_dataset_filters.py	/^def test_concatenate_structured($/;"	f
test_concatenate_structured_bad_dimensions	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_bad_dimensions(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_bad_inputs	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_bad_inputs(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_bad_point_data	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_bad_point_data(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_different_arrays	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_different_arrays(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_disconnected	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_disconnected(structured_grids_split_disconnected):$/;"	f
test_cone	tests/core/test_geometric_objects.py	/^def test_cone():$/;"	f
test_cone_source	tests/core/test_geometric_sources.py	/^def test_cone_source():$/;"	f
test_connectivity_all	tests/core/test_dataset_filters.py	/^def test_connectivity_all(foot_bones):$/;"	f
test_connectivity_cell_seed	tests/core/test_dataset_filters.py	/^def test_connectivity_cell_seed(foot_bones):$/;"	f
test_connectivity_closest_point	tests/core/test_dataset_filters.py	/^def test_connectivity_closest_point(foot_bones):$/;"	f
test_connectivity_inplace_and_output_type	tests/core/test_dataset_filters.py	/^def test_connectivity_inplace_and_output_type($/;"	f
test_connectivity_label_regions	tests/core/test_dataset_filters.py	/^def test_connectivity_label_regions(datasets, dataset_index, extraction_mode):$/;"	f
test_connectivity_largest	tests/core/test_dataset_filters.py	/^def test_connectivity_largest(foot_bones):$/;"	f
test_connectivity_point_seed	tests/core/test_dataset_filters.py	/^def test_connectivity_point_seed(foot_bones):$/;"	f
test_connectivity_raises	tests/core/test_dataset_filters.py	/^def test_connectivity_raises($/;"	f
test_connectivity_scalar_range	tests/core/test_dataset_filters.py	/^def test_connectivity_scalar_range($/;"	f
test_connectivity_specified	tests/core/test_dataset_filters.py	/^def test_connectivity_specified(foot_bones):$/;"	f
test_connectivity_specified_returns_empty	tests/core/test_dataset_filters.py	/^def test_connectivity_specified_returns_empty(connected_datasets, dataset_index):$/;"	f
test_contains_should_contain_when_added	tests/core/test_datasetattributes.py	/^def test_contains_should_contain_when_added(insert_arange_narray):$/;"	f
test_contour	tests/core/test_dataset_filters.py	/^def test_contour(uniform, method):$/;"	f
test_contour_banded_points	tests/core/test_polydata_filters.py	/^def test_contour_banded_points(sphere):$/;"	f
test_contour_banded_raise	tests/core/test_polydata_filters.py	/^def test_contour_banded_raise(sphere):$/;"	f
test_contour_errors	tests/core/test_dataset_filters.py	/^def test_contour_errors(uniform):$/;"	f
test_convert_array	tests/core/test_utilities.py	/^def test_convert_array():$/;"	f
test_convert_id_list	tests/core/test_utilities.py	/^def test_convert_id_list():$/;"	f
test_copies_are_not_associated	tests/core/test_pyvista_ndarray.py	/^def test_copies_are_not_associated():$/;"	f
test_copy	tests/core/test_dataset.py	/^def test_copy(grid):$/;"	f
test_copy	tests/plotting/mappers/test_mapper.py	/^def test_copy(dataset_mapper, sphere):$/;"	f
test_copy	tests/plotting/test_camera.py	/^def test_copy():$/;"	f
test_copy	tests/plotting/test_lights.py	/^def test_copy():$/;"	f
test_copy_attributes	tests/core/test_dataset.py	/^def test_copy_attributes(grid):$/;"	f
test_copy_metadata	tests/core/test_dataset.py	/^def test_copy_metadata(globe):$/;"	f
test_copy_no_copy_wrap_object	tests/core/test_grid.py	/^def test_copy_no_copy_wrap_object(datasets):$/;"	f
test_copy_no_copy_wrap_object_vtk9	tests/core/test_grid.py	/^def test_copy_no_copy_wrap_object_vtk9(datasets_vtk9):$/;"	f
test_copy_structure	tests/core/test_dataset.py	/^def test_copy_structure(grid):$/;"	f
test_copy_vtk_array	tests/core/test_utilities.py	/^def test_copy_vtk_array():$/;"	f
test_core_errors_namespace	tests/namespace/test_errors_namespace.py	/^def test_core_errors_namespace(name):$/;"	f
test_corner_annotation_prop	tests/plotting/test_text.py	/^def test_corner_annotation_prop(corner_annotation):$/;"	f
test_corner_annotation_text	tests/plotting/test_text.py	/^def test_corner_annotation_text(corner_annotation):$/;"	f
test_create_image_data_from_file	tests/core/test_grid.py	/^def test_create_image_data_from_file():$/;"	f
test_create_image_data_from_specs	tests/core/test_grid.py	/^def test_create_image_data_from_specs():$/;"	f
test_create_rectilinear_after_init	tests/core/test_grid.py	/^def test_create_rectilinear_after_init():$/;"	f
test_create_rectilinear_grid_from_file	tests/core/test_grid.py	/^def test_create_rectilinear_grid_from_file():$/;"	f
test_create_rectilinear_grid_from_specs	tests/core/test_grid.py	/^def test_create_rectilinear_grid_from_specs():$/;"	f
test_create_uniform_grid_from_specs	tests/core/test_grid.py	/^def test_create_uniform_grid_from_specs():$/;"	f
test_createvectorpolydata	tests/core/test_utilities.py	/^def test_createvectorpolydata():$/;"	f
test_createvectorpolydata_1D	tests/core/test_utilities.py	/^def test_createvectorpolydata_1D():$/;"	f
test_createvectorpolydata_error	tests/core/test_utilities.py	/^def test_createvectorpolydata_error():$/;"	f
test_cube	tests/core/test_geometric_objects.py	/^def test_cube():$/;"	f
test_cube_axes_actor	tests/plotting/test_cube_axes_actor.py	/^def test_cube_axes_actor():$/;"	f
test_culling_frontface	tests/plotting/test_plotting.py	/^def test_culling_frontface(sphere):$/;"	f
test_curvature	tests/core/test_polydata.py	/^def test_curvature(sphere, curv_type):$/;"	f
test_custom_opacity	tests/plotting/test_lookup_table.py	/^def test_custom_opacity(lut, skip_check_gc):$/;"	f
test_cylinder	tests/core/test_geometric_objects.py	/^def test_cylinder():$/;"	f
test_cylinder_structured	tests/core/test_geometric_objects.py	/^def test_cylinder_structured():$/;"	f
test_datasetfilters_init	tests/core/test_dataset_filters.py	/^def test_datasetfilters_init():$/;"	f
test_dcmreader	tests/core/test_reader.py	/^def test_dcmreader(tmpdir):$/;"	f
test_decimate	tests/core/test_polydata.py	/^def test_decimate(sphere):$/;"	f
test_decimate_boundary	tests/core/test_dataset_filters.py	/^def test_decimate_boundary():$/;"	f
test_decimate_pro	tests/core/test_polydata.py	/^def test_decimate_pro(sphere):$/;"	f
test_deep_clean	tests/plotting/test_plotter.py	/^def test_deep_clean(cube):$/;"	f
test_default_name_tracking	tests/plotting/test_plotting.py	/^def test_default_name_tracking():$/;"	f
test_del_should_fail_bad_argument	tests/core/test_datasetattributes.py	/^def test_del_should_fail_bad_argument(removed_key, hexbeam_point_attributes):$/;"	f
test_del_slice	tests/core/test_composite.py	/^def test_del_slice(sphere):$/;"	f
test_delaunay_2d	tests/core/test_polydata.py	/^def test_delaunay_2d():$/;"	f
test_delaunay_2d_unstructured	tests/core/test_dataset_filters.py	/^def test_delaunay_2d_unstructured(datasets):$/;"	f
test_delaunay_3d	tests/core/test_dataset_filters.py	/^def test_delaunay_3d():$/;"	f
test_delaunay_3d	tests/core/test_pointset.py	/^def test_delaunay_3d(pointset):$/;"	f
test_delete_downloads	tests/examples/test_downloads.py	/^def test_delete_downloads(tmpdir):$/;"	f
test_delete_downloads_does_not_exist	tests/examples/test_downloads.py	/^def test_delete_downloads_does_not_exist(tmpdir):$/;"	f
test_demreader	tests/core/test_reader.py	/^def test_demreader():$/;"	f
test_deprecated_store_image	tests/plotting/test_plotter.py	/^def test_deprecated_store_image():$/;"	f
test_depth_of_field	tests/plotting/test_plotting.py	/^def test_depth_of_field():$/;"	f
test_depth_of_field_pass	tests/plotting/test_render_pass.py	/^def test_depth_of_field_pass():$/;"	f
test_depth_of_field_raise_no_ssao	tests/plotting/test_render_pass.py	/^def test_depth_of_field_raise_no_ssao():$/;"	f
test_depth_peeling_config	tests/plotting/test_theme.py	/^def test_depth_peeling_config(default_theme, parm):$/;"	f
test_depth_peeling_eq	tests/plotting/test_theme.py	/^def test_depth_peeling_eq(default_theme):$/;"	f
test_depth_silhouette_eq	tests/plotting/test_theme.py	/^def test_depth_silhouette_eq(default_theme):$/;"	f
test_depth_silhouette_opacity_outside_clamp	tests/plotting/test_theme.py	/^def test_depth_silhouette_opacity_outside_clamp(default_theme):$/;"	f
test_destructor	tests/core/test_grid.py	/^def test_destructor():$/;"	f
test_dict	tests/plotting/test_scalar_bars.py	/^def test_dict(scalar_bars):$/;"	f
test_direction	tests/core/test_parametric_geometry.py	/^def test_direction():$/;"	f
test_direction	tests/plotting/test_camera.py	/^def test_direction(camera):$/;"	f
test_disable_depth_of_field	tests/plotting/test_plotter.py	/^def test_disable_depth_of_field(sphere):$/;"	f
test_disable_hidden_line_removal	tests/plotting/test_plotter.py	/^def test_disable_hidden_line_removal():$/;"	f
test_disable_parallel_projection	tests/plotting/test_camera.py	/^def test_disable_parallel_projection(camera):$/;"	f
test_disable_picking	tests/plotting/test_picking.py	/^def test_disable_picking(sphere, left_clicking):$/;"	f
test_disable_stereo_render	tests/plotting/test_plotting.py	/^def test_disable_stereo_render():$/;"	f
test_disc	tests/core/test_geometric_objects.py	/^def test_disc():$/;"	f
test_distance	tests/plotting/test_camera.py	/^def test_distance(camera):$/;"	f
test_do_not_set_attributes	tests/plotting/mappers/test_mapper.py	/^def test_do_not_set_attributes(dataset_mapper):$/;"	f
test_dodecahedron	tests/core/test_geometric_objects.py	/^def test_dodecahedron():$/;"	f
test_download_action_figure	tests/examples/test_download_files.py	/^def test_download_action_figure():$/;"	f
test_download_aero_bracket	tests/examples/test_download_files.py	/^def test_download_aero_bracket():$/;"	f
test_download_angular_sector	tests/examples/test_download_files.py	/^def test_download_angular_sector():$/;"	f
test_download_antarctica_velocity	tests/examples/test_download_files.py	/^def test_download_antarctica_velocity():$/;"	f
test_download_armadillo	tests/examples/test_download_files.py	/^def test_download_armadillo():$/;"	f
test_download_backward_facing_step	tests/examples/test_download_files.py	/^def test_download_backward_facing_step():$/;"	f
test_download_beach	tests/examples/test_download_files.py	/^def test_download_beach():$/;"	f
test_download_bird	tests/examples/test_download_files.py	/^def test_download_bird():$/;"	f
test_download_bird_bath	tests/examples/test_download_files.py	/^def test_download_bird_bath():$/;"	f
test_download_bird_texture	tests/examples/test_download_files.py	/^def test_download_bird_texture():$/;"	f
test_download_black_vase	tests/examples/test_download_files.py	/^def test_download_black_vase():$/;"	f
test_download_blood_vessels	tests/examples/test_download_files.py	/^def test_download_blood_vessels():$/;"	f
test_download_blow	tests/examples/test_download_files.py	/^def test_download_blow():$/;"	f
test_download_bolt_nut	tests/examples/test_download_files.py	/^def test_download_bolt_nut():$/;"	f
test_download_brain	tests/examples/test_download_files.py	/^def test_download_brain():$/;"	f
test_download_bunny	tests/examples/test_download_files.py	/^def test_download_bunny():$/;"	f
test_download_bunny_coarse	tests/examples/test_download_files.py	/^def test_download_bunny_coarse():$/;"	f
test_download_cad_model	tests/examples/test_download_files.py	/^def test_download_cad_model():$/;"	f
test_download_cad_model_case	tests/examples/test_download_files.py	/^def test_download_cad_model_case():$/;"	f
test_download_cake_easy	tests/examples/test_download_files.py	/^def test_download_cake_easy():$/;"	f
test_download_cake_easy_texture	tests/examples/test_download_files.py	/^def test_download_cake_easy_texture():$/;"	f
test_download_can_crushed_hdf	tests/examples/test_download_files.py	/^def test_download_can_crushed_hdf():$/;"	f
test_download_carotid	tests/examples/test_download_files.py	/^def test_download_carotid():$/;"	f
test_download_cavity	tests/examples/test_download_files.py	/^def test_download_cavity():$/;"	f
test_download_cells_nd	tests/examples/test_download_files.py	/^def test_download_cells_nd():$/;"	f
test_download_cgns_multi	tests/examples/test_download_files.py	/^def test_download_cgns_multi():$/;"	f
test_download_cgns_structured	tests/examples/test_download_files.py	/^def test_download_cgns_structured():$/;"	f
test_download_chest	tests/examples/test_download_files.py	/^def test_download_chest():$/;"	f
test_download_cloud_dark_matter	tests/examples/test_download_files.py	/^def test_download_cloud_dark_matter():$/;"	f
test_download_cloud_dark_matter_dense	tests/examples/test_download_files.py	/^def test_download_cloud_dark_matter_dense():$/;"	f
test_download_clown	tests/examples/test_download_files.py	/^def test_download_clown():$/;"	f
test_download_coastlines	tests/examples/test_download_files.py	/^def test_download_coastlines():$/;"	f
test_download_coil_magnetic_field	tests/examples/test_download_files.py	/^def test_download_coil_magnetic_field():$/;"	f
test_download_cow	tests/examples/test_download_files.py	/^def test_download_cow():$/;"	f
test_download_cow_head	tests/examples/test_download_files.py	/^def test_download_cow_head():$/;"	f
test_download_crater_imagery	tests/examples/test_download_files.py	/^def test_download_crater_imagery():$/;"	f
test_download_crater_topo	tests/examples/test_download_files.py	/^def test_download_crater_topo():$/;"	f
test_download_cubemap_park	tests/examples/test_download_files.py	/^def test_download_cubemap_park():$/;"	f
test_download_cubemap_space_16k	tests/examples/test_download_files.py	/^def test_download_cubemap_space_16k():$/;"	f
test_download_cubemap_space_4k	tests/examples/test_download_files.py	/^def test_download_cubemap_space_4k():$/;"	f
test_download_cylinder_crossflow	tests/examples/test_download_files.py	/^def test_download_cylinder_crossflow():$/;"	f
test_download_damavand_volcano	tests/examples/test_download_files.py	/^def test_download_damavand_volcano():$/;"	f
test_download_delaunay_example	tests/examples/test_download_files.py	/^def test_download_delaunay_example():$/;"	f
test_download_dicom_stack	tests/examples/test_download_files.py	/^def test_download_dicom_stack():$/;"	f
test_download_disc_quads	tests/examples/test_download_files.py	/^def test_download_disc_quads():$/;"	f
test_download_dolfin	tests/examples/test_download_files.py	/^def test_download_dolfin():$/;"	f
test_download_doorman	tests/examples/test_download_files.py	/^def test_download_doorman():$/;"	f
test_download_dragon	tests/examples/test_download_files.py	/^def test_download_dragon():$/;"	f
test_download_drill	tests/examples/test_download_files.py	/^def test_download_drill():$/;"	f
test_download_dual_sphere_animation	tests/examples/test_download_files.py	/^def test_download_dual_sphere_animation():$/;"	f
test_download_electronics_cooling	tests/examples/test_download_files.py	/^def test_download_electronics_cooling():$/;"	f
test_download_embryo	tests/examples/test_download_files.py	/^def test_download_embryo():$/;"	f
test_download_emoji	tests/examples/test_download_files.py	/^def test_download_emoji():$/;"	f
test_download_emoji_texture	tests/examples/test_download_files.py	/^def test_download_emoji_texture():$/;"	f
test_download_exodus	tests/examples/test_download_files.py	/^def test_download_exodus():$/;"	f
test_download_face	tests/examples/test_download_files.py	/^def test_download_face():$/;"	f
test_download_face2	tests/examples/test_download_files.py	/^def test_download_face2():$/;"	f
test_download_faults	tests/examples/test_download_files.py	/^def test_download_faults():$/;"	f
test_download_fea_hertzian_contact_cylinder	tests/examples/test_download_files.py	/^def test_download_fea_hertzian_contact_cylinder():$/;"	f
test_download_filled_contours	tests/examples/test_download_files.py	/^def test_download_filled_contours():$/;"	f
test_download_foot_bones	tests/examples/test_download_files.py	/^def test_download_foot_bones():$/;"	f
test_download_frog	tests/examples/test_download_files.py	/^def test_download_frog():$/;"	f
test_download_frog_tissue	tests/examples/test_download_files.py	/^def test_download_frog_tissue():$/;"	f
test_download_gears	tests/examples/test_download_files.py	/^def test_download_gears():$/;"	f
test_download_gif_simple	tests/examples/test_download_files.py	/^def test_download_gif_simple():$/;"	f
test_download_gltf_avocado	tests/examples/test_download_files.py	/^def test_download_gltf_avocado():$/;"	f
test_download_gltf_damaged_helmet	tests/examples/test_download_files.py	/^def test_download_gltf_damaged_helmet():$/;"	f
test_download_gltf_gearbox	tests/examples/test_download_files.py	/^def test_download_gltf_gearbox():$/;"	f
test_download_gltf_milk_truck	tests/examples/test_download_files.py	/^def test_download_gltf_milk_truck():$/;"	f
test_download_gltf_sheen_chair	tests/examples/test_download_files.py	/^def test_download_gltf_sheen_chair():$/;"	f
test_download_gourds	tests/examples/test_download_files.py	/^def test_download_gourds():$/;"	f
test_download_gourds_pnm	tests/examples/test_download_files.py	/^def test_download_gourds_pnm():$/;"	f
test_download_gourds_texture	tests/examples/test_download_files.py	/^def test_download_gourds_texture():$/;"	f
test_download_gpr_data_array	tests/examples/test_download_files.py	/^def test_download_gpr_data_array():$/;"	f
test_download_gpr_path	tests/examples/test_download_files.py	/^def test_download_gpr_path():$/;"	f
test_download_guitar	tests/examples/test_download_files.py	/^def test_download_guitar():$/;"	f
test_download_head	tests/examples/test_download_files.py	/^def test_download_head():$/;"	f
test_download_honolulu	tests/examples/test_download_files.py	/^def test_download_honolulu():$/;"	f
test_download_horse	tests/examples/test_download_files.py	/^def test_download_horse():$/;"	f
test_download_horse_points	tests/examples/test_download_files.py	/^def test_download_horse_points():$/;"	f
test_download_human	tests/examples/test_download_files.py	/^def test_download_human():$/;"	f
test_download_iron_protein	tests/examples/test_download_files.py	/^def test_download_iron_protein():$/;"	f
test_download_ivan_angel	tests/examples/test_download_files.py	/^def test_download_ivan_angel():$/;"	f
test_download_kitchen	tests/examples/test_download_files.py	/^def test_download_kitchen():$/;"	f
test_download_kitchen_split	tests/examples/test_download_files.py	/^def test_download_kitchen_split():$/;"	f
test_download_knee	tests/examples/test_download_files.py	/^def test_download_knee():$/;"	f
test_download_knee_full	tests/examples/test_download_files.py	/^def test_download_knee_full():$/;"	f
test_download_letter_a	tests/examples/test_download_files.py	/^def test_download_letter_a():$/;"	f
test_download_letter_k	tests/examples/test_download_files.py	/^def test_download_letter_k():$/;"	f
test_download_lidar	tests/examples/test_download_files.py	/^def test_download_lidar():$/;"	f
test_download_lobster	tests/examples/test_download_files.py	/^def test_download_lobster():$/;"	f
test_download_louis_louvre	tests/examples/test_download_files.py	/^def test_download_louis_louvre():$/;"	f
test_download_lucy	tests/examples/test_download_files.py	/^def test_download_lucy():$/;"	f
test_download_mars_jpg	tests/examples/test_download_files.py	/^def test_download_mars_jpg():$/;"	f
test_download_masonry_texture	tests/examples/test_download_files.py	/^def test_download_masonry_texture():$/;"	f
test_download_meshio_xdmf	tests/examples/test_download_files.py	/^def test_download_meshio_xdmf():$/;"	f
test_download_model_with_variance	tests/examples/test_download_files.py	/^def test_download_model_with_variance():$/;"	f
test_download_moonlanding_image	tests/examples/test_download_files.py	/^def test_download_moonlanding_image():$/;"	f
test_download_motor	tests/examples/test_download_files.py	/^def test_download_motor():$/;"	f
test_download_mount_damavand	tests/examples/test_download_files.py	/^def test_download_mount_damavand():$/;"	f
test_download_mug	tests/examples/test_download_files.py	/^def test_download_mug():$/;"	f
test_download_naca	tests/examples/test_download_files.py	/^def test_download_naca():$/;"	f
test_download_nefertiti	tests/examples/test_download_files.py	/^def test_download_nefertiti():$/;"	f
test_download_notch_displacement	tests/examples/test_download_files.py	/^def test_download_notch_displacement():$/;"	f
test_download_notch_stress	tests/examples/test_download_files.py	/^def test_download_notch_stress():$/;"	f
test_download_oblique_cone	tests/examples/test_download_files.py	/^def test_download_oblique_cone():$/;"	f
test_download_office	tests/examples/test_download_files.py	/^def test_download_office():$/;"	f
test_download_openfoam_tubes	tests/examples/test_download_files.py	/^def test_download_openfoam_tubes():$/;"	f
test_download_owl	tests/examples/test_download_files.py	/^def test_download_owl():$/;"	f
test_download_parched_canal_4k	tests/examples/test_download_files.py	/^def test_download_parched_canal_4k():$/;"	f
test_download_particles_lethe	tests/examples/test_download_files.py	/^def test_download_particles_lethe():$/;"	f
test_download_pepper	tests/examples/test_download_files.py	/^def test_download_pepper():$/;"	f
test_download_pine_roots	tests/examples/test_download_files.py	/^def test_download_pine_roots():$/;"	f
test_download_plastic_vase	tests/examples/test_download_files.py	/^def test_download_plastic_vase():$/;"	f
test_download_poly_line	tests/examples/test_download_files.py	/^def test_download_poly_line():$/;"	f
test_download_prostate	tests/examples/test_download_files.py	/^def test_download_prostate():$/;"	f
test_download_pump_bracket	tests/examples/test_download_files.py	/^def test_download_pump_bracket():$/;"	f
test_download_puppy	tests/examples/test_download_files.py	/^def test_download_puppy():$/;"	f
test_download_puppy_texture	tests/examples/test_download_files.py	/^def test_download_puppy_texture():$/;"	f
test_download_quadratic_pyramid	tests/examples/test_download_files.py	/^def test_download_quadratic_pyramid():$/;"	f
test_download_rectilinear_grid	tests/examples/test_download_files.py	/^def test_download_rectilinear_grid():$/;"	f
test_download_rgba_texture	tests/examples/test_download_files.py	/^def test_download_rgba_texture():$/;"	f
test_download_room_surface_mesh	tests/examples/test_download_files.py	/^def test_download_room_surface_mesh():$/;"	f
test_download_saddle_surface	tests/examples/test_download_files.py	/^def test_download_saddle_surface():$/;"	f
test_download_sea_vase	tests/examples/test_download_files.py	/^def test_download_sea_vase():$/;"	f
test_download_sextant_vrml	tests/examples/test_download_files.py	/^def test_download_sextant_vrml():$/;"	f
test_download_shark	tests/examples/test_download_files.py	/^def test_download_shark():$/;"	f
test_download_single_sphere_animation	tests/examples/test_download_files.py	/^def test_download_single_sphere_animation():$/;"	f
test_download_sky_box_nz	tests/examples/test_download_files.py	/^def test_download_sky_box_nz():$/;"	f
test_download_sky_box_nz_texture	tests/examples/test_download_files.py	/^def test_download_sky_box_nz_texture():$/;"	f
test_download_sparse_points	tests/examples/test_download_files.py	/^def test_download_sparse_points():$/;"	f
test_download_spider	tests/examples/test_download_files.py	/^def test_download_spider():$/;"	f
test_download_st_helens	tests/examples/test_download_files.py	/^def test_download_st_helens():$/;"	f
test_download_stars_cloud_hyg	tests/examples/test_download_files.py	/^def test_download_stars_cloud_hyg():$/;"	f
test_download_stars_jpg	tests/examples/test_download_files.py	/^def test_download_stars_jpg():$/;"	f
test_download_structured_grid	tests/examples/test_download_files.py	/^def test_download_structured_grid():$/;"	f
test_download_structured_grid_two	tests/examples/test_download_files.py	/^def test_download_structured_grid_two():$/;"	f
test_download_teapot	tests/examples/test_download_files.py	/^def test_download_teapot():$/;"	f
test_download_teapot_vrml	tests/examples/test_download_files.py	/^def test_download_teapot_vrml():$/;"	f
test_download_tecplot_ascii	tests/examples/test_download_files.py	/^def test_download_tecplot_ascii():$/;"	f
test_download_tensors	tests/examples/test_download_files.py	/^def test_download_tensors():$/;"	f
test_download_tetra_dc_mesh	tests/examples/test_download_files.py	/^def test_download_tetra_dc_mesh():$/;"	f
test_download_tetrahedron	tests/examples/test_download_files.py	/^def test_download_tetrahedron():$/;"	f
test_download_thermal_probes	tests/examples/test_download_files.py	/^def test_download_thermal_probes():$/;"	f
test_download_topo_global	tests/examples/test_download_files.py	/^def test_download_topo_global():$/;"	f
test_download_topo_land	tests/examples/test_download_files.py	/^def test_download_topo_land():$/;"	f
test_download_torso	tests/examples/test_download_files.py	/^def test_download_torso():$/;"	f
test_download_tri_quadratic_hexahedron	tests/examples/test_download_files.py	/^def test_download_tri_quadratic_hexahedron():$/;"	f
test_download_trumpet	tests/examples/test_download_files.py	/^def test_download_trumpet():$/;"	f
test_download_turbine_blade	tests/examples/test_download_files.py	/^def test_download_turbine_blade():$/;"	f
test_download_unstructured_grid	tests/examples/test_download_files.py	/^def test_download_unstructured_grid():$/;"	f
test_download_urn	tests/examples/test_download_files.py	/^def test_download_urn():$/;"	f
test_download_usa	tests/examples/test_download_files.py	/^def test_download_usa():$/;"	f
test_download_usa_texture	tests/examples/test_download_files.py	/^def test_download_usa_texture():$/;"	f
test_download_vtk	tests/examples/test_download_files.py	/^def test_download_vtk():$/;"	f
test_download_vtk_logo	tests/examples/test_download_files.py	/^def test_download_vtk_logo():$/;"	f
test_download_wavy	tests/examples/test_download_files.py	/^def test_download_wavy():$/;"	f
test_download_woman	tests/examples/test_download_files.py	/^def test_download_woman():$/;"	f
test_edge_mask	tests/core/test_polydata.py	/^def test_edge_mask(sphere):$/;"	f
test_edl_pass	tests/plotting/test_render_pass.py	/^def test_edl_pass():$/;"	f
test_element_picking	tests/plotting/test_picking.py	/^def test_element_picking(mode):$/;"	f
test_elevation	tests/core/test_dataset_filters.py	/^def test_elevation():$/;"	f
test_elevation	tests/plotting/test_camera.py	/^def test_elevation(camera):$/;"	f
test_elevation_composite	tests/core/test_dataset_filters.py	/^def test_elevation_composite(composite):$/;"	f
test_ellipse	tests/core/test_geometric_objects.py	/^def test_ellipse():$/;"	f
test_emissive	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_emissive(mapper):$/;"	f
test_empty	tests/examples/test_cell_examples.py	/^def test_empty():$/;"	f
test_empty_active_vectors	tests/core/test_datasetattributes.py	/^def test_empty_active_vectors(hexbeam):$/;"	f
test_empty_points	tests/core/test_dataset.py	/^def test_empty_points():$/;"	f
test_empty_regular_faces	tests/core/test_polydata.py	/^def test_empty_regular_faces():$/;"	f
test_enable_hidden_line_removal	tests/plotting/test_plotter.py	/^def test_enable_hidden_line_removal():$/;"	f
test_enable_parallel_projection	tests/plotting/test_camera.py	/^def test_enable_parallel_projection(camera):$/;"	f
test_enable_picking_gc	tests/plotting/test_plotting.py	/^def test_enable_picking_gc():$/;"	f
test_enable_stereo_render	tests/plotting/test_plotting.py	/^def test_enable_stereo_render(verify_image_cache):$/;"	f
test_ensight_multi_block_io	tests/core/test_composite.py	/^def test_ensight_multi_block_io(extension, binary, tmpdir, ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_ensightreader_arrays	tests/core/test_reader.py	/^def test_ensightreader_arrays():$/;"	f
test_ensightreader_timepoints	tests/core/test_reader.py	/^def test_ensightreader_timepoints():$/;"	f
test_eq	tests/core/test_datasetattributes.py	/^def test_eq(sphere):$/;"	f
test_eq	tests/plotting/test_camera.py	/^def test_eq():$/;"	f
test_eq	tests/plotting/test_lights.py	/^def test_eq():$/;"	f
test_eq_wrong_type	tests/core/test_dataobject.py	/^def test_eq_wrong_type(sphere):$/;"	f
test_explode	tests/core/test_dataset.py	/^def test_explode(datasets):$/;"	f
test_explode	tests/core/test_pointset.py	/^def test_explode(pointset):$/;"	f
test_export_color	tests/plotting/jupyter/test_trame.py	/^def test_export_color(tmpdir, skip_check_gc):$/;"	f
test_export_gltf	tests/plotting/test_plotting.py	/^def test_export_gltf(tmpdir, sphere, airplane, hexbeam, verify_image_cache):$/;"	f
test_export_multi	tests/plotting/jupyter/test_trame.py	/^def test_export_multi(tmpdir, skip_check_gc):$/;"	f
test_export_obj	tests/plotting/test_plotting.py	/^def test_export_obj(tmpdir, sphere):$/;"	f
test_export_single	tests/plotting/jupyter/test_trame.py	/^def test_export_single(tmpdir, skip_check_gc):$/;"	f
test_export_texture	tests/plotting/jupyter/test_trame.py	/^def test_export_texture(tmpdir, skip_check_gc):$/;"	f
test_export_verts	tests/plotting/jupyter/test_trame.py	/^def test_export_verts(tmpdir, skip_check_gc):$/;"	f
test_export_vrml	tests/plotting/test_plotting.py	/^def test_export_vrml(tmpdir, sphere, airplane, hexbeam):$/;"	f
test_extend	tests/core/test_composite.py	/^def test_extend(sphere, uniform, ant):$/;"	f
test_extract_all_edges	tests/core/test_dataset_filters.py	/^def test_extract_all_edges(datasets):$/;"	f
test_extract_all_edges_no_data	tests/core/test_dataset_filters.py	/^def test_extract_all_edges_no_data():$/;"	f
test_extract_cells	tests/core/test_grid.py	/^def test_extract_cells(hexbeam, invert):$/;"	f
test_extract_cells_by_type	tests/core/test_dataset_filters.py	/^def test_extract_cells_by_type(tetbeam, hexbeam):$/;"	f
test_extract_feature_edges	tests/core/test_grid.py	/^def test_extract_feature_edges(hexbeam):$/;"	f
test_extract_feature_edges	tests/core/test_polydata.py	/^def test_extract_feature_edges(sphere):$/;"	f
test_extract_feature_edges_no_data	tests/core/test_polydata.py	/^def test_extract_feature_edges_no_data():$/;"	f
test_extract_geometry	tests/core/test_composite.py	/^def test_extract_geometry(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_extract_geometry	tests/core/test_dataset_filters.py	/^def test_extract_geometry(datasets, composite):$/;"	f
test_extract_geometry_extent	tests/core/test_dataset_filters.py	/^def test_extract_geometry_extent(uniform):$/;"	f
test_extract_largest	tests/core/test_polydata.py	/^def test_extract_largest(sphere):$/;"	f
test_extract_points	tests/core/test_dataset_filters.py	/^def test_extract_points():$/;"	f
test_extract_subset	tests/core/test_dataset_filters.py	/^def test_extract_subset():$/;"	f
test_extract_subset_structured	tests/core/test_dataset_filters.py	/^def test_extract_subset_structured():$/;"	f
test_extract_surface	tests/core/test_dataset_filters.py	/^def test_extract_surface():$/;"	f
test_extrude	tests/core/test_polydata.py	/^def test_extrude():$/;"	f
test_extrude_capping_warnings	tests/core/test_polydata.py	/^def test_extrude_capping_warnings():$/;"	f
test_extrude_rotate	tests/core/test_dataset_filters.py	/^def test_extrude_rotate():$/;"	f
test_extrude_rotate_inplace	tests/core/test_dataset_filters.py	/^def test_extrude_rotate_inplace():$/;"	f
test_extrude_trim	tests/core/test_dataset_filters.py	/^def test_extrude_trim():$/;"	f
test_extrude_trim_catch	tests/core/test_dataset_filters.py	/^def test_extrude_trim_catch():$/;"	f
test_extrude_trim_inplace	tests/core/test_dataset_filters.py	/^def test_extrude_trim_inplace():$/;"	f
test_extrude_trim_strategy	tests/core/test_dataset_filters.py	/^def test_extrude_trim_strategy(extrusion, capping):$/;"	f
test_face_normals	tests/core/test_polydata.py	/^def test_face_normals(sphere):$/;"	f
test_facetreader	tests/core/test_reader.py	/^def test_facetreader():$/;"	f
test_fail_plot_table	tests/plotting/test_plotting.py	/^def test_fail_plot_table():$/;"	f
test_failure_to_find	tests/namespace/test_utilities_namespace.py	/^def test_failure_to_find():$/;"	f
test_fft_and_rfft	tests/core/test_grid.py	/^def test_fft_and_rfft(noise_2d):$/;"	f
test_fft_high_pass	tests/core/test_grid.py	/^def test_fft_high_pass(noise_2d):$/;"	f
test_fft_low_pass	tests/core/test_grid.py	/^def test_fft_low_pass(noise_2d):$/;"	f
test_field_data	tests/core/test_dataset.py	/^def test_field_data(grid):$/;"	f
test_field_data_bad_value	tests/core/test_dataset.py	/^def test_field_data_bad_value(grid):$/;"	f
test_field_np_bool	tests/core/test_dataset.py	/^def test_field_np_bool(grid):$/;"	f
test_field_uint8	tests/core/test_dataset.py	/^def test_field_uint8(grid):$/;"	f
test_file_copier	tests/examples/test_downloads.py	/^def test_file_copier(tmpdir):$/;"	f
test_file_format	tests/test_meshio.py	/^def test_file_format():$/;"	f
test_file_from_files	tests/examples/test_downloads.py	/^def test_file_from_files(tmpdir):$/;"	f
test_filters_return_pointset	tests/core/test_pointset.py	/^def test_filters_return_pointset(sphere):$/;"	f
test_find_cells_along_line	tests/core/test_dataset.py	/^def test_find_cells_along_line():$/;"	f
test_find_cells_intersecting_line	tests/core/test_dataset.py	/^def test_find_cells_intersecting_line():$/;"	f
test_find_cells_within_bounds	tests/core/test_dataset.py	/^def test_find_cells_within_bounds():$/;"	f
test_find_closest_cell	tests/core/test_dataset.py	/^def test_find_closest_cell():$/;"	f
test_find_closest_cell_surface_point	tests/core/test_dataset.py	/^def test_find_closest_cell_surface_point():$/;"	f
test_find_closest_cells	tests/core/test_dataset.py	/^def test_find_closest_cells():$/;"	f
test_find_closest_point	tests/core/test_dataset.py	/^def test_find_closest_point():$/;"	f
test_find_containing_cell	tests/core/test_dataset.py	/^def test_find_containing_cell():$/;"	f
test_find_containing_cells	tests/core/test_dataset.py	/^def test_find_containing_cells():$/;"	f
test_fit_plane_to_points	tests/core/test_utilities.py	/^def test_fit_plane_to_points():$/;"	f
test_fixed_font_size_annotation_text_scaling_off	tests/plotting/test_plotting.py	/^def test_fixed_font_size_annotation_text_scaling_off():$/;"	f
test_flip_deprecated	tests/plotting/test_texture.py	/^def test_flip_deprecated(texture):$/;"	f
test_flip_normal	tests/core/test_dataset.py	/^def test_flip_normal():$/;"	f
test_flip_normal	tests/core/test_pointset.py	/^def test_flip_normal():$/;"	f
test_flip_normals	tests/core/test_polydata.py	/^def test_flip_normals(sphere, plane):$/;"	f
test_flip_x	tests/core/test_dataset.py	/^def test_flip_x():$/;"	f
test_flip_x	tests/core/test_pointset.py	/^def test_flip_x():$/;"	f
test_flip_x	tests/plotting/test_texture.py	/^def test_flip_x(texture):$/;"	f
test_flip_y	tests/core/test_dataset.py	/^def test_flip_y():$/;"	f
test_flip_y	tests/core/test_pointset.py	/^def test_flip_y():$/;"	f
test_flip_y	tests/plotting/test_texture.py	/^def test_flip_y(texture):$/;"	f
test_flip_z	tests/core/test_dataset.py	/^def test_flip_z():$/;"	f
test_flip_z	tests/core/test_pointset.py	/^def test_flip_z():$/;"	f
test_fly_to_mouse_position	tests/plotting/test_picking.py	/^def test_fly_to_mouse_position(verify_image_cache, sphere):$/;"	f
test_fly_to_right_click	tests/plotting/test_picking.py	/^def test_fly_to_right_click(verify_image_cache, sphere):$/;"	f
test_fly_to_right_click_multi_render	tests/plotting/test_picking.py	/^def test_fly_to_right_click_multi_render(verify_image_cache, sphere):$/;"	f
test_focal_point	tests/plotting/test_camera.py	/^def test_focal_point(camera):$/;"	f
test_font	tests/plotting/test_theme.py	/^def test_font():$/;"	f
test_font_eq	tests/plotting/test_theme.py	/^def test_font_eq(default_theme):$/;"	f
test_font_family	tests/plotting/test_theme.py	/^def test_font_family(default_theme):$/;"	f
test_font_fmt	tests/plotting/test_theme.py	/^def test_font_fmt(default_theme):$/;"	f
test_font_label_size	tests/plotting/test_theme.py	/^def test_font_label_size(default_theme):$/;"	f
test_font_title_size	tests/plotting/test_theme.py	/^def test_font_title_size(default_theme):$/;"	f
test_from_array	tests/plotting/test_texture.py	/^def test_from_array():$/;"	f
test_from_vtk	tests/plotting/test_lights.py	/^def test_from_vtk():$/;"	f
test_gaussian_smooth	tests/core/test_grid.py	/^def test_gaussian_smooth(hexbeam):$/;"	f
test_gaussian_smooth_cell_data_active	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_cell_data_active():$/;"	f
test_gaussian_smooth_cell_data_specified	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_cell_data_specified():$/;"	f
test_gaussian_smooth_constant_data	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_constant_data():$/;"	f
test_gaussian_smooth_outlier	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_outlier():$/;"	f
test_gaussian_smooth_output_type	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_output_type():$/;"	f
test_geodesic	tests/core/test_polydata.py	/^def test_geodesic(sphere):$/;"	f
test_geodesic_disconnected	tests/core/test_polydata.py	/^def test_geodesic_disconnected(sphere, sphere_shifted):$/;"	f
test_geodesic_distance	tests/core/test_polydata.py	/^def test_geodesic_distance(sphere):$/;"	f
test_geodesic_fail	tests/core/test_polydata.py	/^def test_geodesic_fail(sphere, plane):$/;"	f
test_geodesic_picking	tests/plotting/test_picking.py	/^def test_geodesic_picking():$/;"	f
test_get	tests/core/test_datasetattributes.py	/^def test_get(sphere):$/;"	f
test_get_angle	tests/plotting/test_widgets.py	/^def test_get_angle():$/;"	f
test_get_array_bool_array_should_be_identical	tests/core/test_datasetattributes.py	/^def test_get_array_bool_array_should_be_identical(insert_bool_array):$/;"	f
test_get_array_cell	tests/core/test_utilities.py	/^def test_get_array_cell(hexbeam):$/;"	f
test_get_array_error	tests/core/test_utilities.py	/^def test_get_array_error(hexbeam):$/;"	f
test_get_array_field	tests/core/test_utilities.py	/^def test_get_array_field(hexbeam):$/;"	f
test_get_array_none	tests/core/test_utilities.py	/^def test_get_array_none(hexbeam):$/;"	f
test_get_array_point	tests/core/test_utilities.py	/^def test_get_array_point(hexbeam):$/;"	f
test_get_array_should_fail_if_does_not_exist	tests/core/test_datasetattributes.py	/^def test_get_array_should_fail_if_does_not_exist(array_key, hexbeam_point_attributes):$/;"	f
test_get_array_should_return_bool_array	tests/core/test_datasetattributes.py	/^def test_get_array_should_return_bool_array(insert_bool_array):$/;"	f
test_get_background_texture	tests/plotting/test_charts.py	/^def test_get_background_texture(chart_2d):$/;"	f
test_get_cell_array_fail	tests/core/test_dataset.py	/^def test_get_cell_array_fail():$/;"	f
test_get_cmap_safe	tests/plotting/test_colors.py	/^def test_get_cmap_safe(cmap):$/;"	f
test_get_data_range	tests/core/test_dataset.py	/^def test_get_data_range(grid):$/;"	f
test_get_data_range	tests/core/test_objects.py	/^def test_get_data_range():$/;"	f
test_get_datasets	tests/plotting/test_plotter.py	/^def test_get_datasets(sphere, hexbeam):$/;"	f
test_get_ext	tests/core/test_utilities.py	/^def test_get_ext(path, target_ext):$/;"	f
test_get_item	tests/core/test_dataset.py	/^def test_get_item(grid):$/;"	f
test_get_reader_fail	tests/core/test_reader.py	/^def test_get_reader_fail():$/;"	f
test_get_sg_image_scraper	tests/plotting/test_plotting_utilities.py	/^def test_get_sg_image_scraper():$/;"	f
test_getitem	tests/core/test_datasetattributes.py	/^def test_getitem(hexbeam_point_attributes):$/;"	f
test_getters_should_return_same_result	tests/core/test_datasetattributes.py	/^def test_getters_should_return_same_result(insert_arange_narray):$/;"	f
test_gif_reader	tests/plotting/test_plotting_utilities.py	/^def test_gif_reader(gif_file):$/;"	f
test_glyph	tests/core/test_dataset_filters.py	/^def test_glyph(datasets, sphere):$/;"	f
test_glyph_cell_point_data	tests/core/test_dataset_filters.py	/^def test_glyph_cell_point_data(sphere):$/;"	f
test_glyph_orient_and_scale	tests/core/test_dataset_filters.py	/^def test_glyph_orient_and_scale():$/;"	f
test_glyph_settings	tests/core/test_dataset_filters.py	/^def test_glyph_settings(sphere):$/;"	f
test_gpuinfo	tests/plotting/test_plotting_utilities.py	/^def test_gpuinfo():$/;"	f
test_grayscale	tests/plotting/test_texture.py	/^def test_grayscale(texture):$/;"	f
test_grid_extract_selection_points	tests/core/test_grid.py	/^def test_grid_extract_selection_points(struct_grid):$/;"	f
test_grid_from_sph_coords	tests/core/test_utilities.py	/^def test_grid_from_sph_coords():$/;"	f
test_grid_points	tests/core/test_grid.py	/^def test_grid_points():$/;"	f
test_grid_repr	tests/core/test_grid.py	/^def test_grid_repr(struct_grid):$/;"	f
test_handle_array_with_null_name	tests/core/test_dataset.py	/^def test_handle_array_with_null_name():$/;"	f
test_has_duplicates	tests/core/test_utilities.py	/^def test_has_duplicates():$/;"	f
test_has_module	tests/core/test_utilities.py	/^def test_has_module():$/;"	f
test_has_render_window_fail	tests/plotting/test_plotter.py	/^def test_has_render_window_fail():$/;"	f
test_hdf_reader	tests/core/test_reader.py	/^def test_hdf_reader():$/;"	f
test_hdr_reader	tests/core/test_reader.py	/^def test_hdr_reader():$/;"	f
test_hexagonal_prism	tests/examples/test_cell_examples.py	/^def test_hexagonal_prism():$/;"	f
test_hexahedron	tests/examples/test_cell_examples.py	/^def test_hexahedron():$/;"	f
test_hexbeam_field_attributes_active_scalars	tests/core/test_datasetattributes.py	/^def test_hexbeam_field_attributes_active_scalars(hexbeam_field_attributes):$/;"	f
test_hide_axes	tests/plotting/test_plotting.py	/^def test_hide_axes():$/;"	f
test_hide_axes_all	tests/plotting/test_plotting.py	/^def test_hide_axes_all():$/;"	f
test_hide_cells	tests/core/test_grid.py	/^def test_hide_cells(ind, struct_grid):$/;"	f
test_hide_points	tests/core/test_grid.py	/^def test_hide_points(ind, struct_grid):$/;"	f
test_horizon_picking	tests/plotting/test_picking.py	/^def test_horizon_picking():$/;"	f
test_html_repr	tests/core/test_dataset.py	/^def test_html_repr(grid):$/;"	f
test_hue_range	tests/plotting/test_lookup_table.py	/^def test_hue_range(lut, lut_w_cmap):$/;"	f
test_iadd_general	tests/core/test_dataset_filters.py	/^def test_iadd_general(uniform, hexbeam, sphere):$/;"	f
test_icosahedron	tests/core/test_geometric_objects.py	/^def test_icosahedron():$/;"	f
test_icosphere	tests/core/test_geometric_objects.py	/^def test_icosphere():$/;"	f
test_identical_boolean	tests/core/test_polydata_filters.py	/^def test_identical_boolean(sphere):$/;"	f
test_image_data_invald_args	tests/core/test_grid.py	/^def test_image_data_invald_args():$/;"	f
test_image_data_to_tetrahedra	tests/core/test_grid.py	/^def test_image_data_to_tetrahedra():$/;"	f
test_image_dilate_erode_cell_data_active	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_cell_data_active():$/;"	f
test_image_dilate_erode_cell_data_specified	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_cell_data_specified():$/;"	f
test_image_dilate_erode_dilation	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_dilation():$/;"	f
test_image_dilate_erode_erosion	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_erosion():$/;"	f
test_image_dilate_erode_output_type	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_output_type():$/;"	f
test_image_properties	tests/plotting/test_plotting.py	/^def test_image_properties():$/;"	f
test_image_threshold_between	tests/core/test_dataset_filters.py	/^def test_image_threshold_between(in_value, out_value):$/;"	f
test_image_threshold_output_type	tests/core/test_dataset_filters.py	/^def test_image_threshold_output_type():$/;"	f
test_image_threshold_upper	tests/core/test_dataset_filters.py	/^def test_image_threshold_upper(in_value, out_value):$/;"	f
test_image_threshold_wrong_threshold_length	tests/core/test_dataset_filters.py	/^def test_image_threshold_wrong_threshold_length():$/;"	f
test_image_threshold_wrong_threshold_type	tests/core/test_dataset_filters.py	/^def test_image_threshold_wrong_threshold_type():$/;"	f
test_implicit_distance	tests/core/test_dataset_filters.py	/^def test_implicit_distance():$/;"	f
test_import_gltf	tests/plotting/test_plotting.py	/^def test_import_gltf(verify_image_cache):$/;"	f
test_import_vrml	tests/plotting/test_plotting.py	/^def test_import_vrml():$/;"	f
test_index_vs_loc	tests/plotting/test_plotting.py	/^def test_index_vs_loc():$/;"	f
test_inheritance_no_wrappers	tests/core/test_helpers.py	/^def test_inheritance_no_wrappers():$/;"	f
test_init	tests/core/test_datasetattributes.py	/^def test_init(hexbeam):$/;"	f
test_init	tests/core/test_polydata.py	/^def test_init():$/;"	f
test_init	tests/plotting/mappers/test_mapper.py	/^def test_init(sphere):$/;"	f
test_init	tests/plotting/test_lights.py	/^def test_init():$/;"	f
test_init_as_points	tests/core/test_polydata.py	/^def test_init_as_points():$/;"	f
test_init_as_points_from_list	tests/core/test_polydata.py	/^def test_init_as_points_from_list():$/;"	f
test_init_bad_filename	tests/core/test_grid.py	/^def test_init_bad_filename():$/;"	f
test_init_bad_input	tests/core/test_grid.py	/^def test_init_bad_input():$/;"	f
test_init_cell_array	tests/core/test_cells.py	/^def test_init_cell_array(cells, n_cells, deep):$/;"	f
test_init_cell_array_from_arrays	tests/core/test_cells.py	/^def test_init_cell_array_from_arrays(offsets, connectivity, deep):$/;"	f
test_init_cell_array_from_regular_cells	tests/core/test_cells.py	/^def test_init_cell_array_from_regular_cells(cells, deep):$/;"	f
test_init_cmap	tests/plotting/test_lookup_table.py	/^def test_init_cmap():$/;"	f
test_init_custom	tests/plotting/test_lookup_table.py	/^def test_init_custom():$/;"	f
test_init_from_arrays	tests/core/test_grid.py	/^def test_init_from_arrays():$/;"	f
test_init_from_arrays	tests/core/test_polydata.py	/^def test_init_from_arrays():$/;"	f
test_init_from_arrays_triangular	tests/core/test_polydata.py	/^def test_init_from_arrays_triangular():$/;"	f
test_init_from_arrays_with_vert	tests/core/test_polydata.py	/^def test_init_from_arrays_with_vert():$/;"	f
test_init_from_dict	tests/core/test_grid.py	/^def test_init_from_dict(multiple_cell_types, flat_cells):$/;"	f
test_init_from_numpy_arrays	tests/core/test_grid.py	/^def test_init_from_numpy_arrays():$/;"	f
test_init_from_pdata	tests/core/test_polydata.py	/^def test_init_from_pdata(sphere):$/;"	f
test_init_from_polydata	tests/core/test_grid.py	/^def test_init_from_polydata(sphere):$/;"	f
test_init_from_structured	tests/core/test_grid.py	/^def test_init_from_structured(struct_grid):$/;"	f
test_init_from_unstructured	tests/core/test_grid.py	/^def test_init_from_unstructured(hexbeam):$/;"	f
test_init_polyhedron	tests/core/test_grid.py	/^def test_init_polyhedron():$/;"	f
test_init_structured	tests/core/test_grid.py	/^def test_init_structured(struct_grid):$/;"	f
test_init_structured_raise	tests/core/test_grid.py	/^def test_init_structured_raise():$/;"	f
test_init_values	tests/plotting/test_lookup_table.py	/^def test_init_values():$/;"	f
test_inplace_no_overwrite_texture_coordinates	tests/plotting/test_texture.py	/^def test_inplace_no_overwrite_texture_coordinates():$/;"	f
test_insert	tests/core/test_composite.py	/^def test_insert(sphere):$/;"	f
test_instantiate_by_filename	tests/core/test_grid.py	/^def test_instantiate_by_filename():$/;"	f
test_integrate_data	tests/core/test_dataset_filters.py	/^def test_integrate_data():$/;"	f
test_integrate_data_datasets	tests/core/test_dataset_filters.py	/^def test_integrate_data_datasets(datasets):$/;"	f
test_intensity	tests/plotting/test_lights.py	/^def test_intensity():$/;"	f
test_interactive_update	tests/plotting/test_plotting.py	/^def test_interactive_update():$/;"	f
test_interactor_style	tests/plotting/test_plotting.py	/^def test_interactor_style(sphere, interaction, kwargs):$/;"	f
test_interpolate	tests/core/test_dataset_filters.py	/^def test_interpolate():$/;"	f
test_interpolate	tests/plotting/test_texture.py	/^def test_interpolate(texture):$/;"	f
test_interpolate_before_map	tests/plotting/mappers/test_composite_mapper.py	/^def test_interpolate_before_map(composite_mapper):$/;"	f
test_interpolate_before_map	tests/plotting/mappers/test_mapper.py	/^def test_interpolate_before_map(dataset_mapper):$/;"	f
test_interpolation_type	tests/plotting/test_volume_property.py	/^def test_interpolation_type(vol_prop):$/;"	f
test_intersection	tests/core/test_polydata.py	/^def test_intersection(sphere, sphere_shifted):$/;"	f
test_invalid_arg	tests/core/test_composite.py	/^def test_invalid_arg():$/;"	f
test_invalid_color_str_single_char	tests/plotting/test_theme.py	/^def test_invalid_color_str_single_char():$/;"	f
test_invalid_curvature	tests/core/test_polydata.py	/^def test_invalid_curvature(sphere):$/;"	f
test_invalid_file	tests/core/test_polydata.py	/^def test_invalid_file():$/;"	f
test_invalid_init	tests/core/test_polydata.py	/^def test_invalid_init():$/;"	f
test_invalid_init	tests/plotting/test_camera.py	/^def test_invalid_init():$/;"	f
test_invalid_init_structured	tests/core/test_grid.py	/^def test_invalid_init_structured():$/;"	f
test_invalid_load_theme	tests/plotting/test_theme.py	/^def test_invalid_load_theme(default_theme):$/;"	f
test_invalid_n_arrays	tests/plotting/test_plotting.py	/^def test_invalid_n_arrays(sphere):$/;"	f
test_invalid_overwrite	tests/core/test_dataset.py	/^def test_invalid_overwrite(grid):$/;"	f
test_invalid_points	tests/core/test_dataset.py	/^def test_invalid_points(grid):$/;"	f
test_invalid_save	tests/core/test_polydata.py	/^def test_invalid_save(sphere):$/;"	f
test_invalid_subdivide_adaptive	tests/core/test_dataset_filters.py	/^def test_invalid_subdivide_adaptive(cube):$/;"	f
test_invalid_subdivision	tests/core/test_polydata.py	/^def test_invalid_subdivision(sphere):$/;"	f
test_invalid_theme	tests/plotting/test_theme.py	/^def test_invalid_theme():$/;"	f
test_invalid_theme_type_error	tests/plotting/test_theme.py	/^def test_invalid_theme_type_error():$/;"	f
test_invalid_vector	tests/core/test_dataset.py	/^def test_invalid_vector(grid):$/;"	f
test_invalid_warp_scalar	tests/core/test_dataset_filters.py	/^def test_invalid_warp_scalar(sphere):$/;"	f
test_invalid_warp_scalar_inplace	tests/core/test_dataset_filters.py	/^def test_invalid_warp_scalar_inplace(uniform):$/;"	f
test_invalid_warp_vector	tests/core/test_dataset_filters.py	/^def test_invalid_warp_vector(sphere):$/;"	f
test_ipython_key_completions	tests/core/test_dataset.py	/^def test_ipython_key_completions(grid):$/;"	f
test_iren_context_style	tests/plotting/test_charts.py	/^def test_iren_context_style(pl):$/;"	f
test_is_all_triangles	tests/core/test_polydata.py	/^def test_is_all_triangles():$/;"	f
test_is_inside_bounds	tests/core/test_utilities.py	/^def test_is_inside_bounds():$/;"	f
test_is_manifold	tests/core/test_dataset_filters.py	/^def test_is_manifold(sphere, plane):$/;"	f
test_isometric_view_interactive	tests/plotting/test_plotting.py	/^def test_isometric_view_interactive(sphere):$/;"	f
test_jpegreader	tests/core/test_reader.py	/^def test_jpegreader():$/;"	f
test_key_press_event	tests/plotting/test_plotting.py	/^def test_key_press_event():$/;"	f
test_key_should_exist	tests/core/test_datasetattributes.py	/^def test_key_should_exist(insert_arange_narray):$/;"	f
test_keys_should_be_strings	tests/core/test_datasetattributes.py	/^def test_keys_should_be_strings(insert_arange_narray):$/;"	f
test_kochanek_spline	tests/core/test_parametric_geometry.py	/^def test_kochanek_spline():$/;"	f
test_label_visibility_setter	tests/plotting/test_cube_axes_actor.py	/^def test_label_visibility_setter(cube_axes_actor):$/;"	f
test_labels	tests/plotting/test_cube_axes_actor.py	/^def test_labels(cube_axes_actor):$/;"	f
test_layer	tests/plotting/test_renderer.py	/^def test_layer():$/;"	f
test_left_button_down	tests/plotting/test_plotting.py	/^def test_left_button_down():$/;"	f
test_legend_circle_face	tests/plotting/test_plotting.py	/^def test_legend_circle_face(sphere):$/;"	f
test_legend_face	tests/plotting/test_renderer.py	/^def test_legend_face(sphere, face):$/;"	f
test_legend_invalid_face	tests/plotting/test_plotting.py	/^def test_legend_invalid_face(sphere):$/;"	f
test_legend_rectangle_face	tests/plotting/test_plotting.py	/^def test_legend_rectangle_face(sphere):$/;"	f
test_legend_scale	tests/plotting/test_plotting.py	/^def test_legend_scale(sphere):$/;"	f
test_legend_subplots	tests/plotting/test_plotting.py	/^def test_legend_subplots(sphere, cube):$/;"	f
test_length_should_be_0_on_clear	tests/core/test_datasetattributes.py	/^def test_length_should_be_0_on_clear(insert_arange_narray):$/;"	f
test_length_should_decrement_on_pop	tests/core/test_datasetattributes.py	/^def test_length_should_decrement_on_pop(insert_arange_narray):$/;"	f
test_length_should_decrement_on_remove	tests/core/test_datasetattributes.py	/^def test_length_should_decrement_on_remove(insert_arange_narray):$/;"	f
test_length_should_increment_on_set_array	tests/core/test_datasetattributes.py	/^def test_length_should_increment_on_set_array(hexbeam_point_attributes):$/;"	f
test_lighting_add_manual_light	tests/plotting/test_plotting.py	/^def test_lighting_add_manual_light(sphere):$/;"	f
test_lighting_disable_3_lights	tests/plotting/test_plotting.py	/^def test_lighting_disable_3_lights():$/;"	f
test_lighting_enable_three_lights	tests/plotting/test_plotting.py	/^def test_lighting_enable_three_lights(sphere):$/;"	f
test_lighting_init_invalid	tests/plotting/test_plotting.py	/^def test_lighting_init_invalid():$/;"	f
test_lighting_init_light_kit	tests/plotting/test_plotting.py	/^def test_lighting_init_light_kit(sphere):$/;"	f
test_lighting_init_none	tests/plotting/test_plotting.py	/^def test_lighting_init_none(sphere):$/;"	f
test_lighting_init_three_lights	tests/plotting/test_plotting.py	/^def test_lighting_init_three_lights(sphere):$/;"	f
test_lighting_remove_manual_light	tests/plotting/test_plotting.py	/^def test_lighting_remove_manual_light(sphere):$/;"	f
test_lighting_subplots	tests/plotting/test_plotting.py	/^def test_lighting_subplots(sphere):$/;"	f
test_line	tests/core/test_geometric_objects.py	/^def test_line():$/;"	f
test_line	tests/examples/test_cell_examples.py	/^def test_line():$/;"	f
test_line_segments_from_points	tests/core/test_utilities.py	/^def test_line_segments_from_points():$/;"	f
test_linear_copy	tests/core/test_grid.py	/^def test_linear_copy(hexbeam):$/;"	f
test_linear_copy_surf_elem	tests/core/test_grid.py	/^def test_linear_copy_surf_elem():$/;"	f
test_lineplot2d	tests/plotting/test_charts.py	/^def test_lineplot2d(chart_2d, line_plot_2d):$/;"	f
test_lines	tests/core/test_polydata.py	/^def test_lines():$/;"	f
test_lines_from_points	tests/core/test_utilities.py	/^def test_lines_from_points():$/;"	f
test_lines_on_init	tests/core/test_polydata.py	/^def test_lines_on_init():$/;"	f
test_link_views	tests/plotting/test_plotting.py	/^def test_link_views(sphere):$/;"	f
test_link_views_camera_set	tests/plotting/test_plotting.py	/^def test_link_views_camera_set(sphere, verify_image_cache):$/;"	f
test_linkcode_resolve	tests/core/test_utilities.py	/^def test_linkcode_resolve():$/;"	f
test_load_airplane	tests/examples/test_examples.py	/^def test_load_airplane():$/;"	f
test_load_ant	tests/examples/test_examples.py	/^def test_load_ant():$/;"	f
test_load_channels	tests/examples/test_examples.py	/^def test_load_channels():$/;"	f
test_load_earth	tests/examples/test_examples.py	/^def test_load_earth():$/;"	f
test_load_hydrogen_orbital	tests/examples/test_examples.py	/^def test_load_hydrogen_orbital():$/;"	f
test_load_jupiter	tests/examples/test_download_files.py	/^def test_load_jupiter():$/;"	f
test_load_mars	tests/examples/test_download_files.py	/^def test_load_mars():$/;"	f
test_load_mercury	tests/examples/test_download_files.py	/^def test_load_mercury():$/;"	f
test_load_moon	tests/examples/test_download_files.py	/^def test_load_moon():$/;"	f
test_load_neptune	tests/examples/test_download_files.py	/^def test_load_neptune():$/;"	f
test_load_nut	tests/examples/test_examples.py	/^def test_load_nut():$/;"	f
test_load_pluto	tests/examples/test_download_files.py	/^def test_load_pluto():$/;"	f
test_load_random_hills	tests/examples/test_examples.py	/^def test_load_random_hills():$/;"	f
test_load_saturn	tests/examples/test_download_files.py	/^def test_load_saturn():$/;"	f
test_load_saturn_rings	tests/examples/test_download_files.py	/^def test_load_saturn_rings():$/;"	f
test_load_sphere	tests/examples/test_examples.py	/^def test_load_sphere():$/;"	f
test_load_spline	tests/examples/test_examples.py	/^def test_load_spline():$/;"	f
test_load_structured_bad_filename	tests/core/test_grid.py	/^def test_load_structured_bad_filename():$/;"	f
test_load_sun	tests/examples/test_download_files.py	/^def test_load_sun():$/;"	f
test_load_tetbeam	tests/examples/test_examples.py	/^def test_load_tetbeam():$/;"	f
test_load_theme	tests/plotting/test_theme.py	/^def test_load_theme(tmpdir, default_theme):$/;"	f
test_load_uranus	tests/examples/test_download_files.py	/^def test_load_uranus():$/;"	f
test_load_venus	tests/examples/test_download_files.py	/^def test_load_venus():$/;"	f
test_local_file_cache	tests/examples/test_downloads.py	/^def test_local_file_cache(tmpdir):$/;"	f
test_log_scale	tests/plotting/test_lookup_table.py	/^def test_log_scale(lut):$/;"	f
test_log_scale	tests/plotting/test_plotting.py	/^def test_log_scale():$/;"	f
test_logo_basic	tests/plotting/test_demos.py	/^def test_logo_basic():$/;"	f
test_logo_voxel	tests/plotting/test_demos.py	/^def test_logo_voxel():$/;"	f
test_lookup_table	tests/plotting/mappers/test_composite_mapper.py	/^def test_lookup_table(composite_mapper):$/;"	f
test_lookup_table	tests/plotting/mappers/test_mapper.py	/^def test_lookup_table(dataset_mapper):$/;"	f
test_lookup_table	tests/plotting/test_plotting.py	/^def test_lookup_table(verify_image_cache):$/;"	f
test_lookup_table_above_below_opacity	tests/plotting/test_plotting.py	/^def test_lookup_table_above_below_opacity(verify_image_cache):$/;"	f
test_lookup_table_nan_hidden	tests/plotting/test_plotting.py	/^def test_lookup_table_nan_hidden(verify_image_cache):$/;"	f
test_make_movie	tests/plotting/test_plotting.py	/^def test_make_movie(sphere, tmpdir, verify_image_cache):$/;"	f
test_make_points_double	tests/core/test_dataset.py	/^def test_make_points_double(grid):$/;"	f
test_make_tri_mesh	tests/core/test_helpers.py	/^def test_make_tri_mesh(sphere):$/;"	f
test_many_multi_pass	tests/plotting/test_plotting.py	/^def test_many_multi_pass():$/;"	f
test_map_value	tests/plotting/test_lookup_table.py	/^def test_map_value(lut):$/;"	f
test_mapper_init	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_mapper_init(mapper):$/;"	f
test_measurement_widget	tests/plotting/test_widgets.py	/^def test_measurement_widget():$/;"	f
test_median_smooth_constant_data	tests/core/test_dataset_filters.py	/^def test_median_smooth_constant_data():$/;"	f
test_median_smooth_outlier	tests/core/test_dataset_filters.py	/^def test_median_smooth_outlier():$/;"	f
test_median_smooth_output_type	tests/core/test_dataset_filters.py	/^def test_median_smooth_output_type():$/;"	f
test_memory_address	tests/core/test_dataset.py	/^def test_memory_address(grid):$/;"	f
test_merge	tests/core/test_grid.py	/^def test_merge(hexbeam):$/;"	f
test_merge	tests/core/test_polydata.py	/^def test_merge(sphere, sphere_shifted, hexbeam):$/;"	f
test_merge	tests/core/test_utilities.py	/^def test_merge(sphere, cube, datasets):$/;"	f
test_merge_active_scalars	tests/core/test_polydata.py	/^def test_merge_active_scalars(input):$/;"	f
test_merge_general	tests/core/test_dataset_filters.py	/^def test_merge_general(uniform):$/;"	f
test_merge_invalid	tests/core/test_grid.py	/^def test_merge_invalid(hexbeam, sphere):$/;"	f
test_merge_list	tests/core/test_grid.py	/^def test_merge_list(hexbeam):$/;"	f
test_merge_main_has_priority	tests/core/test_polydata.py	/^def test_merge_main_has_priority(input):$/;"	f
test_merge_not_main	tests/core/test_grid.py	/^def test_merge_not_main(hexbeam):$/;"	f
test_merge_points	tests/core/test_dataset_filters.py	/^def test_merge_points():$/;"	f
test_mesh_picking	tests/plotting/test_picking.py	/^def test_mesh_picking(sphere, left_clicking):$/;"	f
test_meshio	tests/test_meshio.py	/^def test_meshio(mesh_in, tmpdir):$/;"	f
test_meta_image_reader	tests/core/test_reader.py	/^def test_meta_image_reader():$/;"	f
test_metadata_save	tests/core/test_dataobject.py	/^def test_metadata_save(hexbeam, tmpdir):$/;"	f
test_min	tests/core/test_pyvista_ndarray.py	/^def test_min(pyvista_ndarray_1d):$/;"	f
test_mipmap	tests/plotting/test_texture.py	/^def test_mipmap(texture):$/;"	f
test_model_transform_matrix	tests/plotting/test_camera.py	/^def test_model_transform_matrix(camera):$/;"	f
test_modify_field_data	tests/core/test_dataset.py	/^def test_modify_field_data(grid):$/;"	f
test_modifying_modifies_dataset	tests/core/test_pyvista_ndarray.py	/^def test_modifying_modifies_dataset():$/;"	f
test_mpl_backend	tests/test_meta.py	/^def test_mpl_backend():$/;"	f
test_multi_block_append	tests/core/test_composite.py	/^def test_multi_block_append(ant, sphere, uniform, airplane, rectilinear):$/;"	f
test_multi_block_clean	tests/core/test_composite.py	/^def test_multi_block_clean(rectilinear, uniform, ant):$/;"	f
test_multi_block_copy	tests/core/test_composite.py	/^def test_multi_block_copy(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_multi_block_data_range	tests/core/test_composite.py	/^def test_multi_block_data_range():$/;"	f
test_multi_block_eq	tests/core/test_composite.py	/^def test_multi_block_eq(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_multi_block_init_dict	tests/core/test_composite.py	/^def test_multi_block_init_dict(rectilinear, airplane):$/;"	f
test_multi_block_init_list	tests/core/test_composite.py	/^def test_multi_block_init_list(rectilinear, airplane):$/;"	f
test_multi_block_init_vtk	tests/core/test_composite.py	/^def test_multi_block_init_vtk():$/;"	f
test_multi_block_io	tests/core/test_composite.py	/^def test_multi_block_io($/;"	f
test_multi_block_keys	tests/core/test_composite.py	/^def test_multi_block_keys(rectilinear, airplane):$/;"	f
test_multi_block_length	tests/core/test_composite.py	/^def test_multi_block_length(ant, sphere, uniform, airplane):$/;"	f
test_multi_block_negative_index	tests/core/test_composite.py	/^def test_multi_block_negative_index(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_multi_block_plot	tests/plotting/test_plotting.py	/^def test_multi_block_plot(verify_image_cache):$/;"	f
test_multi_block_repr	tests/core/test_composite.py	/^def test_multi_block_repr(ant, sphere, uniform, airplane):$/;"	f
test_multi_block_save_lines	tests/core/test_composite.py	/^def test_multi_block_save_lines(tmpdir):$/;"	f
test_multi_block_set_get_ers	tests/core/test_composite.py	/^def test_multi_block_set_get_ers():$/;"	f
test_multi_block_volume	tests/core/test_composite.py	/^def test_multi_block_volume(ant, airplane, sphere, uniform):$/;"	f
test_multi_cell_picking	tests/plotting/test_picking.py	/^def test_multi_cell_picking(through):$/;"	f
test_multi_io_erros	tests/core/test_composite.py	/^def test_multi_io_erros(tmpdir):$/;"	f
test_multi_plot_scalars	tests/plotting/test_plotting.py	/^def test_multi_plot_scalars(verify_image_cache):$/;"	f
test_multi_ray_trace	tests/core/test_polydata.py	/^def test_multi_ray_trace(sphere):$/;"	f
test_multi_renderers	tests/plotting/test_plotting.py	/^def test_multi_renderers():$/;"	f
test_multi_renderers_bad_indices	tests/plotting/test_plotting.py	/^def test_multi_renderers_bad_indices():$/;"	f
test_multi_renderers_subplot_ind_1x2	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_1x2():$/;"	f
test_multi_renderers_subplot_ind_1x3	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_1x3():$/;"	f
test_multi_renderers_subplot_ind_2x1	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_2x1():$/;"	f
test_multi_renderers_subplot_ind_3x1	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_3x1():$/;"	f
test_multi_renderers_subplot_ind_3x1_splitting_pos	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_3x1_splitting_pos():$/;"	f
test_multi_slice_index	tests/core/test_composite.py	/^def test_multi_slice_index(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_multiblock_ref	tests/core/test_composite.py	/^def test_multiblock_ref():$/;"	f
test_multiblock_volume_rendering	tests/plotting/test_plotting.py	/^def test_multiblock_volume_rendering(uniform):$/;"	f
test_multiblockplot3dreader	tests/core/test_reader.py	/^def test_multiblockplot3dreader():$/;"	f
test_multicomp_plot_common	tests/plotting/test_charts.py	/^def test_multicomp_plot_common(plot_f, request):$/;"	f
test_multiple_lines	tests/core/test_geometric_objects.py	/^def test_multiple_lines():$/;"	f
test_multiple_texture_coordinates	tests/plotting/test_texture.py	/^def test_multiple_texture_coordinates():$/;"	f
test_multiprocessing	tests/core/test_dataset.py	/^def test_multiprocessing(datasets, pickle_format):$/;"	f
test_n_lines	tests/core/test_polydata.py	/^def test_n_lines():$/;"	f
test_n_verts	tests/core/test_polydata.py	/^def test_n_verts():$/;"	f
test_namespace_contract	tests/plotting/test_scraper.py	/^def test_namespace_contract():$/;"	f
test_nan_color	tests/plotting/test_lookup_table.py	/^def test_nan_color(lut):$/;"	f
test_nifti_reader	tests/core/test_reader.py	/^def test_nifti_reader():$/;"	f
test_no_active	tests/core/test_dataset.py	/^def test_no_active():$/;"	f
test_no_added_with_scalar_bar	tests/plotting/test_plotter.py	/^def test_no_added_with_scalar_bar(sphere):$/;"	f
test_no_arrows	tests/core/test_dataset.py	/^def test_no_arrows(grid):$/;"	f
test_no_copy_pointset_init	tests/core/test_grid.py	/^def test_no_copy_pointset_init():$/;"	f
test_no_copy_pointset_points_setter	tests/core/test_grid.py	/^def test_no_copy_pointset_points_setter():$/;"	f
test_no_copy_polydata_init	tests/core/test_grid.py	/^def test_no_copy_polydata_init():$/;"	f
test_no_copy_polydata_points_setter	tests/core/test_grid.py	/^def test_no_copy_polydata_points_setter():$/;"	f
test_no_copy_rectilinear_grid	tests/core/test_grid.py	/^def test_no_copy_rectilinear_grid():$/;"	f
test_no_copy_structured_mesh_init	tests/core/test_grid.py	/^def test_no_copy_structured_mesh_init(structured_points):$/;"	f
test_no_copy_structured_mesh_points_setter	tests/core/test_grid.py	/^def test_no_copy_structured_mesh_points_setter(structured_points):$/;"	f
test_no_copy_unstructured_grid_points_setter	tests/core/test_grid.py	/^def test_no_copy_unstructured_grid_points_setter():$/;"	f
test_no_t_coords	tests/core/test_dataset.py	/^def test_no_t_coords(grid):$/;"	f
test_normals_get	tests/core/test_datasetattributes.py	/^def test_normals_get(plane):$/;"	f
test_normals_name	tests/core/test_datasetattributes.py	/^def test_normals_name(plane):$/;"	f
test_normals_raise_field	tests/core/test_datasetattributes.py	/^def test_normals_raise_field(plane):$/;"	f
test_normals_set	tests/core/test_datasetattributes.py	/^def test_normals_set():$/;"	f
test_not_current	tests/plotting/test_plotting.py	/^def test_not_current(verify_image_cache):$/;"	f
test_nrrd_reader	tests/core/test_reader.py	/^def test_nrrd_reader():$/;"	f
test_numpy_to_idarr_bool	tests/core/test_cells.py	/^def test_numpy_to_idarr_bool():$/;"	f
test_numpy_to_texture	tests/plotting/test_texture.py	/^def test_numpy_to_texture():$/;"	f
test_objreader	tests/core/test_reader.py	/^def test_objreader():$/;"	f
test_observer	tests/core/test_utilities.py	/^def test_observer():$/;"	f
test_observers	tests/plotting/test_render_window_interactor.py	/^def test_observers():$/;"	f
test_octahedron	tests/core/test_geometric_objects.py	/^def test_octahedron():$/;"	f
test_offset	tests/plotting/test_cube_axes_actor.py	/^def test_offset(cube_axes_actor):$/;"	f
test_opacity	tests/plotting/mappers/test_composite_mapper.py	/^def test_opacity(block_attr):$/;"	f
test_opacity_by_array	tests/plotting/test_plotting.py	/^def test_opacity_by_array(uniform):$/;"	f
test_opacity_by_array_direct	tests/plotting/test_plotting.py	/^def test_opacity_by_array_direct(plane, verify_image_cache):$/;"	f
test_opacity_by_array_preference	tests/plotting/test_plotting.py	/^def test_opacity_by_array_preference():$/;"	f
test_opacity_by_array_uncertainty	tests/plotting/test_plotting.py	/^def test_opacity_by_array_uncertainty(uniform):$/;"	f
test_opacity_by_array_user_transform	tests/plotting/test_plotting.py	/^def test_opacity_by_array_user_transform(uniform, verify_image_cache):$/;"	f
test_opacity_mismatched_fail	tests/plotting/test_plotting.py	/^def test_opacity_mismatched_fail(uniform):$/;"	f
test_opacity_transfer_functions	tests/plotting/test_plotting.py	/^def test_opacity_transfer_functions():$/;"	f
test_open_gif_invalid	tests/plotting/test_plotting.py	/^def test_open_gif_invalid():$/;"	f
test_openfoam_case_type	tests/core/test_reader.py	/^def test_openfoam_case_type():$/;"	f
test_openfoam_cell_to_point_default	tests/core/test_reader.py	/^def test_openfoam_cell_to_point_default():$/;"	f
test_openfoam_decompose_polyhedra	tests/core/test_reader.py	/^def test_openfoam_decompose_polyhedra():$/;"	f
test_openfoam_patch_arrays	tests/core/test_reader.py	/^def test_openfoam_patch_arrays():$/;"	f
test_openfoam_skip_zero_time	tests/core/test_reader.py	/^def test_openfoam_skip_zero_time():$/;"	f
test_openfoamreader_active_time	tests/core/test_reader.py	/^def test_openfoamreader_active_time():$/;"	f
test_openfoamreader_arrays_time	tests/core/test_reader.py	/^def test_openfoamreader_arrays_time():$/;"	f
test_openfoamreader_read_data_time_point	tests/core/test_reader.py	/^def test_openfoamreader_read_data_time_point():$/;"	f
test_openfoamreader_read_data_time_value	tests/core/test_reader.py	/^def test_openfoamreader_read_data_time_value():$/;"	f
test_orbit_on_path	tests/plotting/test_plotting.py	/^def test_orbit_on_path(sphere):$/;"	f
test_orientation_cube	tests/plotting/test_demos.py	/^def test_orientation_cube():$/;"	f
test_origin	tests/plotting/test_axes.py	/^def test_origin(axes):$/;"	f
test_orthographic_slicer	tests/plotting/test_plotting.py	/^def test_orthographic_slicer(uniform):$/;"	f
test_outline	tests/core/test_dataset_filters.py	/^def test_outline(datasets):$/;"	f
test_outline_composite	tests/core/test_dataset_filters.py	/^def test_outline_composite(composite):$/;"	f
test_outline_corners	tests/core/test_dataset_filters.py	/^def test_outline_corners(datasets):$/;"	f
test_outline_corners_composite	tests/core/test_dataset_filters.py	/^def test_outline_corners_composite(composite):$/;"	f
test_overwrite_deprecation	tests/core/test_dataset.py	/^def test_overwrite_deprecation(grid):$/;"	f
test_parallel_projection	tests/plotting/test_plotting.py	/^def test_parallel_projection():$/;"	f
test_parallel_scale	tests/plotting/test_camera.py	/^def test_parallel_scale(camera):$/;"	f
test_parallel_scale	tests/plotting/test_plotting.py	/^def test_parallel_scale():$/;"	f
test_partition	tests/core/test_dataset.py	/^def test_partition(hexbeam):$/;"	f
test_path	tests/core/test_grid.py	/^test_path = os.path.dirname(os.path.abspath(__file__))$/;"	v
test_path	tests/core/test_polydata.py	/^test_path = os.path.dirname(os.path.abspath(__file__))$/;"	v
test_path_picking	tests/plotting/test_picking.py	/^def test_path_picking():$/;"	f
test_pathlib_read_write	tests/core/test_grid.py	/^def test_pathlib_read_write(tmpdir, hexbeam):$/;"	f
test_pathlib_read_write	tests/core/test_polydata.py	/^def test_pathlib_read_write(tmpdir, sphere):$/;"	f
test_pathlib_read_write	tests/test_meshio.py	/^def test_pathlib_read_write(tmpdir, sphere):$/;"	f
test_pbr	tests/plotting/test_plotting.py	/^def test_pbr(sphere, verify_image_cache):$/;"	f
test_pen	tests/plotting/test_charts.py	/^def test_pen():$/;"	f
test_pentagonal_prism	tests/examples/test_cell_examples.py	/^def test_pentagonal_prism():$/;"	f
test_perlin_noise	tests/core/test_imaging.py	/^def test_perlin_noise():$/;"	f
test_pickable_actors	tests/plotting/test_plotter.py	/^def test_pickable_actors():$/;"	f
test_pixel	tests/examples/test_cell_examples.py	/^def test_pixel():$/;"	f
test_plane	tests/core/test_geometric_objects.py	/^def test_plane():$/;"	f
test_plane_direction	tests/core/test_geometric_objects.py	/^def test_plane_direction(expected):$/;"	f
test_plane_size	tests/core/test_geometric_objects.py	/^def test_plane_size():$/;"	f
test_platonic_invalids	tests/core/test_geometric_objects.py	/^def test_platonic_invalids():$/;"	f
test_platonic_solids	tests/core/test_geometric_objects.py	/^def test_platonic_solids(kind_str, kind_int, n_vertices, n_faces):$/;"	f
test_plot	tests/plotting/test_plotting.py	/^def test_plot(sphere, tmpdir, verify_image_cache, anti_aliasing):$/;"	f
test_plot3dmetareader	tests/core/test_reader.py	/^def test_plot3dmetareader():$/;"	f
test_plot_above_below_color	tests/plotting/test_plotting.py	/^def test_plot_above_below_color(uniform):$/;"	f
test_plot_actor	tests/plotting/test_plotting.py	/^def test_plot_actor(sphere):$/;"	f
test_plot_add_scalar_bar	tests/plotting/test_plotting.py	/^def test_plot_add_scalar_bar(sphere, verify_image_cache):$/;"	f
test_plot_algorithm_cone	tests/plotting/test_plotting.py	/^def test_plot_algorithm_cone():$/;"	f
test_plot_algorithm_scalars	tests/plotting/test_plotting.py	/^def test_plot_algorithm_scalars():$/;"	f
test_plot_algorithm_widgets	tests/plotting/test_widgets.py	/^def test_plot_algorithm_widgets():$/;"	f
test_plot_ants_plane	tests/plotting/test_demos.py	/^def test_plot_ants_plane():$/;"	f
test_plot_arrow	tests/plotting/test_plotting.py	/^def test_plot_arrow():$/;"	f
test_plot_arrows	tests/plotting/test_plotting.py	/^def test_plot_arrows():$/;"	f
test_plot_boundaries	tests/plotting/test_plotting_utilities.py	/^def test_plot_boundaries():$/;"	f
test_plot_bounds_axes_with_no_data	tests/plotting/test_plotting.py	/^def test_plot_bounds_axes_with_no_data():$/;"	f
test_plot_categories_int	tests/plotting/test_plotting.py	/^def test_plot_categories_int(sphere):$/;"	f
test_plot_categories_true	tests/plotting/test_plotting.py	/^def test_plot_categories_true(sphere):$/;"	f
test_plot_cell	tests/plotting/test_plotting.py	/^def test_plot_cell():$/;"	f
test_plot_cell_data	tests/plotting/test_plotting.py	/^def test_plot_cell_data(sphere, verify_image_cache):$/;"	f
test_plot_clim	tests/plotting/test_plotting.py	/^def test_plot_clim(sphere):$/;"	f
test_plot_common	tests/plotting/test_charts.py	/^def test_plot_common(plot_f, request):$/;"	f
test_plot_compare_four	tests/plotting/test_plotting.py	/^def test_plot_compare_four():$/;"	f
test_plot_complex_value	tests/plotting/test_plotting.py	/^def test_plot_complex_value(plane, verify_image_cache):$/;"	f
test_plot_composite_bool	tests/plotting/test_plotting.py	/^def test_plot_composite_bool(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_categories	tests/plotting/test_plotting.py	/^def test_plot_composite_categories(multiblock_poly):$/;"	f
test_plot_composite_lookup_table	tests/plotting/test_plotting.py	/^def test_plot_composite_lookup_table(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_many_options	tests/plotting/test_plotting.py	/^def test_plot_composite_many_options(multiblock_poly):$/;"	f
test_plot_composite_poly_complex	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_complex(multiblock_poly):$/;"	f
test_plot_composite_poly_component_nested_multiblock	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_component_nested_multiblock(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_poly_component_norm	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_component_norm(multiblock_poly):$/;"	f
test_plot_composite_poly_component_single	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_component_single(multiblock_poly):$/;"	f
test_plot_composite_poly_no_scalars	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_no_scalars(multiblock_poly):$/;"	f
test_plot_composite_poly_scalars_cell	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_scalars_cell(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_poly_scalars_opacity	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_scalars_opacity(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_preference_cell	tests/plotting/test_plotting.py	/^def test_plot_composite_preference_cell(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_raise	tests/plotting/test_plotting.py	/^def test_plot_composite_raise(sphere, multiblock_poly):$/;"	f
test_plot_composite_rgba	tests/plotting/test_plotting.py	/^def test_plot_composite_rgba(multiblock_poly):$/;"	f
test_plot_cubemap_alone	tests/plotting/test_plotting.py	/^def test_plot_cubemap_alone(cubemap):$/;"	f
test_plot_curvature	tests/plotting/test_plotting_utilities.py	/^def test_plot_curvature(skip_check_gc):$/;"	f
test_plot_curvature_pointset	tests/plotting/test_plotting_utilities.py	/^def test_plot_curvature_pointset(skip_check_gc):$/;"	f
test_plot_datasets	tests/plotting/test_demos.py	/^def test_plot_datasets():$/;"	f
test_plot_depth_peeling	tests/plotting/test_plotting.py	/^def test_plot_depth_peeling():$/;"	f
test_plot_eye_dome_lighting_enable_disable	tests/plotting/test_plotting.py	/^def test_plot_eye_dome_lighting_enable_disable(airplane):$/;"	f
test_plot_eye_dome_lighting_plot	tests/plotting/test_plotting.py	/^def test_plot_eye_dome_lighting_plot(airplane):$/;"	f
test_plot_eye_dome_lighting_plotter	tests/plotting/test_plotting.py	/^def test_plot_eye_dome_lighting_plotter(airplane):$/;"	f
test_plot_glyphs	tests/plotting/test_demos.py	/^def test_plot_glyphs():$/;"	f
test_plot_helper_two_datasets	tests/plotting/test_plotting.py	/^def test_plot_helper_two_datasets(sphere, airplane):$/;"	f
test_plot_helper_two_volumes	tests/plotting/test_plotting.py	/^def test_plot_helper_two_volumes(uniform, verify_image_cache):$/;"	f
test_plot_helper_volume	tests/plotting/test_plotting.py	/^def test_plot_helper_volume(uniform, verify_image_cache):$/;"	f
test_plot_increment_point_size	tests/plotting/test_plotting.py	/^def test_plot_increment_point_size():$/;"	f
test_plot_individual_cell	tests/plotting/test_plotting.py	/^def test_plot_individual_cell(hexbeam):$/;"	f
test_plot_invalid_add_scalar_bar	tests/plotting/test_plotting.py	/^def test_plot_invalid_add_scalar_bar():$/;"	f
test_plot_invalid_style	tests/plotting/test_plotting.py	/^def test_plot_invalid_style(sphere):$/;"	f
test_plot_label_fmt	tests/plotting/test_plotting.py	/^def test_plot_label_fmt(sphere):$/;"	f
test_plot_lighting_change_positional_false_true	tests/plotting/test_plotting.py	/^def test_plot_lighting_change_positional_false_true(sphere):$/;"	f
test_plot_lighting_change_positional_true_false	tests/plotting/test_plotting.py	/^def test_plot_lighting_change_positional_true_false(sphere):$/;"	f
test_plot_list	tests/plotting/test_plotting.py	/^def test_plot_list():$/;"	f
test_plot_logo	tests/plotting/test_demos.py	/^def test_plot_logo():$/;"	f
test_plot_nan_color	tests/plotting/test_plotting.py	/^def test_plot_nan_color(uniform):$/;"	f
test_plot_no_active_scalars	tests/plotting/test_plotting.py	/^def test_plot_no_active_scalars(sphere):$/;"	f
test_plot_no_silhouette	tests/plotting/test_plotting.py	/^def test_plot_no_silhouette(tri_cylinder):$/;"	f
test_plot_normals	tests/plotting/test_plotting_utilities.py	/^def test_plot_normals(flip, faces):$/;"	f
test_plot_numpy_texture	tests/plotting/test_plotting.py	/^def test_plot_numpy_texture():$/;"	f
test_plot_over_circular_arc	tests/core/test_dataset_filters.py	/^def test_plot_over_circular_arc(tmpdir):$/;"	f
test_plot_over_circular_arc_normal	tests/core/test_dataset_filters.py	/^def test_plot_over_circular_arc_normal(tmpdir):$/;"	f
test_plot_over_line	tests/core/test_dataset_filters.py	/^def test_plot_over_line(tmpdir):$/;"	f
test_plot_points_gaussian	tests/plotting/test_plotting.py	/^def test_plot_points_gaussian(sphere):$/;"	f
test_plot_points_gaussian_as_spheres	tests/plotting/test_plotting.py	/^def test_plot_points_gaussian_as_spheres(sphere):$/;"	f
test_plot_points_gaussian_scalars	tests/plotting/test_plotting.py	/^def test_plot_points_gaussian_scalars(sphere):$/;"	f
test_plot_pointset_widgets	tests/plotting/test_widgets.py	/^def test_plot_pointset_widgets(pointset):$/;"	f
test_plot_pyvista_ndarray	tests/plotting/test_plotting.py	/^def test_plot_pyvista_ndarray(sphere):$/;"	f
test_plot_return_cpos	tests/plotting/test_plotting.py	/^def test_plot_return_cpos(sphere):$/;"	f
test_plot_return_img_with_cpos	tests/plotting/test_plotter.py	/^def test_plot_return_img_with_cpos(sphere: pv.PolyData):$/;"	f
test_plot_return_img_without_cpos	tests/plotting/test_plotter.py	/^def test_plot_return_img_without_cpos(sphere: pv.PolyData):$/;"	f
test_plot_rgb	tests/plotting/test_plotting.py	/^def test_plot_rgb():$/;"	f
test_plot_shadows	tests/plotting/test_plotting.py	/^def test_plot_shadows():$/;"	f
test_plot_shadows_enable_disable	tests/plotting/test_plotting.py	/^def test_plot_shadows_enable_disable():$/;"	f
test_plot_show_bounds	tests/plotting/test_plotting.py	/^def test_plot_show_bounds(sphere):$/;"	f
test_plot_show_bounds_params	tests/plotting/test_plotting.py	/^def test_plot_show_bounds_params(grid, location):$/;"	f
test_plot_show_grid	tests/plotting/test_plotting.py	/^def test_plot_show_grid(sphere):$/;"	f
test_plot_show_grid_with_mesh	tests/plotting/test_plotting.py	/^def test_plot_show_grid_with_mesh(hexbeam, plane, verify_image_cache):$/;"	f
test_plot_show_vertices	tests/plotting/test_plotting.py	/^def test_plot_show_vertices(sphere, hexbeam, multiblock_all):$/;"	f
test_plot_silhouette	tests/plotting/test_plotting.py	/^def test_plot_silhouette(tri_cylinder):$/;"	f
test_plot_silhouette_method	tests/plotting/test_plotting.py	/^def test_plot_silhouette_method(tri_cylinder):$/;"	f
test_plot_silhouette_non_poly	tests/plotting/test_plotting.py	/^def test_plot_silhouette_non_poly(hexbeam):$/;"	f
test_plot_silhouette_options	tests/plotting/test_plotting.py	/^def test_plot_silhouette_options(tri_cylinder):$/;"	f
test_plot_string_array	tests/plotting/test_plotting.py	/^def test_plot_string_array(verify_image_cache):$/;"	f
test_plot_texture	tests/plotting/test_plotting.py	/^def test_plot_texture():$/;"	f
test_plot_texture_alone	tests/plotting/test_plotting.py	/^def test_plot_texture_alone(texture):$/;"	f
test_plot_texture_flip_x	tests/plotting/test_plotting.py	/^def test_plot_texture_flip_x(texture):$/;"	f
test_plot_texture_flip_y	tests/plotting/test_plotting.py	/^def test_plot_texture_flip_y(texture):$/;"	f
test_plot_update	tests/plotting/test_plotting.py	/^def test_plot_update(sphere):$/;"	f
test_plot_volume_rgba	tests/plotting/test_plotting.py	/^def test_plot_volume_rgba(uniform):$/;"	f
test_plot_volume_ugrid	tests/plotting/test_plotting.py	/^def test_plot_volume_ugrid(verify_image_cache):$/;"	f
test_plot_wave	tests/plotting/test_demos.py	/^def test_plot_wave():$/;"	f
test_plot_window_size_context	tests/plotting/test_plotting.py	/^def test_plot_window_size_context(sphere):$/;"	f
test_plot_zoom	tests/plotting/test_plotting.py	/^def test_plot_zoom(sphere):$/;"	f
test_plotter_actors	tests/plotting/test_plotter.py	/^def test_plotter_actors(sphere, cube):$/;"	f
test_plotter_add_floor	tests/plotting/test_plotter.py	/^def test_plotter_add_floor(face, normal):$/;"	f
test_plotter_add_floor_raise_error	tests/plotting/test_plotter.py	/^def test_plotter_add_floor_raise_error():$/;"	f
test_plotter_add_volume_clim	tests/plotting/test_plotter.py	/^def test_plotter_add_volume_clim(uniform: pv.ImageData):$/;"	f
test_plotter_add_volume_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_volume_raises(uniform: pv.ImageData, sphere: pv.PolyData):$/;"	f
test_plotter_camera_position	tests/plotting/test_renderer.py	/^def test_plotter_camera_position():$/;"	f
test_plotter_image	tests/plotting/test_plotting.py	/^def test_plotter_image():$/;"	f
test_plotter_image_before_show	tests/plotting/test_plotter.py	/^def test_plotter_image_before_show():$/;"	f
test_plotter_image_scale	tests/plotting/test_plotter.py	/^def test_plotter_image_scale():$/;"	f
test_plotter_line_point_smoothing	tests/plotting/test_plotter.py	/^def test_plotter_line_point_smoothing():$/;"	f
test_plotter_lookup_table	tests/plotting/test_plotting.py	/^def test_plotter_lookup_table(sphere, verify_image_cache):$/;"	f
test_plotter_meshes	tests/plotting/test_plotter.py	/^def test_plotter_meshes(sphere, cube):$/;"	f
test_plotter_remains_shallow	tests/plotting/test_plotter.py	/^def test_plotter_remains_shallow():$/;"	f
test_plotter_render_callback	tests/plotting/test_plotting.py	/^def test_plotter_render_callback():$/;"	f
test_plotter_scale	tests/plotting/test_plotting.py	/^def test_plotter_scale(sphere):$/;"	f
test_plotter_set_theme	tests/plotting/test_theme.py	/^def test_plotter_set_theme():$/;"	f
test_plotter_shape_invalid	tests/plotting/test_plotting.py	/^def test_plotter_shape_invalid():$/;"	f
test_plotter_suppress_rendering	tests/plotting/test_plotter.py	/^def test_plotter_suppress_rendering():$/;"	f
test_plotter_volume_add_scalars	tests/plotting/test_plotting.py	/^def test_plotter_volume_add_scalars(uniform):$/;"	f
test_plotter_volume_add_scalars_log_scale	tests/plotting/test_plotting.py	/^def test_plotter_volume_add_scalars_log_scale(uniform):$/;"	f
test_plotter_volume_lookup_table	tests/plotting/test_plotting.py	/^def test_plotter_volume_lookup_table(uniform):$/;"	f
test_plotting_collection	tests/plotting/test_collection.py	/^def test_plotting_collection():$/;"	f
test_plotting_errors_namespace	tests/namespace/test_errors_namespace.py	/^def test_plotting_errors_namespace(name):$/;"	f
test_plotting_top_namespace	tests/namespace/test_plotting_namespace.py	/^def test_plotting_top_namespace(name):$/;"	f
test_plyreader	tests/core/test_reader.py	/^def test_plyreader():$/;"	f
test_png_reader	tests/core/test_reader.py	/^def test_png_reader():$/;"	f
test_pnm_reader	tests/core/test_reader.py	/^def test_pnm_reader():$/;"	f
test_point_cell_data_single_scalar_no_exception_raised	tests/core/test_dataset.py	/^def test_point_cell_data_single_scalar_no_exception_raised():$/;"	f
test_point_cell_ids	tests/core/test_dataset.py	/^def test_point_cell_ids(grid: DataSet, i0):$/;"	f
test_point_data	tests/core/test_dataset.py	/^def test_point_data(grid):$/;"	f
test_point_data_bad_value	tests/core/test_dataset.py	/^def test_point_data_bad_value(grid):$/;"	f
test_point_data_to_cell_data	tests/core/test_dataset_filters.py	/^def test_point_data_to_cell_data():$/;"	f
test_point_data_to_cell_data_composite	tests/core/test_dataset_filters.py	/^def test_point_data_to_cell_data_composite(composite):$/;"	f
test_point_is_inside_cell	tests/core/test_dataset.py	/^def test_point_is_inside_cell():$/;"	f
test_point_neighbors_levels	tests/core/test_dataset.py	/^def test_point_neighbors_levels(grid: DataSet, i0, n_levels):$/;"	f
test_point_normals	tests/core/test_polydata.py	/^def test_point_normals(sphere):$/;"	f
test_point_picking	tests/plotting/test_picking.py	/^def test_point_picking(left_clicking):$/;"	f
test_point_picking_window	tests/plotting/test_picking.py	/^def test_point_picking_window(pickable_window):$/;"	f
test_points_np_bool	tests/core/test_dataset.py	/^def test_points_np_bool(grid):$/;"	f
test_points_to_double	tests/core/test_pointset.py	/^def test_points_to_double():$/;"	f
test_points_uint8	tests/core/test_dataset.py	/^def test_points_uint8(grid):$/;"	f
test_pointset	tests/core/test_pointset.py	/^def test_pointset(pointset):$/;"	f
test_pointset_basic	tests/core/test_pointset.py	/^def test_pointset_basic():$/;"	f
test_pointset_force_float	tests/core/test_pointset.py	/^def test_pointset_force_float(force_float, expected_data_type):$/;"	f
test_pointset_from_vtk	tests/core/test_pointset.py	/^def test_pointset_from_vtk():$/;"	f
test_pointset_plot	tests/plotting/test_plotting.py	/^def test_pointset_plot(pointset):$/;"	f
test_pointset_plot_as_points	tests/plotting/test_plotting.py	/^def test_pointset_plot_as_points(pointset):$/;"	f
test_pointset_plot_as_points_vtk	tests/plotting/test_plotting.py	/^def test_pointset_plot_as_points_vtk():$/;"	f
test_pointset_plot_vtk	tests/plotting/test_plotting.py	/^def test_pointset_plot_vtk():$/;"	f
test_pointset_to_polydata_algorithm	tests/plotting/test_plotting.py	/^def test_pointset_to_polydata_algorithm(pointset):$/;"	f
test_pointset_wrap	tests/core/test_pointset.py	/^def test_pointset_wrap():$/;"	f
test_poked_subplot_context	tests/plotting/test_render_window_interactor.py	/^def test_poked_subplot_context(verify_image_cache):$/;"	f
test_poked_subplot_loc	tests/plotting/test_render_window_interactor.py	/^def test_poked_subplot_loc():$/;"	f
test_poly_data_strip	tests/core/test_dataset_filters.py	/^def test_poly_data_strip():$/;"	f
test_poly_line	tests/examples/test_cell_examples.py	/^def test_poly_line():$/;"	f
test_poly_vertex	tests/examples/test_cell_examples.py	/^def test_poly_vertex():$/;"	f
test_polydata_eq	tests/core/test_dataobject.py	/^def test_polydata_eq(sphere):$/;"	f
test_polydata_repr_str	tests/core/test_polydata.py	/^def test_polydata_repr_str():$/;"	f
test_polygon	tests/core/test_geometric_objects.py	/^def test_polygon():$/;"	f
test_polygon	tests/examples/test_cell_examples.py	/^def test_polygon():$/;"	f
test_pop	tests/core/test_composite.py	/^def test_pop():$/;"	f
test_pop_should_fail_bad_argument	tests/core/test_datasetattributes.py	/^def test_pop_should_fail_bad_argument(removed_key, hexbeam_point_attributes):$/;"	f
test_pop_should_return_arange_narray	tests/core/test_datasetattributes.py	/^def test_pop_should_return_arange_narray(insert_arange_narray):$/;"	f
test_pop_should_return_bool_array	tests/core/test_datasetattributes.py	/^def test_pop_should_return_bool_array(insert_bool_array):$/;"	f
test_pop_should_return_string_array	tests/core/test_datasetattributes.py	/^def test_pop_should_return_string_array(insert_string_array):$/;"	f
test_positional	tests/plotting/test_lights.py	/^def test_positional():$/;"	f
test_positioning	tests/plotting/test_lights.py	/^def test_positioning():$/;"	f
test_prepare_smooth_shading_not_poly	tests/plotting/test_plotter.py	/^def test_prepare_smooth_shading_not_poly(hexbeam):$/;"	f
test_prepare_smooth_shading_texture	tests/plotting/test_plotter.py	/^def test_prepare_smooth_shading_texture(globe):$/;"	f
test_preserve_field_data_after_extract_cells	tests/core/test_datasetattributes.py	/^def test_preserve_field_data_after_extract_cells(hexbeam, arr):$/;"	f
test_print_repr	tests/core/test_dataset.py	/^def test_print_repr(grid, display, html):$/;"	f
test_probe	tests/core/test_dataset_filters.py	/^def test_probe(categorical, use_points, locator):$/;"	f
test_progress_monitor	tests/core/test_utilities.py	/^def test_progress_monitor():$/;"	f
test_project_points_to_plane	tests/core/test_polydata.py	/^def test_project_points_to_plane():$/;"	f
test_property_ambient	tests/plotting/test_property.py	/^def test_property_ambient(prop):$/;"	f
test_property_ambient_color	tests/plotting/test_property.py	/^def test_property_ambient_color(prop):$/;"	f
test_property_anisotropy	tests/plotting/test_property.py	/^def test_property_anisotropy(prop):$/;"	f
test_property_background_color	tests/plotting/test_text.py	/^def test_property_background_color(prop):$/;"	f
test_property_background_opacity	tests/plotting/test_text.py	/^def test_property_background_opacity(prop):$/;"	f
test_property_color	tests/plotting/test_text.py	/^def test_property_color(prop):$/;"	f
test_property_culling	tests/plotting/test_property.py	/^def test_property_culling(prop, value):$/;"	f
test_property_diffuse	tests/plotting/test_property.py	/^def test_property_diffuse(prop):$/;"	f
test_property_diffuse_color	tests/plotting/test_property.py	/^def test_property_diffuse_color(prop):$/;"	f
test_property_edge_color	tests/plotting/test_property.py	/^def test_property_edge_color(prop):$/;"	f
test_property_enable_shadow	tests/plotting/test_text.py	/^def test_property_enable_shadow(prop):$/;"	f
test_property_font_family	tests/plotting/test_text.py	/^def test_property_font_family(prop):$/;"	f
test_property_font_size	tests/plotting/test_text.py	/^def test_property_font_size(prop):$/;"	f
test_property_frame_color	tests/plotting/test_text.py	/^def test_property_frame_color(prop):$/;"	f
test_property_frame_width	tests/plotting/test_text.py	/^def test_property_frame_width(prop):$/;"	f
test_property_init	tests/plotting/test_property.py	/^def test_property_init():$/;"	f
test_property_init	tests/plotting/test_text.py	/^def test_property_init():$/;"	f
test_property_interpolation	tests/plotting/test_property.py	/^def test_property_interpolation(prop):$/;"	f
test_property_lighting	tests/plotting/test_property.py	/^def test_property_lighting(prop):$/;"	f
test_property_line_width	tests/plotting/test_property.py	/^def test_property_line_width(prop):$/;"	f
test_property_metallic	tests/plotting/test_property.py	/^def test_property_metallic(prop):$/;"	f
test_property_opacity	tests/plotting/test_property.py	/^def test_property_opacity(prop):$/;"	f
test_property_opacity	tests/plotting/test_text.py	/^def test_property_opacity(prop):$/;"	f
test_property_orientation	tests/plotting/test_text.py	/^def test_property_orientation(prop):$/;"	f
test_property_pbr	tests/plotting/test_plotting.py	/^def test_property_pbr(verify_image_cache):$/;"	f
test_property_point_size	tests/plotting/test_property.py	/^def test_property_point_size(prop):$/;"	f
test_property_render_lines_as_tubes	tests/plotting/test_property.py	/^def test_property_render_lines_as_tubes(prop):$/;"	f
test_property_render_points_as_spheres	tests/plotting/test_property.py	/^def test_property_render_points_as_spheres(prop):$/;"	f
test_property_roughness	tests/plotting/test_property.py	/^def test_property_roughness(prop):$/;"	f
test_property_set_font_file	tests/plotting/test_text.py	/^def test_property_set_font_file(prop):$/;"	f
test_property_show_edges	tests/plotting/test_property.py	/^def test_property_show_edges(prop):$/;"	f
test_property_show_frame	tests/plotting/test_text.py	/^def test_property_show_frame(prop):$/;"	f
test_property_specular	tests/plotting/test_property.py	/^def test_property_specular(prop):$/;"	f
test_property_specular_color	tests/plotting/test_property.py	/^def test_property_specular_color(prop):$/;"	f
test_property_specular_power	tests/plotting/test_property.py	/^def test_property_specular_power(prop):$/;"	f
test_property_style	tests/plotting/test_property.py	/^def test_property_style(prop):$/;"	f
test_public_namespace	tests/namespace/test_public_namespace.py	/^def test_public_namespace(name):$/;"	f
test_pvdreader	tests/core/test_reader.py	/^def test_pvdreader():$/;"	f
test_pvdreader_no_part_group	tests/core/test_reader.py	/^def test_pvdreader_no_part_group():$/;"	f
test_pvdreader_no_time_group	tests/core/test_reader.py	/^def test_pvdreader_no_time_group():$/;"	f
test_pyramid	tests/core/test_geometric_objects.py	/^def test_pyramid():$/;"	f
test_pyramid	tests/examples/test_cell_examples.py	/^def test_pyramid():$/;"	f
test_pyvista_read_exodus	tests/core/test_utilities.py	/^def test_pyvista_read_exodus(read_exodus_mock):$/;"	f
test_pyvistandarray_assign	tests/plotting/test_collection.py	/^def test_pyvistandarray_assign(sphere):$/;"	f
test_pyvistandarray_strides	tests/plotting/test_collection.py	/^def test_pyvistandarray_strides(sphere):$/;"	f
test_quadrilateral	tests/core/test_geometric_objects.py	/^def test_quadrilateral():$/;"	f
test_raise_rectilinear_grid_non_unique	tests/core/test_grid.py	/^def test_raise_rectilinear_grid_non_unique():$/;"	f
test_raise_unsupported	tests/core/test_pointset.py	/^def test_raise_unsupported(pointset):$/;"	f
test_raises_cell_neighbors_ExplicitStructuredGrid	tests/core/test_dataset.py	/^def test_raises_cell_neighbors_ExplicitStructuredGrid(datasets_vtk9):$/;"	f
test_raises_cell_neighbors_connections	tests/core/test_dataset.py	/^def test_raises_cell_neighbors_connections(grid):$/;"	f
test_raises_point_neighbors_ind_overflow	tests/core/test_dataset.py	/^def test_raises_point_neighbors_ind_overflow(grid):$/;"	f
test_ramp	tests/plotting/test_lookup_table.py	/^def test_ramp(lut):$/;"	f
test_ray_plane_intersection	tests/plotting/test_widgets.py	/^def test_ray_plane_intersection():$/;"	f
test_ray_trace	tests/core/test_polydata.py	/^def test_ray_trace(sphere):$/;"	f
test_ray_trace_plot	tests/plotting/test_plotting_utilities.py	/^def test_ray_trace_plot():$/;"	f
test_read	tests/core/test_utilities.py	/^def test_read(tmpdir, use_pathlib):$/;"	f
test_read_attrs	tests/core/test_utilities.py	/^def test_read_attrs(mock_reader, mock_read):$/;"	f
test_read_cgns	tests/core/test_reader.py	/^def test_read_cgns():$/;"	f
test_read_force_ext	tests/core/test_utilities.py	/^def test_read_force_ext(tmpdir):$/;"	f
test_read_force_ext_wrong_extension	tests/core/test_utilities.py	/^def test_read_force_ext_wrong_extension(tmpdir):$/;"	f
test_read_image_data_from_file	tests/core/test_grid.py	/^def test_read_image_data_from_file():$/;"	f
test_read_image_data_from_pathlib	tests/core/test_grid.py	/^def test_read_image_data_from_pathlib():$/;"	f
test_read_legacy	tests/core/test_utilities.py	/^def test_read_legacy(read_mock):$/;"	f
test_read_plot3d	tests/core/test_utilities.py	/^def test_read_plot3d(path_mock, read_mock, auto_detect):$/;"	f
test_read_progress_bar	tests/core/test_utilities.py	/^def test_read_progress_bar(mock_show_progress, mock_reader, mock_read):$/;"	f
test_read_rectilinear_grid_from_file	tests/core/test_grid.py	/^def test_read_rectilinear_grid_from_file():$/;"	f
test_read_rectilinear_grid_from_pathlib	tests/core/test_grid.py	/^def test_read_rectilinear_grid_from_pathlib():$/;"	f
test_read_texture_from_numpy	tests/plotting/test_plotting.py	/^def test_read_texture_from_numpy():$/;"	f
test_reader_cell_point_data	tests/core/test_reader.py	/^def test_reader_cell_point_data(tmpdir):$/;"	f
test_reader_invalid_file	tests/core/test_reader.py	/^def test_reader_invalid_file():$/;"	f
test_reconstruct_surface_poly	tests/core/test_dataset_filters.py	/^def test_reconstruct_surface_poly(sphere):$/;"	f
test_reconstruct_surface_unstructured	tests/core/test_dataset_filters.py	/^def test_reconstruct_surface_unstructured():$/;"	f
test_rectangle	tests/core/test_geometric_objects.py	/^def test_rectangle():$/;"	f
test_rectangle_4points_deprecation	tests/core/test_geometric_objects.py	/^def test_rectangle_4points_deprecation():$/;"	f
test_rectangle_not_enough_points	tests/core/test_geometric_objects.py	/^def test_rectangle_not_enough_points():$/;"	f
test_rectangle_not_orthognal_entries	tests/core/test_geometric_objects.py	/^def test_rectangle_not_orthognal_entries():$/;"	f
test_rectangle_two_identical_points	tests/core/test_geometric_objects.py	/^def test_rectangle_two_identical_points():$/;"	f
test_rectlinear_edge_case	tests/plotting/test_plotting.py	/^def test_rectlinear_edge_case(verify_image_cache):$/;"	f
test_reflect_inplace	tests/core/test_dataset_filters.py	/^def test_reflect_inplace(dataset):$/;"	f
test_reflect_mesh_about_point	tests/core/test_dataset_filters.py	/^def test_reflect_mesh_about_point(datasets):$/;"	f
test_reflect_mesh_with_vectors	tests/core/test_dataset_filters.py	/^def test_reflect_mesh_with_vectors(datasets):$/;"	f
test_reflection	tests/core/test_utilities.py	/^def test_reflection():$/;"	f
test_regular_faces	tests/core/test_polydata.py	/^def test_regular_faces(deep):$/;"	f
test_regular_faces_mutable	tests/core/test_polydata.py	/^def test_regular_faces_mutable():$/;"	f
test_remove_actor	tests/plotting/test_plotting.py	/^def test_remove_actor(uniform):$/;"	f
test_remove_blurring	tests/plotting/test_plotter.py	/^def test_remove_blurring(sphere):$/;"	f
test_remove_bounds_axes	tests/plotting/test_plotting.py	/^def test_remove_bounds_axes(sphere):$/;"	f
test_remove_cells	tests/core/test_grid.py	/^def test_remove_cells(ind, hexbeam):$/;"	f
test_remove_cells_invalid	tests/core/test_grid.py	/^def test_remove_cells_invalid(hexbeam):$/;"	f
test_remove_cells_not_inplace	tests/core/test_grid.py	/^def test_remove_cells_not_inplace(ind, hexbeam):$/;"	f
test_remove_environment_texture_cubemap	tests/plotting/test_plotting.py	/^def test_remove_environment_texture_cubemap(sphere):$/;"	f
test_remove_fail	tests/plotting/test_scalar_bars.py	/^def test_remove_fail(scalar_bars):$/;"	f
test_remove_points_all	tests/core/test_polydata.py	/^def test_remove_points_all(sphere):$/;"	f
test_remove_points_any	tests/core/test_polydata.py	/^def test_remove_points_any(sphere):$/;"	f
test_remove_points_fail	tests/core/test_polydata.py	/^def test_remove_points_fail(sphere, plane):$/;"	f
test_remove_scalars_single	tests/plotting/test_plotter.py	/^def test_remove_scalars_single(sphere, hexbeam):$/;"	f
test_remove_should_fail_on_bad_argument	tests/core/test_datasetattributes.py	/^def test_remove_should_fail_on_bad_argument(removed_key, hexbeam_point_attributes):$/;"	f
test_remove_vertices_actor	tests/plotting/test_plotting.py	/^def test_remove_vertices_actor(sphere):$/;"	f
test_rename_array_cell	tests/core/test_dataset.py	/^def test_rename_array_cell(grid):$/;"	f
test_rename_array_field	tests/core/test_dataset.py	/^def test_rename_array_field(grid):$/;"	f
test_rename_array_point	tests/core/test_dataset.py	/^def test_rename_array_point(grid):$/;"	f
test_render_lines_as_tubes_show_edges_warning	tests/plotting/test_plotter.py	/^def test_render_lines_as_tubes_show_edges_warning(sphere):$/;"	f
test_render_passes_deep_clean	tests/plotting/test_render_pass.py	/^def test_render_passes_deep_clean():$/;"	f
test_render_passes_init	tests/plotting/test_render_pass.py	/^def test_render_passes_init():$/;"	f
test_renderer_set_viewup	tests/plotting/test_renderer.py	/^def test_renderer_set_viewup():$/;"	f
test_repeat	tests/plotting/test_texture.py	/^def test_repeat(texture):$/;"	f
test_replace	tests/core/test_composite.py	/^def test_replace():$/;"	f
test_report	tests/core/test_utilities.py	/^def test_report():$/;"	f
test_repr	tests/core/test_cells.py	/^def test_repr(cell, type_):$/;"	f
test_repr	tests/core/test_datasetattributes.py	/^def test_repr(hexbeam_point_attributes):$/;"	f
test_repr	tests/plotting/test_lookup_table.py	/^def test_repr(lut):$/;"	f
test_repr	tests/plotting/test_scalar_bars.py	/^def test_repr(scalar_bars):$/;"	f
test_repr	tests/plotting/test_theme.py	/^def test_repr(default_theme):$/;"	f
test_reset_camera	tests/plotting/test_renderer.py	/^def test_reset_camera():$/;"	f
test_reset_camera_clipping_range	tests/plotting/test_plotting.py	/^def test_reset_camera_clipping_range(sphere):$/;"	f
test_reset_clipping_range	tests/plotting/test_camera.py	/^def test_reset_clipping_range(camera):$/;"	f
test_restore_defaults	tests/plotting/test_theme.py	/^def test_restore_defaults(default_theme):$/;"	f
test_reverse	tests/core/test_composite.py	/^def test_reverse(sphere):$/;"	f
test_ribbon_filter	tests/core/test_polydata.py	/^def test_ribbon_filter():$/;"	f
test_roll	tests/plotting/test_camera.py	/^def test_roll(camera):$/;"	f
test_rotate_should_match_vtk_rotation	tests/core/test_dataset.py	/^def test_rotate_should_match_vtk_rotation(angle, axis, grid):$/;"	f
test_rotate_vector	tests/core/test_dataset.py	/^def test_rotate_vector():$/;"	f
test_rotate_vector	tests/core/test_pointset.py	/^def test_rotate_vector():$/;"	f
test_rotate_x	tests/core/test_dataset.py	/^def test_rotate_x():$/;"	f
test_rotate_x	tests/core/test_pointset.py	/^def test_rotate_x():$/;"	f
test_rotate_y	tests/core/test_dataset.py	/^def test_rotate_y():$/;"	f
test_rotate_y	tests/core/test_pointset.py	/^def test_rotate_y():$/;"	f
test_rotate_z	tests/core/test_dataset.py	/^def test_rotate_z():$/;"	f
test_rotate_z	tests/core/test_pointset.py	/^def test_rotate_z():$/;"	f
test_rotations_should_match_by_a_360_degree_difference	tests/core/test_dataset.py	/^def test_rotations_should_match_by_a_360_degree_difference():$/;"	f
test_ruler	tests/plotting/test_plotting.py	/^def test_ruler():$/;"	f
test_sample	tests/core/test_dataset_filters.py	/^def test_sample():$/;"	f
test_sample_composite	tests/core/test_dataset_filters.py	/^def test_sample_composite():$/;"	f
test_sample_function	tests/core/test_imaging.py	/^def test_sample_function(dtype):$/;"	f
test_sample_over_circular_arc	tests/core/test_dataset_filters.py	/^def test_sample_over_circular_arc():$/;"	f
test_sample_over_circular_arc_normal	tests/core/test_dataset_filters.py	/^def test_sample_over_circular_arc_normal():$/;"	f
test_sample_over_line	tests/core/test_dataset_filters.py	/^def test_sample_over_line():$/;"	f
test_sample_over_multiple_lines	tests/core/test_dataset_filters.py	/^def test_sample_over_multiple_lines():$/;"	f
test_saturation_range	tests/plotting/test_lookup_table.py	/^def test_saturation_range(lut, lut_w_cmap):$/;"	f
test_save	tests/core/test_grid.py	/^def test_save(extension, binary, tmpdir, hexbeam):$/;"	f
test_save	tests/core/test_pointset.py	/^def test_save(tmpdir, pointset):$/;"	f
test_save	tests/core/test_polydata.py	/^def test_save(sphere, extension, binary, tmpdir):$/;"	f
test_save_bad_extension	tests/core/test_grid.py	/^def test_save_bad_extension():$/;"	f
test_save_before_close_callback	tests/plotting/test_theme.py	/^def test_save_before_close_callback(tmpdir, default_theme):$/;"	f
test_save_ply_texture_array	tests/plotting/test_texture.py	/^def test_save_ply_texture_array(sphere, ndim, as_str, tmpdir):$/;"	f
test_save_ply_texture_array_catch	tests/plotting/test_texture.py	/^def test_save_ply_texture_array_catch(sphere, as_str, tmpdir):$/;"	f
test_save_rectilinear	tests/core/test_grid.py	/^def test_save_rectilinear(extension, binary, tmpdir):$/;"	f
test_save_screenshot	tests/plotting/test_plotting.py	/^def test_save_screenshot(tmpdir, sphere, ext):$/;"	f
test_save_structured	tests/core/test_grid.py	/^def test_save_structured(extension, binary, tmpdir, struct_grid):$/;"	f
test_save_uniform	tests/core/test_grid.py	/^def test_save_uniform(extension, binary, tmpdir):$/;"	f
test_scalar_bar_actor_removal	tests/plotting/test_plotting.py	/^def test_scalar_bar_actor_removal(sphere):$/;"	f
test_scalar_bar_args_unmodified_add_mesh	tests/plotting/test_plotting.py	/^def test_scalar_bar_args_unmodified_add_mesh(sphere):$/;"	f
test_scalar_bar_args_unmodified_add_volume	tests/plotting/test_plotting.py	/^def test_scalar_bar_args_unmodified_add_volume(uniform):$/;"	f
test_scalar_cell_priorities	tests/plotting/test_plotting.py	/^def test_scalar_cell_priorities():$/;"	f
test_scalar_map_mode	tests/plotting/mappers/test_composite_mapper.py	/^def test_scalar_map_mode(composite_mapper):$/;"	f
test_scalar_map_mode_values	tests/plotting/mappers/test_composite_mapper.py	/^def test_scalar_map_mode_values(value, composite_mapper):$/;"	f
test_scalar_range	tests/plotting/mappers/test_mapper.py	/^def test_scalar_range(dataset_mapper):$/;"	f
test_scalar_range	tests/plotting/test_lookup_table.py	/^def test_scalar_range(lut):$/;"	f
test_scalar_visibility	tests/plotting/mappers/test_composite_mapper.py	/^def test_scalar_visibility(composite_mapper):$/;"	f
test_scalars_by_name	tests/plotting/test_plotting.py	/^def test_scalars_by_name(verify_image_cache):$/;"	f
test_scalars_dict_update	tests/core/test_dataset.py	/^def test_scalars_dict_update():$/;"	f
test_scale	tests/core/test_dataset.py	/^def test_scale():$/;"	f
test_scale	tests/core/test_pointset.py	/^def test_scale():$/;"	f
test_scale_factor	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_scale_factor(mapper):$/;"	f
test_scatterplot2d	tests/plotting/test_charts.py	/^def test_scatterplot2d(chart_2d, scatter_plot_2d):$/;"	f
test_scraper	tests/plotting/test_scraper.py	/^def test_scraper(tmpdir, monkeypatch, n_win):$/;"	f
test_scraper_raise	tests/plotting/test_scraper.py	/^def test_scraper_raise(tmpdir):$/;"	f
test_screenshot	tests/plotting/test_plotting.py	/^def test_screenshot(tmpdir):$/;"	f
test_screenshot_altered_window_size	tests/plotting/test_plotting.py	/^def test_screenshot_altered_window_size(sphere):$/;"	f
test_screenshot_bytes	tests/plotting/test_plotting.py	/^def test_screenshot_bytes():$/;"	f
test_screenshot_fail_suppressed_rendering	tests/plotting/test_plotter.py	/^def test_screenshot_fail_suppressed_rendering():$/;"	f
test_screenshot_notebook	tests/plotting/test_plotting.py	/^def test_screenshot_notebook(tmpdir):$/;"	f
test_screenshot_rendering	tests/plotting/test_plotting.py	/^def test_screenshot_rendering(tmpdir):$/;"	f
test_screenshot_scaled	tests/plotting/test_plotting.py	/^def test_screenshot_scaled():$/;"	f
test_select_enclosed_points	tests/core/test_dataset_filters.py	/^def test_select_enclosed_points(uniform, hexbeam):$/;"	f
test_separate_cells	tests/core/test_dataset.py	/^def test_separate_cells(hexbeam):$/;"	f
test_serialize_deserialize	tests/core/test_dataset.py	/^def test_serialize_deserialize(datasets, pickle_format):$/;"	f
test_set_active_multi_multi	tests/core/test_composite.py	/^def test_set_active_multi_multi(multiblock_poly):$/;"	f
test_set_active_scalars	tests/core/test_composite.py	/^def test_set_active_scalars(multiblock_all):$/;"	f
test_set_active_scalars	tests/core/test_dataset.py	/^def test_set_active_scalars(grid):$/;"	f
test_set_active_scalars_components	tests/core/test_composite.py	/^def test_set_active_scalars_components(multiblock_poly):$/;"	f
test_set_active_scalars_fail	tests/core/test_datasetattributes.py	/^def test_set_active_scalars_fail(hexbeam):$/;"	f
test_set_active_scalars_mixed	tests/core/test_composite.py	/^def test_set_active_scalars_mixed(multiblock_poly):$/;"	f
test_set_active_scalars_multi	tests/core/test_composite.py	/^def test_set_active_scalars_multi(multiblock_poly):$/;"	f
test_set_active_scalars_name	tests/core/test_dataset.py	/^def test_set_active_scalars_name(grid):$/;"	f
test_set_active_tensors	tests/core/test_dataset.py	/^def test_set_active_tensors(grid):$/;"	f
test_set_active_tensors_fail	tests/core/test_dataset.py	/^def test_set_active_tensors_fail(grid):$/;"	f
test_set_active_vectors	tests/core/test_dataset.py	/^def test_set_active_vectors(grid):$/;"	f
test_set_active_vectors	tests/core/test_datasetattributes.py	/^def test_set_active_vectors(hexbeam):$/;"	f
test_set_active_vectors_fail	tests/core/test_dataset.py	/^def test_set_active_vectors_fail(grid):$/;"	f
test_set_array_catch	tests/core/test_datasetattributes.py	/^def test_set_array_catch(hexbeam):$/;"	f
test_set_array_scalar_value_should_give_array	tests/core/test_datasetattributes.py	/^def test_set_array_scalar_value_should_give_array(scalar, hexbeam_point_attributes):$/;"	f
test_set_array_should_accept_scalar_value	tests/core/test_datasetattributes.py	/^def test_set_array_should_accept_scalar_value(scalar, hexbeam_point_attributes):$/;"	f
test_set_array_string_array_should_equal	tests/core/test_datasetattributes.py	/^def test_set_array_string_array_should_equal(arr, hexbeam_field_attributes):$/;"	f
test_set_array_string_lists_should_equal	tests/core/test_datasetattributes.py	/^def test_set_array_string_lists_should_equal(arr, hexbeam_field_attributes):$/;"	f
test_set_background	tests/plotting/test_plotting.py	/^def test_set_background():$/;"	f
test_set_bitarray	tests/core/test_datasetattributes.py	/^def test_set_bitarray(hexbeam):$/;"	f
test_set_camera_position	tests/plotting/test_plotting.py	/^def test_set_camera_position(cpos, sphere):$/;"	f
test_set_camera_position_invalid	tests/plotting/test_plotting.py	/^def test_set_camera_position_invalid(cpos, sphere):$/;"	f
test_set_cell_vectors	tests/core/test_dataset.py	/^def test_set_cell_vectors(grid):$/;"	f
test_set_default_active_scalarrs	tests/core/test_helpers.py	/^def test_set_default_active_scalarrs():$/;"	f
test_set_default_active_vectors	tests/core/test_helpers.py	/^def test_set_default_active_vectors():$/;"	f
test_set_environment_texture_cubemap	tests/plotting/test_plotting.py	/^def test_set_environment_texture_cubemap(sphere, verify_image_cache):$/;"	f
test_set_extent	tests/core/test_grid.py	/^def test_set_extent():$/;"	f
test_set_fails_with_wrong_shape	tests/core/test_datasetattributes.py	/^def test_set_fails_with_wrong_shape(hexbeam):$/;"	f
test_set_focus	tests/plotting/test_plotting.py	/^def test_set_focus():$/;"	f
test_set_hidden_line_removal	tests/plotting/test_theme.py	/^def test_set_hidden_line_removal(default_theme):$/;"	f
test_set_invalid_vectors	tests/core/test_datasetattributes.py	/^def test_set_invalid_vectors(hexbeam):$/;"	f
test_set_item	tests/core/test_dataset.py	/^def test_set_item(grid):$/;"	f
test_set_item_range	tests/core/test_dataset.py	/^def test_set_item_range(grid):$/;"	f
test_set_jupyter_backend_fail	tests/plotting/jupyter/test_static.py	/^def test_set_jupyter_backend_fail():$/;"	f
test_set_jupyter_backend_none	tests/plotting/jupyter/test_static.py	/^def test_set_jupyter_backend_none(backend):$/;"	f
test_set_jupyter_backend_static	tests/plotting/jupyter/test_static.py	/^def test_set_jupyter_backend_static():$/;"	f
test_set_jupyter_backend_trame	tests/plotting/jupyter/test_trame.py	/^def test_set_jupyter_backend_trame():$/;"	f
test_set_parallel_projection	tests/plotting/test_plotting.py	/^def test_set_parallel_projection(state):$/;"	f
test_set_parallel_scale	tests/plotting/test_plotting.py	/^def test_set_parallel_scale(value):$/;"	f
test_set_parallel_scale_invalid	tests/plotting/test_plotting.py	/^def test_set_parallel_scale_invalid():$/;"	f
test_set_pickle_format	tests/core/test_utilities.py	/^def test_set_pickle_format():$/;"	f
test_set_plot_theme_from_env	tests/plotting/test_theme.py	/^def test_set_plot_theme_from_env():$/;"	f
test_set_points	tests/core/test_dataset.py	/^def test_set_points():$/;"	f
test_set_regular_faces	tests/core/test_polydata.py	/^def test_set_regular_faces():$/;"	f
test_set_scalars	tests/core/test_datasetattributes.py	/^def test_set_scalars(sphere):$/;"	f
test_set_scalars	tests/plotting/mappers/test_mapper.py	/^def test_set_scalars(dataset_mapper):$/;"	f
test_set_shallow_regular_cells	tests/core/test_cells.py	/^def test_set_shallow_regular_cells():$/;"	f
test_set_t_coords	tests/core/test_dataset.py	/^def test_set_t_coords(grid):$/;"	f
test_set_tcoords_name	tests/core/test_datasetattributes.py	/^def test_set_tcoords_name():$/;"	f
test_set_theme	tests/plotting/test_theme.py	/^def test_set_theme():$/;"	f
test_set_vectors	tests/core/test_datasetattributes.py	/^def test_set_vectors(hexbeam):$/;"	f
test_set_viewup	tests/plotting/test_plotting.py	/^def test_set_viewup(verify_image_cache):$/;"	f
test_setitem	tests/core/test_datasetattributes.py	/^def test_setitem(hexbeam_point_attributes):$/;"	f
test_setting_points_by_different_types	tests/core/test_dataset.py	/^def test_setting_points_by_different_types(grid):$/;"	f
test_shadow_pass	tests/plotting/test_render_pass.py	/^def test_shadow_pass():$/;"	f
test_shallow_copy_back_propagation	tests/core/test_dataset.py	/^def test_shallow_copy_back_propagation():$/;"	f
test_shape	tests/plotting/test_lights.py	/^def test_shape():$/;"	f
test_should_del_array	tests/core/test_datasetattributes.py	/^def test_should_del_array(insert_arange_narray):$/;"	f
test_should_pop_array	tests/core/test_datasetattributes.py	/^def test_should_pop_array(insert_arange_narray):$/;"	f
test_should_pop_array_invalid	tests/core/test_datasetattributes.py	/^def test_should_pop_array_invalid(insert_arange_narray):$/;"	f
test_should_remove_array	tests/core/test_datasetattributes.py	/^def test_should_remove_array(insert_arange_narray):$/;"	f
test_show_axes	tests/plotting/test_plotting.py	/^def test_show_axes():$/;"	f
test_show_axes_all	tests/plotting/test_plotting.py	/^def test_show_axes_all():$/;"	f
test_show_bounds_axes_ranges	tests/plotting/test_renderer.py	/^def test_show_bounds_axes_ranges():$/;"	f
test_show_bounds_invalid_axes_ranges	tests/plotting/test_renderer.py	/^def test_show_bounds_invalid_axes_ranges():$/;"	f
test_show_bounds_n_labels	tests/plotting/test_plotting.py	/^def test_show_bounds_n_labels():$/;"	f
test_show_bounds_no_labels	tests/plotting/test_plotting.py	/^def test_show_bounds_no_labels():$/;"	f
test_show_bounds_with_scaling	tests/plotting/test_renderer.py	/^def test_show_bounds_with_scaling(sphere):$/;"	f
test_show_return_values	tests/plotting/jupyter/test_static.py	/^def test_show_return_values(sphere: pv.PolyData):$/;"	f
test_shrink	tests/core/test_dataset_filters.py	/^def test_shrink():$/;"	f
test_silhouette_config	tests/plotting/test_theme.py	/^def test_silhouette_config(default_theme, parm):$/;"	f
test_single_cell_picking	tests/plotting/test_picking.py	/^def test_single_cell_picking():$/;"	f
test_skybox	tests/plotting/test_plotting_utilities.py	/^def test_skybox(tmpdir):$/;"	f
test_skybox_example	tests/plotting/test_texture.py	/^def test_skybox_example():$/;"	f
test_slc_reader	tests/core/test_reader.py	/^def test_slc_reader():$/;"	f
test_slice_along_axis	tests/core/test_dataset_filters.py	/^def test_slice_along_axis(datasets):$/;"	f
test_slice_along_axis_composite	tests/core/test_dataset_filters.py	/^def test_slice_along_axis_composite(composite):$/;"	f
test_slice_along_line	tests/core/test_dataset_filters.py	/^def test_slice_along_line():$/;"	f
test_slice_along_line_composite	tests/core/test_dataset_filters.py	/^def test_slice_along_line_composite(composite):$/;"	f
test_slice_defaults	tests/core/test_composite.py	/^def test_slice_defaults(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_slice_filter	tests/core/test_dataset_filters.py	/^def test_slice_filter(datasets):$/;"	f
test_slice_filter_composite	tests/core/test_dataset_filters.py	/^def test_slice_filter_composite(composite):$/;"	f
test_slice_negatives	tests/core/test_composite.py	/^def test_slice_negatives(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_slice_orthogonal_filter	tests/core/test_dataset_filters.py	/^def test_slice_orthogonal_filter(datasets):$/;"	f
test_slice_orthogonal_filter_composite	tests/core/test_dataset_filters.py	/^def test_slice_orthogonal_filter_composite(composite):$/;"	f
test_slice_structured	tests/core/test_grid.py	/^def test_slice_structured(struct_grid):$/;"	f
test_slices_are_associated	tests/core/test_pyvista_ndarray.py	/^def test_slices_are_associated():$/;"	f
test_slices_are_associated_single_index	tests/core/test_pyvista_ndarray.py	/^def test_slices_are_associated_single_index():$/;"	f
test_slicing_multiple_in_setitem	tests/core/test_composite.py	/^def test_slicing_multiple_in_setitem(sphere):$/;"	f
test_slider_style_config	tests/plotting/test_theme.py	/^def test_slider_style_config(default_theme, parm, style):$/;"	f
test_slider_style_config_eq	tests/plotting/test_theme.py	/^def test_slider_style_config_eq(default_theme):$/;"	f
test_slider_style_eq	tests/plotting/test_theme.py	/^def test_slider_style_eq(default_theme):$/;"	f
test_smooth	tests/core/test_dataset_filters.py	/^def test_smooth(uniform):$/;"	f
test_smooth_inplace	tests/core/test_polydata.py	/^def test_smooth_inplace(sphere):$/;"	f
test_smooth_shading_shallow_copy	tests/plotting/test_plotter.py	/^def test_smooth_shading_shallow_copy(sphere):$/;"	f
test_smooth_taubin	tests/core/test_dataset_filters.py	/^def test_smooth_taubin(uniform):$/;"	f
test_sphere	tests/core/test_geometric_objects.py	/^def test_sphere():$/;"	f
test_sphere_direction_points	tests/core/test_geometric_objects.py	/^def test_sphere_direction_points(expected):$/;"	f
test_sphere_phi	tests/core/test_geometric_objects.py	/^def test_sphere_phi():$/;"	f
test_sphere_theta	tests/core/test_geometric_objects.py	/^def test_sphere_theta():$/;"	f
test_sphere_with_texture_map	tests/examples/test_examples.py	/^def test_sphere_with_texture_map():$/;"	f
test_spline	tests/core/test_parametric_geometry.py	/^def test_spline():$/;"	f
test_split_bodies	tests/core/test_dataset_filters.py	/^def test_split_bodies():$/;"	f
test_splitting	tests/plotting/test_plotting.py	/^def test_splitting():$/;"	f
test_splitting_active_cells	tests/plotting/test_plotting.py	/^def test_splitting_active_cells(cube):$/;"	f
test_squeeze	tests/core/test_pyvista_ndarray.py	/^def test_squeeze(pyvista_ndarray_1d):$/;"	f
test_ssaa_pass	tests/plotting/test_plotting.py	/^def test_ssaa_pass():$/;"	f
test_ssaa_pass	tests/plotting/test_render_pass.py	/^def test_ssaa_pass():$/;"	f
test_ssao_pass	tests/plotting/test_plotting.py	/^def test_ssao_pass():$/;"	f
test_ssao_pass	tests/plotting/test_render_pass.py	/^def test_ssao_pass():$/;"	f
test_ssao_pass_from_helper	tests/plotting/test_plotting.py	/^def test_ssao_pass_from_helper():$/;"	f
test_ssao_raise_no_depth_of_field	tests/plotting/test_render_pass.py	/^def test_ssao_raise_no_depth_of_field():$/;"	f
test_stackplot	tests/plotting/test_charts.py	/^def test_stackplot(chart_2d, stack_plot):$/;"	f
test_static_from_show	tests/plotting/jupyter/test_static.py	/^def test_static_from_show(sphere, return_viewer):$/;"	f
test_stlreader	tests/core/test_reader.py	/^def test_stlreader():$/;"	f
test_str	tests/core/test_cells.py	/^def test_str(cell, type_):$/;"	f
test_str	tests/core/test_dataset.py	/^def test_str(grid):$/;"	f
test_streamlines_cell_point	tests/core/test_dataset_filters.py	/^def test_streamlines_cell_point(uniform_vec, interpolator_type):$/;"	f
test_streamlines_dir	tests/core/test_dataset_filters.py	/^def test_streamlines_dir(uniform_vec, integration_direction):$/;"	f
test_streamlines_errors	tests/core/test_dataset_filters.py	/^def test_streamlines_errors(uniform_vec):$/;"	f
test_streamlines_evenly_spaced_2D	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D():$/;"	f
test_streamlines_evenly_spaced_2D_errors	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_errors():$/;"	f
test_streamlines_evenly_spaced_2D_integrator_type	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_integrator_type():$/;"	f
test_streamlines_evenly_spaced_2D_interpolator_type	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_interpolator_type():$/;"	f
test_streamlines_evenly_spaced_2D_sep_dist_ratio	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_sep_dist_ratio():$/;"	f
test_streamlines_evenly_spaced_2D_start_position	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_start_position():$/;"	f
test_streamlines_evenly_spaced_2D_vectors	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_vectors():$/;"	f
test_streamlines_from_source	tests/core/test_dataset_filters.py	/^def test_streamlines_from_source(uniform_vec):$/;"	f
test_streamlines_from_source_structured_grids	tests/core/test_dataset_filters.py	/^def test_streamlines_from_source_structured_grids():$/;"	f
test_streamlines_nonxy_plane	tests/core/test_dataset_filters.py	/^def test_streamlines_nonxy_plane():$/;"	f
test_streamlines_return_source	tests/core/test_dataset_filters.py	/^def test_streamlines_return_source(uniform_vec):$/;"	f
test_streamlines_start_position	tests/core/test_dataset_filters.py	/^def test_streamlines_start_position(uniform_vec):$/;"	f
test_streamlines_type	tests/core/test_dataset_filters.py	/^def test_streamlines_type(uniform_vec, integrator_type):$/;"	f
test_string_arrays	tests/core/test_dataset.py	/^def test_string_arrays():$/;"	f
test_strips	tests/core/test_polydata.py	/^def test_strips():$/;"	f
test_structured_add_non_grid	tests/core/test_dataset_filters.py	/^def test_structured_add_non_grid():$/;"	f
test_subdivide_adaptive	tests/core/test_dataset_filters.py	/^def test_subdivide_adaptive(sphere, inplace):$/;"	f
test_subdivide_tetra	tests/core/test_dataset_filters.py	/^def test_subdivide_tetra(tetbeam):$/;"	f
test_subdivision	tests/core/test_polydata.py	/^def test_subdivision(sphere, subfilter):$/;"	f
test_subplot_groups	tests/plotting/test_plotting.py	/^def test_subplot_groups():$/;"	f
test_subplot_groups_fail	tests/plotting/test_plotting.py	/^def test_subplot_groups_fail():$/;"	f
test_subtract	tests/core/test_polydata.py	/^def test_subtract(sphere, sphere_shifted):$/;"	f
test_superquadric	tests/core/test_geometric_objects.py	/^def test_superquadric():$/;"	f
test_surface_indices	tests/core/test_grid.py	/^def test_surface_indices(hexbeam):$/;"	f
test_surface_point_picking	tests/plotting/test_picking.py	/^def test_surface_point_picking(sphere, left_clicking):$/;"	f
test_switch_picking_type	tests/plotting/test_picking.py	/^def test_switch_picking_type():$/;"	f
test_switch_state	tests/plotting/test_lights.py	/^def test_switch_state():$/;"	f
test_symmetric	tests/plotting/test_axes.py	/^def test_symmetric(axes):$/;"	f
test_table_cmap_list	tests/plotting/test_lookup_table.py	/^def test_table_cmap_list(lut):$/;"	f
test_table_init	tests/core/test_objects.py	/^def test_table_init(tmpdir):$/;"	f
test_table_iter	tests/core/test_objects.py	/^def test_table_iter():$/;"	f
test_table_pandas	tests/core/test_objects.py	/^def test_table_pandas():$/;"	f
test_table_repr	tests/core/test_objects.py	/^def test_table_repr():$/;"	f
test_table_row_arrays	tests/core/test_objects.py	/^def test_table_row_arrays():$/;"	f
test_table_row_np_bool	tests/core/test_objects.py	/^def test_table_row_np_bool():$/;"	f
test_table_row_uint8	tests/core/test_objects.py	/^def test_table_row_uint8():$/;"	f
test_table_values_update	tests/plotting/test_lookup_table.py	/^def test_table_values_update(lut, skip_check_gc):$/;"	f
test_tecplotreader	tests/core/test_reader.py	/^def test_tecplotreader():$/;"	f
test_tessellate	tests/core/test_dataset_filters.py	/^def test_tessellate():$/;"	f
test_tetrahedron	tests/core/test_geometric_objects.py	/^def test_tetrahedron():$/;"	f
test_tetrahedron	tests/examples/test_cell_examples.py	/^def test_tetrahedron():$/;"	f
test_tetrahedron_regular_faces	tests/core/test_polydata.py	/^def test_tetrahedron_regular_faces():$/;"	f
test_text_3d	tests/core/test_geometric_objects.py	/^def test_text_3d():$/;"	f
test_text_input	tests/plotting/test_text.py	/^def test_text_input(text):$/;"	f
test_text_position	tests/plotting/test_text.py	/^def test_text_position(text):$/;"	f
test_text_prop	tests/plotting/test_text.py	/^def test_text_prop(text):$/;"	f
test_texture	tests/plotting/test_texture.py	/^def test_texture():$/;"	f
test_texture_coordinates	tests/plotting/test_texture.py	/^def test_texture_coordinates():$/;"	f
test_texture_empty_init	tests/plotting/test_texture.py	/^def test_texture_empty_init():$/;"	f
test_texture_from_images	tests/plotting/test_texture.py	/^def test_texture_from_images(image):$/;"	f
test_texture_grayscale_init	tests/plotting/test_texture.py	/^def test_texture_grayscale_init():$/;"	f
test_texture_map_to_plane	tests/core/test_dataset_filters.py	/^def test_texture_map_to_plane():$/;"	f
test_texture_map_to_sphere	tests/core/test_dataset_filters.py	/^def test_texture_map_to_sphere():$/;"	f
test_texture_repr	tests/plotting/test_texture.py	/^def test_texture_repr(texture):$/;"	f
test_texture_rotate_ccw	tests/plotting/test_texture.py	/^def test_texture_rotate_ccw(texture):$/;"	f
test_texture_rotate_cw	tests/plotting/test_texture.py	/^def test_texture_rotate_cw(texture):$/;"	f
test_theme_colorbar_orientation	tests/plotting/test_theme.py	/^def test_theme_colorbar_orientation(default_theme):$/;"	f
test_theme_eq	tests/plotting/test_theme.py	/^def test_theme_eq():$/;"	f
test_theme_parm	tests/plotting/test_theme.py	/^def test_theme_parm(default_theme, parm):$/;"	f
test_theme_slots	tests/plotting/test_theme.py	/^def test_theme_slots(default_theme):$/;"	f
test_theme_wrong_type	tests/plotting/test_theme.py	/^def test_theme_wrong_type(default_theme):$/;"	f
test_themes	tests/plotting/test_theme.py	/^def test_themes(theme):$/;"	f
test_thickness	tests/plotting/test_camera.py	/^def test_thickness(camera):$/;"	f
test_threshold	tests/core/test_dataset_filters.py	/^def test_threshold(datasets):$/;"	f
test_threshold	tests/core/test_pointset.py	/^def test_threshold(pointset):$/;"	f
test_threshold_all_scalars	tests/core/test_dataset_filters.py	/^def test_threshold_all_scalars():$/;"	f
test_threshold_multicomponent	tests/core/test_dataset_filters.py	/^def test_threshold_multicomponent():$/;"	f
test_threshold_paraview_consistency	tests/core/test_dataset_filters.py	/^def test_threshold_paraview_consistency():$/;"	f
test_threshold_percent	tests/core/test_dataset_filters.py	/^def test_threshold_percent(datasets):$/;"	f
test_threshold_percent	tests/core/test_pointset.py	/^def test_threshold_percent(pointset):$/;"	f
test_tick_location	tests/plotting/test_cube_axes_actor.py	/^def test_tick_location(cube_axes_actor):$/;"	f
test_tiff_reader	tests/core/test_reader.py	/^def test_tiff_reader():$/;"	f
test_tight_direction	tests/plotting/test_plotting.py	/^def test_tight_direction(view, negative, colorful_tetrahedron):$/;"	f
test_tight_multiple_objects	tests/plotting/test_plotting.py	/^def test_tight_multiple_objects():$/;"	f
test_tight_square	tests/plotting/test_plotting.py	/^def test_tight_square(noise_2d):$/;"	f
test_tight_square_padding	tests/plotting/test_plotting.py	/^def test_tight_square_padding():$/;"	f
test_tight_tall	tests/plotting/test_plotting.py	/^def test_tight_tall():$/;"	f
test_tight_wide	tests/plotting/test_plotting.py	/^def test_tight_wide():$/;"	f
test_timer	tests/plotting/test_render_window_interactor.py	/^def test_timer():$/;"	f
test_tinypages	tests/test_tinypages.py	/^def test_tinypages(tmpdir):$/;"	f
test_titles	tests/plotting/test_cube_axes_actor.py	/^def test_titles(cube_axes_actor):$/;"	f
test_to_polydata	tests/core/test_composite.py	/^def test_to_polydata(multiblock_all):$/;"	f
test_to_tetrahedral	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral(tiny_rectilinear, tetra_per_cell):$/;"	f
test_to_tetrahedral_edge_case	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_edge_case():$/;"	f
test_to_tetrahedral_mixed	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_mixed(tiny_rectilinear):$/;"	f
test_to_tetrahedral_pass_cell_data	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_pass_cell_data(tiny_rectilinear):$/;"	f
test_to_tetrahedral_pass_cell_ids	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_pass_cell_ids(tiny_rectilinear):$/;"	f
test_to_tetrahedral_raise	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_raise(tiny_rectilinear):$/;"	f
test_to_tf	tests/plotting/test_lookup_table.py	/^def test_to_tf(lut):$/;"	f
test_tobytes	tests/core/test_pyvista_ndarray.py	/^def test_tobytes(pyvista_ndarray_1d):$/;"	f
test_too_many_scalar_bars	tests/plotting/test_scalar_bars.py	/^def test_too_many_scalar_bars(sphere):$/;"	f
test_track_click_position	tests/plotting/test_render_window_interactor.py	/^def test_track_click_position():$/;"	f
test_track_click_position_multi_render	tests/plotting/test_render_window_interactor.py	/^def test_track_click_position_multi_render():$/;"	f
test_track_mouse_position	tests/plotting/test_render_window_interactor.py	/^def test_track_mouse_position():$/;"	f
test_trame	tests/plotting/jupyter/test_trame.py	/^def test_trame(client_type):$/;"	f
test_trame_closed_plotter	tests/plotting/jupyter/test_trame.py	/^def test_trame_closed_plotter():$/;"	f
test_trame_custom_menu_items	tests/plotting/jupyter/test_trame.py	/^def test_trame_custom_menu_items(client_type):$/;"	f
test_trame_export_html	tests/plotting/jupyter/test_trame.py	/^def test_trame_export_html(tmpdir):$/;"	f
test_trame_int64	tests/plotting/jupyter/test_trame.py	/^def test_trame_int64():$/;"	f
test_trame_jupyter_custom_handler	tests/plotting/jupyter/test_trame.py	/^def test_trame_jupyter_custom_handler():$/;"	f
test_trame_jupyter_custom_size	tests/plotting/jupyter/test_trame.py	/^def test_trame_jupyter_custom_size():$/;"	f
test_trame_jupyter_modes	tests/plotting/jupyter/test_trame.py	/^def test_trame_jupyter_modes():$/;"	f
test_trame_plotter_ui	tests/plotting/jupyter/test_trame.py	/^def test_trame_plotter_ui(client_type):$/;"	f
test_trame_server_launch	tests/plotting/jupyter/test_trame.py	/^def test_trame_server_launch():$/;"	f
test_trame_views	tests/plotting/jupyter/test_trame.py	/^def test_trame_views():$/;"	f
test_transform_inplace_bad_types	tests/core/test_dataset_filters.py	/^def test_transform_inplace_bad_types(dataset):$/;"	f
test_transform_inplace_bad_types_2	tests/core/test_dataset_filters.py	/^def test_transform_inplace_bad_types_2(dataset):$/;"	f
test_transform_int_vectors_warning	tests/core/test_dataset_filters.py	/^def test_transform_int_vectors_warning(datasets, num_cell_arrays, num_point_data):$/;"	f
test_transform_integers	tests/core/test_dataset.py	/^def test_transform_integers():$/;"	f
test_transform_integers_vtkbug_present	tests/core/test_dataset.py	/^def test_transform_integers_vtkbug_present():$/;"	f
test_transform_mesh	tests/core/test_dataset_filters.py	/^def test_transform_mesh(datasets, num_cell_arrays, num_point_data):$/;"	f
test_transform_mesh_and_vectors	tests/core/test_dataset_filters.py	/^def test_transform_mesh_and_vectors(datasets, num_cell_arrays, num_point_data):$/;"	f
test_transform_should_fail_given_wrong_numpy_shape	tests/core/test_dataset.py	/^def test_transform_should_fail_given_wrong_numpy_shape(array, grid):$/;"	f
test_transform_vectors_sph_to_cart	tests/core/test_utilities.py	/^def test_transform_vectors_sph_to_cart():$/;"	f
test_transforms	tests/plotting/test_lights.py	/^def test_transforms():$/;"	f
test_translate	tests/core/test_pointset.py	/^def test_translate():$/;"	f
test_translate_direction_collinear	tests/core/test_geometric_objects.py	/^def test_translate_direction_collinear(is_negative, delta, bunny):$/;"	f
test_translate_should_fail_bad_points_or_transform	tests/core/test_dataset.py	/^def test_translate_should_fail_bad_points_or_transform(grid):$/;"	f
test_translate_should_fail_given_none	tests/core/test_dataset.py	/^def test_translate_should_fail_given_none(grid):$/;"	f
test_translate_should_match_vtk_transformation	tests/core/test_dataset.py	/^def test_translate_should_match_vtk_transformation(rotate_amounts, translate_amounts, grid):$/;"	f
test_translate_should_translate_grid	tests/core/test_dataset.py	/^def test_translate_should_translate_grid(grid, axis_amounts):$/;"	f
test_triangle	tests/core/test_geometric_objects.py	/^def test_triangle():$/;"	f
test_triangle	tests/examples/test_cell_examples.py	/^def test_triangle():$/;"	f
test_triangle_strip	tests/examples/test_cell_examples.py	/^def test_triangle_strip():$/;"	f
test_triangulate	tests/core/test_dataset_filters.py	/^def test_triangulate():$/;"	f
test_triangulate_composite	tests/core/test_dataset_filters.py	/^def test_triangulate_composite(composite):$/;"	f
test_triangulate_filter	tests/core/test_polydata.py	/^def test_triangulate_filter(plane):$/;"	f
test_triangulate_inplace	tests/core/test_grid.py	/^def test_triangulate_inplace(hexbeam):$/;"	f
test_try_imageio_imread	tests/core/test_reader.py	/^def test_try_imageio_imread():$/;"	f
test_tube	tests/core/test_geometric_objects.py	/^def test_tube():$/;"	f
test_tube	tests/core/test_polydata.py	/^def test_tube(spline):$/;"	f
test_type_invalid	tests/plotting/test_lights.py	/^def test_type_invalid():$/;"	f
test_type_properties	tests/plotting/test_lights.py	/^def test_type_properties(int_code, enum_code):$/;"	f
test_type_setters	tests/plotting/test_lights.py	/^def test_type_setters():$/;"	f
test_uniform_eq	tests/core/test_dataobject.py	/^def test_uniform_eq():$/;"	f
test_uniform_setters	tests/core/test_grid.py	/^def test_uniform_setters():$/;"	f
test_unstructured_grid_eq	tests/core/test_dataobject.py	/^def test_unstructured_grid_eq(hexbeam):$/;"	f
test_up	tests/plotting/test_camera.py	/^def test_up(camera):$/;"	f
test_update_scalar_bar_range	tests/plotting/test_plotting.py	/^def test_update_scalar_bar_range(sphere):$/;"	f
test_use_2d_mode	tests/plotting/test_cube_axes_actor.py	/^def test_use_2d_mode(cube_axes_actor):$/;"	f
test_use_circular_splat	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_use_circular_splat(mapper):$/;"	f
test_user_annotations_scalar_bar_mesh	tests/plotting/test_plotting.py	/^def test_user_annotations_scalar_bar_mesh(uniform):$/;"	f
test_user_annotations_scalar_bar_volume	tests/plotting/test_plotting.py	/^def test_user_annotations_scalar_bar_volume(uniform, verify_image_cache):$/;"	f
test_user_matrix_mesh	tests/plotting/test_plotting.py	/^def test_user_matrix_mesh(sphere):$/;"	f
test_user_matrix_volume	tests/plotting/test_plotting.py	/^def test_user_matrix_volume(uniform):$/;"	f
test_user_theme	tests/plotting/test_theme.py	/^def test_user_theme():$/;"	f
test_utilities_modules	tests/namespace/test_utilities_namespace.py	/^def test_utilities_modules(name):$/;"	f
test_utilities_namespace	tests/namespace/test_utilities_namespace.py	/^def test_utilities_namespace(name):$/;"	f
test_valid_array_len_cells	tests/core/test_datasetattributes.py	/^def test_valid_array_len_cells(hexbeam):$/;"	f
test_valid_array_len_field	tests/core/test_datasetattributes.py	/^def test_valid_array_len_field(hexbeam):$/;"	f
test_valid_array_len_points	tests/core/test_datasetattributes.py	/^def test_valid_array_len_points(hexbeam):$/;"	f
test_value_range	tests/plotting/test_lookup_table.py	/^def test_value_range(lut, lut_w_cmap):$/;"	f
test_value_should_exist	tests/core/test_datasetattributes.py	/^def test_value_should_exist(insert_arange_narray):$/;"	f
test_values	tests/plotting/test_lookup_table.py	/^def test_values(lut):$/;"	f
test_values_should_be_pyvista_ndarrays	tests/core/test_datasetattributes.py	/^def test_values_should_be_pyvista_ndarrays(insert_arange_narray):$/;"	f
test_vector_array	tests/plotting/test_plotting.py	/^def test_vector_array(multicomp_poly):$/;"	f
test_vector_array_fail_with_incorrect_component	tests/plotting/test_plotting.py	/^def test_vector_array_fail_with_incorrect_component(multicomp_poly):$/;"	f
test_vector_array_with_cells	tests/plotting/test_plotting.py	/^def test_vector_array_with_cells(multicomp_poly):$/;"	f
test_vector_array_with_points	tests/plotting/test_plotting.py	/^def test_vector_array_with_points(multicomp_poly):$/;"	f
test_vector_plotting_doesnt_modify_data	tests/plotting/test_plotting.py	/^def test_vector_plotting_doesnt_modify_data(multicomp_poly):$/;"	f
test_version	tests/core/test_utilities.py	/^def test_version():$/;"	f
test_vertex	tests/examples/test_cell_examples.py	/^def test_vertex():$/;"	f
test_vertice_cells_on_read	tests/core/test_polydata.py	/^def test_vertice_cells_on_read(tmpdir):$/;"	f
test_view_angle	tests/plotting/test_camera.py	/^def test_view_angle(camera):$/;"	f
test_view_frustum	tests/plotting/test_camera.py	/^def test_view_frustum(camera):$/;"	f
test_view_vectors	tests/plotting/test_plotting_utilities.py	/^def test_view_vectors():$/;"	f
test_view_xyz	tests/plotting/test_plotting.py	/^def test_view_xyz(direction, negative, colorful_tetrahedron):$/;"	f
test_visible	tests/plotting/mappers/test_composite_mapper.py	/^def test_visible(block_attr):$/;"	f
test_vol_actor_prop	tests/plotting/test_actor.py	/^def test_vol_actor_prop(vol_actor):$/;"	f
test_volume	tests/core/test_grid.py	/^def test_volume(hexbeam):$/;"	f
test_volume	tests/core/test_polydata.py	/^def test_volume(sphere_dense):$/;"	f
test_volume_area	tests/core/test_dataset.py	/^def test_volume_area():$/;"	f
test_volume_independent_components	tests/plotting/test_volume_property.py	/^def test_volume_independent_components(vol_prop):$/;"	f
test_volume_lookup_table	tests/plotting/test_volume_property.py	/^def test_volume_lookup_table(vol_prop, skip_check_gc):$/;"	f
test_volume_mapper	tests/plotting/test_theme.py	/^def test_volume_mapper(default_theme):$/;"	f
test_volume_mapper_blend_mode	tests/plotting/mappers/test_volume_mapper.py	/^def test_volume_mapper_blend_mode(volume_mapper, skip_check_gc):$/;"	f
test_volume_mapper_dataset	tests/plotting/mappers/test_volume_mapper.py	/^def test_volume_mapper_dataset(volume_mapper, skip_check_gc):$/;"	f
test_volume_property_ambient	tests/plotting/test_volume_property.py	/^def test_volume_property_ambient(vol_prop):$/;"	f
test_volume_property_copy	tests/plotting/test_volume_property.py	/^def test_volume_property_copy(vol_prop):$/;"	f
test_volume_property_diffuse	tests/plotting/test_volume_property.py	/^def test_volume_property_diffuse(vol_prop):$/;"	f
test_volume_property_repr	tests/plotting/test_volume_property.py	/^def test_volume_property_repr(vol_prop):$/;"	f
test_volume_property_shade	tests/plotting/test_volume_property.py	/^def test_volume_property_shade(vol_prop):$/;"	f
test_volume_property_specular	tests/plotting/test_volume_property.py	/^def test_volume_property_specular(vol_prop):$/;"	f
test_volume_property_specular_power	tests/plotting/test_volume_property.py	/^def test_volume_property_specular_power(vol_prop):$/;"	f
test_volume_rendering_from_helper	tests/plotting/test_plotting.py	/^def test_volume_rendering_from_helper(uniform, verify_image_cache):$/;"	f
test_volume_rendering_from_plotter	tests/plotting/test_plotting.py	/^def test_volume_rendering_from_plotter(uniform):$/;"	f
test_volume_rendering_rectilinear	tests/plotting/test_plotting.py	/^def test_volume_rendering_rectilinear(uniform):$/;"	f
test_voxel	tests/examples/test_cell_examples.py	/^def test_voxel():$/;"	f
test_voxelize	tests/core/test_utilities.py	/^def test_voxelize(uniform):$/;"	f
test_voxelize_invalid_density	tests/core/test_utilities.py	/^def test_voxelize_invalid_density(rectilinear):$/;"	f
test_voxelize_non_uniform_density	tests/core/test_utilities.py	/^def test_voxelize_non_uniform_density(uniform):$/;"	f
test_voxelize_throws_point_cloud	tests/core/test_utilities.py	/^def test_voxelize_throws_point_cloud(hexbeam):$/;"	f
test_vtk_error_catcher	tests/core/test_utilities.py	/^def test_vtk_error_catcher():$/;"	f
test_vtk_not_loaded	tests/test_init.py	/^def test_vtk_not_loaded():$/;"	f
test_vtk_points	tests/plotting/test_collection.py	/^def test_vtk_points():$/;"	f
test_vtk_points_deep_shallow	tests/core/test_helpers.py	/^def test_vtk_points_deep_shallow():$/;"	f
test_vtk_points_force_float	tests/core/test_helpers.py	/^def test_vtk_points_force_float(force_float, expected_data_type):$/;"	f
test_vtk_points_slice	tests/plotting/test_collection.py	/^def test_vtk_points_slice():$/;"	f
test_vtkmatrix_to_from_array	tests/core/test_utilities.py	/^def test_vtkmatrix_to_from_array():$/;"	f
test_vtkreader	tests/core/test_reader.py	/^def test_vtkreader():$/;"	f
test_warp_by_scalar	tests/core/test_dataset_filters.py	/^def test_warp_by_scalar():$/;"	f
test_warp_by_vector	tests/core/test_dataset_filters.py	/^def test_warp_by_vector():$/;"	f
test_wavelet	tests/core/test_geometric_objects.py	/^def test_wavelet():$/;"	f
test_wedge	tests/examples/test_cell_examples.py	/^def test_wedge():$/;"	f
test_where_is	tests/plotting/test_plotting.py	/^def test_where_is():$/;"	f
test_widget_box	tests/plotting/test_widgets.py	/^def test_widget_box(uniform):$/;"	f
test_widget_checkbox_button	tests/plotting/test_widgets.py	/^def test_widget_checkbox_button(uniform):$/;"	f
test_widget_closed	tests/plotting/test_widgets.py	/^def test_widget_closed(uniform):$/;"	f
test_widget_line	tests/plotting/test_widgets.py	/^def test_widget_line(uniform):$/;"	f
test_widget_plane	tests/plotting/test_widgets.py	/^def test_widget_plane(uniform):$/;"	f
test_widget_slider	tests/plotting/test_widgets.py	/^def test_widget_slider(uniform):$/;"	f
test_widget_sphere	tests/plotting/test_widgets.py	/^def test_widget_sphere(uniform):$/;"	f
test_widget_spline	tests/plotting/test_widgets.py	/^def test_widget_spline(uniform):$/;"	f
test_widget_text_slider	tests/plotting/test_widgets.py	/^def test_widget_text_slider(uniform):$/;"	f
test_window_size	tests/plotting/test_theme.py	/^def test_window_size(default_theme):$/;"	f
test_wireframe_color	tests/plotting/test_plotting.py	/^def test_wireframe_color(sphere):$/;"	f
test_wireframe_composite	tests/core/test_dataset_filters.py	/^def test_wireframe_composite(composite):$/;"	f
test_wrap	tests/plotting/test_texture.py	/^def test_wrap(texture):$/;"	f
test_wrap_no_copy	tests/core/test_helpers.py	/^def test_wrap_no_copy():$/;"	f
test_wrap_none	tests/core/test_helpers.py	/^def test_wrap_none():$/;"	f
test_wrap_pyvista_ndarray	tests/core/test_helpers.py	/^def test_wrap_pyvista_ndarray(sphere):$/;"	f
test_wrap_pyvista_ndarray_vtk	tests/core/test_helpers.py	/^def test_wrap_pyvista_ndarray_vtk(dtypes):$/;"	f
test_wrap_trimesh	tests/core/test_helpers.py	/^def test_wrap_trimesh():$/;"	f
test_wrappers	tests/core/test_helpers.py	/^def test_wrappers():$/;"	f
test_wrapping	tests/plotting/test_charts.py	/^def test_wrapping():$/;"	f
test_write_gif	tests/plotting/test_plotting.py	/^def test_write_gif(sphere, tmpdir):$/;"	f
test_xdmf_reader	tests/core/test_reader.py	/^def test_xdmf_reader():$/;"	f
test_xmlimagedatareader	tests/core/test_reader.py	/^def test_xmlimagedatareader(tmpdir):$/;"	f
test_xmlmultiblockreader	tests/core/test_reader.py	/^def test_xmlmultiblockreader(tmpdir):$/;"	f
test_xmlpolydatareader	tests/core/test_reader.py	/^def test_xmlpolydatareader(tmpdir):$/;"	f
test_xmlrectilineargridreader	tests/core/test_reader.py	/^def test_xmlrectilineargridreader(tmpdir):$/;"	f
test_xmlstructuredgridreader	tests/core/test_reader.py	/^def test_xmlstructuredgridreader(tmpdir):$/;"	f
test_xmlunstructuredgridreader	tests/core/test_reader.py	/^def test_xmlunstructuredgridreader(tmpdir):$/;"	f
test_zoom	tests/plotting/test_camera.py	/^def test_zoom(camera):$/;"	f
testing	pyvista/plotting/themes.py	/^    testing = _TestingTheme$/;"	v	class:_NATIVE_THEMES
tetbeam	tests/conftest.py	/^def tetbeam():$/;"	f
tetgen	doc/source/make_external_gallery.py	/^    tetgen=Example($/;"	v
tex	examples/02-plot/texture.py	/^    tex = pv.numpy_to_texture(image)$/;"	v
tex	examples/02-plot/texture.py	/^tex = examples.download_masonry_texture()$/;"	v
tex	examples/02-plot/texture.py	/^tex = examples.download_puppy_texture()$/;"	v
tex	examples/02-plot/texture.py	/^tex = examples.load_globe_texture()$/;"	v
tex	examples/02-plot/texture.py	/^tex = pv.numpy_to_texture(image)$/;"	v
tex	examples/02-plot/texture.py	/^tex = pv.read_texture(image_file)$/;"	v
texinfo_documents	doc/source/conf.py	/^texinfo_documents = [$/;"	v
text	examples/00-load/create-pixel-art.py	/^text = logo.text_3d("ALIEN MONSTERS", depth=10.0)$/;"	v
text	examples/01-filter/image-fft.py	/^    text='Moon Landing Image FFT with Noise Removed',$/;"	v
text	examples/01-filter/image-fft.py	/^    text='Moon Landing Image FFT',$/;"	v
text	pyvista/demos/logo.py	/^        text = text_3d("You can move me!", depth=0.1)$/;"	v
text	tests/plotting/test_text.py	/^def text():$/;"	f
text_3d	pyvista/demos/logo.py	/^def text_3d(string, depth=0.5):$/;"	f
text_field	pyvista/trame/ui/vuetify2.py	/^def text_field(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
text_field	pyvista/trame/ui/vuetify3.py	/^def text_field(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
texture	examples/00-load/load-gltf.py	/^texture = examples.download_dikhololo_night()$/;"	v
texture	examples/02-plot/backface_props.py	/^    texture=texture,$/;"	v
texture	examples/02-plot/backface_props.py	/^texture = examples.load_globe_texture()$/;"	v
texture	examples/02-plot/background_image.py	/^texture = examples.load_globe_texture()$/;"	v
texture	examples/02-plot/multi-window.py	/^texture = examples.load_globe_texture()$/;"	v
texture	pyvista/plotting/actor.py	/^    def texture(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
texture	pyvista/plotting/actor.py	/^    def texture(self, obj):  # numpydoc ignore=GL08$/;"	m	class:Actor
texture	pyvista/plotting/charts.py	/^    def texture(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture	pyvista/plotting/charts.py	/^    def texture(self, val):  # numpydoc ignore=GL08$/;"	m	class:Brush
texture	tests/conftest.py	/^def texture():$/;"	f
texture_interpolate	pyvista/plotting/charts.py	/^    def texture_interpolate(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture_interpolate	pyvista/plotting/charts.py	/^    def texture_interpolate(self, val):  # numpydoc ignore=GL08$/;"	m	class:Brush
texture_map_to_plane	pyvista/core/filters/data_set.py	/^    def texture_map_to_plane($/;"	m	class:DataSetFilters
texture_map_to_sphere	pyvista/core/filters/data_set.py	/^    def texture_map_to_sphere($/;"	m	class:DataSetFilters
texture_repeat	pyvista/plotting/charts.py	/^    def texture_repeat(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture_repeat	pyvista/plotting/charts.py	/^    def texture_repeat(self, val):  # numpydoc ignore=GL08$/;"	m	class:Brush
tf	examples/02-plot/opacity.py	/^tf = pv.opacity_transfer_function(opacity, 256).astype(float) \/ 255.0$/;"	v
theme	examples/01-filter/image-fft.py	/^    theme=grey_theme,$/;"	v
theme	pyvista/_plot.py	/^        theme=theme,$/;"	v
theme	pyvista/plotting/plotter.py	/^    def theme(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
theme	pyvista/plotting/plotter.py	/^    def theme(self, theme):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
theta	examples/02-plot/distance-along-spline.py	/^theta = np.linspace(-1 * np.pi, 1 * np.pi, 100)$/;"	v
theta	pyvista/core/utilities/geometric_objects.py	/^    theta = np.linspace(0, 2 * np.pi, num=theta_resolution + 1)$/;"	v
thickness	pyvista/plotting/camera.py	/^    def thickness(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
thickness	pyvista/plotting/camera.py	/^    def thickness(self, length):  # numpydoc ignore=GL08$/;"	m	class:Camera
threaded	pyvista/core/utilities/misc.py	/^def threaded(fn):$/;"	f
threshed	examples/01-filter/compute-volume.py	/^threshed = dataset.threshold_percent([0.15, 0.50], invert=True)$/;"	v
threshed	examples/01-filter/using-filters.py	/^threshed = dataset.threshold([100, 500])$/;"	v
threshold	examples/01-filter/resample.py	/^threshold = lambda m: m.threshold(75.0, scalars='SLCImage')$/;"	v
threshold	pyvista/core/filters/data_set.py	/^    def threshold($/;"	m	class:DataSetFilters
threshold	pyvista/core/pointset.py	/^    def threshold(self, *args, **kwargs):$/;"	m	class:PointSet
threshold_percent	pyvista/core/filters/data_set.py	/^    def threshold_percent($/;"	m	class:DataSetFilters
threshold_percent	pyvista/core/pointset.py	/^    def threshold_percent(self, *args, **kwargs):$/;"	m	class:PointSet
through	tests/plotting/test_picking.py	/^        through=False,  # Single cell visible picking$/;"	v	class:test_single_cell_picking.PickCallback
through_pick_callback	pyvista/plotting/picking.py	/^        def through_pick_callback(selection):  # numpydoc ignore=GL08$/;"	f	function:PickingMethods.enable_rectangle_through_picking
tick_count	pyvista/plotting/charts.py	/^    def tick_count(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_count	pyvista/plotting/charts.py	/^    def tick_count(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
tick_label_size	pyvista/plotting/charts.py	/^    def tick_label_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_label_size	pyvista/plotting/charts.py	/^    def tick_label_size(self, size):  # numpydoc ignore=GL08$/;"	m	class:Axis
tick_labels	pyvista/plotting/charts.py	/^    def tick_labels(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels	pyvista/plotting/charts.py	/^    def tick_labels(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
tick_labels_offset	pyvista/plotting/charts.py	/^    def tick_labels_offset(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels_offset	pyvista/plotting/charts.py	/^    def tick_labels_offset(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
tick_labels_visible	pyvista/plotting/charts.py	/^    def tick_labels_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels_visible	pyvista/plotting/charts.py	/^    def tick_labels_visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
tick_location	pyvista/plotting/cube_axes_actor.py	/^    def tick_location(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
tick_location	pyvista/plotting/cube_axes_actor.py	/^    def tick_location(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
tick_locations	pyvista/plotting/charts.py	/^    def tick_locations(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_locations	pyvista/plotting/charts.py	/^    def tick_locations(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
tick_size	pyvista/plotting/charts.py	/^    def tick_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_size	pyvista/plotting/charts.py	/^    def tick_size(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
ticks_visible	pyvista/plotting/charts.py	/^    def ticks_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
ticks_visible	pyvista/plotting/charts.py	/^    def ticks_visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
tight	pyvista/plotting/camera.py	/^    def tight(self, padding=0.0, adjust_render_window=True, view='xy', negative=False):$/;"	m	class:Camera
tight_layout	examples/02-plot/chart_basics.py	/^    tight_layout=True$/;"	v
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:EnSightReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:OpenFOAMReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:PVDReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):$/;"	m	class:TimeReader
time_slider	examples/02-plot/chart_overlays.py	/^time_slider = p.add_slider_widget($/;"	v
time_values	examples/00-load/reader.py	/^time_values = reader.time_values$/;"	v
time_values	pyvista/core/utilities/reader.py	/^    def time_values(self):  # noqa: D102  # numpydoc ignore=RT01$/;"	m	class:PVDReader
time_values	pyvista/core/utilities/reader.py	/^    def time_values(self):  # numpydoc ignore=RT01$/;"	m	class:TimeReader
times	pyvista/plotting/tools.py	/^    times = _vtk.VTK_TIMES$/;"	v	class:FONTS
tiny_rectilinear	tests/core/test_rectilinear_grid_filters.py	/^def tiny_rectilinear():$/;"	f
tip_length	pyvista/plotting/axes_actor.py	/^    def tip_length(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
tip_length	pyvista/plotting/axes_actor.py	/^    def tip_length(self, length):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
tip_type	pyvista/plotting/axes_actor.py	/^    def tip_type(self) -> TipType:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
tip_type	pyvista/plotting/axes_actor.py	/^    def tip_type(self, tip_type: Union[TipType, int]):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
title	examples/02-plot/lookup-table.py	/^    title='Alpha Range',$/;"	v
title	examples/02-plot/plot-over-line.py	/^    title="Elevation Profile",$/;"	v
title	examples/03-widgets/multi-slider-widget.py	/^    title="Phi Resolution",$/;"	v	class:MyCustomRoutine
title	examples/03-widgets/multi-slider-widget.py	/^    title="Radius",$/;"	v
title	examples/03-widgets/multi-slider-widget.py	/^    title="Theta Resolution",$/;"	v
title	pyvista/plotting/charts.py	/^    def title(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
title	pyvista/plotting/charts.py	/^    def title(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
title	pyvista/plotting/charts.py	/^    def title(self, val):  # numpydoc ignore=GL08$/;"	m	class:ChartMPL
title	pyvista/plotting/charts.py	/^    def title(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
title	pyvista/plotting/themes.py	/^    def title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
title	pyvista/plotting/themes.py	/^    def title(self, title: str):  # numpydoc ignore=GL08$/;"	m	class:Theme
title_callback	pyvista/plotting/widgets.py	/^        def title_callback(widget, event):  # numpydoc ignore=GL08$/;"	f	function:WidgetHelper.add_text_slider_widget
title_font_size	examples/02-plot/scalar-bars.py	/^    title_font_size=20,$/;"	v
title_offset	pyvista/plotting/cube_axes_actor.py	/^    def title_offset(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
title_offset	pyvista/plotting/cube_axes_actor.py	/^    def title_offset(self, offset: float):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
title_size	pyvista/plotting/themes.py	/^    def title_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
title_size	pyvista/plotting/themes.py	/^    def title_size(self, title_size: int):  # numpydoc ignore=GL08$/;"	m	class:_Font
tmesh	examples/00-load/wrap-trimesh.py	/^tmesh = trimesh.Trimesh(points, faces=faces, process=False)$/;"	v
to_array	pyvista/plotting/texture.py	/^    def to_array(self) -> np.ndarray:$/;"	m	class:Texture
to_color_tf	pyvista/plotting/lookup_table.py	/^    def to_color_tf(self) -> _vtk.vtkColorTransferFunction:$/;"	m	class:LookupTable
to_dict	pyvista/plotting/colors.py	/^    def to_dict(self):$/;"	m	class:Color
to_dict	pyvista/plotting/themes.py	/^    def to_dict(self) -> dict:$/;"	m	class:_ThemeConfig
to_grayscale	pyvista/plotting/texture.py	/^    def to_grayscale(self) -> 'Texture':$/;"	m	class:Texture
to_image	pyvista/plotting/texture.py	/^    def to_image(self):$/;"	m	class:Texture
to_img	pyvista/plotting/utilities/regression.py	/^    def to_img(img):  # numpydoc ignore=GL08$/;"	f	function:compare_images
to_list	pyvista/plotting/renderer.py	/^    def to_list(self):$/;"	m	class:CameraPosition
to_opacity_tf	pyvista/plotting/lookup_table.py	/^    def to_opacity_tf(self):$/;"	m	class:LookupTable
to_pandas	pyvista/core/objects.py	/^    def to_pandas(self):$/;"	m	class:Table
to_paraview_pvcc	pyvista/plotting/camera.py	/^    def to_paraview_pvcc(self, filename: Union[str, Path]):$/;"	m	class:Camera
to_skybox	pyvista/plotting/texture.py	/^    def to_skybox(self):$/;"	m	class:Texture
to_tetrahedra	pyvista/core/filters/rectilinear_grid.py	/^    def to_tetrahedra($/;"	m	class:RectilinearGridFilters
to_tetrahedra	pyvista/core/grid.py	/^    def to_tetrahedra(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:ImageData
to_vtk_scientific	tests/plotting/test_charts.py	/^def to_vtk_scientific(val):$/;"	f
todo_include_todos	doc/source/conf.py	/^todo_include_todos = False$/;"	v
toggle	pyvista/plotting/charts.py	/^    def toggle(self):$/;"	m	class:Axis
toggle	pyvista/plotting/charts.py	/^    def toggle(self):$/;"	m	class:_Chart
toggle	pyvista/plotting/charts.py	/^    def toggle(self):$/;"	m	class:_Plot
toggle_vis	examples/03-widgets/checkbox-widget.py	/^def toggle_vis(flag):$/;"	f
tolerance	pyvista/core/utilities/parametric_objects.py	/^            tolerance=1e-7,  # determined experimentally$/;"	v
tolerance	tests/plotting/test_picking.py	/^        tolerance=0.2,$/;"	v	class:test_point_picking_window.Tracker
top	examples/00-load/create-structured-surface.py	/^top = struct.points.copy()$/;"	v
top	examples/01-filter/compute-normals.py	/^top = mesh.extract_cells(ids)$/;"	v
topo	examples/02-plot/background_image.py	/^topo = examples.download_topo_land()$/;"	v
topo_map	examples/02-plot/topo-map.py	/^topo_map = examples.download_crater_imagery()$/;"	v
topo_map	examples/02-plot/topo-map.py	/^topo_map = topo_map.flip_y()  # flip to align to our dataset$/;"	v
topogenesis	doc/source/make_external_gallery.py	/^    topogenesis=Example($/;"	v
topological	pyvista/core/pointset.py	/^        def topological(ind):  # numpydoc ignore=GL08$/;"	f	function:ExplicitStructuredGrid.neighbors
torus	examples/00-load/create-parametric-geometric-objects.py	/^torus = pv.ParametricTorus()$/;"	v
total_flow_rate	examples/01-filter/integrate-data.py	/^total_flow_rate = integrated_data["normal_velocity"][0]$/;"	v
total_length	pyvista/plotting/axes_actor.py	/^    def total_length(self) -> tuple:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
total_length	pyvista/plotting/axes_actor.py	/^    def total_length(self, length):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
tp	examples/00-load/create-surface-draped.py	/^tp = np.arange(0, z_spacing * nsamples, z_spacing)$/;"	v
tp	examples/00-load/create-surface-draped.py	/^tp = path[:, 2][:, None] - tp$/;"	v
track_click_position	pyvista/plotting/plotter.py	/^    def track_click_position(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
track_click_position	pyvista/plotting/render_window_interactor.py	/^    def track_click_position(self, callback=None, side="right", double=False, viewport=False):$/;"	m	class:RenderWindowInteractor
track_mouse_position	pyvista/plotting/plotter.py	/^    def track_mouse_position(self):$/;"	m	class:BasePlotter
track_mouse_position	pyvista/plotting/render_window_interactor.py	/^    def track_mouse_position(self, callback):$/;"	m	class:RenderWindowInteractor
trame	pyvista/plotting/themes.py	/^    def trame(self) -> _TrameConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
trame	pyvista/plotting/themes.py	/^    def trame(self, config: _TrameConfig):  # numpydoc ignore=GL08$/;"	m	class:Theme
transform	pyvista/core/filters/data_set.py	/^    def transform($/;"	m	class:DataSetFilters
transform_matrix	pyvista/plotting/lights.py	/^    def transform_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:Light
transform_matrix	pyvista/plotting/lights.py	/^    def transform_matrix(self, matrix):  # numpydoc ignore=GL08$/;"	m	class:Light
transform_vectors_sph_to_cart	pyvista/core/utilities/features.py	/^def transform_vectors_sph_to_cart(theta, phi, r, u, v, w):  # numpydoc ignore=RT02$/;"	f
translate	pyvista/core/dataset.py	/^    def translate($/;"	m	class:DataSet
translate	pyvista/core/pointset.py	/^    def translate($/;"	m	class:_PointSet
translate	pyvista/core/utilities/geometric_objects.py	/^def translate(surf, center=(0.0, 0.0, 0.0), direction=(1.0, 0.0, 0.0)):$/;"	f
transparent_background	pyvista/plotting/themes.py	/^    def transparent_background(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
transparent_background	pyvista/plotting/themes.py	/^    def transparent_background(self, transparent_background: bool):  # numpydoc ignore=GL08$/;"	m	class:Theme
tree	examples/01-filter/distance-between-surfaces.py	/^tree = KDTree(h1.points)$/;"	v
tri	examples/99-advanced/ray-trace-moeller.py	/^tri = pv.PolyData(points, faces)$/;"	v
tri_cylinder	tests/conftest.py	/^def tri_cylinder():$/;"	f
tri_data	tests/core/test_helpers.py	/^        tri_data = pv_data.delaunay_2d()$/;"	v	class:test_wrappers.Foo
triangulate	pyvista/core/filters/composite.py	/^    triangulate = DataSetFilters.triangulate$/;"	v	class:CompositeFilters
triangulate	pyvista/core/filters/data_set.py	/^    def triangulate(self, inplace=False, progress_bar=False):$/;"	m	class:DataSetFilters
triangulate	pyvista/core/filters/poly_data.py	/^    def triangulate(self, inplace=False, progress_bar=False):$/;"	m	class:PolyDataFilters
triangulate	pyvista/core/pointset.py	/^    def triangulate(self, *args, **kwargs):$/;"	m	class:PointSet
triangulate_algorithm	pyvista/plotting/utilities/algorithms.py	/^def triangulate_algorithm(inp):$/;"	f
trimesh	examples/00-load/create-polydata-strips.py	/^trimesh = mesh.triangulate()$/;"	v
truncate_length	examples_trame/basic/file_viewer.py	/^            truncate_length=25,$/;"	v
try_callback	pyvista/core/utilities/misc.py	/^def try_callback(func, *args):$/;"	f
tstart	examples/00-load/create-pointset.py	/^    tstart = time.time()$/;"	v
tstart	examples/00-load/create-pointset.py	/^tstart = time.time()$/;"	v
tube	examples/00-load/create-spline.py	/^tube = line.tube(radius=0.1)$/;"	v
tube	examples/00-load/create-spline.py	/^tube = polyline.tube(radius=0.1)$/;"	v
tube	examples/00-load/create-spline.py	/^tube = spline.tube(radius=0.1)$/;"	v
tube	examples/00-load/create-spline.py	/^tube = spline.tube(scalars="radius", absolute=True)$/;"	v
tube	pyvista/core/filters/poly_data.py	/^    def tube($/;"	m	class:PolyDataFilters
tube_color	pyvista/plotting/themes.py	/^    def tube_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
tube_color	pyvista/plotting/themes.py	/^    def tube_color(self, tube_color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
tube_width	examples/02-plot/lookup-table.py	/^    tube_width=0.003,$/;"	v
tube_width	pyvista/plotting/themes.py	/^    def tube_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
tube_width	pyvista/plotting/themes.py	/^    def tube_width(self, tube_width: float):  # numpydoc ignore=GL08$/;"	m	class:_SliderStyleConfig
turn_blue	tests/plotting/test_picking.py	/^    def turn_blue(index, dataset):$/;"	f	function:test_block_picking
type	pyvista/core/cell.py	/^    def type(self) -> CellType:  # numpydoc ignore=RT01$/;"	m	class:Cell
types	tests/core/test_cells.py	/^types = [$/;"	v
u_vec	examples/02-plot/spherical.py	/^u_vec = np.cos(np.radians(xx))  # zonal$/;"	v
ui	pyvista/trame/jupyter.py	/^        ui=plotter._id_name,$/;"	v
ui	pyvista/trame/ui/base_viewer.py	/^    def ui(self):$/;"	m	class:BaseViewer
ui	pyvista/trame/ui/vuetify2.py	/^    def ui($/;"	m	class:Viewer
ui	pyvista/trame/ui/vuetify3.py	/^    def ui($/;"	m	class:Viewer
ui_controls	pyvista/trame/ui/vuetify2.py	/^    def ui_controls(self, mode=None, default_server_rendering=True, v_show=None):$/;"	m	class:Viewer
ui_controls	pyvista/trame/ui/vuetify3.py	/^    def ui_controls(self, mode=None, default_server_rendering=True, v_show=None):$/;"	m	class:Viewer
unfold_sphere	examples/99-advanced/sphere_eversion.py	/^def unfold_sphere(theta, phi, t, q, eta, lamda):$/;"	f
uniform	tests/conftest.py	/^def uniform():$/;"	f
uniform	tests/test_meshio.py	/^uniform = examples.load_uniform().cast_to_unstructured_grid()$/;"	v
uniform_vec	tests/core/test_dataset_filters.py	/^def uniform_vec():$/;"	f
uniformfile	pyvista/examples/examples.py	/^uniformfile = os.path.join(dir_path, 'uniform.vtk')$/;"	v
unlink_views	pyvista/plotting/plotter.py	/^    def unlink_views(self, views=None):$/;"	m	class:BasePlotter
unsteady_pattern	pyvista/core/utilities/reader.py	/^    def unsteady_pattern(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
unsteady_pattern	pyvista/core/utilities/reader.py	/^    def unsteady_pattern(self, enabled: bool):  # numpydoc ignore=GL08$/;"	m	class:CGNSReader
untrack_click_position	pyvista/plotting/plotter.py	/^    def untrack_click_position(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
untrack_click_position	pyvista/plotting/render_window_interactor.py	/^    def untrack_click_position(self, side="right"):$/;"	m	class:RenderWindowInteractor
untrack_mouse_position	pyvista/plotting/plotter.py	/^    def untrack_mouse_position(self):$/;"	m	class:BasePlotter
untrack_mouse_position	pyvista/plotting/render_window_interactor.py	/^    def untrack_mouse_position(self):$/;"	m	class:RenderWindowInteractor
up	pyvista/plotting/camera.py	/^    def up(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
up	pyvista/plotting/camera.py	/^    def up(self, vector):  # numpydoc ignore=GL08$/;"	m	class:Camera
update	examples/03-widgets/multi-slider-widget.py	/^    def update(self):$/;"	m	class:MyCustomRoutine
update	pyvista/core/datasetattributes.py	/^    def update(self, array_dict: Union[Dict[str, np.ndarray], 'DataSetAttributes']):$/;"	m	class:DataSetAttributes
update	pyvista/core/objects.py	/^    def update(self, data):$/;"	m	class:Table
update	pyvista/plotting/charts.py	/^    def update(self, data):$/;"	m	class:BoxPlot
update	pyvista/plotting/charts.py	/^    def update(self, data):$/;"	m	class:PiePlot
update	pyvista/plotting/charts.py	/^    def update(self, x, y):$/;"	m	class:BarPlot
update	pyvista/plotting/charts.py	/^    def update(self, x, y):$/;"	m	class:LinePlot2D
update	pyvista/plotting/charts.py	/^    def update(self, x, y):$/;"	m	class:ScatterPlot2D
update	pyvista/plotting/charts.py	/^    def update(self, x, y1, y2=None):$/;"	m	class:AreaPlot
update	pyvista/plotting/charts.py	/^    def update(self, x, ys):$/;"	m	class:StackPlot
update	pyvista/plotting/mapper.py	/^    def update(self):$/;"	m	class:_BaseMapper
update	pyvista/plotting/plotter.py	/^    def update(self, stime=1, force_redraw=True):$/;"	m	class:BasePlotter
update	pyvista/trame/ui/base_viewer.py	/^    def update(self, **kwargs):$/;"	m	class:BaseViewer
update_axis	pyvista/plotting/renderer.py	/^            def update_axis(ax):$/;"	f	function:Renderer.bounds._update_bounds
update_bounds	pyvista/plotting/cube_axes_actor.py	/^    def update_bounds(self, bounds):$/;"	m	class:CubeAxesActor
update_bounds_axes	pyvista/plotting/plotter.py	/^    def update_bounds_axes(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
update_bounds_axes	pyvista/plotting/renderer.py	/^    def update_bounds_axes(self):$/;"	m	class:Renderer
update_camera	pyvista/trame/ui/base_viewer.py	/^    def update_camera(self, **kwargs):$/;"	m	class:BaseViewer
update_camera	pyvista/trame/views.py	/^    def update_camera(self):$/;"	m	class:_BasePyVistaView
update_cmap	examples_trame/advanced/custom_ui.py	/^def update_cmap(cmap="viridis", **kwargs):$/;"	f
update_cmap	examples_trame/basic/PyVistaRemoteLocalView.py	/^def update_cmap(cmap="viridis", **kwargs):$/;"	f
update_cmap	examples_trame/basic/PyVistaRemoteView.py	/^def update_cmap(cmap="viridis", **kwargs):$/;"	f
update_cmap	examples_trame/basic/ui_template.py	/^def update_cmap(cmap="viridis", **kwargs):$/;"	f
update_contour	examples_trame/advanced/contour.py	/^def update_contour(contour_value, **kwargs):$/;"	f
update_contour	examples_trame/basic/algorithm.py	/^def update_contour(resolution, **kwargs):$/;"	f
update_coordinates	pyvista/plotting/plotter.py	/^    def update_coordinates(self, points, mesh=None, render=True):$/;"	m	class:BasePlotter
update_image	pyvista/trame/ui/base_viewer.py	/^    def update_image(self, **kwargs):$/;"	m	class:BaseViewer
update_image	pyvista/trame/views.py	/^    def update_image(self, *args, **kwargs):$/;"	m	class:PyVistaLocalView
update_image	pyvista/trame/views.py	/^    def update_image(self, *args, **kwargs):$/;"	m	class:PyVistaRemoteView
update_n_sides	examples/99-advanced/plotting-algorithms.py	/^def update_n_sides(value):$/;"	f
update_resolution	examples/99-advanced/customization-trame-toolbar.py	/^def update_resolution(resolution, **kwargs):$/;"	f
update_resolution	examples/99-advanced/plotting-algorithms.py	/^def update_resolution(value):$/;"	f
update_resolution	tests/plotting/jupyter/test_trame.py	/^    def update_resolution(resolution, **kwargs):$/;"	f	function:test_trame_custom_menu_items
update_scalar_bar_range	pyvista/plotting/plotter.py	/^    def update_scalar_bar_range(self, clim, name=None):$/;"	m	class:BasePlotter
update_scalars	pyvista/plotting/plotter.py	/^    def update_scalars(self, scalars, mesh=None, render=True):$/;"	m	class:BasePlotter
update_style	pyvista/plotting/render_window_interactor.py	/^    def update_style(self):$/;"	m	class:RenderWindowInteractor
update_surface	examples/03-widgets/sphere-widget.py	/^def update_surface(point, i):$/;"	f
update_time	examples/02-plot/chart_overlays.py	/^def update_time(time):$/;"	f
uranus	examples/99-advanced/planets.py	/^uranus = examples.planets.load_uranus(radius=25559.0)$/;"	v
uranus_texture	examples/99-advanced/planets.py	/^uranus_texture = examples.planets.download_uranus_surface(texture=True)$/;"	v
use_2d_mode	pyvista/plotting/cube_axes_actor.py	/^    def use_2d_mode(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
use_2d_mode	pyvista/plotting/cube_axes_actor.py	/^    def use_2d_mode(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
use_circular_splat	pyvista/plotting/mapper.py	/^    def use_circular_splat(self, opacity: float = 1.0):$/;"	m	class:PointGaussianMapper
use_default_splat	pyvista/plotting/mapper.py	/^    def use_default_splat(self):$/;"	m	class:PointGaussianMapper
use_transparency	examples/02-plot/opacity.py	/^    use_transparency=True,$/;"	v
user_matrix	pyvista/plotting/prop3d.py	/^    def user_matrix(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
user_matrix	pyvista/plotting/prop3d.py	/^    def user_matrix(self, value: Union[_vtk.vtkMatrix4x4, np.ndarray]):  # numpydoc ignore=GL08$/;"	m	class:Prop3D
uses_egl	pyvista/plotting/utilities/gl_checks.py	/^def uses_egl() -> bool:$/;"	f
using_mesa	tests/plotting/test_plotting.py	/^def using_mesa():$/;"	f
v	examples/02-plot/chart_overlays.py	/^v = np.cos(t)$/;"	v
v_chart	examples/02-plot/chart_overlays.py	/^v_chart = pv.Chart2D($/;"	v
v_grid	pyvista/demos/logo.py	/^    v_grid = pyvista.voxelize(mesh_letters['V'], density=0.08)$/;"	v
v_grid_atom	pyvista/demos/logo.py	/^    v_grid_atom = atomize(v_grid)$/;"	v
v_grid_atom_surf	pyvista/demos/logo.py	/^    v_grid_atom_surf = v_grid_atom.extract_surface()$/;"	v
v_line	examples/02-plot/chart_overlays.py	/^v_line = v_chart.line(t[:1], v[:1])$/;"	v
v_model	examples_trame/basic/file_viewer.py	/^            v_model=("file_exchange", None),$/;"	v
v_vec	examples/02-plot/spherical.py	/^v_vec = np.sin(np.radians(yy))  # meridional$/;"	v
valid_array_len	pyvista/core/datasetattributes.py	/^    def valid_array_len(self) -> Optional[int]:  # numpydoc ignore=RT01$/;"	m	class:DataSetAttributes
valley_mesh	examples/01-filter/connectivity.py	/^valley_mesh = mesh.connectivity('closest', peak_point, scalar_range=valley_range)$/;"	v
valley_range	examples/01-filter/connectivity.py	/^valley_range = [data_min, -0.2]  # Valley if curvature < -0.2$/;"	v
value	examples/02-plot/lookup-table.py	/^    value=lut.alpha_range[0],$/;"	v
value	examples/03-widgets/multi-slider-widget.py	/^    value=0.5,$/;"	v
value	examples/03-widgets/multi-slider-widget.py	/^    value=30,$/;"	v
value	examples/03-widgets/multi-slider-widget.py	/^    value=30,$/;"	v	class:MyCustomRoutine
value_range	pyvista/plotting/lookup_table.py	/^    def value_range(self) -> Optional[tuple]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
value_range	pyvista/plotting/lookup_table.py	/^    def value_range(self, value: tuple):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
values	examples/00-load/create-uniform-grid.py	/^values = np.linspace(0, 10, 1000).reshape((20, 5, 10))$/;"	v
values	examples/01-filter/flying_edges.py	/^values = barth_sextic(x, y, z)$/;"	v
values	examples/01-filter/flying_edges.py	/^values = spider_cage(x, y, z)$/;"	v
values	examples/01-filter/glyphs_table.py	/^values = np.arange(N)  # values for scalars to look up glyphs by$/;"	v
values	examples/02-plot/isovalue.py	/^values = np.linspace(5, 150, num=25)$/;"	v
values	pyvista/core/datasetattributes.py	/^    def values(self) -> List[pyvista_ndarray]:$/;"	m	class:DataSetAttributes
values	pyvista/core/objects.py	/^    def values(self):$/;"	m	class:Table
values	pyvista/plotting/lookup_table.py	/^    def values(self) -> lookup_table_ndarray:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
values	pyvista/plotting/lookup_table.py	/^    def values(self, new_values):  # numpydoc ignore=GL08$/;"	m	class:LookupTable
values	pyvista/plotting/scalar_bars.py	/^    def values(self):$/;"	m	class:ScalarBars
vec	examples/01-filter/distance-between-surfaces.py	/^    vec = h0n["Normals"][i] * h0n.length$/;"	v
vec	examples/01-filter/slicing.py	/^vec = np.array([1.0, 2.0, 1.0])$/;"	v
vector	examples/99-advanced/warp-by-vector-eigenmodes.py	/^        vector = f"eigenmode_{current_index:02}"$/;"	v
vector_3d	pyvista/core/utilities/reader.py	/^    def vector_3d(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CGNSReader
vector_3d	pyvista/core/utilities/reader.py	/^    def vector_3d(self, enabled: bool):  # numpydoc ignore=GL08$/;"	m	class:CGNSReader
vector_mode	tests/core/test_dataset_filters.py	/^    def vector_mode(self):$/;"	m	class:InterrogateVTKGlyph3D
vector_poly_data	pyvista/core/utilities/points.py	/^def vector_poly_data(orig, vec):$/;"	f
vectors	examples/00-load/create-point-cloud.py	/^vectors = compute_vectors(point_cloud)$/;"	v
vectors	examples/01-filter/glyphs.py	/^vectors = np.vstack($/;"	v
vectors	examples/01-filter/streamlines.py	/^vectors = np.empty((mesh.n_points, 3))$/;"	v
vectors	examples/02-plot/spherical.py	/^vectors = np.stack($/;"	v
vectors	examples/99-advanced/magnetic-fields.py	/^    vectors='B',$/;"	v
vectors	examples/99-advanced/openfoam-example.py	/^    vectors='U',$/;"	v
vectors	examples/99-advanced/openfoam-tubes.py	/^    vectors='U',$/;"	v
vel_dargs	examples/99-advanced/antarctica-compare.py	/^vel_dargs = dict(scalars="magnitude", clim=[1e-3, 1e4], cmap='Blues', log_scale=True)$/;"	v
vendor	pyvista/report.py	/^    def vendor(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
venus	examples/99-advanced/planets.py	/^venus = examples.planets.load_venus()$/;"	v
venus	examples/99-advanced/planets.py	/^venus = examples.planets.load_venus(radius=6052.0)$/;"	v
venus_texture	examples/99-advanced/planets.py	/^venus_texture = examples.planets.download_venus_surface(texture=True)$/;"	v
verify_image_cache_wrapper	tests/plotting/test_plotting.py	/^def verify_image_cache_wrapper(verify_image_cache):$/;"	f
version	doc/source/conf.py	/^version = pyvista.__version__$/;"	v
version	pyvista/report.py	/^    def version(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
version	tests/tinypages/conf.py	/^version = '0.1'$/;"	v
version_info	pyvista/_version.py	/^version_info = 0, 43, 'dev0'$/;"	v
vertex_color	examples/02-plot/vertices.py	/^    vertex_color='magenta',$/;"	v
vertices	examples/00-load/create-poly.py	/^vertices = np.array([[0, 0, 0], [1, 0, 0], [1, 1, 0], [0, 1, 0], [0.5, 0.5, -1]])$/;"	v
vertices	examples/00-load/wrap-trimesh.py	/^vertices = vtk.vtkCellArray()$/;"	v
vertices	examples/01-filter/extrude-rotate.py	/^vertices = np.array($/;"	v
verts	pyvista/core/pointset.py	/^    def verts(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
verts	pyvista/core/pointset.py	/^    def verts(self, verts):  # numpydoc ignore=GL08$/;"	m	class:PolyData
vessel_vio	doc/source/make_external_gallery.py	/^    vessel_vio=Example($/;"	v
view	examples_trame/basic/PyVistaLocalView.py	/^            view = PyVistaLocalView(plotter)$/;"	v
view	examples_trame/basic/file_viewer.py	/^            view = plotter_ui(pl)$/;"	v
view	examples_trame/basic/multi_views.py	/^            view = plotter_ui(pl)$/;"	v
view	examples_trame/validation/many_actors.py	/^        view = plotter_ui(plotter)$/;"	v
view_angle	pyvista/plotting/camera.py	/^    def view_angle(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
view_angle	pyvista/plotting/camera.py	/^    def view_angle(self, value):  # numpydoc ignore=GL08$/;"	m	class:Camera
view_frustum	pyvista/plotting/camera.py	/^    def view_frustum(self, aspect=1.0):$/;"	m	class:Camera
view_isometric	pyvista/plotting/plotter.py	/^    def view_isometric(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_isometric	pyvista/plotting/renderer.py	/^    def view_isometric(self, negative=False, render=True):$/;"	m	class:Renderer
view_isometric	pyvista/trame/ui/base_viewer.py	/^    def view_isometric(self):$/;"	m	class:BaseViewer
view_vector	pyvista/plotting/plotter.py	/^    def view_vector(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_vector	pyvista/plotting/renderer.py	/^    def view_vector(self, vector, viewup=None, render=True):$/;"	m	class:Renderer
view_vectors	pyvista/plotting/helpers.py	/^def view_vectors(view: str, negative: bool = False) -> Tuple[np.ndarray, np.ndarray]:$/;"	f
view_xy	pyvista/plotting/plotter.py	/^    def view_xy(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_xy	pyvista/plotting/renderer.py	/^    def view_xy(self, negative=False, render=True):$/;"	m	class:Renderer
view_xy	pyvista/trame/ui/base_viewer.py	/^    def view_xy(self):$/;"	m	class:BaseViewer
view_xz	pyvista/plotting/plotter.py	/^    def view_xz(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_xz	pyvista/plotting/renderer.py	/^    def view_xz(self, negative=False, render=True):$/;"	m	class:Renderer
view_xz	pyvista/trame/ui/base_viewer.py	/^    def view_xz(self):$/;"	m	class:BaseViewer
view_yx	pyvista/plotting/plotter.py	/^    def view_yx(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_yx	pyvista/plotting/renderer.py	/^    def view_yx(self, negative=False, render=True):$/;"	m	class:Renderer
view_yz	pyvista/plotting/plotter.py	/^    def view_yz(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_yz	pyvista/plotting/renderer.py	/^    def view_yz(self, negative=False, render=True):$/;"	m	class:Renderer
view_yz	pyvista/trame/ui/base_viewer.py	/^    def view_yz(self):$/;"	m	class:BaseViewer
view_zx	pyvista/plotting/plotter.py	/^    def view_zx(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_zx	pyvista/plotting/renderer.py	/^    def view_zx(self, negative=False, render=True):$/;"	m	class:Renderer
view_zy	pyvista/plotting/plotter.py	/^    def view_zy(self, *args, **kwarg):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_zy	pyvista/plotting/renderer.py	/^    def view_zy(self, negative=False, render=True):$/;"	m	class:Renderer
viewer	examples_trame/advanced/custom_ui.py	/^viewer = get_or_create_viewer(plotter)$/;"	v
viewer	pyvista/trame/jupyter.py	/^    def viewer(self):  # numpydoc ignore=RT01$/;"	m	class:Widget
viewer	pyvista/trame/jupyter.py	/^    viewer = initialize($/;"	v
viewport	pyvista/plotting/picking.py	/^    def viewport(self) -> Tuple[float, float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
viewport	pyvista/plotting/renderer.py	/^    def viewport(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
views	pyvista/trame/ui/base_viewer.py	/^    def views(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
viewup	examples/02-plot/backface_props.py	/^viewup = [0, 0, 1]$/;"	v
viewup	examples/02-plot/orbit.py	/^viewup = [0, 1, 0]$/;"	v
viewup	examples/02-plot/orbit.py	/^viewup = [0.5, 0.5, 1]$/;"	v
viewup	pyvista/plotting/renderer.py	/^    def viewup(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
viewup	pyvista/plotting/renderer.py	/^    def viewup(self, value):  # numpydoc ignore=GL08$/;"	m	class:CameraPosition
visibility	pyvista/plotting/actor.py	/^    def visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
visibility	pyvista/plotting/actor.py	/^    def visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:Actor
visibility	pyvista/plotting/axes_actor.py	/^    def visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
visibility	pyvista/plotting/axes_actor.py	/^    def visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
visible	pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
visible	pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
visible	pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
visible	pyvista/plotting/charts.py	/^    def visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:Axis
visible	pyvista/plotting/charts.py	/^    def visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Chart
visible	pyvista/plotting/charts.py	/^    def visible(self, val):  # numpydoc ignore=GL08$/;"	m	class:_Plot
visible	pyvista/plotting/composite_mapper.py	/^    def visible(self) -> Optional[bool]:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
visible	pyvista/plotting/composite_mapper.py	/^    def visible(self, new_visible: bool):  # numpydoc ignore=GL08$/;"	m	class:BlockAttributes
visible_bounds	pyvista/core/pointset.py	/^    def visible_bounds(self) -> BoundsLike:  # numpydoc ignore=RT01$/;"	m	class:ExplicitStructuredGrid
visible_pick_callback	pyvista/plotting/picking.py	/^        def visible_pick_callback(selection):  # numpydoc ignore=GL08$/;"	f	function:PickingMethods.enable_rectangle_visible_picking
voi	examples/02-plot/volume.py	/^voi = large_vol.extract_subset([175, 200, 105, 132, 98, 170])$/;"	v
vol	examples/00-load/create-structured-surface.py	/^vol = pv.StructuredGrid()$/;"	v
vol	examples/01-filter/compute-volume.py	/^    vol = b.volume$/;"	v
vol	examples/01-filter/surface-smoothing.py	/^vol = data.threshold_percent(30, invert=1)$/;"	v
vol	examples/02-plot/ghost-cells.py	/^vol = examples.load_channels()$/;"	v
vol	examples/02-plot/isovalue.py	/^vol = examples.download_brain()$/;"	v
vol	examples/02-plot/volume.py	/^vol = examples.download_knee_full()$/;"	v
vol	examples/03-widgets/clip-volume.py	/^vol = pl.add_volume(grid, opacity=opacity)$/;"	v
vol	examples/03-widgets/plane-widget.py	/^vol = examples.download_brain()$/;"	v
vol	examples/99-advanced/atomic-orbitals.py	/^vol = pl.add_volume(grid, cmap='magma', opacity=[1, 0, 1])$/;"	v
vol	examples/99-advanced/magnetic-fields.py	/^vol = pl.add_volume($/;"	v
vol	examples/99-advanced/openfoam-cooling.py	/^vol = pl.add_volume($/;"	v
vol	examples/99-advanced/openfoam-tubes.py	/^vol = pl.add_volume($/;"	v
vol	examples/99-advanced/warp-by-vector-eigenmodes.py	/^vol = pv.StructuredGrid()$/;"	v
vol_actor	tests/plotting/test_actor.py	/^def vol_actor():$/;"	f
vol_opac	examples/01-filter/interpolate.py	/^vol_opac = [0, 0, 0.2, 0.2, 0.5, 0.5]$/;"	v
vol_prop	tests/plotting/test_volume_property.py	/^def vol_prop():$/;"	f
volume	examples/01-filter/compute-volume.py	/^volume = dataset.volume$/;"	v
volume	examples/01-filter/integrate-data.py	/^volume = integrated_volume['Volume'][0]$/;"	v
volume	examples_trame/advanced/contour.py	/^volume = examples.download_head_2()$/;"	v
volume	pyvista/core/composite.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
volume	pyvista/core/dataset.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:DataSet
volume	pyvista/core/pointset.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointSet
volume	pyvista/core/pointset.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PolyData
volume_mapper	pyvista/plotting/themes.py	/^    def volume_mapper(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
volume_mapper	pyvista/plotting/themes.py	/^    def volume_mapper(self, mapper: str):  # numpydoc ignore=GL08$/;"	m	class:Theme
volume_mapper	tests/plotting/mappers/test_volume_mapper.py	/^def volume_mapper():$/;"	f
volumes	examples/01-filter/compute-volume.py	/^volumes = sizes.cell_data["Volume"]$/;"	v
voxelize	pyvista/core/utilities/features.py	/^def voxelize(mesh, density=None, check_surface=True):$/;"	f
voxels	examples/01-filter/voxelize.py	/^voxels = pv.voxelize(surface, density=surface.length \/ 200)$/;"	v
vtk	pyvista/plotting/themes.py	/^    vtk = Theme$/;"	v	class:_NATIVE_THEMES
vtkHardwarePicker	pyvista/plotting/_vtk.py	/^    vtkHardwarePicker = None$/;"	v
vtkPythonItem	pyvista/core/_vtk_core.py	/^    class vtkPythonItem:  # type: ignore$/;"	c
vtkRenderingContextOpenGL2	pyvista/plotting/_vtk_gl.py	/^    vtkRenderingContextOpenGL2 = None$/;"	v
vtk_array_to_tuple	tests/plotting/test_charts.py	/^def vtk_array_to_tuple(arr):$/;"	f
vtk_bit_array_to_char	pyvista/core/utilities/arrays.py	/^def vtk_bit_array_to_char(vtkarr_bint):$/;"	f
vtk_c3ub	pyvista/plotting/colors.py	/^    def vtk_c3ub(self) -> _vtk.vtkColor3ub:  # numpydoc ignore=RT01$/;"	m	class:Color
vtk_id_list_to_array	pyvista/core/utilities/arrays.py	/^def vtk_id_list_to_array(vtk_id_list):$/;"	f
vtk_points	pyvista/core/utilities/points.py	/^def vtk_points(points, deep=True, force_float=False):$/;"	f
vtk_version_info	pyvista/report.py	/^vtk_version_info = VTKVersionInfo()$/;"	v
vtk_version_ok	curvatures_adjust_edges.py	/^def vtk_version_ok(major, minor, build):$/;"	f
vtk_version_ok	examples/01-filter/curvatures_adjust_edges.py	/^def vtk_version_ok(major, minor, build):$/;"	f
vtkcell_types	pyvista/core/utilities/cell_type_helper.py	/^vtkcell_types = [$/;"	v
vtkmatrix_from_array	pyvista/core/utilities/arrays.py	/^def vtkmatrix_from_array(array):$/;"	f
vx	pyvista/core/utilities/geometric_objects.py	/^    vx = np.array([0.0, 0.0, 1.0])$/;"	v
vy	pyvista/core/utilities/geometric_objects.py	/^        vy = np.cross(direction, vx)$/;"	v
w	examples/99-advanced/sphere_eversion.py	/^w = 2  # arbitrary > 0$/;"	v
w_vec	examples/02-plot/spherical.py	/^w_vec = np.random.rand(*u_vec.shape)$/;"	v
warp	examples/01-filter/compute-normals.py	/^warp = mesh.warp_by_scalar(factor=0.5e-5)$/;"	v
warp	examples/99-advanced/pump-bracket.py	/^warp = dataset.warp_by_vector('disp_2', factor=0.1)$/;"	v
warp_by_scalar	pyvista/core/filters/data_set.py	/^    def warp_by_scalar($/;"	m	class:DataSetFilters
warp_by_vector	pyvista/core/filters/data_set.py	/^    def warp_by_vector(self, vectors=None, factor=1.0, inplace=False, progress_bar=False):$/;"	m	class:DataSetFilters
warp_factors	examples/01-filter/warp-by-vector.py	/^warp_factors = [0, 1.5, 3.5, 5.5]$/;"	v
warp_low_pass_noise	examples/01-filter/image-fft-perlin-noise.py	/^def warp_low_pass_noise(cfreq, scalar_ptp=sampled['scalars'].ptp()):$/;"	f
warpby	examples/99-advanced/warp-by-vector-eigenmodes.py	/^warpby = 'eigenmode_00'$/;"	v
warped	examples/01-filter/warp-by-vector.py	/^warped = sphere.warp_by_vector()$/;"	v
warped	examples/99-advanced/warp-by-vector-eigenmodes.py	/^warped = vol.warp_by_vector(warpby, factor=0.04)$/;"	v
warped_high_pass	examples/01-filter/image-fft-perlin-noise.py	/^warped_high_pass = high_pass.warp_by_scalar()$/;"	v
warped_low_pass	examples/01-filter/image-fft-perlin-noise.py	/^warped_low_pass = low_pass.warp_by_scalar()$/;"	v
warped_noise	examples/01-filter/image-fft-perlin-noise.py	/^warped_noise = sampled.warp_by_scalar()$/;"	v
warped_subset	examples/01-filter/image-fft-perlin-noise.py	/^warped_subset = subset.warp_by_scalar(factor=0.0001)$/;"	v
water_level	examples/01-filter/sampling_functions_2d.py	/^water_level = z.max() - water_percent * diff$/;"	v
water_percent	examples/01-filter/sampling_functions_2d.py	/^water_percent = 0.7$/;"	v
wavelet	examples/02-plot/interpolate-before-map.py	/^wavelet = pv.Wavelet().clip('x')$/;"	v
wavelet_source	pyvista/core/utilities/geometric_objects.py	/^    wavelet_source = _vtk.vtkRTAnalyticSource()$/;"	v
wheel_zoom_callback	pyvista/plotting/render_window_interactor.py	/^            def wheel_zoom_callback(obj, event):  # pragma: no cover$/;"	f	function:RenderWindowInteractor.enable_terrain_style
where_is	pyvista/plotting/plotter.py	/^    def where_is(self, name):$/;"	m	class:BasePlotter
widget	examples/99-advanced/customization-trame-toolbar.py	/^widget = pl.show(jupyter_kwargs=dict(add_menu_items=custom_tools), return_viewer=True)$/;"	v
width	examples/04-lights/shadows.py	/^width = rnge[0] * (1 + expand)$/;"	v
width	pyvista/plotting/charts.py	/^    def width(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
width	pyvista/plotting/charts.py	/^    def width(self, val):  # numpydoc ignore=GL08$/;"	m	class:Pen
width	pyvista/plotting/renderer.py	/^    def width(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
width	pyvista/plotting/themes.py	/^    def width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
width	pyvista/plotting/themes.py	/^    def width(self, width: float):  # numpydoc ignore=GL08$/;"	m	class:_ColorbarConfig
wind_level	examples/02-plot/spherical.py	/^wind_level = [RADIUS * 1.2]$/;"	v
window_size	pyvista/_plot.py	/^        window_size=window_size,$/;"	v
window_size	pyvista/demos/logo.py	/^        window_size = [960, 400]$/;"	v
window_size	pyvista/plotting/plotter.py	/^    def window_size(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
window_size	pyvista/plotting/plotter.py	/^    def window_size(self, window_size):  # numpydoc ignore=GL08$/;"	m	class:BasePlotter
window_size	pyvista/plotting/themes.py	/^    def window_size(self) -> List[int]:  # numpydoc ignore=RT01$/;"	m	class:Theme
window_size	pyvista/plotting/themes.py	/^    def window_size(self, window_size: List[int]):  # numpydoc ignore=GL08$/;"	m	class:Theme
window_size	tests/plotting/test_picking.py	/^        window_size=(100, 100),$/;"	v	class:test_element_picking.Tracker
window_size	tests/plotting/test_picking.py	/^        window_size=(100, 100),$/;"	v	class:test_point_picking_window.Tracker
window_size	tests/plotting/test_picking.py	/^        window_size=(width, height),$/;"	v	class:test_single_cell_picking.PickCallback
window_size_context	pyvista/plotting/plotter.py	/^    def window_size_context(self, window_size=None):$/;"	m	class:BasePlotter
world_focal_point	pyvista/plotting/lights.py	/^    def world_focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Light
world_position	pyvista/plotting/lights.py	/^    def world_position(self):  # numpydoc ignore=RT01$/;"	m	class:Light
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset):$/;"	f
wrap	pyvista/plotting/texture.py	/^    def wrap(self) -> 'Texture.WrapType':  # numpydoc ignore=RT01$/;"	m	class:Texture
wrap	pyvista/plotting/texture.py	/^    def wrap(self, value: Union['Texture.WrapType', int]):  # numpydoc ignore=GL08$/;"	m	class:Texture
wrap_image_array	pyvista/plotting/utilities/regression.py	/^def wrap_image_array(arr):$/;"	f
wrap_nested	pyvista/core/composite.py	/^    def wrap_nested(self):$/;"	m	class:MultiBlock
wrapper	pyvista/core/utilities/misc.py	/^    def wrapper(*args, **kwargs):  # numpydoc ignore=GL08$/;"	f	function:threaded
write	pyvista/ext/coverage.py	/^    def write(self, *ignored: Any) -> None:$/;"	m	class:CoverageBuilder
write_c_coverage	pyvista/ext/coverage.py	/^    def write_c_coverage(self) -> None:$/;"	m	class:CoverageBuilder
write_frame	pyvista/plotting/plotter.py	/^    def write_frame(self):$/;"	m	class:BasePlotter
write_header	pyvista/ext/coverage.py	/^def write_header(f: IO, text: str, char: str = '-') -> None:$/;"	f
write_py_coverage	pyvista/ext/coverage.py	/^    def write_py_coverage(self) -> None:$/;"	m	class:CoverageBuilder
x	examples/00-load/create-structured-surface.py	/^x = np.arange(-10, 10, 0.25)$/;"	v
x	examples/00-load/create-tri-surface.py	/^x = np.arange(10, dtype=float)$/;"	v
x	examples/00-load/create-tri-surface.py	/^x = np.linspace(-200, 200, num=n) + np.random.uniform(-5, 5, size=n)$/;"	v
x	examples/01-filter/streamlines.py	/^x = mesh.points[:, 0]$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(0, 11)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(1, 11)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(1, 13)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(11)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.linspace(0, 10, 1000)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = rng.standard_normal(100)$/;"	v
x	examples/02-plot/distance-along-spline.py	/^x = r * np.sin(theta)$/;"	v
x	examples/02-plot/gif.py	/^x = np.arange(-10, 10, 0.5)$/;"	v
x	examples/02-plot/movie_glyphs.py	/^x = np.arange(-10, 10, 1, dtype=float)$/;"	v
x	examples/02-plot/spherical.py	/^x = np.arange(0, 360, 5)$/;"	v
x	examples/02-plot/texture.py	/^x = np.arange(-10, 10, 0.25)$/;"	v
x	examples/03-widgets/sphere-widget.py	/^x = np.linspace(xmin, xmax, num=25)$/;"	v
x	examples/99-advanced/warp-by-vector-eigenmodes.py	/^x = np.linspace(-l1 \/ 2.0, l1 \/ 2.0, nx)$/;"	v
x	pyvista/core/grid.py	/^    def x(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:ImageData
x	pyvista/core/grid.py	/^    def x(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:RectilinearGrid
x	pyvista/core/grid.py	/^    def x(self, coords: Sequence):  # numpydoc ignore=GL08$/;"	m	class:RectilinearGrid
x	pyvista/core/pointset.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:LinePlot2D
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:StackPlot
x_axis	pyvista/plotting/charts.py	/^    def x_axis(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_axis_label	pyvista/plotting/axes_actor.py	/^    def x_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_label	pyvista/plotting/axes_actor.py	/^    def x_axis_label(self, label: str):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
x_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_minor_tick_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
x_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_range(self) -> Tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_range(self, value: Tuple[float, float]):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
x_axis_shaft_properties	pyvista/plotting/axes_actor.py	/^    def x_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def x_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def x_axis_tip_properties(self, properties: ActorProperties):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
x_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
x_color	pyvista/plotting/themes.py	/^    def x_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
x_color	pyvista/plotting/themes.py	/^    def x_color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:_AxesConfig
x_color	pyvista/plotting/tools.py	/^    x_color = Color(x_color, default_color=pyvista.global_theme.axes.x_color)$/;"	v
x_coord	examples/99-advanced/fea-hertzian-contact-pressure.py	/^x_coord = 0.1 - sampled.points[:, 0]$/;"	v
x_face_color	pyvista/plotting/tools.py	/^    x_face_color = Color(x_face_color)$/;"	v
x_label	pyvista/plotting/charts.py	/^    def x_label(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_label	pyvista/plotting/charts.py	/^    def x_label(self, val):  # numpydoc ignore=GL08$/;"	m	class:Chart2D
x_label_format	pyvista/plotting/cube_axes_actor.py	/^    def x_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_label_format	pyvista/plotting/cube_axes_actor.py	/^    def x_label_format(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
x_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_label_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
x_labels	pyvista/plotting/cube_axes_actor.py	/^    def x_labels(self) -> List[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_pts	examples/99-advanced/osmnx-example.py	/^    x_pts = row['geometry'].xy[0]$/;"	v
x_range	pyvista/plotting/charts.py	/^    def x_range(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_range	pyvista/plotting/charts.py	/^    def x_range(self, val):  # numpydoc ignore=GL08$/;"	m	class:Chart2D
x_size	examples/02-plot/bounds.py	/^x_size = central_gear.bounds[1] - central_gear.bounds[0]$/;"	v
x_title	pyvista/plotting/cube_axes_actor.py	/^    def x_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_title	pyvista/plotting/cube_axes_actor.py	/^    def x_title(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
xc	examples/02-plot/texture.py	/^xc = np.linspace(0, axial_num_puppies, curvsurf.dimensions[0])$/;"	v
xcorn	examples/00-load/create-explicit-structured-grid.py	/^xcorn = np.arange(0, (ni + 1) * si, si)$/;"	v
xcorn	examples/00-load/create-explicit-structured-grid.py	/^xcorn = np.repeat(xcorn, 2)$/;"	v
xcorn	examples/00-load/create-explicit-structured-grid.py	/^xcorn = np.tile(xcorn, 4 * nj * nk)$/;"	v
xcorn	examples/00-load/create-explicit-structured-grid.py	/^xcorn = xcorn[1:-1]$/;"	v
xis	examples/99-advanced/sphere_eversion.py	/^xis = np.linspace(0, 1, n_steps)$/;"	v
xis	examples/99-advanced/sphere_eversion.py	/^xis = np.linspace(1, 0, n_steps + 1)[1:]$/;"	v
xtitle	examples/01-filter/image-fft-perlin-noise.py	/^    xtitle='X Frequency',$/;"	v
xx	examples/00-load/terrain-mesh.py	/^xx = np.repeat(terrain.x, len(z_cells), axis=-1)$/;"	v
xx	pyvista/core/utilities/geometric_objects.py	/^    xx = np.array([X] * z_resolution).ravel()$/;"	v
xx_bounds	examples/02-plot/spherical.py	/^xx_bounds = _cell_bounds(x)$/;"	v
y	examples/00-load/create-structured-surface.py	/^y = np.arange(-10, 10, 0.25)$/;"	v
y	examples/00-load/create-tri-surface.py	/^y = np.linspace(-200, 200, num=n) + np.random.uniform(-5, 5, size=n)$/;"	v
y	examples/01-filter/streamlines.py	/^y = mesh.points[:, 1]$/;"	v
y	examples/02-plot/chart_basics.py	/^y = np.sin(x**2)$/;"	v
y	examples/02-plot/chart_basics.py	/^y = rng.integers(-5, 6, 11)$/;"	v
y	examples/02-plot/chart_basics.py	/^y = rng.standard_normal(100)$/;"	v
y	examples/02-plot/distance-along-spline.py	/^y = r * np.cos(theta)$/;"	v
y	examples/02-plot/gif.py	/^y = np.arange(-10, 10, 0.5)$/;"	v
y	examples/02-plot/movie_glyphs.py	/^y = np.arange(-10, 10, 1, dtype=float)$/;"	v
y	examples/02-plot/spherical.py	/^y = np.arange(-90, 91, 10)$/;"	v
y	examples/02-plot/texture.py	/^y = np.arange(-10, 10, 0.25)$/;"	v
y	examples/03-widgets/sphere-widget.py	/^y = np.linspace(ymin, ymax, num=25)$/;"	v
y	examples/99-advanced/warp-by-vector-eigenmodes.py	/^y = np.linspace(-l2 \/ 2.0, l2 \/ 2.0, ny)$/;"	v
y	pyvista/core/grid.py	/^    def y(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:ImageData
y	pyvista/core/grid.py	/^    def y(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:RectilinearGrid
y	pyvista/core/grid.py	/^    def y(self, coords: Sequence):  # numpydoc ignore=GL08$/;"	m	class:RectilinearGrid
y	pyvista/core/pointset.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
y	pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
y	pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:LinePlot2D
y	pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
y1	examples/02-plot/chart_basics.py	/^y1 = np.cos(x) + np.sin(3 * x)$/;"	v
y1	examples/02-plot/chart_basics.py	/^y1 = rng.integers(1e2, 1e4, 12)$/;"	v
y1	pyvista/plotting/charts.py	/^    def y1(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
y2	examples/02-plot/chart_basics.py	/^y2 = 0.1 * (x - 5)$/;"	v
y2	examples/02-plot/chart_basics.py	/^y2 = rng.integers(1e2, 1e4, 12)$/;"	v
y2	pyvista/plotting/charts.py	/^    def y2(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
y_axis	pyvista/plotting/charts.py	/^    def y_axis(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_axis_label	pyvista/plotting/axes_actor.py	/^    def y_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_label	pyvista/plotting/axes_actor.py	/^    def y_axis_label(self, label: str):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
y_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_minor_tick_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
y_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_range(self) -> Tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_range(self, value: Tuple[float, float]):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
y_axis_shaft_properties	pyvista/plotting/axes_actor.py	/^    def y_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def y_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def y_axis_tip_properties(self, properties: ActorProperties):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
y_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
y_color	pyvista/plotting/themes.py	/^    def y_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
y_color	pyvista/plotting/themes.py	/^    def y_color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:_AxesConfig
y_color	pyvista/plotting/tools.py	/^    y_color = Color(y_color, default_color=pyvista.global_theme.axes.y_color)$/;"	v
y_face_color	pyvista/plotting/tools.py	/^    y_face_color = Color(y_face_color)$/;"	v
y_label	pyvista/plotting/charts.py	/^    def y_label(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_label	pyvista/plotting/charts.py	/^    def y_label(self, val):  # numpydoc ignore=GL08$/;"	m	class:Chart2D
y_label_format	pyvista/plotting/cube_axes_actor.py	/^    def y_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_label_format	pyvista/plotting/cube_axes_actor.py	/^    def y_label_format(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
y_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_label_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
y_labels	pyvista/plotting/cube_axes_actor.py	/^    def y_labels(self) -> List[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_mesh	pyvista/demos/logo.py	/^    y_mesh = mesh_letters['y'].compute_normals(split_vertices=True)$/;"	v
y_polar	examples/02-plot/spherical.py	/^y_polar = 90.0 - y  # grid_from_sph_coords() expects polar angle$/;"	v
y_pts	examples/99-advanced/osmnx-example.py	/^    y_pts = row['geometry'].xy[1]$/;"	v
y_range	pyvista/plotting/charts.py	/^    def y_range(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_range	pyvista/plotting/charts.py	/^    def y_range(self, val):  # numpydoc ignore=GL08$/;"	m	class:Chart2D
y_size	examples/02-plot/bounds.py	/^y_size = central_gear.bounds[3] - central_gear.bounds[2]$/;"	v
y_slice	examples/99-advanced/openfoam-tubes.py	/^y_slice = air.slice('y')$/;"	v
y_title	pyvista/plotting/cube_axes_actor.py	/^    def y_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_title	pyvista/plotting/cube_axes_actor.py	/^    def y_title(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
yc	examples/02-plot/texture.py	/^yc = np.linspace(0, axial_num_puppies, curvsurf.dimensions[1])$/;"	v
ycorn	examples/00-load/create-explicit-structured-grid.py	/^ycorn = np.arange(0, (nj + 1) * sj, sj)$/;"	v
ycorn	examples/00-load/create-explicit-structured-grid.py	/^ycorn = np.repeat(ycorn, 2)$/;"	v
ycorn	examples/00-load/create-explicit-structured-grid.py	/^ycorn = np.tile(ycorn, (2 * ni, 2 * nk))$/;"	v
ycorn	examples/00-load/create-explicit-structured-grid.py	/^ycorn = np.transpose(ycorn)$/;"	v
ycorn	examples/00-load/create-explicit-structured-grid.py	/^ycorn = ycorn.flatten()$/;"	v
ycorn	examples/00-load/create-explicit-structured-grid.py	/^ycorn = ycorn[1:-1]$/;"	v
year	doc/source/conf.py	/^year = datetime.date.today().year$/;"	v
year	tests/tinypages/conf.py	/^year = datetime.date.today().year$/;"	v
yellow	examples/02-plot/cmap.py	/^yellow = np.array([255 \/ 256, 247 \/ 256, 0 \/ 256, 1.0])$/;"	v
ylabel	examples/02-plot/plot-over-line.py	/^    ylabel="Height above sea level",$/;"	v
ypos	examples/99-advanced/fea-hertzian-contact-pressure.py	/^ypos = 0.024$/;"	v
ys	examples/02-plot/chart_basics.py	/^ys = [rng.integers(1, 11, 10) for _ in range(5)]$/;"	v
ys	examples/02-plot/chart_basics.py	/^ys = [rng.integers(1, 11, 11) for _ in range(5)]$/;"	v
ys	pyvista/plotting/charts.py	/^    def ys(self):  # numpydoc ignore=RT01$/;"	m	class:StackPlot
ytitle	examples/01-filter/image-fft-perlin-noise.py	/^    ytitle='Y Frequency',$/;"	v
yy	examples/00-load/terrain-mesh.py	/^yy = np.repeat(terrain.y, len(z_cells), axis=-1)$/;"	v
yy	pyvista/core/utilities/geometric_objects.py	/^    yy = np.array([Y] * z_resolution).ravel()$/;"	v
yy_bounds	examples/02-plot/spherical.py	/^yy_bounds = _cell_bounds(y_polar)$/;"	v
z	examples/00-load/create-structured-surface.py	/^z = np.sin(r)$/;"	v
z	examples/01-filter/sampling_functions_2d.py	/^z = mesh.points[:, 2]$/;"	v
z	examples/01-filter/streamlines.py	/^z = mesh.points[:, 2]$/;"	v
z	examples/02-plot/distance-along-spline.py	/^z = np.linspace(2, -2, 100)$/;"	v
z	examples/02-plot/gif.py	/^    z = np.sin(r + phase)$/;"	v
z	examples/02-plot/gif.py	/^z = np.sin(r)$/;"	v
z	examples/02-plot/movie_glyphs.py	/^    z = (np.sin(r + phase) + 1) \/ 2$/;"	v
z	examples/02-plot/movie_glyphs.py	/^z = (np.sin(r) + 1) \/ 2$/;"	v
z	examples/02-plot/texture.py	/^    z = np.sin(r + phase)$/;"	v
z	examples/02-plot/texture.py	/^z = np.sin(r)$/;"	v
z	examples/99-advanced/warp-by-vector-eigenmodes.py	/^z = np.zeros_like(x) + l3 \/ 2.0$/;"	v
z	pyvista/core/grid.py	/^    def z(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:ImageData
z	pyvista/core/grid.py	/^    def z(self) -> np.ndarray:  # numpydoc ignore=RT01$/;"	m	class:RectilinearGrid
z	pyvista/core/grid.py	/^    def z(self, coords: Sequence):  # numpydoc ignore=GL08$/;"	m	class:RectilinearGrid
z	pyvista/core/pointset.py	/^    def z(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
z_axis_label	pyvista/plotting/axes_actor.py	/^    def z_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_label	pyvista/plotting/axes_actor.py	/^    def z_axis_label(self, label: str):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
z_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_minor_tick_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
z_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_range(self) -> Tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_range(self, value: Tuple[float, float]):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
z_axis_shaft_properties	pyvista/plotting/axes_actor.py	/^    def z_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def z_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def z_axis_tip_properties(self, properties: ActorProperties):  # numpydoc ignore=GL08$/;"	m	class:AxesActor
z_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
z_cells	examples/00-load/terrain-mesh.py	/^z_cells = np.array([25] * 5 + [35] * 3 + [50] * 2 + [75, 100])$/;"	v
z_color	pyvista/plotting/themes.py	/^    def z_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
z_color	pyvista/plotting/themes.py	/^    def z_color(self, color: ColorLike):  # numpydoc ignore=GL08$/;"	m	class:_AxesConfig
z_color	pyvista/plotting/tools.py	/^    z_color = Color(z_color, default_color=pyvista.global_theme.axes.z_color)$/;"	v
z_face_color	pyvista/plotting/tools.py	/^    z_face_color = Color(z_face_color)$/;"	v
z_label_format	pyvista/plotting/cube_axes_actor.py	/^    def z_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_label_format	pyvista/plotting/cube_axes_actor.py	/^    def z_label_format(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
z_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_label_visibility(self, value: bool):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
z_labels	pyvista/plotting/cube_axes_actor.py	/^    def z_labels(self) -> List[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_offset	examples/02-plot/spherical.py	/^z_offset = RADIUS * 1.1$/;"	v
z_pts	examples/99-advanced/osmnx-example.py	/^    z_pts = np.zeros(len(x_pts))$/;"	v
z_scale	examples/02-plot/spherical.py	/^z_scale = 10$/;"	v
z_size	examples/02-plot/bounds.py	/^z_size = central_gear.bounds[5] - central_gear.bounds[4]$/;"	v
z_slice	examples/99-advanced/openfoam-cooling.py	/^z_slice = air.clip('z', value=-0.005)$/;"	v
z_spacing	examples/00-load/create-surface-draped.py	/^z_spacing = 0.12$/;"	v
z_stress	examples/99-advanced/fea-hertzian-contact-pressure.py	/^z_stress = np.abs(mesh['Stress'][:, 2])$/;"	v
z_title	pyvista/plotting/cube_axes_actor.py	/^    def z_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_title	pyvista/plotting/cube_axes_actor.py	/^    def z_title(self, value: str):  # numpydoc ignore=GL08$/;"	m	class:CubeAxesActor
zcorn	examples/00-load/create-explicit-structured-grid.py	/^zcorn = np.arange(0, (nk + 1) * sk, sk)$/;"	v
zcorn	examples/00-load/create-explicit-structured-grid.py	/^zcorn = np.repeat(zcorn, (4 * ni * nj))$/;"	v
zcorn	examples/00-load/create-explicit-structured-grid.py	/^zcorn = np.repeat(zcorn, 2)$/;"	v
zcorn	examples/00-load/create-explicit-structured-grid.py	/^zcorn = zcorn[1:-1]$/;"	v
zo	examples/01-filter/slicing.py	/^zo = np.linspace(9.0, 11.0, num=len(y))$/;"	v
zoom	examples/99-advanced/atomic-orbitals.py	/^    zoom=2,$/;"	v
zoom	pyvista/plotting/camera.py	/^    def zoom(self, value):$/;"	m	class:Camera
ztitle	examples/01-filter/image-fft-perlin-noise.py	/^    ztitle='Amplitude',$/;"	v
zval	examples/02-plot/image_depth.py	/^zval = p.get_image_depth()$/;"	v
zval_filled_by_42s	examples/02-plot/image_depth.py	/^zval_filled_by_42s = p.get_image_depth(fill_value=42.0)$/;"	v
zz	examples/00-load/create-tri-surface.py	/^zz = A * np.exp(-0.5 * ((xx \/ b) ** 2.0 + (yy \/ b) ** 2.0))$/;"	v
zz	examples/00-load/terrain-mesh.py	/^zz = np.repeat(terrain.z, len(z_cells), axis=-1) - np.cumsum(z_cells).reshape((1, 1, -1))$/;"	v
zz	examples/02-plot/texture.py	/^    zz = A * np.exp(-0.5 * ((xx \/ b) ** 2.0 + (yy \/ b) ** 2.0))$/;"	v
zz	examples/02-plot/texture.py	/^zz = A * np.exp(-0.5 * ((xx \/ b) ** 2.0 + (yy \/ b) ** 2.0))$/;"	v
zz	pyvista/core/utilities/geometric_objects.py	/^    zz = np.empty(yy.size)$/;"	v
zz	pyvista/core/utilities/geometric_objects.py	/^    zz = np.full((X.size, z_resolution), dz)$/;"	v
zz	pyvista/core/utilities/geometric_objects.py	/^    zz = zz.ravel(order='f')$/;"	v
