!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	tests/core/test_utilities.py	/^    class A: ...$/;"	c	function:no_new_attr_subclass
ABC	build/lib/pyvista/core/utilities/reader.py	/^from abc import ABC$/;"	i
ABC	build/lib/pyvista/plotting/prop3d.py	/^from abc import ABC$/;"	i
ABC	pyvista/core/utilities/reader.py	/^from abc import ABC$/;"	i
ABC	pyvista/plotting/prop3d.py	/^from abc import ABC$/;"	i
ACTOR_LOC_MAP	build/lib/pyvista/plotting/renderer.py	/^ACTOR_LOC_MAP = [$/;"	v
ACTOR_LOC_MAP	pyvista/plotting/renderer.py	/^ACTOR_LOC_MAP = [$/;"	v
ACTOR_LOC_MAP	tests/plotting/test_renderer.py	/^from pyvista.plotting.renderer import ACTOR_LOC_MAP$/;"	i
ALLOWED_BACKENDS	build/lib/pyvista/jupyter/__init__.py	/^ALLOWED_BACKENDS = [$/;"	v
ALLOWED_BACKENDS	pyvista/jupyter/__init__.py	/^ALLOWED_BACKENDS = [$/;"	v
ALL_LABEL_IDS	tests/core/test_imagedata_filters.py	/^ALL_LABEL_IDS = {0, 2, 5}$/;"	v
ANGLE	build/lib/pyvista/core/utilities/cell_quality.py	/^ANGLE = float((180 \/ np.pi) * np.arccos(1 \/ 3))$/;"	v
ANGLE	pyvista/core/utilities/cell_quality.py	/^ANGLE = float((180 \/ np.pi) * np.arccos(1 \/ 3))$/;"	v
ANGLE	tests/core/test_utilities.py	/^ANGLE = 30$/;"	v
ANY	tests/plotting/test_widgets.py	/^from unittest.mock import ANY$/;"	i
AREA	build/lib/pyvista/plotting/opts.py	/^    AREA = (0, 'Area')$/;"	v	class:PickerType
AREA	pyvista/plotting/opts.py	/^    AREA = (0, 'Area')$/;"	v	class:PickerType
AREA	tests/core/test_dataobject_filters.py	/^AREA = 'area'$/;"	v
AVSucdReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import AVSucdReader as AVSucdReader$/;"	i
AVSucdReader	build/lib/pyvista/core/utilities/reader.py	/^class AVSucdReader(BaseReader):$/;"	c
AVSucdReader	pyvista/core/utilities/__init__.py	/^from .reader import AVSucdReader as AVSucdReader$/;"	i
AVSucdReader	pyvista/core/utilities/reader.py	/^class AVSucdReader(BaseReader):$/;"	c
AbstractLayout	build/lib/pyvista/trame/ui/base_viewer.py	/^    from trame_client.ui.core import AbstractLayout$/;"	i
AbstractLayout	build/lib/pyvista/trame/ui/vuetify2.py	/^    from trame_client.ui.core import AbstractLayout$/;"	i
AbstractLayout	build/lib/pyvista/trame/ui/vuetify3.py	/^    from trame_client.ui.core import AbstractLayout$/;"	i
AbstractLayout	pyvista/trame/ui/base_viewer.py	/^    from trame_client.ui.core import AbstractLayout$/;"	i
AbstractLayout	pyvista/trame/ui/vuetify2.py	/^    from trame_client.ui.core import AbstractLayout$/;"	i
AbstractLayout	pyvista/trame/ui/vuetify3.py	/^    from trame_client.ui.core import AbstractLayout$/;"	i
ActiveArrayInfo	build/lib/pyvista/core/dataset.py	/^class ActiveArrayInfo:$/;"	c
ActiveArrayInfo	pyvista/core/dataset.py	/^class ActiveArrayInfo:$/;"	c
ActiveArrayInfoTuple	build/lib/pyvista/core/dataset.py	/^class ActiveArrayInfoTuple(NamedTuple):$/;"	c
ActiveArrayInfoTuple	pyvista/core/dataset.py	/^class ActiveArrayInfoTuple(NamedTuple):$/;"	c
ActiveScalarsAlgorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^class ActiveScalarsAlgorithm(PreserveTypeAlgorithmBase):$/;"	c
ActiveScalarsAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class ActiveScalarsAlgorithm(PreserveTypeAlgorithmBase):$/;"	c
Actor	build/lib/pyvista/plotting/__init__.py	/^from .actor import Actor as Actor$/;"	i
Actor	build/lib/pyvista/plotting/actor.py	/^class Actor(Prop3D, _NameMixin, _vtk.vtkActor):$/;"	c
Actor	build/lib/pyvista/plotting/axes.py	/^from .actor import Actor$/;"	i
Actor	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.actor import Actor$/;"	i
Actor	build/lib/pyvista/plotting/plotter.py	/^from .actor import Actor$/;"	i
Actor	build/lib/pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
Actor	build/lib/pyvista/plotting/renderer.py	/^from .actor import Actor$/;"	i
Actor	pyvista/plotting/__init__.py	/^from .actor import Actor as Actor$/;"	i
Actor	pyvista/plotting/actor.py	/^class Actor(Prop3D, _NameMixin, _vtk.vtkActor):$/;"	c
Actor	pyvista/plotting/axes.py	/^from .actor import Actor$/;"	i
Actor	pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.actor import Actor$/;"	i
Actor	pyvista/plotting/plotter.py	/^from .actor import Actor$/;"	i
Actor	pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
Actor	pyvista/plotting/renderer.py	/^from .actor import Actor$/;"	i
ActorProperties	build/lib/pyvista/plotting/__init__.py	/^from .actor_properties import ActorProperties as ActorProperties$/;"	i
ActorProperties	build/lib/pyvista/plotting/actor_properties.py	/^class ActorProperties:$/;"	c
ActorProperties	build/lib/pyvista/plotting/axes_actor.py	/^from .actor_properties import ActorProperties$/;"	i
ActorProperties	pyvista/plotting/__init__.py	/^from .actor_properties import ActorProperties as ActorProperties$/;"	i
ActorProperties	pyvista/plotting/actor_properties.py	/^class ActorProperties:$/;"	c
ActorProperties	pyvista/plotting/axes_actor.py	/^from .actor_properties import ActorProperties$/;"	i
AddIDsAlgorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^class AddIDsAlgorithm(PreserveTypeAlgorithmBase):$/;"	c
AddIDsAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class AddIDsAlgorithm(PreserveTypeAlgorithmBase):$/;"	c
AddObserver	build/lib/pyvista/core/utilities/reader.py	/^    def AddObserver(self, event_type, callback) -> None:$/;"	m	class:BaseVTKReader
AddObserver	pyvista/core/utilities/reader.py	/^    def AddObserver(self, event_type, callback) -> None:$/;"	m	class:BaseVTKReader
AffineWidget3D	build/lib/pyvista/plotting/__init__.py	/^from .affine_widget import AffineWidget3D as AffineWidget3D$/;"	i
AffineWidget3D	build/lib/pyvista/plotting/affine_widget.py	/^class AffineWidget3D:$/;"	c
AffineWidget3D	build/lib/pyvista/plotting/widgets.py	/^from .affine_widget import AffineWidget3D$/;"	i
AffineWidget3D	pyvista/plotting/__init__.py	/^from .affine_widget import AffineWidget3D as AffineWidget3D$/;"	i
AffineWidget3D	pyvista/plotting/affine_widget.py	/^class AffineWidget3D:$/;"	c
AffineWidget3D	pyvista/plotting/widgets.py	/^from .affine_widget import AffineWidget3D$/;"	i
AllDatasetsCarousel	doc/source/make_tables.py	/^class AllDatasetsCarousel(DatasetGalleryCarousel):$/;"	c
AmbiguousDataError	build/lib/pyvista/core/__init__.py	/^from .errors import AmbiguousDataError as AmbiguousDataError$/;"	i
AmbiguousDataError	build/lib/pyvista/core/errors.py	/^class AmbiguousDataError(ValueError):$/;"	c
AmbiguousDataError	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AmbiguousDataError	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AmbiguousDataError	build/lib/pyvista/core/utilities/arrays.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AmbiguousDataError	pyvista/core/__init__.py	/^from .errors import AmbiguousDataError as AmbiguousDataError$/;"	i
AmbiguousDataError	pyvista/core/errors.py	/^class AmbiguousDataError(ValueError):$/;"	c
AmbiguousDataError	pyvista/core/filters/data_set.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AmbiguousDataError	pyvista/core/filters/image_data.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AmbiguousDataError	pyvista/core/utilities/arrays.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AmbiguousDataError	tests/core/test_grid.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AmbiguousDataError	tests/core/test_helpers.py	/^from pyvista.core.errors import AmbiguousDataError$/;"	i
AnnotatedIntEnum	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import AnnotatedIntEnum as AnnotatedIntEnum$/;"	i
AnnotatedIntEnum	build/lib/pyvista/core/utilities/misc.py	/^class AnnotatedIntEnum(int, enum.Enum):$/;"	c
AnnotatedIntEnum	build/lib/pyvista/plotting/opts.py	/^from pyvista.core.utilities.misc import AnnotatedIntEnum$/;"	i
AnnotatedIntEnum	build/lib/pyvista/plotting/texture.py	/^from pyvista.core.utilities.misc import AnnotatedIntEnum$/;"	i
AnnotatedIntEnum	pyvista/core/utilities/__init__.py	/^from .misc import AnnotatedIntEnum as AnnotatedIntEnum$/;"	i
AnnotatedIntEnum	pyvista/core/utilities/misc.py	/^class AnnotatedIntEnum(int, enum.Enum):$/;"	c
AnnotatedIntEnum	pyvista/plotting/opts.py	/^from pyvista.core.utilities.misc import AnnotatedIntEnum$/;"	i
AnnotatedIntEnum	pyvista/plotting/texture.py	/^from pyvista.core.utilities.misc import AnnotatedIntEnum$/;"	i
AnnotatedIntEnum	tests/core/test_utilities.py	/^from pyvista.core.utilities.misc import AnnotatedIntEnum$/;"	i
Any	build/lib/pyvista/core/_validation/check.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/_validation/validate.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/cell.py	/^    from typing import Any$/;"	i
Any	build/lib/pyvista/core/composite.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/dataobject.py	/^    from typing import Any$/;"	i
Any	build/lib/pyvista/core/dataset.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/datasetattributes.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/filters/data_set.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/grid.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/pyvista_ndarray.py	/^    from typing import Any$/;"	i
Any	build/lib/pyvista/core/utilities/arrays.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/utilities/fileio.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/utilities/geometric_sources.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/utilities/helpers.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/core/utilities/misc.py	/^    from typing import Any$/;"	i
Any	build/lib/pyvista/core/utilities/reader.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/ext/coverage.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/plotting/axes_assembly.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/plotting/colors.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/plotting/lookup_table.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/plotting/prop_collection.py	/^    from typing import Any$/;"	i
Any	build/lib/pyvista/plotting/renderer.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/plotting/themes.py	/^from typing import Any$/;"	i
Any	build/lib/pyvista/typing/mypy_plugin.py	/^    from typing import Any$/;"	i
Any	doc/source/make_tables.py	/^from typing import Any$/;"	i
Any	pyvista/core/_validation/check.py	/^from typing import Any$/;"	i
Any	pyvista/core/_validation/validate.py	/^from typing import Any$/;"	i
Any	pyvista/core/cell.py	/^    from typing import Any$/;"	i
Any	pyvista/core/composite.py	/^from typing import Any$/;"	i
Any	pyvista/core/dataobject.py	/^    from typing import Any$/;"	i
Any	pyvista/core/dataset.py	/^from typing import Any$/;"	i
Any	pyvista/core/datasetattributes.py	/^from typing import Any$/;"	i
Any	pyvista/core/filters/data_set.py	/^from typing import Any$/;"	i
Any	pyvista/core/grid.py	/^from typing import Any$/;"	i
Any	pyvista/core/pyvista_ndarray.py	/^    from typing import Any$/;"	i
Any	pyvista/core/utilities/arrays.py	/^from typing import Any$/;"	i
Any	pyvista/core/utilities/fileio.py	/^from typing import Any$/;"	i
Any	pyvista/core/utilities/geometric_sources.py	/^from typing import Any$/;"	i
Any	pyvista/core/utilities/helpers.py	/^from typing import Any$/;"	i
Any	pyvista/core/utilities/misc.py	/^    from typing import Any$/;"	i
Any	pyvista/core/utilities/reader.py	/^from typing import Any$/;"	i
Any	pyvista/examples/_dataset_loader.py	/^from typing import Any$/;"	i
Any	pyvista/ext/coverage.py	/^from typing import Any$/;"	i
Any	pyvista/plotting/axes_assembly.py	/^from typing import Any$/;"	i
Any	pyvista/plotting/colors.py	/^from typing import Any$/;"	i
Any	pyvista/plotting/lookup_table.py	/^from typing import Any$/;"	i
Any	pyvista/plotting/prop_collection.py	/^    from typing import Any$/;"	i
Any	pyvista/plotting/renderer.py	/^from typing import Any$/;"	i
Any	pyvista/plotting/themes.py	/^from typing import Any$/;"	i
Any	pyvista/typing/mypy_plugin.py	/^    from typing import Any$/;"	i
Any	tests/core/test_dataset_filters.py	/^from typing import Any$/;"	i
Any	tests/examples/test_dataset_loader.py	/^from typing import Any$/;"	i
Any	tests/plotting/test_plotting.py	/^from typing import Any$/;"	i
AreaPlot	build/lib/pyvista/plotting/charts.py	/^class AreaPlot(_Plot, _vtk.vtkPlotArea):$/;"	c
AreaPlot	pyvista/plotting/charts.py	/^class AreaPlot(_Plot, _vtk.vtkPlotArea):$/;"	c
ArgumentParser	tests/check_doctest_names.py	/^from argparse import ArgumentParser$/;"	i
ArrayLike	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import ArrayLike as ArrayLike$/;"	i
ArrayLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^ArrayLike = _ArrayLike[NumberType]$/;"	v
ArrayLike	build/lib/pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core import ArrayLike$/;"	i
ArrayLike	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import ArrayLike$/;"	i
ArrayLike	build/lib/pyvista/core/datasetattributes.py	/^    from ._typing_core import ArrayLike$/;"	i
ArrayLike	build/lib/pyvista/core/pointset.py	/^    from ._typing_core import ArrayLike$/;"	i
ArrayLike	build/lib/pyvista/core/pyvista_ndarray.py	/^    from ._typing_core import ArrayLike$/;"	i
ArrayLike	build/lib/pyvista/core/utilities/cells.py	/^    from pyvista.core._typing_core import ArrayLike$/;"	i
ArrayLike	build/lib/pyvista/core/utilities/misc.py	/^    from .._typing_core import ArrayLike$/;"	i
ArrayLike	pyvista/core/_typing_core/__init__.py	/^from ._aliases import ArrayLike as ArrayLike$/;"	i
ArrayLike	pyvista/core/_typing_core/_aliases.py	/^ArrayLike = _ArrayLike[NumberType]$/;"	v
ArrayLike	pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core import ArrayLike$/;"	i
ArrayLike	pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import ArrayLike$/;"	i
ArrayLike	pyvista/core/datasetattributes.py	/^    from ._typing_core import ArrayLike$/;"	i
ArrayLike	pyvista/core/pointset.py	/^    from ._typing_core import ArrayLike$/;"	i
ArrayLike	pyvista/core/pyvista_ndarray.py	/^    from ._typing_core import ArrayLike$/;"	i
ArrayLike	pyvista/core/utilities/cells.py	/^    from pyvista.core._typing_core import ArrayLike$/;"	i
ArrayLike	pyvista/core/utilities/misc.py	/^    from .._typing_core import ArrayLike$/;"	i
Arrow	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Arrow as Arrow$/;"	i
Arrow	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Arrow($/;"	f
Arrow	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Arrow as Arrow$/;"	i
Arrow	pyvista/core/utilities/geometric_objects.py	/^def Arrow($/;"	f
Arrow	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import Arrow  # noqa: F401$/;"	i
ArrowSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import ArrowSource as ArrowSource$/;"	i
ArrowSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import ArrowSource$/;"	i
ArrowSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class ArrowSource(_vtk.vtkArrowSource):$/;"	c
ArrowSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import ArrowSource as ArrowSource$/;"	i
ArrowSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import ArrowSource$/;"	i
ArrowSource	pyvista/core/utilities/geometric_sources.py	/^class ArrowSource(_vtk.vtkArrowSource):$/;"	c
Avoid	build/lib/pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
Avoid	pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
Axes	build/lib/pyvista/plotting/__init__.py	/^from .axes import Axes as Axes$/;"	i
Axes	build/lib/pyvista/plotting/axes.py	/^class Axes(_vtk.vtkAxes):$/;"	c
Axes	pyvista/plotting/__init__.py	/^from .axes import Axes as Axes$/;"	i
Axes	pyvista/plotting/axes.py	/^class Axes(_vtk.vtkAxes):$/;"	c
AxesActor	build/lib/pyvista/plotting/__init__.py	/^from .axes_actor import AxesActor as AxesActor$/;"	i
AxesActor	build/lib/pyvista/plotting/axes.py	/^from .axes_actor import AxesActor$/;"	i
AxesActor	build/lib/pyvista/plotting/axes_actor.py	/^class AxesActor(_vtk.vtkAxesActor):$/;"	c
AxesActor	pyvista/plotting/__init__.py	/^from .axes_actor import AxesActor as AxesActor$/;"	i
AxesActor	pyvista/plotting/axes.py	/^from .axes_actor import AxesActor$/;"	i
AxesActor	pyvista/plotting/axes_actor.py	/^class AxesActor(_vtk.vtkAxesActor):$/;"	c
AxesAssembly	build/lib/pyvista/plotting/__init__.py	/^from .axes_assembly import AxesAssembly as AxesAssembly$/;"	i
AxesAssembly	build/lib/pyvista/plotting/axes_assembly.py	/^class AxesAssembly(_XYZAssembly):$/;"	c
AxesAssembly	pyvista/plotting/__init__.py	/^from .axes_assembly import AxesAssembly as AxesAssembly$/;"	i
AxesAssembly	pyvista/plotting/axes_assembly.py	/^class AxesAssembly(_XYZAssembly):$/;"	c
AxesAssemblySymmetric	build/lib/pyvista/plotting/__init__.py	/^from .axes_assembly import AxesAssemblySymmetric as AxesAssemblySymmetric$/;"	i
AxesAssemblySymmetric	build/lib/pyvista/plotting/axes_assembly.py	/^class AxesAssemblySymmetric(AxesAssembly):$/;"	c
AxesAssemblySymmetric	pyvista/plotting/__init__.py	/^from .axes_assembly import AxesAssemblySymmetric as AxesAssemblySymmetric$/;"	i
AxesAssemblySymmetric	pyvista/plotting/axes_assembly.py	/^class AxesAssemblySymmetric(AxesAssembly):$/;"	c
AxesGeometrySource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import AxesGeometrySource as AxesGeometrySource$/;"	i
AxesGeometrySource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class AxesGeometrySource:$/;"	c
AxesGeometrySource	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import AxesGeometrySource$/;"	i
AxesGeometrySource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import AxesGeometrySource as AxesGeometrySource$/;"	i
AxesGeometrySource	pyvista/core/utilities/geometric_sources.py	/^class AxesGeometrySource:$/;"	c
AxesGeometrySource	pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import AxesGeometrySource$/;"	i
Axis	build/lib/pyvista/plotting/charts.py	/^class Axis(_vtkWrapper, _vtk.vtkAxis):$/;"	c
Axis	pyvista/plotting/charts.py	/^class Axis(_vtkWrapper, _vtk.vtkAxis):$/;"	c
B	tests/core/test_utilities.py	/^    class B(A):$/;"	c	function:no_new_attr_subclass
BAR	tests/core/test_utilities.py	/^        BAR = (0, 'foo')$/;"	v	class:test_annotated_int_enum_from_any_raises.Foo
BEZIER_CURVE	build/lib/pyvista/core/celltype.py	/^    BEZIER_CURVE = _CELL_TYPE_INFO['BEZIER_CURVE']$/;"	v	class:CellType
BEZIER_CURVE	build/lib/pyvista/core/celltype.py	/^    BEZIER_CURVE=_CellTypeTuple(value=_vtk.VTK_BEZIER_CURVE),$/;"	v	class:_CellTypeTuple
BEZIER_CURVE	pyvista/core/celltype.py	/^    BEZIER_CURVE = _CELL_TYPE_INFO['BEZIER_CURVE']$/;"	v	class:CellType
BEZIER_CURVE	pyvista/core/celltype.py	/^    BEZIER_CURVE=_CellTypeTuple(value=_vtk.VTK_BEZIER_CURVE),$/;"	v	class:_CellTypeTuple
BEZIER_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    BEZIER_HEXAHEDRON = _CELL_TYPE_INFO['BEZIER_HEXAHEDRON']$/;"	v	class:CellType
BEZIER_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    BEZIER_HEXAHEDRON=_CellTypeTuple(value=_vtk.VTK_BEZIER_HEXAHEDRON),$/;"	v	class:_CellTypeTuple
BEZIER_HEXAHEDRON	pyvista/core/celltype.py	/^    BEZIER_HEXAHEDRON = _CELL_TYPE_INFO['BEZIER_HEXAHEDRON']$/;"	v	class:CellType
BEZIER_HEXAHEDRON	pyvista/core/celltype.py	/^    BEZIER_HEXAHEDRON=_CellTypeTuple(value=_vtk.VTK_BEZIER_HEXAHEDRON),$/;"	v	class:_CellTypeTuple
BEZIER_PYRAMID	build/lib/pyvista/core/celltype.py	/^    BEZIER_PYRAMID = _CELL_TYPE_INFO['BEZIER_PYRAMID']$/;"	v	class:CellType
BEZIER_PYRAMID	build/lib/pyvista/core/celltype.py	/^    BEZIER_PYRAMID=_CellTypeTuple(value=_vtk.VTK_BEZIER_PYRAMID),$/;"	v	class:_CellTypeTuple
BEZIER_PYRAMID	pyvista/core/celltype.py	/^    BEZIER_PYRAMID = _CELL_TYPE_INFO['BEZIER_PYRAMID']$/;"	v	class:CellType
BEZIER_PYRAMID	pyvista/core/celltype.py	/^    BEZIER_PYRAMID=_CellTypeTuple(value=_vtk.VTK_BEZIER_PYRAMID),$/;"	v	class:_CellTypeTuple
BEZIER_QUADRILATERAL	build/lib/pyvista/core/celltype.py	/^    BEZIER_QUADRILATERAL = _CELL_TYPE_INFO['BEZIER_QUADRILATERAL']$/;"	v	class:CellType
BEZIER_QUADRILATERAL	build/lib/pyvista/core/celltype.py	/^    BEZIER_QUADRILATERAL=_CellTypeTuple(value=_vtk.VTK_BEZIER_QUADRILATERAL),$/;"	v	class:_CellTypeTuple
BEZIER_QUADRILATERAL	pyvista/core/celltype.py	/^    BEZIER_QUADRILATERAL = _CELL_TYPE_INFO['BEZIER_QUADRILATERAL']$/;"	v	class:CellType
BEZIER_QUADRILATERAL	pyvista/core/celltype.py	/^    BEZIER_QUADRILATERAL=_CellTypeTuple(value=_vtk.VTK_BEZIER_QUADRILATERAL),$/;"	v	class:_CellTypeTuple
BEZIER_TETRAHEDRON	build/lib/pyvista/core/celltype.py	/^    BEZIER_TETRAHEDRON = _CELL_TYPE_INFO['BEZIER_TETRAHEDRON']$/;"	v	class:CellType
BEZIER_TETRAHEDRON	build/lib/pyvista/core/celltype.py	/^    BEZIER_TETRAHEDRON=_CellTypeTuple(value=_vtk.VTK_BEZIER_TETRAHEDRON),$/;"	v	class:_CellTypeTuple
BEZIER_TETRAHEDRON	pyvista/core/celltype.py	/^    BEZIER_TETRAHEDRON = _CELL_TYPE_INFO['BEZIER_TETRAHEDRON']$/;"	v	class:CellType
BEZIER_TETRAHEDRON	pyvista/core/celltype.py	/^    BEZIER_TETRAHEDRON=_CellTypeTuple(value=_vtk.VTK_BEZIER_TETRAHEDRON),$/;"	v	class:_CellTypeTuple
BEZIER_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    BEZIER_TRIANGLE = _CELL_TYPE_INFO['BEZIER_TRIANGLE']$/;"	v	class:CellType
BEZIER_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    BEZIER_TRIANGLE=_CellTypeTuple(value=_vtk.VTK_BEZIER_TRIANGLE),$/;"	v	class:_CellTypeTuple
BEZIER_TRIANGLE	pyvista/core/celltype.py	/^    BEZIER_TRIANGLE = _CELL_TYPE_INFO['BEZIER_TRIANGLE']$/;"	v	class:CellType
BEZIER_TRIANGLE	pyvista/core/celltype.py	/^    BEZIER_TRIANGLE=_CellTypeTuple(value=_vtk.VTK_BEZIER_TRIANGLE),$/;"	v	class:_CellTypeTuple
BEZIER_WEDGE	build/lib/pyvista/core/celltype.py	/^    BEZIER_WEDGE = _CELL_TYPE_INFO['BEZIER_WEDGE']$/;"	v	class:CellType
BEZIER_WEDGE	build/lib/pyvista/core/celltype.py	/^    BEZIER_WEDGE=_CellTypeTuple(value=_vtk.VTK_BEZIER_WEDGE),$/;"	v	class:_CellTypeTuple
BEZIER_WEDGE	pyvista/core/celltype.py	/^    BEZIER_WEDGE = _CELL_TYPE_INFO['BEZIER_WEDGE']$/;"	v	class:CellType
BEZIER_WEDGE	pyvista/core/celltype.py	/^    BEZIER_WEDGE=_CellTypeTuple(value=_vtk.VTK_BEZIER_WEDGE),$/;"	v	class:_CellTypeTuple
BIG_VOLUME	tests/core/test_dataset_filters.py	/^BIG_VOLUME = 2**3$/;"	v
BIQUADRATIC_QUAD	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_QUAD = _CELL_TYPE_INFO['BIQUADRATIC_QUAD']$/;"	v	class:CellType
BIQUADRATIC_QUAD	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BIQUADRATIC_QUAD	pyvista/core/celltype.py	/^    BIQUADRATIC_QUAD = _CELL_TYPE_INFO['BIQUADRATIC_QUAD']$/;"	v	class:CellType
BIQUADRATIC_QUAD	pyvista/core/celltype.py	/^    BIQUADRATIC_QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BIQUADRATIC_QUADRATIC_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_HEXAHEDRON = _CELL_TYPE_INFO['BIQUADRATIC_QUADRATIC_HEXAHEDRON']$/;"	v	class:CellType
BIQUADRATIC_QUADRATIC_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BIQUADRATIC_QUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_HEXAHEDRON = _CELL_TYPE_INFO['BIQUADRATIC_QUADRATIC_HEXAHEDRON']$/;"	v	class:CellType
BIQUADRATIC_QUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BIQUADRATIC_QUADRATIC_WEDGE	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_WEDGE = _CELL_TYPE_INFO['BIQUADRATIC_QUADRATIC_WEDGE']$/;"	v	class:CellType
BIQUADRATIC_QUADRATIC_WEDGE	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BIQUADRATIC_QUADRATIC_WEDGE	pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_WEDGE = _CELL_TYPE_INFO['BIQUADRATIC_QUADRATIC_WEDGE']$/;"	v	class:CellType
BIQUADRATIC_QUADRATIC_WEDGE	pyvista/core/celltype.py	/^    BIQUADRATIC_QUADRATIC_WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BIQUADRATIC_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_TRIANGLE = _CELL_TYPE_INFO['BIQUADRATIC_TRIANGLE']$/;"	v	class:CellType
BIQUADRATIC_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    BIQUADRATIC_TRIANGLE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BIQUADRATIC_TRIANGLE	pyvista/core/celltype.py	/^    BIQUADRATIC_TRIANGLE = _CELL_TYPE_INFO['BIQUADRATIC_TRIANGLE']$/;"	v	class:CellType
BIQUADRATIC_TRIANGLE	pyvista/core/celltype.py	/^    BIQUADRATIC_TRIANGLE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
BLACK	doc/source/make_tables.py	/^    BLACK = auto()$/;"	v	class:ColorClassification
BLACK	tests/core/test_dataset_filters.py	/^BLACK = [0.0, 0.0, 0.0]$/;"	v
BLUE	doc/source/make_tables.py	/^    BLUE = auto()$/;"	v	class:ColorClassification
BLUE	tests/core/test_dataset_filters.py	/^BLUE = [0.0, 0.0, 1.0]$/;"	v
BLUE_UPPER_BOUND	doc/source/make_tables.py	/^BLUE_UPPER_BOUND = 248 \/ _360$/;"	v
BMPReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import BMPReader as BMPReader$/;"	i
BMPReader	build/lib/pyvista/core/utilities/reader.py	/^class BMPReader(BaseReader):$/;"	c
BMPReader	pyvista/core/utilities/__init__.py	/^from .reader import BMPReader as BMPReader$/;"	i
BMPReader	pyvista/core/utilities/reader.py	/^class BMPReader(BaseReader):$/;"	c
BOUNDARY_LABELS	tests/core/test_imagedata_filters.py	/^BOUNDARY_LABELS = 'boundary_labels'$/;"	v
BOUNDS	tests/plotting/test_plotting.py	/^BOUNDS = (-50, 50, -10, 30, -80, 80)$/;"	v
BROWN	doc/source/make_tables.py	/^    BROWN = auto()$/;"	v	class:ColorClassification
BROWN_SATURATION_LIGHTNESS_THRESHOLD	doc/source/make_tables.py	/^BROWN_SATURATION_LIGHTNESS_THRESHOLD = 1.2$/;"	v
BUILDDIR	doc/Makefile	/^BUILDDIR      = _build$/;"	m
BUILDING_GALLERY	build/lib/pyvista/__init__.py	/^BUILDING_GALLERY = os.environ.get('PYVISTA_BUILDING_GALLERY', 'false').lower() == 'true'$/;"	v
BUILDING_GALLERY	pyvista/__init__.py	/^BUILDING_GALLERY = os.environ.get('PYVISTA_BUILDING_GALLERY', 'false').lower() == 'true'$/;"	v
BUILDING_GALLERY_ERROR_MSG	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^BUILDING_GALLERY_ERROR_MSG = ($/;"	v
BUILDING_GALLERY_ERROR_MSG	pyvista/plotting/utilities/sphinx_gallery.py	/^BUILDING_GALLERY_ERROR_MSG = ($/;"	v
BUILD_DIR	tests/doc/tst_doc_images.py	/^BUILD_DIR = str(Path(ROOT_DIR) \/ 'doc' \/ '_build')$/;"	v
BUILD_IMAGE_CACHE	tests/doc/tst_doc_images.py	/^BUILD_IMAGE_CACHE = str(Path(__file__).parent \/ 'doc_image_cache')$/;"	v
BUILD_IMAGE_DIR	tests/doc/tst_doc_images.py	/^BUILD_IMAGE_DIR = str(Path(BUILD_DIR) \/ 'html' \/ '_images')$/;"	v
BYUReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import BYUReader as BYUReader$/;"	i
BYUReader	build/lib/pyvista/core/utilities/reader.py	/^class BYUReader(BaseReader):$/;"	c
BYUReader	pyvista/core/utilities/__init__.py	/^from .reader import BYUReader as BYUReader$/;"	i
BYUReader	pyvista/core/utilities/reader.py	/^class BYUReader(BaseReader):$/;"	c
BackgroundPlotter	build/lib/pyvista/plotting/__init__.py	/^class BackgroundPlotter:  # numpydoc ignore=PR01$/;"	c
BackgroundPlotter	pyvista/plotting/__init__.py	/^class BackgroundPlotter:  # numpydoc ignore=PR01$/;"	c
BackgroundPlotter	tests/plotting/test_plotting.py	/^from pyvista.plotting import BackgroundPlotter$/;"	i
BackgroundRenderer	build/lib/pyvista/plotting/background_renderer.py	/^class BackgroundRenderer(Renderer):$/;"	c
BackgroundRenderer	build/lib/pyvista/plotting/renderers.py	/^from .background_renderer import BackgroundRenderer$/;"	i
BackgroundRenderer	pyvista/plotting/background_renderer.py	/^class BackgroundRenderer(Renderer):$/;"	c
BackgroundRenderer	pyvista/plotting/renderers.py	/^from .background_renderer import BackgroundRenderer$/;"	i
BarPlot	build/lib/pyvista/plotting/charts.py	/^class BarPlot(_MultiCompPlot, _vtk.vtkPlotBar):$/;"	c
BarPlot	pyvista/plotting/charts.py	/^class BarPlot(_MultiCompPlot, _vtk.vtkPlotBar):$/;"	c
BasePlotter	build/lib/pyvista/plotting/__init__.py	/^from .plotter import BasePlotter as BasePlotter$/;"	i
BasePlotter	build/lib/pyvista/plotting/plotter.py	/^class BasePlotter(PickingHelper, WidgetHelper):$/;"	c
BasePlotter	pyvista/plotting/__init__.py	/^from .plotter import BasePlotter as BasePlotter$/;"	i
BasePlotter	pyvista/plotting/plotter.py	/^class BasePlotter(PickingHelper, WidgetHelper):$/;"	c
BasePlotter	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import BasePlotter  # noqa: F401$/;"	i
BaseReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import BaseReader as BaseReader$/;"	i
BaseReader	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.core.utilities.reader import BaseReader$/;"	i
BaseReader	build/lib/pyvista/core/utilities/reader.py	/^class BaseReader:$/;"	c
BaseReader	pyvista/core/utilities/__init__.py	/^from .reader import BaseReader as BaseReader$/;"	i
BaseReader	pyvista/core/utilities/fileio.py	/^    from pyvista.core.utilities.reader import BaseReader$/;"	i
BaseReader	pyvista/core/utilities/reader.py	/^class BaseReader:$/;"	c
BaseVTKReader	build/lib/pyvista/core/utilities/reader.py	/^class BaseVTKReader(ABC):$/;"	c
BaseVTKReader	pyvista/core/utilities/reader.py	/^class BaseVTKReader(ABC):$/;"	c
BaseViewer	build/lib/pyvista/trame/ui/__init__.py	/^    from .base_viewer import BaseViewer$/;"	i
BaseViewer	build/lib/pyvista/trame/ui/base_viewer.py	/^class BaseViewer:$/;"	c
BaseViewer	build/lib/pyvista/trame/ui/vuetify2.py	/^from .base_viewer import BaseViewer$/;"	i
BaseViewer	build/lib/pyvista/trame/ui/vuetify3.py	/^from .base_viewer import BaseViewer$/;"	i
BaseViewer	pyvista/trame/ui/__init__.py	/^    from .base_viewer import BaseViewer$/;"	i
BaseViewer	pyvista/trame/ui/base_viewer.py	/^class BaseViewer:$/;"	c
BaseViewer	pyvista/trame/ui/vuetify2.py	/^from .base_viewer import BaseViewer$/;"	i
BaseViewer	pyvista/trame/ui/vuetify3.py	/^from .base_viewer import BaseViewer$/;"	i
BiQuadraticQuadraticHexahedron	build/lib/pyvista/examples/cells.py	/^def BiQuadraticQuadraticHexahedron() -> UnstructuredGrid:$/;"	f
BiQuadraticQuadraticHexahedron	pyvista/examples/cells.py	/^def BiQuadraticQuadraticHexahedron() -> UnstructuredGrid:$/;"	f
BiQuadraticQuadraticWedge	build/lib/pyvista/examples/cells.py	/^def BiQuadraticQuadraticWedge() -> UnstructuredGrid:$/;"	f
BiQuadraticQuadraticWedge	pyvista/examples/cells.py	/^def BiQuadraticQuadraticWedge() -> UnstructuredGrid:$/;"	f
BiQuadraticQuadrilateral	build/lib/pyvista/examples/cells.py	/^def BiQuadraticQuadrilateral() -> UnstructuredGrid:$/;"	f
BiQuadraticQuadrilateral	pyvista/examples/cells.py	/^def BiQuadraticQuadrilateral() -> UnstructuredGrid:$/;"	f
BiQuadraticTriangle	build/lib/pyvista/examples/cells.py	/^def BiQuadraticTriangle() -> UnstructuredGrid:$/;"	f
BiQuadraticTriangle	pyvista/examples/cells.py	/^def BiQuadraticTriangle() -> UnstructuredGrid:$/;"	f
BinaryMarchingCubesReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import BinaryMarchingCubesReader as BinaryMarchingCubesReader$/;"	i
BinaryMarchingCubesReader	build/lib/pyvista/core/utilities/reader.py	/^class BinaryMarchingCubesReader(BaseReader):$/;"	c
BinaryMarchingCubesReader	pyvista/core/utilities/__init__.py	/^from .reader import BinaryMarchingCubesReader as BinaryMarchingCubesReader$/;"	i
BinaryMarchingCubesReader	pyvista/core/utilities/reader.py	/^class BinaryMarchingCubesReader(BaseReader):$/;"	c
BlockAttributes	build/lib/pyvista/plotting/__init__.py	/^from .composite_mapper import BlockAttributes as BlockAttributes$/;"	i
BlockAttributes	build/lib/pyvista/plotting/composite_mapper.py	/^class BlockAttributes:$/;"	c
BlockAttributes	pyvista/plotting/__init__.py	/^from .composite_mapper import BlockAttributes as BlockAttributes$/;"	i
BlockAttributes	pyvista/plotting/composite_mapper.py	/^class BlockAttributes:$/;"	c
BlockAttributes	tests/plotting/mappers/test_composite_mapper.py	/^from pyvista.plotting.composite_mapper import BlockAttributes$/;"	i
BoundsTuple	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import BoundsTuple as BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/core/_typing_core/_aliases.py	/^class BoundsTuple(NamedTuple):$/;"	c
BoundsTuple	build/lib/pyvista/core/cell.py	/^from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/core/composite.py	/^from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/core/dataset.py	/^from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/core/pointset.py	/^    from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/_typing.py	/^from pyvista.core._typing_core import BoundsTuple as BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/cube_axes_actor.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/plotter.py	/^    from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/prop3d.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/renderer.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	build/lib/pyvista/plotting/text.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/core/_typing_core/__init__.py	/^from ._aliases import BoundsTuple as BoundsTuple$/;"	i
BoundsTuple	pyvista/core/_typing_core/_aliases.py	/^class BoundsTuple(NamedTuple):$/;"	c
BoundsTuple	pyvista/core/cell.py	/^from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/core/composite.py	/^from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/core/dataset.py	/^from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/core/pointset.py	/^    from ._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/_typing.py	/^from pyvista.core._typing_core import BoundsTuple as BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/axes_assembly.py	/^from pyvista import BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/cube_axes_actor.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/mapper.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/plotter.py	/^    from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/prop3d.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/renderer.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
BoundsTuple	pyvista/plotting/text.py	/^from pyvista.core._typing_core import BoundsTuple$/;"	i
Box	build/lib/pyvista/core/composite.py	/^from .utilities.geometric_objects import Box$/;"	i
Box	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Box as Box$/;"	i
Box	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Box($/;"	f
Box	pyvista/core/composite.py	/^from .utilities.geometric_objects import Box$/;"	i
Box	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Box as Box$/;"	i
Box	pyvista/core/utilities/geometric_objects.py	/^def Box($/;"	f
BoxPlot	build/lib/pyvista/plotting/charts.py	/^class BoxPlot(_MultiCompPlot, _vtk.vtkPlotBox):$/;"	c
BoxPlot	pyvista/plotting/charts.py	/^class BoxPlot(_MultiCompPlot, _vtk.vtkPlotBox):$/;"	c
BoxSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import BoxSource as BoxSource$/;"	i
BoxSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import BoxSource$/;"	i
BoxSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class BoxSource(_vtk.vtkTessellatedBoxSource):$/;"	c
BoxSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import BoxSource as BoxSource$/;"	i
BoxSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import BoxSource$/;"	i
BoxSource	pyvista/core/utilities/geometric_sources.py	/^class BoxSource(_vtk.vtkTessellatedBoxSource):$/;"	c
Brush	build/lib/pyvista/plotting/charts.py	/^class Brush(_vtkWrapper, _vtk.vtkBrush):$/;"	c
Brush	pyvista/plotting/charts.py	/^class Brush(_vtkWrapper, _vtk.vtkBrush):$/;"	c
Builder	build/lib/pyvista/ext/coverage.py	/^from sphinx.builders import Builder$/;"	i
Builder	pyvista/ext/coverage.py	/^from sphinx.builders import Builder$/;"	i
BuiltinCarousel	doc/source/make_tables.py	/^class BuiltinCarousel(DatasetGalleryCarousel):$/;"	c
CACHE_VERSION	build/lib/pyvista/examples/downloads.py	/^CACHE_VERSION = 3$/;"	v
CACHE_VERSION	pyvista/examples/downloads.py	/^CACHE_VERSION = 3$/;"	v
CAMERA_LIGHT	build/lib/pyvista/plotting/lights.py	/^    CAMERA_LIGHT = 2$/;"	v	class:LightType
CAMERA_LIGHT	build/lib/pyvista/plotting/lights.py	/^    CAMERA_LIGHT = LightType.CAMERA_LIGHT$/;"	v	class:Light
CAMERA_LIGHT	pyvista/plotting/lights.py	/^    CAMERA_LIGHT = 2$/;"	v	class:LightType
CAMERA_LIGHT	pyvista/plotting/lights.py	/^    CAMERA_LIGHT = LightType.CAMERA_LIGHT$/;"	v	class:Light
CAROUSEL_LIST	doc/source/make_tables.py	/^CAROUSEL_LIST = [$/;"	v
CASE_0	tests/core/test_utilities.py	/^CASE_0 = (  # coincidental points$/;"	v
CASE_1	tests/core/test_utilities.py	/^CASE_1 = (  # non-coincidental points$/;"	v
CASE_2	tests/core/test_utilities.py	/^CASE_2 = (  # non-collinear points$/;"	v
CASE_3	tests/core/test_utilities.py	/^CASE_3 = (  # non-coplanar points$/;"	v
CELL	build/lib/pyvista/core/utilities/arrays.py	/^    CELL = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_CELLS)$/;"	v	class:FieldAssociation
CELL	build/lib/pyvista/plotting/opts.py	/^    CELL = (1, 'Cell')$/;"	v	class:ElementType
CELL	build/lib/pyvista/plotting/opts.py	/^    CELL = (1, 'Cell')$/;"	v	class:PickerType
CELL	pyvista/core/utilities/arrays.py	/^    CELL = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_CELLS)$/;"	v	class:FieldAssociation
CELL	pyvista/plotting/opts.py	/^    CELL = (1, 'Cell')$/;"	v	class:ElementType
CELL	pyvista/plotting/opts.py	/^    CELL = (1, 'Cell')$/;"	v	class:PickerType
CELL_LIST	tests/core/test_cells.py	/^CELL_LIST = [3, 0, 1, 2, 3, 3, 4, 5]$/;"	v
CELL_QUALITY	tests/core/test_dataobject_filters.py	/^CELL_QUALITY = 'CellQuality'$/;"	v
CELL_QUALITY_DIR	doc/source/make_tables.py	/^CELL_QUALITY_DIR = 'api\/core\/cell_quality'$/;"	v
CELL_QUALITY_IDS	tests/core/test_utilities.py	/^CELL_QUALITY_IDS = [f'{info.cell_type.name}-{info.quality_measure}' for info in _CELL_QUALITY_INFO]$/;"	v
CGNSReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import CGNSReader as CGNSReader$/;"	i
CGNSReader	build/lib/pyvista/core/utilities/reader.py	/^class CGNSReader(BaseReader, PointCellDataSelection):$/;"	c
CGNSReader	pyvista/core/utilities/__init__.py	/^from .reader import CGNSReader as CGNSReader$/;"	i
CGNSReader	pyvista/core/utilities/reader.py	/^class CGNSReader(BaseReader, PointCellDataSelection):$/;"	c
CHANNEL_NAMES	build/lib/pyvista/plotting/colors.py	/^    CHANNEL_NAMES = ($/;"	v	class:Color
CHANNEL_NAMES	pyvista/plotting/colors.py	/^    CHANNEL_NAMES = ($/;"	v	class:Color
CHARTS_IMAGE_DIR	doc/source/make_tables.py	/^CHARTS_IMAGE_DIR = 'images\/charts'$/;"	v
CHARTS_TABLE_DIR	doc/source/make_tables.py	/^CHARTS_TABLE_DIR = 'api\/plotting\/charts'$/;"	v
CI_WINDOWS	tests/plotting/test_plotting.py	/^CI_WINDOWS = os.environ.get('CI_WINDOWS', 'false').lower() == 'true'$/;"	v
CLAMP_TO_BORDER	build/lib/pyvista/plotting/texture.py	/^        CLAMP_TO_BORDER = (3, 'Clamp to border')$/;"	v	class:Texture.WrapType
CLAMP_TO_BORDER	pyvista/plotting/texture.py	/^        CLAMP_TO_BORDER = (3, 'Clamp to border')$/;"	v	class:Texture.WrapType
CLAMP_TO_EDGE	build/lib/pyvista/plotting/texture.py	/^        CLAMP_TO_EDGE = (0, 'Clamp to edge')$/;"	v	class:Texture.WrapType
CLAMP_TO_EDGE	pyvista/plotting/texture.py	/^        CLAMP_TO_EDGE = (0, 'Clamp to edge')$/;"	v	class:Texture.WrapType
CLASS_READERS	build/lib/pyvista/core/utilities/reader.py	/^CLASS_READERS = {$/;"	v
CLASS_READERS	pyvista/core/utilities/reader.py	/^CLASS_READERS = {$/;"	v
CLOSED_PLOTTER_ERROR	build/lib/pyvista/trame/jupyter.py	/^from pyvista.trame.views import CLOSED_PLOTTER_ERROR$/;"	i
CLOSED_PLOTTER_ERROR	build/lib/pyvista/trame/views.py	/^CLOSED_PLOTTER_ERROR = 'The render window for this plotter has been destroyed. Do not call `show()` for the plotter before passing to trame.'$/;"	v
CLOSED_PLOTTER_ERROR	pyvista/trame/jupyter.py	/^from pyvista.trame.views import CLOSED_PLOTTER_ERROR$/;"	i
CLOSED_PLOTTER_ERROR	pyvista/trame/views.py	/^CLOSED_PLOTTER_ERROR = 'The render window for this plotter has been destroyed. Do not call `show()` for the plotter before passing to trame.'$/;"	v
CODE_DIRS	Makefile	/^CODE_DIRS ?= doc examples examples_trame pyvista tests$/;"	m
CODE_FILES	Makefile	/^CODE_FILES ?= *.py *.rst *.md$/;"	m
COLORMAPS	tests/plotting/test_colors.py	/^COLORMAPS = ['Greys']$/;"	v
COLORS_DICT	tests/core/test_dataset_filters.py	/^COLORS_DICT = {0: 'red', 1: (0, 0, 0), 2: 'blue', 3: (1.0, 1.0, 1.0), 4: 'orange', 5: 'green'}$/;"	v
COLORS_DICT_RGB	tests/core/test_dataset_filters.py	/^COLORS_DICT_RGB = [pv.Color(c).int_rgb for c in COLORS_DICT.values()]$/;"	v
COLORS_LIST	tests/core/test_dataset_filters.py	/^COLORS_LIST = [BLACK, WHITE, RED, GREEN, BLUE]$/;"	v
COLORS_TABLE_DIR	doc/source/make_tables.py	/^COLORS_TABLE_DIR = 'api\/utilities\/color_table'$/;"	v
COLOR_SCHEMES	build/lib/pyvista/plotting/charts.py	/^from .colors import COLOR_SCHEMES$/;"	i
COLOR_SCHEMES	build/lib/pyvista/plotting/colors.py	/^COLOR_SCHEMES = {$/;"	v
COLOR_SCHEMES	pyvista/plotting/charts.py	/^from .colors import COLOR_SCHEMES$/;"	i
COLOR_SCHEMES	pyvista/plotting/colors.py	/^COLOR_SCHEMES = {$/;"	v
COLOR_SCHEMES	tests/plotting/test_charts.py	/^from pyvista.plotting.colors import COLOR_SCHEMES$/;"	i
CONE	build/lib/pyvista/plotting/axes_actor.py	/^        CONE = 0$/;"	v	class:AxesActor.TipType
CONE	pyvista/plotting/axes_actor.py	/^        CONE = 0$/;"	v	class:AxesActor.TipType
CONNECTIVITY_LIST	tests/core/test_cells.py	/^CONNECTIVITY_LIST = [0, 1, 2, 3, 4, 5]$/;"	v
CONVEX_POINT_SET	build/lib/pyvista/core/celltype.py	/^    CONVEX_POINT_SET = _CELL_TYPE_INFO['CONVEX_POINT_SET']$/;"	v	class:CellType
CONVEX_POINT_SET	build/lib/pyvista/core/celltype.py	/^    CONVEX_POINT_SET=_CellTypeTuple($/;"	v	class:_CellTypeTuple
CONVEX_POINT_SET	pyvista/core/celltype.py	/^    CONVEX_POINT_SET = _CELL_TYPE_INFO['CONVEX_POINT_SET']$/;"	v	class:CellType
CONVEX_POINT_SET	pyvista/core/celltype.py	/^    CONVEX_POINT_SET=_CellTypeTuple($/;"	v	class:_CellTypeTuple
CSS4_COLORS	tests/plotting/test_colors.py	/^from matplotlib.colors import CSS4_COLORS$/;"	i
CUBIC_LINE	build/lib/pyvista/core/celltype.py	/^    CUBIC_LINE = _CELL_TYPE_INFO['CUBIC_LINE']$/;"	v	class:CellType
CUBIC_LINE	build/lib/pyvista/core/celltype.py	/^    CUBIC_LINE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
CUBIC_LINE	pyvista/core/celltype.py	/^    CUBIC_LINE = _CELL_TYPE_INFO['CUBIC_LINE']$/;"	v	class:CellType
CUBIC_LINE	pyvista/core/celltype.py	/^    CUBIC_LINE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
CYAN	doc/source/make_tables.py	/^    CYAN = auto()$/;"	v	class:ColorClassification
CYAN_UPPER_BOUND	doc/source/make_tables.py	/^CYAN_UPPER_BOUND = 187 \/ _360$/;"	v
CYLINDER	build/lib/pyvista/plotting/axes_actor.py	/^        CYLINDER = 0$/;"	v	class:AxesActor.ShaftType
CYLINDER	pyvista/plotting/axes_actor.py	/^        CYLINDER = 0$/;"	v	class:AxesActor.ShaftType
CallBack	tests/plotting/test_render_window_interactor.py	/^    class CallBack:$/;"	c	function:test_release_button_observers
CallExpr	build/lib/pyvista/typing/mypy_plugin.py	/^    from mypy.nodes import CallExpr$/;"	i
CallExpr	pyvista/typing/mypy_plugin.py	/^    from mypy.nodes import CallExpr$/;"	i
Callable	build/lib/pyvista/core/dataset.py	/^    from collections.abc import Callable$/;"	i
Callable	build/lib/pyvista/core/filters/composite.py	/^    from typing import Callable$/;"	i
Callable	build/lib/pyvista/core/filters/data_set.py	/^from typing import Callable$/;"	i
Callable	build/lib/pyvista/core/filters/image_data.py	/^from typing import Callable$/;"	i
Callable	build/lib/pyvista/core/utilities/reader.py	/^    from collections.abc import Callable$/;"	i
Callable	build/lib/pyvista/examples/_dataset_loader.py	/^    from collections.abc import Callable$/;"	i
Callable	build/lib/pyvista/ext/plot_directive.py	/^    from collections.abc import Callable$/;"	i
Callable	build/lib/pyvista/plotting/themes.py	/^    from collections.abc import Callable$/;"	i
Callable	build/lib/pyvista/typing/mypy_plugin.py	/^    from typing import Callable$/;"	i
Callable	doc/source/make_tables.py	/^from collections.abc import Callable$/;"	i
Callable	pyvista/core/dataset.py	/^    from collections.abc import Callable$/;"	i
Callable	pyvista/core/filters/composite.py	/^    from typing import Callable$/;"	i
Callable	pyvista/core/filters/data_set.py	/^from typing import Callable$/;"	i
Callable	pyvista/core/filters/image_data.py	/^from typing import Callable$/;"	i
Callable	pyvista/core/utilities/reader.py	/^    from collections.abc import Callable$/;"	i
Callable	pyvista/examples/_dataset_loader.py	/^    from collections.abc import Callable$/;"	i
Callable	pyvista/ext/plot_directive.py	/^    from collections.abc import Callable$/;"	i
Callable	pyvista/plotting/themes.py	/^    from collections.abc import Callable$/;"	i
Callable	pyvista/typing/mypy_plugin.py	/^    from typing import Callable$/;"	i
Callable	tests/examples/test_dataset_loader.py	/^    from collections.abc import Callable$/;"	i
Callable	tests/plotting/test_plotting.py	/^    from collections.abc import Callable$/;"	i
Camera	build/lib/pyvista/plotting/__init__.py	/^from .camera import Camera as Camera$/;"	i
Camera	build/lib/pyvista/plotting/camera.py	/^class Camera(_vtk.vtkCamera):$/;"	c
Camera	build/lib/pyvista/plotting/plotter.py	/^from .camera import Camera$/;"	i
Camera	build/lib/pyvista/plotting/renderer.py	/^from .camera import Camera$/;"	i
Camera	pyvista/plotting/__init__.py	/^from .camera import Camera as Camera$/;"	i
Camera	pyvista/plotting/camera.py	/^class Camera(_vtk.vtkCamera):$/;"	c
Camera	pyvista/plotting/plotter.py	/^from .camera import Camera$/;"	i
Camera	pyvista/plotting/renderer.py	/^from .camera import Camera$/;"	i
CameraPosition	build/lib/pyvista/plotting/__init__.py	/^from .renderer import CameraPosition as CameraPosition$/;"	i
CameraPosition	build/lib/pyvista/plotting/renderer.py	/^class CameraPosition:$/;"	c
CameraPosition	pyvista/plotting/__init__.py	/^from .renderer import CameraPosition as CameraPosition$/;"	i
CameraPosition	pyvista/plotting/renderer.py	/^class CameraPosition:$/;"	c
Capsule	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Capsule as Capsule$/;"	i
Capsule	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Capsule($/;"	f
Capsule	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Capsule as Capsule$/;"	i
Capsule	pyvista/core/utilities/geometric_objects.py	/^def Capsule($/;"	f
CapsuleSource	build/lib/pyvista/core/utilities/__init__.py	/^    from .geometric_sources import CapsuleSource as CapsuleSource$/;"	i
CapsuleSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from .geometric_sources import CapsuleSource$/;"	i
CapsuleSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^    class CapsuleSource(_vtk.vtkCapsuleSource):$/;"	c
CapsuleSource	pyvista/core/utilities/__init__.py	/^    from .geometric_sources import CapsuleSource as CapsuleSource$/;"	i
CapsuleSource	pyvista/core/utilities/geometric_objects.py	/^    from .geometric_sources import CapsuleSource$/;"	i
CapsuleSource	pyvista/core/utilities/geometric_sources.py	/^    class CapsuleSource(_vtk.vtkCapsuleSource):$/;"	c
Case	tests/core/test_validation.py	/^class Case(NamedTuple):$/;"	c
CasesTransformApply	tests/core/test_utilities.py	/^class CasesTransformApply:$/;"	c
CategoryBadge	doc/source/make_tables.py	/^class CategoryBadge(_BaseDatasetBadge):$/;"	c
Cell	build/lib/pyvista/core/__init__.py	/^from .cell import Cell as Cell$/;"	i
Cell	build/lib/pyvista/core/cell.py	/^class Cell(DataObject, _vtk.vtkGenericCell):$/;"	c
Cell	pyvista/core/__init__.py	/^from .cell import Cell as Cell$/;"	i
Cell	pyvista/core/cell.py	/^class Cell(DataObject, _vtk.vtkGenericCell):$/;"	c
Cell	tests/core/test_cells.py	/^from pyvista import Cell$/;"	i
CellArray	build/lib/pyvista/core/__init__.py	/^from .cell import CellArray as CellArray$/;"	i
CellArray	build/lib/pyvista/core/cell.py	/^class CellArray(_vtk.vtkCellArray):$/;"	c
CellArray	build/lib/pyvista/core/pointset.py	/^from .cell import CellArray$/;"	i
CellArray	pyvista/core/__init__.py	/^from .cell import CellArray as CellArray$/;"	i
CellArray	pyvista/core/cell.py	/^class CellArray(_vtk.vtkCellArray):$/;"	c
CellArray	pyvista/core/pointset.py	/^from .cell import CellArray$/;"	i
CellArrayLike	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import CellArrayLike as CellArrayLike$/;"	i
CellArrayLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^CellArrayLike = Union[CellsLike, _vtk.vtkCellArray]$/;"	v
CellArrayLike	build/lib/pyvista/core/pointset.py	/^    from ._typing_core import CellArrayLike$/;"	i
CellArrayLike	pyvista/core/_typing_core/__init__.py	/^from ._aliases import CellArrayLike as CellArrayLike$/;"	i
CellArrayLike	pyvista/core/_typing_core/_aliases.py	/^CellArrayLike = Union[CellsLike, _vtk.vtkCellArray]$/;"	v
CellArrayLike	pyvista/core/pointset.py	/^    from ._typing_core import CellArrayLike$/;"	i
CellLiteral	build/lib/pyvista/core/composite.py	/^from .utilities.arrays import CellLiteral$/;"	i
CellLiteral	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import CellLiteral$/;"	i
CellLiteral	build/lib/pyvista/core/utilities/arrays.py	/^CellLiteral = Literal[FieldAssociation.CELL, 'cell']$/;"	v
CellLiteral	build/lib/pyvista/plotting/utilities/algorithms.py	/^    from pyvista.core.utilities.arrays import CellLiteral$/;"	i
CellLiteral	pyvista/core/composite.py	/^from .utilities.arrays import CellLiteral$/;"	i
CellLiteral	pyvista/core/dataset.py	/^from .utilities.arrays import CellLiteral$/;"	i
CellLiteral	pyvista/core/utilities/arrays.py	/^CellLiteral = Literal[FieldAssociation.CELL, 'cell']$/;"	v
CellLiteral	pyvista/plotting/utilities/algorithms.py	/^    from pyvista.core.utilities.arrays import CellLiteral$/;"	i
CellQualityInfo	build/lib/pyvista/core/utilities/cell_quality.py	/^class CellQualityInfo:$/;"	c
CellQualityInfo	pyvista/core/utilities/cell_quality.py	/^class CellQualityInfo:$/;"	c
CellQualityInfo	tests/core/test_utilities.py	/^from pyvista.core.utilities.cell_quality import CellQualityInfo$/;"	i
CellQualityInfoTable	doc/source/make_tables.py	/^class CellQualityInfoTable(DocTable):$/;"	c
CellQualityInfoTableHEXAHEDRON	doc/source/make_tables.py	/^class CellQualityInfoTableHEXAHEDRON(CellQualityInfoTable):$/;"	c
CellQualityInfoTablePYRAMID	doc/source/make_tables.py	/^class CellQualityInfoTablePYRAMID(CellQualityInfoTable):$/;"	c
CellQualityInfoTableQUAD	doc/source/make_tables.py	/^class CellQualityInfoTableQUAD(CellQualityInfoTable):$/;"	c
CellQualityInfoTableTETRA	doc/source/make_tables.py	/^class CellQualityInfoTableTETRA(CellQualityInfoTable):$/;"	c
CellQualityInfoTableTRIANGLE	doc/source/make_tables.py	/^class CellQualityInfoTableTRIANGLE(CellQualityInfoTable):$/;"	c
CellQualityInfoTableWEDGE	doc/source/make_tables.py	/^class CellQualityInfoTableWEDGE(CellQualityInfoTable):$/;"	c
CellQualityMeasuresTable	doc/source/make_tables.py	/^class CellQualityMeasuresTable(DocTable):$/;"	c
CellSizeError	build/lib/pyvista/core/cell.py	/^from .errors import CellSizeError$/;"	i
CellSizeError	build/lib/pyvista/core/errors.py	/^class CellSizeError(ValueError):$/;"	c
CellSizeError	build/lib/pyvista/core/pointset.py	/^from .errors import CellSizeError$/;"	i
CellSizeError	pyvista/core/cell.py	/^from .errors import CellSizeError$/;"	i
CellSizeError	pyvista/core/errors.py	/^class CellSizeError(ValueError):$/;"	c
CellSizeError	pyvista/core/pointset.py	/^from .errors import CellSizeError$/;"	i
CellSizeError	tests/core/test_grid.py	/^from pyvista.core.errors import CellSizeError$/;"	i
CellSizeError	tests/core/test_polydata.py	/^from pyvista.core.errors import CellSizeError$/;"	i
CellType	build/lib/pyvista/core/__init__.py	/^from .celltype import CellType as CellType$/;"	i
CellType	build/lib/pyvista/core/cell.py	/^from .celltype import CellType$/;"	i
CellType	build/lib/pyvista/core/celltype.py	/^class CellType(IntEnum):$/;"	c
CellType	build/lib/pyvista/core/pointset.py	/^from .celltype import CellType$/;"	i
CellType	build/lib/pyvista/core/utilities/cell_quality.py	/^from pyvista.core.celltype import CellType$/;"	i
CellType	build/lib/pyvista/examples/cells.py	/^from pyvista import CellType$/;"	i
CellType	examples/00-load/create_unstructured_surface.py	/^from pyvista import CellType$/;"	i
CellType	examples/01-filter/extract_surface.py	/^from pyvista import CellType$/;"	i
CellType	pyvista/core/__init__.py	/^from .celltype import CellType as CellType$/;"	i
CellType	pyvista/core/cell.py	/^from .celltype import CellType$/;"	i
CellType	pyvista/core/celltype.py	/^class CellType(IntEnum):$/;"	c
CellType	pyvista/core/pointset.py	/^from .celltype import CellType$/;"	i
CellType	pyvista/core/utilities/cell_quality.py	/^from pyvista.core.celltype import CellType$/;"	i
CellType	pyvista/examples/cells.py	/^from pyvista import CellType$/;"	i
CellType	tests/core/test_cells.py	/^from pyvista import CellType$/;"	i
CellType	tests/core/test_dataset_filters.py	/^from pyvista.core.celltype import CellType$/;"	i
CellType	tests/core/test_grid.py	/^from pyvista import CellType$/;"	i
CellType	tests/examples/test_cell_examples.py	/^from pyvista import CellType$/;"	i
CellTypeBadge	doc/source/make_tables.py	/^class CellTypeBadge(_BaseDatasetBadge):$/;"	c
CellsLike	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import CellsLike as CellsLike$/;"	i
CellsLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^CellsLike = Union[MatrixLike[int], VectorLike[int]]$/;"	v
CellsLike	build/lib/pyvista/core/cell.py	/^    from ._typing_core import CellsLike$/;"	i
CellsLike	pyvista/core/_typing_core/__init__.py	/^from ._aliases import CellsLike as CellsLike$/;"	i
CellsLike	pyvista/core/_typing_core/_aliases.py	/^CellsLike = Union[MatrixLike[int], VectorLike[int]]$/;"	v
CellsLike	pyvista/core/cell.py	/^    from ._typing_core import CellsLike$/;"	i
Chart	build/lib/pyvista/plotting/__init__.py	/^from ._typing import Chart as Chart$/;"	i
Chart	build/lib/pyvista/plotting/_typing.py	/^Chart = Union['Chart2D', 'ChartBox', 'ChartPie', 'ChartMPL']$/;"	v
Chart	build/lib/pyvista/plotting/charts.py	/^    from ._typing import Chart$/;"	i
Chart	pyvista/plotting/__init__.py	/^from ._typing import Chart as Chart$/;"	i
Chart	pyvista/plotting/_typing.py	/^Chart = Union['Chart2D', 'ChartBox', 'ChartPie', 'ChartMPL']$/;"	v
Chart	pyvista/plotting/charts.py	/^    from ._typing import Chart$/;"	i
Chart2D	build/lib/pyvista/plotting/__init__.py	/^from .charts import Chart2D as Chart2D$/;"	i
Chart2D	build/lib/pyvista/plotting/_typing.py	/^    from .charts import Chart2D as Chart2D$/;"	i
Chart2D	build/lib/pyvista/plotting/charts.py	/^class Chart2D(_Chart, _vtk.vtkChartXY):$/;"	c
Chart2D	pyvista/plotting/__init__.py	/^from .charts import Chart2D as Chart2D$/;"	i
Chart2D	pyvista/plotting/_typing.py	/^    from .charts import Chart2D as Chart2D$/;"	i
Chart2D	pyvista/plotting/charts.py	/^class Chart2D(_Chart, _vtk.vtkChartXY):$/;"	c
ChartBox	build/lib/pyvista/plotting/__init__.py	/^from .charts import ChartBox as ChartBox$/;"	i
ChartBox	build/lib/pyvista/plotting/_typing.py	/^    from .charts import ChartBox as ChartBox$/;"	i
ChartBox	build/lib/pyvista/plotting/charts.py	/^class ChartBox(_Chart, _vtk.vtkChartBox):$/;"	c
ChartBox	pyvista/plotting/__init__.py	/^from .charts import ChartBox as ChartBox$/;"	i
ChartBox	pyvista/plotting/_typing.py	/^    from .charts import ChartBox as ChartBox$/;"	i
ChartBox	pyvista/plotting/charts.py	/^class ChartBox(_Chart, _vtk.vtkChartBox):$/;"	c
ChartMPL	build/lib/pyvista/plotting/__init__.py	/^from .charts import ChartMPL as ChartMPL$/;"	i
ChartMPL	build/lib/pyvista/plotting/_typing.py	/^    from .charts import ChartMPL as ChartMPL$/;"	i
ChartMPL	build/lib/pyvista/plotting/charts.py	/^class ChartMPL(_Chart, _vtk.vtkImageItem):$/;"	c
ChartMPL	pyvista/plotting/__init__.py	/^from .charts import ChartMPL as ChartMPL$/;"	i
ChartMPL	pyvista/plotting/_typing.py	/^    from .charts import ChartMPL as ChartMPL$/;"	i
ChartMPL	pyvista/plotting/charts.py	/^class ChartMPL(_Chart, _vtk.vtkImageItem):$/;"	c
ChartPie	build/lib/pyvista/plotting/__init__.py	/^from .charts import ChartPie as ChartPie$/;"	i
ChartPie	build/lib/pyvista/plotting/_typing.py	/^    from .charts import ChartPie as ChartPie$/;"	i
ChartPie	build/lib/pyvista/plotting/charts.py	/^class ChartPie(_Chart, _vtk.vtkChartPie):$/;"	c
ChartPie	pyvista/plotting/__init__.py	/^from .charts import ChartPie as ChartPie$/;"	i
ChartPie	pyvista/plotting/_typing.py	/^    from .charts import ChartPie as ChartPie$/;"	i
ChartPie	pyvista/plotting/charts.py	/^class ChartPie(_Chart, _vtk.vtkChartPie):$/;"	c
Charts	build/lib/pyvista/plotting/charts.py	/^class Charts:$/;"	c
Charts	build/lib/pyvista/plotting/renderer.py	/^from .charts import Charts$/;"	i
Charts	pyvista/plotting/charts.py	/^class Charts:$/;"	c
Charts	pyvista/plotting/renderer.py	/^from .charts import Charts$/;"	i
Circle	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Circle as Circle$/;"	i
Circle	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Circle(radius: float = 0.5, resolution: int = 100) -> PolyData:$/;"	f
Circle	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Circle as Circle$/;"	i
Circle	pyvista/core/utilities/geometric_objects.py	/^def Circle(radius: float = 0.5, resolution: int = 100) -> PolyData:$/;"	f
CircularArc	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import CircularArc as CircularArc$/;"	i
CircularArc	build/lib/pyvista/core/utilities/geometric_objects.py	/^def CircularArc($/;"	f
CircularArc	pyvista/core/utilities/__init__.py	/^from .geometric_objects import CircularArc as CircularArc$/;"	i
CircularArc	pyvista/core/utilities/geometric_objects.py	/^def CircularArc($/;"	f
CircularArcFromNormal	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import CircularArcFromNormal as CircularArcFromNormal$/;"	i
CircularArcFromNormal	build/lib/pyvista/core/utilities/geometric_objects.py	/^def CircularArcFromNormal($/;"	f
CircularArcFromNormal	pyvista/core/utilities/__init__.py	/^from .geometric_objects import CircularArcFromNormal as CircularArcFromNormal$/;"	i
CircularArcFromNormal	pyvista/core/utilities/geometric_objects.py	/^def CircularArcFromNormal($/;"	f
ClassDefContext	build/lib/pyvista/typing/mypy_plugin.py	/^    from mypy.plugin import ClassDefContext$/;"	i
ClassDefContext	pyvista/typing/mypy_plugin.py	/^    from mypy.plugin import ClassDefContext$/;"	i
ClassVar	build/lib/pyvista/core/dataobject.py	/^    from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/core/grid.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/core/pointset.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/core/utilities/geometric_sources.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/core/utilities/image_sources.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/core/utilities/misc.py	/^    from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/ext/plot_directive.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/plotting/actor.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/plotting/charts.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/plotting/renderer.py	/^from typing import ClassVar$/;"	i
ClassVar	build/lib/pyvista/plotting/text.py	/^    from typing import ClassVar$/;"	i
ClassVar	doc/source/make_tables.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/core/dataobject.py	/^    from typing import ClassVar$/;"	i
ClassVar	pyvista/core/grid.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/core/pointset.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/core/utilities/geometric_sources.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/core/utilities/image_sources.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/core/utilities/misc.py	/^    from typing import ClassVar$/;"	i
ClassVar	pyvista/ext/plot_directive.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/plotting/actor.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/plotting/charts.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/plotting/renderer.py	/^from typing import ClassVar$/;"	i
ClassVar	pyvista/plotting/text.py	/^    from typing import ClassVar$/;"	i
ClientFile	examples_trame/basic/file_viewer.py	/^from trame.app.file_upload import ClientFile$/;"	i
Color	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.plotting.colors import Color$/;"	i
Color	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista import Color$/;"	i
Color	build/lib/pyvista/plotting/__init__.py	/^from .colors import Color as Color$/;"	i
Color	build/lib/pyvista/plotting/_plotting.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/_property.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/_typing.py	/^    from .colors import Color as Color$/;"	i
Color	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.colors import Color$/;"	i
Color	build/lib/pyvista/plotting/charts.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/colors.py	/^class Color:$/;"	c
Color	build/lib/pyvista/plotting/composite_mapper.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/lights.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/lookup_table.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/mapper.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/plotter.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/renderer.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/scalar_bars.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/text.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/themes.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/tools.py	/^from .colors import Color$/;"	i
Color	build/lib/pyvista/plotting/widgets.py	/^from .colors import Color$/;"	i
Color	doc/source/make_tables.py	/^    from pyvista.plotting.colors import Color$/;"	i
Color	pyvista/core/_validation/validate.py	/^    from pyvista.plotting.colors import Color$/;"	i
Color	pyvista/core/filters/data_set.py	/^    from pyvista import Color$/;"	i
Color	pyvista/plotting/__init__.py	/^from .colors import Color as Color$/;"	i
Color	pyvista/plotting/_plotting.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/_property.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/_typing.py	/^    from .colors import Color as Color$/;"	i
Color	pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.colors import Color$/;"	i
Color	pyvista/plotting/charts.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/colors.py	/^class Color:$/;"	c
Color	pyvista/plotting/composite_mapper.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/lights.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/lookup_table.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/mapper.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/plotter.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/renderer.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/scalar_bars.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/text.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/themes.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/tools.py	/^from .colors import Color$/;"	i
Color	pyvista/plotting/widgets.py	/^from .colors import Color$/;"	i
Color	tests/plotting/test_lookup_table.py	/^from pyvista import Color$/;"	i
ColorClassification	doc/source/make_tables.py	/^class ColorClassification(StrEnum):$/;"	c
ColorClassificationTable	doc/source/make_tables.py	/^class ColorClassificationTable(ColorTable):$/;"	c
ColorLike	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/core/filters/data_set.py	/^        from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/__init__.py	/^from ._typing import ColorLike as ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/_typing.py	/^ColorLike = Union[$/;"	v
ColorLike	build/lib/pyvista/plotting/axes_assembly.py	/^    from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/colors.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/composite_mapper.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/lights.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/lookup_table.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/text.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	build/lib/pyvista/plotting/themes.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	pyvista/core/_validation/validate.py	/^    from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	pyvista/core/filters/data_set.py	/^        from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	pyvista/core/filters/data_set.py	/^    from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	pyvista/plotting/__init__.py	/^from ._typing import ColorLike as ColorLike$/;"	i
ColorLike	pyvista/plotting/_typing.py	/^ColorLike = Union[$/;"	v
ColorLike	pyvista/plotting/axes_assembly.py	/^    from pyvista.plotting._typing import ColorLike$/;"	i
ColorLike	pyvista/plotting/colors.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	pyvista/plotting/composite_mapper.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	pyvista/plotting/lights.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	pyvista/plotting/lookup_table.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	pyvista/plotting/text.py	/^    from ._typing import ColorLike$/;"	i
ColorLike	pyvista/plotting/themes.py	/^    from ._typing import ColorLike$/;"	i
ColorSchemeTable	doc/source/make_tables.py	/^class ColorSchemeTable(DocTable):$/;"	c
ColorTable	doc/source/make_tables.py	/^class ColorTable(DocTable):$/;"	c
ColorTableBLACK	doc/source/make_tables.py	/^class ColorTableBLACK(ColorClassificationTable):$/;"	c
ColorTableBLUE	doc/source/make_tables.py	/^class ColorTableBLUE(ColorClassificationTable):$/;"	c
ColorTableBROWN	doc/source/make_tables.py	/^class ColorTableBROWN(ColorClassificationTable):$/;"	c
ColorTableCYAN	doc/source/make_tables.py	/^class ColorTableCYAN(ColorClassificationTable):$/;"	c
ColorTableGRAY	doc/source/make_tables.py	/^class ColorTableGRAY(ColorClassificationTable):$/;"	c
ColorTableGREEN	doc/source/make_tables.py	/^class ColorTableGREEN(ColorClassificationTable):$/;"	c
ColorTableMAGENTA	doc/source/make_tables.py	/^class ColorTableMAGENTA(ColorClassificationTable):$/;"	c
ColorTableORANGE	doc/source/make_tables.py	/^class ColorTableORANGE(ColorClassificationTable):$/;"	c
ColorTableRED	doc/source/make_tables.py	/^class ColorTableRED(ColorClassificationTable):$/;"	c
ColorTableVIOLET	doc/source/make_tables.py	/^class ColorTableVIOLET(ColorClassificationTable):$/;"	c
ColorTableWHITE	doc/source/make_tables.py	/^class ColorTableWHITE(ColorClassificationTable):$/;"	c
ColorTableYELLOW	doc/source/make_tables.py	/^class ColorTableYELLOW(ColorClassificationTable):$/;"	c
ComponentModeTestCase	tests/core/test_dataset_filters.py	/^class ComponentModeTestCase(NamedTuple):$/;"	c
CompositeAttributes	build/lib/pyvista/plotting/__init__.py	/^from .composite_mapper import CompositeAttributes as CompositeAttributes$/;"	i
CompositeAttributes	build/lib/pyvista/plotting/composite_mapper.py	/^class CompositeAttributes(_vtk.vtkCompositeDataDisplayAttributes):$/;"	c
CompositeAttributes	pyvista/plotting/__init__.py	/^from .composite_mapper import CompositeAttributes as CompositeAttributes$/;"	i
CompositeAttributes	pyvista/plotting/composite_mapper.py	/^class CompositeAttributes(_vtk.vtkCompositeDataDisplayAttributes):$/;"	c
CompositeFilters	build/lib/pyvista/core/__init__.py	/^from .filters import CompositeFilters as CompositeFilters$/;"	i
CompositeFilters	build/lib/pyvista/core/composite.py	/^from .filters.composite import CompositeFilters$/;"	i
CompositeFilters	build/lib/pyvista/core/filters/__init__.py	/^from .composite import CompositeFilters$/;"	i
CompositeFilters	build/lib/pyvista/core/filters/composite.py	/^class CompositeFilters(DataObjectFilters):$/;"	c
CompositeFilters	pyvista/core/__init__.py	/^from .filters import CompositeFilters as CompositeFilters$/;"	i
CompositeFilters	pyvista/core/composite.py	/^from .filters.composite import CompositeFilters$/;"	i
CompositeFilters	pyvista/core/filters/__init__.py	/^from .composite import CompositeFilters$/;"	i
CompositeFilters	pyvista/core/filters/composite.py	/^class CompositeFilters(DataObjectFilters):$/;"	c
CompositePolyDataMapper	build/lib/pyvista/plotting/__init__.py	/^from .composite_mapper import CompositePolyDataMapper as CompositePolyDataMapper$/;"	i
CompositePolyDataMapper	build/lib/pyvista/plotting/composite_mapper.py	/^        if vtk_version_info >= (9, 3)$/;"	c
CompositePolyDataMapper	build/lib/pyvista/plotting/picking.py	/^from .composite_mapper import CompositePolyDataMapper$/;"	i
CompositePolyDataMapper	build/lib/pyvista/plotting/plotter.py	/^from .composite_mapper import CompositePolyDataMapper$/;"	i
CompositePolyDataMapper	pyvista/plotting/__init__.py	/^from .composite_mapper import CompositePolyDataMapper as CompositePolyDataMapper$/;"	i
CompositePolyDataMapper	pyvista/plotting/composite_mapper.py	/^        if vtk_version_info >= (9, 3)$/;"	c
CompositePolyDataMapper	pyvista/plotting/picking.py	/^from .composite_mapper import CompositePolyDataMapper$/;"	i
CompositePolyDataMapper	pyvista/plotting/plotter.py	/^from .composite_mapper import CompositePolyDataMapper$/;"	i
CompositePolyDataMapper	tests/plotting/mappers/test_composite_mapper.py	/^from pyvista.plotting.composite_mapper import CompositePolyDataMapper$/;"	i
Cone	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Cone as Cone$/;"	i
Cone	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Cone($/;"	f
Cone	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Cone as Cone$/;"	i
Cone	pyvista/core/utilities/geometric_objects.py	/^def Cone($/;"	f
ConeSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import ConeSource as ConeSource$/;"	i
ConeSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import ConeSource$/;"	i
ConeSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class ConeSource(_vtk.vtkConeSource):$/;"	c
ConeSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import ConeSource as ConeSource$/;"	i
ConeSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import ConeSource$/;"	i
ConeSource	pyvista/core/utilities/geometric_sources.py	/^class ConeSource(_vtk.vtkConeSource):$/;"	c
Container	build/lib/pyvista/core/_validation/check.py	/^from collections.abc import Container$/;"	i
Container	pyvista/core/_validation/check.py	/^from collections.abc import Container$/;"	i
CornerAnnotation	build/lib/pyvista/plotting/__init__.py	/^from .text import CornerAnnotation as CornerAnnotation$/;"	i
CornerAnnotation	build/lib/pyvista/plotting/plotter.py	/^from .text import CornerAnnotation$/;"	i
CornerAnnotation	build/lib/pyvista/plotting/text.py	/^class CornerAnnotation(_NameMixin, _vtk.vtkCornerAnnotation):$/;"	c
CornerAnnotation	pyvista/plotting/__init__.py	/^from .text import CornerAnnotation as CornerAnnotation$/;"	i
CornerAnnotation	pyvista/plotting/plotter.py	/^from .text import CornerAnnotation$/;"	i
CornerAnnotation	pyvista/plotting/text.py	/^class CornerAnnotation(_NameMixin, _vtk.vtkCornerAnnotation):$/;"	c
CoverageBuilder	build/lib/pyvista/ext/coverage.py	/^class CoverageBuilder(Builder):$/;"	c
CoverageBuilder	pyvista/ext/coverage.py	/^class CoverageBuilder(Builder):$/;"	c
CrinkleAlgorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^class CrinkleAlgorithm(_vtk.VTKPythonAlgorithmBase):$/;"	c
CrinkleAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class CrinkleAlgorithm(_vtk.VTKPythonAlgorithmBase):$/;"	c
Cube	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Cube as Cube$/;"	i
Cube	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Cube($/;"	f
Cube	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Cube as Cube$/;"	i
Cube	pyvista/core/utilities/geometric_objects.py	/^def Cube($/;"	f
CubeAxesActor	build/lib/pyvista/plotting/__init__.py	/^from .cube_axes_actor import CubeAxesActor as CubeAxesActor$/;"	i
CubeAxesActor	build/lib/pyvista/plotting/cube_axes_actor.py	/^class CubeAxesActor(_vtk.vtkCubeAxesActor):$/;"	c
CubeAxesActor	build/lib/pyvista/plotting/plotter.py	/^    from pyvista.plotting.cube_axes_actor import CubeAxesActor$/;"	i
CubeAxesActor	build/lib/pyvista/plotting/renderer.py	/^    from .cube_axes_actor import CubeAxesActor$/;"	i
CubeAxesActor	pyvista/plotting/__init__.py	/^from .cube_axes_actor import CubeAxesActor as CubeAxesActor$/;"	i
CubeAxesActor	pyvista/plotting/cube_axes_actor.py	/^class CubeAxesActor(_vtk.vtkCubeAxesActor):$/;"	c
CubeAxesActor	pyvista/plotting/plotter.py	/^    from pyvista.plotting.cube_axes_actor import CubeAxesActor$/;"	i
CubeAxesActor	pyvista/plotting/renderer.py	/^    from .cube_axes_actor import CubeAxesActor$/;"	i
CubeFacesSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import CubeFacesSource as CubeFacesSource$/;"	i
CubeFacesSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class CubeFacesSource(CubeSource):$/;"	c
CubeFacesSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import CubeFacesSource as CubeFacesSource$/;"	i
CubeFacesSource	pyvista/core/utilities/geometric_sources.py	/^class CubeFacesSource(CubeSource):$/;"	c
CubeSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import CubeSource as CubeSource$/;"	i
CubeSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import CubeSource$/;"	i
CubeSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class CubeSource(_vtk.vtkCubeSource):$/;"	c
CubeSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import CubeSource as CubeSource$/;"	i
CubeSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import CubeSource$/;"	i
CubeSource	pyvista/core/utilities/geometric_sources.py	/^class CubeSource(_vtk.vtkCubeSource):$/;"	c
CubemapCarousel	doc/source/make_tables.py	/^class CubemapCarousel(DatasetGalleryCarousel):$/;"	c
CubicLine	build/lib/pyvista/examples/cells.py	/^def CubicLine() -> UnstructuredGrid:$/;"	f
CubicLine	pyvista/examples/cells.py	/^def CubicLine() -> UnstructuredGrid:$/;"	f
CustomStyle	build/lib/pyvista/plotting/render_window_interactor.py	/^        class CustomStyle(getattr(vtkInteractionStyle, 'vtkInteractorStyle' + klass)):  # type: ignore[misc]$/;"	c	function:_style_factory._make_class
CustomStyle	pyvista/plotting/render_window_interactor.py	/^        class CustomStyle(getattr(vtkInteractionStyle, 'vtkInteractorStyle' + klass)):  # type: ignore[misc]$/;"	c	function:_style_factory._make_class
Cycler	build/lib/pyvista/plotting/colors.py	/^from cycler import Cycler$/;"	i
Cycler	pyvista/plotting/colors.py	/^from cycler import Cycler$/;"	i
Cylinder	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Cylinder as Cylinder$/;"	i
Cylinder	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Cylinder($/;"	f
Cylinder	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Cylinder as Cylinder$/;"	i
Cylinder	pyvista/core/utilities/geometric_objects.py	/^def Cylinder($/;"	f
Cylinder	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import Cylinder  # noqa: F401$/;"	i
CylinderSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import CylinderSource as CylinderSource$/;"	i
CylinderSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import CylinderSource$/;"	i
CylinderSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class CylinderSource(_vtk.vtkCylinderSource):$/;"	c
CylinderSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import CylinderSource as CylinderSource$/;"	i
CylinderSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import CylinderSource$/;"	i
CylinderSource	pyvista/core/utilities/geometric_sources.py	/^class CylinderSource(_vtk.vtkCylinderSource):$/;"	c
CylinderStructured	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import CylinderStructured as CylinderStructured$/;"	i
CylinderStructured	build/lib/pyvista/core/utilities/geometric_objects.py	/^def CylinderStructured($/;"	f
CylinderStructured	pyvista/core/utilities/__init__.py	/^from .geometric_objects import CylinderStructured as CylinderStructured$/;"	i
CylinderStructured	pyvista/core/utilities/geometric_objects.py	/^def CylinderStructured($/;"	f
DARK_YELLOW	build/lib/pyvista/plotting/affine_widget.py	/^DARK_YELLOW = (0.9647058823529412, 0.7450980392156863, 0)$/;"	v
DARK_YELLOW	pyvista/plotting/affine_widget.py	/^DARK_YELLOW = (0.9647058823529412, 0.7450980392156863, 0)$/;"	v
DARK_YELLOW	tests/plotting/test_widgets.py	/^from pyvista.plotting.affine_widget import DARK_YELLOW$/;"	i
DATASET_GALLERY_DIR	doc/source/make_tables.py	/^DATASET_GALLERY_DIR = 'api\/examples\/dataset-gallery'$/;"	v
DATASET_GALLERY_IMAGE_DIR	doc/source/make_tables.py	/^DATASET_GALLERY_IMAGE_DIR = '..\/_build\/plot_directive\/api\/examples\/_autosummary'$/;"	v
DATASET_GALLERY_IMAGE_EXT_DICT	doc/source/make_tables.py	/^DATASET_GALLERY_IMAGE_EXT_DICT = {$/;"	v
DEBUG_IMAGE_DIR	tests/doc/tst_doc_images.py	/^DEBUG_IMAGE_DIR = str(Path(ROOT_DIR) \/ '_doc_debug_images')$/;"	v
DEBUG_IMAGE_FAILED_DIR	tests/doc/tst_doc_images.py	/^DEBUG_IMAGE_FAILED_DIR = str(Path(ROOT_DIR) \/ '_doc_debug_images_failed')$/;"	v
DEFAULTS	doc/Makefile	/^DEFAULTS	  = -w sphinx_warnings.txt -W --keep-going$/;"	m
DEFAULT_COLOR_SCHEME	build/lib/pyvista/plotting/charts.py	/^    DEFAULT_COLOR_SCHEME = 'qual_accent'$/;"	v	class:_MultiCompPlot
DEFAULT_COLOR_SCHEME	pyvista/plotting/charts.py	/^    DEFAULT_COLOR_SCHEME = 'qual_accent'$/;"	v	class:_MultiCompPlot
DEFAULT_INPLACE_WARNING	build/lib/pyvista/core/pointset.py	/^DEFAULT_INPLACE_WARNING = ($/;"	v
DEFAULT_INPLACE_WARNING	pyvista/core/pointset.py	/^DEFAULT_INPLACE_WARNING = ($/;"	v
DEFAULT_LABELS	build/lib/pyvista/plotting/axes_assembly.py	/^    DEFAULT_LABELS = _XYZTuple('X', 'Y', 'Z')$/;"	v	class:_XYZAssembly
DEFAULT_LABELS	build/lib/pyvista/plotting/axes_assembly.py	/^    DEFAULT_LABELS = _XYZTuple('YZ', 'ZX', 'XY')$/;"	v	class:PlanesAssembly
DEFAULT_LABELS	pyvista/plotting/axes_assembly.py	/^    DEFAULT_LABELS = _XYZTuple('X', 'Y', 'Z')$/;"	v	class:_XYZAssembly
DEFAULT_LABELS	pyvista/plotting/axes_assembly.py	/^    DEFAULT_LABELS = _XYZTuple('YZ', 'ZX', 'XY')$/;"	v	class:PlanesAssembly
DEFAULT_PRINCIPAL_AXES	tests/core/test_utilities.py	/^DEFAULT_PRINCIPAL_AXES = [[0.0, 0.0, 1.0], [0.0, 1.0, 0.0], [-1.0, 0.0, 0.0]]$/;"	v
DEFAULT_SCALARS_NAME	build/lib/pyvista/__init__.py	/^DEFAULT_SCALARS_NAME = 'Data'$/;"	v
DEFAULT_SCALARS_NAME	pyvista/__init__.py	/^DEFAULT_SCALARS_NAME = 'Data'$/;"	v
DEFAULT_VECTOR_KEY	build/lib/pyvista/core/dataobject.py	/^DEFAULT_VECTOR_KEY = '_vectors'$/;"	v
DEFAULT_VECTOR_KEY	build/lib/pyvista/core/dataset.py	/^DEFAULT_VECTOR_KEY = '_vectors'$/;"	v
DEFAULT_VECTOR_KEY	pyvista/core/dataobject.py	/^DEFAULT_VECTOR_KEY = '_vectors'$/;"	v
DEFAULT_VECTOR_KEY	pyvista/core/dataset.py	/^DEFAULT_VECTOR_KEY = '_vectors'$/;"	v
DELTA	tests/core/test_dataset_filters.py	/^DELTA = 0.1$/;"	v
DEMReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import DEMReader as DEMReader$/;"	i
DEMReader	build/lib/pyvista/core/utilities/reader.py	/^class DEMReader(BaseReader):$/;"	c
DEMReader	pyvista/core/utilities/__init__.py	/^from .reader import DEMReader as DEMReader$/;"	i
DEMReader	pyvista/core/utilities/reader.py	/^class DEMReader(BaseReader):$/;"	c
DENSITY	build/lib/pyvista/core/utilities/reader.py	/^    DENSITY = 100$/;"	v	class:Plot3DFunctionEnum
DENSITY	build/lib/pyvista/core/utilities/reader.py	/^    DENSITY = Plot3DFunctionEnum.DENSITY$/;"	v	class:MultiBlockPlot3DReader
DENSITY	pyvista/core/utilities/reader.py	/^    DENSITY = 100$/;"	v	class:Plot3DFunctionEnum
DENSITY	pyvista/core/utilities/reader.py	/^    DENSITY = Plot3DFunctionEnum.DENSITY$/;"	v	class:MultiBlockPlot3DReader
DICOMReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import DICOMReader as DICOMReader$/;"	i
DICOMReader	build/lib/pyvista/core/utilities/reader.py	/^class DICOMReader(BaseReader):$/;"	c
DICOMReader	pyvista/core/utilities/__init__.py	/^from .reader import DICOMReader as DICOMReader$/;"	i
DICOMReader	pyvista/core/utilities/reader.py	/^class DICOMReader(BaseReader):$/;"	c
DOUBLE_PRECISION	build/lib/pyvista/core/utilities/geometric_sources.py	/^DOUBLE_PRECISION = _vtk.vtkAlgorithm.DOUBLE_PRECISION$/;"	v
DOUBLE_PRECISION	pyvista/core/utilities/geometric_sources.py	/^DOUBLE_PRECISION = _vtk.vtkAlgorithm.DOUBLE_PRECISION$/;"	v
DarkTheme	build/lib/pyvista/plotting/themes.py	/^class DarkTheme(Theme):$/;"	c
DarkTheme	pyvista/plotting/themes.py	/^class DarkTheme(Theme):$/;"	c
DarkTheme	tests/plotting/test_theme.py	/^from pyvista.plotting.themes import DarkTheme$/;"	i
DataObject	build/lib/pyvista/core/__init__.py	/^from .dataobject import DataObject as DataObject$/;"	i
DataObject	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.dataobject import DataObject$/;"	i
DataObject	build/lib/pyvista/core/cell.py	/^from .dataobject import DataObject$/;"	i
DataObject	build/lib/pyvista/core/composite.py	/^from .dataobject import DataObject$/;"	i
DataObject	build/lib/pyvista/core/dataobject.py	/^class DataObject:$/;"	c
DataObject	build/lib/pyvista/core/dataset.py	/^from .dataobject import DataObject$/;"	i
DataObject	build/lib/pyvista/core/objects.py	/^from .dataobject import DataObject$/;"	i
DataObject	build/lib/pyvista/core/partitioned.py	/^from .dataobject import DataObject$/;"	i
DataObject	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.core.dataobject import DataObject$/;"	i
DataObject	build/lib/pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
DataObject	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import DataObject$/;"	i
DataObject	build/lib/pyvista/plotting/texture.py	/^from pyvista.core.dataobject import DataObject$/;"	i
DataObject	pyvista/core/__init__.py	/^from .dataobject import DataObject as DataObject$/;"	i
DataObject	pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.dataobject import DataObject$/;"	i
DataObject	pyvista/core/cell.py	/^from .dataobject import DataObject$/;"	i
DataObject	pyvista/core/composite.py	/^from .dataobject import DataObject$/;"	i
DataObject	pyvista/core/dataobject.py	/^class DataObject:$/;"	c
DataObject	pyvista/core/dataset.py	/^from .dataobject import DataObject$/;"	i
DataObject	pyvista/core/objects.py	/^from .dataobject import DataObject$/;"	i
DataObject	pyvista/core/partitioned.py	/^from .dataobject import DataObject$/;"	i
DataObject	pyvista/core/utilities/fileio.py	/^    from pyvista.core.dataobject import DataObject$/;"	i
DataObject	pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
DataObject	pyvista/core/utilities/helpers.py	/^    from pyvista import DataObject$/;"	i
DataObject	pyvista/plotting/texture.py	/^from pyvista.core.dataobject import DataObject$/;"	i
DataObjectFilters	build/lib/pyvista/core/__init__.py	/^from .filters import DataObjectFilters as DataObjectFilters$/;"	i
DataObjectFilters	build/lib/pyvista/core/filters/__init__.py	/^from .data_object import DataObjectFilters$/;"	i
DataObjectFilters	build/lib/pyvista/core/filters/composite.py	/^from pyvista.core.filters.data_object import DataObjectFilters$/;"	i
DataObjectFilters	build/lib/pyvista/core/filters/data_object.py	/^class DataObjectFilters:$/;"	c
DataObjectFilters	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.filters.data_object import DataObjectFilters$/;"	i
DataObjectFilters	pyvista/core/__init__.py	/^from .filters import DataObjectFilters as DataObjectFilters$/;"	i
DataObjectFilters	pyvista/core/filters/__init__.py	/^from .data_object import DataObjectFilters$/;"	i
DataObjectFilters	pyvista/core/filters/composite.py	/^from pyvista.core.filters.data_object import DataObjectFilters$/;"	i
DataObjectFilters	pyvista/core/filters/data_object.py	/^class DataObjectFilters:$/;"	c
DataObjectFilters	pyvista/core/filters/data_set.py	/^from pyvista.core.filters.data_object import DataObjectFilters$/;"	i
DataSet	build/lib/pyvista/core/__init__.py	/^from .dataset import DataSet as DataSet$/;"	i
DataSet	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.dataset import DataSet$/;"	i
DataSet	build/lib/pyvista/core/composite.py	/^from .dataset import DataSet$/;"	i
DataSet	build/lib/pyvista/core/dataset.py	/^class DataSet(DataSetFilters, DataObject):$/;"	c
DataSet	build/lib/pyvista/core/datasetattributes.py	/^    from pyvista import DataSet$/;"	i
DataSet	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista import DataSet$/;"	i
DataSet	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista import DataSet$/;"	i
DataSet	build/lib/pyvista/core/grid.py	/^from .dataset import DataSet$/;"	i
DataSet	build/lib/pyvista/core/partitioned.py	/^    from .dataset import DataSet$/;"	i
DataSet	build/lib/pyvista/core/pointset.py	/^from .dataset import DataSet$/;"	i
DataSet	build/lib/pyvista/core/pyvista_ndarray.py	/^    from pyvista import DataSet$/;"	i
DataSet	build/lib/pyvista/core/utilities/arrays.py	/^    from pyvista import DataSet$/;"	i
DataSet	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.core.dataset import DataSet$/;"	i
DataSet	build/lib/pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core.dataset import DataSet$/;"	i
DataSet	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import DataSet$/;"	i
DataSet	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista import DataSet$/;"	i
DataSet	build/lib/pyvista/plotting/axes_assembly.py	/^    from pyvista.core.dataset import DataSet$/;"	i
DataSet	pyvista/core/__init__.py	/^from .dataset import DataSet as DataSet$/;"	i
DataSet	pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.dataset import DataSet$/;"	i
DataSet	pyvista/core/composite.py	/^from .dataset import DataSet$/;"	i
DataSet	pyvista/core/dataset.py	/^class DataSet(DataSetFilters, DataObject):$/;"	c
DataSet	pyvista/core/datasetattributes.py	/^    from pyvista import DataSet$/;"	i
DataSet	pyvista/core/filters/data_object.py	/^    from pyvista import DataSet$/;"	i
DataSet	pyvista/core/filters/data_set.py	/^    from pyvista import DataSet$/;"	i
DataSet	pyvista/core/grid.py	/^from .dataset import DataSet$/;"	i
DataSet	pyvista/core/partitioned.py	/^    from .dataset import DataSet$/;"	i
DataSet	pyvista/core/pointset.py	/^from .dataset import DataSet$/;"	i
DataSet	pyvista/core/pyvista_ndarray.py	/^    from pyvista import DataSet$/;"	i
DataSet	pyvista/core/utilities/arrays.py	/^    from pyvista import DataSet$/;"	i
DataSet	pyvista/core/utilities/fileio.py	/^    from pyvista.core.dataset import DataSet$/;"	i
DataSet	pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core.dataset import DataSet$/;"	i
DataSet	pyvista/core/utilities/helpers.py	/^    from pyvista import DataSet$/;"	i
DataSet	pyvista/core/utilities/transform.py	/^    from pyvista import DataSet$/;"	i
DataSet	pyvista/plotting/axes_assembly.py	/^    from pyvista.core.dataset import DataSet$/;"	i
DataSet	tests/core/test_dataset.py	/^    from pyvista.core.dataset import DataSet$/;"	i
DataSetAttributes	build/lib/pyvista/core/__init__.py	/^from .datasetattributes import DataSetAttributes as DataSetAttributes$/;"	i
DataSetAttributes	build/lib/pyvista/core/dataobject.py	/^from .datasetattributes import DataSetAttributes$/;"	i
DataSetAttributes	build/lib/pyvista/core/dataset.py	/^from .datasetattributes import DataSetAttributes$/;"	i
DataSetAttributes	build/lib/pyvista/core/datasetattributes.py	/^class DataSetAttributes(_vtk.VTKObjectWrapper):$/;"	c
DataSetAttributes	build/lib/pyvista/core/objects.py	/^from .datasetattributes import DataSetAttributes$/;"	i
DataSetAttributes	pyvista/core/__init__.py	/^from .datasetattributes import DataSetAttributes as DataSetAttributes$/;"	i
DataSetAttributes	pyvista/core/dataobject.py	/^from .datasetattributes import DataSetAttributes$/;"	i
DataSetAttributes	pyvista/core/dataset.py	/^from .datasetattributes import DataSetAttributes$/;"	i
DataSetAttributes	pyvista/core/datasetattributes.py	/^class DataSetAttributes(_vtk.VTKObjectWrapper):$/;"	c
DataSetAttributes	pyvista/core/objects.py	/^from .datasetattributes import DataSetAttributes$/;"	i
DataSetFilters	build/lib/pyvista/core/__init__.py	/^from .filters import DataSetFilters as DataSetFilters$/;"	i
DataSetFilters	build/lib/pyvista/core/dataset.py	/^from .filters import DataSetFilters$/;"	i
DataSetFilters	build/lib/pyvista/core/filters/__init__.py	/^from .data_set import DataSetFilters$/;"	i
DataSetFilters	build/lib/pyvista/core/filters/composite.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	build/lib/pyvista/core/filters/data_set.py	/^class DataSetFilters(DataObjectFilters):$/;"	c
DataSetFilters	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	build/lib/pyvista/core/filters/structured_grid.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	build/lib/pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	pyvista/core/__init__.py	/^from .filters import DataSetFilters as DataSetFilters$/;"	i
DataSetFilters	pyvista/core/dataset.py	/^from .filters import DataSetFilters$/;"	i
DataSetFilters	pyvista/core/filters/__init__.py	/^from .data_set import DataSetFilters$/;"	i
DataSetFilters	pyvista/core/filters/composite.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	pyvista/core/filters/data_set.py	/^class DataSetFilters(DataObjectFilters):$/;"	c
DataSetFilters	pyvista/core/filters/image_data.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	pyvista/core/filters/poly_data.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	pyvista/core/filters/structured_grid.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetFilters	pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters.data_set import DataSetFilters$/;"	i
DataSetMapper	build/lib/pyvista/plotting/__init__.py	/^from .mapper import DataSetMapper as DataSetMapper$/;"	i
DataSetMapper	build/lib/pyvista/plotting/mapper.py	/^class DataSetMapper(_DataSetMapper, _vtk.vtkDataSetMapper):$/;"	c
DataSetMapper	build/lib/pyvista/plotting/plotter.py	/^from .mapper import DataSetMapper$/;"	i
DataSetMapper	build/lib/pyvista/plotting/renderer.py	/^from .mapper import DataSetMapper$/;"	i
DataSetMapper	pyvista/plotting/__init__.py	/^from .mapper import DataSetMapper as DataSetMapper$/;"	i
DataSetMapper	pyvista/plotting/mapper.py	/^class DataSetMapper(_DataSetMapper, _vtk.vtkDataSetMapper):$/;"	c
DataSetMapper	pyvista/plotting/plotter.py	/^from .mapper import DataSetMapper$/;"	i
DataSetMapper	pyvista/plotting/renderer.py	/^from .mapper import DataSetMapper$/;"	i
DataSetMapper	tests/plotting/mappers/test_mapper.py	/^from pyvista.plotting.mapper import DataSetMapper$/;"	i
DataTypeBadge	doc/source/make_tables.py	/^class DataTypeBadge(_BaseDatasetBadge):$/;"	c
DatasetCard	doc/source/make_tables.py	/^class DatasetCard:$/;"	c
DatasetCardFetcher	doc/source/make_tables.py	/^class DatasetCardFetcher:$/;"	c
DatasetGalleryCarousel	doc/source/make_tables.py	/^class DatasetGalleryCarousel(DocTable):$/;"	c
DatasetLoaderTestCase	tests/examples/test_dataset_loader.py	/^class DatasetLoaderTestCase:$/;"	c
DatasetLoaderTestCase	tests/examples/test_downloads.py	/^from tests.examples.test_dataset_loader import DatasetLoaderTestCase$/;"	i
DatasetLoaderTestCase	tests/examples/test_examples.py	/^from tests.examples.test_dataset_loader import DatasetLoaderTestCase$/;"	i
DatasetObject	build/lib/pyvista/examples/_dataset_loader.py	/^DatasetObject = Union[pv.DataSet, pv.Texture, NumpyArray[Any], pv.MultiBlock]$/;"	v
DatasetObject	doc/source/make_tables.py	/^from pyvista.examples._dataset_loader import DatasetObject$/;"	i
DatasetObject	pyvista/examples/_dataset_loader.py	/^DatasetObject = Union[pv.DataSet, pv.Texture, NumpyArray[Any], pv.MultiBlock]$/;"	v
DatasetPropsGenerator	doc/source/make_tables.py	/^class DatasetPropsGenerator:$/;"	c
DatasetType	build/lib/pyvista/examples/_dataset_loader.py	/^DatasetType = Union[$/;"	v
DatasetType	pyvista/examples/_dataset_loader.py	/^DatasetType = Union[$/;"	v
DeprecationError	build/lib/pyvista/core/__init__.py	/^from .errors import DeprecationError as DeprecationError$/;"	i
DeprecationError	build/lib/pyvista/core/errors.py	/^class DeprecationError(RuntimeError):$/;"	c
DeprecationError	build/lib/pyvista/plotting/plotter.py	/^        from pyvista.core.errors import DeprecationError$/;"	i
DeprecationError	pyvista/core/__init__.py	/^from .errors import DeprecationError as DeprecationError$/;"	i
DeprecationError	pyvista/core/errors.py	/^class DeprecationError(RuntimeError):$/;"	c
DeprecationError	pyvista/plotting/plotter.py	/^        from pyvista.core.errors import DeprecationError$/;"	i
DeprecationError	tests/plotting/test_plotting.py	/^from pyvista.core.errors import DeprecationError$/;"	i
Directive	build/lib/pyvista/ext/plot_directive.py	/^from docutils.parsers.rst import Directive$/;"	i
Directive	build/lib/pyvista/ext/viewer_directive.py	/^from docutils.parsers.rst import Directive$/;"	i
Directive	pyvista/ext/plot_directive.py	/^from docutils.parsers.rst import Directive$/;"	i
Directive	pyvista/ext/viewer_directive.py	/^from docutils.parsers.rst import Directive$/;"	i
Disc	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Disc as Disc$/;"	i
Disc	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Disc($/;"	f
Disc	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Disc as Disc$/;"	i
Disc	pyvista/core/utilities/geometric_objects.py	/^def Disc($/;"	f
DiscSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import DiscSource as DiscSource$/;"	i
DiscSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import DiscSource$/;"	i
DiscSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class DiscSource(_vtk.vtkDiskSource):$/;"	c
DiscSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import DiscSource as DiscSource$/;"	i
DiscSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import DiscSource$/;"	i
DiscSource	pyvista/core/utilities/geometric_sources.py	/^class DiscSource(_vtk.vtkDiskSource):$/;"	c
DistanceCallback	tests/plotting/test_widgets.py	/^    class DistanceCallback:$/;"	c	function:test_measurement_widget
DocSubs	build/lib/pyvista/plotting/charts.py	/^class DocSubs:$/;"	c
DocSubs	pyvista/plotting/charts.py	/^class DocSubs:$/;"	c
DocTable	doc/source/make_tables.py	/^class DocTable:$/;"	c
DocTestFinder	tests/check_doctest_names.py	/^from doctest import DocTestFinder$/;"	i
DocumentProTheme	build/lib/pyvista/plotting/themes.py	/^class DocumentProTheme(DocumentTheme):$/;"	c
DocumentProTheme	pyvista/plotting/themes.py	/^class DocumentProTheme(DocumentTheme):$/;"	c
DocumentTheme	build/lib/pyvista/plotting/themes.py	/^class DocumentTheme(Theme):$/;"	c
DocumentTheme	pyvista/plotting/themes.py	/^class DocumentTheme(Theme):$/;"	c
Dodecahedron	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Dodecahedron as Dodecahedron$/;"	i
Dodecahedron	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Dodecahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
Dodecahedron	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Dodecahedron as Dodecahedron$/;"	i
Dodecahedron	pyvista/core/utilities/geometric_objects.py	/^def Dodecahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
DownloadsCarousel	doc/source/make_tables.py	/^class DownloadsCarousel(DatasetGalleryCarousel):$/;"	c
DummyActor	tests/plotting/test_actor.py	/^    class DummyActor(_Prop3DMixin):$/;"	c	function:dummy_actor
DynamicScraper	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^class DynamicScraper:  # pragma: no cover$/;"	c
DynamicScraper	doc/source/conf.py	/^from pyvista.plotting.utilities.sphinx_gallery import DynamicScraper$/;"	i
DynamicScraper	pyvista/plotting/utilities/sphinx_gallery.py	/^class DynamicScraper:  # pragma: no cover$/;"	c
DynamicScraper	tests/plotting/test_scraper.py	/^from pyvista.plotting.utilities.sphinx_gallery import DynamicScraper$/;"	i
EDGE	build/lib/pyvista/plotting/opts.py	/^    EDGE = (3, 'Edge')$/;"	v	class:ElementType
EDGE	pyvista/plotting/opts.py	/^    EDGE = (3, 'Edge')$/;"	v	class:ElementType
EMPTY_CELL	build/lib/pyvista/core/celltype.py	/^    EMPTY_CELL = _CELL_TYPE_INFO['EMPTY_CELL']$/;"	v	class:CellType
EMPTY_CELL	build/lib/pyvista/core/celltype.py	/^    EMPTY_CELL=_CellTypeTuple($/;"	v	class:_CellTypeTuple
EMPTY_CELL	pyvista/core/celltype.py	/^    EMPTY_CELL = _CELL_TYPE_INFO['EMPTY_CELL']$/;"	v	class:CellType
EMPTY_CELL	pyvista/core/celltype.py	/^    EMPTY_CELL=_CellTypeTuple($/;"	v	class:_CellTypeTuple
ENTHALPY	build/lib/pyvista/core/utilities/reader.py	/^    ENTHALPY = 130$/;"	v	class:Plot3DFunctionEnum
ENTHALPY	build/lib/pyvista/core/utilities/reader.py	/^    ENTHALPY = Plot3DFunctionEnum.ENTHALPY$/;"	v	class:MultiBlockPlot3DReader
ENTHALPY	pyvista/core/utilities/reader.py	/^    ENTHALPY = 130$/;"	v	class:Plot3DFunctionEnum
ENTHALPY	pyvista/core/utilities/reader.py	/^    ENTHALPY = Plot3DFunctionEnum.ENTHALPY$/;"	v	class:MultiBlockPlot3DReader
ENTROPY	build/lib/pyvista/core/utilities/reader.py	/^    ENTROPY = 170$/;"	v	class:Plot3DFunctionEnum
ENTROPY	build/lib/pyvista/core/utilities/reader.py	/^    ENTROPY = Plot3DFunctionEnum.ENTROPY$/;"	v	class:MultiBlockPlot3DReader
ENTROPY	pyvista/core/utilities/reader.py	/^    ENTROPY = 170$/;"	v	class:Plot3DFunctionEnum
ENTROPY	pyvista/core/utilities/reader.py	/^    ENTROPY = Plot3DFunctionEnum.ENTROPY$/;"	v	class:MultiBlockPlot3DReader
ENVIRONMENT_HOOKS	tests/plotting/test_tinypages.py	/^ENVIRONMENT_HOOKS = ['PYVISTA_PLOT_SKIP', 'PYVISTA_PLOT_SKIP_OPTIONAL']$/;"	v
ET	build/lib/pyvista/core/utilities/reader.py	/^from xml.etree import ElementTree as ET$/;"	i
ET	build/lib/pyvista/plotting/camera.py	/^from xml.etree import ElementTree as ET$/;"	i
ET	pyvista/core/utilities/reader.py	/^from xml.etree import ElementTree as ET$/;"	i
ET	pyvista/plotting/camera.py	/^from xml.etree import ElementTree as ET$/;"	i
EXAMPLES_DIR	examples_trame/tests/test_trame.py	/^EXAMPLES_DIR = Path(__file__).parent.parent.absolute()$/;"	v
ElementType	build/lib/pyvista/plotting/opts.py	/^class ElementType(AnnotatedIntEnum):$/;"	c
ElementType	build/lib/pyvista/plotting/picking.py	/^from .opts import ElementType$/;"	i
ElementType	examples/02-plot/element_picking.py	/^from pyvista.plotting.opts import ElementType$/;"	i
ElementType	pyvista/plotting/opts.py	/^class ElementType(AnnotatedIntEnum):$/;"	c
ElementType	pyvista/plotting/picking.py	/^from .opts import ElementType$/;"	i
Ellipse	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Ellipse as Ellipse$/;"	i
Ellipse	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Ellipse($/;"	f
Ellipse	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Ellipse as Ellipse$/;"	i
Ellipse	pyvista/core/utilities/geometric_objects.py	/^def Ellipse($/;"	f
EmbeddableWidget	build/lib/pyvista/trame/jupyter.py	/^class EmbeddableWidget(HTML):  # type: ignore[misc]  # numpydoc ignore=PR01$/;"	c
EmbeddableWidget	pyvista/trame/jupyter.py	/^class EmbeddableWidget(HTML):  # type: ignore[misc]  # numpydoc ignore=PR01$/;"	c
EmbeddableWidget	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.jupyter import EmbeddableWidget$/;"	i
Empty	build/lib/pyvista/examples/cells.py	/^def Empty() -> UnstructuredGrid:$/;"	f
Empty	pyvista/examples/cells.py	/^def Empty() -> UnstructuredGrid:$/;"	f
EnSightReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import EnSightReader as EnSightReader$/;"	i
EnSightReader	build/lib/pyvista/core/utilities/reader.py	/^class EnSightReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
EnSightReader	pyvista/core/utilities/__init__.py	/^from .reader import EnSightReader as EnSightReader$/;"	i
EnSightReader	pyvista/core/utilities/reader.py	/^class EnSightReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
Enum	build/lib/pyvista/plotting/axes_actor.py	/^from enum import Enum$/;"	i
Enum	build/lib/pyvista/plotting/themes.py	/^from enum import Enum$/;"	i
Enum	build/lib/pyvista/plotting/tools.py	/^from enum import Enum$/;"	i
Enum	doc/source/make_tables.py	/^    from enum import Enum$/;"	i
Enum	pyvista/plotting/axes_actor.py	/^from enum import Enum$/;"	i
Enum	pyvista/plotting/themes.py	/^from enum import Enum$/;"	i
Enum	pyvista/plotting/tools.py	/^from enum import Enum$/;"	i
Example	doc/source/make_external_gallery.py	/^class Example:  # noqa: D101$/;"	c
ExodusIIBlockSet	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import ExodusIIBlockSet as ExodusIIBlockSet$/;"	i
ExodusIIBlockSet	build/lib/pyvista/core/utilities/reader.py	/^class ExodusIIBlockSet:$/;"	c
ExodusIIBlockSet	pyvista/core/utilities/__init__.py	/^from .reader import ExodusIIBlockSet as ExodusIIBlockSet$/;"	i
ExodusIIBlockSet	pyvista/core/utilities/reader.py	/^class ExodusIIBlockSet:$/;"	c
ExodusIIReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import ExodusIIReader as ExodusIIReader$/;"	i
ExodusIIReader	build/lib/pyvista/core/utilities/reader.py	/^class ExodusIIReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
ExodusIIReader	pyvista/core/utilities/__init__.py	/^from .reader import ExodusIIReader as ExodusIIReader$/;"	i
ExodusIIReader	pyvista/core/utilities/reader.py	/^class ExodusIIReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
ExplicitStructuredGrid	build/lib/pyvista/core/__init__.py	/^from .pointset import ExplicitStructuredGrid as ExplicitStructuredGrid$/;"	i
ExplicitStructuredGrid	build/lib/pyvista/core/pointset.py	/^class ExplicitStructuredGrid(PointGrid, _vtk.vtkExplicitStructuredGrid):$/;"	c
ExplicitStructuredGrid	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.core.pointset import ExplicitStructuredGrid$/;"	i
ExplicitStructuredGrid	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import ExplicitStructuredGrid$/;"	i
ExplicitStructuredGrid	build/lib/pyvista/core/wrappers.py	/^from .pointset import ExplicitStructuredGrid$/;"	i
ExplicitStructuredGrid	pyvista/core/__init__.py	/^from .pointset import ExplicitStructuredGrid as ExplicitStructuredGrid$/;"	i
ExplicitStructuredGrid	pyvista/core/pointset.py	/^class ExplicitStructuredGrid(PointGrid, _vtk.vtkExplicitStructuredGrid):$/;"	c
ExplicitStructuredGrid	pyvista/core/utilities/fileio.py	/^    from pyvista.core.pointset import ExplicitStructuredGrid$/;"	i
ExplicitStructuredGrid	pyvista/core/utilities/helpers.py	/^    from pyvista import ExplicitStructuredGrid$/;"	i
ExplicitStructuredGrid	pyvista/core/wrappers.py	/^from .pointset import ExplicitStructuredGrid$/;"	i
ExplicitStructuredGridCarousel	doc/source/make_tables.py	/^class ExplicitStructuredGridCarousel(DatasetGalleryCarousel):$/;"	c
F401	build/lib/pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
F401	doc/source/conf.py	/^from pyvista.core.utilities.docs import linkcode_resolve  # noqa: F401$/;"	i
F401	doc/source/conf.py	/^import sphinx_book_theme  # noqa: F401$/;"	i
F401	pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
F401	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import BasePlotter  # noqa: F401$/;"	i
F401	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import Plotter  # noqa: F401$/;"	i
F401	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import _ALL_PLOTTERS  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import NORMALS  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import abstract_class  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import assert_empty_kwargs  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import conditional_decorator  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import convert_string_array  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import generate_plane  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_array  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_array_association  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_vtk_type  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import threaded  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import try_callback  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import xvfb  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import add_ids_algorithm  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import algorithm_to_mesh_handler  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import crinkle_algorithm  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import outline_algorithm  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import pointset_to_polydata_algorithm  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import set_algorithm_input  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.errors import GPUInfo  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import Arrow  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import Cylinder  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import PlatonicSolid  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.helpers import vtk_id_list_to_array  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.sphinx_gallery import _get_sg_image_scraper  # noqa: F401$/;"	i
F401	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.xvfb import start_xvfb  # noqa: F401$/;"	i
F401	tests/plotting/test_conftest.py	/^from tests.test_conftest import results_parser  # noqa: F401$/;"	i
F401	tests/plotting/test_plotting.py	/^from tests.core.test_imagedata_filters import labeled_image  # noqa: F401$/;"	i
FACE	build/lib/pyvista/plotting/opts.py	/^    FACE = (2, 'Face')$/;"	v	class:ElementType
FACE	pyvista/plotting/opts.py	/^    FACE = (2, 'Face')$/;"	v	class:ElementType
FCONTIG_ARR	tests/core/test_cells.py	/^FCONTIG_ARR = np.array(np.vstack(([3, 0, 1, 2], [3, 3, 4, 5])), order='F')$/;"	v
FETCHER	build/lib/pyvista/examples/downloads.py	/^FETCHER = pooch.create($/;"	v
FETCHER	pyvista/examples/downloads.py	/^FETCHER = pooch.create($/;"	v
FIGURE_PATH	build/lib/pyvista/__init__.py	/^FIGURE_PATH = os.environ.get('PYVISTA_FIGURE_PATH', None)$/;"	v
FIGURE_PATH	pyvista/__init__.py	/^FIGURE_PATH = os.environ.get('PYVISTA_FIGURE_PATH', None)$/;"	v
FLAKY_IMAGE_DIR	tests/doc/tst_doc_images.py	/^FLAKY_IMAGE_DIR = str(Path(__file__).parent \/ 'flaky_tests')$/;"	v
FLAKY_TEST_CASES	tests/doc/tst_doc_images.py	/^FLAKY_TEST_CASES = [$/;"	v
FLAT	build/lib/pyvista/plotting/opts.py	/^    FLAT = (0, 'Flat')$/;"	v	class:InterpolationType
FLAT	pyvista/plotting/opts.py	/^    FLAT = (0, 'Flat')$/;"	v	class:InterpolationType
FLOAT_FORMAT	build/lib/pyvista/__init__.py	/^FLOAT_FORMAT = '{:.3e}'$/;"	v
FLOAT_FORMAT	pyvista/__init__.py	/^FLOAT_FORMAT = '{:.3e}'$/;"	v
FLUENTCFFReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import FLUENTCFFReader as FLUENTCFFReader$/;"	i
FLUENTCFFReader	build/lib/pyvista/core/utilities/reader.py	/^class FLUENTCFFReader(BaseReader):$/;"	c
FLUENTCFFReader	pyvista/core/utilities/__init__.py	/^from .reader import FLUENTCFFReader as FLUENTCFFReader$/;"	i
FLUENTCFFReader	pyvista/core/utilities/reader.py	/^class FLUENTCFFReader(BaseReader):$/;"	c
FONTS	build/lib/pyvista/plotting/__init__.py	/^from .tools import FONTS as FONTS$/;"	i
FONTS	build/lib/pyvista/plotting/text.py	/^from .tools import FONTS$/;"	i
FONTS	build/lib/pyvista/plotting/tools.py	/^class FONTS(Enum):$/;"	c
FONTS	pyvista/plotting/__init__.py	/^from .tools import FONTS as FONTS$/;"	i
FONTS	pyvista/plotting/text.py	/^from .tools import FONTS$/;"	i
FONTS	pyvista/plotting/tools.py	/^class FONTS(Enum):$/;"	c
FacetReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import FacetReader as FacetReader$/;"	i
FacetReader	build/lib/pyvista/core/utilities/reader.py	/^class FacetReader(BaseReader):$/;"	c
FacetReader	pyvista/core/utilities/__init__.py	/^from .reader import FacetReader as FacetReader$/;"	i
FacetReader	pyvista/core/utilities/reader.py	/^class FacetReader(BaseReader):$/;"	c
FieldAssociation	build/lib/pyvista/core/composite.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/dataobject.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/datasetattributes.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/objects.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/pyvista_ndarray.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import FieldAssociation as FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/core/utilities/arrays.py	/^class FieldAssociation(enum.Enum):$/;"	c
FieldAssociation	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/composite.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/dataobject.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/dataset.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/datasetattributes.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/objects.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/pyvista_ndarray.py	/^from .utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/core/utilities/__init__.py	/^from .arrays import FieldAssociation as FieldAssociation$/;"	i
FieldAssociation	pyvista/core/utilities/arrays.py	/^class FieldAssociation(enum.Enum):$/;"	c
FieldAssociation	pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldAssociation	tests/core/test_datasetattributes.py	/^from pyvista.core.utilities.arrays import FieldAssociation$/;"	i
FieldLiteral	build/lib/pyvista/core/composite.py	/^from .utilities.arrays import FieldLiteral$/;"	i
FieldLiteral	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import FieldLiteral$/;"	i
FieldLiteral	build/lib/pyvista/core/objects.py	/^from .utilities.arrays import FieldLiteral$/;"	i
FieldLiteral	build/lib/pyvista/core/utilities/arrays.py	/^FieldLiteral = Literal[FieldAssociation.NONE, 'field']$/;"	v
FieldLiteral	pyvista/core/composite.py	/^from .utilities.arrays import FieldLiteral$/;"	i
FieldLiteral	pyvista/core/dataset.py	/^from .utilities.arrays import FieldLiteral$/;"	i
FieldLiteral	pyvista/core/objects.py	/^from .utilities.arrays import FieldLiteral$/;"	i
FieldLiteral	pyvista/core/utilities/arrays.py	/^FieldLiteral = Literal[FieldAssociation.NONE, 'field']$/;"	v
FigureCanvasAgg	build/lib/pyvista/plotting/charts.py	/^from matplotlib.backends.backend_agg import FigureCanvasAgg$/;"	i
FigureCanvasAgg	pyvista/plotting/charts.py	/^from matplotlib.backends.backend_agg import FigureCanvasAgg$/;"	i
FileNameSortKey	doc/source/conf.py	/^from sphinx_gallery.sorting import FileNameSortKey$/;"	i
FixedPointVolumeRayCastMapper	build/lib/pyvista/plotting/__init__.py	/^from .mapper import FixedPointVolumeRayCastMapper as FixedPointVolumeRayCastMapper$/;"	i
FixedPointVolumeRayCastMapper	build/lib/pyvista/plotting/mapper.py	/^class FixedPointVolumeRayCastMapper(_BaseVolumeMapper, _vtk.vtkFixedPointVolumeRayCastMapper):$/;"	c
FixedPointVolumeRayCastMapper	build/lib/pyvista/plotting/plotter.py	/^from .mapper import FixedPointVolumeRayCastMapper$/;"	i
FixedPointVolumeRayCastMapper	pyvista/plotting/__init__.py	/^from .mapper import FixedPointVolumeRayCastMapper as FixedPointVolumeRayCastMapper$/;"	i
FixedPointVolumeRayCastMapper	pyvista/plotting/mapper.py	/^class FixedPointVolumeRayCastMapper(_BaseVolumeMapper, _vtk.vtkFixedPointVolumeRayCastMapper):$/;"	c
FixedPointVolumeRayCastMapper	pyvista/plotting/plotter.py	/^from .mapper import FixedPointVolumeRayCastMapper$/;"	i
FluentReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import FluentReader as FluentReader$/;"	i
FluentReader	build/lib/pyvista/core/utilities/reader.py	/^class FluentReader(BaseReader):$/;"	c
FluentReader	pyvista/core/utilities/__init__.py	/^from .reader import FluentReader as FluentReader$/;"	i
FluentReader	pyvista/core/utilities/reader.py	/^class FluentReader(BaseReader):$/;"	c
Foo	tests/core/test_helpers.py	/^    class Foo(pv.PolyData):$/;"	c	function:test_inheritance_no_wrappers
Foo	tests/core/test_helpers.py	/^    class Foo(pv.PolyData):$/;"	c	function:test_wrappers
Foo	tests/core/test_utilities.py	/^    class Foo(AnnotatedIntEnum):$/;"	c	function:test_annotated_int_enum_from_any_raises
Foo	tests/core/test_utilities.py	/^    class Foo:$/;"	c	function:test_classproperty
Foo	tests/typing/mypy_plugin/test_plugin.py	/^    class Foo: ...$/;"	c	function:decorated_double
Foo	tests/typing/mypy_plugin/test_plugin.py	/^    class Foo: ...$/;"	c	function:decorated_single
FooData	examples/99-advanced/extending_pyvista.py	/^class FooData(pyvista.PolyData):  # noqa: D101$/;"	c
FunctionType	build/lib/pyvista/core/dataobject.py	/^    from types import FunctionType$/;"	i
FunctionType	doc/source/make_tables.py	/^    from types import FunctionType$/;"	i
FunctionType	pyvista/core/dataobject.py	/^    from types import FunctionType$/;"	i
FunctionType	tests/examples/test_dataset_loader.py	/^from types import FunctionType$/;"	i
FunctionType	tests/plotting/test_plotting.py	/^from types import FunctionType$/;"	i
GESignaReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import GESignaReader as GESignaReader$/;"	i
GESignaReader	build/lib/pyvista/core/utilities/reader.py	/^class GESignaReader(BaseReader):$/;"	c
GESignaReader	pyvista/core/utilities/__init__.py	/^from .reader import GESignaReader as GESignaReader$/;"	i
GESignaReader	pyvista/core/utilities/reader.py	/^class GESignaReader(BaseReader):$/;"	c
GIFReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import GIFReader as GIFReader$/;"	i
GIFReader	build/lib/pyvista/core/utilities/reader.py	/^class GIFReader(BaseReader):$/;"	c
GIFReader	pyvista/core/utilities/__init__.py	/^from .reader import GIFReader as GIFReader$/;"	i
GIFReader	pyvista/core/utilities/reader.py	/^class GIFReader(BaseReader):$/;"	c
GLOBAL_AXES	build/lib/pyvista/plotting/affine_widget.py	/^GLOBAL_AXES = np.eye(3)$/;"	v
GLOBAL_AXES	pyvista/plotting/affine_widget.py	/^GLOBAL_AXES = np.eye(3)$/;"	v
GLTFReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import GLTFReader as GLTFReader$/;"	i
GLTFReader	build/lib/pyvista/core/utilities/reader.py	/^class GLTFReader(BaseReader):$/;"	c
GLTFReader	pyvista/core/utilities/__init__.py	/^from .reader import GLTFReader as GLTFReader$/;"	i
GLTFReader	pyvista/core/utilities/reader.py	/^class GLTFReader(BaseReader):$/;"	c
GLTF_FETCHER	build/lib/pyvista/examples/gltf.py	/^GLTF_FETCHER = pooch.create($/;"	v
GLTF_FETCHER	pyvista/examples/gltf.py	/^GLTF_FETCHER = pooch.create($/;"	v
GOURAUD	build/lib/pyvista/plotting/opts.py	/^    GOURAUD = (1, 'Gouraud')$/;"	v	class:InterpolationType
GOURAUD	pyvista/plotting/opts.py	/^    GOURAUD = (1, 'Gouraud')$/;"	v	class:InterpolationType
GPUInfo	build/lib/pyvista/__init__.py	/^from pyvista.report import GPUInfo as GPUInfo$/;"	i
GPUInfo	build/lib/pyvista/report.py	/^class GPUInfo:$/;"	c
GPUInfo	pyvista/__init__.py	/^from pyvista.report import GPUInfo as GPUInfo$/;"	i
GPUInfo	pyvista/report.py	/^class GPUInfo:$/;"	c
GPUInfo	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.errors import GPUInfo  # noqa: F401$/;"	i
GPUInfo	tests/plotting/test_plotting_utilities.py	/^from pyvista.report import GPUInfo$/;"	i
GPUVolumeRayCastMapper	build/lib/pyvista/plotting/__init__.py	/^from .mapper import GPUVolumeRayCastMapper as GPUVolumeRayCastMapper$/;"	i
GPUVolumeRayCastMapper	build/lib/pyvista/plotting/mapper.py	/^class GPUVolumeRayCastMapper(_BaseVolumeMapper, _vtk.vtkGPUVolumeRayCastMapper):$/;"	c
GPUVolumeRayCastMapper	build/lib/pyvista/plotting/plotter.py	/^from .mapper import GPUVolumeRayCastMapper$/;"	i
GPUVolumeRayCastMapper	pyvista/plotting/__init__.py	/^from .mapper import GPUVolumeRayCastMapper as GPUVolumeRayCastMapper$/;"	i
GPUVolumeRayCastMapper	pyvista/plotting/mapper.py	/^class GPUVolumeRayCastMapper(_BaseVolumeMapper, _vtk.vtkGPUVolumeRayCastMapper):$/;"	c
GPUVolumeRayCastMapper	pyvista/plotting/plotter.py	/^from .mapper import GPUVolumeRayCastMapper$/;"	i
GRAY	doc/source/make_tables.py	/^    GRAY = auto()$/;"	v	class:ColorClassification
GRAYS_SATURATION_THRESHOLD	doc/source/make_tables.py	/^GRAYS_SATURATION_THRESHOLD = 0.15$/;"	v
GREEN	doc/source/make_tables.py	/^    GREEN = auto()$/;"	v	class:ColorClassification
GREEN	tests/core/test_dataset_filters.py	/^GREEN = [0.0, 1.0, 0.0]$/;"	v
GREEN_UPPER_BOUND	doc/source/make_tables.py	/^GREEN_UPPER_BOUND = 157 \/ _360$/;"	v
GRID_ITEM_FIELDS_INDENT_LEVEL	doc/source/make_tables.py	/^    GRID_ITEM_FIELDS_INDENT_LEVEL = 4$/;"	v	class:DatasetCard
GRID_ITEM_INDENT_LEVEL	doc/source/make_tables.py	/^    GRID_ITEM_INDENT_LEVEL = 3$/;"	v	class:DatasetCard
GambitReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import GambitReader as GambitReader$/;"	i
GambitReader	build/lib/pyvista/core/utilities/reader.py	/^class GambitReader(BaseReader):$/;"	c
GambitReader	pyvista/core/utilities/__init__.py	/^from .reader import GambitReader as GambitReader$/;"	i
GambitReader	pyvista/core/utilities/reader.py	/^class GambitReader(BaseReader):$/;"	c
GaussianCubeReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import GaussianCubeReader as GaussianCubeReader$/;"	i
GaussianCubeReader	build/lib/pyvista/core/utilities/reader.py	/^class GaussianCubeReader(BaseReader):$/;"	c
GaussianCubeReader	pyvista/core/utilities/__init__.py	/^from .reader import GaussianCubeReader as GaussianCubeReader$/;"	i
GaussianCubeReader	pyvista/core/utilities/reader.py	/^class GaussianCubeReader(BaseReader):$/;"	c
GcHandler	tests/plotting/conftest.py	/^    class GcHandler:$/;"	c	function:check_gc
Generator	build/lib/pyvista/core/dataset.py	/^    from collections.abc import Generator$/;"	i
Generator	pyvista/core/dataset.py	/^    from collections.abc import Generator$/;"	i
Generator	tests/core/test_composite.py	/^from collections.abc import Generator$/;"	i
GeneratorType	tests/core/test_cells.py	/^from types import GeneratorType$/;"	i
Generic	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import Generic$/;"	i
Generic	pyvista/examples/_dataset_loader.py	/^from typing import Generic$/;"	i
GeometryTypes	build/lib/pyvista/core/utilities/geometric_sources.py	/^    GeometryTypes = Literal[$/;"	v	class:AxesGeometrySource
GeometryTypes	pyvista/core/utilities/geometric_sources.py	/^    GeometryTypes = Literal[$/;"	v	class:AxesGeometrySource
GetDimensions	tests/plotting/test_regression.py	/^        def GetDimensions(self):$/;"	m	class:test_commpare_images_raises.bar
GetInputData	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def GetInputData(self, inInfo, port, idx):$/;"	m	class:PreserveTypeAlgorithmBase
GetInputData	pyvista/plotting/utilities/algorithms.py	/^    def GetInputData(self, inInfo, port, idx):$/;"	m	class:PreserveTypeAlgorithmBase
GetOutput	tests/core/test_dataset_filters.py	/^class GetOutput:$/;"	c
GetOutputDataObject	build/lib/pyvista/core/utilities/reader.py	/^    def GetOutputDataObject(self, *args):$/;"	m	class:BaseVTKReader
GetOutputDataObject	pyvista/core/utilities/reader.py	/^    def GetOutputDataObject(self, *args):$/;"	m	class:BaseVTKReader
GetProgress	build/lib/pyvista/core/utilities/reader.py	/^    def GetProgress(self):$/;"	m	class:BaseVTKReader
GetProgress	build/lib/pyvista/core/utilities/reader.py	/^    def GetProgress(self):$/;"	m	class:_GIFReader
GetProgress	pyvista/core/utilities/reader.py	/^    def GetProgress(self):$/;"	m	class:BaseVTKReader
GetProgress	pyvista/core/utilities/reader.py	/^    def GetProgress(self):$/;"	m	class:_GIFReader
Grid	build/lib/pyvista/core/__init__.py	/^from .grid import Grid as Grid$/;"	i
Grid	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.grid import Grid$/;"	i
Grid	build/lib/pyvista/core/grid.py	/^class Grid(DataSet):$/;"	c
Grid	pyvista/core/__init__.py	/^from .grid import Grid as Grid$/;"	i
Grid	pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.grid import Grid$/;"	i
Grid	pyvista/core/grid.py	/^class Grid(DataSet):$/;"	c
HARDWARE	build/lib/pyvista/plotting/opts.py	/^    HARDWARE = (2, 'Hardware')$/;"	v	class:PickerType
HARDWARE	pyvista/plotting/opts.py	/^    HARDWARE = (2, 'Hardware')$/;"	v	class:PickerType
HAS_IMAGEIO	tests/core/test_reader.py	/^    HAS_IMAGEIO = False$/;"	v
HAS_IMAGEIO	tests/core/test_reader.py	/^HAS_IMAGEIO = True$/;"	v
HAS_IMAGEIO	tests/plotting/test_plotting.py	/^    HAS_IMAGEIO = False$/;"	v
HAS_IMAGEIO	tests/plotting/test_plotting.py	/^HAS_IMAGEIO = True$/;"	v
HAS_IMAGEIO	tests/plotting/test_plotting_utilities.py	/^HAS_IMAGEIO = bool(importlib.util.find_spec('imageio'))$/;"	v
HDFReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import HDFReader as HDFReader$/;"	i
HDFReader	build/lib/pyvista/core/utilities/reader.py	/^class HDFReader(BaseReader):$/;"	c
HDFReader	pyvista/core/utilities/__init__.py	/^from .reader import HDFReader as HDFReader$/;"	i
HDFReader	pyvista/core/utilities/reader.py	/^class HDFReader(BaseReader):$/;"	c
HDF_HELP	build/lib/pyvista/core/utilities/reader.py	/^HDF_HELP = 'https:\/\/docs.vtk.org\/en\/latest\/design_documents\/VTKFileFormats.html#vtkhdf-file-format'$/;"	v
HDF_HELP	pyvista/core/utilities/reader.py	/^HDF_HELP = 'https:\/\/docs.vtk.org\/en\/latest\/design_documents\/VTKFileFormats.html#vtkhdf-file-format'$/;"	v
HDRReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import HDRReader as HDRReader$/;"	i
HDRReader	build/lib/pyvista/core/utilities/reader.py	/^class HDRReader(BaseReader):$/;"	c
HDRReader	pyvista/core/utilities/__init__.py	/^from .reader import HDRReader as HDRReader$/;"	i
HDRReader	pyvista/core/utilities/reader.py	/^class HDRReader(BaseReader):$/;"	c
HEADER_FOOTER_INDENT_LEVEL	doc/source/make_tables.py	/^    HEADER_FOOTER_INDENT_LEVEL = 1$/;"	v	class:DatasetCard
HEADLIGHT	build/lib/pyvista/plotting/lights.py	/^    HEADLIGHT = 1$/;"	v	class:LightType
HEADLIGHT	build/lib/pyvista/plotting/lights.py	/^    HEADLIGHT = LightType.HEADLIGHT$/;"	v	class:Light
HEADLIGHT	pyvista/plotting/lights.py	/^    HEADLIGHT = 1$/;"	v	class:LightType
HEADLIGHT	pyvista/plotting/lights.py	/^    HEADLIGHT = LightType.HEADLIGHT$/;"	v	class:Light
HEXAGONAL_PRISM	build/lib/pyvista/core/celltype.py	/^    HEXAGONAL_PRISM = _CELL_TYPE_INFO['HEXAGONAL_PRISM']$/;"	v	class:CellType
HEXAGONAL_PRISM	build/lib/pyvista/core/celltype.py	/^    HEXAGONAL_PRISM=_CellTypeTuple($/;"	v	class:_CellTypeTuple
HEXAGONAL_PRISM	pyvista/core/celltype.py	/^    HEXAGONAL_PRISM = _CELL_TYPE_INFO['HEXAGONAL_PRISM']$/;"	v	class:CellType
HEXAGONAL_PRISM	pyvista/core/celltype.py	/^    HEXAGONAL_PRISM=_CellTypeTuple($/;"	v	class:_CellTypeTuple
HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    HEXAHEDRON = _CELL_TYPE_INFO['HEXAHEDRON']$/;"	v	class:CellType
HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
HEXAHEDRON	pyvista/core/celltype.py	/^    HEXAHEDRON = _CELL_TYPE_INFO['HEXAHEDRON']$/;"	v	class:CellType
HEXAHEDRON	pyvista/core/celltype.py	/^    HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
HEXBEAM_CELLS_BOOL	tests/core/test_grid.py	/^HEXBEAM_CELLS_BOOL = np.ones(40, dtype=bool)  # matches hexbeam.n_cells == 40$/;"	v
HIGHER_ORDER_EDGE	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_EDGE = _CELL_TYPE_INFO['HIGHER_ORDER_EDGE']$/;"	v	class:CellType
HIGHER_ORDER_EDGE	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_EDGE=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_EDGE),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_EDGE	pyvista/core/celltype.py	/^    HIGHER_ORDER_EDGE = _CELL_TYPE_INFO['HIGHER_ORDER_EDGE']$/;"	v	class:CellType
HIGHER_ORDER_EDGE	pyvista/core/celltype.py	/^    HIGHER_ORDER_EDGE=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_EDGE),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_HEXAHEDRON = _CELL_TYPE_INFO['HIGHER_ORDER_HEXAHEDRON']$/;"	v	class:CellType
HIGHER_ORDER_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_HEXAHEDRON=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_HEXAHEDRON),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_HEXAHEDRON	pyvista/core/celltype.py	/^    HIGHER_ORDER_HEXAHEDRON = _CELL_TYPE_INFO['HIGHER_ORDER_HEXAHEDRON']$/;"	v	class:CellType
HIGHER_ORDER_HEXAHEDRON	pyvista/core/celltype.py	/^    HIGHER_ORDER_HEXAHEDRON=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_HEXAHEDRON),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_POLYGON	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_POLYGON = _CELL_TYPE_INFO['HIGHER_ORDER_POLYGON']$/;"	v	class:CellType
HIGHER_ORDER_POLYGON	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_POLYGON=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_POLYGON),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_POLYGON	pyvista/core/celltype.py	/^    HIGHER_ORDER_POLYGON = _CELL_TYPE_INFO['HIGHER_ORDER_POLYGON']$/;"	v	class:CellType
HIGHER_ORDER_POLYGON	pyvista/core/celltype.py	/^    HIGHER_ORDER_POLYGON=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_POLYGON),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_PYRAMID	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_PYRAMID = _CELL_TYPE_INFO['HIGHER_ORDER_PYRAMID']$/;"	v	class:CellType
HIGHER_ORDER_PYRAMID	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_PYRAMID=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_PYRAMID),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_PYRAMID	pyvista/core/celltype.py	/^    HIGHER_ORDER_PYRAMID = _CELL_TYPE_INFO['HIGHER_ORDER_PYRAMID']$/;"	v	class:CellType
HIGHER_ORDER_PYRAMID	pyvista/core/celltype.py	/^    HIGHER_ORDER_PYRAMID=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_PYRAMID),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_QUAD	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_QUAD = _CELL_TYPE_INFO['HIGHER_ORDER_QUAD']$/;"	v	class:CellType
HIGHER_ORDER_QUAD	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_QUAD=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_QUAD),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_QUAD	pyvista/core/celltype.py	/^    HIGHER_ORDER_QUAD = _CELL_TYPE_INFO['HIGHER_ORDER_QUAD']$/;"	v	class:CellType
HIGHER_ORDER_QUAD	pyvista/core/celltype.py	/^    HIGHER_ORDER_QUAD=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_QUAD),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_TETRAHEDRON	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_TETRAHEDRON = _CELL_TYPE_INFO['HIGHER_ORDER_TETRAHEDRON']$/;"	v	class:CellType
HIGHER_ORDER_TETRAHEDRON	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_TETRAHEDRON=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_TETRAHEDRON),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_TETRAHEDRON	pyvista/core/celltype.py	/^    HIGHER_ORDER_TETRAHEDRON = _CELL_TYPE_INFO['HIGHER_ORDER_TETRAHEDRON']$/;"	v	class:CellType
HIGHER_ORDER_TETRAHEDRON	pyvista/core/celltype.py	/^    HIGHER_ORDER_TETRAHEDRON=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_TETRAHEDRON),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_TRIANGLE = _CELL_TYPE_INFO['HIGHER_ORDER_TRIANGLE']$/;"	v	class:CellType
HIGHER_ORDER_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_TRIANGLE=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_TRIANGLE),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_TRIANGLE	pyvista/core/celltype.py	/^    HIGHER_ORDER_TRIANGLE = _CELL_TYPE_INFO['HIGHER_ORDER_TRIANGLE']$/;"	v	class:CellType
HIGHER_ORDER_TRIANGLE	pyvista/core/celltype.py	/^    HIGHER_ORDER_TRIANGLE=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_TRIANGLE),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_WEDGE	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_WEDGE = _CELL_TYPE_INFO['HIGHER_ORDER_WEDGE']$/;"	v	class:CellType
HIGHER_ORDER_WEDGE	build/lib/pyvista/core/celltype.py	/^    HIGHER_ORDER_WEDGE=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_WEDGE),$/;"	v	class:_CellTypeTuple
HIGHER_ORDER_WEDGE	pyvista/core/celltype.py	/^    HIGHER_ORDER_WEDGE = _CELL_TYPE_INFO['HIGHER_ORDER_WEDGE']$/;"	v	class:CellType
HIGHER_ORDER_WEDGE	pyvista/core/celltype.py	/^    HIGHER_ORDER_WEDGE=_CellTypeTuple(value=_vtk.VTK_HIGHER_ORDER_WEDGE),$/;"	v	class:_CellTypeTuple
HTML	build/lib/pyvista/core/dataobject.py	/^                from IPython.display import HTML$/;"	i
HTML	build/lib/pyvista/trame/jupyter.py	/^    HTML = object$/;"	v
HTML	build/lib/pyvista/trame/jupyter.py	/^    from ipywidgets.widgets import HTML$/;"	i
HTML	pyvista/core/dataobject.py	/^                from IPython.display import HTML$/;"	i
HTML	pyvista/trame/jupyter.py	/^    HTML = object$/;"	v
HTML	pyvista/trame/jupyter.py	/^    from ipywidgets.widgets import HTML$/;"	i
HTML_VIEWER_PATH	build/lib/pyvista/ext/viewer_directive.py	/^from trame_vtk.tools.vtksz2html import HTML_VIEWER_PATH$/;"	i
HTML_VIEWER_PATH	pyvista/ext/viewer_directive.py	/^from trame_vtk.tools.vtksz2html import HTML_VIEWER_PATH$/;"	i
HYPOTHESIS_MAX_EXAMPLES	tests/core/test_dataobject_filters.py	/^from tests.core.test_dataset_filters import HYPOTHESIS_MAX_EXAMPLES$/;"	i
HYPOTHESIS_MAX_EXAMPLES	tests/core/test_dataset_filters.py	/^HYPOTHESIS_MAX_EXAMPLES = 20$/;"	v
HealthCheck	tests/core/test_dataobject_filters.py	/^from hypothesis import HealthCheck$/;"	i
HealthCheck	tests/core/test_datasetattributes.py	/^from hypothesis import HealthCheck$/;"	i
HealthCheck	tests/core/test_reader.py	/^from hypothesis import HealthCheck$/;"	i
HealthCheck	tests/plotting/test_regression.py	/^from hypothesis import HealthCheck$/;"	i
HealthCheck	tests/plotting/test_theme.py	/^from hypothesis import HealthCheck$/;"	i
HexagonalPrism	build/lib/pyvista/examples/cells.py	/^def HexagonalPrism() -> UnstructuredGrid:$/;"	f
HexagonalPrism	pyvista/examples/cells.py	/^def HexagonalPrism() -> UnstructuredGrid:$/;"	f
Hexahedron	build/lib/pyvista/examples/cells.py	/^def Hexahedron() -> UnstructuredGrid:$/;"	f
Hexahedron	pyvista/examples/cells.py	/^def Hexahedron() -> UnstructuredGrid:$/;"	f
ID_TYPE	build/lib/pyvista/__init__.py	/^ID_TYPE = cast(int, _get_vtk_id_type())$/;"	v
ID_TYPE	pyvista/__init__.py	/^ID_TYPE = cast(int, _get_vtk_id_type())$/;"	v
IFrame	tests/plotting/jupyter/test_trame.py	/^from IPython.display import IFrame$/;"	i
IMPORT_MATPLOTLIB_RE	doc/source/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	v
IMPORT_MATPLOTLIB_RE	tests/plotting/tinypages/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	v
IMPORT_PYVISTA_RE	doc/source/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	v
IMPORT_PYVISTA_RE	tests/plotting/tinypages/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	v
INF	build/lib/pyvista/core/utilities/cell_quality.py	/^INF = float('inf')$/;"	v
INF	pyvista/core/utilities/cell_quality.py	/^INF = float('inf')$/;"	v
INTERNAL_ENERGY	build/lib/pyvista/core/utilities/reader.py	/^    INTERNAL_ENERGY = 140$/;"	v	class:Plot3DFunctionEnum
INTERNAL_ENERGY	build/lib/pyvista/core/utilities/reader.py	/^    INTERNAL_ENERGY = Plot3DFunctionEnum.INTERNAL_ENERGY$/;"	v	class:MultiBlockPlot3DReader
INTERNAL_ENERGY	pyvista/core/utilities/reader.py	/^    INTERNAL_ENERGY = 140$/;"	v	class:Plot3DFunctionEnum
INTERNAL_ENERGY	pyvista/core/utilities/reader.py	/^    INTERNAL_ENERGY = Plot3DFunctionEnum.INTERNAL_ENERGY$/;"	v	class:MultiBlockPlot3DReader
IO	build/lib/pyvista/ext/coverage.py	/^from typing import IO$/;"	i
IO	pyvista/ext/coverage.py	/^from typing import IO$/;"	i
IPYGANY_MAP	build/lib/pyvista/plotting/colors.py	/^IPYGANY_MAP = {$/;"	v
IPYGANY_MAP	pyvista/plotting/colors.py	/^IPYGANY_MAP = {$/;"	v
Icosahedron	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Icosahedron as Icosahedron$/;"	i
Icosahedron	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Icosahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
Icosahedron	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Icosahedron as Icosahedron$/;"	i
Icosahedron	pyvista/core/utilities/geometric_objects.py	/^def Icosahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
Icosphere	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Icosphere as Icosphere$/;"	i
Icosphere	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Icosphere($/;"	f
Icosphere	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Icosphere as Icosphere$/;"	i
Icosphere	pyvista/core/utilities/geometric_objects.py	/^def Icosphere($/;"	f
Image	build/lib/pyvista/core/utilities/reader.py	/^        from PIL import Image$/;"	i
Image	build/lib/pyvista/ext/plot_directive.py	/^from docutils.parsers.rst.directives.images import Image$/;"	i
Image	build/lib/pyvista/jupyter/notebook.py	/^    import PIL.Image$/;"	i
Image	build/lib/pyvista/plotting/plotter.py	/^            from PIL import Image$/;"	i
Image	doc/source/make_tables.py	/^        from PIL import Image$/;"	i
Image	pyvista/core/utilities/reader.py	/^        from PIL import Image$/;"	i
Image	pyvista/ext/plot_directive.py	/^from docutils.parsers.rst.directives.images import Image$/;"	i
Image	pyvista/jupyter/notebook.py	/^    import PIL.Image$/;"	i
Image	pyvista/plotting/plotter.py	/^            from PIL import Image$/;"	i
Image	tests/doc/tst_doc_images.py	/^from PIL import Image$/;"	i
Image	tests/plotting/jupyter/test_static.py	/^    from PIL.Image import Image$/;"	i
Image	tests/plotting/test_plotting.py	/^from PIL import Image$/;"	i
Image	tests/plotting/test_plotting_utilities.py	/^from PIL import Image$/;"	i
ImageData	build/lib/pyvista/core/__init__.py	/^from .grid import ImageData as ImageData$/;"	i
ImageData	build/lib/pyvista/core/filters/image_data.py	/^    from pyvista import ImageData$/;"	i
ImageData	build/lib/pyvista/core/grid.py	/^class ImageData(Grid, ImageDataFilters, _vtk.vtkImageData):$/;"	c
ImageData	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from pyvista import ImageData$/;"	i
ImageData	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import ImageData$/;"	i
ImageData	build/lib/pyvista/core/wrappers.py	/^from .grid import ImageData$/;"	i
ImageData	build/lib/pyvista/plotting/utilities/regression.py	/^    from pyvista import ImageData$/;"	i
ImageData	pyvista/core/__init__.py	/^from .grid import ImageData as ImageData$/;"	i
ImageData	pyvista/core/filters/image_data.py	/^    from pyvista import ImageData$/;"	i
ImageData	pyvista/core/grid.py	/^class ImageData(Grid, ImageDataFilters, _vtk.vtkImageData):$/;"	c
ImageData	pyvista/core/utilities/geometric_objects.py	/^    from pyvista import ImageData$/;"	i
ImageData	pyvista/core/utilities/helpers.py	/^    from pyvista import ImageData$/;"	i
ImageData	pyvista/core/wrappers.py	/^from .grid import ImageData$/;"	i
ImageData	pyvista/plotting/utilities/regression.py	/^    from pyvista import ImageData$/;"	i
ImageData	tests/core/test_composite.py	/^from pyvista import ImageData$/;"	i
ImageData2DCarousel	doc/source/make_tables.py	/^class ImageData2DCarousel(DatasetGalleryCarousel):$/;"	c
ImageData3DCarousel	doc/source/make_tables.py	/^class ImageData3DCarousel(DatasetGalleryCarousel):$/;"	c
ImageDataCarousel	doc/source/make_tables.py	/^class ImageDataCarousel(DatasetGalleryCarousel):$/;"	c
ImageDataFilters	build/lib/pyvista/core/__init__.py	/^from .filters import ImageDataFilters as ImageDataFilters$/;"	i
ImageDataFilters	build/lib/pyvista/core/filters/__init__.py	/^from .image_data import ImageDataFilters$/;"	i
ImageDataFilters	build/lib/pyvista/core/filters/image_data.py	/^class ImageDataFilters(DataSetFilters):$/;"	c
ImageDataFilters	build/lib/pyvista/core/grid.py	/^from .filters import ImageDataFilters$/;"	i
ImageDataFilters	pyvista/core/__init__.py	/^from .filters import ImageDataFilters as ImageDataFilters$/;"	i
ImageDataFilters	pyvista/core/filters/__init__.py	/^from .image_data import ImageDataFilters$/;"	i
ImageDataFilters	pyvista/core/filters/image_data.py	/^class ImageDataFilters(DataSetFilters):$/;"	c
ImageDataFilters	pyvista/core/grid.py	/^from .filters import ImageDataFilters$/;"	i
ImageEllipsoidSource	build/lib/pyvista/core/utilities/__init__.py	/^from .image_sources import ImageEllipsoidSource as ImageEllipsoidSource$/;"	i
ImageEllipsoidSource	build/lib/pyvista/core/utilities/image_sources.py	/^class ImageEllipsoidSource(_vtk.vtkImageEllipsoidSource):$/;"	c
ImageEllipsoidSource	pyvista/core/utilities/__init__.py	/^from .image_sources import ImageEllipsoidSource as ImageEllipsoidSource$/;"	i
ImageEllipsoidSource	pyvista/core/utilities/image_sources.py	/^class ImageEllipsoidSource(_vtk.vtkImageEllipsoidSource):$/;"	c
ImageFile	build/lib/pyvista/ext/plot_directive.py	/^class ImageFile:$/;"	c
ImageFile	pyvista/ext/plot_directive.py	/^class ImageFile:$/;"	c
ImageGaussianSource	build/lib/pyvista/core/utilities/__init__.py	/^from .image_sources import ImageGaussianSource as ImageGaussianSource$/;"	i
ImageGaussianSource	build/lib/pyvista/core/utilities/image_sources.py	/^class ImageGaussianSource(_vtk.vtkImageGaussianSource):$/;"	c
ImageGaussianSource	pyvista/core/utilities/__init__.py	/^from .image_sources import ImageGaussianSource as ImageGaussianSource$/;"	i
ImageGaussianSource	pyvista/core/utilities/image_sources.py	/^class ImageGaussianSource(_vtk.vtkImageGaussianSource):$/;"	c
ImageGridSource	build/lib/pyvista/core/utilities/__init__.py	/^from .image_sources import ImageGridSource as ImageGridSource$/;"	i
ImageGridSource	build/lib/pyvista/core/utilities/image_sources.py	/^class ImageGridSource(_vtk.vtkImageGridSource):$/;"	c
ImageGridSource	pyvista/core/utilities/__init__.py	/^from .image_sources import ImageGridSource as ImageGridSource$/;"	i
ImageGridSource	pyvista/core/utilities/image_sources.py	/^class ImageGridSource(_vtk.vtkImageGridSource):$/;"	c
ImageMandelbrotSource	build/lib/pyvista/core/utilities/__init__.py	/^from .image_sources import ImageMandelbrotSource as ImageMandelbrotSource$/;"	i
ImageMandelbrotSource	build/lib/pyvista/core/utilities/image_sources.py	/^class ImageMandelbrotSource(_vtk.vtkImageMandelbrotSource):$/;"	c
ImageMandelbrotSource	pyvista/core/utilities/__init__.py	/^from .image_sources import ImageMandelbrotSource as ImageMandelbrotSource$/;"	i
ImageMandelbrotSource	pyvista/core/utilities/image_sources.py	/^class ImageMandelbrotSource(_vtk.vtkImageMandelbrotSource):$/;"	c
ImageNoiseSource	build/lib/pyvista/core/utilities/__init__.py	/^from .image_sources import ImageNoiseSource as ImageNoiseSource$/;"	i
ImageNoiseSource	build/lib/pyvista/core/utilities/image_sources.py	/^class ImageNoiseSource(_vtk.vtkImageNoiseSource):$/;"	c
ImageNoiseSource	pyvista/core/utilities/__init__.py	/^from .image_sources import ImageNoiseSource as ImageNoiseSource$/;"	i
ImageNoiseSource	pyvista/core/utilities/image_sources.py	/^class ImageNoiseSource(_vtk.vtkImageNoiseSource):$/;"	c
ImageSequence	build/lib/pyvista/core/utilities/reader.py	/^        from PIL import ImageSequence$/;"	i
ImageSequence	pyvista/core/utilities/reader.py	/^        from PIL import ImageSequence$/;"	i
ImageSequence	tests/plotting/test_plotting_utilities.py	/^from PIL import ImageSequence$/;"	i
ImageSinusoidSource	build/lib/pyvista/core/utilities/__init__.py	/^from .image_sources import ImageSinusoidSource as ImageSinusoidSource$/;"	i
ImageSinusoidSource	build/lib/pyvista/core/utilities/image_sources.py	/^class ImageSinusoidSource(_vtk.vtkImageSinusoidSource):$/;"	c
ImageSinusoidSource	pyvista/core/utilities/__init__.py	/^from .image_sources import ImageSinusoidSource as ImageSinusoidSource$/;"	i
ImageSinusoidSource	pyvista/core/utilities/image_sources.py	/^class ImageSinusoidSource(_vtk.vtkImageSinusoidSource):$/;"	c
Info	build/lib/pyvista/core/utilities/cell_quality.py	/^Info = CellQualityInfo$/;"	v
Info	pyvista/core/utilities/cell_quality.py	/^Info = CellQualityInfo$/;"	v
Initialize	build/lib/pyvista/plotting/charts.py	/^        def Initialize(self, item) -> bool:$/;"	m	class:_CustomContextItem.ItemWrapper
Initialize	pyvista/plotting/charts.py	/^        def Initialize(self, item) -> bool:$/;"	m	class:_CustomContextItem.ItemWrapper
Instance	build/lib/pyvista/typing/mypy_plugin.py	/^    from mypy.types import Instance$/;"	i
Instance	pyvista/typing/mypy_plugin.py	/^    from mypy.types import Instance$/;"	i
IntEnum	build/lib/pyvista/core/celltype.py	/^from enum import IntEnum$/;"	i
IntEnum	build/lib/pyvista/core/utilities/geometric_sources.py	/^from enum import IntEnum$/;"	i
IntEnum	build/lib/pyvista/plotting/lights.py	/^from enum import IntEnum$/;"	i
IntEnum	pyvista/core/celltype.py	/^from enum import IntEnum$/;"	i
IntEnum	pyvista/core/utilities/geometric_sources.py	/^from enum import IntEnum$/;"	i
IntEnum	pyvista/plotting/lights.py	/^from enum import IntEnum$/;"	i
InteractionEventType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import InteractionEventType as InteractionEventType$/;"	i
InteractionEventType	build/lib/pyvista/core/_typing_core/_aliases.py	/^InteractionEventType = Union[Literal['end', 'start', 'always'], _vtk.vtkCommand.EventIds]$/;"	v
InteractionEventType	build/lib/pyvista/plotting/widgets.py	/^    from pyvista.core._typing_core import InteractionEventType$/;"	i
InteractionEventType	pyvista/core/_typing_core/__init__.py	/^from ._aliases import InteractionEventType as InteractionEventType$/;"	i
InteractionEventType	pyvista/core/_typing_core/_aliases.py	/^InteractionEventType = Union[Literal['end', 'start', 'always'], _vtk.vtkCommand.EventIds]$/;"	v
InteractionEventType	pyvista/plotting/widgets.py	/^    from pyvista.core._typing_core import InteractionEventType$/;"	i
InterpolationType	build/lib/pyvista/plotting/_plotting.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	build/lib/pyvista/plotting/_property.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	build/lib/pyvista/plotting/actor_properties.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	build/lib/pyvista/plotting/opts.py	/^class InterpolationType(AnnotatedIntEnum):$/;"	c
InterpolationType	build/lib/pyvista/plotting/themes.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	pyvista/plotting/_plotting.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	pyvista/plotting/_property.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	pyvista/plotting/actor_properties.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	pyvista/plotting/opts.py	/^class InterpolationType(AnnotatedIntEnum):$/;"	c
InterpolationType	pyvista/plotting/themes.py	/^from .opts import InterpolationType$/;"	i
InterpolationType	tests/plotting/test_axes.py	/^from pyvista.plotting.opts import InterpolationType$/;"	i
InterrogateVTKGlyph3D	tests/core/test_dataset_filters.py	/^class InterrogateVTKGlyph3D:$/;"	c
InvalidCameraError	build/lib/pyvista/plotting/__init__.py	/^from .errors import InvalidCameraError as InvalidCameraError$/;"	i
InvalidCameraError	build/lib/pyvista/plotting/errors.py	/^class InvalidCameraError(ValueError):  # numpydoc ignore=PR01$/;"	c
InvalidCameraError	build/lib/pyvista/plotting/renderer.py	/^from .errors import InvalidCameraError$/;"	i
InvalidCameraError	pyvista/plotting/__init__.py	/^from .errors import InvalidCameraError as InvalidCameraError$/;"	i
InvalidCameraError	pyvista/plotting/errors.py	/^class InvalidCameraError(ValueError):  # numpydoc ignore=PR01$/;"	c
InvalidCameraError	pyvista/plotting/renderer.py	/^from .errors import InvalidCameraError$/;"	i
InvalidCameraError	tests/plotting/test_plotting.py	/^from pyvista.plotting.errors import InvalidCameraError$/;"	i
ItemWrapper	build/lib/pyvista/plotting/charts.py	/^    class ItemWrapper:$/;"	c	class:_CustomContextItem
ItemWrapper	pyvista/plotting/charts.py	/^    class ItemWrapper:$/;"	c	class:_CustomContextItem
ItemsView	tests/plotting/test_plotting.py	/^    from collections.abc import ItemsView$/;"	i
Iterable	build/lib/pyvista/core/_validation/check.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/composite.py	/^    from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/dataset.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/filters/data_set.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/filters/image_data.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/partitioned.py	/^    from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/pointset.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/pyvista_ndarray.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/core/utilities/fileio.py	/^    from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/plotting/axes_actor.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/plotting/plotter.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/plotting/prop_collection.py	/^from collections.abc import Iterable$/;"	i
Iterable	build/lib/pyvista/plotting/renderer.py	/^from collections.abc import Iterable$/;"	i
Iterable	doc/source/make_tables.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/_validation/check.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/composite.py	/^    from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/dataset.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/filters/data_set.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/filters/image_data.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/partitioned.py	/^    from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/pointset.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/pyvista_ndarray.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/core/utilities/fileio.py	/^    from collections.abc import Iterable$/;"	i
Iterable	pyvista/plotting/axes_actor.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/plotting/plotter.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/plotting/prop_collection.py	/^from collections.abc import Iterable$/;"	i
Iterable	pyvista/plotting/renderer.py	/^from collections.abc import Iterable$/;"	i
Iterable	tests/typing/test_return_type.py	/^    from collections.abc import Iterable$/;"	i
Iterator	build/lib/pyvista/core/composite.py	/^from collections.abc import Iterator$/;"	i
Iterator	build/lib/pyvista/core/dataset.py	/^    from collections.abc import Iterator$/;"	i
Iterator	build/lib/pyvista/core/datasetattributes.py	/^    from collections.abc import Iterator$/;"	i
Iterator	build/lib/pyvista/plotting/axes_assembly.py	/^    from collections.abc import Iterator$/;"	i
Iterator	build/lib/pyvista/plotting/plotter.py	/^from collections.abc import Iterator$/;"	i
Iterator	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    from collections.abc import Iterator$/;"	i
Iterator	doc/source/make_tables.py	/^from collections.abc import Iterator$/;"	i
Iterator	pyvista/core/composite.py	/^from collections.abc import Iterator$/;"	i
Iterator	pyvista/core/dataset.py	/^    from collections.abc import Iterator$/;"	i
Iterator	pyvista/core/datasetattributes.py	/^    from collections.abc import Iterator$/;"	i
Iterator	pyvista/plotting/axes_assembly.py	/^    from collections.abc import Iterator$/;"	i
Iterator	pyvista/plotting/plotter.py	/^from collections.abc import Iterator$/;"	i
Iterator	pyvista/plotting/utilities/sphinx_gallery.py	/^    from collections.abc import Iterator$/;"	i
JPEGReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import JPEGReader as JPEGReader$/;"	i
JPEGReader	build/lib/pyvista/core/utilities/reader.py	/^class JPEGReader(BaseReader):$/;"	c
JPEGReader	pyvista/core/utilities/__init__.py	/^from .reader import JPEGReader as JPEGReader$/;"	i
JPEGReader	pyvista/core/utilities/reader.py	/^class JPEGReader(BaseReader):$/;"	c
KDTree	examples/01-filter/distance_between_surfaces.py	/^from scipy.spatial import KDTree$/;"	i
KEY	tests/plotting/test_scalar_bars.py	/^KEY = 'Data'$/;"	v
KILL_DISPLAY	build/lib/pyvista/plotting/plotter.py	/^        KILL_DISPLAY = False$/;"	v
KILL_DISPLAY	build/lib/pyvista/plotting/plotter.py	/^KILL_DISPLAY = platform.system() == 'Linux' and os.environ.get('PYVISTA_KILL_DISPLAY')$/;"	v
KILL_DISPLAY	pyvista/plotting/plotter.py	/^        KILL_DISPLAY = False$/;"	v
KILL_DISPLAY	pyvista/plotting/plotter.py	/^KILL_DISPLAY = platform.system() == 'Linux' and os.environ.get('PYVISTA_KILL_DISPLAY')$/;"	v
KINETIC_ENERGY	build/lib/pyvista/core/utilities/reader.py	/^    KINETIC_ENERGY = 144$/;"	v	class:Plot3DFunctionEnum
KINETIC_ENERGY	build/lib/pyvista/core/utilities/reader.py	/^    KINETIC_ENERGY = Plot3DFunctionEnum.KINETIC_ENERGY$/;"	v	class:MultiBlockPlot3DReader
KINETIC_ENERGY	pyvista/core/utilities/reader.py	/^    KINETIC_ENERGY = 144$/;"	v	class:Plot3DFunctionEnum
KINETIC_ENERGY	pyvista/core/utilities/reader.py	/^    KINETIC_ENERGY = Plot3DFunctionEnum.KINETIC_ENERGY$/;"	v	class:MultiBlockPlot3DReader
KochanekSpline	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import KochanekSpline as KochanekSpline$/;"	i
KochanekSpline	build/lib/pyvista/core/utilities/parametric_objects.py	/^def KochanekSpline($/;"	f
KochanekSpline	pyvista/core/utilities/__init__.py	/^from .parametric_objects import KochanekSpline as KochanekSpline$/;"	i
KochanekSpline	pyvista/core/utilities/parametric_objects.py	/^def KochanekSpline($/;"	f
LABEL_DATA	tests/core/test_dataset_filters.py	/^LABEL_DATA = [-1, -2, 1]$/;"	v
LAGRANGE_CURVE	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_CURVE = _CELL_TYPE_INFO['LAGRANGE_CURVE']$/;"	v	class:CellType
LAGRANGE_CURVE	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_CURVE=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_CURVE),$/;"	v	class:_CellTypeTuple
LAGRANGE_CURVE	pyvista/core/celltype.py	/^    LAGRANGE_CURVE = _CELL_TYPE_INFO['LAGRANGE_CURVE']$/;"	v	class:CellType
LAGRANGE_CURVE	pyvista/core/celltype.py	/^    LAGRANGE_CURVE=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_CURVE),$/;"	v	class:_CellTypeTuple
LAGRANGE_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_HEXAHEDRON = _CELL_TYPE_INFO['LAGRANGE_HEXAHEDRON']$/;"	v	class:CellType
LAGRANGE_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_HEXAHEDRON=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_HEXAHEDRON),$/;"	v	class:_CellTypeTuple
LAGRANGE_HEXAHEDRON	pyvista/core/celltype.py	/^    LAGRANGE_HEXAHEDRON = _CELL_TYPE_INFO['LAGRANGE_HEXAHEDRON']$/;"	v	class:CellType
LAGRANGE_HEXAHEDRON	pyvista/core/celltype.py	/^    LAGRANGE_HEXAHEDRON=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_HEXAHEDRON),$/;"	v	class:_CellTypeTuple
LAGRANGE_PYRAMID	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_PYRAMID = _CELL_TYPE_INFO['LAGRANGE_PYRAMID']$/;"	v	class:CellType
LAGRANGE_PYRAMID	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_PYRAMID=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_PYRAMID),$/;"	v	class:_CellTypeTuple
LAGRANGE_PYRAMID	pyvista/core/celltype.py	/^    LAGRANGE_PYRAMID = _CELL_TYPE_INFO['LAGRANGE_PYRAMID']$/;"	v	class:CellType
LAGRANGE_PYRAMID	pyvista/core/celltype.py	/^    LAGRANGE_PYRAMID=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_PYRAMID),$/;"	v	class:_CellTypeTuple
LAGRANGE_QUADRILATERAL	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_QUADRILATERAL = _CELL_TYPE_INFO['LAGRANGE_QUADRILATERAL']$/;"	v	class:CellType
LAGRANGE_QUADRILATERAL	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_QUADRILATERAL=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_QUADRILATERAL),$/;"	v	class:_CellTypeTuple
LAGRANGE_QUADRILATERAL	pyvista/core/celltype.py	/^    LAGRANGE_QUADRILATERAL = _CELL_TYPE_INFO['LAGRANGE_QUADRILATERAL']$/;"	v	class:CellType
LAGRANGE_QUADRILATERAL	pyvista/core/celltype.py	/^    LAGRANGE_QUADRILATERAL=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_QUADRILATERAL),$/;"	v	class:_CellTypeTuple
LAGRANGE_TETRAHEDRON	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_TETRAHEDRON = _CELL_TYPE_INFO['LAGRANGE_TETRAHEDRON']$/;"	v	class:CellType
LAGRANGE_TETRAHEDRON	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_TETRAHEDRON=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_TETRAHEDRON),$/;"	v	class:_CellTypeTuple
LAGRANGE_TETRAHEDRON	pyvista/core/celltype.py	/^    LAGRANGE_TETRAHEDRON = _CELL_TYPE_INFO['LAGRANGE_TETRAHEDRON']$/;"	v	class:CellType
LAGRANGE_TETRAHEDRON	pyvista/core/celltype.py	/^    LAGRANGE_TETRAHEDRON=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_TETRAHEDRON),$/;"	v	class:_CellTypeTuple
LAGRANGE_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_TRIANGLE = _CELL_TYPE_INFO['LAGRANGE_TRIANGLE']$/;"	v	class:CellType
LAGRANGE_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_TRIANGLE=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_TRIANGLE),$/;"	v	class:_CellTypeTuple
LAGRANGE_TRIANGLE	pyvista/core/celltype.py	/^    LAGRANGE_TRIANGLE = _CELL_TYPE_INFO['LAGRANGE_TRIANGLE']$/;"	v	class:CellType
LAGRANGE_TRIANGLE	pyvista/core/celltype.py	/^    LAGRANGE_TRIANGLE=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_TRIANGLE),$/;"	v	class:_CellTypeTuple
LAGRANGE_WEDGE	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_WEDGE = _CELL_TYPE_INFO['LAGRANGE_WEDGE']$/;"	v	class:CellType
LAGRANGE_WEDGE	build/lib/pyvista/core/celltype.py	/^    LAGRANGE_WEDGE=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_WEDGE),$/;"	v	class:_CellTypeTuple
LAGRANGE_WEDGE	pyvista/core/celltype.py	/^    LAGRANGE_WEDGE = _CELL_TYPE_INFO['LAGRANGE_WEDGE']$/;"	v	class:CellType
LAGRANGE_WEDGE	pyvista/core/celltype.py	/^    LAGRANGE_WEDGE=_CellTypeTuple(value=_vtk.VTK_LAGRANGE_WEDGE),$/;"	v	class:_CellTypeTuple
LINE	build/lib/pyvista/core/celltype.py	/^    LINE = _CELL_TYPE_INFO['LINE']$/;"	v	class:CellType
LINE	build/lib/pyvista/core/celltype.py	/^    LINE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
LINE	build/lib/pyvista/plotting/axes_actor.py	/^        LINE = 1$/;"	v	class:AxesActor.ShaftType
LINE	pyvista/core/celltype.py	/^    LINE = _CELL_TYPE_INFO['LINE']$/;"	v	class:CellType
LINE	pyvista/core/celltype.py	/^    LINE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
LINE	pyvista/plotting/axes_actor.py	/^        LINE = 1$/;"	v	class:AxesActor.ShaftType
LOGO_TITLE	build/lib/pyvista/demos/logo.py	/^LOGO_TITLE = 'PyVista'$/;"	v
LOGO_TITLE	pyvista/demos/logo.py	/^LOGO_TITLE = 'PyVista'$/;"	v
LOWER_LIGHTNESS_THRESHOLD	doc/source/make_tables.py	/^LOWER_LIGHTNESS_THRESHOLD = 0.15$/;"	v
Label	build/lib/pyvista/plotting/__init__.py	/^from .text import Label as Label$/;"	i
Label	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.text import Label$/;"	i
Label	build/lib/pyvista/plotting/text.py	/^class Label(_Prop3DMixin, Text):$/;"	c
Label	pyvista/plotting/__init__.py	/^from .text import Label as Label$/;"	i
Label	pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.text import Label$/;"	i
Label	pyvista/plotting/text.py	/^class Label(_Prop3DMixin, Text):$/;"	c
Light	build/lib/pyvista/plotting/__init__.py	/^from .lights import Light as Light$/;"	i
Light	build/lib/pyvista/plotting/lights.py	/^class Light(vtkLight):$/;"	c
Light	build/lib/pyvista/plotting/renderer.py	/^    from .lights import Light$/;"	i
Light	pyvista/plotting/__init__.py	/^from .lights import Light as Light$/;"	i
Light	pyvista/plotting/lights.py	/^class Light(vtkLight):$/;"	c
Light	pyvista/plotting/renderer.py	/^    from .lights import Light$/;"	i
LightType	build/lib/pyvista/plotting/lights.py	/^class LightType(IntEnum):$/;"	c
LightType	pyvista/plotting/lights.py	/^class LightType(IntEnum):$/;"	c
Line	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Line as Line$/;"	i
Line	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Line($/;"	f
Line	build/lib/pyvista/examples/cells.py	/^def Line() -> UnstructuredGrid:$/;"	f
Line	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Line as Line$/;"	i
Line	pyvista/core/utilities/geometric_objects.py	/^def Line($/;"	f
Line	pyvista/examples/cells.py	/^def Line() -> UnstructuredGrid:$/;"	f
LinePlot2D	build/lib/pyvista/plotting/charts.py	/^class LinePlot2D(_Plot, _vtk.vtkPlotLine):$/;"	c
LinePlot2D	pyvista/plotting/charts.py	/^class LinePlot2D(_Plot, _vtk.vtkPlotLine):$/;"	c
LineSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import LineSource as LineSource$/;"	i
LineSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import LineSource$/;"	i
LineSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class LineSource(_vtk.vtkLineSource):$/;"	c
LineSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import LineSource as LineSource$/;"	i
LineSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import LineSource$/;"	i
LineSource	pyvista/core/utilities/geometric_sources.py	/^class LineSource(_vtk.vtkLineSource):$/;"	c
LineStyleTable	doc/source/make_tables.py	/^class LineStyleTable(DocTable):$/;"	c
ListedColormap	build/lib/pyvista/plotting/colors.py	/^from matplotlib.colors import ListedColormap$/;"	i
ListedColormap	examples/02-plot/cmap.py	/^from matplotlib.colors import ListedColormap$/;"	i
ListedColormap	pyvista/plotting/colors.py	/^from matplotlib.colors import ListedColormap$/;"	i
Literal	build/lib/pyvista/__init__.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/_typing_core/_aliases.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/_validation/validate.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/_vtk_core.py	/^    from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/celltype.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/composite.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/dataset.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/filters/data_object.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/filters/data_set.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/filters/image_data.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/arrays.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/cell_quality.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/cells.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/fileio.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/geometric_objects.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/geometric_sources.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/helpers.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/points.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/transform.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/core/utilities/transformations.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/plotting/axes_assembly.py	/^from typing import Literal$/;"	i
Literal	build/lib/pyvista/plotting/prop3d.py	/^from typing import Literal$/;"	i
Literal	doc/source/make_tables.py	/^from typing import Literal$/;"	i
Literal	pyvista/__init__.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/_typing_core/_aliases.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/_validation/validate.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/_vtk_core.py	/^    from typing import Literal$/;"	i
Literal	pyvista/core/celltype.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/composite.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/dataset.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/filters/data_object.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/filters/data_set.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/filters/image_data.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/arrays.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/cell_quality.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/cells.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/fileio.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/geometric_objects.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/geometric_sources.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/helpers.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/points.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/transform.py	/^from typing import Literal$/;"	i
Literal	pyvista/core/utilities/transformations.py	/^from typing import Literal$/;"	i
Literal	pyvista/plotting/axes_assembly.py	/^from typing import Literal$/;"	i
Literal	pyvista/plotting/prop3d.py	/^from typing import Literal$/;"	i
Literal	tests/core/test_utilities.py	/^from typing import Literal$/;"	i
Literal	tests/plotting/test_widgets.py	/^from typing import Literal$/;"	i
LookupTable	build/lib/pyvista/plotting/__init__.py	/^from .lookup_table import LookupTable as LookupTable$/;"	i
LookupTable	build/lib/pyvista/plotting/lookup_table.py	/^class LookupTable(_vtk.vtkLookupTable):$/;"	c
LookupTable	build/lib/pyvista/plotting/mapper.py	/^from .lookup_table import LookupTable$/;"	i
LookupTable	pyvista/plotting/__init__.py	/^from .lookup_table import LookupTable as LookupTable$/;"	i
LookupTable	pyvista/plotting/lookup_table.py	/^class LookupTable(_vtk.vtkLookupTable):$/;"	c
LookupTable	pyvista/plotting/mapper.py	/^from .lookup_table import LookupTable$/;"	i
LookupTable	tests/plotting/test_lookup_table.py	/^from pyvista import LookupTable$/;"	i
MACH	build/lib/pyvista/core/utilities/reader.py	/^    MACH = 112$/;"	v	class:Plot3DFunctionEnum
MACH	build/lib/pyvista/core/utilities/reader.py	/^    MACH = Plot3DFunctionEnum.MACH$/;"	v	class:MultiBlockPlot3DReader
MACH	pyvista/core/utilities/reader.py	/^    MACH = 112$/;"	v	class:Plot3DFunctionEnum
MACH	pyvista/core/utilities/reader.py	/^    MACH = Plot3DFunctionEnum.MACH$/;"	v	class:MultiBlockPlot3DReader
MAGENTA	doc/source/make_tables.py	/^    MAGENTA = auto()$/;"	v	class:ColorClassification
MAGENTA_UPPER_BOUND	doc/source/make_tables.py	/^MAGENTA_UPPER_BOUND = 351 \/ _360$/;"	v
MAX_N_COLOR_BARS	build/lib/pyvista/__init__.py	/^MAX_N_COLOR_BARS = 10$/;"	v
MAX_N_COLOR_BARS	build/lib/pyvista/plotting/__init__.py	/^from pyvista import MAX_N_COLOR_BARS as MAX_N_COLOR_BARS$/;"	i
MAX_N_COLOR_BARS	build/lib/pyvista/plotting/renderer.py	/^from pyvista import MAX_N_COLOR_BARS$/;"	i
MAX_N_COLOR_BARS	build/lib/pyvista/plotting/scalar_bars.py	/^from pyvista import MAX_N_COLOR_BARS$/;"	i
MAX_N_COLOR_BARS	pyvista/__init__.py	/^MAX_N_COLOR_BARS = 10$/;"	v
MAX_N_COLOR_BARS	pyvista/plotting/__init__.py	/^from pyvista import MAX_N_COLOR_BARS as MAX_N_COLOR_BARS$/;"	i
MAX_N_COLOR_BARS	pyvista/plotting/renderer.py	/^from pyvista import MAX_N_COLOR_BARS$/;"	i
MAX_N_COLOR_BARS	pyvista/plotting/scalar_bars.py	/^from pyvista import MAX_N_COLOR_BARS$/;"	i
MAX_VTKSZ_FILE_SIZE_MB	tests/doc/tst_doc_images.py	/^MAX_VTKSZ_FILE_SIZE_MB = 50$/;"	v
MESH	build/lib/pyvista/plotting/opts.py	/^    MESH = (0, 'Mesh')$/;"	v	class:ElementType
MESH	pyvista/plotting/opts.py	/^    MESH = (0, 'Mesh')$/;"	v	class:ElementType
MFIXReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import MFIXReader as MFIXReader$/;"	i
MFIXReader	build/lib/pyvista/core/utilities/reader.py	/^class MFIXReader(BaseReader):$/;"	c
MFIXReader	pyvista/core/utilities/__init__.py	/^from .reader import MFIXReader as MFIXReader$/;"	i
MFIXReader	pyvista/core/utilities/reader.py	/^class MFIXReader(BaseReader):$/;"	c
MINCImageReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import MINCImageReader as MINCImageReader$/;"	i
MINCImageReader	build/lib/pyvista/core/utilities/reader.py	/^class MINCImageReader(BaseReader):$/;"	c
MINCImageReader	pyvista/core/utilities/__init__.py	/^from .reader import MINCImageReader as MINCImageReader$/;"	i
MINCImageReader	pyvista/core/utilities/reader.py	/^class MINCImageReader(BaseReader):$/;"	c
MIRRORED_REPEAT	build/lib/pyvista/plotting/texture.py	/^        MIRRORED_REPEAT = (2, 'Mirrored repeat')$/;"	v	class:Texture.WrapType
MIRRORED_REPEAT	pyvista/plotting/texture.py	/^        MIRRORED_REPEAT = (2, 'Mirrored repeat')$/;"	v	class:Texture.WrapType
MOMENTUM	build/lib/pyvista/core/utilities/reader.py	/^    MOMENTUM = 202$/;"	v	class:Plot3DFunctionEnum
MOMENTUM	build/lib/pyvista/core/utilities/reader.py	/^    MOMENTUM = Plot3DFunctionEnum.MOMENTUM$/;"	v	class:MultiBlockPlot3DReader
MOMENTUM	pyvista/core/utilities/reader.py	/^    MOMENTUM = 202$/;"	v	class:Plot3DFunctionEnum
MOMENTUM	pyvista/core/utilities/reader.py	/^    MOMENTUM = Plot3DFunctionEnum.MOMENTUM$/;"	v	class:MultiBlockPlot3DReader
MYPY_CONFIG_FILE_NO_PLUGIN	tests/typing/mypy_plugin/test_plugin.py	/^MYPY_CONFIG_FILE_NO_PLUGIN = str(Path(TEST_DIR) \/ 'mypy_no_plugin.ini')$/;"	v
MYPY_CONFIG_FILE_USE_PLUGIN	tests/typing/mypy_plugin/test_plugin.py	/^MYPY_CONFIG_FILE_USE_PLUGIN = str(Path(TEST_DIR) \/ 'mypy_use_plugin.ini')$/;"	v
MYPY_PLUGIN_MODULE	tests/typing/mypy_plugin/test_plugin.py	/^MYPY_PLUGIN_MODULE = str(Path(ROOT_DIR) \/ 'pyvista' \/ 'typing' \/ 'mypy_plugin.py')$/;"	v
MagicMock	tests/plotting/test_conftest.py	/^    from unittest.mock import MagicMock$/;"	i
MarkerStyleTable	doc/source/make_tables.py	/^class MarkerStyleTable(DocTable):$/;"	c
MatrixLike	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import MatrixLike as MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^MatrixLike = _ArrayLike2D[NumberType]$/;"	v
MatrixLike	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/cell.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/dataset.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/datasetattributes.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/filters/image_data.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/grid.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/pointset.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/utilities/arrays.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/utilities/parametric_objects.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/utilities/points.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	build/lib/pyvista/plotting/axes_assembly.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/_typing_core/__init__.py	/^from ._aliases import MatrixLike as MatrixLike$/;"	i
MatrixLike	pyvista/core/_typing_core/_aliases.py	/^MatrixLike = _ArrayLike2D[NumberType]$/;"	v
MatrixLike	pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/cell.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/dataset.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/datasetattributes.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/filters/image_data.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/grid.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/pointset.py	/^    from ._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/utilities/arrays.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/utilities/fileio.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/utilities/geometric_objects.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/utilities/parametric_objects.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/utilities/points.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MatrixLike	pyvista/plotting/axes_assembly.py	/^    from pyvista.core._typing_core import MatrixLike$/;"	i
MedicalCarousel	doc/source/make_tables.py	/^class MedicalCarousel(DatasetGalleryCarousel):$/;"	c
Mesh	build/lib/pyvista/core/utilities/helpers.py	/^    from meshio import Mesh$/;"	i
Mesh	pyvista/core/utilities/helpers.py	/^    from meshio import Mesh$/;"	i
MetaImageReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import MetaImageReader as MetaImageReader$/;"	i
MetaImageReader	build/lib/pyvista/core/utilities/reader.py	/^class MetaImageReader(BaseReader):$/;"	c
MetaImageReader	pyvista/core/utilities/__init__.py	/^from .reader import MetaImageReader as MetaImageReader$/;"	i
MetaImageReader	pyvista/core/utilities/reader.py	/^class MetaImageReader(BaseReader):$/;"	c
MiscCarousel	doc/source/make_tables.py	/^class MiscCarousel(DatasetGalleryCarousel):$/;"	c
MissingDataError	build/lib/pyvista/core/__init__.py	/^from .errors import MissingDataError as MissingDataError$/;"	i
MissingDataError	build/lib/pyvista/core/errors.py	/^class MissingDataError(ValueError):$/;"	c
MissingDataError	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	build/lib/pyvista/core/utilities/arrays.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	pyvista/core/__init__.py	/^from .errors import MissingDataError as MissingDataError$/;"	i
MissingDataError	pyvista/core/errors.py	/^class MissingDataError(ValueError):$/;"	c
MissingDataError	pyvista/core/filters/data_set.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	pyvista/core/filters/image_data.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	pyvista/core/utilities/arrays.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	pyvista/plotting/plotter.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	tests/core/test_dataset_filters.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	tests/core/test_grid.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	tests/core/test_helpers.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	tests/core/test_polydata_filters.py	/^from pyvista.core.errors import MissingDataError$/;"	i
MissingDataError	tests/plotting/test_plotter.py	/^from pyvista.core.errors import MissingDataError$/;"	i
Mock	tests/core/test_dataset_filters.py	/^from unittest.mock import Mock$/;"	i
MockerFixture	tests/core/test_dataset.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/core/test_dataset_filters.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/core/test_grid.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/core/test_helpers.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/core/test_objects.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/core/test_polydata_filters.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/core/test_reader.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/core/test_utilities.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/jupyter/test_static.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_conftest.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_lookup_table.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_picking.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_plotter.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_plotting.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_regression.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_render_window_interactor.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_utilities.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/plotting/test_widgets.py	/^    from pytest_mock import MockerFixture$/;"	i
MockerFixture	tests/test_conftest.py	/^    from pytest_mock import MockerFixture$/;"	i
ModuleBadge	doc/source/make_tables.py	/^class ModuleBadge(_BaseDatasetBadge):$/;"	c
ModuleType	doc/source/make_tables.py	/^    from types import ModuleType$/;"	i
ModuleType	tests/check_doctest_names.py	/^from types import ModuleType$/;"	i
ModuleType	tests/examples/test_dataset_loader.py	/^from types import ModuleType$/;"	i
ModuleType	tests/plotting/test_plotting.py	/^from types import ModuleType$/;"	i
ModuleType	tests/typing/test_return_type.py	/^    from types import ModuleType$/;"	i
MultiBlock	build/lib/pyvista/core/__init__.py	/^from .composite import MultiBlock as MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.composite import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/composite.py	/^):$/;"	c
MultiBlock	build/lib/pyvista/core/filters/composite.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.core.composite import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/core/wrappers.py	/^from .composite import MultiBlock$/;"	i
MultiBlock	build/lib/pyvista/plotting/composite_mapper.py	/^        from pyvista import MultiBlock  # avoid circular$/;"	i
MultiBlock	pyvista/core/__init__.py	/^from .composite import MultiBlock as MultiBlock$/;"	i
MultiBlock	pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.composite import MultiBlock$/;"	i
MultiBlock	pyvista/core/composite.py	/^):$/;"	c
MultiBlock	pyvista/core/filters/composite.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	pyvista/core/filters/data_object.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	pyvista/core/filters/data_set.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	pyvista/core/utilities/fileio.py	/^    from pyvista.core.composite import MultiBlock$/;"	i
MultiBlock	pyvista/core/utilities/helpers.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	pyvista/core/utilities/transform.py	/^    from pyvista import MultiBlock$/;"	i
MultiBlock	pyvista/core/wrappers.py	/^from .composite import MultiBlock$/;"	i
MultiBlock	pyvista/plotting/composite_mapper.py	/^        from pyvista import MultiBlock  # avoid circular$/;"	i
MultiBlock	tests/core/test_composite.py	/^from pyvista import MultiBlock$/;"	i
MultiBlockCarousel	doc/source/make_tables.py	/^class MultiBlockCarousel(DatasetGalleryCarousel):$/;"	c
MultiBlockHeteroCarousel	doc/source/make_tables.py	/^class MultiBlockHeteroCarousel(DatasetGalleryCarousel):$/;"	c
MultiBlockHomoCarousel	doc/source/make_tables.py	/^class MultiBlockHomoCarousel(DatasetGalleryCarousel):$/;"	c
MultiBlockPlot3DReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import MultiBlockPlot3DReader as MultiBlockPlot3DReader$/;"	i
MultiBlockPlot3DReader	build/lib/pyvista/core/utilities/reader.py	/^class MultiBlockPlot3DReader(BaseReader):$/;"	c
MultiBlockPlot3DReader	pyvista/core/utilities/__init__.py	/^from .reader import MultiBlockPlot3DReader as MultiBlockPlot3DReader$/;"	i
MultiBlockPlot3DReader	pyvista/core/utilities/reader.py	/^class MultiBlockPlot3DReader(BaseReader):$/;"	c
MultiBlockSingleCarousel	doc/source/make_tables.py	/^class MultiBlockSingleCarousel(DatasetGalleryCarousel):$/;"	c
MultipleLines	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import MultipleLines as MultipleLines$/;"	i
MultipleLines	build/lib/pyvista/core/utilities/geometric_objects.py	/^def MultipleLines(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
MultipleLines	pyvista/core/utilities/__init__.py	/^from .geometric_objects import MultipleLines as MultipleLines$/;"	i
MultipleLines	pyvista/core/utilities/geometric_objects.py	/^def MultipleLines(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
MultipleLinesSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import MultipleLinesSource as MultipleLinesSource$/;"	i
MultipleLinesSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import MultipleLinesSource$/;"	i
MultipleLinesSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class MultipleLinesSource(_vtk.vtkLineSource):$/;"	c
MultipleLinesSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import MultipleLinesSource as MultipleLinesSource$/;"	i
MultipleLinesSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import MultipleLinesSource$/;"	i
MultipleLinesSource	pyvista/core/utilities/geometric_sources.py	/^class MultipleLinesSource(_vtk.vtkLineSource):$/;"	c
MutableSequence	build/lib/pyvista/core/composite.py	/^from collections.abc import MutableSequence$/;"	i
MutableSequence	build/lib/pyvista/core/partitioned.py	/^from collections.abc import MutableSequence$/;"	i
MutableSequence	build/lib/pyvista/plotting/cube_axes_actor.py	/^from collections.abc import MutableSequence$/;"	i
MutableSequence	build/lib/pyvista/plotting/prop_collection.py	/^from collections.abc import MutableSequence$/;"	i
MutableSequence	pyvista/core/composite.py	/^from collections.abc import MutableSequence$/;"	i
MutableSequence	pyvista/core/partitioned.py	/^from collections.abc import MutableSequence$/;"	i
MutableSequence	pyvista/plotting/cube_axes_actor.py	/^from collections.abc import MutableSequence$/;"	i
MutableSequence	pyvista/plotting/prop_collection.py	/^from collections.abc import MutableSequence$/;"	i
MyCustomRoutine	examples/03-widgets/multi_slider_widget.py	/^class MyCustomRoutine:  # noqa: D101$/;"	c
MyTheme	tests/plotting/test_theme.py	/^    class MyTheme(Theme):$/;"	c	function:test_user_theme
N	examples/01-filter/glyphs_table.py	/^N = 5$/;"	v
N	examples/02-plot/chart_basics.py	/^N = int(1e4)$/;"	v
N	examples/99-advanced/warp_by_vector_eigenmodes.py	/^N = 8  # maximum order of x^p y^q z^r polynomials$/;"	v
NCELLS	tests/core/test_cells.py	/^NCELLS = 2$/;"	v
NDArray	build/lib/pyvista/core/filters/image_data.py	/^    from numpy.typing import NDArray$/;"	i
NDArray	pyvista/core/filters/image_data.py	/^    from numpy.typing import NDArray$/;"	i
NIFTIReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import NIFTIReader as NIFTIReader$/;"	i
NIFTIReader	build/lib/pyvista/core/utilities/reader.py	/^class NIFTIReader(BaseReader):$/;"	c
NIFTIReader	pyvista/core/utilities/__init__.py	/^from .reader import NIFTIReader as NIFTIReader$/;"	i
NIFTIReader	pyvista/core/utilities/reader.py	/^class NIFTIReader(BaseReader):$/;"	c
NONE	build/lib/pyvista/core/utilities/arrays.py	/^    NONE = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_NONE)$/;"	v	class:FieldAssociation
NONE	pyvista/core/utilities/arrays.py	/^    NONE = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_NONE)$/;"	v	class:FieldAssociation
NORMALS	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import NORMALS as NORMALS$/;"	i
NORMALS	build/lib/pyvista/core/utilities/geometric_objects.py	/^NORMALS = {$/;"	v
NORMALS	build/lib/pyvista/plotting/widgets.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	pyvista/core/utilities/__init__.py	/^from .geometric_objects import NORMALS as NORMALS$/;"	i
NORMALS	pyvista/core/utilities/geometric_objects.py	/^NORMALS = {$/;"	v
NORMALS	pyvista/plotting/widgets.py	/^from pyvista.core.utilities.geometric_objects import NORMALS$/;"	i
NORMALS	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import NORMALS  # noqa: F401$/;"	i
NRRDReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import NRRDReader as NRRDReader$/;"	i
NRRDReader	build/lib/pyvista/core/utilities/reader.py	/^class NRRDReader(BaseReader):$/;"	c
NRRDReader	pyvista/core/utilities/__init__.py	/^from .reader import NRRDReader as NRRDReader$/;"	i
NRRDReader	pyvista/core/utilities/reader.py	/^class NRRDReader(BaseReader):$/;"	c
NUMPY_VERSION_INFO	tests/conftest.py	/^NUMPY_VERSION_INFO = VersionInfo($/;"	v
NUMPY_VERSION_INFO	tests/core/test_utilities.py	/^from tests.conftest import NUMPY_VERSION_INFO$/;"	i
NUMPY_VERSION_INFO	tests/core/test_validation.py	/^from tests.conftest import NUMPY_VERSION_INFO$/;"	i
N_SPHERES	examples/02-plot/points_gaussian_scale.py	/^N_SPHERES = 10_000$/;"	v
NameExpr	build/lib/pyvista/typing/mypy_plugin.py	/^    from mypy.nodes import NameExpr$/;"	i
NameExpr	pyvista/typing/mypy_plugin.py	/^    from mypy.nodes import NameExpr$/;"	i
NamedTemporaryFile	examples/00-load/reader.py	/^from tempfile import NamedTemporaryFile$/;"	i
NamedTuple	build/lib/pyvista/core/_typing_core/_aliases.py	/^from typing import NamedTuple$/;"	i
NamedTuple	build/lib/pyvista/core/_vtk_core.py	/^from typing import NamedTuple$/;"	i
NamedTuple	build/lib/pyvista/core/celltype.py	/^from typing import NamedTuple$/;"	i
NamedTuple	build/lib/pyvista/core/dataset.py	/^from typing import NamedTuple$/;"	i
NamedTuple	build/lib/pyvista/core/utilities/observers.py	/^from typing import NamedTuple$/;"	i
NamedTuple	build/lib/pyvista/plotting/axes_assembly.py	/^from typing import NamedTuple$/;"	i
NamedTuple	pyvista/core/_typing_core/_aliases.py	/^from typing import NamedTuple$/;"	i
NamedTuple	pyvista/core/_vtk_core.py	/^from typing import NamedTuple$/;"	i
NamedTuple	pyvista/core/celltype.py	/^from typing import NamedTuple$/;"	i
NamedTuple	pyvista/core/dataset.py	/^from typing import NamedTuple$/;"	i
NamedTuple	pyvista/core/utilities/observers.py	/^from typing import NamedTuple$/;"	i
NamedTuple	pyvista/plotting/axes_assembly.py	/^from typing import NamedTuple$/;"	i
NamedTuple	tests/core/test_dataset_filters.py	/^from typing import NamedTuple$/;"	i
NamedTuple	tests/core/test_validation.py	/^from typing import NamedTuple$/;"	i
NamedTuple	tests/doc/tst_doc_images.py	/^from typing import NamedTuple$/;"	i
Nek5000Reader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import Nek5000Reader as Nek5000Reader$/;"	i
Nek5000Reader	build/lib/pyvista/core/utilities/reader.py	/^class Nek5000Reader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
Nek5000Reader	pyvista/core/utilities/__init__.py	/^from .reader import Nek5000Reader as Nek5000Reader$/;"	i
Nek5000Reader	pyvista/core/utilities/reader.py	/^class Nek5000Reader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
NoReturn	build/lib/pyvista/core/composite.py	/^from typing import NoReturn$/;"	i
NoReturn	build/lib/pyvista/core/utilities/cell_quality.py	/^from typing import NoReturn$/;"	i
NoReturn	pyvista/core/composite.py	/^from typing import NoReturn$/;"	i
NoReturn	pyvista/core/utilities/cell_quality.py	/^from typing import NoReturn$/;"	i
NormalsLiteral	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.geometric_objects import NormalsLiteral$/;"	i
NormalsLiteral	build/lib/pyvista/core/utilities/geometric_objects.py	/^NormalsLiteral = Literal['x', 'y', 'z', '-x', '-y', '-z']$/;"	v
NormalsLiteral	pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.geometric_objects import NormalsLiteral$/;"	i
NormalsLiteral	pyvista/core/utilities/geometric_objects.py	/^NormalsLiteral = Literal['x', 'y', 'z', '-x', '-y', '-z']$/;"	v
NotAllTrianglesError	build/lib/pyvista/core/__init__.py	/^from .errors import NotAllTrianglesError as NotAllTrianglesError$/;"	i
NotAllTrianglesError	build/lib/pyvista/core/errors.py	/^class NotAllTrianglesError(ValueError):$/;"	c
NotAllTrianglesError	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import NotAllTrianglesError$/;"	i
NotAllTrianglesError	pyvista/core/__init__.py	/^from .errors import NotAllTrianglesError as NotAllTrianglesError$/;"	i
NotAllTrianglesError	pyvista/core/errors.py	/^class NotAllTrianglesError(ValueError):$/;"	c
NotAllTrianglesError	pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import NotAllTrianglesError$/;"	i
NotAllTrianglesError	tests/core/test_dataset_filters.py	/^from pyvista.core.errors import NotAllTrianglesError$/;"	i
NotAllTrianglesError	tests/core/test_polydata.py	/^from pyvista.core.errors import NotAllTrianglesError$/;"	i
NotAllTrianglesError	tests/core/test_polydata_filters.py	/^from pyvista.core.errors import NotAllTrianglesError$/;"	i
Number	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import Number as Number$/;"	i
Number	build/lib/pyvista/core/_typing_core/_aliases.py	/^Number = Union[int, float]$/;"	v
Number	build/lib/pyvista/core/_validation/check.py	/^from numbers import Number$/;"	i
Number	build/lib/pyvista/plotting/_typing.py	/^from pyvista.core._typing_core import Number as Number$/;"	i
Number	pyvista/core/_typing_core/__init__.py	/^from ._aliases import Number as Number$/;"	i
Number	pyvista/core/_typing_core/_aliases.py	/^Number = Union[int, float]$/;"	v
Number	pyvista/core/_validation/check.py	/^from numbers import Number$/;"	i
Number	pyvista/plotting/_typing.py	/^from pyvista.core._typing_core import Number as Number$/;"	i
NumberType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._array_like import NumberType as NumberType$/;"	i
NumberType	build/lib/pyvista/core/_typing_core/_aliases.py	/^from ._array_like import NumberType$/;"	i
NumberType	build/lib/pyvista/core/_typing_core/_array_like.py	/^NumberType = TypeVar($/;"	v
NumberType	build/lib/pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._array_like import NumberType$/;"	i
NumberType	build/lib/pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core import NumberType$/;"	i
NumberType	pyvista/core/_typing_core/__init__.py	/^from ._array_like import NumberType as NumberType$/;"	i
NumberType	pyvista/core/_typing_core/_aliases.py	/^from ._array_like import NumberType$/;"	i
NumberType	pyvista/core/_typing_core/_array_like.py	/^NumberType = TypeVar($/;"	v
NumberType	pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._array_like import NumberType$/;"	i
NumberType	pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core import NumberType$/;"	i
NumpyArray	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._array_like import NumpyArray as NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/_typing_core/_array_like.py	/^NumpyArray = npt.NDArray[NumberType]$/;"	v
NumpyArray	build/lib/pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core._array_like import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/cell.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/composite.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/dataobject.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/dataset.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/datasetattributes.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/filters/image_data.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/grid.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/pointset.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/pyvista_ndarray.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/arrays.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/cells.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/misc.py	/^    from .._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/points.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/core/utilities/transformations.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/examples/_dataset_loader.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/plotting/_typing.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/plotting/helpers.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/plotting/texture.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	build/lib/pyvista/plotting/utilities/regression.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/_typing_core/__init__.py	/^from ._array_like import NumpyArray as NumpyArray$/;"	i
NumpyArray	pyvista/core/_typing_core/_array_like.py	/^NumpyArray = npt.NDArray[NumberType]$/;"	v
NumpyArray	pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core._array_like import NumpyArray$/;"	i
NumpyArray	pyvista/core/cell.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/composite.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/dataobject.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/dataset.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/datasetattributes.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/filters/data_set.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/filters/image_data.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/filters/poly_data.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/grid.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/pointset.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/pyvista_ndarray.py	/^    from ._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/arrays.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/cells.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/geometric_objects.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/helpers.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/misc.py	/^    from .._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/points.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/core/utilities/transformations.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/examples/_dataset_loader.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/plotting/_typing.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/plotting/helpers.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/plotting/plotter.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/plotting/texture.py	/^    from pyvista.core._typing_core import NumpyArray$/;"	i
NumpyArray	pyvista/plotting/utilities/regression.py	/^from pyvista.core._typing_core import NumpyArray$/;"	i
OBJReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import OBJReader as OBJReader$/;"	i
OBJReader	build/lib/pyvista/core/utilities/reader.py	/^class OBJReader(BaseReader):$/;"	c
OBJReader	pyvista/core/utilities/__init__.py	/^from .reader import OBJReader as OBJReader$/;"	i
OBJReader	pyvista/core/utilities/reader.py	/^class OBJReader(BaseReader):$/;"	c
OFFSETS_LIST	tests/core/test_cells.py	/^OFFSETS_LIST = [0, 3, 6]$/;"	v
OFF_SCREEN	build/lib/pyvista/__init__.py	/^OFF_SCREEN = os.environ.get('PYVISTA_OFF_SCREEN', 'false').lower() == 'true'$/;"	v
OFF_SCREEN	pyvista/__init__.py	/^OFF_SCREEN = os.environ.get('PYVISTA_OFF_SCREEN', 'false').lower() == 'true'$/;"	v
ON_SCREENSHOT	build/lib/pyvista/__init__.py	/^ON_SCREENSHOT = os.environ.get('PYVISTA_ON_SCREENSHOT', 'false').lower() == 'true'$/;"	v
ON_SCREENSHOT	pyvista/__init__.py	/^ON_SCREENSHOT = os.environ.get('PYVISTA_ON_SCREENSHOT', 'false').lower() == 'true'$/;"	v
ORANGE	doc/source/make_tables.py	/^    ORANGE = auto()$/;"	v	class:ColorClassification
ORANGE_UPPER_BOUND	doc/source/make_tables.py	/^ORANGE_UPPER_BOUND = 39 \/ _360$/;"	v
ORIENTATION	tests/plotting/test_plotting.py	/^ORIENTATION = (10, 20, 30)$/;"	v
ORIGIN	tests/plotting/test_plotting.py	/^ORIGIN = (2, 1.5, 1)$/;"	v
Observer	build/lib/pyvista/core/utilities/__init__.py	/^from .observers import Observer as Observer$/;"	i
Observer	build/lib/pyvista/core/utilities/fileio.py	/^from .observers import Observer$/;"	i
Observer	build/lib/pyvista/core/utilities/observers.py	/^class Observer:$/;"	c
Observer	pyvista/core/utilities/__init__.py	/^from .observers import Observer as Observer$/;"	i
Observer	pyvista/core/utilities/fileio.py	/^from .observers import Observer$/;"	i
Observer	pyvista/core/utilities/observers.py	/^class Observer:$/;"	c
Observer	tests/core/test_utilities.py	/^from pyvista.core.utilities.observers import Observer$/;"	i
Octahedron	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Octahedron as Octahedron$/;"	i
Octahedron	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Octahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
Octahedron	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Octahedron as Octahedron$/;"	i
Octahedron	pyvista/core/utilities/geometric_objects.py	/^def Octahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
OfflineViewerDirective	build/lib/pyvista/ext/viewer_directive.py	/^class OfflineViewerDirective(Directive):$/;"	c
OfflineViewerDirective	pyvista/ext/viewer_directive.py	/^class OfflineViewerDirective(Directive):$/;"	c
OpenFOAMReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import OpenFOAMReader as OpenFOAMReader$/;"	i
OpenFOAMReader	build/lib/pyvista/core/utilities/reader.py	/^class OpenFOAMReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
OpenFOAMReader	pyvista/core/utilities/__init__.py	/^from .reader import OpenFOAMReader as OpenFOAMReader$/;"	i
OpenFOAMReader	pyvista/core/utilities/reader.py	/^class OpenFOAMReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
OpenGLGPUVolumeRayCastMapper	build/lib/pyvista/plotting/__init__.py	/^from .mapper import OpenGLGPUVolumeRayCastMapper as OpenGLGPUVolumeRayCastMapper$/;"	i
OpenGLGPUVolumeRayCastMapper	build/lib/pyvista/plotting/mapper.py	/^class OpenGLGPUVolumeRayCastMapper(_BaseVolumeMapper, _vtk.vtkOpenGLGPUVolumeRayCastMapper):$/;"	c
OpenGLGPUVolumeRayCastMapper	build/lib/pyvista/plotting/plotter.py	/^from .mapper import OpenGLGPUVolumeRayCastMapper$/;"	i
OpenGLGPUVolumeRayCastMapper	pyvista/plotting/__init__.py	/^from .mapper import OpenGLGPUVolumeRayCastMapper as OpenGLGPUVolumeRayCastMapper$/;"	i
OpenGLGPUVolumeRayCastMapper	pyvista/plotting/mapper.py	/^class OpenGLGPUVolumeRayCastMapper(_BaseVolumeMapper, _vtk.vtkOpenGLGPUVolumeRayCastMapper):$/;"	c
OpenGLGPUVolumeRayCastMapper	pyvista/plotting/plotter.py	/^from .mapper import OpenGLGPUVolumeRayCastMapper$/;"	i
Optional	build/lib/pyvista/core/_validation/_cast_array.py	/^from typing import Optional$/;"	i
Optional	build/lib/pyvista/plotting/mapper.py	/^from typing import Optional$/;"	i
Optional	build/lib/pyvista/plotting/utilities/regression.py	/^from typing import Optional$/;"	i
Optional	pyvista/core/_validation/_cast_array.py	/^from typing import Optional$/;"	i
Optional	pyvista/plotting/mapper.py	/^from typing import Optional$/;"	i
Optional	pyvista/plotting/utilities/regression.py	/^from typing import Optional$/;"	i
OrthogonalPlanesSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import OrthogonalPlanesSource as OrthogonalPlanesSource$/;"	i
OrthogonalPlanesSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class OrthogonalPlanesSource:$/;"	c
OrthogonalPlanesSource	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import OrthogonalPlanesSource$/;"	i
OrthogonalPlanesSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import OrthogonalPlanesSource as OrthogonalPlanesSource$/;"	i
OrthogonalPlanesSource	pyvista/core/utilities/geometric_sources.py	/^class OrthogonalPlanesSource:$/;"	c
OrthogonalPlanesSource	pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import OrthogonalPlanesSource$/;"	i
PARAMETRIC_CURVE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_CURVE = _CELL_TYPE_INFO['PARAMETRIC_CURVE']$/;"	v	class:CellType
PARAMETRIC_CURVE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_CURVE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_CURVE),$/;"	v	class:_CellTypeTuple
PARAMETRIC_CURVE	pyvista/core/celltype.py	/^    PARAMETRIC_CURVE = _CELL_TYPE_INFO['PARAMETRIC_CURVE']$/;"	v	class:CellType
PARAMETRIC_CURVE	pyvista/core/celltype.py	/^    PARAMETRIC_CURVE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_CURVE),$/;"	v	class:_CellTypeTuple
PARAMETRIC_HEX_REGION	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_HEX_REGION = _CELL_TYPE_INFO['PARAMETRIC_HEX_REGION']$/;"	v	class:CellType
PARAMETRIC_HEX_REGION	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_HEX_REGION=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_HEX_REGION),$/;"	v	class:_CellTypeTuple
PARAMETRIC_HEX_REGION	pyvista/core/celltype.py	/^    PARAMETRIC_HEX_REGION = _CELL_TYPE_INFO['PARAMETRIC_HEX_REGION']$/;"	v	class:CellType
PARAMETRIC_HEX_REGION	pyvista/core/celltype.py	/^    PARAMETRIC_HEX_REGION=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_HEX_REGION),$/;"	v	class:_CellTypeTuple
PARAMETRIC_QUAD_SURFACE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_QUAD_SURFACE = _CELL_TYPE_INFO['PARAMETRIC_QUAD_SURFACE']$/;"	v	class:CellType
PARAMETRIC_QUAD_SURFACE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_QUAD_SURFACE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_QUAD_SURFACE),$/;"	v	class:_CellTypeTuple
PARAMETRIC_QUAD_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_QUAD_SURFACE = _CELL_TYPE_INFO['PARAMETRIC_QUAD_SURFACE']$/;"	v	class:CellType
PARAMETRIC_QUAD_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_QUAD_SURFACE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_QUAD_SURFACE),$/;"	v	class:_CellTypeTuple
PARAMETRIC_SURFACE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_SURFACE = _CELL_TYPE_INFO['PARAMETRIC_SURFACE']$/;"	v	class:CellType
PARAMETRIC_SURFACE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_SURFACE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_SURFACE),$/;"	v	class:_CellTypeTuple
PARAMETRIC_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_SURFACE = _CELL_TYPE_INFO['PARAMETRIC_SURFACE']$/;"	v	class:CellType
PARAMETRIC_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_SURFACE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_SURFACE),$/;"	v	class:_CellTypeTuple
PARAMETRIC_TETRA_REGION	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_TETRA_REGION = _CELL_TYPE_INFO['PARAMETRIC_TETRA_REGION']$/;"	v	class:CellType
PARAMETRIC_TETRA_REGION	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_TETRA_REGION=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_TETRA_REGION),$/;"	v	class:_CellTypeTuple
PARAMETRIC_TETRA_REGION	pyvista/core/celltype.py	/^    PARAMETRIC_TETRA_REGION = _CELL_TYPE_INFO['PARAMETRIC_TETRA_REGION']$/;"	v	class:CellType
PARAMETRIC_TETRA_REGION	pyvista/core/celltype.py	/^    PARAMETRIC_TETRA_REGION=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_TETRA_REGION),$/;"	v	class:_CellTypeTuple
PARAMETRIC_TRI_SURFACE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_TRI_SURFACE = _CELL_TYPE_INFO['PARAMETRIC_TRI_SURFACE']$/;"	v	class:CellType
PARAMETRIC_TRI_SURFACE	build/lib/pyvista/core/celltype.py	/^    PARAMETRIC_TRI_SURFACE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_TRI_SURFACE),$/;"	v	class:_CellTypeTuple
PARAMETRIC_TRI_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_TRI_SURFACE = _CELL_TYPE_INFO['PARAMETRIC_TRI_SURFACE']$/;"	v	class:CellType
PARAMETRIC_TRI_SURFACE	pyvista/core/celltype.py	/^    PARAMETRIC_TRI_SURFACE=_CellTypeTuple(value=_vtk.VTK_PARAMETRIC_TRI_SURFACE),$/;"	v	class:_CellTypeTuple
PARAVIEW_BACKGROUND	build/lib/pyvista/plotting/__init__.py	/^from .colors import PARAVIEW_BACKGROUND as PARAVIEW_BACKGROUND$/;"	i
PARAVIEW_BACKGROUND	build/lib/pyvista/plotting/colors.py	/^PARAVIEW_BACKGROUND = Color('paraview').float_rgb  # [82, 87, 110] \/ 255$/;"	v
PARAVIEW_BACKGROUND	pyvista/plotting/__init__.py	/^from .colors import PARAVIEW_BACKGROUND as PARAVIEW_BACKGROUND$/;"	i
PARAVIEW_BACKGROUND	pyvista/plotting/colors.py	/^PARAVIEW_BACKGROUND = Color('paraview').float_rgb  # [82, 87, 110] \/ 255$/;"	v
PBR	build/lib/pyvista/plotting/opts.py	/^    PBR = (3, 'Physically based rendering')$/;"	v	class:InterpolationType
PBR	pyvista/plotting/opts.py	/^    PBR = (3, 'Physically based rendering')$/;"	v	class:InterpolationType
PDBReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PDBReader as PDBReader$/;"	i
PDBReader	build/lib/pyvista/core/utilities/reader.py	/^class PDBReader(BaseReader):$/;"	c
PDBReader	pyvista/core/utilities/__init__.py	/^from .reader import PDBReader as PDBReader$/;"	i
PDBReader	pyvista/core/utilities/reader.py	/^class PDBReader(BaseReader):$/;"	c
PENTAGONAL_PRISM	build/lib/pyvista/core/celltype.py	/^    PENTAGONAL_PRISM = _CELL_TYPE_INFO['PENTAGONAL_PRISM']$/;"	v	class:CellType
PENTAGONAL_PRISM	build/lib/pyvista/core/celltype.py	/^    PENTAGONAL_PRISM=_CellTypeTuple($/;"	v	class:_CellTypeTuple
PENTAGONAL_PRISM	pyvista/core/celltype.py	/^    PENTAGONAL_PRISM = _CELL_TYPE_INFO['PENTAGONAL_PRISM']$/;"	v	class:CellType
PENTAGONAL_PRISM	pyvista/core/celltype.py	/^    PENTAGONAL_PRISM=_CellTypeTuple($/;"	v	class:_CellTypeTuple
PHONG	build/lib/pyvista/plotting/opts.py	/^    PHONG = (2, 'PHONG')$/;"	v	class:InterpolationType
PHONG	pyvista/plotting/opts.py	/^    PHONG = (2, 'PHONG')$/;"	v	class:InterpolationType
PICKED_REPRESENTATION_NAMES	build/lib/pyvista/plotting/picking.py	/^PICKED_REPRESENTATION_NAMES = {$/;"	v
PICKED_REPRESENTATION_NAMES	pyvista/plotting/picking.py	/^PICKED_REPRESENTATION_NAMES = {$/;"	v
PICKLE_EXT	build/lib/pyvista/core/dataobject.py	/^from .utilities.fileio import PICKLE_EXT$/;"	i
PICKLE_EXT	build/lib/pyvista/core/utilities/fileio.py	/^PICKLE_EXT = ('.pkl', '.pickle')$/;"	v
PICKLE_EXT	pyvista/core/dataobject.py	/^from .utilities.fileio import PICKLE_EXT$/;"	i
PICKLE_EXT	pyvista/core/utilities/fileio.py	/^PICKLE_EXT = ('.pkl', '.pickle')$/;"	v
PIL	build/lib/pyvista/jupyter/notebook.py	/^    import PIL.Image$/;"	i
PIL	pyvista/jupyter/notebook.py	/^    import PIL.Image$/;"	i
PIPE	build/lib/pyvista/plotting/tools.py	/^from subprocess import PIPE$/;"	i
PIPE	pyvista/plotting/tools.py	/^from subprocess import PIPE$/;"	i
PIPE	tests/plotting/test_tinypages.py	/^from subprocess import PIPE$/;"	i
PIXEL	build/lib/pyvista/core/celltype.py	/^    PIXEL = _CELL_TYPE_INFO['PIXEL']$/;"	v	class:CellType
PIXEL	build/lib/pyvista/core/celltype.py	/^    PIXEL=_CellTypeTuple($/;"	v	class:_CellTypeTuple
PIXEL	pyvista/core/celltype.py	/^    PIXEL = _CELL_TYPE_INFO['PIXEL']$/;"	v	class:CellType
PIXEL	pyvista/core/celltype.py	/^    PIXEL=_CellTypeTuple($/;"	v	class:_CellTypeTuple
PLOT_DIRECTIVE_THEME	build/lib/pyvista/__init__.py	/^PLOT_DIRECTIVE_THEME = None$/;"	v
PLOT_DIRECTIVE_THEME	pyvista/__init__.py	/^PLOT_DIRECTIVE_THEME = None$/;"	v
PLR0402	tests/namespace/test_errors_namespace.py	/^        import pyvista.errors as errors  # noqa: PLR0402$/;"	i
PLR0402	tests/namespace/test_utilities_namespace.py	/^        import pyvista.utilities as utilities  # noqa: PLR0402$/;"	i
PLYReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PLYReader as PLYReader$/;"	i
PLYReader	build/lib/pyvista/core/utilities/reader.py	/^class PLYReader(BaseReader):$/;"	c
PLYReader	pyvista/core/utilities/__init__.py	/^from .reader import PLYReader as PLYReader$/;"	i
PLYReader	pyvista/core/utilities/reader.py	/^class PLYReader(BaseReader):$/;"	c
PNGReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PNGReader as PNGReader$/;"	i
PNGReader	build/lib/pyvista/core/utilities/reader.py	/^class PNGReader(BaseReader):$/;"	c
PNGReader	pyvista/core/utilities/__init__.py	/^from .reader import PNGReader as PNGReader$/;"	i
PNGReader	pyvista/core/utilities/reader.py	/^class PNGReader(BaseReader):$/;"	c
PNMReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PNMReader as PNMReader$/;"	i
PNMReader	build/lib/pyvista/core/utilities/reader.py	/^class PNMReader(BaseReader):$/;"	c
PNMReader	pyvista/core/utilities/__init__.py	/^from .reader import PNMReader as PNMReader$/;"	i
PNMReader	pyvista/core/utilities/reader.py	/^class PNMReader(BaseReader):$/;"	c
POINT	build/lib/pyvista/core/utilities/arrays.py	/^    POINT = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_POINTS)$/;"	v	class:FieldAssociation
POINT	build/lib/pyvista/plotting/opts.py	/^    POINT = (3, 'Point')$/;"	v	class:PickerType
POINT	build/lib/pyvista/plotting/opts.py	/^    POINT = (4, 'Point')$/;"	v	class:ElementType
POINT	pyvista/core/utilities/arrays.py	/^    POINT = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_POINTS)$/;"	v	class:FieldAssociation
POINT	pyvista/plotting/opts.py	/^    POINT = (3, 'Point')$/;"	v	class:PickerType
POINT	pyvista/plotting/opts.py	/^    POINT = (4, 'Point')$/;"	v	class:ElementType
POINTS	build/lib/pyvista/plotting/opts.py	/^    POINTS = (0, 'Points')$/;"	v	class:RepresentationType
POINTS	pyvista/plotting/opts.py	/^    POINTS = (0, 'Points')$/;"	v	class:RepresentationType
POLYGON	build/lib/pyvista/core/celltype.py	/^    POLYGON = _CELL_TYPE_INFO['POLYGON']$/;"	v	class:CellType
POLYGON	build/lib/pyvista/core/celltype.py	/^    POLYGON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POLYGON	pyvista/core/celltype.py	/^    POLYGON = _CELL_TYPE_INFO['POLYGON']$/;"	v	class:CellType
POLYGON	pyvista/core/celltype.py	/^    POLYGON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POLYHEDRON	build/lib/pyvista/core/celltype.py	/^    POLYHEDRON = _CELL_TYPE_INFO['POLYHEDRON']$/;"	v	class:CellType
POLYHEDRON	build/lib/pyvista/core/celltype.py	/^    POLYHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POLYHEDRON	pyvista/core/celltype.py	/^    POLYHEDRON = _CELL_TYPE_INFO['POLYHEDRON']$/;"	v	class:CellType
POLYHEDRON	pyvista/core/celltype.py	/^    POLYHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POLY_LINE	build/lib/pyvista/core/celltype.py	/^    POLY_LINE = _CELL_TYPE_INFO['POLY_LINE']$/;"	v	class:CellType
POLY_LINE	build/lib/pyvista/core/celltype.py	/^    POLY_LINE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POLY_LINE	pyvista/core/celltype.py	/^    POLY_LINE = _CELL_TYPE_INFO['POLY_LINE']$/;"	v	class:CellType
POLY_LINE	pyvista/core/celltype.py	/^    POLY_LINE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POLY_VERTEX	build/lib/pyvista/core/celltype.py	/^    POLY_VERTEX = _CELL_TYPE_INFO['POLY_VERTEX']$/;"	v	class:CellType
POLY_VERTEX	build/lib/pyvista/core/celltype.py	/^    POLY_VERTEX=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POLY_VERTEX	pyvista/core/celltype.py	/^    POLY_VERTEX = _CELL_TYPE_INFO['POLY_VERTEX']$/;"	v	class:CellType
POLY_VERTEX	pyvista/core/celltype.py	/^    POLY_VERTEX=_CellTypeTuple($/;"	v	class:_CellTypeTuple
POOCH_LOGGER	build/lib/pyvista/examples/downloads.py	/^POOCH_LOGGER = get_logger()$/;"	v
POOCH_LOGGER	pyvista/examples/downloads.py	/^POOCH_LOGGER = get_logger()$/;"	v
POSITION	tests/plotting/test_plotting.py	/^POSITION = (-0.5, -0.5, 1)$/;"	v
POST_PASS	build/lib/pyvista/plotting/render_passes.py	/^POST_PASS = [$/;"	v
POST_PASS	pyvista/plotting/render_passes.py	/^POST_PASS = [$/;"	v
POpenFOAMReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import POpenFOAMReader as POpenFOAMReader$/;"	i
POpenFOAMReader	build/lib/pyvista/core/utilities/reader.py	/^class POpenFOAMReader(OpenFOAMReader):$/;"	c
POpenFOAMReader	pyvista/core/utilities/__init__.py	/^from .reader import POpenFOAMReader as POpenFOAMReader$/;"	i
POpenFOAMReader	pyvista/core/utilities/reader.py	/^class POpenFOAMReader(OpenFOAMReader):$/;"	c
PRESSURE	build/lib/pyvista/core/utilities/reader.py	/^    PRESSURE = 110$/;"	v	class:Plot3DFunctionEnum
PRESSURE	build/lib/pyvista/core/utilities/reader.py	/^    PRESSURE = Plot3DFunctionEnum.PRESSURE$/;"	v	class:MultiBlockPlot3DReader
PRESSURE	pyvista/core/utilities/reader.py	/^    PRESSURE = 110$/;"	v	class:Plot3DFunctionEnum
PRESSURE	pyvista/core/utilities/reader.py	/^    PRESSURE = Plot3DFunctionEnum.PRESSURE$/;"	v	class:MultiBlockPlot3DReader
PRESSURE_COEFFICIENT	build/lib/pyvista/core/utilities/reader.py	/^    PRESSURE_COEFFICIENT = 111$/;"	v	class:Plot3DFunctionEnum
PRESSURE_COEFFICIENT	build/lib/pyvista/core/utilities/reader.py	/^    PRESSURE_COEFFICIENT = Plot3DFunctionEnum.PRESSURE_COEFFICIENT$/;"	v	class:MultiBlockPlot3DReader
PRESSURE_COEFFICIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_COEFFICIENT = 111$/;"	v	class:Plot3DFunctionEnum
PRESSURE_COEFFICIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_COEFFICIENT = Plot3DFunctionEnum.PRESSURE_COEFFICIENT$/;"	v	class:MultiBlockPlot3DReader
PRESSURE_GRADIENT	build/lib/pyvista/core/utilities/reader.py	/^    PRESSURE_GRADIENT = 210$/;"	v	class:Plot3DFunctionEnum
PRESSURE_GRADIENT	build/lib/pyvista/core/utilities/reader.py	/^    PRESSURE_GRADIENT = Plot3DFunctionEnum.PRESSURE_GRADIENT$/;"	v	class:MultiBlockPlot3DReader
PRESSURE_GRADIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_GRADIENT = 210$/;"	v	class:Plot3DFunctionEnum
PRESSURE_GRADIENT	pyvista/core/utilities/reader.py	/^    PRESSURE_GRADIENT = Plot3DFunctionEnum.PRESSURE_GRADIENT$/;"	v	class:MultiBlockPlot3DReader
PRE_PASS	build/lib/pyvista/plotting/render_passes.py	/^PRE_PASS = [$/;"	v
PRE_PASS	pyvista/plotting/render_passes.py	/^PRE_PASS = [$/;"	v
PROP	build/lib/pyvista/plotting/opts.py	/^    PROP = (4, 'Prop')$/;"	v	class:PickerType
PROP	pyvista/plotting/opts.py	/^    PROP = (4, 'Prop')$/;"	v	class:PickerType
PTSReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PTSReader as PTSReader$/;"	i
PTSReader	build/lib/pyvista/core/utilities/reader.py	/^class PTSReader(BaseReader):$/;"	c
PTSReader	pyvista/core/utilities/__init__.py	/^from .reader import PTSReader as PTSReader$/;"	i
PTSReader	pyvista/core/utilities/reader.py	/^class PTSReader(BaseReader):$/;"	c
PVDDataSet	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PVDDataSet as PVDDataSet$/;"	i
PVDDataSet	build/lib/pyvista/core/utilities/reader.py	/^class PVDDataSet:$/;"	c
PVDDataSet	pyvista/core/utilities/__init__.py	/^from .reader import PVDDataSet as PVDDataSet$/;"	i
PVDDataSet	pyvista/core/utilities/reader.py	/^class PVDDataSet:$/;"	c
PVDReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PVDReader as PVDReader$/;"	i
PVDReader	build/lib/pyvista/core/utilities/reader.py	/^class PVDReader(BaseReader, TimeReader):$/;"	c
PVDReader	pyvista/core/utilities/__init__.py	/^from .reader import PVDReader as PVDReader$/;"	i
PVDReader	pyvista/core/utilities/reader.py	/^class PVDReader(BaseReader, TimeReader):$/;"	c
PYRAMID	build/lib/pyvista/core/celltype.py	/^    PYRAMID = _CELL_TYPE_INFO['PYRAMID']$/;"	v	class:CellType
PYRAMID	build/lib/pyvista/core/celltype.py	/^    PYRAMID=_CellTypeTuple($/;"	v	class:_CellTypeTuple
PYRAMID	pyvista/core/celltype.py	/^    PYRAMID = _CELL_TYPE_INFO['PYRAMID']$/;"	v	class:CellType
PYRAMID	pyvista/core/celltype.py	/^    PYRAMID=_CellTypeTuple($/;"	v	class:_CellTypeTuple
PYVISTA_GALLERY_FORCE_STATIC	examples/00-load/create_point_cloud.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/00-load/create_surface_draped.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/00-load/load_gltf.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/01-filter/cell_centers.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/01-filter/clipping_with_surface.py	/^PYVISTA_GALLERY_FORCE_STATIC = False$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/01-filter/decimate.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/01-filter/extrude_rotate.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/01-filter/extrude_trim.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/01-filter/gaussian_smoothing.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/01-filter/interpolate.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/02-plot/backface_props.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/02-plot/composite_picking.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/02-plot/distance_along_spline.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/02-plot/lighting_mesh.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/02-plot/shading.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/99-advanced/atomic_orbitals.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/99-advanced/magnetic_fields.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/99-advanced/openfoam_cooling.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/99-advanced/openfoam_tubes.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC	examples/99-advanced/sphere_eversion.py	/^PYVISTA_GALLERY_FORCE_STATIC = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/create_kochanek_spline.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/create_pixel_art.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = False$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/create_platonic_solids.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/create_polydata_strips.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/create_polyhedron.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/create_truss.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/linear_cells.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/reader.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/00-load/wrap_trimesh.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/01-filter/clipping.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/01-filter/clipping_with_surface.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/01-filter/compute_normals.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/01-filter/glyphs_table.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/01-filter/image_fft.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/background_image.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/blurring.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/chart_basics.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/chart_overlays.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/depth_of_field.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/edl.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/labels.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/legend.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/lookup_table.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/multi_window.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/pbr.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/plot_over_circular_arc.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/plot_over_line.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/point_clouds.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/point_picking.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/points_gaussian_scale.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/scalar_bars.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/ssao.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/surface_picking.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/vector_component.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/02-plot/volume.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/box_widget.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/checkbox_widget.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/clip_volume.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/line_widget.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/multi_slider_widget.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/plane_widget.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/slider_bar_widget.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/03-widgets/sphere_widget.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/99-advanced/antarctica_compare.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/99-advanced/planets.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT	examples/99-advanced/plotting_algorithms.py	/^PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True$/;"	v
PYVISTA_OFF_SCREEN	Makefile	/^doctest-modules-local-namespace: export PYVISTA_OFF_SCREEN = True$/;"	m
PYVISTA_OFF_SCREEN	Makefile	/^doctest-modules: export PYVISTA_OFF_SCREEN = True$/;"	m
PYVISTA_OFF_SCREEN	doc/Makefile	/^export PYVISTA_OFF_SCREEN := True$/;"	m
Paint	build/lib/pyvista/plotting/charts.py	/^        def Paint(self, item, painter):$/;"	m	class:_CustomContextItem.ItemWrapper
Paint	pyvista/plotting/charts.py	/^        def Paint(self, item, painter):$/;"	m	class:_CustomContextItem.ItemWrapper
ParaViewTheme	build/lib/pyvista/plotting/themes.py	/^class ParaViewTheme(Theme):$/;"	c
ParaViewTheme	pyvista/plotting/themes.py	/^class ParaViewTheme(Theme):$/;"	c
Parameter	tests/conftest.py	/^from inspect import Parameter$/;"	i
ParametricBohemianDome	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricBohemianDome as ParametricBohemianDome$/;"	i
ParametricBohemianDome	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricBohemianDome($/;"	f
ParametricBohemianDome	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricBohemianDome as ParametricBohemianDome$/;"	i
ParametricBohemianDome	pyvista/core/utilities/parametric_objects.py	/^def ParametricBohemianDome($/;"	f
ParametricBour	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricBour as ParametricBour$/;"	i
ParametricBour	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricBour(**kwargs) -> PolyData:$/;"	f
ParametricBour	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricBour as ParametricBour$/;"	i
ParametricBour	pyvista/core/utilities/parametric_objects.py	/^def ParametricBour(**kwargs) -> PolyData:$/;"	f
ParametricBoy	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricBoy as ParametricBoy$/;"	i
ParametricBoy	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricBoy(zscale: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricBoy	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricBoy as ParametricBoy$/;"	i
ParametricBoy	pyvista/core/utilities/parametric_objects.py	/^def ParametricBoy(zscale: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricCatalanMinimal	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricCatalanMinimal as ParametricCatalanMinimal$/;"	i
ParametricCatalanMinimal	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricCatalanMinimal(**kwargs) -> PolyData:$/;"	f
ParametricCatalanMinimal	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricCatalanMinimal as ParametricCatalanMinimal$/;"	i
ParametricCatalanMinimal	pyvista/core/utilities/parametric_objects.py	/^def ParametricCatalanMinimal(**kwargs) -> PolyData:$/;"	f
ParametricConicSpiral	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricConicSpiral as ParametricConicSpiral$/;"	i
ParametricConicSpiral	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricConicSpiral($/;"	f
ParametricConicSpiral	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricConicSpiral as ParametricConicSpiral$/;"	i
ParametricConicSpiral	pyvista/core/utilities/parametric_objects.py	/^def ParametricConicSpiral($/;"	f
ParametricCrossCap	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricCrossCap as ParametricCrossCap$/;"	i
ParametricCrossCap	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricCrossCap(**kwargs) -> PolyData:$/;"	f
ParametricCrossCap	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricCrossCap as ParametricCrossCap$/;"	i
ParametricCrossCap	pyvista/core/utilities/parametric_objects.py	/^def ParametricCrossCap(**kwargs) -> PolyData:$/;"	f
ParametricDini	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricDini as ParametricDini$/;"	i
ParametricDini	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricDini(a: float | None = None, b: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricDini	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricDini as ParametricDini$/;"	i
ParametricDini	pyvista/core/utilities/parametric_objects.py	/^def ParametricDini(a: float | None = None, b: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricEllipsoid	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricEllipsoid as ParametricEllipsoid$/;"	i
ParametricEllipsoid	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricEllipsoid($/;"	f
ParametricEllipsoid	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricEllipsoid as ParametricEllipsoid$/;"	i
ParametricEllipsoid	pyvista/core/utilities/parametric_objects.py	/^def ParametricEllipsoid($/;"	f
ParametricEnneper	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricEnneper as ParametricEnneper$/;"	i
ParametricEnneper	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricEnneper(**kwargs) -> PolyData:$/;"	f
ParametricEnneper	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricEnneper as ParametricEnneper$/;"	i
ParametricEnneper	pyvista/core/utilities/parametric_objects.py	/^def ParametricEnneper(**kwargs) -> PolyData:$/;"	f
ParametricFigure8Klein	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricFigure8Klein as ParametricFigure8Klein$/;"	i
ParametricFigure8Klein	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricFigure8Klein(radius: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricFigure8Klein	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricFigure8Klein as ParametricFigure8Klein$/;"	i
ParametricFigure8Klein	pyvista/core/utilities/parametric_objects.py	/^def ParametricFigure8Klein(radius: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricHenneberg	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricHenneberg as ParametricHenneberg$/;"	i
ParametricHenneberg	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricHenneberg(**kwargs) -> PolyData:$/;"	f
ParametricHenneberg	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricHenneberg as ParametricHenneberg$/;"	i
ParametricHenneberg	pyvista/core/utilities/parametric_objects.py	/^def ParametricHenneberg(**kwargs) -> PolyData:$/;"	f
ParametricKlein	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricKlein as ParametricKlein$/;"	i
ParametricKlein	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricKlein(**kwargs) -> PolyData:$/;"	f
ParametricKlein	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricKlein as ParametricKlein$/;"	i
ParametricKlein	pyvista/core/utilities/parametric_objects.py	/^def ParametricKlein(**kwargs) -> PolyData:$/;"	f
ParametricKuen	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricKuen as ParametricKuen$/;"	i
ParametricKuen	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricKuen(deltav0: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricKuen	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricKuen as ParametricKuen$/;"	i
ParametricKuen	pyvista/core/utilities/parametric_objects.py	/^def ParametricKuen(deltav0: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricMobius	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricMobius as ParametricMobius$/;"	i
ParametricMobius	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricMobius(radius: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricMobius	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricMobius as ParametricMobius$/;"	i
ParametricMobius	pyvista/core/utilities/parametric_objects.py	/^def ParametricMobius(radius: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricPluckerConoid	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricPluckerConoid as ParametricPluckerConoid$/;"	i
ParametricPluckerConoid	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricPluckerConoid(n: int | None = None, **kwargs) -> PolyData:$/;"	f
ParametricPluckerConoid	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricPluckerConoid as ParametricPluckerConoid$/;"	i
ParametricPluckerConoid	pyvista/core/utilities/parametric_objects.py	/^def ParametricPluckerConoid(n: int | None = None, **kwargs) -> PolyData:$/;"	f
ParametricPseudosphere	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricPseudosphere as ParametricPseudosphere$/;"	i
ParametricPseudosphere	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricPseudosphere(**kwargs) -> PolyData:$/;"	f
ParametricPseudosphere	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricPseudosphere as ParametricPseudosphere$/;"	i
ParametricPseudosphere	pyvista/core/utilities/parametric_objects.py	/^def ParametricPseudosphere(**kwargs) -> PolyData:$/;"	f
ParametricRandomHills	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricRandomHills as ParametricRandomHills$/;"	i
ParametricRandomHills	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricRandomHills($/;"	f
ParametricRandomHills	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricRandomHills as ParametricRandomHills$/;"	i
ParametricRandomHills	pyvista/core/utilities/parametric_objects.py	/^def ParametricRandomHills($/;"	f
ParametricRoman	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricRoman as ParametricRoman$/;"	i
ParametricRoman	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricRoman(radius: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricRoman	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricRoman as ParametricRoman$/;"	i
ParametricRoman	pyvista/core/utilities/parametric_objects.py	/^def ParametricRoman(radius: float | None = None, **kwargs) -> PolyData:$/;"	f
ParametricSuperEllipsoid	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricSuperEllipsoid as ParametricSuperEllipsoid$/;"	i
ParametricSuperEllipsoid	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricSuperEllipsoid($/;"	f
ParametricSuperEllipsoid	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricSuperEllipsoid as ParametricSuperEllipsoid$/;"	i
ParametricSuperEllipsoid	pyvista/core/utilities/parametric_objects.py	/^def ParametricSuperEllipsoid($/;"	f
ParametricSuperToroid	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricSuperToroid as ParametricSuperToroid$/;"	i
ParametricSuperToroid	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricSuperToroid($/;"	f
ParametricSuperToroid	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricSuperToroid as ParametricSuperToroid$/;"	i
ParametricSuperToroid	pyvista/core/utilities/parametric_objects.py	/^def ParametricSuperToroid($/;"	f
ParametricTorus	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricTorus as ParametricTorus$/;"	i
ParametricTorus	build/lib/pyvista/core/utilities/parametric_objects.py	/^def ParametricTorus($/;"	f
ParametricTorus	pyvista/core/utilities/__init__.py	/^from .parametric_objects import ParametricTorus as ParametricTorus$/;"	i
ParametricTorus	pyvista/core/utilities/parametric_objects.py	/^def ParametricTorus($/;"	f
ParticleReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import ParticleReader as ParticleReader$/;"	i
ParticleReader	build/lib/pyvista/core/utilities/reader.py	/^class ParticleReader(BaseReader):$/;"	c
ParticleReader	pyvista/core/utilities/__init__.py	/^from .reader import ParticleReader as ParticleReader$/;"	i
ParticleReader	pyvista/core/utilities/reader.py	/^class ParticleReader(BaseReader):$/;"	c
PartitionedDataSet	build/lib/pyvista/core/__init__.py	/^from .partitioned import PartitionedDataSet as PartitionedDataSet$/;"	i
PartitionedDataSet	build/lib/pyvista/core/partitioned.py	/^class PartitionedDataSet(_vtk.vtkPartitionedDataSet, DataObject, MutableSequence):  # type: ignore[type-arg]$/;"	c
PartitionedDataSet	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import PartitionedDataSet$/;"	i
PartitionedDataSet	build/lib/pyvista/core/wrappers.py	/^from .partitioned import PartitionedDataSet$/;"	i
PartitionedDataSet	pyvista/core/__init__.py	/^from .partitioned import PartitionedDataSet as PartitionedDataSet$/;"	i
PartitionedDataSet	pyvista/core/partitioned.py	/^class PartitionedDataSet(_vtk.vtkPartitionedDataSet, DataObject, MutableSequence):  # type: ignore[type-arg]$/;"	c
PartitionedDataSet	pyvista/core/utilities/helpers.py	/^    from pyvista import PartitionedDataSet$/;"	i
PartitionedDataSet	pyvista/core/wrappers.py	/^from .partitioned import PartitionedDataSet$/;"	i
PartitionedDataSet	tests/core/test_partitioned.py	/^from pyvista import PartitionedDataSet$/;"	i
PartitionedDataSetsNotSupported	build/lib/pyvista/core/errors.py	/^class PartitionedDataSetsNotSupported(TypeError):$/;"	c
PartitionedDataSetsNotSupported	build/lib/pyvista/core/partitioned.py	/^from .errors import PartitionedDataSetsNotSupported$/;"	i
PartitionedDataSetsNotSupported	pyvista/core/errors.py	/^class PartitionedDataSetsNotSupported(TypeError):$/;"	c
PartitionedDataSetsNotSupported	pyvista/core/partitioned.py	/^from .errors import PartitionedDataSetsNotSupported$/;"	i
PartitionedDataSetsNotSupported	tests/core/test_partitioned.py	/^from pyvista.core.errors import PartitionedDataSetsNotSupported$/;"	i
Path	build/lib/pyvista/_plot.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/core/dataobject.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/core/grid.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/core/pointset.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/core/utilities/fileio.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/core/utilities/observers.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/core/utilities/reader.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/demos/logo.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/examples/_dataset_loader.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/examples/downloads.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/examples/examples.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/ext/coverage.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/ext/plot_directive.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/ext/viewer_directive.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/plotting/camera.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/plotting/plotter.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/plotting/text.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/plotting/themes.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/plotting/utilities/cubemap.py	/^from pathlib import Path$/;"	i
Path	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^from pathlib import Path$/;"	i
Path	doc/source/conf.py	/^from pathlib import Path$/;"	i
Path	doc/source/make_external_gallery.py	/^from pathlib import Path$/;"	i
Path	doc/source/make_tables.py	/^from pathlib import Path$/;"	i
Path	examples/00-load/read_parallel.py	/^from pathlib import Path$/;"	i
Path	examples_trame/basic/file_viewer.py	/^from pathlib import Path$/;"	i
Path	examples_trame/tests/test_trame.py	/^from pathlib import Path$/;"	i
Path	pyvista/_plot.py	/^from pathlib import Path$/;"	i
Path	pyvista/core/dataobject.py	/^from pathlib import Path$/;"	i
Path	pyvista/core/grid.py	/^from pathlib import Path$/;"	i
Path	pyvista/core/pointset.py	/^from pathlib import Path$/;"	i
Path	pyvista/core/utilities/fileio.py	/^from pathlib import Path$/;"	i
Path	pyvista/core/utilities/observers.py	/^from pathlib import Path$/;"	i
Path	pyvista/core/utilities/reader.py	/^from pathlib import Path$/;"	i
Path	pyvista/demos/logo.py	/^from pathlib import Path$/;"	i
Path	pyvista/examples/_dataset_loader.py	/^from pathlib import Path$/;"	i
Path	pyvista/examples/downloads.py	/^from pathlib import Path$/;"	i
Path	pyvista/examples/examples.py	/^from pathlib import Path$/;"	i
Path	pyvista/ext/coverage.py	/^from pathlib import Path$/;"	i
Path	pyvista/ext/plot_directive.py	/^from pathlib import Path$/;"	i
Path	pyvista/ext/viewer_directive.py	/^from pathlib import Path$/;"	i
Path	pyvista/plotting/camera.py	/^from pathlib import Path$/;"	i
Path	pyvista/plotting/plotter.py	/^from pathlib import Path$/;"	i
Path	pyvista/plotting/text.py	/^from pathlib import Path$/;"	i
Path	pyvista/plotting/themes.py	/^from pathlib import Path$/;"	i
Path	pyvista/plotting/utilities/cubemap.py	/^from pathlib import Path$/;"	i
Path	pyvista/plotting/utilities/sphinx_gallery.py	/^from pathlib import Path$/;"	i
Path	tests/core/test_dataset_filters.py	/^from pathlib import Path$/;"	i
Path	tests/core/test_grid.py	/^from pathlib import Path$/;"	i
Path	tests/core/test_polydata.py	/^from pathlib import Path$/;"	i
Path	tests/core/test_reader.py	/^from pathlib import Path$/;"	i
Path	tests/core/test_utilities.py	/^from pathlib import Path$/;"	i
Path	tests/doc/tst_doc_images.py	/^from pathlib import Path$/;"	i
Path	tests/examples/test_dataset_loader.py	/^from pathlib import Path$/;"	i
Path	tests/examples/test_download_files.py	/^from pathlib import Path$/;"	i
Path	tests/examples/test_downloads.py	/^from pathlib import Path$/;"	i
Path	tests/namespace/test_plotting_namespace.py	/^from pathlib import Path$/;"	i
Path	tests/namespace/test_public_namespace.py	/^from pathlib import Path$/;"	i
Path	tests/namespace/test_utilities_namespace.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/jupyter/test_trame.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/test_plotter.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/test_plotting.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/test_plotting_utilities.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/test_scraper.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/test_text.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/test_tinypages.py	/^from pathlib import Path$/;"	i
Path	tests/plotting/tinypages/conf.py	/^from pathlib import Path$/;"	i
Path	tests/typing/mypy_plugin/test_plugin.py	/^from pathlib import Path$/;"	i
PathStrSeq	build/lib/pyvista/core/utilities/fileio.py	/^PathStrSeq = Union[str, Path, Sequence['PathStrSeq']]$/;"	v
PathStrSeq	pyvista/core/utilities/fileio.py	/^PathStrSeq = Union[str, Path, Sequence['PathStrSeq']]$/;"	v
Pattern	build/lib/pyvista/ext/coverage.py	/^from re import Pattern$/;"	i
Pattern	pyvista/ext/coverage.py	/^from re import Pattern$/;"	i
Pen	build/lib/pyvista/plotting/charts.py	/^class Pen(_vtkWrapper, _vtk.vtkPen):$/;"	c
Pen	pyvista/plotting/charts.py	/^class Pen(_vtkWrapper, _vtk.vtkPen):$/;"	c
PentagonalPrism	build/lib/pyvista/examples/cells.py	/^def PentagonalPrism() -> UnstructuredGrid:$/;"	f
PentagonalPrism	pyvista/examples/cells.py	/^def PentagonalPrism() -> UnstructuredGrid:$/;"	f
PickCallback	tests/plotting/test_picking.py	/^    class PickCallback:$/;"	c	function:test_single_cell_picking
PickerType	build/lib/pyvista/plotting/opts.py	/^class PickerType(AnnotatedIntEnum):$/;"	c
PickerType	build/lib/pyvista/plotting/picking.py	/^from .opts import PickerType$/;"	i
PickerType	build/lib/pyvista/plotting/render_window_interactor.py	/^from .opts import PickerType$/;"	i
PickerType	build/lib/pyvista/plotting/widgets.py	/^from .opts import PickerType$/;"	i
PickerType	pyvista/plotting/opts.py	/^class PickerType(AnnotatedIntEnum):$/;"	c
PickerType	pyvista/plotting/picking.py	/^from .opts import PickerType$/;"	i
PickerType	pyvista/plotting/render_window_interactor.py	/^from .opts import PickerType$/;"	i
PickerType	pyvista/plotting/widgets.py	/^from .opts import PickerType$/;"	i
PickingHelper	build/lib/pyvista/plotting/__init__.py	/^from .picking import PickingHelper as PickingHelper$/;"	i
PickingHelper	build/lib/pyvista/plotting/picking.py	/^class PickingHelper(PickingMethods):$/;"	c
PickingHelper	build/lib/pyvista/plotting/plotter.py	/^from .picking import PickingHelper$/;"	i
PickingHelper	pyvista/plotting/__init__.py	/^from .picking import PickingHelper as PickingHelper$/;"	i
PickingHelper	pyvista/plotting/picking.py	/^class PickingHelper(PickingMethods):$/;"	c
PickingHelper	pyvista/plotting/plotter.py	/^from .picking import PickingHelper$/;"	i
PickingInterface	build/lib/pyvista/plotting/picking.py	/^class PickingInterface:  # numpydoc ignore=PR01$/;"	c
PickingInterface	pyvista/plotting/picking.py	/^class PickingInterface:  # numpydoc ignore=PR01$/;"	c
PickingMethods	build/lib/pyvista/plotting/picking.py	/^class PickingMethods(PickingInterface):  # numpydoc ignore=PR01$/;"	c
PickingMethods	pyvista/plotting/picking.py	/^class PickingMethods(PickingInterface):  # numpydoc ignore=PR01$/;"	c
PiePlot	build/lib/pyvista/plotting/charts.py	/^class PiePlot(_MultiCompPlot, _vtkWrapper, _vtk.vtkPlotPie):$/;"	c
PiePlot	pyvista/plotting/charts.py	/^class PiePlot(_MultiCompPlot, _vtkWrapper, _vtk.vtkPlotPie):$/;"	c
Pixel	build/lib/pyvista/examples/cells.py	/^def Pixel() -> UnstructuredGrid:$/;"	f
Pixel	pyvista/examples/cells.py	/^def Pixel() -> UnstructuredGrid:$/;"	f
Plane	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Plane as Plane$/;"	i
Plane	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Plane($/;"	f
Plane	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Plane as Plane$/;"	i
Plane	pyvista/core/utilities/geometric_objects.py	/^def Plane($/;"	f
PlaneSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import PlaneSource as PlaneSource$/;"	i
PlaneSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import PlaneSource$/;"	i
PlaneSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class PlaneSource(_vtk.vtkPlaneSource):$/;"	c
PlaneSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import PlaneSource as PlaneSource$/;"	i
PlaneSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import PlaneSource$/;"	i
PlaneSource	pyvista/core/utilities/geometric_sources.py	/^class PlaneSource(_vtk.vtkPlaneSource):$/;"	c
PlanesAssembly	build/lib/pyvista/plotting/__init__.py	/^from .axes_assembly import PlanesAssembly as PlanesAssembly$/;"	i
PlanesAssembly	build/lib/pyvista/plotting/axes_assembly.py	/^class PlanesAssembly(_XYZAssembly):$/;"	c
PlanesAssembly	pyvista/plotting/__init__.py	/^from .axes_assembly import PlanesAssembly as PlanesAssembly$/;"	i
PlanesAssembly	pyvista/plotting/axes_assembly.py	/^class PlanesAssembly(_XYZAssembly):$/;"	c
PlanetsCarousel	doc/source/make_tables.py	/^class PlanetsCarousel(DatasetGalleryCarousel):$/;"	c
PlatonicSolid	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import PlatonicSolid as PlatonicSolid$/;"	i
PlatonicSolid	build/lib/pyvista/core/utilities/geometric_objects.py	/^def PlatonicSolid($/;"	f
PlatonicSolid	pyvista/core/utilities/__init__.py	/^from .geometric_objects import PlatonicSolid as PlatonicSolid$/;"	i
PlatonicSolid	pyvista/core/utilities/geometric_objects.py	/^def PlatonicSolid($/;"	f
PlatonicSolid	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import PlatonicSolid  # noqa: F401$/;"	i
PlatonicSolidSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import PlatonicSolidSource as PlatonicSolidSource$/;"	i
PlatonicSolidSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import PlatonicSolidSource$/;"	i
PlatonicSolidSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class PlatonicSolidSource(_vtk.vtkPlatonicSolidSource):$/;"	c
PlatonicSolidSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import PlatonicSolidSource as PlatonicSolidSource$/;"	i
PlatonicSolidSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import PlatonicSolidSource$/;"	i
PlatonicSolidSource	pyvista/core/utilities/geometric_sources.py	/^class PlatonicSolidSource(_vtk.vtkPlatonicSolidSource):$/;"	c
Plot3DFunctionEnum	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import Plot3DFunctionEnum as Plot3DFunctionEnum$/;"	i
Plot3DFunctionEnum	build/lib/pyvista/core/utilities/reader.py	/^class Plot3DFunctionEnum(enum.IntEnum):$/;"	c
Plot3DFunctionEnum	pyvista/core/utilities/__init__.py	/^from .reader import Plot3DFunctionEnum as Plot3DFunctionEnum$/;"	i
Plot3DFunctionEnum	pyvista/core/utilities/reader.py	/^class Plot3DFunctionEnum(enum.IntEnum):$/;"	c
Plot3DMetaReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import Plot3DMetaReader as Plot3DMetaReader$/;"	i
Plot3DMetaReader	build/lib/pyvista/core/utilities/reader.py	/^class Plot3DMetaReader(BaseReader):$/;"	c
Plot3DMetaReader	pyvista/core/utilities/__init__.py	/^from .reader import Plot3DMetaReader as Plot3DMetaReader$/;"	i
Plot3DMetaReader	pyvista/core/utilities/reader.py	/^class Plot3DMetaReader(BaseReader):$/;"	c
PlotDirective	build/lib/pyvista/ext/plot_directive.py	/^class PlotDirective(Directive):$/;"	c
PlotDirective	pyvista/ext/plot_directive.py	/^class PlotDirective(Directive):$/;"	c
PlotError	build/lib/pyvista/ext/plot_directive.py	/^class PlotError(RuntimeError):$/;"	c
PlotError	pyvista/ext/plot_directive.py	/^class PlotError(RuntimeError):$/;"	c
Plotter	build/lib/pyvista/plotting/__init__.py	/^from .plotter import Plotter as Plotter$/;"	i
Plotter	build/lib/pyvista/plotting/plotter.py	/^class Plotter(BasePlotter):$/;"	c
Plotter	build/lib/pyvista/plotting/utilities/regression.py	/^    from pyvista import Plotter$/;"	i
Plotter	pyvista/plotting/__init__.py	/^from .plotter import Plotter as Plotter$/;"	i
Plotter	pyvista/plotting/plotter.py	/^class Plotter(BasePlotter):$/;"	c
Plotter	pyvista/plotting/utilities/regression.py	/^    from pyvista import Plotter$/;"	i
Plotter	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import Plotter  # noqa: F401$/;"	i
PlotterChanged	tests/plotting/test_charts.py	/^class PlotterChanged:$/;"	c
Plugin	build/lib/pyvista/typing/mypy_plugin.py	/^    from mypy.plugin import Plugin$/;"	i
Plugin	pyvista/typing/mypy_plugin.py	/^    from mypy.plugin import Plugin$/;"	i
PointCellDataSelection	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import PointCellDataSelection as PointCellDataSelection$/;"	i
PointCellDataSelection	build/lib/pyvista/core/utilities/reader.py	/^class PointCellDataSelection:$/;"	c
PointCellDataSelection	pyvista/core/utilities/__init__.py	/^from .reader import PointCellDataSelection as PointCellDataSelection$/;"	i
PointCellDataSelection	pyvista/core/utilities/reader.py	/^class PointCellDataSelection:$/;"	c
PointCloudCarousel	doc/source/make_tables.py	/^class PointCloudCarousel(DatasetGalleryCarousel):$/;"	c
PointGaussianMapper	build/lib/pyvista/plotting/__init__.py	/^from .mapper import PointGaussianMapper as PointGaussianMapper$/;"	i
PointGaussianMapper	build/lib/pyvista/plotting/mapper.py	/^class PointGaussianMapper(_DataSetMapper, _vtk.vtkPointGaussianMapper):$/;"	c
PointGaussianMapper	build/lib/pyvista/plotting/plotter.py	/^from .mapper import PointGaussianMapper$/;"	i
PointGaussianMapper	pyvista/plotting/__init__.py	/^from .mapper import PointGaussianMapper as PointGaussianMapper$/;"	i
PointGaussianMapper	pyvista/plotting/mapper.py	/^class PointGaussianMapper(_DataSetMapper, _vtk.vtkPointGaussianMapper):$/;"	c
PointGaussianMapper	pyvista/plotting/plotter.py	/^from .mapper import PointGaussianMapper$/;"	i
PointGaussianMapper	tests/plotting/mappers/test_gaussian_mapper.py	/^from pyvista.plotting.mapper import PointGaussianMapper$/;"	i
PointGrid	build/lib/pyvista/core/__init__.py	/^from .pointset import PointGrid as PointGrid$/;"	i
PointGrid	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.pointset import PointGrid$/;"	i
PointGrid	build/lib/pyvista/core/pointset.py	/^class PointGrid(_PointSet):$/;"	c
PointGrid	pyvista/core/__init__.py	/^from .pointset import PointGrid as PointGrid$/;"	i
PointGrid	pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.pointset import PointGrid$/;"	i
PointGrid	pyvista/core/pointset.py	/^class PointGrid(_PointSet):$/;"	c
PointLiteral	build/lib/pyvista/core/composite.py	/^from .utilities.arrays import PointLiteral$/;"	i
PointLiteral	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import PointLiteral$/;"	i
PointLiteral	build/lib/pyvista/core/utilities/arrays.py	/^PointLiteral = Literal[$/;"	v
PointLiteral	build/lib/pyvista/plotting/utilities/algorithms.py	/^    from pyvista.core.utilities.arrays import PointLiteral$/;"	i
PointLiteral	pyvista/core/composite.py	/^from .utilities.arrays import PointLiteral$/;"	i
PointLiteral	pyvista/core/dataset.py	/^from .utilities.arrays import PointLiteral$/;"	i
PointLiteral	pyvista/core/utilities/arrays.py	/^PointLiteral = Literal[$/;"	v
PointLiteral	pyvista/plotting/utilities/algorithms.py	/^    from pyvista.core.utilities.arrays import PointLiteral$/;"	i
PointPickingElementHandler	build/lib/pyvista/plotting/picking.py	/^class PointPickingElementHandler:$/;"	c
PointPickingElementHandler	pyvista/plotting/picking.py	/^class PointPickingElementHandler:$/;"	c
PointSet	build/lib/pyvista/core/__init__.py	/^from .pointset import PointSet as PointSet$/;"	i
PointSet	build/lib/pyvista/core/pointset.py	/^class PointSet(_PointSet, _vtk.vtkPointSet):$/;"	c
PointSet	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import PointSet$/;"	i
PointSet	build/lib/pyvista/core/wrappers.py	/^from .pointset import PointSet$/;"	i
PointSet	pyvista/core/__init__.py	/^from .pointset import PointSet as PointSet$/;"	i
PointSet	pyvista/core/pointset.py	/^class PointSet(_PointSet, _vtk.vtkPointSet):$/;"	c
PointSet	pyvista/core/utilities/helpers.py	/^    from pyvista import PointSet$/;"	i
PointSet	pyvista/core/wrappers.py	/^from .pointset import PointSet$/;"	i
PointSetCarousel	doc/source/make_tables.py	/^class PointSetCarousel(DatasetGalleryCarousel):$/;"	c
PointSetCellOperationError	build/lib/pyvista/core/__init__.py	/^from .errors import PointSetCellOperationError as PointSetCellOperationError$/;"	i
PointSetCellOperationError	build/lib/pyvista/core/errors.py	/^class PointSetCellOperationError(PointSetNotSupported):$/;"	c
PointSetCellOperationError	build/lib/pyvista/core/pointset.py	/^from .errors import PointSetCellOperationError$/;"	i
PointSetCellOperationError	pyvista/core/__init__.py	/^from .errors import PointSetCellOperationError as PointSetCellOperationError$/;"	i
PointSetCellOperationError	pyvista/core/errors.py	/^class PointSetCellOperationError(PointSetNotSupported):$/;"	c
PointSetCellOperationError	pyvista/core/pointset.py	/^from .errors import PointSetCellOperationError$/;"	i
PointSetCellOperationError	tests/core/test_pointset.py	/^from pyvista.core.errors import PointSetCellOperationError$/;"	i
PointSetDimensionReductionError	build/lib/pyvista/core/__init__.py	/^from .errors import PointSetDimensionReductionError as PointSetDimensionReductionError$/;"	i
PointSetDimensionReductionError	build/lib/pyvista/core/errors.py	/^class PointSetDimensionReductionError(PointSetNotSupported):$/;"	c
PointSetDimensionReductionError	build/lib/pyvista/core/pointset.py	/^from .errors import PointSetDimensionReductionError$/;"	i
PointSetDimensionReductionError	pyvista/core/__init__.py	/^from .errors import PointSetDimensionReductionError as PointSetDimensionReductionError$/;"	i
PointSetDimensionReductionError	pyvista/core/errors.py	/^class PointSetDimensionReductionError(PointSetNotSupported):$/;"	c
PointSetDimensionReductionError	pyvista/core/pointset.py	/^from .errors import PointSetDimensionReductionError$/;"	i
PointSetDimensionReductionError	tests/core/test_pointset.py	/^from pyvista.core.errors import PointSetDimensionReductionError$/;"	i
PointSetNotSupported	build/lib/pyvista/core/__init__.py	/^from .errors import PointSetNotSupported as PointSetNotSupported$/;"	i
PointSetNotSupported	build/lib/pyvista/core/errors.py	/^class PointSetNotSupported(TypeError):$/;"	c
PointSetNotSupported	build/lib/pyvista/core/pointset.py	/^from .errors import PointSetNotSupported$/;"	i
PointSetNotSupported	pyvista/core/__init__.py	/^from .errors import PointSetNotSupported as PointSetNotSupported$/;"	i
PointSetNotSupported	pyvista/core/errors.py	/^class PointSetNotSupported(TypeError):$/;"	c
PointSetNotSupported	pyvista/core/pointset.py	/^from .errors import PointSetNotSupported$/;"	i
PointSetNotSupported	tests/core/test_pointset.py	/^from pyvista.core.errors import PointSetNotSupported$/;"	i
PointSetToPolyDataAlgorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^class PointSetToPolyDataAlgorithm(_vtk.VTKPythonAlgorithmBase):$/;"	c
PointSetToPolyDataAlgorithm	pyvista/plotting/utilities/algorithms.py	/^class PointSetToPolyDataAlgorithm(_vtk.VTKPythonAlgorithmBase):$/;"	c
PolyData	build/lib/pyvista/core/__init__.py	/^from .pointset import PolyData as PolyData$/;"	i
PolyData	build/lib/pyvista/core/composite.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/filters/image_data.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/filters/poly_data.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/pointset.py	/^class PolyData(_PointSet, PolyDataFilters, _vtk.vtkPolyData):$/;"	c
PolyData	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core.pointset import PolyData$/;"	i
PolyData	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/utilities/parametric_objects.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/utilities/points.py	/^    from pyvista import PolyData$/;"	i
PolyData	build/lib/pyvista/core/wrappers.py	/^from .pointset import PolyData$/;"	i
PolyData	build/lib/pyvista/plotting/renderer.py	/^    from ..core.pointset import PolyData$/;"	i
PolyData	pyvista/core/__init__.py	/^from .pointset import PolyData as PolyData$/;"	i
PolyData	pyvista/core/composite.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/filters/data_set.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/filters/image_data.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/filters/poly_data.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/pointset.py	/^class PolyData(_PointSet, PolyDataFilters, _vtk.vtkPolyData):$/;"	c
PolyData	pyvista/core/utilities/geometric_objects.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core.pointset import PolyData$/;"	i
PolyData	pyvista/core/utilities/helpers.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/utilities/parametric_objects.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/utilities/points.py	/^    from pyvista import PolyData$/;"	i
PolyData	pyvista/core/wrappers.py	/^from .pointset import PolyData$/;"	i
PolyData	pyvista/plotting/renderer.py	/^    from ..core.pointset import PolyData$/;"	i
PolyData	tests/core/test_composite.py	/^from pyvista import PolyData$/;"	i
PolyDataCarousel	doc/source/make_tables.py	/^class PolyDataCarousel(DatasetGalleryCarousel):$/;"	c
PolyDataFilters	build/lib/pyvista/core/__init__.py	/^from .filters import PolyDataFilters as PolyDataFilters$/;"	i
PolyDataFilters	build/lib/pyvista/core/filters/__init__.py	/^from .poly_data import PolyDataFilters$/;"	i
PolyDataFilters	build/lib/pyvista/core/filters/poly_data.py	/^class PolyDataFilters(DataSetFilters):$/;"	c
PolyDataFilters	build/lib/pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters.poly_data import PolyDataFilters$/;"	i
PolyDataFilters	build/lib/pyvista/core/pointset.py	/^from .filters import PolyDataFilters$/;"	i
PolyDataFilters	pyvista/core/__init__.py	/^from .filters import PolyDataFilters as PolyDataFilters$/;"	i
PolyDataFilters	pyvista/core/filters/__init__.py	/^from .poly_data import PolyDataFilters$/;"	i
PolyDataFilters	pyvista/core/filters/poly_data.py	/^class PolyDataFilters(DataSetFilters):$/;"	c
PolyDataFilters	pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters.poly_data import PolyDataFilters$/;"	i
PolyDataFilters	pyvista/core/pointset.py	/^from .filters import PolyDataFilters$/;"	i
PolyLine	build/lib/pyvista/examples/cells.py	/^def PolyLine() -> UnstructuredGrid:$/;"	f
PolyLine	pyvista/examples/cells.py	/^def PolyLine() -> UnstructuredGrid:$/;"	f
PolyVertex	build/lib/pyvista/examples/cells.py	/^def PolyVertex() -> UnstructuredGrid:$/;"	f
PolyVertex	pyvista/examples/cells.py	/^def PolyVertex() -> UnstructuredGrid:$/;"	f
Polygon	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Polygon as Polygon$/;"	i
Polygon	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Polygon($/;"	f
Polygon	build/lib/pyvista/examples/cells.py	/^def Polygon() -> UnstructuredGrid:$/;"	f
Polygon	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Polygon as Polygon$/;"	i
Polygon	pyvista/core/utilities/geometric_objects.py	/^def Polygon($/;"	f
Polygon	pyvista/examples/cells.py	/^def Polygon() -> UnstructuredGrid:$/;"	f
PolygonSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import PolygonSource as PolygonSource$/;"	i
PolygonSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import PolygonSource$/;"	i
PolygonSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class PolygonSource(_vtk.vtkRegularPolygonSource):$/;"	c
PolygonSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import PolygonSource as PolygonSource$/;"	i
PolygonSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import PolygonSource$/;"	i
PolygonSource	pyvista/core/utilities/geometric_sources.py	/^class PolygonSource(_vtk.vtkRegularPolygonSource):$/;"	c
Polyhedron	build/lib/pyvista/examples/cells.py	/^def Polyhedron() -> UnstructuredGrid:$/;"	f
Polyhedron	pyvista/examples/cells.py	/^def Polyhedron() -> UnstructuredGrid:$/;"	f
Popen	build/lib/pyvista/plotting/tools.py	/^from subprocess import Popen$/;"	i
Popen	pyvista/plotting/tools.py	/^from subprocess import Popen$/;"	i
Popen	tests/plotting/test_tinypages.py	/^from subprocess import Popen$/;"	i
PreserveTypeAlgorithmBase	build/lib/pyvista/plotting/utilities/algorithms.py	/^class PreserveTypeAlgorithmBase(_vtk.VTKPythonAlgorithmBase):$/;"	c
PreserveTypeAlgorithmBase	pyvista/plotting/utilities/algorithms.py	/^class PreserveTypeAlgorithmBase(_vtk.VTKPythonAlgorithmBase):$/;"	c
ProStarReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import ProStarReader as ProStarReader$/;"	i
ProStarReader	build/lib/pyvista/core/utilities/reader.py	/^class ProStarReader(BaseReader):$/;"	c
ProStarReader	pyvista/core/utilities/__init__.py	/^from .reader import ProStarReader as ProStarReader$/;"	i
ProStarReader	pyvista/core/utilities/reader.py	/^class ProStarReader(BaseReader):$/;"	c
ProgressMonitor	build/lib/pyvista/core/filters/__init__.py	/^from pyvista.core.utilities.observers import ProgressMonitor$/;"	i
ProgressMonitor	build/lib/pyvista/core/utilities/__init__.py	/^from .observers import ProgressMonitor as ProgressMonitor$/;"	i
ProgressMonitor	build/lib/pyvista/core/utilities/observers.py	/^class ProgressMonitor:$/;"	c
ProgressMonitor	pyvista/core/filters/__init__.py	/^from pyvista.core.utilities.observers import ProgressMonitor$/;"	i
ProgressMonitor	pyvista/core/utilities/__init__.py	/^from .observers import ProgressMonitor as ProgressMonitor$/;"	i
ProgressMonitor	pyvista/core/utilities/observers.py	/^class ProgressMonitor:$/;"	c
ProgressMonitor	tests/core/test_utilities.py	/^from pyvista.core.utilities.observers import ProgressMonitor$/;"	i
Prop3D	build/lib/pyvista/plotting/__init__.py	/^from .prop3d import Prop3D as Prop3D$/;"	i
Prop3D	build/lib/pyvista/plotting/actor.py	/^from .prop3d import Prop3D$/;"	i
Prop3D	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.prop3d import Prop3D$/;"	i
Prop3D	build/lib/pyvista/plotting/prop3d.py	/^class Prop3D(_vtk.vtkProp3D):$/;"	c
Prop3D	build/lib/pyvista/plotting/volume.py	/^from .prop3d import Prop3D$/;"	i
Prop3D	pyvista/plotting/__init__.py	/^from .prop3d import Prop3D as Prop3D$/;"	i
Prop3D	pyvista/plotting/actor.py	/^from .prop3d import Prop3D$/;"	i
Prop3D	pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.prop3d import Prop3D$/;"	i
Prop3D	pyvista/plotting/prop3d.py	/^class Prop3D(_vtk.vtkProp3D):$/;"	c
Prop3D	pyvista/plotting/volume.py	/^from .prop3d import Prop3D$/;"	i
Prop3D	tests/plotting/test_actor.py	/^from pyvista.plotting.prop3d import Prop3D$/;"	i
Property	build/lib/pyvista/plotting/__init__.py	/^from ._property import Property as Property$/;"	i
Property	build/lib/pyvista/plotting/_property.py	/^class Property(_vtk.vtkProperty):$/;"	c
Property	build/lib/pyvista/plotting/actor.py	/^from ._property import Property$/;"	i
Property	build/lib/pyvista/plotting/plotter.py	/^from ._property import Property$/;"	i
Property	build/lib/pyvista/plotting/volume.py	/^    from ._property import Property$/;"	i
Property	pyvista/plotting/__init__.py	/^from ._property import Property as Property$/;"	i
Property	pyvista/plotting/_property.py	/^class Property(_vtk.vtkProperty):$/;"	c
Property	pyvista/plotting/actor.py	/^from ._property import Property$/;"	i
Property	pyvista/plotting/plotter.py	/^from ._property import Property$/;"	i
Property	pyvista/plotting/volume.py	/^    from ._property import Property$/;"	i
Protocol	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import Protocol$/;"	i
Protocol	pyvista/examples/_dataset_loader.py	/^from typing import Protocol$/;"	i
Psi_nlm	build/lib/pyvista/examples/examples.py	/^        from sympy.physics.hydrogen import Psi_nlm$/;"	i
Psi_nlm	pyvista/examples/examples.py	/^        from sympy.physics.hydrogen import Psi_nlm$/;"	i
PureWindowsPath	build/lib/pyvista/examples/downloads.py	/^from pathlib import PureWindowsPath$/;"	i
PureWindowsPath	pyvista/examples/downloads.py	/^from pathlib import PureWindowsPath$/;"	i
PureWindowsPath	tests/examples/test_downloads.py	/^from pathlib import PureWindowsPath$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/__init__.py	/^from .errors import PyVistaDeprecationWarning as PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/cell.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/dataset.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/datasetattributes.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/errors.py	/^class PyVistaDeprecationWarning(Warning):$/;"	c
PyVistaDeprecationWarning	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/pointset.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/utilities/fileio.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/core/utilities/parametric_objects.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/errors.py	/^    from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/examples/downloads.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/jupyter/__init__.py	/^from pyvista.core.errors import PyVistaDeprecationWarning as PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/plotting/axes_actor.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/plotting/picking.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/plotting/plotting/__init__.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/plotting/render_window_interactor.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/plotting/renderer.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/plotting/utilities/xvfb.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	build/lib/pyvista/utilities/__init__.py	/^    from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	doc/source/conf.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/__init__.py	/^from .errors import PyVistaDeprecationWarning as PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/cell.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/dataset.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/datasetattributes.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/errors.py	/^class PyVistaDeprecationWarning(Warning):$/;"	c
PyVistaDeprecationWarning	pyvista/core/filters/data_object.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/filters/data_set.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/filters/image_data.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/pointset.py	/^from .errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/utilities/fileio.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/core/utilities/parametric_objects.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/errors.py	/^    from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/examples/downloads.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/jupyter/__init__.py	/^from pyvista.core.errors import PyVistaDeprecationWarning as PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/plotting/axes_actor.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/plotting/picking.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/plotting/plotter.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/plotting/plotting/__init__.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/plotting/render_window_interactor.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/plotting/renderer.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/plotting/utilities/xvfb.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	pyvista/utilities/__init__.py	/^    from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_composite.py	/^from pyvista import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_dataobject_filters.py	/^from pyvista import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_dataset.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_dataset_filters.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_datasetattributes.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_imagedata_filters.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_parametric_geometry.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_polydata.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/core/test_polydata_filters.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/namespace/test_errors_namespace.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/namespace/test_plotting_namespace.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/namespace/test_utilities_namespace.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/plotting/test_axes.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/plotting/test_plotter.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/plotting/test_plotting.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/plotting/test_render_window_interactor.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaDeprecationWarning	tests/plotting/test_utilities.py	/^from pyvista.core.errors import PyVistaDeprecationWarning$/;"	i
PyVistaEfficiencyWarning	build/lib/pyvista/core/__init__.py	/^from .errors import PyVistaEfficiencyWarning as PyVistaEfficiencyWarning$/;"	i
PyVistaEfficiencyWarning	build/lib/pyvista/core/errors.py	/^class PyVistaEfficiencyWarning(Warning):$/;"	c
PyVistaEfficiencyWarning	pyvista/core/__init__.py	/^from .errors import PyVistaEfficiencyWarning as PyVistaEfficiencyWarning$/;"	i
PyVistaEfficiencyWarning	pyvista/core/errors.py	/^class PyVistaEfficiencyWarning(Warning):$/;"	c
PyVistaFutureWarning	build/lib/pyvista/core/__init__.py	/^from .errors import PyVistaFutureWarning as PyVistaFutureWarning$/;"	i
PyVistaFutureWarning	build/lib/pyvista/core/errors.py	/^class PyVistaFutureWarning(Warning):$/;"	c
PyVistaFutureWarning	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import PyVistaFutureWarning$/;"	i
PyVistaFutureWarning	pyvista/core/__init__.py	/^from .errors import PyVistaFutureWarning as PyVistaFutureWarning$/;"	i
PyVistaFutureWarning	pyvista/core/errors.py	/^class PyVistaFutureWarning(Warning):$/;"	c
PyVistaFutureWarning	pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import PyVistaFutureWarning$/;"	i
PyVistaFutureWarning	tests/core/test_polydata.py	/^from pyvista.core.errors import PyVistaFutureWarning$/;"	i
PyVistaLocalView	build/lib/pyvista/plotting/plotter.py	/^            from pyvista.trame import PyVistaLocalView$/;"	i
PyVistaLocalView	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.views import PyVistaLocalView$/;"	i
PyVistaLocalView	build/lib/pyvista/trame/ui/vuetify2.py	/^from pyvista.trame.views import PyVistaLocalView$/;"	i
PyVistaLocalView	build/lib/pyvista/trame/ui/vuetify3.py	/^from pyvista.trame.views import PyVistaLocalView$/;"	i
PyVistaLocalView	build/lib/pyvista/trame/views.py	/^class PyVistaLocalView(VtkLocalView, _BasePyVistaView):  # type: ignore[misc]$/;"	c
PyVistaLocalView	examples_trame/basic/PyVistaLocalView.py	/^from pyvista.trame import PyVistaLocalView$/;"	i
PyVistaLocalView	pyvista/plotting/plotter.py	/^            from pyvista.trame import PyVistaLocalView$/;"	i
PyVistaLocalView	pyvista/trame/__init__.py	/^from pyvista.trame.views import PyVistaLocalView$/;"	i
PyVistaLocalView	pyvista/trame/ui/vuetify2.py	/^from pyvista.trame.views import PyVistaLocalView$/;"	i
PyVistaLocalView	pyvista/trame/ui/vuetify3.py	/^from pyvista.trame.views import PyVistaLocalView$/;"	i
PyVistaLocalView	pyvista/trame/views.py	/^class PyVistaLocalView(VtkLocalView, _BasePyVistaView):  # type: ignore[misc]$/;"	c
PyVistaLocalView	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.views import PyVistaLocalView$/;"	i
PyVistaPickingError	build/lib/pyvista/plotting/errors.py	/^class PyVistaPickingError(RuntimeError):$/;"	c
PyVistaPickingError	build/lib/pyvista/plotting/picking.py	/^from .errors import PyVistaPickingError$/;"	i
PyVistaPickingError	pyvista/plotting/errors.py	/^class PyVistaPickingError(RuntimeError):$/;"	c
PyVistaPickingError	pyvista/plotting/picking.py	/^from .errors import PyVistaPickingError$/;"	i
PyVistaPickingError	tests/plotting/test_picking.py	/^from pyvista.plotting.errors import PyVistaPickingError$/;"	i
PyVistaPipelineError	build/lib/pyvista/core/__init__.py	/^from .errors import PyVistaPipelineError as PyVistaPipelineError$/;"	i
PyVistaPipelineError	build/lib/pyvista/core/errors.py	/^class PyVistaPipelineError(RuntimeError):$/;"	c
PyVistaPipelineError	build/lib/pyvista/plotting/utilities/algorithms.py	/^from pyvista.core.errors import PyVistaPipelineError$/;"	i
PyVistaPipelineError	pyvista/core/__init__.py	/^from .errors import PyVistaPipelineError as PyVistaPipelineError$/;"	i
PyVistaPipelineError	pyvista/core/errors.py	/^class PyVistaPipelineError(RuntimeError):$/;"	c
PyVistaPipelineError	pyvista/plotting/utilities/algorithms.py	/^from pyvista.core.errors import PyVistaPipelineError$/;"	i
PyVistaRemoteLocalView	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.views import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteLocalView	build/lib/pyvista/trame/ui/vuetify2.py	/^from pyvista.trame.views import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteLocalView	build/lib/pyvista/trame/ui/vuetify3.py	/^from pyvista.trame.views import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteLocalView	build/lib/pyvista/trame/views.py	/^class PyVistaRemoteLocalView(VtkRemoteLocalView, _BasePyVistaView):  # type: ignore[misc]$/;"	c
PyVistaRemoteLocalView	examples_trame/basic/PyVistaRemoteLocalView.py	/^from pyvista.trame import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteLocalView	pyvista/trame/__init__.py	/^from pyvista.trame.views import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteLocalView	pyvista/trame/ui/vuetify2.py	/^from pyvista.trame.views import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteLocalView	pyvista/trame/ui/vuetify3.py	/^from pyvista.trame.views import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteLocalView	pyvista/trame/views.py	/^class PyVistaRemoteLocalView(VtkRemoteLocalView, _BasePyVistaView):  # type: ignore[misc]$/;"	c
PyVistaRemoteLocalView	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.views import PyVistaRemoteLocalView$/;"	i
PyVistaRemoteView	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.views import PyVistaRemoteView$/;"	i
PyVistaRemoteView	build/lib/pyvista/trame/ui/vuetify2.py	/^from pyvista.trame.views import PyVistaRemoteView$/;"	i
PyVistaRemoteView	build/lib/pyvista/trame/ui/vuetify3.py	/^from pyvista.trame.views import PyVistaRemoteView$/;"	i
PyVistaRemoteView	build/lib/pyvista/trame/views.py	/^class PyVistaRemoteView(VtkRemoteView, _BasePyVistaView):  # type: ignore[misc]$/;"	c
PyVistaRemoteView	examples_trame/basic/PyVistaRemoteView.py	/^from pyvista.trame import PyVistaRemoteView$/;"	i
PyVistaRemoteView	pyvista/trame/__init__.py	/^from pyvista.trame.views import PyVistaRemoteView$/;"	i
PyVistaRemoteView	pyvista/trame/ui/vuetify2.py	/^from pyvista.trame.views import PyVistaRemoteView$/;"	i
PyVistaRemoteView	pyvista/trame/ui/vuetify3.py	/^from pyvista.trame.views import PyVistaRemoteView$/;"	i
PyVistaRemoteView	pyvista/trame/views.py	/^class PyVistaRemoteView(VtkRemoteView, _BasePyVistaView):  # type: ignore[misc]$/;"	c
PyVistaRemoteView	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.views import PyVistaRemoteView$/;"	i
Pyramid	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Pyramid as Pyramid$/;"	i
Pyramid	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Pyramid(points: MatrixLike[float] | None = None) -> UnstructuredGrid:$/;"	f
Pyramid	build/lib/pyvista/examples/cells.py	/^def Pyramid() -> UnstructuredGrid:$/;"	f
Pyramid	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Pyramid as Pyramid$/;"	i
Pyramid	pyvista/core/utilities/geometric_objects.py	/^def Pyramid(points: MatrixLike[float] | None = None) -> UnstructuredGrid:$/;"	f
Pyramid	pyvista/examples/cells.py	/^def Pyramid() -> UnstructuredGrid:$/;"	f
PytesterStdoutParser	tests/plotting/test_conftest.py	/^from tests.test_conftest import PytesterStdoutParser$/;"	i
PytesterStdoutParser	tests/test_conftest.py	/^class PytesterStdoutParser:$/;"	c
Q	examples/99-advanced/sphere_eversion.py	/^Q = 2 \/ 3  # arbitrary < 1$/;"	v
QApplication	tests/plotting/test_scraper.py	/^class QApplication:$/;"	c
QUAD	build/lib/pyvista/core/celltype.py	/^    QUAD = _CELL_TYPE_INFO['QUAD']$/;"	v	class:CellType
QUAD	build/lib/pyvista/core/celltype.py	/^    QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUAD	pyvista/core/celltype.py	/^    QUAD = _CELL_TYPE_INFO['QUAD']$/;"	v	class:CellType
QUAD	pyvista/core/celltype.py	/^    QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_EDGE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_EDGE = _CELL_TYPE_INFO['QUADRATIC_EDGE']$/;"	v	class:CellType
QUADRATIC_EDGE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_EDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_EDGE	pyvista/core/celltype.py	/^    QUADRATIC_EDGE = _CELL_TYPE_INFO['QUADRATIC_EDGE']$/;"	v	class:CellType
QUADRATIC_EDGE	pyvista/core/celltype.py	/^    QUADRATIC_EDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_HEXAHEDRON = _CELL_TYPE_INFO['QUADRATIC_HEXAHEDRON']$/;"	v	class:CellType
QUADRATIC_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    QUADRATIC_HEXAHEDRON = _CELL_TYPE_INFO['QUADRATIC_HEXAHEDRON']$/;"	v	class:CellType
QUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    QUADRATIC_HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_LINEAR_QUAD	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_QUAD = _CELL_TYPE_INFO['QUADRATIC_LINEAR_QUAD']$/;"	v	class:CellType
QUADRATIC_LINEAR_QUAD	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_LINEAR_QUAD	pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_QUAD = _CELL_TYPE_INFO['QUADRATIC_LINEAR_QUAD']$/;"	v	class:CellType
QUADRATIC_LINEAR_QUAD	pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_LINEAR_WEDGE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_WEDGE = _CELL_TYPE_INFO['QUADRATIC_LINEAR_WEDGE']$/;"	v	class:CellType
QUADRATIC_LINEAR_WEDGE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_LINEAR_WEDGE	pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_WEDGE = _CELL_TYPE_INFO['QUADRATIC_LINEAR_WEDGE']$/;"	v	class:CellType
QUADRATIC_LINEAR_WEDGE	pyvista/core/celltype.py	/^    QUADRATIC_LINEAR_WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_POLYGON	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_POLYGON = _CELL_TYPE_INFO['QUADRATIC_POLYGON']$/;"	v	class:CellType
QUADRATIC_POLYGON	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_POLYGON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_POLYGON	pyvista/core/celltype.py	/^    QUADRATIC_POLYGON = _CELL_TYPE_INFO['QUADRATIC_POLYGON']$/;"	v	class:CellType
QUADRATIC_POLYGON	pyvista/core/celltype.py	/^    QUADRATIC_POLYGON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_PYRAMID	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_PYRAMID = _CELL_TYPE_INFO['QUADRATIC_PYRAMID']$/;"	v	class:CellType
QUADRATIC_PYRAMID	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_PYRAMID=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_PYRAMID	pyvista/core/celltype.py	/^    QUADRATIC_PYRAMID = _CELL_TYPE_INFO['QUADRATIC_PYRAMID']$/;"	v	class:CellType
QUADRATIC_PYRAMID	pyvista/core/celltype.py	/^    QUADRATIC_PYRAMID=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_QUAD	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_QUAD = _CELL_TYPE_INFO['QUADRATIC_QUAD']$/;"	v	class:CellType
QUADRATIC_QUAD	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_QUAD	pyvista/core/celltype.py	/^    QUADRATIC_QUAD = _CELL_TYPE_INFO['QUADRATIC_QUAD']$/;"	v	class:CellType
QUADRATIC_QUAD	pyvista/core/celltype.py	/^    QUADRATIC_QUAD=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_TETRA	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_TETRA = _CELL_TYPE_INFO['QUADRATIC_TETRA']$/;"	v	class:CellType
QUADRATIC_TETRA	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_TETRA=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_TETRA	pyvista/core/celltype.py	/^    QUADRATIC_TETRA = _CELL_TYPE_INFO['QUADRATIC_TETRA']$/;"	v	class:CellType
QUADRATIC_TETRA	pyvista/core/celltype.py	/^    QUADRATIC_TETRA=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_TRIANGLE = _CELL_TYPE_INFO['QUADRATIC_TRIANGLE']$/;"	v	class:CellType
QUADRATIC_TRIANGLE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_TRIANGLE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_TRIANGLE	pyvista/core/celltype.py	/^    QUADRATIC_TRIANGLE = _CELL_TYPE_INFO['QUADRATIC_TRIANGLE']$/;"	v	class:CellType
QUADRATIC_TRIANGLE	pyvista/core/celltype.py	/^    QUADRATIC_TRIANGLE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_WEDGE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_WEDGE = _CELL_TYPE_INFO['QUADRATIC_WEDGE']$/;"	v	class:CellType
QUADRATIC_WEDGE	build/lib/pyvista/core/celltype.py	/^    QUADRATIC_WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QUADRATIC_WEDGE	pyvista/core/celltype.py	/^    QUADRATIC_WEDGE = _CELL_TYPE_INFO['QUADRATIC_WEDGE']$/;"	v	class:CellType
QUADRATIC_WEDGE	pyvista/core/celltype.py	/^    QUADRATIC_WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
QtDeprecationError	build/lib/pyvista/plotting/__init__.py	/^class QtDeprecationError(Exception):  # numpydoc ignore=PR01$/;"	c
QtDeprecationError	pyvista/plotting/__init__.py	/^class QtDeprecationError(Exception):  # numpydoc ignore=PR01$/;"	c
QtDeprecationError	tests/plotting/test_plotting.py	/^from pyvista.plotting import QtDeprecationError$/;"	i
QtInteractor	build/lib/pyvista/plotting/__init__.py	/^class QtInteractor:  # numpydoc ignore=PR01$/;"	c
QtInteractor	pyvista/plotting/__init__.py	/^class QtInteractor:  # numpydoc ignore=PR01$/;"	c
QtInteractor	tests/plotting/test_plotting.py	/^from pyvista.plotting import QtInteractor$/;"	i
QuadraticEdge	build/lib/pyvista/examples/cells.py	/^def QuadraticEdge() -> UnstructuredGrid:$/;"	f
QuadraticEdge	pyvista/examples/cells.py	/^def QuadraticEdge() -> UnstructuredGrid:$/;"	f
QuadraticHexahedron	build/lib/pyvista/examples/cells.py	/^def QuadraticHexahedron() -> UnstructuredGrid:$/;"	f
QuadraticHexahedron	pyvista/examples/cells.py	/^def QuadraticHexahedron() -> UnstructuredGrid:$/;"	f
QuadraticLinearQuadrilateral	build/lib/pyvista/examples/cells.py	/^def QuadraticLinearQuadrilateral() -> UnstructuredGrid:$/;"	f
QuadraticLinearQuadrilateral	pyvista/examples/cells.py	/^def QuadraticLinearQuadrilateral() -> UnstructuredGrid:$/;"	f
QuadraticLinearWedge	build/lib/pyvista/examples/cells.py	/^def QuadraticLinearWedge() -> UnstructuredGrid:$/;"	f
QuadraticLinearWedge	pyvista/examples/cells.py	/^def QuadraticLinearWedge() -> UnstructuredGrid:$/;"	f
QuadraticPolygon	build/lib/pyvista/examples/cells.py	/^def QuadraticPolygon() -> UnstructuredGrid:$/;"	f
QuadraticPolygon	pyvista/examples/cells.py	/^def QuadraticPolygon() -> UnstructuredGrid:$/;"	f
QuadraticPyramid	build/lib/pyvista/examples/cells.py	/^def QuadraticPyramid() -> UnstructuredGrid:$/;"	f
QuadraticPyramid	pyvista/examples/cells.py	/^def QuadraticPyramid() -> UnstructuredGrid:$/;"	f
QuadraticQuadrilateral	build/lib/pyvista/examples/cells.py	/^def QuadraticQuadrilateral() -> UnstructuredGrid:$/;"	f
QuadraticQuadrilateral	pyvista/examples/cells.py	/^def QuadraticQuadrilateral() -> UnstructuredGrid:$/;"	f
QuadraticTetrahedron	build/lib/pyvista/examples/cells.py	/^def QuadraticTetrahedron() -> UnstructuredGrid:$/;"	f
QuadraticTetrahedron	pyvista/examples/cells.py	/^def QuadraticTetrahedron() -> UnstructuredGrid:$/;"	f
QuadraticTriangle	build/lib/pyvista/examples/cells.py	/^def QuadraticTriangle() -> UnstructuredGrid:$/;"	f
QuadraticTriangle	pyvista/examples/cells.py	/^def QuadraticTriangle() -> UnstructuredGrid:$/;"	f
QuadraticWedge	build/lib/pyvista/examples/cells.py	/^def QuadraticWedge() -> UnstructuredGrid:$/;"	f
QuadraticWedge	pyvista/examples/cells.py	/^def QuadraticWedge() -> UnstructuredGrid:$/;"	f
Quadrilateral	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Quadrilateral as Quadrilateral$/;"	i
Quadrilateral	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Quadrilateral(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
Quadrilateral	build/lib/pyvista/examples/cells.py	/^def Quadrilateral() -> UnstructuredGrid:$/;"	f
Quadrilateral	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Quadrilateral as Quadrilateral$/;"	i
Quadrilateral	pyvista/core/utilities/geometric_objects.py	/^def Quadrilateral(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
Quadrilateral	pyvista/examples/cells.py	/^def Quadrilateral() -> UnstructuredGrid:$/;"	f
R22	build/lib/pyvista/core/utilities/cell_quality.py	/^R22 = sqrt(2) \/ 2$/;"	v
R22	pyvista/core/utilities/cell_quality.py	/^R22 = sqrt(2) \/ 2$/;"	v
R33	build/lib/pyvista/core/utilities/cell_quality.py	/^R33 = sqrt(3) \/ 3$/;"	v
R33	pyvista/core/utilities/cell_quality.py	/^R33 = sqrt(3) \/ 3$/;"	v
RADIUS	examples/02-plot/spherical.py	/^RADIUS = 6371.0$/;"	v
RAMP_MAP	build/lib/pyvista/plotting/lookup_table.py	/^RAMP_MAP = {0: 'linear', 1: 's-curve', 2: 'sqrt'}$/;"	v
RAMP_MAP	pyvista/plotting/lookup_table.py	/^RAMP_MAP = {0: 'linear', 1: 's-curve', 2: 'sqrt'}$/;"	v
RAMP_MAP_INV	build/lib/pyvista/plotting/lookup_table.py	/^RAMP_MAP_INV = {k: v for v, k in RAMP_MAP.items()}$/;"	v
RAMP_MAP_INV	pyvista/plotting/lookup_table.py	/^RAMP_MAP_INV = {k: v for v, k in RAMP_MAP.items()}$/;"	v
RED	doc/source/make_tables.py	/^    RED = auto()$/;"	v	class:ColorClassification
RED	tests/core/test_dataset_filters.py	/^RED = [1.0, 0.0, 0.0]$/;"	v
RED_RGB	tests/core/test_dataset_filters.py	/^RED_RGB = pv.Color('red').int_rgb$/;"	v
RED_UPPER_BOUND	doc/source/make_tables.py	/^RED_UPPER_BOUND = 8 \/ _360$/;"	v
REF_ANCHOR_INDENT_LEVEL	doc/source/make_tables.py	/^    REF_ANCHOR_INDENT_LEVEL = 2$/;"	v	class:DatasetCard
REGULAR_CELL_LIST	tests/core/test_cells.py	/^REGULAR_CELL_LIST = [[0, 1, 2], [3, 4, 5]]$/;"	v
RENDERED	build/lib/pyvista/plotting/opts.py	/^    RENDERED = (5, 'Rendered')$/;"	v	class:PickerType
RENDERED	pyvista/plotting/opts.py	/^    RENDERED = (5, 'Rendered')$/;"	v	class:PickerType
REPEAT	build/lib/pyvista/plotting/texture.py	/^        REPEAT = (1, 'Repeat')$/;"	v	class:Texture.WrapType
REPEAT	pyvista/plotting/texture.py	/^        REPEAT = (1, 'Repeat')$/;"	v	class:Texture.WrapType
REPR_VOLUME_MAX_CELLS	build/lib/pyvista/__init__.py	/^REPR_VOLUME_MAX_CELLS = 1e6$/;"	v
REPR_VOLUME_MAX_CELLS	pyvista/__init__.py	/^REPR_VOLUME_MAX_CELLS = 1e6$/;"	v
RESLICE	build/lib/pyvista/plotting/opts.py	/^    RESLICE = (6, 'Reslice')$/;"	v	class:PickerType
RESLICE	pyvista/plotting/opts.py	/^    RESLICE = (6, 'Reslice')$/;"	v	class:PickerType
ROOT_DIR	tests/doc/tst_doc_images.py	/^ROOT_DIR = str(Path(__file__).parent.parent.parent)$/;"	v
ROOT_DIR	tests/typing/mypy_plugin/test_plugin.py	/^ROOT_DIR = str(Path(TEST_DIR).parent.parent.parent)$/;"	v
ROTATION	tests/core/test_utilities.py	/^ROTATION = [[0, -1, 0], [1, 0, 0], [0, 0, 1]]  # rotate 90 deg about z axis$/;"	v
ROW	build/lib/pyvista/core/utilities/arrays.py	/^    ROW = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_ROWS)$/;"	v	class:FieldAssociation
ROW	pyvista/core/utilities/arrays.py	/^    ROW = int(_vtk.vtkDataObject.FIELD_ASSOCIATION_ROWS)$/;"	v	class:FieldAssociation
ReadError	build/lib/pyvista/core/utilities/fileio.py	/^        from meshio._exceptions import ReadError$/;"	i
ReadError	pyvista/core/utilities/fileio.py	/^        from meshio._exceptions import ReadError$/;"	i
ReadError	tests/test_meshio.py	/^    from meshio._exceptions import ReadError$/;"	i
Rectangle	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Rectangle as Rectangle$/;"	i
Rectangle	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Rectangle(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
Rectangle	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Rectangle as Rectangle$/;"	i
Rectangle	pyvista/core/utilities/geometric_objects.py	/^def Rectangle(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
RectangleSelection	build/lib/pyvista/plotting/picking.py	/^class RectangleSelection:$/;"	c
RectangleSelection	pyvista/plotting/picking.py	/^class RectangleSelection:$/;"	c
RectilinearGrid	build/lib/pyvista/core/__init__.py	/^from .grid import RectilinearGrid as RectilinearGrid$/;"	i
RectilinearGrid	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista import RectilinearGrid$/;"	i
RectilinearGrid	build/lib/pyvista/core/grid.py	/^class RectilinearGrid(Grid, RectilinearGridFilters, _vtk.vtkRectilinearGrid):$/;"	c
RectilinearGrid	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import RectilinearGrid$/;"	i
RectilinearGrid	build/lib/pyvista/core/wrappers.py	/^from .grid import RectilinearGrid$/;"	i
RectilinearGrid	pyvista/core/__init__.py	/^from .grid import RectilinearGrid as RectilinearGrid$/;"	i
RectilinearGrid	pyvista/core/filters/data_object.py	/^    from pyvista import RectilinearGrid$/;"	i
RectilinearGrid	pyvista/core/grid.py	/^class RectilinearGrid(Grid, RectilinearGridFilters, _vtk.vtkRectilinearGrid):$/;"	c
RectilinearGrid	pyvista/core/utilities/helpers.py	/^    from pyvista import RectilinearGrid$/;"	i
RectilinearGrid	pyvista/core/wrappers.py	/^from .grid import RectilinearGrid$/;"	i
RectilinearGrid	tests/core/test_composite.py	/^from pyvista import RectilinearGrid$/;"	i
RectilinearGridCarousel	doc/source/make_tables.py	/^class RectilinearGridCarousel(DatasetGalleryCarousel):$/;"	c
RectilinearGridFilters	build/lib/pyvista/core/filters/__init__.py	/^from .rectilinear_grid import RectilinearGridFilters$/;"	i
RectilinearGridFilters	build/lib/pyvista/core/filters/rectilinear_grid.py	/^class RectilinearGridFilters:$/;"	c
RectilinearGridFilters	build/lib/pyvista/core/grid.py	/^from .filters import RectilinearGridFilters$/;"	i
RectilinearGridFilters	pyvista/core/filters/__init__.py	/^from .rectilinear_grid import RectilinearGridFilters$/;"	i
RectilinearGridFilters	pyvista/core/filters/rectilinear_grid.py	/^class RectilinearGridFilters:$/;"	c
RectilinearGridFilters	pyvista/core/grid.py	/^from .filters import RectilinearGridFilters$/;"	i
RefExpr	build/lib/pyvista/typing/mypy_plugin.py	/^    from mypy.nodes import RefExpr$/;"	i
RefExpr	pyvista/typing/mypy_plugin.py	/^    from mypy.nodes import RefExpr$/;"	i
RemoveObservers	build/lib/pyvista/core/utilities/reader.py	/^    def RemoveObservers(self, *args) -> None:$/;"	m	class:BaseVTKReader
RemoveObservers	pyvista/core/utilities/reader.py	/^    def RemoveObservers(self, *args) -> None:$/;"	m	class:BaseVTKReader
RenderPasses	build/lib/pyvista/plotting/render_passes.py	/^class RenderPasses:$/;"	c
RenderPasses	build/lib/pyvista/plotting/renderer.py	/^from .render_passes import RenderPasses$/;"	i
RenderPasses	pyvista/plotting/render_passes.py	/^class RenderPasses:$/;"	c
RenderPasses	pyvista/plotting/renderer.py	/^from .render_passes import RenderPasses$/;"	i
RenderPasses	tests/plotting/test_render_pass.py	/^from pyvista.plotting.render_passes import RenderPasses$/;"	i
RenderWindowInteractor	build/lib/pyvista/plotting/__init__.py	/^from .render_window_interactor import RenderWindowInteractor as RenderWindowInteractor$/;"	i
RenderWindowInteractor	build/lib/pyvista/plotting/plotter.py	/^from .render_window_interactor import RenderWindowInteractor$/;"	i
RenderWindowInteractor	build/lib/pyvista/plotting/render_window_interactor.py	/^class RenderWindowInteractor:$/;"	c
RenderWindowInteractor	pyvista/plotting/__init__.py	/^from .render_window_interactor import RenderWindowInteractor as RenderWindowInteractor$/;"	i
RenderWindowInteractor	pyvista/plotting/plotter.py	/^from .render_window_interactor import RenderWindowInteractor$/;"	i
RenderWindowInteractor	pyvista/plotting/render_window_interactor.py	/^class RenderWindowInteractor:$/;"	c
RenderWindowUnavailable	build/lib/pyvista/plotting/__init__.py	/^from .errors import RenderWindowUnavailable as RenderWindowUnavailable$/;"	i
RenderWindowUnavailable	build/lib/pyvista/plotting/errors.py	/^class RenderWindowUnavailable(RuntimeError):  # numpydoc ignore=PR01$/;"	c
RenderWindowUnavailable	build/lib/pyvista/plotting/plotter.py	/^from .errors import RenderWindowUnavailable$/;"	i
RenderWindowUnavailable	pyvista/plotting/__init__.py	/^from .errors import RenderWindowUnavailable as RenderWindowUnavailable$/;"	i
RenderWindowUnavailable	pyvista/plotting/errors.py	/^class RenderWindowUnavailable(RuntimeError):  # numpydoc ignore=PR01$/;"	c
RenderWindowUnavailable	pyvista/plotting/plotter.py	/^from .errors import RenderWindowUnavailable$/;"	i
RenderWindowUnavailable	tests/plotting/test_plotter.py	/^from pyvista.plotting.errors import RenderWindowUnavailable$/;"	i
RenderWindowUnavailable	tests/plotting/test_plotting.py	/^from pyvista.plotting.errors import RenderWindowUnavailable$/;"	i
Renderer	build/lib/pyvista/plotting/__init__.py	/^from .renderer import Renderer as Renderer$/;"	i
Renderer	build/lib/pyvista/plotting/background_renderer.py	/^from .renderer import Renderer$/;"	i
Renderer	build/lib/pyvista/plotting/plotter.py	/^from .renderer import Renderer$/;"	i
Renderer	build/lib/pyvista/plotting/renderer.py	/^class Renderer(_vtk.vtkOpenGLRenderer):$/;"	c
Renderer	build/lib/pyvista/plotting/renderers.py	/^from .renderer import Renderer$/;"	i
Renderer	pyvista/plotting/__init__.py	/^from .renderer import Renderer as Renderer$/;"	i
Renderer	pyvista/plotting/background_renderer.py	/^from .renderer import Renderer$/;"	i
Renderer	pyvista/plotting/plotter.py	/^from .renderer import Renderer$/;"	i
Renderer	pyvista/plotting/renderer.py	/^class Renderer(_vtk.vtkOpenGLRenderer):$/;"	c
Renderer	pyvista/plotting/renderers.py	/^from .renderer import Renderer$/;"	i
Renderers	build/lib/pyvista/plotting/plotter.py	/^from .renderers import Renderers$/;"	i
Renderers	build/lib/pyvista/plotting/renderers.py	/^class Renderers:$/;"	c
Renderers	pyvista/plotting/plotter.py	/^from .renderers import Renderers$/;"	i
Renderers	pyvista/plotting/renderers.py	/^class Renderers:$/;"	c
Report	build/lib/pyvista/__init__.py	/^from pyvista.report import Report as Report$/;"	i
Report	build/lib/pyvista/report.py	/^class Report(scooby.Report):$/;"	c
Report	pyvista/__init__.py	/^from pyvista.report import Report as Report$/;"	i
Report	pyvista/report.py	/^class Report(scooby.Report):$/;"	c
RepresentationType	build/lib/pyvista/plotting/actor_properties.py	/^from .opts import RepresentationType$/;"	i
RepresentationType	build/lib/pyvista/plotting/opts.py	/^class RepresentationType(AnnotatedIntEnum):$/;"	c
RepresentationType	pyvista/plotting/actor_properties.py	/^from .opts import RepresentationType$/;"	i
RepresentationType	pyvista/plotting/opts.py	/^class RepresentationType(AnnotatedIntEnum):$/;"	c
RepresentationType	tests/plotting/test_axes.py	/^from pyvista.plotting.opts import RepresentationType$/;"	i
RequestData	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:ActiveScalarsAlgorithm
RequestData	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:AddIDsAlgorithm
RequestData	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:CrinkleAlgorithm
RequestData	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:PointSetToPolyDataAlgorithm
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:ActiveScalarsAlgorithm
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:AddIDsAlgorithm
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:CrinkleAlgorithm
RequestData	pyvista/plotting/utilities/algorithms.py	/^    def RequestData(self, _request, inInfo, outInfo) -> int:$/;"	m	class:PointSetToPolyDataAlgorithm
RequestDataObject	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def RequestDataObject(self, _request, inInfo, outInfo) -> int:$/;"	m	class:PreserveTypeAlgorithmBase
RequestDataObject	pyvista/plotting/utilities/algorithms.py	/^    def RequestDataObject(self, _request, inInfo, outInfo) -> int:$/;"	m	class:PreserveTypeAlgorithmBase
ResetPyVista	doc/source/conf.py	/^class ResetPyVista:$/;"	c
Rotation	build/lib/pyvista/core/_typing_core/_aliases.py	/^        Rotation = None$/;"	v
Rotation	build/lib/pyvista/core/_typing_core/_aliases.py	/^        from scipy.spatial.transform import Rotation$/;"	i
Rotation	build/lib/pyvista/core/_typing_core/_aliases.py	/^    Rotation = None$/;"	v
Rotation	build/lib/pyvista/core/_validation/validate.py	/^                from scipy.spatial.transform import Rotation$/;"	i
Rotation	build/lib/pyvista/core/utilities/transform.py	/^            from scipy.spatial.transform import Rotation$/;"	i
Rotation	build/lib/pyvista/core/utilities/transform.py	/^    from scipy.spatial.transform import Rotation$/;"	i
Rotation	pyvista/core/_typing_core/_aliases.py	/^        Rotation = None$/;"	v
Rotation	pyvista/core/_typing_core/_aliases.py	/^        from scipy.spatial.transform import Rotation$/;"	i
Rotation	pyvista/core/_typing_core/_aliases.py	/^    Rotation = None$/;"	v
Rotation	pyvista/core/_validation/validate.py	/^                from scipy.spatial.transform import Rotation$/;"	i
Rotation	pyvista/core/utilities/transform.py	/^            from scipy.spatial.transform import Rotation$/;"	i
Rotation	pyvista/core/utilities/transform.py	/^    from scipy.spatial.transform import Rotation$/;"	i
Rotation	tests/core/test_utilities.py	/^from scipy.spatial.transform import Rotation$/;"	i
RotationLike	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import RotationLike as RotationLike$/;"	i
RotationLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^    RotationLike = Union[MatrixLike[float], _vtk.vtkMatrix3x3, Rotation]$/;"	v
RotationLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^    RotationLike = Union[MatrixLike[float], _vtk.vtkMatrix3x3]  # type: ignore[misc]$/;"	v
RotationLike	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RotationLike	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista import RotationLike$/;"	i
RotationLike	build/lib/pyvista/core/grid.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RotationLike	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RotationLike	build/lib/pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RotationLike	pyvista/core/_typing_core/__init__.py	/^from ._aliases import RotationLike as RotationLike$/;"	i
RotationLike	pyvista/core/_typing_core/_aliases.py	/^    RotationLike = Union[MatrixLike[float], _vtk.vtkMatrix3x3, Rotation]$/;"	v
RotationLike	pyvista/core/_typing_core/_aliases.py	/^    RotationLike = Union[MatrixLike[float], _vtk.vtkMatrix3x3]  # type: ignore[misc]$/;"	v
RotationLike	pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RotationLike	pyvista/core/filters/data_object.py	/^    from pyvista import RotationLike$/;"	i
RotationLike	pyvista/core/grid.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RotationLike	pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RotationLike	pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import RotationLike$/;"	i
RowLiteral	build/lib/pyvista/core/objects.py	/^from .utilities.arrays import RowLiteral$/;"	i
RowLiteral	build/lib/pyvista/core/utilities/arrays.py	/^RowLiteral = Literal[FieldAssociation.ROW, 'row']$/;"	v
RowLiteral	pyvista/core/objects.py	/^from .utilities.arrays import RowLiteral$/;"	i
RowLiteral	pyvista/core/utilities/arrays.py	/^RowLiteral = Literal[FieldAssociation.ROW, 'row']$/;"	v
RunResultsReport	tests/plotting/test_conftest.py	/^from tests.test_conftest import RunResultsReport$/;"	i
RunResultsReport	tests/test_conftest.py	/^class RunResultsReport:$/;"	c
SCALE	tests/core/test_utilities.py	/^SCALE = 2$/;"	v
SCALE	tests/plotting/test_plotting.py	/^SCALE = (1.5, 2, 2.5)$/;"	v
SCENE	build/lib/pyvista/plotting/opts.py	/^    SCENE = (7, 'Scene')$/;"	v	class:PickerType
SCENE	pyvista/plotting/opts.py	/^    SCENE = (7, 'Scene')$/;"	v	class:PickerType
SCENE_LIGHT	build/lib/pyvista/plotting/lights.py	/^    SCENE_LIGHT = 3$/;"	v	class:LightType
SCENE_LIGHT	build/lib/pyvista/plotting/lights.py	/^    SCENE_LIGHT = LightType.SCENE_LIGHT$/;"	v	class:Light
SCENE_LIGHT	pyvista/plotting/lights.py	/^    SCENE_LIGHT = 3$/;"	v	class:LightType
SCENE_LIGHT	pyvista/plotting/lights.py	/^    SCENE_LIGHT = LightType.SCENE_LIGHT$/;"	v	class:Light
SCHEME_NAMES	build/lib/pyvista/plotting/charts.py	/^from .colors import SCHEME_NAMES$/;"	i
SCHEME_NAMES	build/lib/pyvista/plotting/colors.py	/^SCHEME_NAMES = {$/;"	v
SCHEME_NAMES	pyvista/plotting/charts.py	/^from .colors import SCHEME_NAMES$/;"	i
SCHEME_NAMES	pyvista/plotting/colors.py	/^SCHEME_NAMES = {$/;"	v
SHAPE	tests/core/test_dataobject_filters.py	/^SHAPE = 'shape'$/;"	v
SHEAR	tests/core/test_utilities.py	/^SHEAR = np.eye(3)$/;"	v
SINGLE_PRECISION	build/lib/pyvista/core/utilities/geometric_sources.py	/^SINGLE_PRECISION = _vtk.vtkAlgorithm.SINGLE_PRECISION$/;"	v
SINGLE_PRECISION	pyvista/core/utilities/geometric_sources.py	/^SINGLE_PRECISION = _vtk.vtkAlgorithm.SINGLE_PRECISION$/;"	v
SKIP_PLOTTING	tests/plotting/conftest.py	/^SKIP_PLOTTING = not system_supports_plotting()$/;"	v
SLCReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import SLCReader as SLCReader$/;"	i
SLCReader	build/lib/pyvista/core/utilities/reader.py	/^class SLCReader(BaseReader):$/;"	c
SLCReader	pyvista/core/utilities/__init__.py	/^from .reader import SLCReader as SLCReader$/;"	i
SLCReader	pyvista/core/utilities/reader.py	/^class SLCReader(BaseReader):$/;"	c
SMALL_VOLUME	tests/core/test_dataset_filters.py	/^SMALL_VOLUME = 1**3$/;"	v
SOURCE	build/lib/pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import SOURCE$/;"	i
SOURCE	build/lib/pyvista/examples/downloads.py	/^    SOURCE = 'https:\/\/github.com\/pyvista\/vtk-data\/raw\/master\/Data\/'$/;"	v
SOURCE	build/lib/pyvista/examples/downloads.py	/^    SOURCE = _path$/;"	v
SOURCE	pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import SOURCE$/;"	i
SOURCE	pyvista/examples/downloads.py	/^    SOURCE = 'https:\/\/github.com\/pyvista\/vtk-data\/raw\/master\/Data\/'$/;"	v
SOURCE	pyvista/examples/downloads.py	/^    SOURCE = _path$/;"	v
SOURCEDIR	doc/Makefile	/^SOURCEDIR     = source$/;"	m
SPEED_OF_SOUND	build/lib/pyvista/core/utilities/reader.py	/^    SPEED_OF_SOUND = 113$/;"	v	class:Plot3DFunctionEnum
SPEED_OF_SOUND	build/lib/pyvista/core/utilities/reader.py	/^    SPEED_OF_SOUND = Plot3DFunctionEnum.SPEED_OF_SOUND$/;"	v	class:MultiBlockPlot3DReader
SPEED_OF_SOUND	pyvista/core/utilities/reader.py	/^    SPEED_OF_SOUND = 113$/;"	v	class:Plot3DFunctionEnum
SPEED_OF_SOUND	pyvista/core/utilities/reader.py	/^    SPEED_OF_SOUND = Plot3DFunctionEnum.SPEED_OF_SOUND$/;"	v	class:MultiBlockPlot3DReader
SPHERE	build/lib/pyvista/plotting/axes_actor.py	/^        SPHERE = 1$/;"	v	class:AxesActor.TipType
SPHERE	pyvista/plotting/axes_actor.py	/^        SPHERE = 1$/;"	v	class:AxesActor.TipType
SPHINXBUILD	doc/Makefile	/^SPHINXBUILD   = python -msphinx$/;"	m
SPHINXOPTS	doc/Makefile	/^SPHINXOPTS    =$/;"	m
SPHINXPROJ	doc/Makefile	/^SPHINXPROJ    = pyvista$/;"	m
STAGNATION_ENERGY	build/lib/pyvista/core/utilities/reader.py	/^    STAGNATION_ENERGY = 163$/;"	v	class:Plot3DFunctionEnum
STAGNATION_ENERGY	build/lib/pyvista/core/utilities/reader.py	/^    STAGNATION_ENERGY = Plot3DFunctionEnum.STAGNATION_ENERGY$/;"	v	class:MultiBlockPlot3DReader
STAGNATION_ENERGY	pyvista/core/utilities/reader.py	/^    STAGNATION_ENERGY = 163$/;"	v	class:Plot3DFunctionEnum
STAGNATION_ENERGY	pyvista/core/utilities/reader.py	/^    STAGNATION_ENERGY = Plot3DFunctionEnum.STAGNATION_ENERGY$/;"	v	class:MultiBlockPlot3DReader
STLReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import STLReader as STLReader$/;"	i
STLReader	build/lib/pyvista/core/utilities/reader.py	/^class STLReader(BaseReader):$/;"	c
STLReader	pyvista/core/utilities/__init__.py	/^from .reader import STLReader as STLReader$/;"	i
STLReader	pyvista/core/utilities/reader.py	/^class STLReader(BaseReader):$/;"	c
STRAIN_RATE	build/lib/pyvista/core/utilities/reader.py	/^    STRAIN_RATE = 212$/;"	v	class:Plot3DFunctionEnum
STRAIN_RATE	build/lib/pyvista/core/utilities/reader.py	/^    STRAIN_RATE = Plot3DFunctionEnum.STRAIN_RATE$/;"	v	class:MultiBlockPlot3DReader
STRAIN_RATE	pyvista/core/utilities/reader.py	/^    STRAIN_RATE = 212$/;"	v	class:Plot3DFunctionEnum
STRAIN_RATE	pyvista/core/utilities/reader.py	/^    STRAIN_RATE = Plot3DFunctionEnum.STRAIN_RATE$/;"	v	class:MultiBlockPlot3DReader
STRUCTGRID_CELLS_BOOL	tests/core/test_grid.py	/^STRUCTGRID_CELLS_BOOL = np.ones(729, dtype=bool)  # struct_grid.n_cells == 729$/;"	v
STRUCTGRID_POINTS_BOOL	tests/core/test_grid.py	/^STRUCTGRID_POINTS_BOOL = np.ones(1000, dtype=bool)  # struct_grid.n_points == 1000$/;"	v
SUPPORTED_FORMATS	build/lib/pyvista/plotting/plotter.py	/^SUPPORTED_FORMATS = ['.png', '.jpeg', '.jpg', '.bmp', '.tif', '.tiff']$/;"	v
SUPPORTED_FORMATS	pyvista/plotting/plotter.py	/^SUPPORTED_FORMATS = ['.png', '.jpeg', '.jpg', '.bmp', '.tif', '.tiff']$/;"	v
SUPPORTED_FORMATS	tests/plotting/test_plotting.py	/^from pyvista.plotting.plotter import SUPPORTED_FORMATS$/;"	i
SUPPORTS_OPENGL	build/lib/pyvista/plotting/tools.py	/^SUPPORTS_OPENGL = None$/;"	v
SUPPORTS_OPENGL	pyvista/plotting/tools.py	/^SUPPORTS_OPENGL = None$/;"	v
SUPPORTS_PLOTTING	build/lib/pyvista/plotting/tools.py	/^SUPPORTS_PLOTTING = None$/;"	v
SUPPORTS_PLOTTING	pyvista/plotting/tools.py	/^SUPPORTS_PLOTTING = None$/;"	v
SURFACE	build/lib/pyvista/plotting/opts.py	/^    SURFACE = (2, 'Surface')$/;"	v	class:RepresentationType
SURFACE	pyvista/plotting/opts.py	/^    SURFACE = (2, 'Surface')$/;"	v	class:RepresentationType
SWIRL	build/lib/pyvista/core/utilities/reader.py	/^    SWIRL = 184$/;"	v	class:Plot3DFunctionEnum
SWIRL	build/lib/pyvista/core/utilities/reader.py	/^    SWIRL = Plot3DFunctionEnum.SWIRL$/;"	v	class:MultiBlockPlot3DReader
SWIRL	pyvista/core/utilities/reader.py	/^    SWIRL = 184$/;"	v	class:Plot3DFunctionEnum
SWIRL	pyvista/core/utilities/reader.py	/^    SWIRL = Plot3DFunctionEnum.SWIRL$/;"	v	class:MultiBlockPlot3DReader
ScalarBars	build/lib/pyvista/plotting/plotter.py	/^from .scalar_bars import ScalarBars$/;"	i
ScalarBars	build/lib/pyvista/plotting/scalar_bars.py	/^class ScalarBars:$/;"	c
ScalarBars	pyvista/plotting/plotter.py	/^from .scalar_bars import ScalarBars$/;"	i
ScalarBars	pyvista/plotting/scalar_bars.py	/^class ScalarBars:$/;"	c
ScatterPlot2D	build/lib/pyvista/plotting/charts.py	/^class ScatterPlot2D(_Plot, _vtk.vtkPlotPoints):$/;"	c
ScatterPlot2D	pyvista/plotting/charts.py	/^class ScatterPlot2D(_Plot, _vtk.vtkPlotPoints):$/;"	c
Scraper	build/lib/pyvista/plotting/utilities/__init__.py	/^from .sphinx_gallery import Scraper as Scraper$/;"	i
Scraper	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^class Scraper:$/;"	c
Scraper	pyvista/plotting/utilities/__init__.py	/^from .sphinx_gallery import Scraper as Scraper$/;"	i
Scraper	pyvista/plotting/utilities/sphinx_gallery.py	/^class Scraper:$/;"	c
Scraper	tests/plotting/test_scraper.py	/^from pyvista.plotting.utilities.sphinx_gallery import Scraper$/;"	i
SegYReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import SegYReader as SegYReader$/;"	i
SegYReader	build/lib/pyvista/core/utilities/reader.py	/^class SegYReader(BaseReader):$/;"	c
SegYReader	pyvista/core/utilities/__init__.py	/^from .reader import SegYReader as SegYReader$/;"	i
SegYReader	pyvista/core/utilities/reader.py	/^class SegYReader(BaseReader):$/;"	c
Self	build/lib/pyvista/core/cell.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/core/dataobject.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/core/dataset.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/core/datasetattributes.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/core/grid.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/core/pointset.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/plotting/actor.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/plotting/prop3d.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/plotting/volume.py	/^    from typing_extensions import Self$/;"	i
Self	build/lib/pyvista/typing/mypy_plugin.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/core/cell.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/core/dataobject.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/core/dataset.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/core/datasetattributes.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/core/grid.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/core/pointset.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/plotting/actor.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/plotting/prop3d.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/plotting/volume.py	/^    from typing_extensions import Self$/;"	i
Self	pyvista/typing/mypy_plugin.py	/^    from typing_extensions import Self$/;"	i
SemanticColorEnum	doc/source/make_tables.py	/^    class SemanticColorEnum(StrEnum):$/;"	c	class:_BaseDatasetBadge
Sequence	build/lib/pyvista/core/_typing_core/_array_like.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/_validation/check.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/_validation/validate.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/cell.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/composite.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/dataset.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/filters/data_object.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/filters/data_set.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/filters/poly_data.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/filters/rectilinear_grid.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/grid.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/pointset.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/arrays.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/cell_quality.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/features.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/fileio.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/geometric_sources.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/helpers.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/image_sources.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/misc.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/core/utilities/transform.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/examples/_dataset_loader.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/_typing.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/axes_assembly.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/charts.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/composite_mapper.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/renderer.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/renderers.py	/^from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/text.py	/^    from collections.abc import Sequence$/;"	i
Sequence	build/lib/pyvista/plotting/texture.py	/^from collections.abc import Sequence$/;"	i
Sequence	doc/source/make_tables.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/_typing_core/_array_like.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/_validation/check.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/_validation/validate.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/cell.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/composite.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/dataset.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/filters/data_object.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/filters/data_set.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/filters/poly_data.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/filters/rectilinear_grid.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/grid.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/pointset.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/arrays.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/cell_quality.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/features.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/fileio.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/geometric_sources.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/helpers.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/image_sources.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/misc.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/core/utilities/transform.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/examples/_dataset_loader.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/_typing.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/axes_assembly.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/charts.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/composite_mapper.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/renderer.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/renderers.py	/^from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/text.py	/^    from collections.abc import Sequence$/;"	i
Sequence	pyvista/plotting/texture.py	/^from collections.abc import Sequence$/;"	i
SetFileName	build/lib/pyvista/core/utilities/reader.py	/^    def SetFileName(self, filename) -> None:$/;"	m	class:BaseVTKReader
SetFileName	build/lib/pyvista/core/utilities/reader.py	/^    def SetFileName(self, filename) -> None:$/;"	m	class:_PVDReader
SetFileName	pyvista/core/utilities/reader.py	/^    def SetFileName(self, filename) -> None:$/;"	m	class:BaseVTKReader
SetFileName	pyvista/core/utilities/reader.py	/^    def SetFileName(self, filename) -> None:$/;"	m	class:_PVDReader
SetVisibilityCallback	examples/03-widgets/checkbox_widget.py	/^class SetVisibilityCallback:$/;"	c
ShaftType	build/lib/pyvista/plotting/axes_actor.py	/^    class ShaftType(Enum):$/;"	c	class:AxesActor
ShaftType	pyvista/plotting/axes_actor.py	/^    class ShaftType(Enum):$/;"	c	class:AxesActor
Signature	tests/conftest.py	/^from inspect import Signature$/;"	i
SinglePageLayout	examples_trame/advanced/contour.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/advanced/custom_ui.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/PyVistaLocalView.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/PyVistaRemoteLocalView.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/PyVistaRemoteView.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/actor_color.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/algorithm.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/file_viewer.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/mesh_scalars.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/multi_views.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/basic/ui_template.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
SinglePageLayout	examples_trame/validation/many_actors.py	/^from trame.ui.vuetify3 import SinglePageLayout$/;"	i
Sized	build/lib/pyvista/core/_validation/check.py	/^from collections.abc import Sized$/;"	i
Sized	pyvista/core/_validation/check.py	/^from collections.abc import Sized$/;"	i
SmartVolumeMapper	build/lib/pyvista/plotting/__init__.py	/^from .mapper import SmartVolumeMapper as SmartVolumeMapper$/;"	i
SmartVolumeMapper	build/lib/pyvista/plotting/mapper.py	/^class SmartVolumeMapper(_BaseVolumeMapper, _vtk.vtkSmartVolumeMapper):$/;"	c
SmartVolumeMapper	build/lib/pyvista/plotting/plotter.py	/^from .mapper import SmartVolumeMapper$/;"	i
SmartVolumeMapper	pyvista/plotting/__init__.py	/^from .mapper import SmartVolumeMapper as SmartVolumeMapper$/;"	i
SmartVolumeMapper	pyvista/plotting/mapper.py	/^class SmartVolumeMapper(_BaseVolumeMapper, _vtk.vtkSmartVolumeMapper):$/;"	c
SmartVolumeMapper	pyvista/plotting/plotter.py	/^from .mapper import SmartVolumeMapper$/;"	i
SolidSphere	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import SolidSphere as SolidSphere$/;"	i
SolidSphere	build/lib/pyvista/core/utilities/geometric_objects.py	/^def SolidSphere($/;"	f
SolidSphere	pyvista/core/utilities/__init__.py	/^from .geometric_objects import SolidSphere as SolidSphere$/;"	i
SolidSphere	pyvista/core/utilities/geometric_objects.py	/^def SolidSphere($/;"	f
SolidSphereGeneric	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import SolidSphereGeneric as SolidSphereGeneric$/;"	i
SolidSphereGeneric	build/lib/pyvista/core/utilities/geometric_objects.py	/^def SolidSphereGeneric($/;"	f
SolidSphereGeneric	pyvista/core/utilities/__init__.py	/^from .geometric_objects import SolidSphereGeneric as SolidSphereGeneric$/;"	i
SolidSphereGeneric	pyvista/core/utilities/geometric_objects.py	/^def SolidSphereGeneric($/;"	f
SpecialDataTypeBadge	doc/source/make_tables.py	/^class SpecialDataTypeBadge(_BaseDatasetBadge):$/;"	c
Sphere	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Sphere as Sphere$/;"	i
Sphere	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Sphere($/;"	f
Sphere	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Sphere as Sphere$/;"	i
Sphere	pyvista/core/utilities/geometric_objects.py	/^def Sphere($/;"	f
SphereSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import SphereSource as SphereSource$/;"	i
SphereSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import SphereSource$/;"	i
SphereSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class SphereSource(_vtk.vtkSphereSource):$/;"	c
SphereSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import SphereSource as SphereSource$/;"	i
SphereSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import SphereSource$/;"	i
SphereSource	pyvista/core/utilities/geometric_sources.py	/^class SphereSource(_vtk.vtkSphereSource):$/;"	c
Sphinx	build/lib/pyvista/ext/coverage.py	/^    from sphinx.application import Sphinx$/;"	i
Sphinx	build/lib/pyvista/ext/plot_directive.py	/^import jinja2  # Sphinx dependency.$/;"	i
Sphinx	pyvista/ext/coverage.py	/^    from sphinx.application import Sphinx$/;"	i
Sphinx	pyvista/ext/plot_directive.py	/^import jinja2  # Sphinx dependency.$/;"	i
SphinxDocString	doc/source/conf.py	/^from numpydoc.docscrape_sphinx import SphinxDocString$/;"	i
SphinxDocString	tests/plotting/tinypages/conf.py	/^from numpydoc.docscrape_sphinx import SphinxDocString$/;"	i
Spline	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import Spline as Spline$/;"	i
Spline	build/lib/pyvista/core/utilities/parametric_objects.py	/^def Spline(points: VectorLike[float] | MatrixLike[float], n_points: int | None = None) -> PolyData:$/;"	f
Spline	pyvista/core/utilities/__init__.py	/^from .parametric_objects import Spline as Spline$/;"	i
Spline	pyvista/core/utilities/parametric_objects.py	/^def Spline(points: VectorLike[float] | MatrixLike[float], n_points: int | None = None) -> PolyData:$/;"	f
SplitComponentTestCase	tests/core/test_dataset_filters.py	/^class SplitComponentTestCase(NamedTuple):$/;"	c
StackPlot	build/lib/pyvista/plotting/charts.py	/^class StackPlot(_MultiCompPlot, _vtk.vtkPlotStacked):$/;"	c
StackPlot	pyvista/plotting/charts.py	/^class StackPlot(_MultiCompPlot, _vtk.vtkPlotStacked):$/;"	c
Startpos	examples/03-widgets/checkbox_widget.py	/^Startpos = 12$/;"	v
StrEnum	doc/source/make_tables.py	/^    class StrEnum(str, Enum):$/;"	c
StrEnum	doc/source/make_tables.py	/^    from enum import StrEnum$/;"	i
StringIO	doc/source/make_external_gallery.py	/^from io import StringIO$/;"	i
StructuredGrid	build/lib/pyvista/core/__init__.py	/^from .pointset import StructuredGrid as StructuredGrid$/;"	i
StructuredGrid	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	build/lib/pyvista/core/grid.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	build/lib/pyvista/core/pointset.py	/^class StructuredGrid(PointGrid, StructuredGridFilters, _vtk.vtkStructuredGrid):$/;"	c
StructuredGrid	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	build/lib/pyvista/core/wrappers.py	/^from .pointset import StructuredGrid$/;"	i
StructuredGrid	pyvista/core/__init__.py	/^from .pointset import StructuredGrid as StructuredGrid$/;"	i
StructuredGrid	pyvista/core/filters/data_object.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	pyvista/core/grid.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	pyvista/core/pointset.py	/^class StructuredGrid(PointGrid, StructuredGridFilters, _vtk.vtkStructuredGrid):$/;"	c
StructuredGrid	pyvista/core/utilities/geometric_objects.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	pyvista/core/utilities/helpers.py	/^    from pyvista import StructuredGrid$/;"	i
StructuredGrid	pyvista/core/wrappers.py	/^from .pointset import StructuredGrid$/;"	i
StructuredGrid	tests/core/test_composite.py	/^from pyvista import StructuredGrid$/;"	i
StructuredGridCarousel	doc/source/make_tables.py	/^class StructuredGridCarousel(DatasetGalleryCarousel):$/;"	c
StructuredGridFilters	build/lib/pyvista/core/filters/__init__.py	/^from .structured_grid import StructuredGridFilters$/;"	i
StructuredGridFilters	build/lib/pyvista/core/filters/structured_grid.py	/^class StructuredGridFilters(DataSetFilters):$/;"	c
StructuredGridFilters	build/lib/pyvista/core/pointset.py	/^from .filters import StructuredGridFilters$/;"	i
StructuredGridFilters	pyvista/core/filters/__init__.py	/^from .structured_grid import StructuredGridFilters$/;"	i
StructuredGridFilters	pyvista/core/filters/structured_grid.py	/^class StructuredGridFilters(DataSetFilters):$/;"	c
StructuredGridFilters	pyvista/core/pointset.py	/^from .filters import StructuredGridFilters$/;"	i
SubClass	tests/core/test_dataobject.py	/^    class SubClass(pv.DataObject): ...$/;"	c	function:test_is_empty
Superquadric	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Superquadric as Superquadric$/;"	i
Superquadric	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Superquadric($/;"	f
Superquadric	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Superquadric as Superquadric$/;"	i
Superquadric	pyvista/core/utilities/geometric_objects.py	/^def Superquadric($/;"	f
SuperquadricSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import SuperquadricSource as SuperquadricSource$/;"	i
SuperquadricSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import SuperquadricSource$/;"	i
SuperquadricSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class SuperquadricSource(_vtk.vtkSuperquadricSource):$/;"	c
SuperquadricSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import SuperquadricSource as SuperquadricSource$/;"	i
SuperquadricSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import SuperquadricSource$/;"	i
SuperquadricSource	pyvista/core/utilities/geometric_sources.py	/^class SuperquadricSource(_vtk.vtkSuperquadricSource):$/;"	c
SurfaceMeshCarousel	doc/source/make_tables.py	/^class SurfaceMeshCarousel(DatasetGalleryCarousel):$/;"	c
T	build/lib/pyvista/core/datasetattributes.py	/^T = TypeVar('T')$/;"	v
T	build/lib/pyvista/core/utilities/misc.py	/^T = TypeVar('T', bound='AnnotatedIntEnum')$/;"	v
T	pyvista/core/datasetattributes.py	/^T = TypeVar('T')$/;"	v
T	pyvista/core/utilities/misc.py	/^T = TypeVar('T', bound='AnnotatedIntEnum')$/;"	v
TABLEAU_COLORS	tests/plotting/test_colors.py	/^from matplotlib.colors import TABLEAU_COLORS$/;"	i
TC001	build/lib/pyvista/plotting/themes.py	/^import pyvista  # noqa: TC001$/;"	i
TC001	pyvista/plotting/themes.py	/^import pyvista  # noqa: TC001$/;"	i
TEMPERATURE	build/lib/pyvista/core/utilities/reader.py	/^    TEMPERATURE = 120$/;"	v	class:Plot3DFunctionEnum
TEMPERATURE	build/lib/pyvista/core/utilities/reader.py	/^    TEMPERATURE = Plot3DFunctionEnum.TEMPERATURE$/;"	v	class:MultiBlockPlot3DReader
TEMPERATURE	pyvista/core/utilities/reader.py	/^    TEMPERATURE = 120$/;"	v	class:Plot3DFunctionEnum
TEMPERATURE	pyvista/core/utilities/reader.py	/^    TEMPERATURE = Plot3DFunctionEnum.TEMPERATURE$/;"	v	class:MultiBlockPlot3DReader
TEST_DIR	tests/typing/mypy_plugin/test_plugin.py	/^TEST_DIR = str(Path(__file__).parent)$/;"	v
TETRA	build/lib/pyvista/core/celltype.py	/^    TETRA = _CELL_TYPE_INFO['TETRA']$/;"	v	class:CellType
TETRA	build/lib/pyvista/core/celltype.py	/^    TETRA=_CellTypeTuple($/;"	v	class:_CellTypeTuple
TETRA	pyvista/core/celltype.py	/^    TETRA = _CELL_TYPE_INFO['TETRA']$/;"	v	class:CellType
TETRA	pyvista/core/celltype.py	/^    TETRA=_CellTypeTuple($/;"	v	class:_CellTypeTuple
THIS_PATH	build/lib/pyvista/demos/logo.py	/^THIS_PATH = str(Path(os.path.realpath(__file__)).parent)$/;"	v
THIS_PATH	examples_trame/tests/test_trame.py	/^THIS_PATH = Path(__file__).parent.absolute()$/;"	v
THIS_PATH	pyvista/demos/logo.py	/^THIS_PATH = str(Path(os.path.realpath(__file__)).parent)$/;"	v
THIS_PATH	tests/plotting/test_plotting.py	/^THIS_PATH = pathlib.Path(__file__).parent.absolute()$/;"	v
TIFFReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import TIFFReader as TIFFReader$/;"	i
TIFFReader	build/lib/pyvista/core/utilities/reader.py	/^class TIFFReader(BaseReader):$/;"	c
TIFFReader	pyvista/core/utilities/__init__.py	/^from .reader import TIFFReader as TIFFReader$/;"	i
TIFFReader	pyvista/core/utilities/reader.py	/^class TIFFReader(BaseReader):$/;"	c
TRIANGLE	build/lib/pyvista/core/celltype.py	/^    TRIANGLE = _CELL_TYPE_INFO['TRIANGLE']$/;"	v	class:CellType
TRIANGLE	build/lib/pyvista/core/celltype.py	/^    TRIANGLE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
TRIANGLE	pyvista/core/celltype.py	/^    TRIANGLE = _CELL_TYPE_INFO['TRIANGLE']$/;"	v	class:CellType
TRIANGLE	pyvista/core/celltype.py	/^    TRIANGLE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
TRIANGLE_STRIP	build/lib/pyvista/core/celltype.py	/^    TRIANGLE_STRIP = _CELL_TYPE_INFO['TRIANGLE_STRIP']$/;"	v	class:CellType
TRIANGLE_STRIP	build/lib/pyvista/core/celltype.py	/^    TRIANGLE_STRIP=_CellTypeTuple($/;"	v	class:_CellTypeTuple
TRIANGLE_STRIP	pyvista/core/celltype.py	/^    TRIANGLE_STRIP = _CELL_TYPE_INFO['TRIANGLE_STRIP']$/;"	v	class:CellType
TRIANGLE_STRIP	pyvista/core/celltype.py	/^    TRIANGLE_STRIP=_CellTypeTuple($/;"	v	class:_CellTypeTuple
TRIQUADRATIC_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    TRIQUADRATIC_HEXAHEDRON = _CELL_TYPE_INFO['TRIQUADRATIC_HEXAHEDRON']$/;"	v	class:CellType
TRIQUADRATIC_HEXAHEDRON	build/lib/pyvista/core/celltype.py	/^    TRIQUADRATIC_HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
TRIQUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    TRIQUADRATIC_HEXAHEDRON = _CELL_TYPE_INFO['TRIQUADRATIC_HEXAHEDRON']$/;"	v	class:CellType
TRIQUADRATIC_HEXAHEDRON	pyvista/core/celltype.py	/^    TRIQUADRATIC_HEXAHEDRON=_CellTypeTuple($/;"	v	class:_CellTypeTuple
TYPE_CHECKING	build/lib/pyvista/__init__.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/_typing_core/_aliases.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/_validation/_cast_array.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/_validation/check.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/_validation/validate.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/_vtk_core.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/cell.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/composite.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/dataobject.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/dataset.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/datasetattributes.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/filters/__init__.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/filters/composite.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/filters/data_object.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/filters/data_set.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/filters/image_data.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/filters/poly_data.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/grid.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/partitioned.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/pointset.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/pyvista_ndarray.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/arrays.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/cell_quality.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/cells.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/fileio.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/geometric_objects.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/geometric_sources.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/helpers.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/image_sources.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/misc.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/parametric_objects.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/points.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/reader.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/transform.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/core/utilities/transformations.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/ext/coverage.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/ext/plot_directive.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/_typing.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/actor.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/actor_properties.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/axes_assembly.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/charts.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/colors.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/composite_mapper.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/cube_axes_actor.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/helpers.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/lights.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/lookup_table.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/plotter.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/prop3d.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/prop_collection.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/renderer.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/text.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/texture.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/themes.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/utilities/algorithms.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/volume.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/plotting/widgets.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/trame/ui/__init__.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/trame/ui/base_viewer.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/trame/ui/vuetify2.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/trame/ui/vuetify3.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	build/lib/pyvista/typing/mypy_plugin.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	doc/source/make_tables.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/__init__.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/_typing_core/_aliases.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/_validation/_cast_array.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/_validation/check.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/_validation/validate.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/_vtk_core.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/cell.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/composite.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/dataobject.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/dataset.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/datasetattributes.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/filters/__init__.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/filters/composite.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/filters/data_object.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/filters/data_set.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/filters/image_data.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/filters/poly_data.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/grid.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/partitioned.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/pointset.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/pyvista_ndarray.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/arrays.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/cell_quality.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/cells.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/fileio.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/geometric_objects.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/geometric_sources.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/helpers.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/image_sources.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/misc.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/parametric_objects.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/points.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/reader.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/transform.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/core/utilities/transformations.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/examples/_dataset_loader.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/ext/coverage.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/ext/plot_directive.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/_typing.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/actor.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/actor_properties.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/axes_assembly.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/charts.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/colors.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/composite_mapper.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/cube_axes_actor.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/helpers.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/lights.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/lookup_table.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/plotter.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/prop3d.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/prop_collection.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/renderer.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/text.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/texture.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/themes.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/utilities/algorithms.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/utilities/sphinx_gallery.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/volume.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/plotting/widgets.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/trame/ui/__init__.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/trame/ui/base_viewer.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/trame/ui/vuetify2.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/trame/ui/vuetify3.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	pyvista/typing/mypy_plugin.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_dataset.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_dataset_filters.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_grid.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_helpers.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_objects.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_polydata_filters.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_reader.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/core/test_utilities.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/examples/test_dataset_loader.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/jupyter/test_static.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_conftest.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_lookup_table.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_picking.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_plotter.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_plotting.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_regression.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_render_window_interactor.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_utilities.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/plotting/test_widgets.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/test_conftest.py	/^from typing import TYPE_CHECKING$/;"	i
TYPE_CHECKING	tests/typing/test_return_type.py	/^from typing import TYPE_CHECKING$/;"	i
Table	build/lib/pyvista/core/__init__.py	/^from .objects import Table as Table$/;"	i
Table	build/lib/pyvista/core/objects.py	/^class Table(DataObject, _vtk.vtkTable):$/;"	c
Table	build/lib/pyvista/core/utilities/arrays.py	/^    from pyvista import Table$/;"	i
Table	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import Table$/;"	i
Table	build/lib/pyvista/core/wrappers.py	/^from .objects import Table$/;"	i
Table	pyvista/core/__init__.py	/^from .objects import Table as Table$/;"	i
Table	pyvista/core/objects.py	/^class Table(DataObject, _vtk.vtkTable):$/;"	c
Table	pyvista/core/utilities/arrays.py	/^    from pyvista import Table$/;"	i
Table	pyvista/core/utilities/helpers.py	/^    from pyvista import Table$/;"	i
Table	pyvista/core/wrappers.py	/^from .objects import Table$/;"	i
TecplotReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import TecplotReader as TecplotReader$/;"	i
TecplotReader	build/lib/pyvista/core/utilities/reader.py	/^class TecplotReader(BaseReader):$/;"	c
TecplotReader	pyvista/core/utilities/__init__.py	/^from .reader import TecplotReader as TecplotReader$/;"	i
TecplotReader	pyvista/core/utilities/reader.py	/^class TecplotReader(BaseReader):$/;"	c
Test_event_parser	tests/plotting/test_widgets.py	/^class Test_event_parser:$/;"	c
Tetrahedron	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Tetrahedron as Tetrahedron$/;"	i
Tetrahedron	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Tetrahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
Tetrahedron	build/lib/pyvista/examples/cells.py	/^def Tetrahedron() -> UnstructuredGrid:$/;"	f
Tetrahedron	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Tetrahedron as Tetrahedron$/;"	i
Tetrahedron	pyvista/core/utilities/geometric_objects.py	/^def Tetrahedron(radius: float = 1.0, center: VectorLike[float] = (0.0, 0.0, 0.0)) -> PolyData:$/;"	f
Tetrahedron	pyvista/examples/cells.py	/^def Tetrahedron() -> UnstructuredGrid:$/;"	f
Text	build/lib/pyvista/plotting/__init__.py	/^from .text import Text as Text$/;"	i
Text	build/lib/pyvista/plotting/plotter.py	/^from .text import Text$/;"	i
Text	build/lib/pyvista/plotting/text.py	/^class Text(_NameMixin, _vtk.vtkTextActor):$/;"	c
Text	pyvista/plotting/__init__.py	/^from .text import Text as Text$/;"	i
Text	pyvista/plotting/plotter.py	/^from .text import Text$/;"	i
Text	pyvista/plotting/text.py	/^class Text(_NameMixin, _vtk.vtkTextActor):$/;"	c
Text3D	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Text3D as Text3D$/;"	i
Text3D	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Text3D($/;"	f
Text3D	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Text3D as Text3D$/;"	i
Text3D	pyvista/core/utilities/geometric_objects.py	/^def Text3D($/;"	f
Text3DSource	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import Text3DSource as Text3DSource$/;"	i
Text3DSource	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import Text3DSource$/;"	i
Text3DSource	build/lib/pyvista/core/utilities/geometric_sources.py	/^class Text3DSource(vtkVectorText):$/;"	c
Text3DSource	pyvista/core/utilities/__init__.py	/^from .geometric_sources import Text3DSource as Text3DSource$/;"	i
Text3DSource	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import Text3DSource$/;"	i
Text3DSource	pyvista/core/utilities/geometric_sources.py	/^class Text3DSource(vtkVectorText):$/;"	c
TextIO	build/lib/pyvista/core/utilities/fileio.py	/^from typing import TextIO$/;"	i
TextIO	pyvista/core/utilities/fileio.py	/^from typing import TextIO$/;"	i
TextProperty	build/lib/pyvista/plotting/__init__.py	/^from .text import TextProperty as TextProperty$/;"	i
TextProperty	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.text import TextProperty$/;"	i
TextProperty	build/lib/pyvista/plotting/plotter.py	/^from .text import TextProperty$/;"	i
TextProperty	build/lib/pyvista/plotting/text.py	/^class TextProperty(_vtk.vtkTextProperty):$/;"	c
TextProperty	pyvista/plotting/__init__.py	/^from .text import TextProperty as TextProperty$/;"	i
TextProperty	pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.text import TextProperty$/;"	i
TextProperty	pyvista/plotting/plotter.py	/^from .text import TextProperty$/;"	i
TextProperty	pyvista/plotting/text.py	/^class TextProperty(_vtk.vtkTextProperty):$/;"	c
Texture	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.plotting.texture import Texture$/;"	i
Texture	build/lib/pyvista/examples/planets.py	/^        from pyvista.plotting.texture import Texture$/;"	i
Texture	build/lib/pyvista/plotting/__init__.py	/^from .texture import Texture as Texture$/;"	i
Texture	build/lib/pyvista/plotting/texture.py	/^class Texture(DataObject, _vtk.vtkTexture):$/;"	c
Texture	pyvista/core/utilities/fileio.py	/^    from pyvista.plotting.texture import Texture$/;"	i
Texture	pyvista/examples/planets.py	/^        from pyvista.plotting.texture import Texture$/;"	i
Texture	pyvista/plotting/__init__.py	/^from .texture import Texture as Texture$/;"	i
Texture	pyvista/plotting/texture.py	/^class Texture(DataObject, _vtk.vtkTexture):$/;"	c
TextureCarousel	doc/source/make_tables.py	/^class TextureCarousel(DatasetGalleryCarousel):$/;"	c
Theme	build/lib/pyvista/plotting/plotter.py	/^from .themes import Theme$/;"	i
Theme	build/lib/pyvista/plotting/text.py	/^from .themes import Theme$/;"	i
Theme	build/lib/pyvista/plotting/themes.py	/^class Theme(_ThemeConfig):$/;"	c
Theme	pyvista/plotting/plotter.py	/^from .themes import Theme$/;"	i
Theme	pyvista/plotting/text.py	/^from .themes import Theme$/;"	i
Theme	pyvista/plotting/themes.py	/^class Theme(_ThemeConfig):$/;"	c
Theme	tests/plotting/test_theme.py	/^from pyvista.plotting.themes import Theme$/;"	i
Thread	build/lib/pyvista/plotting/plotter.py	/^from threading import Thread$/;"	i
Thread	pyvista/plotting/plotter.py	/^from threading import Thread$/;"	i
TimeReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import TimeReader as TimeReader$/;"	i
TimeReader	build/lib/pyvista/core/utilities/reader.py	/^class TimeReader(ABC):$/;"	c
TimeReader	pyvista/core/utilities/__init__.py	/^from .reader import TimeReader as TimeReader$/;"	i
TimeReader	pyvista/core/utilities/reader.py	/^class TimeReader(ABC):$/;"	c
TimeoutExpired	build/lib/pyvista/plotting/tools.py	/^from subprocess import TimeoutExpired$/;"	i
TimeoutExpired	pyvista/plotting/tools.py	/^from subprocess import TimeoutExpired$/;"	i
Timer	build/lib/pyvista/plotting/__init__.py	/^from .render_window_interactor import Timer as Timer$/;"	i
Timer	build/lib/pyvista/plotting/render_window_interactor.py	/^class Timer:$/;"	c
Timer	pyvista/plotting/__init__.py	/^from .render_window_interactor import Timer as Timer$/;"	i
Timer	pyvista/plotting/render_window_interactor.py	/^class Timer:$/;"	c
TipType	build/lib/pyvista/plotting/axes_actor.py	/^    class TipType(Enum):$/;"	c	class:AxesActor
TipType	pyvista/plotting/axes_actor.py	/^    class TipType(Enum):$/;"	c	class:AxesActor
Tracker	tests/plotting/test_picking.py	/^    class Tracker:$/;"	c	function:test_element_picking
Tracker	tests/plotting/test_picking.py	/^    class Tracker:$/;"	c	function:test_point_picking_window
TrameJupyterServerDownError	build/lib/pyvista/trame/jupyter.py	/^class TrameJupyterServerDownError(RuntimeError):$/;"	c
TrameJupyterServerDownError	pyvista/trame/jupyter.py	/^class TrameJupyterServerDownError(RuntimeError):$/;"	c
TrameServerDownError	build/lib/pyvista/trame/jupyter.py	/^class TrameServerDownError(RuntimeError):  # numpydoc ignore=PR01$/;"	c
TrameServerDownError	pyvista/trame/jupyter.py	/^class TrameServerDownError(RuntimeError):  # numpydoc ignore=PR01$/;"	c
Transform	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.utilities import Transform$/;"	i
Transform	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.transform import Transform$/;"	i
Transform	build/lib/pyvista/core/utilities/__init__.py	/^from .transform import Transform as Transform$/;"	i
Transform	build/lib/pyvista/core/utilities/transform.py	/^class Transform(_vtk.vtkTransform):$/;"	c
Transform	build/lib/pyvista/plotting/prop3d.py	/^from pyvista.core.utilities.transform import Transform$/;"	i
Transform	pyvista/core/filters/data_object.py	/^from pyvista.core.utilities import Transform$/;"	i
Transform	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.transform import Transform$/;"	i
Transform	pyvista/core/utilities/__init__.py	/^from .transform import Transform as Transform$/;"	i
Transform	pyvista/core/utilities/transform.py	/^class Transform(_vtk.vtkTransform):$/;"	c
Transform	pyvista/plotting/prop3d.py	/^from pyvista.core.utilities.transform import Transform$/;"	i
Transform	tests/core/test_utilities.py	/^from pyvista.core.utilities.transform import Transform$/;"	i
TransformLike	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import TransformLike as TransformLike$/;"	i
TransformLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^TransformLike = Union[RotationLike, _vtk.vtkMatrix4x4, _vtk.vtkTransform]$/;"	v
TransformLike	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista import TransformLike$/;"	i
TransformLike	build/lib/pyvista/core/grid.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	build/lib/pyvista/core/utilities/transformations.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	build/lib/pyvista/plotting/lights.py	/^    from ..core._typing_core import TransformLike$/;"	i
TransformLike	build/lib/pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	pyvista/core/_typing_core/__init__.py	/^from ._aliases import TransformLike as TransformLike$/;"	i
TransformLike	pyvista/core/_typing_core/_aliases.py	/^TransformLike = Union[RotationLike, _vtk.vtkMatrix4x4, _vtk.vtkTransform]$/;"	v
TransformLike	pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	pyvista/core/filters/data_object.py	/^    from pyvista import TransformLike$/;"	i
TransformLike	pyvista/core/grid.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	pyvista/core/utilities/transformations.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TransformLike	pyvista/plotting/lights.py	/^    from ..core._typing_core import TransformLike$/;"	i
TransformLike	pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import TransformLike$/;"	i
TriQuadraticHexahedron	build/lib/pyvista/examples/cells.py	/^def TriQuadraticHexahedron() -> UnstructuredGrid:$/;"	f
TriQuadraticHexahedron	pyvista/examples/cells.py	/^def TriQuadraticHexahedron() -> UnstructuredGrid:$/;"	f
TriQuadraticPyramid	build/lib/pyvista/examples/cells.py	/^def TriQuadraticPyramid() -> UnstructuredGrid:$/;"	f
TriQuadraticPyramid	pyvista/examples/cells.py	/^def TriQuadraticPyramid() -> UnstructuredGrid:$/;"	f
Triangle	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Triangle as Triangle$/;"	i
Triangle	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Triangle(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
Triangle	build/lib/pyvista/examples/cells.py	/^def Triangle() -> UnstructuredGrid:$/;"	f
Triangle	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Triangle as Triangle$/;"	i
Triangle	pyvista/core/utilities/geometric_objects.py	/^def Triangle(points: MatrixLike[float] | None = None) -> PolyData:$/;"	f
Triangle	pyvista/examples/cells.py	/^def Triangle() -> UnstructuredGrid:$/;"	f
TriangleStrip	build/lib/pyvista/examples/cells.py	/^def TriangleStrip() -> UnstructuredGrid:$/;"	f
TriangleStrip	pyvista/examples/cells.py	/^def TriangleStrip() -> UnstructuredGrid:$/;"	f
Trimesh	build/lib/pyvista/core/utilities/helpers.py	/^    from trimesh import Trimesh$/;"	i
Trimesh	pyvista/core/utilities/helpers.py	/^    from trimesh import Trimesh$/;"	i
Tube	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Tube as Tube$/;"	i
Tube	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Tube($/;"	f
Tube	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Tube as Tube$/;"	i
Tube	pyvista/core/utilities/geometric_objects.py	/^def Tube($/;"	f
TypeVar	build/lib/pyvista/core/_typing_core/_array_like.py	/^from typing import TypeVar$/;"	i
TypeVar	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from typing import TypeVar$/;"	i
TypeVar	build/lib/pyvista/core/datasetattributes.py	/^from typing import TypeVar$/;"	i
TypeVar	build/lib/pyvista/core/utilities/arrays.py	/^from typing import TypeVar$/;"	i
TypeVar	build/lib/pyvista/core/utilities/fileio.py	/^from typing import TypeVar$/;"	i
TypeVar	build/lib/pyvista/core/utilities/misc.py	/^from typing import TypeVar$/;"	i
TypeVar	build/lib/pyvista/core/wrappers.py	/^from typing import TypeVar$/;"	i
TypeVar	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/core/_typing_core/_array_like.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/core/_typing_core/_dataset_types.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/core/datasetattributes.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/core/utilities/arrays.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/core/utilities/fileio.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/core/utilities/misc.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/core/wrappers.py	/^from typing import TypeVar$/;"	i
TypeVar	pyvista/examples/_dataset_loader.py	/^from typing import TypeVar$/;"	i
TypeVar	tests/plotting/test_plotting.py	/^from typing import TypeVar$/;"	i
TypedDict	build/lib/pyvista/core/composite.py	/^from typing_extensions import TypedDict$/;"	i
TypedDict	build/lib/pyvista/plotting/axes_assembly.py	/^from typing import TypedDict$/;"	i
TypedDict	pyvista/core/composite.py	/^from typing_extensions import TypedDict$/;"	i
TypedDict	pyvista/plotting/axes_assembly.py	/^from typing import TypedDict$/;"	i
UFO	examples/04-lights/actors.py	/^UFO = pv.Light(position=(0, 0, 10), focal_point=(0, 0, 0), color='white')$/;"	v
UI_TITLE	build/lib/pyvista/trame/jupyter.py	/^from pyvista.trame.ui import UI_TITLE$/;"	i
UI_TITLE	build/lib/pyvista/trame/ui/__init__.py	/^UI_TITLE = 'PyVista'$/;"	v
UI_TITLE	pyvista/trame/jupyter.py	/^from pyvista.trame.ui import UI_TITLE$/;"	i
UI_TITLE	pyvista/trame/ui/__init__.py	/^UI_TITLE = 'PyVista'$/;"	v
UPPER_LIGHTNESS_THRESHOLD	doc/source/make_tables.py	/^UPPER_LIGHTNESS_THRESHOLD = 0.9$/;"	v
USER_DATA_PATH	build/lib/pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import USER_DATA_PATH$/;"	i
USER_DATA_PATH	build/lib/pyvista/examples/downloads.py	/^        USER_DATA_PATH = default_user_data_path$/;"	v
USER_DATA_PATH	build/lib/pyvista/examples/downloads.py	/^        USER_DATA_PATH = os.environ['PYVISTA_USERDATA_PATH']$/;"	v
USER_DATA_PATH	build/lib/pyvista/examples/downloads.py	/^    USER_DATA_PATH = default_user_data_path$/;"	v
USER_DATA_PATH	build/lib/pyvista/examples/gltf.py	/^from .downloads import USER_DATA_PATH$/;"	i
USER_DATA_PATH	pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import USER_DATA_PATH$/;"	i
USER_DATA_PATH	pyvista/examples/downloads.py	/^        USER_DATA_PATH = default_user_data_path$/;"	v
USER_DATA_PATH	pyvista/examples/downloads.py	/^        USER_DATA_PATH = os.environ['PYVISTA_USERDATA_PATH']$/;"	v
USER_DATA_PATH	pyvista/examples/downloads.py	/^    USER_DATA_PATH = default_user_data_path$/;"	v
USER_DATA_PATH	pyvista/examples/gltf.py	/^from .downloads import USER_DATA_PATH$/;"	i
USER_DICT_KEY	build/lib/pyvista/core/composite.py	/^from .dataobject import USER_DICT_KEY$/;"	i
USER_DICT_KEY	build/lib/pyvista/core/dataobject.py	/^USER_DICT_KEY = '_PYVISTA_USER_DICT'$/;"	v
USER_DICT_KEY	pyvista/core/composite.py	/^from .dataobject import USER_DICT_KEY$/;"	i
USER_DICT_KEY	pyvista/core/dataobject.py	/^USER_DICT_KEY = '_PYVISTA_USER_DICT'$/;"	v
USER_DICT_KEY	tests/core/test_composite.py	/^from pyvista.core.dataobject import USER_DICT_KEY$/;"	i
USER_DICT_KEY	tests/core/test_dataobject.py	/^from pyvista.core.dataobject import USER_DICT_KEY$/;"	i
USER_MATRIX	tests/plotting/test_plotting.py	/^USER_MATRIX = pv.array_from_vtkmatrix(actor.GetMatrix())$/;"	v
Union	build/lib/pyvista/core/_typing_core/_aliases.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/core/_typing_core/_array_like.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/core/_validation/_cast_array.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/core/_validation/check.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/core/composite.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/core/utilities/arrays.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/core/utilities/fileio.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/plotting/_typing.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/plotting/lookup_table.py	/^from typing import Union$/;"	i
Union	build/lib/pyvista/plotting/plotter.py	/^from typing import Union$/;"	i
Union	pyvista/core/_typing_core/_aliases.py	/^from typing import Union$/;"	i
Union	pyvista/core/_typing_core/_array_like.py	/^from typing import Union$/;"	i
Union	pyvista/core/_typing_core/_dataset_types.py	/^from typing import Union$/;"	i
Union	pyvista/core/_validation/_cast_array.py	/^from typing import Union$/;"	i
Union	pyvista/core/_validation/check.py	/^from typing import Union$/;"	i
Union	pyvista/core/composite.py	/^from typing import Union$/;"	i
Union	pyvista/core/utilities/arrays.py	/^from typing import Union$/;"	i
Union	pyvista/core/utilities/fileio.py	/^from typing import Union$/;"	i
Union	pyvista/examples/_dataset_loader.py	/^from typing import Union$/;"	i
Union	pyvista/plotting/_typing.py	/^from typing import Union$/;"	i
Union	pyvista/plotting/lookup_table.py	/^from typing import Union$/;"	i
Union	pyvista/plotting/plotter.py	/^from typing import Union$/;"	i
Union	tests/conftest.py	/^from typing import Union$/;"	i
Union	tests/core/test_validation.py	/^from typing import Union$/;"	i
Unpack	build/lib/pyvista/core/composite.py	/^from typing_extensions import Unpack$/;"	i
Unpack	build/lib/pyvista/plotting/axes_assembly.py	/^        from typing import Unpack$/;"	i
Unpack	build/lib/pyvista/plotting/axes_assembly.py	/^        from typing_extensions import Unpack$/;"	i
Unpack	pyvista/core/composite.py	/^from typing_extensions import Unpack$/;"	i
Unpack	pyvista/plotting/axes_assembly.py	/^        from typing import Unpack$/;"	i
Unpack	pyvista/plotting/axes_assembly.py	/^        from typing_extensions import Unpack$/;"	i
UnstructuredGrid	build/lib/pyvista/core/__init__.py	/^from .pointset import UnstructuredGrid as UnstructuredGrid$/;"	i
UnstructuredGrid	build/lib/pyvista/core/cell.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	build/lib/pyvista/core/grid.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	build/lib/pyvista/core/pointset.py	/^class UnstructuredGrid(PointGrid, UnstructuredGridFilters, _vtk.vtkUnstructuredGrid):$/;"	c
UnstructuredGrid	build/lib/pyvista/core/utilities/fileio.py	/^    from pyvista.core.pointset import UnstructuredGrid$/;"	i
UnstructuredGrid	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	build/lib/pyvista/core/wrappers.py	/^from .pointset import UnstructuredGrid$/;"	i
UnstructuredGrid	build/lib/pyvista/examples/cells.py	/^from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/core/__init__.py	/^from .pointset import UnstructuredGrid as UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/core/cell.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/core/grid.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/core/pointset.py	/^class UnstructuredGrid(PointGrid, UnstructuredGridFilters, _vtk.vtkUnstructuredGrid):$/;"	c
UnstructuredGrid	pyvista/core/utilities/fileio.py	/^    from pyvista.core.pointset import UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/core/utilities/geometric_objects.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/core/utilities/helpers.py	/^    from pyvista import UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/core/wrappers.py	/^from .pointset import UnstructuredGrid$/;"	i
UnstructuredGrid	pyvista/examples/cells.py	/^from pyvista import UnstructuredGrid$/;"	i
UnstructuredGridCarousel	doc/source/make_tables.py	/^class UnstructuredGridCarousel(DatasetGalleryCarousel):$/;"	c
UnstructuredGridFilters	build/lib/pyvista/core/__init__.py	/^from .filters import UnstructuredGridFilters as UnstructuredGridFilters$/;"	i
UnstructuredGridFilters	build/lib/pyvista/core/filters/__init__.py	/^from .unstructured_grid import UnstructuredGridFilters$/;"	i
UnstructuredGridFilters	build/lib/pyvista/core/filters/unstructured_grid.py	/^class UnstructuredGridFilters(DataSetFilters):$/;"	c
UnstructuredGridFilters	build/lib/pyvista/core/pointset.py	/^from .filters import UnstructuredGridFilters$/;"	i
UnstructuredGridFilters	pyvista/core/__init__.py	/^from .filters import UnstructuredGridFilters as UnstructuredGridFilters$/;"	i
UnstructuredGridFilters	pyvista/core/filters/__init__.py	/^from .unstructured_grid import UnstructuredGridFilters$/;"	i
UnstructuredGridFilters	pyvista/core/filters/unstructured_grid.py	/^class UnstructuredGridFilters(DataSetFilters):$/;"	c
UnstructuredGridFilters	pyvista/core/pointset.py	/^from .filters import UnstructuredGridFilters$/;"	i
UnstructuredGridVolumeRayCastMapper	build/lib/pyvista/plotting/__init__.py	/^from .mapper import UnstructuredGridVolumeRayCastMapper as UnstructuredGridVolumeRayCastMapper$/;"	i
UnstructuredGridVolumeRayCastMapper	build/lib/pyvista/plotting/mapper.py	/^):$/;"	c
UnstructuredGridVolumeRayCastMapper	build/lib/pyvista/plotting/plotter.py	/^from .mapper import UnstructuredGridVolumeRayCastMapper$/;"	i
UnstructuredGridVolumeRayCastMapper	pyvista/plotting/__init__.py	/^from .mapper import UnstructuredGridVolumeRayCastMapper as UnstructuredGridVolumeRayCastMapper$/;"	i
UnstructuredGridVolumeRayCastMapper	pyvista/plotting/mapper.py	/^):$/;"	c
UnstructuredGridVolumeRayCastMapper	pyvista/plotting/plotter.py	/^from .mapper import UnstructuredGridVolumeRayCastMapper$/;"	i
Unzip	build/lib/pyvista/examples/downloads.py	/^from pooch import Unzip$/;"	i
Unzip	pyvista/examples/downloads.py	/^from pooch import Unzip$/;"	i
Update	build/lib/pyvista/core/utilities/reader.py	/^    def Update(self) -> None:$/;"	m	class:_GIFReader
Update	build/lib/pyvista/core/utilities/reader.py	/^    def Update(self) -> None:$/;"	m	class:_PVDReader
Update	build/lib/pyvista/core/utilities/reader.py	/^    def Update(self):$/;"	m	class:BaseVTKReader
Update	pyvista/core/utilities/reader.py	/^    def Update(self) -> None:$/;"	m	class:_GIFReader
Update	pyvista/core/utilities/reader.py	/^    def Update(self) -> None:$/;"	m	class:_PVDReader
Update	pyvista/core/utilities/reader.py	/^    def Update(self):$/;"	m	class:BaseVTKReader
UpdateInformation	build/lib/pyvista/core/utilities/reader.py	/^    def UpdateInformation(self) -> None:$/;"	m	class:_GIFReader
UpdateInformation	build/lib/pyvista/core/utilities/reader.py	/^    def UpdateInformation(self):$/;"	m	class:BaseVTKReader
UpdateInformation	build/lib/pyvista/core/utilities/reader.py	/^    def UpdateInformation(self):$/;"	m	class:_PVDReader
UpdateInformation	pyvista/core/utilities/reader.py	/^    def UpdateInformation(self) -> None:$/;"	m	class:_GIFReader
UpdateInformation	pyvista/core/utilities/reader.py	/^    def UpdateInformation(self):$/;"	m	class:BaseVTKReader
UpdateInformation	pyvista/core/utilities/reader.py	/^    def UpdateInformation(self):$/;"	m	class:_PVDReader
UpdateObservers	build/lib/pyvista/core/utilities/reader.py	/^    def UpdateObservers(self, event_type) -> None:$/;"	m	class:BaseVTKReader
UpdateObservers	pyvista/core/utilities/reader.py	/^    def UpdateObservers(self, event_type) -> None:$/;"	m	class:BaseVTKReader
UserDict	build/lib/pyvista/core/dataobject.py	/^from collections import UserDict$/;"	i
UserDict	build/lib/pyvista/core/utilities/arrays.py	/^from collections import UserDict$/;"	i
UserDict	pyvista/core/dataobject.py	/^from collections import UserDict$/;"	i
UserDict	pyvista/core/utilities/arrays.py	/^from collections import UserDict$/;"	i
UserDict	tests/core/test_dataobject.py	/^from collections import UserDict$/;"	i
VAppLayout	build/lib/pyvista/trame/ui/vuetify2.py	/^from trame.ui.vuetify2 import VAppLayout$/;"	i
VAppLayout	build/lib/pyvista/trame/ui/vuetify3.py	/^from trame.ui.vuetify3 import VAppLayout$/;"	i
VAppLayout	pyvista/trame/ui/vuetify2.py	/^from trame.ui.vuetify2 import VAppLayout$/;"	i
VAppLayout	pyvista/trame/ui/vuetify3.py	/^from trame.ui.vuetify3 import VAppLayout$/;"	i
VECTOR	tests/core/test_utilities.py	/^VECTOR = (1, 2, 3)$/;"	v
VELOCITY	build/lib/pyvista/core/utilities/reader.py	/^    VELOCITY = 200$/;"	v	class:Plot3DFunctionEnum
VELOCITY	build/lib/pyvista/core/utilities/reader.py	/^    VELOCITY = Plot3DFunctionEnum.VELOCITY$/;"	v	class:MultiBlockPlot3DReader
VELOCITY	pyvista/core/utilities/reader.py	/^    VELOCITY = 200$/;"	v	class:Plot3DFunctionEnum
VELOCITY	pyvista/core/utilities/reader.py	/^    VELOCITY = Plot3DFunctionEnum.VELOCITY$/;"	v	class:MultiBlockPlot3DReader
VELOCITY_MAGNITUDE	build/lib/pyvista/core/utilities/reader.py	/^    VELOCITY_MAGNITUDE = 153$/;"	v	class:Plot3DFunctionEnum
VELOCITY_MAGNITUDE	build/lib/pyvista/core/utilities/reader.py	/^    VELOCITY_MAGNITUDE = Plot3DFunctionEnum.VELOCITY_MAGNITUDE$/;"	v	class:MultiBlockPlot3DReader
VELOCITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VELOCITY_MAGNITUDE = 153$/;"	v	class:Plot3DFunctionEnum
VELOCITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VELOCITY_MAGNITUDE = Plot3DFunctionEnum.VELOCITY_MAGNITUDE$/;"	v	class:MultiBlockPlot3DReader
VERTEX	build/lib/pyvista/core/celltype.py	/^    VERTEX = _CELL_TYPE_INFO['VERTEX']$/;"	v	class:CellType
VERTEX	build/lib/pyvista/core/celltype.py	/^    VERTEX=_CellTypeTuple($/;"	v	class:_CellTypeTuple
VERTEX	pyvista/core/celltype.py	/^    VERTEX = _CELL_TYPE_INFO['VERTEX']$/;"	v	class:CellType
VERTEX	pyvista/core/celltype.py	/^    VERTEX=_CellTypeTuple($/;"	v	class:_CellTypeTuple
VIOLET	doc/source/make_tables.py	/^    VIOLET = auto()$/;"	v	class:ColorClassification
VIOLET_UPPER_BOUND	doc/source/make_tables.py	/^VIOLET_UPPER_BOUND = 290 \/ _360$/;"	v
VIRIDIS_RGB	tests/core/test_dataset_filters.py	/^VIRIDIS_RGB = [pv.Color(c).int_rgb for c in pv.get_cmap_safe('viridis').colors]$/;"	v
VOLUME	build/lib/pyvista/plotting/opts.py	/^    VOLUME = (8, 'Volume')$/;"	v	class:PickerType
VOLUME	pyvista/plotting/opts.py	/^    VOLUME = (8, 'Volume')$/;"	v	class:PickerType
VOLUME	tests/core/test_dataobject_filters.py	/^VOLUME = 'volume'$/;"	v
VORTICITY	build/lib/pyvista/core/utilities/reader.py	/^    VORTICITY = 201$/;"	v	class:Plot3DFunctionEnum
VORTICITY	build/lib/pyvista/core/utilities/reader.py	/^    VORTICITY = Plot3DFunctionEnum.VORTICITY$/;"	v	class:MultiBlockPlot3DReader
VORTICITY	pyvista/core/utilities/reader.py	/^    VORTICITY = 201$/;"	v	class:Plot3DFunctionEnum
VORTICITY	pyvista/core/utilities/reader.py	/^    VORTICITY = Plot3DFunctionEnum.VORTICITY$/;"	v	class:MultiBlockPlot3DReader
VORTICITY_MAGNITUDE	build/lib/pyvista/core/utilities/reader.py	/^    VORTICITY_MAGNITUDE = 211$/;"	v	class:Plot3DFunctionEnum
VORTICITY_MAGNITUDE	build/lib/pyvista/core/utilities/reader.py	/^    VORTICITY_MAGNITUDE = Plot3DFunctionEnum.VORTICITY_MAGNITUDE$/;"	v	class:MultiBlockPlot3DReader
VORTICITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VORTICITY_MAGNITUDE = 211$/;"	v	class:Plot3DFunctionEnum
VORTICITY_MAGNITUDE	pyvista/core/utilities/reader.py	/^    VORTICITY_MAGNITUDE = Plot3DFunctionEnum.VORTICITY_MAGNITUDE$/;"	v	class:MultiBlockPlot3DReader
VOXEL	build/lib/pyvista/core/celltype.py	/^    VOXEL = _CELL_TYPE_INFO['VOXEL']$/;"	v	class:CellType
VOXEL	build/lib/pyvista/core/celltype.py	/^    VOXEL=_CellTypeTuple($/;"	v	class:_CellTypeTuple
VOXEL	pyvista/core/celltype.py	/^    VOXEL = _CELL_TYPE_INFO['VOXEL']$/;"	v	class:CellType
VOXEL	pyvista/core/celltype.py	/^    VOXEL=_CellTypeTuple($/;"	v	class:_CellTypeTuple
VTKArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.numpy_interface.dataset_adapter import VTKArray as VTKArray$/;"	i
VTKArray	pyvista/core/_vtk_core.py	/^from vtkmodules.numpy_interface.dataset_adapter import VTKArray as VTKArray$/;"	i
VTKDataSetReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import VTKDataSetReader as VTKDataSetReader$/;"	i
VTKDataSetReader	build/lib/pyvista/core/utilities/reader.py	/^class VTKDataSetReader(BaseReader):$/;"	c
VTKDataSetReader	pyvista/core/utilities/__init__.py	/^from .reader import VTKDataSetReader as VTKDataSetReader$/;"	i
VTKDataSetReader	pyvista/core/utilities/reader.py	/^class VTKDataSetReader(BaseReader):$/;"	c
VTKObjectWrapper	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.numpy_interface.dataset_adapter import VTKObjectWrapper as VTKObjectWrapper$/;"	i
VTKObjectWrapper	pyvista/core/_vtk_core.py	/^from vtkmodules.numpy_interface.dataset_adapter import VTKObjectWrapper as VTKObjectWrapper$/;"	i
VTKPDataSetReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import VTKPDataSetReader as VTKPDataSetReader$/;"	i
VTKPDataSetReader	build/lib/pyvista/core/utilities/reader.py	/^class VTKPDataSetReader(BaseReader):$/;"	c
VTKPDataSetReader	pyvista/core/utilities/__init__.py	/^from .reader import VTKPDataSetReader as VTKPDataSetReader$/;"	i
VTKPDataSetReader	pyvista/core/utilities/reader.py	/^class VTKPDataSetReader(BaseReader):$/;"	c
VTKPythonAlgorithmBase	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.util.vtkAlgorithm import VTKPythonAlgorithmBase as VTKPythonAlgorithmBase$/;"	i
VTKPythonAlgorithmBase	pyvista/core/_vtk_core.py	/^from vtkmodules.util.vtkAlgorithm import VTKPythonAlgorithmBase as VTKPythonAlgorithmBase$/;"	i
VTKVersionError	build/lib/pyvista/__init__.py	/^    from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/__init__.py	/^from .errors import VTKVersionError as VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/_vtk_core.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/dataset.py	/^from .errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/errors.py	/^class VTKVersionError(RuntimeError):$/;"	c
VTKVersionError	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/filters/image_data.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/pointset.py	/^from .errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/core/utilities/geometric_sources.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/examples/downloads.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/plotting/_property.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/plotting/_property.py	/^        from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/plotting/affine_widget.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/plotting/plotter.py	/^                from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
VTKVersionError	build/lib/pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/plotting/texture.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	build/lib/pyvista/plotting/widgets.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	doc/source/make_tables.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/__init__.py	/^    from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/__init__.py	/^from .errors import VTKVersionError as VTKVersionError$/;"	i
VTKVersionError	pyvista/core/_vtk_core.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/dataset.py	/^from .errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/errors.py	/^class VTKVersionError(RuntimeError):$/;"	c
VTKVersionError	pyvista/core/filters/data_object.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/filters/data_set.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/filters/image_data.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/filters/poly_data.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/pointset.py	/^from .errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/core/utilities/geometric_sources.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/examples/downloads.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/plotting/_property.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/plotting/_property.py	/^        from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/plotting/affine_widget.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/plotting/plotter.py	/^                from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
VTKVersionError	pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/plotting/texture.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	pyvista/plotting/widgets.py	/^            from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	tests/core/test_dataobject_filters.py	/^from pyvista import VTKVersionError$/;"	i
VTKVersionError	tests/core/test_dataset.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	tests/core/test_dataset_filters.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	tests/plotting/test_texture.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	tests/plotting/test_widgets.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionError	tests/typing/test_return_type.py	/^from pyvista.core.errors import VTKVersionError$/;"	i
VTKVersionInfo	build/lib/pyvista/core/_vtk_core.py	/^def VTKVersionInfo():$/;"	f
VTKVersionInfo	pyvista/core/_vtk_core.py	/^def VTKVersionInfo():$/;"	f
VTK_ARIAL	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_ARIAL as VTK_ARIAL$/;"	i
VTK_ARIAL	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_ARIAL as VTK_ARIAL$/;"	i
VTK_BEST_FITTING_PLANE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import VTK_BEST_FITTING_PLANE as VTK_BEST_FITTING_PLANE$/;"	i
VTK_BEST_FITTING_PLANE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import VTK_BEST_FITTING_PLANE as VTK_BEST_FITTING_PLANE$/;"	i
VTK_BEZIER_CURVE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_CURVE as VTK_BEZIER_CURVE$/;"	i
VTK_BEZIER_CURVE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_CURVE as VTK_BEZIER_CURVE$/;"	i
VTK_BEZIER_HEXAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_HEXAHEDRON as VTK_BEZIER_HEXAHEDRON$/;"	i
VTK_BEZIER_HEXAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_HEXAHEDRON as VTK_BEZIER_HEXAHEDRON$/;"	i
VTK_BEZIER_PYRAMID	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_PYRAMID as VTK_BEZIER_PYRAMID$/;"	i
VTK_BEZIER_PYRAMID	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_PYRAMID as VTK_BEZIER_PYRAMID$/;"	i
VTK_BEZIER_QUADRILATERAL	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_QUADRILATERAL as VTK_BEZIER_QUADRILATERAL$/;"	i
VTK_BEZIER_QUADRILATERAL	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_QUADRILATERAL as VTK_BEZIER_QUADRILATERAL$/;"	i
VTK_BEZIER_TETRAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_TETRAHEDRON as VTK_BEZIER_TETRAHEDRON$/;"	i
VTK_BEZIER_TETRAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_TETRAHEDRON as VTK_BEZIER_TETRAHEDRON$/;"	i
VTK_BEZIER_TRIANGLE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_TRIANGLE as VTK_BEZIER_TRIANGLE$/;"	i
VTK_BEZIER_TRIANGLE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_TRIANGLE as VTK_BEZIER_TRIANGLE$/;"	i
VTK_BEZIER_WEDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_WEDGE as VTK_BEZIER_WEDGE$/;"	i
VTK_BEZIER_WEDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BEZIER_WEDGE as VTK_BEZIER_WEDGE$/;"	i
VTK_BIQUADRATIC_QUAD	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BIQUADRATIC_QUAD as VTK_BIQUADRATIC_QUAD$/;"	i
VTK_BIQUADRATIC_QUAD	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BIQUADRATIC_QUAD as VTK_BIQUADRATIC_QUAD$/;"	i
VTK_BIQUADRATIC_TRIANGLE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BIQUADRATIC_TRIANGLE as VTK_BIQUADRATIC_TRIANGLE$/;"	i
VTK_BIQUADRATIC_TRIANGLE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_BIQUADRATIC_TRIANGLE as VTK_BIQUADRATIC_TRIANGLE$/;"	i
VTK_CONVEX_POINT_SET	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_CONVEX_POINT_SET as VTK_CONVEX_POINT_SET$/;"	i
VTK_CONVEX_POINT_SET	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_CONVEX_POINT_SET as VTK_CONVEX_POINT_SET$/;"	i
VTK_COURIER	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_COURIER as VTK_COURIER$/;"	i
VTK_COURIER	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_COURIER as VTK_COURIER$/;"	i
VTK_CUBIC_LINE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_CUBIC_LINE as VTK_CUBIC_LINE$/;"	i
VTK_CUBIC_LINE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_CUBIC_LINE as VTK_CUBIC_LINE$/;"	i
VTK_EMPTY_CELL	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_EMPTY_CELL as VTK_EMPTY_CELL$/;"	i
VTK_EMPTY_CELL	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_EMPTY_CELL as VTK_EMPTY_CELL$/;"	i
VTK_FONT_FILE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_FONT_FILE as VTK_FONT_FILE$/;"	i
VTK_FONT_FILE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_FONT_FILE as VTK_FONT_FILE$/;"	i
VTK_HEXAGONAL_PRISM	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HEXAGONAL_PRISM as VTK_HEXAGONAL_PRISM$/;"	i
VTK_HEXAGONAL_PRISM	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HEXAGONAL_PRISM as VTK_HEXAGONAL_PRISM$/;"	i
VTK_HEXAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HEXAHEDRON as VTK_HEXAHEDRON$/;"	i
VTK_HEXAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HEXAHEDRON as VTK_HEXAHEDRON$/;"	i
VTK_HIGHER_ORDER_EDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_EDGE as VTK_HIGHER_ORDER_EDGE$/;"	i
VTK_HIGHER_ORDER_EDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_EDGE as VTK_HIGHER_ORDER_EDGE$/;"	i
VTK_HIGHER_ORDER_HEXAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_HEXAHEDRON as VTK_HIGHER_ORDER_HEXAHEDRON$/;"	i
VTK_HIGHER_ORDER_HEXAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_HEXAHEDRON as VTK_HIGHER_ORDER_HEXAHEDRON$/;"	i
VTK_HIGHER_ORDER_POLYGON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_POLYGON as VTK_HIGHER_ORDER_POLYGON$/;"	i
VTK_HIGHER_ORDER_POLYGON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_POLYGON as VTK_HIGHER_ORDER_POLYGON$/;"	i
VTK_HIGHER_ORDER_PYRAMID	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_PYRAMID as VTK_HIGHER_ORDER_PYRAMID$/;"	i
VTK_HIGHER_ORDER_PYRAMID	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_PYRAMID as VTK_HIGHER_ORDER_PYRAMID$/;"	i
VTK_HIGHER_ORDER_QUAD	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_QUAD as VTK_HIGHER_ORDER_QUAD$/;"	i
VTK_HIGHER_ORDER_QUAD	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_QUAD as VTK_HIGHER_ORDER_QUAD$/;"	i
VTK_HIGHER_ORDER_TRIANGLE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_TRIANGLE as VTK_HIGHER_ORDER_TRIANGLE$/;"	i
VTK_HIGHER_ORDER_TRIANGLE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_TRIANGLE as VTK_HIGHER_ORDER_TRIANGLE$/;"	i
VTK_HIGHER_ORDER_WEDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_WEDGE as VTK_HIGHER_ORDER_WEDGE$/;"	i
VTK_HIGHER_ORDER_WEDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_HIGHER_ORDER_WEDGE as VTK_HIGHER_ORDER_WEDGE$/;"	i
VTK_LAGRANGE_CURVE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_CURVE as VTK_LAGRANGE_CURVE$/;"	i
VTK_LAGRANGE_CURVE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_CURVE as VTK_LAGRANGE_CURVE$/;"	i
VTK_LAGRANGE_HEXAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_HEXAHEDRON as VTK_LAGRANGE_HEXAHEDRON$/;"	i
VTK_LAGRANGE_HEXAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_HEXAHEDRON as VTK_LAGRANGE_HEXAHEDRON$/;"	i
VTK_LAGRANGE_PYRAMID	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_PYRAMID as VTK_LAGRANGE_PYRAMID$/;"	i
VTK_LAGRANGE_PYRAMID	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_PYRAMID as VTK_LAGRANGE_PYRAMID$/;"	i
VTK_LAGRANGE_QUADRILATERAL	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_QUADRILATERAL as VTK_LAGRANGE_QUADRILATERAL$/;"	i
VTK_LAGRANGE_QUADRILATERAL	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_QUADRILATERAL as VTK_LAGRANGE_QUADRILATERAL$/;"	i
VTK_LAGRANGE_TETRAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_TETRAHEDRON as VTK_LAGRANGE_TETRAHEDRON$/;"	i
VTK_LAGRANGE_TETRAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_TETRAHEDRON as VTK_LAGRANGE_TETRAHEDRON$/;"	i
VTK_LAGRANGE_TRIANGLE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_TRIANGLE as VTK_LAGRANGE_TRIANGLE$/;"	i
VTK_LAGRANGE_TRIANGLE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_TRIANGLE as VTK_LAGRANGE_TRIANGLE$/;"	i
VTK_LAGRANGE_WEDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_WEDGE as VTK_LAGRANGE_WEDGE$/;"	i
VTK_LAGRANGE_WEDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LAGRANGE_WEDGE as VTK_LAGRANGE_WEDGE$/;"	i
VTK_LINE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LINE as VTK_LINE$/;"	i
VTK_LINE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_LINE as VTK_LINE$/;"	i
VTK_PARAMETRIC_CURVE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_CURVE as VTK_PARAMETRIC_CURVE$/;"	i
VTK_PARAMETRIC_CURVE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_CURVE as VTK_PARAMETRIC_CURVE$/;"	i
VTK_PARAMETRIC_HEX_REGION	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_HEX_REGION as VTK_PARAMETRIC_HEX_REGION$/;"	i
VTK_PARAMETRIC_HEX_REGION	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_HEX_REGION as VTK_PARAMETRIC_HEX_REGION$/;"	i
VTK_PARAMETRIC_QUAD_SURFACE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_QUAD_SURFACE as VTK_PARAMETRIC_QUAD_SURFACE$/;"	i
VTK_PARAMETRIC_QUAD_SURFACE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_QUAD_SURFACE as VTK_PARAMETRIC_QUAD_SURFACE$/;"	i
VTK_PARAMETRIC_SURFACE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_SURFACE as VTK_PARAMETRIC_SURFACE$/;"	i
VTK_PARAMETRIC_SURFACE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_SURFACE as VTK_PARAMETRIC_SURFACE$/;"	i
VTK_PARAMETRIC_TETRA_REGION	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_TETRA_REGION as VTK_PARAMETRIC_TETRA_REGION$/;"	i
VTK_PARAMETRIC_TETRA_REGION	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_TETRA_REGION as VTK_PARAMETRIC_TETRA_REGION$/;"	i
VTK_PARAMETRIC_TRI_SURFACE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_TRI_SURFACE as VTK_PARAMETRIC_TRI_SURFACE$/;"	i
VTK_PARAMETRIC_TRI_SURFACE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PARAMETRIC_TRI_SURFACE as VTK_PARAMETRIC_TRI_SURFACE$/;"	i
VTK_PENTAGONAL_PRISM	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PENTAGONAL_PRISM as VTK_PENTAGONAL_PRISM$/;"	i
VTK_PENTAGONAL_PRISM	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PENTAGONAL_PRISM as VTK_PENTAGONAL_PRISM$/;"	i
VTK_PIXEL	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PIXEL as VTK_PIXEL$/;"	i
VTK_PIXEL	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PIXEL as VTK_PIXEL$/;"	i
VTK_POLYGON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLYGON as VTK_POLYGON$/;"	i
VTK_POLYGON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLYGON as VTK_POLYGON$/;"	i
VTK_POLYHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLYHEDRON as VTK_POLYHEDRON$/;"	i
VTK_POLYHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLYHEDRON as VTK_POLYHEDRON$/;"	i
VTK_POLY_LINE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLY_LINE as VTK_POLY_LINE$/;"	i
VTK_POLY_LINE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLY_LINE as VTK_POLY_LINE$/;"	i
VTK_POLY_VERTEX	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLY_VERTEX as VTK_POLY_VERTEX$/;"	i
VTK_POLY_VERTEX	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_POLY_VERTEX as VTK_POLY_VERTEX$/;"	i
VTK_PYRAMID	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PYRAMID as VTK_PYRAMID$/;"	i
VTK_PYRAMID	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_PYRAMID as VTK_PYRAMID$/;"	i
VTK_QUAD	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUAD as VTK_QUAD$/;"	i
VTK_QUAD	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUAD as VTK_QUAD$/;"	i
VTK_QUADRATIC_EDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_EDGE as VTK_QUADRATIC_EDGE$/;"	i
VTK_QUADRATIC_EDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_EDGE as VTK_QUADRATIC_EDGE$/;"	i
VTK_QUADRATIC_HEXAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_HEXAHEDRON as VTK_QUADRATIC_HEXAHEDRON$/;"	i
VTK_QUADRATIC_HEXAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_HEXAHEDRON as VTK_QUADRATIC_HEXAHEDRON$/;"	i
VTK_QUADRATIC_LINEAR_QUAD	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_LINEAR_QUAD as VTK_QUADRATIC_LINEAR_QUAD$/;"	i
VTK_QUADRATIC_LINEAR_QUAD	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_LINEAR_QUAD as VTK_QUADRATIC_LINEAR_QUAD$/;"	i
VTK_QUADRATIC_LINEAR_WEDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_LINEAR_WEDGE as VTK_QUADRATIC_LINEAR_WEDGE$/;"	i
VTK_QUADRATIC_LINEAR_WEDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_LINEAR_WEDGE as VTK_QUADRATIC_LINEAR_WEDGE$/;"	i
VTK_QUADRATIC_POLYGON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_POLYGON as VTK_QUADRATIC_POLYGON$/;"	i
VTK_QUADRATIC_POLYGON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_POLYGON as VTK_QUADRATIC_POLYGON$/;"	i
VTK_QUADRATIC_PYRAMID	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_PYRAMID as VTK_QUADRATIC_PYRAMID$/;"	i
VTK_QUADRATIC_PYRAMID	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_PYRAMID as VTK_QUADRATIC_PYRAMID$/;"	i
VTK_QUADRATIC_QUAD	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_QUAD as VTK_QUADRATIC_QUAD$/;"	i
VTK_QUADRATIC_QUAD	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_QUAD as VTK_QUADRATIC_QUAD$/;"	i
VTK_QUADRATIC_TETRA	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_TETRA as VTK_QUADRATIC_TETRA$/;"	i
VTK_QUADRATIC_TETRA	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_TETRA as VTK_QUADRATIC_TETRA$/;"	i
VTK_QUADRATIC_TRIANGLE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_TRIANGLE as VTK_QUADRATIC_TRIANGLE$/;"	i
VTK_QUADRATIC_TRIANGLE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_TRIANGLE as VTK_QUADRATIC_TRIANGLE$/;"	i
VTK_QUADRATIC_WEDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_WEDGE as VTK_QUADRATIC_WEDGE$/;"	i
VTK_QUADRATIC_WEDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_QUADRATIC_WEDGE as VTK_QUADRATIC_WEDGE$/;"	i
VTK_RESOLVE_OFF	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import VTK_RESOLVE_OFF as VTK_RESOLVE_OFF$/;"	i
VTK_RESOLVE_OFF	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import VTK_RESOLVE_OFF as VTK_RESOLVE_OFF$/;"	i
VTK_RESOLVE_POLYGON_OFFSET	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import VTK_RESOLVE_POLYGON_OFFSET as VTK_RESOLVE_POLYGON_OFFSET$/;"	i
VTK_RESOLVE_POLYGON_OFFSET	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import VTK_RESOLVE_POLYGON_OFFSET as VTK_RESOLVE_POLYGON_OFFSET$/;"	i
VTK_RESOLVE_SHIFT_ZBUFFER	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import VTK_RESOLVE_SHIFT_ZBUFFER as VTK_RESOLVE_SHIFT_ZBUFFER$/;"	i
VTK_RESOLVE_SHIFT_ZBUFFER	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import VTK_RESOLVE_SHIFT_ZBUFFER as VTK_RESOLVE_SHIFT_ZBUFFER$/;"	i
VTK_TETRA	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TETRA as VTK_TETRA$/;"	i
VTK_TETRA	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TETRA as VTK_TETRA$/;"	i
VTK_TIMES	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_TIMES as VTK_TIMES$/;"	i
VTK_TIMES	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_TIMES as VTK_TIMES$/;"	i
VTK_TRIANGLE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TRIANGLE as VTK_TRIANGLE$/;"	i
VTK_TRIANGLE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TRIANGLE as VTK_TRIANGLE$/;"	i
VTK_TRIANGLE_STRIP	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TRIANGLE_STRIP as VTK_TRIANGLE_STRIP$/;"	i
VTK_TRIANGLE_STRIP	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TRIANGLE_STRIP as VTK_TRIANGLE_STRIP$/;"	i
VTK_TRIQUADRATIC_HEXAHEDRON	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TRIQUADRATIC_HEXAHEDRON as VTK_TRIQUADRATIC_HEXAHEDRON$/;"	i
VTK_TRIQUADRATIC_HEXAHEDRON	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_TRIQUADRATIC_HEXAHEDRON as VTK_TRIQUADRATIC_HEXAHEDRON$/;"	i
VTK_TRIQUADRATIC_PYRAMID	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkCommonDataModel import VTK_TRIQUADRATIC_PYRAMID as VTK_TRIQUADRATIC_PYRAMID$/;"	i
VTK_TRIQUADRATIC_PYRAMID	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkCommonDataModel import VTK_TRIQUADRATIC_PYRAMID as VTK_TRIQUADRATIC_PYRAMID$/;"	i
VTK_UNSIGNED_CHAR	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_UNSIGNED_CHAR as VTK_UNSIGNED_CHAR$/;"	i
VTK_UNSIGNED_CHAR	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import VTK_UNSIGNED_CHAR as VTK_UNSIGNED_CHAR$/;"	i
VTK_VERTEX	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_VERTEX as VTK_VERTEX$/;"	i
VTK_VERTEX	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_VERTEX as VTK_VERTEX$/;"	i
VTK_VOXEL	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_VOXEL as VTK_VOXEL$/;"	i
VTK_VOXEL	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_VOXEL as VTK_VOXEL$/;"	i
VTK_WEDGE	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_WEDGE as VTK_WEDGE$/;"	i
VTK_WEDGE	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import VTK_WEDGE as VTK_WEDGE$/;"	i
VectorLike	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._aliases import VectorLike as VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^VectorLike = _ArrayLike1D[NumberType]$/;"	v
VectorLike	build/lib/pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/cell.py	/^    from ._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/dataset.py	/^    from ._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/filters/image_data.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/filters/poly_data.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/grid.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/pointset.py	/^    from ._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/arrays.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/geometric_objects.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/misc.py	/^    from .._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/parametric_objects.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/points.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/core/utilities/transformations.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/plotting/axes_assembly.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/plotting/cube_axes_actor.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/plotting/text.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/plotting/themes.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	build/lib/pyvista/plotting/widgets.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/_typing_core/__init__.py	/^from ._aliases import VectorLike as VectorLike$/;"	i
VectorLike	pyvista/core/_typing_core/_aliases.py	/^VectorLike = _ArrayLike1D[NumberType]$/;"	v
VectorLike	pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/_validation/validate.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/cell.py	/^    from ._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/dataset.py	/^    from ._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/filters/data_object.py	/^    from pyvista import VectorLike$/;"	i
VectorLike	pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/filters/image_data.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/filters/poly_data.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/grid.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/pointset.py	/^    from ._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/arrays.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/geometric_objects.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/geometric_sources.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/helpers.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/misc.py	/^    from .._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/parametric_objects.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/points.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/core/utilities/transformations.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/plotting/axes_assembly.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/plotting/cube_axes_actor.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/plotting/prop3d.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/plotting/text.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/plotting/themes.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VectorLike	pyvista/plotting/widgets.py	/^    from pyvista.core._typing_core import VectorLike$/;"	i
VersionInfo	build/lib/pyvista/core/_vtk_core.py	/^class VersionInfo(NamedTuple):$/;"	c
VersionInfo	pyvista/core/_vtk_core.py	/^class VersionInfo(NamedTuple):$/;"	c
VersionInfo	tests/conftest.py	/^from pyvista.core._vtk_core import VersionInfo$/;"	i
Vertex	build/lib/pyvista/examples/cells.py	/^def Vertex() -> UnstructuredGrid:$/;"	f
Vertex	pyvista/examples/cells.py	/^def Vertex() -> UnstructuredGrid:$/;"	f
Viewer	build/lib/pyvista/trame/ui/vuetify2.py	/^class Viewer(BaseViewer):$/;"	c
Viewer	build/lib/pyvista/trame/ui/vuetify3.py	/^class Viewer(BaseViewer):$/;"	c
Viewer	pyvista/trame/ui/vuetify2.py	/^class Viewer(BaseViewer):$/;"	c
Viewer	pyvista/trame/ui/vuetify3.py	/^class Viewer(BaseViewer):$/;"	c
Volume	build/lib/pyvista/plotting/__init__.py	/^from .volume import Volume as Volume$/;"	i
Volume	build/lib/pyvista/plotting/plotter.py	/^from .volume import Volume$/;"	i
Volume	build/lib/pyvista/plotting/volume.py	/^class Volume(Prop3D, _vtk.vtkVolume):$/;"	c
Volume	pyvista/plotting/__init__.py	/^from .volume import Volume as Volume$/;"	i
Volume	pyvista/plotting/plotter.py	/^from .volume import Volume$/;"	i
Volume	pyvista/plotting/volume.py	/^class Volume(Prop3D, _vtk.vtkVolume):$/;"	c
VolumeProperty	build/lib/pyvista/plotting/__init__.py	/^from .volume_property import VolumeProperty as VolumeProperty$/;"	i
VolumeProperty	build/lib/pyvista/plotting/plotter.py	/^from .volume_property import VolumeProperty$/;"	i
VolumeProperty	build/lib/pyvista/plotting/volume_property.py	/^class VolumeProperty(_vtk.vtkVolumeProperty):$/;"	c
VolumeProperty	pyvista/plotting/__init__.py	/^from .volume_property import VolumeProperty as VolumeProperty$/;"	i
VolumeProperty	pyvista/plotting/plotter.py	/^from .volume_property import VolumeProperty$/;"	i
VolumeProperty	pyvista/plotting/volume_property.py	/^class VolumeProperty(_vtk.vtkVolumeProperty):$/;"	c
VolumeProperty	tests/plotting/test_volume_property.py	/^from pyvista.plotting.volume_property import VolumeProperty$/;"	i
Voxel	build/lib/pyvista/examples/cells.py	/^def Voxel() -> UnstructuredGrid:$/;"	f
Voxel	pyvista/examples/cells.py	/^def Voxel() -> UnstructuredGrid:$/;"	f
VtkErrorCatcher	build/lib/pyvista/core/utilities/__init__.py	/^from .observers import VtkErrorCatcher as VtkErrorCatcher$/;"	i
VtkErrorCatcher	build/lib/pyvista/core/utilities/observers.py	/^class VtkErrorCatcher:$/;"	c
VtkErrorCatcher	pyvista/core/utilities/__init__.py	/^from .observers import VtkErrorCatcher as VtkErrorCatcher$/;"	i
VtkErrorCatcher	pyvista/core/utilities/observers.py	/^class VtkErrorCatcher:$/;"	c
VtkEvent	build/lib/pyvista/core/utilities/observers.py	/^class VtkEvent(NamedTuple):$/;"	c
VtkEvent	pyvista/core/utilities/observers.py	/^class VtkEvent(NamedTuple):$/;"	c
VtkLocalView	build/lib/pyvista/trame/views.py	/^from trame.widgets.vtk import VtkLocalView$/;"	i
VtkLocalView	pyvista/trame/views.py	/^from trame.widgets.vtk import VtkLocalView$/;"	i
VtkRemoteLocalView	build/lib/pyvista/trame/views.py	/^from trame.widgets.vtk import VtkRemoteLocalView$/;"	i
VtkRemoteLocalView	pyvista/trame/views.py	/^from trame.widgets.vtk import VtkRemoteLocalView$/;"	i
VtkRemoteView	build/lib/pyvista/trame/views.py	/^from trame.widgets.vtk import VtkRemoteView$/;"	i
VtkRemoteView	pyvista/trame/views.py	/^from trame.widgets.vtk import VtkRemoteView$/;"	i
Vue2Viewer	build/lib/pyvista/trame/ui/__init__.py	/^from .vuetify2 import Viewer as Vue2Viewer$/;"	i
Vue2Viewer	pyvista/trame/ui/__init__.py	/^from .vuetify2 import Viewer as Vue2Viewer$/;"	i
Vue3Viewer	build/lib/pyvista/trame/ui/__init__.py	/^from .vuetify3 import Viewer as Vue3Viewer$/;"	i
Vue3Viewer	pyvista/trame/ui/__init__.py	/^from .vuetify3 import Viewer as Vue3Viewer$/;"	i
WEDGE	build/lib/pyvista/core/celltype.py	/^    WEDGE = _CELL_TYPE_INFO['WEDGE']$/;"	v	class:CellType
WEDGE	build/lib/pyvista/core/celltype.py	/^    WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
WEDGE	pyvista/core/celltype.py	/^    WEDGE = _CELL_TYPE_INFO['WEDGE']$/;"	v	class:CellType
WEDGE	pyvista/core/celltype.py	/^    WEDGE=_CellTypeTuple($/;"	v	class:_CellTypeTuple
WHITE	doc/source/make_tables.py	/^    WHITE = auto()$/;"	v	class:ColorClassification
WHITE	tests/core/test_dataset_filters.py	/^WHITE = [1.0, 1.0, 1.0]$/;"	v
WIREFRAME	build/lib/pyvista/plotting/opts.py	/^    WIREFRAME = (1, 'Wireframe')$/;"	v	class:RepresentationType
WIREFRAME	pyvista/plotting/opts.py	/^    WIREFRAME = (1, 'Wireframe')$/;"	v	class:RepresentationType
WORLD	build/lib/pyvista/plotting/opts.py	/^    WORLD = (9, 'World')$/;"	v	class:PickerType
WORLD	pyvista/plotting/opts.py	/^    WORLD = (9, 'World')$/;"	v	class:PickerType
Wavelet	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_objects import Wavelet as Wavelet$/;"	i
Wavelet	build/lib/pyvista/core/utilities/geometric_objects.py	/^def Wavelet($/;"	f
Wavelet	pyvista/core/utilities/__init__.py	/^from .geometric_objects import Wavelet as Wavelet$/;"	i
Wavelet	pyvista/core/utilities/geometric_objects.py	/^def Wavelet($/;"	f
Wedge	build/lib/pyvista/examples/cells.py	/^def Wedge() -> UnstructuredGrid:$/;"	f
Wedge	pyvista/examples/cells.py	/^def Wedge() -> UnstructuredGrid:$/;"	f
Widget	build/lib/pyvista/trame/jupyter.py	/^class Widget(HTML):  # type: ignore[misc]  # numpydoc ignore=PR01$/;"	c
Widget	pyvista/trame/jupyter.py	/^class Widget(HTML):  # type: ignore[misc]  # numpydoc ignore=PR01$/;"	c
Widget	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.jupyter import Widget$/;"	i
WidgetHelper	build/lib/pyvista/plotting/__init__.py	/^from .widgets import WidgetHelper as WidgetHelper$/;"	i
WidgetHelper	build/lib/pyvista/plotting/plotter.py	/^from .widgets import WidgetHelper$/;"	i
WidgetHelper	build/lib/pyvista/plotting/widgets.py	/^class WidgetHelper:$/;"	c
WidgetHelper	pyvista/plotting/__init__.py	/^from .widgets import WidgetHelper as WidgetHelper$/;"	i
WidgetHelper	pyvista/plotting/plotter.py	/^from .widgets import WidgetHelper$/;"	i
WidgetHelper	pyvista/plotting/widgets.py	/^class WidgetHelper:$/;"	c
WrapType	build/lib/pyvista/plotting/texture.py	/^    class WrapType(AnnotatedIntEnum):$/;"	c	class:Texture
WrapType	pyvista/plotting/texture.py	/^    class WrapType(AnnotatedIntEnum):$/;"	c	class:Texture
WriteError	tests/test_meshio.py	/^    from meshio._exceptions import WriteError$/;"	i
X11	build/lib/pyvista/plotting/plotter.py	/^        X11 = ctypes.CDLL('libX11.so')$/;"	v
X11	pyvista/plotting/plotter.py	/^        X11 = ctypes.CDLL('libX11.so')$/;"	v
XMLImageDataReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLImageDataReader as XMLImageDataReader$/;"	i
XMLImageDataReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLImageDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLImageDataReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLImageDataReader as XMLImageDataReader$/;"	i
XMLImageDataReader	pyvista/core/utilities/reader.py	/^class XMLImageDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLMultiBlockDataReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLMultiBlockDataReader as XMLMultiBlockDataReader$/;"	i
XMLMultiBlockDataReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLMultiBlockDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLMultiBlockDataReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLMultiBlockDataReader as XMLMultiBlockDataReader$/;"	i
XMLMultiBlockDataReader	pyvista/core/utilities/reader.py	/^class XMLMultiBlockDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPImageDataReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLPImageDataReader as XMLPImageDataReader$/;"	i
XMLPImageDataReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLPImageDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPImageDataReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLPImageDataReader as XMLPImageDataReader$/;"	i
XMLPImageDataReader	pyvista/core/utilities/reader.py	/^class XMLPImageDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPRectilinearGridReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLPRectilinearGridReader as XMLPRectilinearGridReader$/;"	i
XMLPRectilinearGridReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLPRectilinearGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPRectilinearGridReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLPRectilinearGridReader as XMLPRectilinearGridReader$/;"	i
XMLPRectilinearGridReader	pyvista/core/utilities/reader.py	/^class XMLPRectilinearGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPUnstructuredGridReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLPUnstructuredGridReader as XMLPUnstructuredGridReader$/;"	i
XMLPUnstructuredGridReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLPUnstructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPUnstructuredGridReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLPUnstructuredGridReader as XMLPUnstructuredGridReader$/;"	i
XMLPUnstructuredGridReader	pyvista/core/utilities/reader.py	/^class XMLPUnstructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPartitionedDataSetReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLPartitionedDataSetReader as XMLPartitionedDataSetReader$/;"	i
XMLPartitionedDataSetReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLPartitionedDataSetReader(BaseReader):$/;"	c
XMLPartitionedDataSetReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLPartitionedDataSetReader as XMLPartitionedDataSetReader$/;"	i
XMLPartitionedDataSetReader	pyvista/core/utilities/reader.py	/^class XMLPartitionedDataSetReader(BaseReader):$/;"	c
XMLPolyDataReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLPolyDataReader as XMLPolyDataReader$/;"	i
XMLPolyDataReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLPolyDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLPolyDataReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLPolyDataReader as XMLPolyDataReader$/;"	i
XMLPolyDataReader	pyvista/core/utilities/reader.py	/^class XMLPolyDataReader(BaseReader, PointCellDataSelection):$/;"	c
XMLRectilinearGridReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLRectilinearGridReader as XMLRectilinearGridReader$/;"	i
XMLRectilinearGridReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLRectilinearGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLRectilinearGridReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLRectilinearGridReader as XMLRectilinearGridReader$/;"	i
XMLRectilinearGridReader	pyvista/core/utilities/reader.py	/^class XMLRectilinearGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLStructuredGridReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLStructuredGridReader as XMLStructuredGridReader$/;"	i
XMLStructuredGridReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLStructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLStructuredGridReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLStructuredGridReader as XMLStructuredGridReader$/;"	i
XMLStructuredGridReader	pyvista/core/utilities/reader.py	/^class XMLStructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLUnstructuredGridReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XMLUnstructuredGridReader as XMLUnstructuredGridReader$/;"	i
XMLUnstructuredGridReader	build/lib/pyvista/core/utilities/reader.py	/^class XMLUnstructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XMLUnstructuredGridReader	pyvista/core/utilities/__init__.py	/^from .reader import XMLUnstructuredGridReader as XMLUnstructuredGridReader$/;"	i
XMLUnstructuredGridReader	pyvista/core/utilities/reader.py	/^class XMLUnstructuredGridReader(BaseReader, PointCellDataSelection):$/;"	c
XYZ_ASSEMBLY_TEST_CASES	tests/plotting/test_plotting.py	/^XYZ_ASSEMBLY_TEST_CASES = dict($/;"	v
X_NEG	build/lib/pyvista/core/utilities/geometric_sources.py	/^        X_NEG = 0$/;"	v	class:CubeFacesSource._FaceIndex
X_NEG	pyvista/core/utilities/geometric_sources.py	/^        X_NEG = 0$/;"	v	class:CubeFacesSource._FaceIndex
X_POS	build/lib/pyvista/core/utilities/geometric_sources.py	/^        X_POS = 1$/;"	v	class:CubeFacesSource._FaceIndex
X_POS	pyvista/core/utilities/geometric_sources.py	/^        X_POS = 1$/;"	v	class:CubeFacesSource._FaceIndex
XdmfReader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import XdmfReader as XdmfReader$/;"	i
XdmfReader	build/lib/pyvista/core/utilities/reader.py	/^class XdmfReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
XdmfReader	pyvista/core/utilities/__init__.py	/^from .reader import XdmfReader as XdmfReader$/;"	i
XdmfReader	pyvista/core/utilities/reader.py	/^class XdmfReader(BaseReader, PointCellDataSelection, TimeReader):$/;"	c
YELLOW	doc/source/make_tables.py	/^    YELLOW = auto()$/;"	v	class:ColorClassification
YELLOW_UPPER_BOUND	doc/source/make_tables.py	/^YELLOW_UPPER_BOUND = 61 \/ _360$/;"	v
Y_NEG	build/lib/pyvista/core/utilities/geometric_sources.py	/^        Y_NEG = 2$/;"	v	class:CubeFacesSource._FaceIndex
Y_NEG	pyvista/core/utilities/geometric_sources.py	/^        Y_NEG = 2$/;"	v	class:CubeFacesSource._FaceIndex
Y_POS	build/lib/pyvista/core/utilities/geometric_sources.py	/^        Y_POS = 3$/;"	v	class:CubeFacesSource._FaceIndex
Y_POS	pyvista/core/utilities/geometric_sources.py	/^        Y_POS = 3$/;"	v	class:CubeFacesSource._FaceIndex
Z_NEG	build/lib/pyvista/core/utilities/geometric_sources.py	/^        Z_NEG = 4$/;"	v	class:CubeFacesSource._FaceIndex
Z_NEG	pyvista/core/utilities/geometric_sources.py	/^        Z_NEG = 4$/;"	v	class:CubeFacesSource._FaceIndex
Z_POS	build/lib/pyvista/core/utilities/geometric_sources.py	/^        Z_POS = 5$/;"	v	class:CubeFacesSource._FaceIndex
Z_POS	pyvista/core/utilities/geometric_sources.py	/^        Z_POS = 5$/;"	v	class:CubeFacesSource._FaceIndex
_	examples/00-load/create_unstructured_surface.py	/^_ = grid.plot(show_edges=True)$/;"	v
_	examples/01-filter/boolean_operations.py	/^_ = pl.add_mesh(result, color='lightblue')$/;"	v
_	examples/01-filter/boolean_operations.py	/^_ = pl.add_mesh(sphere_a, color='r', style='wireframe', line_width=3)$/;"	v
_	examples/01-filter/boolean_operations.py	/^_ = pl.add_mesh(sphere_b, color='b', style='wireframe', line_width=3)$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_legend()$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_mesh(mesh, style='wireframe', color='lightgray')$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_mesh(peak_mesh, color='red', label='Steepest Peak')$/;"	v
_	examples/01-filter/connectivity.py	/^_ = p.add_mesh(valley_mesh, color='blue', label='Closest Valley')$/;"	v
_	examples/02-plot/chart_overlays.py	/^_ = ax.set_ylabel('Height (m)')$/;"	v
_	examples/02-plot/volume.py	/^_ = pl.add_volume($/;"	v
_	examples/99-advanced/planets.py	/^_ = pl.add_actor(cubemap.to_skybox())$/;"	v
_	examples/99-advanced/ray_trace_moeller.py	/^    _ = pl.add_arrows($/;"	v
_	tests/core/test_dataobject.py	/^        _ = SubClass().is_empty$/;"	v	class:test_is_empty.SubClass
_360	doc/source/make_tables.py	/^_360 = 360.0$/;"	v
_ALLOWED_COLOR_NAME_DELIMITERS	build/lib/pyvista/plotting/colors.py	/^_ALLOWED_COLOR_NAME_DELIMITERS = '_' + '-' + ' '$/;"	v
_ALLOWED_COLOR_NAME_DELIMITERS	pyvista/plotting/colors.py	/^_ALLOWED_COLOR_NAME_DELIMITERS = '_' + '-' + ' '$/;"	v
_ALL_PLOTTERS	build/lib/pyvista/plotting/__init__.py	/^from .plotter import _ALL_PLOTTERS as _ALL_PLOTTERS$/;"	i
_ALL_PLOTTERS	pyvista/plotting/__init__.py	/^from .plotter import _ALL_PLOTTERS as _ALL_PLOTTERS$/;"	i
_ALL_PLOTTERS	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import _ALL_PLOTTERS  # noqa: F401$/;"	i
_ActiveArrayExistsInfoTuple	build/lib/pyvista/core/dataset.py	/^class _ActiveArrayExistsInfoTuple(NamedTuple):$/;"	c
_ActiveArrayExistsInfoTuple	build/lib/pyvista/core/utilities/arrays.py	/^    from pyvista.core.dataset import _ActiveArrayExistsInfoTuple$/;"	i
_ActiveArrayExistsInfoTuple	pyvista/core/dataset.py	/^class _ActiveArrayExistsInfoTuple(NamedTuple):$/;"	c
_ActiveArrayExistsInfoTuple	pyvista/core/utilities/arrays.py	/^    from pyvista.core.dataset import _ActiveArrayExistsInfoTuple$/;"	i
_ArrayLike	build/lib/pyvista/core/_typing_core/_aliases.py	/^from ._array_like import _ArrayLike$/;"	i
_ArrayLike	build/lib/pyvista/core/_typing_core/_array_like.py	/^_ArrayLike = Union[$/;"	v
_ArrayLike	pyvista/core/_typing_core/_aliases.py	/^from ._array_like import _ArrayLike$/;"	i
_ArrayLike	pyvista/core/_typing_core/_array_like.py	/^_ArrayLike = Union[$/;"	v
_ArrayLike1D	build/lib/pyvista/core/_typing_core/_aliases.py	/^from ._array_like import _ArrayLike1D$/;"	i
_ArrayLike1D	build/lib/pyvista/core/_typing_core/_array_like.py	/^_ArrayLike1D = Union[$/;"	v
_ArrayLike1D	pyvista/core/_typing_core/_aliases.py	/^from ._array_like import _ArrayLike1D$/;"	i
_ArrayLike1D	pyvista/core/_typing_core/_array_like.py	/^_ArrayLike1D = Union[$/;"	v
_ArrayLike2D	build/lib/pyvista/core/_typing_core/_aliases.py	/^from ._array_like import _ArrayLike2D$/;"	i
_ArrayLike2D	build/lib/pyvista/core/_typing_core/_array_like.py	/^_ArrayLike2D = Union[$/;"	v
_ArrayLike2D	pyvista/core/_typing_core/_aliases.py	/^from ._array_like import _ArrayLike2D$/;"	i
_ArrayLike2D	pyvista/core/_typing_core/_array_like.py	/^_ArrayLike2D = Union[$/;"	v
_ArrayLike3D	build/lib/pyvista/core/_typing_core/_array_like.py	/^_ArrayLike3D = Union[$/;"	v
_ArrayLike3D	pyvista/core/_typing_core/_array_like.py	/^_ArrayLike3D = Union[$/;"	v
_ArrayLike4D	build/lib/pyvista/core/_typing_core/_array_like.py	/^_ArrayLike4D = Union[$/;"	v
_ArrayLike4D	pyvista/core/_typing_core/_array_like.py	/^_ArrayLike4D = Union[$/;"	v
_ArrayLikeOrScalar	build/lib/pyvista/core/_typing_core/_aliases.py	/^_ArrayLikeOrScalar = Union[NumberType, ArrayLike[NumberType]]$/;"	v
_ArrayLikeOrScalar	build/lib/pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._aliases import _ArrayLikeOrScalar$/;"	i
_ArrayLikeOrScalar	build/lib/pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core._aliases import _ArrayLikeOrScalar$/;"	i
_ArrayLikeOrScalar	pyvista/core/_typing_core/_aliases.py	/^_ArrayLikeOrScalar = Union[NumberType, ArrayLike[NumberType]]$/;"	v
_ArrayLikeOrScalar	pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._aliases import _ArrayLikeOrScalar$/;"	i
_ArrayLikeOrScalar	pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core._aliases import _ArrayLikeOrScalar$/;"	i
_AxesConfig	build/lib/pyvista/plotting/themes.py	/^class _AxesConfig(_ThemeConfig):$/;"	c
_AxesConfig	pyvista/plotting/themes.py	/^class _AxesConfig(_ThemeConfig):$/;"	c
_AxesGeometryKwargs	build/lib/pyvista/plotting/axes_assembly.py	/^class _AxesGeometryKwargs(TypedDict):$/;"	c
_AxesGeometryKwargs	pyvista/plotting/axes_assembly.py	/^class _AxesGeometryKwargs(TypedDict):$/;"	c
_AxesPropTuple	build/lib/pyvista/plotting/axes_assembly.py	/^class _AxesPropTuple(NamedTuple):$/;"	c
_AxesPropTuple	pyvista/plotting/axes_assembly.py	/^class _AxesPropTuple(NamedTuple):$/;"	c
_AxisActor	build/lib/pyvista/plotting/axes_assembly.py	/^class _AxisActor(_vtk.vtkAxisActor):$/;"	c
_AxisActor	pyvista/plotting/axes_assembly.py	/^class _AxisActor(_vtk.vtkAxisActor):$/;"	c
_AxisEnum	build/lib/pyvista/core/utilities/geometric_sources.py	/^class _AxisEnum(IntEnum):$/;"	c
_AxisEnum	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import _AxisEnum$/;"	i
_AxisEnum	pyvista/core/utilities/geometric_sources.py	/^class _AxisEnum(IntEnum):$/;"	c
_AxisEnum	pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import _AxisEnum$/;"	i
_BADGE_COLORS	build/lib/pyvista/core/celltype.py	/^_BADGE_COLORS = dict(linear='primary', primary='success', dimension='secondary', geometry='muted')$/;"	v
_BADGE_COLORS	pyvista/core/celltype.py	/^_BADGE_COLORS = dict(linear='primary', primary='success', dimension='secondary', geometry='muted')$/;"	v
_BaseDatasetBadge	doc/source/make_tables.py	/^class _BaseDatasetBadge:$/;"	c
_BaseFilePropsProtocol	build/lib/pyvista/examples/_dataset_loader.py	/^class _BaseFilePropsProtocol(Generic[_FilePropStrType_co, _FilePropIntType_co]):$/;"	c
_BaseFilePropsProtocol	pyvista/examples/_dataset_loader.py	/^class _BaseFilePropsProtocol(Generic[_FilePropStrType_co, _FilePropIntType_co]):$/;"	c
_BaseMapper	build/lib/pyvista/plotting/actor.py	/^    from .mapper import _BaseMapper$/;"	i
_BaseMapper	build/lib/pyvista/plotting/composite_mapper.py	/^from .mapper import _BaseMapper$/;"	i
_BaseMapper	build/lib/pyvista/plotting/mapper.py	/^class _BaseMapper(_vtk.vtkAbstractMapper):$/;"	c
_BaseMapper	build/lib/pyvista/plotting/volume.py	/^    from .mapper import _BaseMapper$/;"	i
_BaseMapper	pyvista/plotting/actor.py	/^    from .mapper import _BaseMapper$/;"	i
_BaseMapper	pyvista/plotting/composite_mapper.py	/^from .mapper import _BaseMapper$/;"	i
_BaseMapper	pyvista/plotting/mapper.py	/^class _BaseMapper(_vtk.vtkAbstractMapper):$/;"	c
_BaseMapper	pyvista/plotting/volume.py	/^    from .mapper import _BaseMapper$/;"	i
_BasePyVistaView	build/lib/pyvista/trame/views.py	/^class _BasePyVistaView:$/;"	c
_BasePyVistaView	pyvista/trame/views.py	/^class _BasePyVistaView:$/;"	c
_BasePyVistaView	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.views import _BasePyVistaView$/;"	i
_BaseVolumeMapper	build/lib/pyvista/plotting/mapper.py	/^class _BaseVolumeMapper(_BaseMapper):$/;"	c
_BaseVolumeMapper	pyvista/plotting/mapper.py	/^class _BaseVolumeMapper(_BaseMapper):$/;"	c
_CELL_QUALITY_INFO	build/lib/pyvista/core/utilities/cell_quality.py	/^_CELL_QUALITY_INFO = [$/;"	v
_CELL_QUALITY_INFO	pyvista/core/utilities/cell_quality.py	/^_CELL_QUALITY_INFO = [$/;"	v
_CELL_QUALITY_INFO	tests/core/test_utilities.py	/^from pyvista.core.utilities.cell_quality import _CELL_QUALITY_INFO$/;"	i
_CELL_QUALITY_LOOKUP	doc/source/make_tables.py	/^from pyvista.core.utilities.cell_quality import _CELL_QUALITY_LOOKUP$/;"	i
_CELL_TYPE_INFO	build/lib/pyvista/core/celltype.py	/^_CELL_TYPE_INFO = dict($/;"	v
_CELL_TYPE_INFO	build/lib/pyvista/core/utilities/cell_quality.py	/^from pyvista.core.celltype import _CELL_TYPE_INFO$/;"	i
_CELL_TYPE_INFO	doc/source/make_tables.py	/^from pyvista.core.celltype import _CELL_TYPE_INFO$/;"	i
_CELL_TYPE_INFO	pyvista/core/celltype.py	/^_CELL_TYPE_INFO = dict($/;"	v
_CELL_TYPE_INFO	pyvista/core/utilities/cell_quality.py	/^from pyvista.core.celltype import _CELL_TYPE_INFO$/;"	i
_CELL_TYPE_INFO	tests/core/test_utilities.py	/^from pyvista.core.celltype import _CELL_TYPE_INFO$/;"	i
_CELL_TYPE_NAMES	build/lib/pyvista/core/utilities/cell_quality.py	/^_CELL_TYPE_NAMES = [typ.name for typ in _CELL_QUALITY_LOOKUP.keys()]$/;"	v
_CELL_TYPE_NAMES	pyvista/core/utilities/cell_quality.py	/^_CELL_TYPE_NAMES = [typ.name for typ in _CELL_QUALITY_LOOKUP.keys()]$/;"	v
_CLASSES	build/lib/pyvista/plotting/render_window_interactor.py	/^_CLASSES = {}$/;"	v
_CLASSES	pyvista/plotting/render_window_interactor.py	/^_CLASSES = {}$/;"	v
_CSS_COLORS	build/lib/pyvista/plotting/colors.py	/^_CSS_COLORS = {$/;"	v
_CSS_COLORS	doc/source/make_tables.py	/^from pyvista.plotting.colors import _CSS_COLORS$/;"	i
_CSS_COLORS	pyvista/plotting/colors.py	/^_CSS_COLORS = {$/;"	v
_CameraConfig	build/lib/pyvista/plotting/themes.py	/^class _CameraConfig(_ThemeConfig):$/;"	c
_CameraConfig	pyvista/plotting/themes.py	/^class _CameraConfig(_ThemeConfig):$/;"	c
_CellQualityLiteral	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.cell_quality import _CellQualityLiteral$/;"	i
_CellQualityLiteral	build/lib/pyvista/core/utilities/cell_quality.py	/^_CellQualityLiteral = Literal[$/;"	v
_CellQualityLiteral	pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.cell_quality import _CellQualityLiteral$/;"	i
_CellQualityLiteral	pyvista/core/utilities/cell_quality.py	/^_CellQualityLiteral = Literal[$/;"	v
_CellQualityLiteral	tests/core/test_dataobject_filters.py	/^from pyvista.core.utilities.cell_quality import _CellQualityLiteral$/;"	i
_CellTypeNamesLiteral	build/lib/pyvista/core/utilities/cell_quality.py	/^_CellTypeNamesLiteral = Literal[$/;"	v
_CellTypeNamesLiteral	pyvista/core/utilities/cell_quality.py	/^_CellTypeNamesLiteral = Literal[$/;"	v
_CellTypeTuple	build/lib/pyvista/core/celltype.py	/^class _CellTypeTuple(NamedTuple):$/;"	c
_CellTypeTuple	pyvista/core/celltype.py	/^class _CellTypeTuple(NamedTuple):$/;"	c
_CellTypesLiteral	build/lib/pyvista/core/utilities/cell_quality.py	/^_CellTypesLiteral = Literal[$/;"	v
_CellTypesLiteral	doc/source/make_tables.py	/^from pyvista.core.utilities.cell_quality import _CellTypesLiteral$/;"	i
_CellTypesLiteral	pyvista/core/utilities/cell_quality.py	/^_CellTypesLiteral = Literal[$/;"	v
_Chart	build/lib/pyvista/plotting/charts.py	/^class _Chart(DocSubs):$/;"	c
_Chart	pyvista/plotting/charts.py	/^class _Chart(DocSubs):$/;"	c
_ChartBackground	build/lib/pyvista/plotting/charts.py	/^class _ChartBackground(_CustomContextItem):$/;"	c
_ChartBackground	pyvista/plotting/charts.py	/^class _ChartBackground(_CustomContextItem):$/;"	c
_ColorbarConfig	build/lib/pyvista/plotting/themes.py	/^class _ColorbarConfig(_ThemeConfig):$/;"	c
_ColorbarConfig	pyvista/plotting/themes.py	/^class _ColorbarConfig(_ThemeConfig):$/;"	c
_CustomContextItem	build/lib/pyvista/plotting/charts.py	/^class _CustomContextItem(_vtk.vtkPythonItem):$/;"	c
_CustomContextItem	pyvista/plotting/charts.py	/^class _CustomContextItem(_vtk.vtkPythonItem):$/;"	c
_DOC_STORE	build/lib/pyvista/plotting/charts.py	/^    _DOC_STORE = {}  # type: ignore[var-annotated] # noqa: RUF012$/;"	v	class:DocSubs
_DOC_STORE	pyvista/plotting/charts.py	/^    _DOC_STORE = {}  # type: ignore[var-annotated] # noqa: RUF012$/;"	v	class:DocSubs
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:AreaPlot
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:BarPlot
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:BoxPlot
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:Chart2D
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ChartBox
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ChartMPL
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ChartPie
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:LinePlot2D
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:PiePlot
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ScatterPlot2D
_DOC_SUBS	build/lib/pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:StackPlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:AreaPlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:BarPlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:BoxPlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:Chart2D
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ChartBox
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ChartMPL
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ChartPie
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:LinePlot2D
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:PiePlot
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:ScatterPlot2D
_DOC_SUBS	pyvista/plotting/charts.py	/^    _DOC_SUBS = {  # noqa: RUF012$/;"	v	class:StackPlot
_DOC_TAG	build/lib/pyvista/plotting/charts.py	/^    _DOC_TAG = ':DOC_SUBS:'$/;"	v	class:DocSubs
_DOC_TAG	pyvista/plotting/charts.py	/^    _DOC_TAG = ':DOC_SUBS:'$/;"	v	class:DocSubs
_DataObjectType	build/lib/pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _DataObjectType as _DataObjectType$/;"	i
_DataObjectType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _DataObjectType as _DataObjectType$/;"	i
_DataObjectType	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^_DataObjectType = TypeVar('_DataObjectType', bound=DataObject)$/;"	v
_DataObjectType	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import _DataObjectType$/;"	i
_DataObjectType	pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _DataObjectType as _DataObjectType$/;"	i
_DataObjectType	pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _DataObjectType as _DataObjectType$/;"	i
_DataObjectType	pyvista/core/_typing_core/_dataset_types.py	/^_DataObjectType = TypeVar('_DataObjectType', bound=DataObject)$/;"	v
_DataObjectType	pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import _DataObjectType$/;"	i
_DataSetMapper	build/lib/pyvista/plotting/mapper.py	/^class _DataSetMapper(_BaseMapper):$/;"	c
_DataSetMapper	pyvista/plotting/mapper.py	/^class _DataSetMapper(_BaseMapper):$/;"	c
_DataSetOrMultiBlockType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _DataSetOrMultiBlockType as _DataSetOrMultiBlockType$/;"	i
_DataSetOrMultiBlockType	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^_DataSetOrMultiBlockType = TypeVar('_DataSetOrMultiBlockType', bound=Union[DataSet, MultiBlock])$/;"	v
_DataSetOrMultiBlockType	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista.core._typing_core import _DataSetOrMultiBlockType$/;"	i
_DataSetOrMultiBlockType	build/lib/pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import _DataSetOrMultiBlockType$/;"	i
_DataSetOrMultiBlockType	pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _DataSetOrMultiBlockType as _DataSetOrMultiBlockType$/;"	i
_DataSetOrMultiBlockType	pyvista/core/_typing_core/_dataset_types.py	/^_DataSetOrMultiBlockType = TypeVar('_DataSetOrMultiBlockType', bound=Union[DataSet, MultiBlock])$/;"	v
_DataSetOrMultiBlockType	pyvista/core/filters/data_object.py	/^    from pyvista.core._typing_core import _DataSetOrMultiBlockType$/;"	i
_DataSetOrMultiBlockType	pyvista/core/utilities/transform.py	/^    from pyvista.core._typing_core import _DataSetOrMultiBlockType$/;"	i
_DataSetType	build/lib/pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _DataSetType as _DataSetType$/;"	i
_DataSetType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _DataSetType as _DataSetType$/;"	i
_DataSetType	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^_DataSetType = TypeVar('_DataSetType', bound=DataSet)$/;"	v
_DataSetType	build/lib/pyvista/core/filters/data_object.py	/^    from pyvista.core._typing_core import _DataSetType$/;"	i
_DataSetType	build/lib/pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import _DataSetType$/;"	i
_DataSetType	pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _DataSetType as _DataSetType$/;"	i
_DataSetType	pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _DataSetType as _DataSetType$/;"	i
_DataSetType	pyvista/core/_typing_core/_dataset_types.py	/^_DataSetType = TypeVar('_DataSetType', bound=DataSet)$/;"	v
_DataSetType	pyvista/core/filters/data_object.py	/^    from pyvista.core._typing_core import _DataSetType$/;"	i
_DataSetType	pyvista/core/filters/data_set.py	/^    from pyvista.core._typing_core import _DataSetType$/;"	i
_DatasetLoader	build/lib/pyvista/examples/_dataset_loader.py	/^class _DatasetLoader:$/;"	c
_DatasetLoader	build/lib/pyvista/examples/examples.py	/^from pyvista.examples._dataset_loader import _DatasetLoader$/;"	i
_DatasetLoader	doc/source/make_tables.py	/^from pyvista.examples._dataset_loader import _DatasetLoader$/;"	i
_DatasetLoader	pyvista/examples/_dataset_loader.py	/^class _DatasetLoader:$/;"	c
_DatasetLoader	pyvista/examples/examples.py	/^from pyvista.examples._dataset_loader import _DatasetLoader$/;"	i
_DatasetLoader	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _DatasetLoader$/;"	i
_DepthPeelingConfig	build/lib/pyvista/plotting/themes.py	/^class _DepthPeelingConfig(_ThemeConfig):$/;"	c
_DepthPeelingConfig	pyvista/plotting/themes.py	/^class _DepthPeelingConfig(_ThemeConfig):$/;"	c
_Downloadable	build/lib/pyvista/examples/_dataset_loader.py	/^class _Downloadable(Protocol[_FilePropStrType_co]):$/;"	c
_Downloadable	doc/source/make_tables.py	/^from pyvista.examples._dataset_loader import _Downloadable$/;"	i
_Downloadable	pyvista/examples/_dataset_loader.py	/^class _Downloadable(Protocol[_FilePropStrType_co]):$/;"	c
_Downloadable	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _Downloadable$/;"	i
_DownloadableFile	build/lib/pyvista/examples/_dataset_loader.py	/^class _DownloadableFile(_SingleFile, _Downloadable[str]):$/;"	c
_DownloadableFile	build/lib/pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _DownloadableFile$/;"	i
_DownloadableFile	pyvista/examples/_dataset_loader.py	/^class _DownloadableFile(_SingleFile, _Downloadable[str]):$/;"	c
_DownloadableFile	pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _DownloadableFile$/;"	i
_DownloadableFile	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _DownloadableFile$/;"	i
_FILE_CACHE	build/lib/pyvista/examples/downloads.py	/^    _FILE_CACHE = False$/;"	v
_FILE_CACHE	build/lib/pyvista/examples/downloads.py	/^    _FILE_CACHE = True$/;"	v
_FILE_CACHE	pyvista/examples/downloads.py	/^    _FILE_CACHE = False$/;"	v
_FILE_CACHE	pyvista/examples/downloads.py	/^    _FILE_CACHE = True$/;"	v
_FaceIndex	build/lib/pyvista/core/utilities/geometric_sources.py	/^    class _FaceIndex(IntEnum):$/;"	c	class:CubeFacesSource
_FaceIndex	pyvista/core/utilities/geometric_sources.py	/^    class _FaceIndex(IntEnum):$/;"	c	class:CubeFacesSource
_FilePropIntType_co	build/lib/pyvista/examples/_dataset_loader.py	/^_FilePropIntType_co = TypeVar($/;"	v
_FilePropIntType_co	pyvista/examples/_dataset_loader.py	/^_FilePropIntType_co = TypeVar($/;"	v
_FilePropStrType_co	build/lib/pyvista/examples/_dataset_loader.py	/^_FilePropStrType_co = TypeVar($/;"	v
_FilePropStrType_co	pyvista/examples/_dataset_loader.py	/^_FilePropStrType_co = TypeVar($/;"	v
_FiniteNestedList	build/lib/pyvista/core/_typing_core/_array_like.py	/^_FiniteNestedList = Union[$/;"	v
_FiniteNestedList	build/lib/pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._array_like import _FiniteNestedList$/;"	i
_FiniteNestedList	pyvista/core/_typing_core/_array_like.py	/^_FiniteNestedList = Union[$/;"	v
_FiniteNestedList	pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._array_like import _FiniteNestedList$/;"	i
_FiniteNestedTuple	build/lib/pyvista/core/_typing_core/_array_like.py	/^_FiniteNestedTuple = Union[$/;"	v
_FiniteNestedTuple	build/lib/pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._array_like import _FiniteNestedTuple$/;"	i
_FiniteNestedTuple	pyvista/core/_typing_core/_array_like.py	/^_FiniteNestedTuple = Union[$/;"	v
_FiniteNestedTuple	pyvista/core/_validation/_cast_array.py	/^    from pyvista.core._typing_core._array_like import _FiniteNestedTuple$/;"	i
_Font	build/lib/pyvista/plotting/themes.py	/^class _Font(_ThemeConfig):$/;"	c
_Font	pyvista/plotting/themes.py	/^class _Font(_ThemeConfig):$/;"	c
_ForceSlots	build/lib/pyvista/plotting/themes.py	/^class _ForceSlots(type):$/;"	c
_ForceSlots	pyvista/plotting/themes.py	/^class _ForceSlots(type):$/;"	c
_GIFReader	build/lib/pyvista/core/utilities/reader.py	/^class _GIFReader(BaseVTKReader):$/;"	c
_GIFReader	pyvista/core/utilities/reader.py	/^class _GIFReader(BaseVTKReader):$/;"	c
_GlobalTheme	build/lib/pyvista/plotting/__init__.py	/^from .themes import DocumentTheme as _GlobalTheme$/;"	i
_GlobalTheme	pyvista/plotting/__init__.py	/^from .themes import DocumentTheme as _GlobalTheme$/;"	i
_GridType	build/lib/pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _GridType as _GridType$/;"	i
_GridType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _GridType as _GridType$/;"	i
_GridType	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^_GridType = TypeVar('_GridType', bound=Grid)$/;"	v
_GridType	pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _GridType as _GridType$/;"	i
_GridType	pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _GridType as _GridType$/;"	i
_GridType	pyvista/core/_typing_core/_dataset_types.py	/^_GridType = TypeVar('_GridType', bound=Grid)$/;"	v
_JSONValueType	build/lib/pyvista/core/dataobject.py	/^from .utilities.arrays import _JSONValueType$/;"	i
_JSONValueType	build/lib/pyvista/core/utilities/arrays.py	/^_JSONValueType = Union[$/;"	v
_JSONValueType	pyvista/core/dataobject.py	/^from .utilities.arrays import _JSONValueType$/;"	i
_JSONValueType	pyvista/core/utilities/arrays.py	/^_JSONValueType = Union[$/;"	v
_LightingConfig	build/lib/pyvista/plotting/themes.py	/^class _LightingConfig(_ThemeConfig):$/;"	c
_LightingConfig	pyvista/plotting/themes.py	/^class _LightingConfig(_ThemeConfig):$/;"	c
_MODULES	build/lib/pyvista/errors.py	/^_MODULES = [$/;"	v
_MODULES	build/lib/pyvista/utilities/__init__.py	/^_MODULES = [$/;"	v
_MODULES	pyvista/errors.py	/^_MODULES = [$/;"	v
_MODULES	pyvista/utilities/__init__.py	/^_MODULES = [$/;"	v
_MultiCompPlot	build/lib/pyvista/plotting/charts.py	/^class _MultiCompPlot(_Plot):$/;"	c
_MultiCompPlot	pyvista/plotting/charts.py	/^class _MultiCompPlot(_Plot):$/;"	c
_MultiFileDatasetLoader	build/lib/pyvista/examples/_dataset_loader.py	/^class _MultiFileDatasetLoader(_DatasetLoader, _MultiFilePropsProtocol):$/;"	c
_MultiFileDatasetLoader	pyvista/examples/_dataset_loader.py	/^class _MultiFileDatasetLoader(_DatasetLoader, _MultiFilePropsProtocol):$/;"	c
_MultiFileDownloadableDatasetLoader	build/lib/pyvista/examples/_dataset_loader.py	/^):$/;"	c
_MultiFileDownloadableDatasetLoader	build/lib/pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _MultiFileDownloadableDatasetLoader$/;"	i
_MultiFileDownloadableDatasetLoader	pyvista/examples/_dataset_loader.py	/^):$/;"	c
_MultiFileDownloadableDatasetLoader	pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _MultiFileDownloadableDatasetLoader$/;"	i
_MultiFileDownloadableDatasetLoader	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _MultiFileDownloadableDatasetLoader$/;"	i
_MultiFilePropsProtocol	build/lib/pyvista/examples/_dataset_loader.py	/^):$/;"	c
_MultiFilePropsProtocol	doc/source/make_tables.py	/^from pyvista.examples._dataset_loader import _MultiFilePropsProtocol$/;"	i
_MultiFilePropsProtocol	pyvista/examples/_dataset_loader.py	/^):$/;"	c
_NATIVE_THEMES	build/lib/pyvista/plotting/themes.py	/^class _NATIVE_THEMES(Enum):$/;"	c
_NATIVE_THEMES	pyvista/plotting/themes.py	/^class _NATIVE_THEMES(Enum):$/;"	c
_NOT_AVAILABLE_IMG_PATH	doc/source/make_tables.py	/^    _NOT_AVAILABLE_IMG_PATH = os.path.join(DATASET_GALLERY_DIR, 'not_available.png')$/;"	v	class:DatasetCard
_NameMixin	build/lib/pyvista/core/utilities/misc.py	/^class _NameMixin:$/;"	c
_NameMixin	build/lib/pyvista/plotting/actor.py	/^from pyvista.core.utilities.misc import _NameMixin$/;"	i
_NameMixin	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.misc import _NameMixin$/;"	i
_NameMixin	build/lib/pyvista/plotting/text.py	/^from pyvista.core.utilities.misc import _NameMixin$/;"	i
_NameMixin	pyvista/core/utilities/misc.py	/^class _NameMixin:$/;"	c
_NameMixin	pyvista/plotting/actor.py	/^from pyvista.core.utilities.misc import _NameMixin$/;"	i
_NameMixin	pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.misc import _NameMixin$/;"	i
_NameMixin	pyvista/plotting/text.py	/^from pyvista.core.utilities.misc import _NameMixin$/;"	i
_NumberType	build/lib/pyvista/core/_typing_core/_array_like.py	/^_NumberType = TypeVar(  # noqa: PYI018$/;"	v
_NumberType	build/lib/pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core._array_like import _NumberType$/;"	i
_NumberType	pyvista/core/_typing_core/_array_like.py	/^_NumberType = TypeVar(  # noqa: PYI018$/;"	v
_NumberType	pyvista/core/_validation/check.py	/^    from pyvista.core._typing_core._array_like import _NumberType$/;"	i
_OrderLiteral	build/lib/pyvista/core/composite.py	/^    _OrderLiteral = Literal['nested_first', 'nested_last']$/;"	v	class:MultiBlock
_OrderLiteral	pyvista/core/composite.py	/^    _OrderLiteral = Literal['nested_first', 'nested_last']$/;"	v	class:MultiBlock
_OrthogonalPlanesKwargs	build/lib/pyvista/plotting/axes_assembly.py	/^class _OrthogonalPlanesKwargs(TypedDict):$/;"	c
_OrthogonalPlanesKwargs	pyvista/plotting/axes_assembly.py	/^class _OrthogonalPlanesKwargs(TypedDict):$/;"	c
_PARAVIEW_COLORS	build/lib/pyvista/plotting/colors.py	/^_PARAVIEW_COLORS = {'paraview_background': '#52576e'}$/;"	v
_PARAVIEW_COLORS	doc/source/make_tables.py	/^from pyvista.plotting.colors import _PARAVIEW_COLORS$/;"	i
_PARAVIEW_COLORS	pyvista/plotting/colors.py	/^_PARAVIEW_COLORS = {'paraview_background': '#52576e'}$/;"	v
_PVDReader	build/lib/pyvista/core/utilities/reader.py	/^class _PVDReader(BaseVTKReader):$/;"	c
_PVDReader	pyvista/core/utilities/reader.py	/^class _PVDReader(BaseVTKReader):$/;"	c
_PartEnum	build/lib/pyvista/core/utilities/geometric_sources.py	/^class _PartEnum(IntEnum):$/;"	c
_PartEnum	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import _PartEnum$/;"	i
_PartEnum	pyvista/core/utilities/geometric_sources.py	/^class _PartEnum(IntEnum):$/;"	c
_PartEnum	pyvista/plotting/axes_assembly.py	/^from pyvista.core.utilities.geometric_sources import _PartEnum$/;"	i
_Plot	build/lib/pyvista/plotting/charts.py	/^class _Plot(DocSubs):$/;"	c
_Plot	pyvista/plotting/charts.py	/^class _Plot(DocSubs):$/;"	c
_PointGridType	build/lib/pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _PointGridType as _PointGridType$/;"	i
_PointGridType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _PointGridType as _PointGridType$/;"	i
_PointGridType	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^_PointGridType = TypeVar('_PointGridType', bound=PointGrid)$/;"	v
_PointGridType	pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _PointGridType as _PointGridType$/;"	i
_PointGridType	pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _PointGridType as _PointGridType$/;"	i
_PointGridType	pyvista/core/_typing_core/_dataset_types.py	/^_PointGridType = TypeVar('_PointGridType', bound=PointGrid)$/;"	v
_PointSet	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.pointset import _PointSet$/;"	i
_PointSet	build/lib/pyvista/core/pointset.py	/^class _PointSet(DataSet):$/;"	c
_PointSet	pyvista/core/_typing_core/_dataset_types.py	/^from pyvista.core.pointset import _PointSet$/;"	i
_PointSet	pyvista/core/pointset.py	/^class _PointSet(DataSet):$/;"	c
_PointSetType	build/lib/pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _PointSetType as _PointSetType$/;"	i
_PointSetType	build/lib/pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _PointSetType as _PointSetType$/;"	i
_PointSetType	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^_PointSetType = TypeVar('_PointSetType', bound=_PointSet)$/;"	v
_PointSetType	pyvista/__init__.py	/^from pyvista.core._typing_core._dataset_types import _PointSetType as _PointSetType$/;"	i
_PointSetType	pyvista/core/_typing_core/__init__.py	/^from ._dataset_types import _PointSetType as _PointSetType$/;"	i
_PointSetType	pyvista/core/_typing_core/_dataset_types.py	/^_PointSetType = TypeVar('_PointSetType', bound=_PointSet)$/;"	v
_Prop3DMixin	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.prop3d import _Prop3DMixin$/;"	i
_Prop3DMixin	build/lib/pyvista/plotting/prop3d.py	/^class _Prop3DMixin(ABC):$/;"	c
_Prop3DMixin	build/lib/pyvista/plotting/text.py	/^from .prop3d import _Prop3DMixin$/;"	i
_Prop3DMixin	pyvista/plotting/axes_assembly.py	/^from pyvista.plotting.prop3d import _Prop3DMixin$/;"	i
_Prop3DMixin	pyvista/plotting/prop3d.py	/^class _Prop3DMixin(ABC):$/;"	c
_Prop3DMixin	pyvista/plotting/text.py	/^from .prop3d import _Prop3DMixin$/;"	i
_Prop3DMixin	tests/plotting/test_actor.py	/^from pyvista.plotting.prop3d import _Prop3DMixin$/;"	i
_PropCollection	build/lib/pyvista/plotting/prop_collection.py	/^class _PropCollection(MutableSequence[_vtk.vtkProp]):$/;"	c
_PropCollection	build/lib/pyvista/plotting/renderer.py	/^from .prop_collection import _PropCollection$/;"	i
_PropCollection	pyvista/plotting/prop_collection.py	/^class _PropCollection(MutableSequence[_vtk.vtkProp]):$/;"	c
_PropCollection	pyvista/plotting/renderer.py	/^from .prop_collection import _PropCollection$/;"	i
_PropCollection	tests/plotting/test_renderer.py	/^from pyvista.plotting.prop_collection import _PropCollection$/;"	i
_PyVistaPlugin	build/lib/pyvista/typing/mypy_plugin.py	/^    class _PyVistaPlugin(Plugin):$/;"	c	function:promote_type
_PyVistaPlugin	pyvista/typing/mypy_plugin.py	/^    class _PyVistaPlugin(Plugin):$/;"	c	function:promote_type
_REMOVE_DELIMITER_LOOKUP	build/lib/pyvista/plotting/colors.py	/^_REMOVE_DELIMITER_LOOKUP = str.maketrans('', '', _ALLOWED_COLOR_NAME_DELIMITERS)$/;"	v
_REMOVE_DELIMITER_LOOKUP	pyvista/plotting/colors.py	/^_REMOVE_DELIMITER_LOOKUP = str.maketrans('', '', _ALLOWED_COLOR_NAME_DELIMITERS)$/;"	v
_RecursiveIteratorBasicKwargs	build/lib/pyvista/core/composite.py	/^    class _RecursiveIteratorBasicKwargs(TypedDict, total=False):$/;"	c	class:MultiBlock
_RecursiveIteratorBasicKwargs	pyvista/core/composite.py	/^    class _RecursiveIteratorBasicKwargs(TypedDict, total=False):$/;"	c	class:MultiBlock
_ReportDescriptor	tests/test_conftest.py	/^class _ReportDescriptor:$/;"	c
_SENTINEL	build/lib/pyvista/core/datasetattributes.py	/^_SENTINEL = pyvista_ndarray([])$/;"	v
_SENTINEL	pyvista/core/datasetattributes.py	/^_SENTINEL = pyvista_ndarray([])$/;"	v
_ScalarType	build/lib/pyvista/examples/_dataset_loader.py	/^_ScalarType = TypeVar('_ScalarType', int, str, pv.BaseReader)$/;"	v
_ScalarType	pyvista/examples/_dataset_loader.py	/^_ScalarType = TypeVar('_ScalarType', int, str, pv.BaseReader)$/;"	v
_SerializedDictArray	build/lib/pyvista/core/dataobject.py	/^from .utilities.arrays import _SerializedDictArray$/;"	i
_SerializedDictArray	build/lib/pyvista/core/utilities/arrays.py	/^class _SerializedDictArray(UserDict, _vtk.vtkStringArray):  # type: ignore[type-arg]$/;"	c
_SerializedDictArray	pyvista/core/dataobject.py	/^from .utilities.arrays import _SerializedDictArray$/;"	i
_SerializedDictArray	pyvista/core/utilities/arrays.py	/^class _SerializedDictArray(UserDict, _vtk.vtkStringArray):  # type: ignore[type-arg]$/;"	c
_SerializedDictArray	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import _SerializedDictArray$/;"	i
_SetActiveTime	build/lib/pyvista/core/utilities/reader.py	/^    def _SetActiveTime(self, time_value) -> None:$/;"	m	class:_PVDReader
_SetActiveTime	pyvista/core/utilities/reader.py	/^    def _SetActiveTime(self, time_value) -> None:$/;"	m	class:_PVDReader
_Shape	build/lib/pyvista/core/_validation/check.py	/^_Shape = Union[tuple[()], tuple[int, ...]]$/;"	v
_Shape	pyvista/core/_validation/check.py	/^_Shape = Union[tuple[()], tuple[int, ...]]$/;"	v
_ShapeLike	build/lib/pyvista/core/_validation/check.py	/^_ShapeLike = Union[int, _Shape]$/;"	v
_ShapeLike	build/lib/pyvista/core/_validation/validate.py	/^    from .check import _ShapeLike$/;"	i
_ShapeLike	pyvista/core/_validation/check.py	/^_ShapeLike = Union[int, _Shape]$/;"	v
_ShapeLike	pyvista/core/_validation/validate.py	/^    from .check import _ShapeLike$/;"	i
_SilhouetteConfig	build/lib/pyvista/plotting/themes.py	/^class _SilhouetteConfig(_ThemeConfig):$/;"	c
_SilhouetteConfig	pyvista/plotting/themes.py	/^class _SilhouetteConfig(_ThemeConfig):$/;"	c
_SingleFile	build/lib/pyvista/examples/_dataset_loader.py	/^class _SingleFile(_SingleFilePropsProtocol):$/;"	c
_SingleFile	pyvista/examples/_dataset_loader.py	/^class _SingleFile(_SingleFilePropsProtocol):$/;"	c
_SingleFileDatasetLoader	build/lib/pyvista/examples/_dataset_loader.py	/^class _SingleFileDatasetLoader(_SingleFile, _DatasetLoader):$/;"	c
_SingleFileDatasetLoader	pyvista/examples/_dataset_loader.py	/^class _SingleFileDatasetLoader(_SingleFile, _DatasetLoader):$/;"	c
_SingleFileDatasetLoader	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _SingleFileDatasetLoader$/;"	i
_SingleFileDownloadableDatasetLoader	build/lib/pyvista/examples/_dataset_loader.py	/^class _SingleFileDownloadableDatasetLoader(_SingleFileDatasetLoader, _DownloadableFile):$/;"	c
_SingleFileDownloadableDatasetLoader	build/lib/pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _SingleFileDownloadableDatasetLoader$/;"	i
_SingleFileDownloadableDatasetLoader	build/lib/pyvista/examples/examples.py	/^from pyvista.examples._dataset_loader import _SingleFileDownloadableDatasetLoader$/;"	i
_SingleFileDownloadableDatasetLoader	build/lib/pyvista/examples/planets.py	/^from pyvista.examples._dataset_loader import _SingleFileDownloadableDatasetLoader$/;"	i
_SingleFileDownloadableDatasetLoader	pyvista/examples/_dataset_loader.py	/^class _SingleFileDownloadableDatasetLoader(_SingleFileDatasetLoader, _DownloadableFile):$/;"	c
_SingleFileDownloadableDatasetLoader	pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _SingleFileDownloadableDatasetLoader$/;"	i
_SingleFileDownloadableDatasetLoader	pyvista/examples/examples.py	/^from pyvista.examples._dataset_loader import _SingleFileDownloadableDatasetLoader$/;"	i
_SingleFileDownloadableDatasetLoader	pyvista/examples/planets.py	/^from pyvista.examples._dataset_loader import _SingleFileDownloadableDatasetLoader$/;"	i
_SingleFileDownloadableDatasetLoader	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _SingleFileDownloadableDatasetLoader$/;"	i
_SingleFilePropsProtocol	build/lib/pyvista/examples/_dataset_loader.py	/^class _SingleFilePropsProtocol(_BaseFilePropsProtocol[str, int]):$/;"	c
_SingleFilePropsProtocol	doc/source/make_tables.py	/^from pyvista.examples._dataset_loader import _SingleFilePropsProtocol$/;"	i
_SingleFilePropsProtocol	pyvista/examples/_dataset_loader.py	/^class _SingleFilePropsProtocol(_BaseFilePropsProtocol[str, int]):$/;"	c
_SliderConfig	build/lib/pyvista/plotting/themes.py	/^class _SliderConfig(_ThemeConfig):$/;"	c
_SliderConfig	pyvista/plotting/themes.py	/^class _SliderConfig(_ThemeConfig):$/;"	c
_SliderStyleConfig	build/lib/pyvista/plotting/themes.py	/^class _SliderStyleConfig(_ThemeConfig):$/;"	c
_SliderStyleConfig	pyvista/plotting/themes.py	/^class _SliderStyleConfig(_ThemeConfig):$/;"	c
_TABLEAU_COLORS	build/lib/pyvista/plotting/colors.py	/^_TABLEAU_COLORS = {$/;"	v
_TABLEAU_COLORS	doc/source/make_tables.py	/^from pyvista.plotting.colors import _TABLEAU_COLORS$/;"	i
_TABLEAU_COLORS	pyvista/plotting/colors.py	/^_TABLEAU_COLORS = {$/;"	v
_TestCaseTuple	tests/doc/tst_doc_images.py	/^class _TestCaseTuple(NamedTuple):$/;"	c
_TestingTheme	build/lib/pyvista/plotting/themes.py	/^class _TestingTheme(Theme):$/;"	c
_TestingTheme	pyvista/plotting/themes.py	/^class _TestingTheme(Theme):$/;"	c
_ThemeConfig	build/lib/pyvista/plotting/themes.py	/^class _ThemeConfig(metaclass=_ForceSlots):$/;"	c
_ThemeConfig	pyvista/plotting/themes.py	/^class _ThemeConfig(metaclass=_ForceSlots):$/;"	c
_TrameConfig	build/lib/pyvista/plotting/themes.py	/^class _TrameConfig(_ThemeConfig):$/;"	c
_TrameConfig	pyvista/plotting/themes.py	/^class _TrameConfig(_ThemeConfig):$/;"	c
_TypeMultiBlockLeaf	build/lib/pyvista/core/composite.py	/^_TypeMultiBlockLeaf = Union['MultiBlock', DataSet, None]$/;"	v
_TypeMultiBlockLeaf	build/lib/pyvista/core/filters/composite.py	/^    from pyvista.core.composite import _TypeMultiBlockLeaf$/;"	i
_TypeMultiBlockLeaf	pyvista/core/composite.py	/^_TypeMultiBlockLeaf = Union['MultiBlock', DataSet, None]$/;"	v
_TypeMultiBlockLeaf	pyvista/core/filters/composite.py	/^    from pyvista.core.composite import _TypeMultiBlockLeaf$/;"	i
_TypeType	tests/plotting/test_plotting.py	/^_TypeType = TypeVar('_TypeType', bound=type)$/;"	v
_USE_STRICT_N_FACES	build/lib/pyvista/core/pointset.py	/^    _USE_STRICT_N_FACES = False$/;"	v	class:PolyData
_USE_STRICT_N_FACES	pyvista/core/pointset.py	/^    _USE_STRICT_N_FACES = False$/;"	v	class:PolyData
_VTKVerbosity	build/lib/pyvista/core/_vtk_core.py	/^class _VTKVerbosity(contextlib.AbstractContextManager[None]):$/;"	c
_VTKVerbosity	pyvista/core/_vtk_core.py	/^class _VTKVerbosity(contextlib.AbstractContextManager[None]):$/;"	c
_VTKWriterAlias	build/lib/pyvista/core/dataobject.py	/^from .utilities.fileio import _VTKWriterAlias$/;"	i
_VTKWriterAlias	build/lib/pyvista/core/utilities/fileio.py	/^_VTKWriterAlias = Union[_vtk.vtkXMLWriter, _vtk.vtkDataWriter]$/;"	v
_VTKWriterAlias	pyvista/core/dataobject.py	/^from .utilities.fileio import _VTKWriterAlias$/;"	i
_VTKWriterAlias	pyvista/core/utilities/fileio.py	/^_VTKWriterAlias = Union[_vtk.vtkXMLWriter, _vtk.vtkDataWriter]$/;"	v
_VTKWriterType	build/lib/pyvista/core/utilities/fileio.py	/^_VTKWriterType = TypeVar('_VTKWriterType', bound=_VTKWriterAlias)$/;"	v
_VTKWriterType	pyvista/core/utilities/fileio.py	/^_VTKWriterType = TypeVar('_VTKWriterType', bound=_VTKWriterAlias)$/;"	v
_VTK_COLORS	build/lib/pyvista/plotting/colors.py	/^_VTK_COLORS = {$/;"	v
_VTK_COLORS	doc/source/make_tables.py	/^from pyvista.plotting.colors import _VTK_COLORS$/;"	i
_VTK_COLORS	pyvista/plotting/colors.py	/^_VTK_COLORS = {$/;"	v
_VerbosityOptions	build/lib/pyvista/core/_vtk_core.py	/^    _VerbosityOptions = ($/;"	v
_VerbosityOptions	pyvista/core/_vtk_core.py	/^    _VerbosityOptions = ($/;"	v
_WARNED_DEPRECATED_NONSTRICT_N_FACES	build/lib/pyvista/core/pointset.py	/^    _WARNED_DEPRECATED_NONSTRICT_N_FACES = False$/;"	v	class:PolyData
_WARNED_DEPRECATED_NONSTRICT_N_FACES	pyvista/core/pointset.py	/^    _WARNED_DEPRECATED_NONSTRICT_N_FACES = False$/;"	v	class:PolyData
_WRITERS	build/lib/pyvista/core/composite.py	/^    _WRITERS = dict.fromkeys(['.vtm', '.vtmb'], _vtk.vtkXMLMultiBlockDataWriter)$/;"	v	class:MultiBlock
_WRITERS	build/lib/pyvista/core/partitioned.py	/^        _WRITERS = {'.vtpd': _vtk.vtkXMLPartitionedDataSetWriter}  # type: ignore[dict-item]$/;"	v	class:PartitionedDataSet
_WRITERS	pyvista/core/composite.py	/^    _WRITERS = dict.fromkeys(['.vtm', '.vtmb'], _vtk.vtkXMLMultiBlockDataWriter)$/;"	v	class:MultiBlock
_WRITERS	pyvista/core/partitioned.py	/^        _WRITERS = {'.vtpd': _vtk.vtkXMLPartitionedDataSetWriter}  # type: ignore[dict-item]$/;"	v	class:PartitionedDataSet
_WholeBodyCTUtilities	build/lib/pyvista/examples/downloads.py	/^class _WholeBodyCTUtilities:  # pragma: no cover$/;"	c
_WholeBodyCTUtilities	pyvista/examples/downloads.py	/^class _WholeBodyCTUtilities:  # pragma: no cover$/;"	c
_WrappableVTKDataObjectType	build/lib/pyvista/core/utilities/helpers.py	/^    from ..wrappers import _WrappableVTKDataObjectType$/;"	i
_WrappableVTKDataObjectType	build/lib/pyvista/core/wrappers.py	/^_WrappableVTKDataObjectType = TypeVar(  # noqa: PYI018$/;"	v
_WrappableVTKDataObjectType	pyvista/core/utilities/helpers.py	/^    from ..wrappers import _WrappableVTKDataObjectType$/;"	i
_WrappableVTKDataObjectType	pyvista/core/wrappers.py	/^_WrappableVTKDataObjectType = TypeVar(  # noqa: PYI018$/;"	v
_XYZAssembly	build/lib/pyvista/plotting/axes_assembly.py	/^class _XYZAssembly(_Prop3DMixin, _NameMixin, _vtk.vtkPropAssembly):$/;"	c
_XYZAssembly	pyvista/plotting/axes_assembly.py	/^class _XYZAssembly(_Prop3DMixin, _NameMixin, _vtk.vtkPropAssembly):$/;"	c
_XYZTuple	build/lib/pyvista/plotting/axes_assembly.py	/^class _XYZTuple(NamedTuple):$/;"	c
_XYZTuple	pyvista/plotting/axes_assembly.py	/^class _XYZTuple(NamedTuple):$/;"	c
__	build/lib/pyvista/ext/coverage.py	/^from sphinx.locale import __$/;"	i
__	pyvista/ext/coverage.py	/^from sphinx.locale import __$/;"	i
__add__	build/lib/pyvista/core/filters/data_set.py	/^    def __add__(  # type: ignore[misc]$/;"	m	class:DataSetFilters	file:
__add__	build/lib/pyvista/core/filters/poly_data.py	/^    def __add__(self: PolyData, dataset):  # type: ignore[misc]$/;"	m	class:PolyDataFilters	file:
__add__	build/lib/pyvista/core/utilities/transform.py	/^    def __add__(self: Transform, other: VectorLike[float]) -> Transform:$/;"	m	class:Transform	file:
__add__	pyvista/core/filters/data_set.py	/^    def __add__(  # type: ignore[misc]$/;"	m	class:DataSetFilters	file:
__add__	pyvista/core/filters/poly_data.py	/^    def __add__(self: PolyData, dataset):  # type: ignore[misc]$/;"	m	class:PolyDataFilters	file:
__add__	pyvista/core/utilities/transform.py	/^    def __add__(self: Transform, other: VectorLike[float]) -> Transform:$/;"	m	class:Transform	file:
__all__	build/lib/pyvista/core/filters/__init__.py	/^__all__ = [$/;"	v
__all__	build/lib/pyvista/trame/__init__.py	/^__all__ = [$/;"	v
__all__	pyvista/core/filters/__init__.py	/^__all__ = [$/;"	v
__all__	pyvista/trame/__init__.py	/^__all__ = [$/;"	v
__and__	build/lib/pyvista/core/pointset.py	/^    def __and__(self, other_mesh):$/;"	m	class:PolyData	file:
__and__	pyvista/core/pointset.py	/^    def __and__(self, other_mesh):$/;"	m	class:PolyData	file:
__array_finalize__	build/lib/pyvista/core/pyvista_ndarray.py	/^    def __array_finalize__(self: pyvista_ndarray, obj: npt.NDArray[Any] | None) -> None:$/;"	m	class:pyvista_ndarray	file:
__array_finalize__	build/lib/pyvista/plotting/lookup_table.py	/^    def __array_finalize__(self, obj):$/;"	m	class:lookup_table_ndarray	file:
__array_finalize__	pyvista/core/pyvista_ndarray.py	/^    def __array_finalize__(self: pyvista_ndarray, obj: npt.NDArray[Any] | None) -> None:$/;"	m	class:pyvista_ndarray	file:
__array_finalize__	pyvista/plotting/lookup_table.py	/^    def __array_finalize__(self, obj):$/;"	m	class:lookup_table_ndarray	file:
__array_wrap__	build/lib/pyvista/core/pyvista_ndarray.py	/^    def __array_wrap__(self: pyvista_ndarray, out_arr, context=None, return_scalar: bool = False):  # noqa: ANN001, ANN204$/;"	m	class:pyvista_ndarray	file:
__array_wrap__	build/lib/pyvista/plotting/lookup_table.py	/^    def __array_wrap__(self, out_arr, context=None, return_scalar: bool = False):$/;"	m	class:lookup_table_ndarray	file:
__array_wrap__	pyvista/core/pyvista_ndarray.py	/^    def __array_wrap__(self: pyvista_ndarray, out_arr, context=None, return_scalar: bool = False):  # noqa: ANN001, ANN204$/;"	m	class:pyvista_ndarray	file:
__array_wrap__	pyvista/plotting/lookup_table.py	/^    def __array_wrap__(self, out_arr, context=None, return_scalar: bool = False):$/;"	m	class:lookup_table_ndarray	file:
__bool__	build/lib/pyvista/core/datasetattributes.py	/^    def __bool__(self: Self) -> bool:$/;"	m	class:DataSetAttributes	file:
__bool__	pyvista/core/datasetattributes.py	/^    def __bool__(self: Self) -> bool:$/;"	m	class:DataSetAttributes	file:
__call__	build/lib/pyvista/core/_vtk_core.py	/^    def __call__(self, verbosity: _VerbosityOptions | None = None):$/;"	m	class:_VTKVerbosity	file:
__call__	build/lib/pyvista/core/utilities/misc.py	/^    def __call__(self, func):  # noqa: ANN001, ANN204$/;"	m	class:conditional_decorator	file:
__call__	build/lib/pyvista/core/utilities/observers.py	/^    def __call__(self, _obj, _event, message) -> None:$/;"	m	class:Observer	file:
__call__	build/lib/pyvista/core/utilities/observers.py	/^    def __call__(self, obj, *args) -> None:$/;"	m	class:ProgressMonitor	file:
__call__	build/lib/pyvista/plotting/charts.py	/^    def __call__(cls, *args, _wrap=None, **kwargs):$/;"	m	class:_vtkWrapperMeta	file:
__call__	build/lib/pyvista/plotting/lookup_table.py	/^    def __call__(self, value):$/;"	m	class:LookupTable	file:
__call__	build/lib/pyvista/plotting/picking.py	/^    def __call__(self, picked_point, picker):$/;"	m	class:PointPickingElementHandler	file:
__call__	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    def __call__(self, block, block_vars, gallery_conf):  # pragma: no cover$/;"	m	class:DynamicScraper	file:
__call__	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    def __call__(self, block, block_vars, gallery_conf):$/;"	m	class:Scraper	file:
__call__	doc/source/conf.py	/^    def __call__(self, gallery_conf, fname):$/;"	m	class:ResetPyVista	file:
__call__	examples/03-widgets/checkbox_widget.py	/^    def __call__(self, state):$/;"	m	class:SetVisibilityCallback	file:
__call__	examples/03-widgets/multi_slider_widget.py	/^    def __call__(self, param, value):$/;"	m	class:MyCustomRoutine	file:
__call__	pyvista/core/_vtk_core.py	/^    def __call__(self, verbosity: _VerbosityOptions | None = None):$/;"	m	class:_VTKVerbosity	file:
__call__	pyvista/core/utilities/misc.py	/^    def __call__(self, func):  # noqa: ANN001, ANN204$/;"	m	class:conditional_decorator	file:
__call__	pyvista/core/utilities/observers.py	/^    def __call__(self, _obj, _event, message) -> None:$/;"	m	class:Observer	file:
__call__	pyvista/core/utilities/observers.py	/^    def __call__(self, obj, *args) -> None:$/;"	m	class:ProgressMonitor	file:
__call__	pyvista/plotting/charts.py	/^    def __call__(cls, *args, _wrap=None, **kwargs):$/;"	m	class:_vtkWrapperMeta	file:
__call__	pyvista/plotting/lookup_table.py	/^    def __call__(self, value):$/;"	m	class:LookupTable	file:
__call__	pyvista/plotting/picking.py	/^    def __call__(self, picked_point, picker):$/;"	m	class:PointPickingElementHandler	file:
__call__	pyvista/plotting/utilities/sphinx_gallery.py	/^    def __call__(self, block, block_vars, gallery_conf):  # pragma: no cover$/;"	m	class:DynamicScraper	file:
__call__	pyvista/plotting/utilities/sphinx_gallery.py	/^    def __call__(self, block, block_vars, gallery_conf):$/;"	m	class:Scraper	file:
__call__	tests/core/test_dataset_filters.py	/^    def __call__(self, algorithm, *args, **kwargs):$/;"	m	class:GetOutput	file:
__call__	tests/plotting/test_charts.py	/^    def __call__(self):$/;"	m	class:PlotterChanged	file:
__call__	tests/plotting/test_picking.py	/^        def __call__(self, *args, **kwargs):$/;"	m	class:test_single_cell_picking.PickCallback	file:
__call__	tests/plotting/test_picking.py	/^        def __call__(self, picked):$/;"	m	class:test_element_picking.Tracker	file:
__call__	tests/plotting/test_picking.py	/^        def __call__(self, picked_point):$/;"	m	class:test_point_picking_window.Tracker	file:
__call__	tests/plotting/test_regression.py	/^        def __call__(self, v):$/;"	m	class:test_commpare_images_raises.foo	file:
__call__	tests/plotting/test_render_window_interactor.py	/^        def __call__(self, *_):$/;"	m	class:test_release_button_observers.CallBack	file:
__call__	tests/plotting/test_widgets.py	/^        def __call__(self, *args, **kwargs):$/;"	m	class:test_measurement_widget.DistanceCallback	file:
__can_partial	build/lib/pyvista/examples/downloads.py	/^__can_partial = _SingleFileDownloadableDatasetLoader('hdf\/can_0.hdf')$/;"	v
__can_partial	pyvista/examples/downloads.py	/^__can_partial = _SingleFileDownloadableDatasetLoader('hdf\/can_0.hdf')$/;"	v
__contains__	build/lib/pyvista/core/datasetattributes.py	/^    def __contains__(self: Self, name: str) -> bool:$/;"	m	class:DataSetAttributes	file:
__contains__	build/lib/pyvista/plotting/scalar_bars.py	/^    def __contains__(self, key) -> bool:$/;"	m	class:ScalarBars	file:
__contains__	pyvista/core/datasetattributes.py	/^    def __contains__(self: Self, name: str) -> bool:$/;"	m	class:DataSetAttributes	file:
__contains__	pyvista/plotting/scalar_bars.py	/^    def __contains__(self, key) -> bool:$/;"	m	class:ScalarBars	file:
__dataset_action_figure_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_action_figure_high_res = _SingleFileDownloadableDatasetLoader('tigerfighter.obj')$/;"	v
__dataset_action_figure_high_res	pyvista/examples/downloads.py	/^__dataset_action_figure_high_res = _SingleFileDownloadableDatasetLoader('tigerfighter.obj')$/;"	v
__dataset_bird_bath_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_bird_bath_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_bird_bath_high_res	pyvista/examples/downloads.py	/^__dataset_bird_bath_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_black_vase_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_black_vase_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_black_vase_high_res	pyvista/examples/downloads.py	/^__dataset_black_vase_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_ivan_angel_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_ivan_angel_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_ivan_angel_high_res	pyvista/examples/downloads.py	/^__dataset_ivan_angel_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_owl_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_owl_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_owl_high_res	pyvista/examples/downloads.py	/^__dataset_owl_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_plastic_vase_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_plastic_vase_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_plastic_vase_high_res	pyvista/examples/downloads.py	/^__dataset_plastic_vase_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_sea_vase_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_sea_vase_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_sea_vase_high_res	pyvista/examples/downloads.py	/^__dataset_sea_vase_high_res = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_venus_surface_no_atmosphere	build/lib/pyvista/examples/planets.py	/^__dataset_venus_surface_no_atmosphere = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_venus_surface_no_atmosphere	pyvista/examples/planets.py	/^__dataset_venus_surface_no_atmosphere = _SingleFileDownloadableDatasetLoader($/;"	v
__dataset_whole_body_ct_female_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_whole_body_ct_female_high_res = _MultiFileDownloadableDatasetLoader($/;"	v
__dataset_whole_body_ct_female_high_res	pyvista/examples/downloads.py	/^__dataset_whole_body_ct_female_high_res = _MultiFileDownloadableDatasetLoader($/;"	v
__dataset_whole_body_ct_male_high_res	build/lib/pyvista/examples/downloads.py	/^__dataset_whole_body_ct_male_high_res = _MultiFileDownloadableDatasetLoader($/;"	v
__dataset_whole_body_ct_male_high_res	pyvista/examples/downloads.py	/^__dataset_whole_body_ct_male_high_res = _MultiFileDownloadableDatasetLoader($/;"	v
__del__	build/lib/pyvista/core/pointset.py	/^    def __del__(self) -> None:$/;"	m	class:PolyData	file:
__del__	build/lib/pyvista/plotting/axes.py	/^    def __del__(self):$/;"	m	class:Axes	file:
__del__	build/lib/pyvista/plotting/camera.py	/^    def __del__(self):$/;"	m	class:Camera	file:
__del__	build/lib/pyvista/plotting/charts.py	/^    def __del__(self) -> None:$/;"	m	class:Charts	file:
__del__	build/lib/pyvista/plotting/lights.py	/^    def __del__(self):$/;"	m	class:Light	file:
__del__	build/lib/pyvista/plotting/mapper.py	/^    def __del__(self) -> None:$/;"	m	class:_BaseVolumeMapper	file:
__del__	build/lib/pyvista/plotting/plotter.py	/^    def __del__(self):$/;"	m	class:BasePlotter	file:
__del__	build/lib/pyvista/plotting/prop_collection.py	/^    def __del__(self):$/;"	m	class:_PropCollection	file:
__del__	build/lib/pyvista/plotting/renderer.py	/^    def __del__(self) -> None:$/;"	m	class:Renderer	file:
__del__	build/lib/pyvista/plotting/renderers.py	/^    def __del__(self):$/;"	m	class:Renderers	file:
__del__	pyvista/core/pointset.py	/^    def __del__(self) -> None:$/;"	m	class:PolyData	file:
__del__	pyvista/plotting/axes.py	/^    def __del__(self):$/;"	m	class:Axes	file:
__del__	pyvista/plotting/camera.py	/^    def __del__(self):$/;"	m	class:Camera	file:
__del__	pyvista/plotting/charts.py	/^    def __del__(self) -> None:$/;"	m	class:Charts	file:
__del__	pyvista/plotting/lights.py	/^    def __del__(self):$/;"	m	class:Light	file:
__del__	pyvista/plotting/mapper.py	/^    def __del__(self) -> None:$/;"	m	class:_BaseVolumeMapper	file:
__del__	pyvista/plotting/plotter.py	/^    def __del__(self):$/;"	m	class:BasePlotter	file:
__del__	pyvista/plotting/prop_collection.py	/^    def __del__(self):$/;"	m	class:_PropCollection	file:
__del__	pyvista/plotting/renderer.py	/^    def __del__(self) -> None:$/;"	m	class:Renderer	file:
__del__	pyvista/plotting/renderers.py	/^    def __del__(self):$/;"	m	class:Renderers	file:
__delitem__	build/lib/pyvista/core/composite.py	/^    def __delitem__(self: MultiBlock, index: int | str | slice) -> None:$/;"	m	class:MultiBlock	file:
__delitem__	build/lib/pyvista/core/datasetattributes.py	/^    def __delitem__(self: Self, key: str) -> None:$/;"	m	class:DataSetAttributes	file:
__delitem__	build/lib/pyvista/core/objects.py	/^    def __delitem__(self, name) -> None:$/;"	m	class:Table	file:
__delitem__	build/lib/pyvista/core/partitioned.py	/^    def __delitem__(self, index: int | slice) -> None:$/;"	m	class:PartitionedDataSet	file:
__delitem__	build/lib/pyvista/core/utilities/arrays.py	/^    def __delitem__(self: _SerializedDictArray, key: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__delitem__	build/lib/pyvista/plotting/prop_collection.py	/^    def __delitem__(self, key):$/;"	m	class:_PropCollection	file:
__delitem__	pyvista/core/composite.py	/^    def __delitem__(self: MultiBlock, index: int | str | slice) -> None:$/;"	m	class:MultiBlock	file:
__delitem__	pyvista/core/datasetattributes.py	/^    def __delitem__(self: Self, key: str) -> None:$/;"	m	class:DataSetAttributes	file:
__delitem__	pyvista/core/objects.py	/^    def __delitem__(self, name) -> None:$/;"	m	class:Table	file:
__delitem__	pyvista/core/partitioned.py	/^    def __delitem__(self, index: int | slice) -> None:$/;"	m	class:PartitionedDataSet	file:
__delitem__	pyvista/core/utilities/arrays.py	/^    def __delitem__(self: _SerializedDictArray, key: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__delitem__	pyvista/plotting/prop_collection.py	/^    def __delitem__(self, key):$/;"	m	class:_PropCollection	file:
__enter__	build/lib/pyvista/core/_vtk_core.py	/^    def __enter__(self):$/;"	m	class:_VTKVerbosity	file:
__enter__	build/lib/pyvista/core/utilities/observers.py	/^    def __enter__(self) -> None:$/;"	m	class:VtkErrorCatcher	file:
__enter__	build/lib/pyvista/core/utilities/observers.py	/^    def __enter__(self):$/;"	m	class:ProgressMonitor	file:
__enter__	pyvista/core/_vtk_core.py	/^    def __enter__(self):$/;"	m	class:_VTKVerbosity	file:
__enter__	pyvista/core/utilities/observers.py	/^    def __enter__(self) -> None:$/;"	m	class:VtkErrorCatcher	file:
__enter__	pyvista/core/utilities/observers.py	/^    def __enter__(self):$/;"	m	class:ProgressMonitor	file:
__eq__	build/lib/pyvista/core/composite.py	/^    def __eq__(self: MultiBlock, other: object) -> bool:$/;"	m	class:MultiBlock	file:
__eq__	build/lib/pyvista/core/dataobject.py	/^    def __eq__(self: Self, other: object) -> bool:$/;"	m	class:DataObject	file:
__eq__	build/lib/pyvista/core/dataset.py	/^    def __eq__(self: ActiveArrayInfo, other: object) -> bool:$/;"	m	class:ActiveArrayInfo	file:
__eq__	build/lib/pyvista/core/datasetattributes.py	/^    def __eq__(self: Self, other: object) -> bool:$/;"	m	class:DataSetAttributes	file:
__eq__	build/lib/pyvista/plotting/camera.py	/^    def __eq__(self, other) -> bool:$/;"	m	class:Camera	file:
__eq__	build/lib/pyvista/plotting/colors.py	/^    def __eq__(self, other):$/;"	m	class:Color	file:
__eq__	build/lib/pyvista/plotting/lights.py	/^    def __eq__(self, other) -> bool:$/;"	m	class:Light	file:
__eq__	build/lib/pyvista/plotting/renderer.py	/^    def __eq__(self, other):$/;"	m	class:CameraPosition	file:
__eq__	build/lib/pyvista/plotting/themes.py	/^    def __eq__(self, other) -> bool:$/;"	m	class:_ThemeConfig	file:
__eq__	pyvista/core/composite.py	/^    def __eq__(self: MultiBlock, other: object) -> bool:$/;"	m	class:MultiBlock	file:
__eq__	pyvista/core/dataobject.py	/^    def __eq__(self: Self, other: object) -> bool:$/;"	m	class:DataObject	file:
__eq__	pyvista/core/dataset.py	/^    def __eq__(self: ActiveArrayInfo, other: object) -> bool:$/;"	m	class:ActiveArrayInfo	file:
__eq__	pyvista/core/datasetattributes.py	/^    def __eq__(self: Self, other: object) -> bool:$/;"	m	class:DataSetAttributes	file:
__eq__	pyvista/plotting/camera.py	/^    def __eq__(self, other) -> bool:$/;"	m	class:Camera	file:
__eq__	pyvista/plotting/colors.py	/^    def __eq__(self, other):$/;"	m	class:Color	file:
__eq__	pyvista/plotting/lights.py	/^    def __eq__(self, other) -> bool:$/;"	m	class:Light	file:
__eq__	pyvista/plotting/renderer.py	/^    def __eq__(self, other):$/;"	m	class:CameraPosition	file:
__eq__	pyvista/plotting/themes.py	/^    def __eq__(self, other) -> bool:$/;"	m	class:_ThemeConfig	file:
__exit__	build/lib/pyvista/core/_vtk_core.py	/^    def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:_VTKVerbosity	file:
__exit__	build/lib/pyvista/core/utilities/observers.py	/^    def __exit__(self, *args) -> None:$/;"	m	class:ProgressMonitor	file:
__exit__	build/lib/pyvista/core/utilities/observers.py	/^    def __exit__(self, *args):$/;"	m	class:VtkErrorCatcher	file:
__exit__	pyvista/core/_vtk_core.py	/^    def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:_VTKVerbosity	file:
__exit__	pyvista/core/utilities/observers.py	/^    def __exit__(self, *args) -> None:$/;"	m	class:ProgressMonitor	file:
__exit__	pyvista/core/utilities/observers.py	/^    def __exit__(self, *args):$/;"	m	class:VtkErrorCatcher	file:
__get__	build/lib/pyvista/core/utilities/misc.py	/^    def __get__(self: property, owner_self: Any, owner_cls: type | None = None) -> Any:$/;"	m	class:_classproperty	file:
__get__	pyvista/core/utilities/misc.py	/^    def __get__(self: property, owner_self: Any, owner_cls: type | None = None) -> Any:$/;"	m	class:_classproperty	file:
__get__	tests/test_conftest.py	/^    def __get__(self, obj: RunResultsReport, objtype=None):$/;"	m	class:_ReportDescriptor	file:
__getattr__	build/lib/pyvista/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	build/lib/pyvista/core/dataobject.py	/^    def __getattr__(self: Self, item: str) -> Any:$/;"	m	class:DataObject	file:
__getattr__	build/lib/pyvista/core/dataset.py	/^    def __getattr__(self: Self, item: str) -> Any:$/;"	m	class:DataSet	file:
__getattr__	build/lib/pyvista/core/pyvista_ndarray.py	/^    __getattr__ = _vtk.VTKArray.__getattr__$/;"	v	class:pyvista_ndarray
__getattr__	build/lib/pyvista/errors.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	build/lib/pyvista/plotting/lookup_table.py	/^    __getattr__ = _vtk.VTKArray.__getattr__$/;"	v	class:lookup_table_ndarray
__getattr__	build/lib/pyvista/plotting/plotting/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	build/lib/pyvista/utilities/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	build/lib/pyvista/utilities/algorithms.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/arrays.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/cell_type_helper.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/cells.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/common.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/docs.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/errors.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/features.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/fileio.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/geometric_objects.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/helpers.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/misc.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/parametric_objects.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/reader.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/regression.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/sphinx_gallery.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/transformations.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/wrappers.py	/^from . import __getattr__$/;"	i
__getattr__	build/lib/pyvista/utilities/xvfb.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	pyvista/core/dataobject.py	/^    def __getattr__(self: Self, item: str) -> Any:$/;"	m	class:DataObject	file:
__getattr__	pyvista/core/dataset.py	/^    def __getattr__(self: Self, item: str) -> Any:$/;"	m	class:DataSet	file:
__getattr__	pyvista/core/pyvista_ndarray.py	/^    __getattr__ = _vtk.VTKArray.__getattr__$/;"	v	class:pyvista_ndarray
__getattr__	pyvista/errors.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	pyvista/plotting/lookup_table.py	/^    __getattr__ = _vtk.VTKArray.__getattr__$/;"	v	class:lookup_table_ndarray
__getattr__	pyvista/plotting/plotting/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	pyvista/utilities/__init__.py	/^def __getattr__(name):$/;"	f	file:
__getattr__	pyvista/utilities/algorithms.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/arrays.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/cell_type_helper.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/cells.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/common.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/docs.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/errors.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/features.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/fileio.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/geometric_objects.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/helpers.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/misc.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/parametric_objects.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/reader.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/regression.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/sphinx_gallery.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/transformations.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/wrappers.py	/^from . import __getattr__$/;"	i
__getattr__	pyvista/utilities/xvfb.py	/^from . import __getattr__$/;"	i
__getattribute__	build/lib/pyvista/plotting/charts.py	/^    def __getattribute__(self, item):$/;"	m	class:_vtkWrapper	file:
__getattribute__	pyvista/plotting/charts.py	/^    def __getattribute__(self, item):$/;"	m	class:_vtkWrapper	file:
__getitem__	build/lib/pyvista/core/composite.py	/^    def __getitem__($/;"	m	class:MultiBlock	file:
__getitem__	build/lib/pyvista/core/composite.py	/^    def __getitem__(self: MultiBlock, index):$/;"	m	class:MultiBlock	file:
__getitem__	build/lib/pyvista/core/composite.py	/^    def __getitem__(self: MultiBlock, index: slice) -> MultiBlock: ...  # pragma: no cover$/;"	m	class:MultiBlock	file:
__getitem__	build/lib/pyvista/core/dataset.py	/^    def __getitem__($/;"	m	class:DataSet	file:
__getitem__	build/lib/pyvista/core/dataset.py	/^    def __getitem__(self: ActiveArrayInfo, item: int) -> FieldAssociation | str:$/;"	m	class:ActiveArrayInfo	file:
__getitem__	build/lib/pyvista/core/datasetattributes.py	/^    def __getitem__(self: Self, key: str) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes	file:
__getitem__	build/lib/pyvista/core/objects.py	/^    def __getitem__(self, index):$/;"	m	class:Table	file:
__getitem__	build/lib/pyvista/core/partitioned.py	/^    def __getitem__(self, index):$/;"	m	class:PartitionedDataSet	file:
__getitem__	build/lib/pyvista/core/partitioned.py	/^    def __getitem__(self, index: int) -> DataSet | None: ...  # pragma: no cover$/;"	m	class:PartitionedDataSet	file:
__getitem__	build/lib/pyvista/core/partitioned.py	/^    def __getitem__(self, index: slice) -> PartitionedDataSet: ...  # pragma: no cover$/;"	m	class:PartitionedDataSet	file:
__getitem__	build/lib/pyvista/core/pointset.py	/^    def __getitem__(self, key):$/;"	m	class:StructuredGrid	file:
__getitem__	build/lib/pyvista/plotting/charts.py	/^    def __getitem__(self, index) -> Chart:$/;"	m	class:Charts	file:
__getitem__	build/lib/pyvista/plotting/colors.py	/^    def __getitem__(self, item):$/;"	m	class:Color	file:
__getitem__	build/lib/pyvista/plotting/composite_mapper.py	/^    def __getitem__(self, index):$/;"	m	class:CompositeAttributes	file:
__getitem__	build/lib/pyvista/plotting/prop_collection.py	/^    def __getitem__(self, key):$/;"	m	class:_PropCollection	file:
__getitem__	build/lib/pyvista/plotting/renderer.py	/^    def __getitem__(self, index):$/;"	m	class:CameraPosition	file:
__getitem__	build/lib/pyvista/plotting/renderers.py	/^    def __getitem__(self, index):$/;"	m	class:Renderers	file:
__getitem__	build/lib/pyvista/plotting/scalar_bars.py	/^    def __getitem__(self, index):$/;"	m	class:ScalarBars	file:
__getitem__	build/lib/pyvista/plotting/themes.py	/^    def __getitem__(self, key):$/;"	m	class:_ThemeConfig	file:
__getitem__	pyvista/core/composite.py	/^    def __getitem__($/;"	m	class:MultiBlock	file:
__getitem__	pyvista/core/composite.py	/^    def __getitem__(self: MultiBlock, index):$/;"	m	class:MultiBlock	file:
__getitem__	pyvista/core/composite.py	/^    def __getitem__(self: MultiBlock, index: slice) -> MultiBlock: ...  # pragma: no cover$/;"	m	class:MultiBlock	file:
__getitem__	pyvista/core/dataset.py	/^    def __getitem__($/;"	m	class:DataSet	file:
__getitem__	pyvista/core/dataset.py	/^    def __getitem__(self: ActiveArrayInfo, item: int) -> FieldAssociation | str:$/;"	m	class:ActiveArrayInfo	file:
__getitem__	pyvista/core/datasetattributes.py	/^    def __getitem__(self: Self, key: str) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes	file:
__getitem__	pyvista/core/objects.py	/^    def __getitem__(self, index):$/;"	m	class:Table	file:
__getitem__	pyvista/core/partitioned.py	/^    def __getitem__(self, index):$/;"	m	class:PartitionedDataSet	file:
__getitem__	pyvista/core/partitioned.py	/^    def __getitem__(self, index: int) -> DataSet | None: ...  # pragma: no cover$/;"	m	class:PartitionedDataSet	file:
__getitem__	pyvista/core/partitioned.py	/^    def __getitem__(self, index: slice) -> PartitionedDataSet: ...  # pragma: no cover$/;"	m	class:PartitionedDataSet	file:
__getitem__	pyvista/core/pointset.py	/^    def __getitem__(self, key):$/;"	m	class:StructuredGrid	file:
__getitem__	pyvista/plotting/charts.py	/^    def __getitem__(self, index) -> Chart:$/;"	m	class:Charts	file:
__getitem__	pyvista/plotting/colors.py	/^    def __getitem__(self, item):$/;"	m	class:Color	file:
__getitem__	pyvista/plotting/composite_mapper.py	/^    def __getitem__(self, index):$/;"	m	class:CompositeAttributes	file:
__getitem__	pyvista/plotting/prop_collection.py	/^    def __getitem__(self, key):$/;"	m	class:_PropCollection	file:
__getitem__	pyvista/plotting/renderer.py	/^    def __getitem__(self, index):$/;"	m	class:CameraPosition	file:
__getitem__	pyvista/plotting/renderers.py	/^    def __getitem__(self, index):$/;"	m	class:Renderers	file:
__getitem__	pyvista/plotting/scalar_bars.py	/^    def __getitem__(self, index):$/;"	m	class:ScalarBars	file:
__getitem__	pyvista/plotting/themes.py	/^    def __getitem__(self, key):$/;"	m	class:_ThemeConfig	file:
__getstate__	build/lib/pyvista/core/dataobject.py	/^    def __getstate__(  # type: ignore[return]$/;"	m	class:DataObject	file:
__getstate__	build/lib/pyvista/core/dataset.py	/^    def __getstate__(self: ActiveArrayInfo) -> dict[str, Any]:$/;"	m	class:ActiveArrayInfo	file:
__getstate__	build/lib/pyvista/core/utilities/arrays.py	/^    def __getstate__(self: _SerializedDictArray) -> None:$/;"	m	class:_SerializedDictArray	file:
__getstate__	pyvista/core/dataobject.py	/^    def __getstate__(  # type: ignore[return]$/;"	m	class:DataObject	file:
__getstate__	pyvista/core/dataset.py	/^    def __getstate__(self: ActiveArrayInfo) -> dict[str, Any]:$/;"	m	class:ActiveArrayInfo	file:
__getstate__	pyvista/core/utilities/arrays.py	/^    def __getstate__(self: _SerializedDictArray) -> None:$/;"	m	class:_SerializedDictArray	file:
__gourds2	build/lib/pyvista/examples/downloads.py	/^__gourds2 = _SingleFileDownloadableDatasetLoader('Gourds2.jpg')$/;"	v
__gourds2	pyvista/examples/downloads.py	/^__gourds2 = _SingleFileDownloadableDatasetLoader('Gourds2.jpg')$/;"	v
__gourds2_texture	build/lib/pyvista/examples/downloads.py	/^__gourds2_texture = _SingleFileDownloadableDatasetLoader('Gourds2.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
__gourds2_texture	pyvista/examples/downloads.py	/^__gourds2_texture = _SingleFileDownloadableDatasetLoader('Gourds2.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
__hash__	build/lib/pyvista/plotting/colors.py	/^    def __hash__(self):  # pragma: no cover$/;"	m	class:Color	file:
__hash__	pyvista/plotting/colors.py	/^    def __hash__(self):  # pragma: no cover$/;"	m	class:Color	file:
__iadd__	build/lib/pyvista/core/filters/data_set.py	/^    def __iadd__(  # type: ignore[misc]$/;"	m	class:DataSetFilters	file:
__iadd__	build/lib/pyvista/core/filters/poly_data.py	/^    def __iadd__(self: PolyData, dataset):  # type: ignore[misc]$/;"	m	class:PolyDataFilters	file:
__iadd__	pyvista/core/filters/data_set.py	/^    def __iadd__(  # type: ignore[misc]$/;"	m	class:DataSetFilters	file:
__iadd__	pyvista/core/filters/poly_data.py	/^    def __iadd__(self: PolyData, dataset):  # type: ignore[misc]$/;"	m	class:PolyDataFilters	file:
__init__	build/lib/pyvista/core/_vtk_core.py	/^        def __init__(self):  # pragma: no cover$/;"	m	class:vtkPythonItem
__init__	build/lib/pyvista/core/_vtk_core.py	/^    def __init__(self):$/;"	m	class:_VTKVerbosity
__init__	build/lib/pyvista/core/cell.py	/^    def __init__($/;"	m	class:Cell
__init__	build/lib/pyvista/core/cell.py	/^    def __init__($/;"	m	class:CellArray
__init__	build/lib/pyvista/core/composite.py	/^    def __init__(self: MultiBlock, *args, **kwargs) -> None:$/;"	m	class:MultiBlock
__init__	build/lib/pyvista/core/dataobject.py	/^    def __init__(self: Self, *args, **kwargs) -> None:$/;"	m	class:DataObject
__init__	build/lib/pyvista/core/dataset.py	/^    def __init__(self: ActiveArrayInfo, association: FieldAssociation, name: str | None) -> None:$/;"	m	class:ActiveArrayInfo
__init__	build/lib/pyvista/core/dataset.py	/^    def __init__(self: Self, *args, **kwargs) -> None:$/;"	m	class:DataSet
__init__	build/lib/pyvista/core/datasetattributes.py	/^    def __init__($/;"	m	class:DataSetAttributes
__init__	build/lib/pyvista/core/errors.py	/^    def __init__($/;"	m	class:PartitionedDataSetsNotSupported
__init__	build/lib/pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetCellOperationError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetDimensionReductionError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetNotSupported
__init__	build/lib/pyvista/core/errors.py	/^    def __init__($/;"	m	class:PyVistaPipelineError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__($/;"	m	class:VTKVersionError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__(self, message='Cell array size is invalid.') -> None:$/;"	m	class:CellSizeError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__(self, message='Mesh must consist of only triangles') -> None:$/;"	m	class:NotAllTrianglesError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__(self, message='Multiple data available.') -> None:$/;"	m	class:AmbiguousDataError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__(self, message='No data available.') -> None:$/;"	m	class:MissingDataError
__init__	build/lib/pyvista/core/errors.py	/^    def __init__(self, message='This feature has been deprecated') -> None:$/;"	m	class:DeprecationError
__init__	build/lib/pyvista/core/grid.py	/^    def __init__($/;"	m	class:ImageData
__init__	build/lib/pyvista/core/grid.py	/^    def __init__($/;"	m	class:RectilinearGrid
__init__	build/lib/pyvista/core/objects.py	/^    def __init__(self, *args, deep: bool = True, **kwargs):$/;"	m	class:Table
__init__	build/lib/pyvista/core/partitioned.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PartitionedDataSet
__init__	build/lib/pyvista/core/pointset.py	/^    def __init__($/;"	m	class:PolyData
__init__	build/lib/pyvista/core/pointset.py	/^    def __init__(self, *args, **kwargs) -> None:$/;"	m	class:PointGrid
__init__	build/lib/pyvista/core/pointset.py	/^    def __init__(self, *args, deep: bool = False, **kwargs) -> None:$/;"	m	class:UnstructuredGrid
__init__	build/lib/pyvista/core/pointset.py	/^    def __init__(self, *args, deep: bool = False, **kwargs):$/;"	m	class:ExplicitStructuredGrid
__init__	build/lib/pyvista/core/pointset.py	/^    def __init__(self, uinput=None, y=None, z=None, *args, deep: bool = False, **kwargs) -> None:$/;"	m	class:StructuredGrid
__init__	build/lib/pyvista/core/pointset.py	/^    def __init__(self, var_inp=None, deep: bool = False, force_float: bool = True) -> None:$/;"	m	class:PointSet
__init__	build/lib/pyvista/core/utilities/arrays.py	/^    def __init__($/;"	m	class:_SerializedDictArray
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def __init__($/;"	m	class:.CapsuleSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:ArrowSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:AxesGeometrySource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:BoxSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:ConeSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:CubeFacesSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:CubeSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:CylinderSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:DiscSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:LineSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:OrthogonalPlanesSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:PlaneSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:PolygonSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:SphereSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:SuperquadricSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:Text3DSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__(self: MultipleLinesSource, points: MatrixLike[float] | None = None) -> None:$/;"	m	class:MultipleLinesSource
__init__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __init__(self: PlatonicSolidSource, kind: str = 'tetrahedron') -> None:$/;"	m	class:PlatonicSolidSource
__init__	build/lib/pyvista/core/utilities/image_sources.py	/^    def __init__($/;"	m	class:ImageNoiseSource
__init__	build/lib/pyvista/core/utilities/image_sources.py	/^    def __init__($/;"	m	class:ImageSinusoidSource
__init__	build/lib/pyvista/core/utilities/image_sources.py	/^    def __init__(self, center=None, whole_extent=None, maximum=None, std=None) -> None:$/;"	m	class:ImageGaussianSource
__init__	build/lib/pyvista/core/utilities/image_sources.py	/^    def __init__(self, origin=None, extent=None, spacing=None) -> None:$/;"	m	class:ImageGridSource
__init__	build/lib/pyvista/core/utilities/image_sources.py	/^    def __init__(self, whole_extent=None, center=None, radius=None) -> None:$/;"	m	class:ImageEllipsoidSource
__init__	build/lib/pyvista/core/utilities/image_sources.py	/^    def __init__(self, whole_extent=None, maxiter=None) -> None:$/;"	m	class:ImageMandelbrotSource
__init__	build/lib/pyvista/core/utilities/misc.py	/^    def __init__(self, dec, condition) -> None:  # noqa: ANN001$/;"	m	class:conditional_decorator
__init__	build/lib/pyvista/core/utilities/observers.py	/^    def __init__($/;"	m	class:Observer
__init__	build/lib/pyvista/core/utilities/observers.py	/^    def __init__(self, algorithm, message=''):$/;"	m	class:ProgressMonitor
__init__	build/lib/pyvista/core/utilities/observers.py	/^    def __init__(self, raise_errors: bool = False, send_to_logging: bool = True) -> None:$/;"	m	class:VtkErrorCatcher
__init__	build/lib/pyvista/core/utilities/reader.py	/^    def __init__(self) -> None:$/;"	m	class:_GIFReader
__init__	build/lib/pyvista/core/utilities/reader.py	/^    def __init__(self) -> None:$/;"	m	class:_PVDReader
__init__	build/lib/pyvista/core/utilities/reader.py	/^    def __init__(self, exodus_reader: ExodusIIReader, object_type):$/;"	m	class:ExodusIIBlockSet
__init__	build/lib/pyvista/core/utilities/reader.py	/^    def __init__(self, path) -> None:$/;"	m	class:BaseReader
__init__	build/lib/pyvista/core/utilities/reader.py	/^    def __init__(self, path):$/;"	m	class:Nek5000Reader
__init__	build/lib/pyvista/core/utilities/reader.py	/^    def __init__(self: BaseVTKReader) -> None:$/;"	m	class:BaseVTKReader
__init__	build/lib/pyvista/core/utilities/transform.py	/^    def __init__($/;"	m	class:Transform
__init__	build/lib/pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_DownloadableFile
__init__	build/lib/pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_MultiFileDatasetLoader
__init__	build/lib/pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_SingleFileDatasetLoader
__init__	build/lib/pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_SingleFileDownloadableDatasetLoader
__init__	build/lib/pyvista/examples/_dataset_loader.py	/^    def __init__(self, load_func: Callable[..., DatasetObject]):$/;"	m	class:_DatasetLoader
__init__	build/lib/pyvista/examples/_dataset_loader.py	/^    def __init__(self, path):$/;"	m	class:_SingleFile
__init__	build/lib/pyvista/ext/plot_directive.py	/^    def __init__(self, dirname, basename):$/;"	m	class:ImageFile
__init__	build/lib/pyvista/plotting/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:BackgroundPlotter
__init__	build/lib/pyvista/plotting/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:QtInteractor
__init__	build/lib/pyvista/plotting/__init__.py	/^    def __init__(self, feature_name):$/;"	m	class:QtDeprecationError
__init__	build/lib/pyvista/plotting/_property.py	/^    def __init__($/;"	m	class:Property
__init__	build/lib/pyvista/plotting/actor.py	/^    def __init__(self, mapper=None, prop=None, name=None) -> None:$/;"	m	class:Actor
__init__	build/lib/pyvista/plotting/actor_properties.py	/^    def __init__(self, properties: _vtk.vtkProperty) -> None:$/;"	m	class:ActorProperties
__init__	build/lib/pyvista/plotting/affine_widget.py	/^    def __init__($/;"	m	class:AffineWidget3D
__init__	build/lib/pyvista/plotting/axes.py	/^    def __init__($/;"	m	class:Axes
__init__	build/lib/pyvista/plotting/axes_actor.py	/^    def __init__(self):$/;"	m	class:AxesActor
__init__	build/lib/pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:AxesAssembly
__init__	build/lib/pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:AxesAssemblySymmetric
__init__	build/lib/pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:PlanesAssembly
__init__	build/lib/pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:_XYZAssembly
__init__	build/lib/pyvista/plotting/axes_assembly.py	/^    def __init__(self):$/;"	m	class:_AxisActor
__init__	build/lib/pyvista/plotting/background_renderer.py	/^    def __init__(self, parent, image_path, scale=1, view_port=None):$/;"	m	class:BackgroundRenderer
__init__	build/lib/pyvista/plotting/camera.py	/^    def __init__(self, renderer=None):$/;"	m	class:Camera
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:BarPlot
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:Chart2D
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartBox
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartMPL
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartPie
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:LinePlot2D
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ScatterPlot2D
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(cls, clsname, bases, attrs) -> None:$/;"	m	class:_vtkWrapperMeta
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self) -> None:$/;"	m	class:_CustomContextItem
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, chart) -> None:$/;"	m	class:_ChartBackground
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, chart) -> None:$/;"	m	class:_MultiCompPlot
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, chart) -> None:$/;"	m	class:_Plot
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, chart, data, colors=None, labels=None) -> None:$/;"	m	class:BoxPlot
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, chart, data, colors=None, labels=None) -> None:$/;"	m	class:PiePlot
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, chart, x, y1, y2=None, color='b', label='') -> None:$/;"	m	class:AreaPlot
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, chart, x, ys, colors=None, labels=None) -> None:$/;"	m	class:StackPlot
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, color='k', texture=None) -> None:$/;"	m	class:Brush
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, color='k', width=1, style='-') -> None:$/;"	m	class:Pen
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, label='', range=None, grid: bool = True) -> None:  # noqa: A002$/;"	m	class:Axis
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, renderer) -> None:$/;"	m	class:Charts
__init__	build/lib/pyvista/plotting/charts.py	/^    def __init__(self, size=(1, 1), loc=(0, 0)) -> None:$/;"	m	class:_Chart
__init__	build/lib/pyvista/plotting/colors.py	/^    def __init__($/;"	m	class:Color
__init__	build/lib/pyvista/plotting/composite_mapper.py	/^    def __init__($/;"	m	class:CompositePolyDataMapper
__init__	build/lib/pyvista/plotting/composite_mapper.py	/^    def __init__(self, block, attr):$/;"	m	class:BlockAttributes
__init__	build/lib/pyvista/plotting/composite_mapper.py	/^    def __init__(self, mapper, dataset):$/;"	m	class:CompositeAttributes
__init__	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def __init__($/;"	m	class:CubeAxesActor
__init__	build/lib/pyvista/plotting/errors.py	/^    def __init__(self, message='Render window is not available.'):$/;"	m	class:RenderWindowUnavailable
__init__	build/lib/pyvista/plotting/errors.py	/^    def __init__(self, message=CAMERA_ERROR_MESSAGE):$/;"	m	class:InvalidCameraError
__init__	build/lib/pyvista/plotting/lights.py	/^    def __init__($/;"	m	class:Light
__init__	build/lib/pyvista/plotting/lookup_table.py	/^    def __init__($/;"	m	class:LookupTable
__init__	build/lib/pyvista/plotting/mapper.py	/^    def __init__($/;"	m	class:DataSetMapper
__init__	build/lib/pyvista/plotting/mapper.py	/^    def __init__($/;"	m	class:_DataSetMapper
__init__	build/lib/pyvista/plotting/mapper.py	/^    def __init__(self, theme=None) -> None:$/;"	m	class:_BaseVolumeMapper
__init__	build/lib/pyvista/plotting/mapper.py	/^    def __init__(self, theme=None, **kwargs) -> None:$/;"	m	class:_BaseMapper
__init__	build/lib/pyvista/plotting/mapper.py	/^    def __init__(self, theme=None, emissive=None, scale_factor=1.0) -> None:$/;"	m	class:PointGaussianMapper
__init__	build/lib/pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingHelper
__init__	build/lib/pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingInterface
__init__	build/lib/pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingMethods
__init__	build/lib/pyvista/plotting/picking.py	/^    def __init__(self, frustum, viewport):$/;"	m	class:RectangleSelection
__init__	build/lib/pyvista/plotting/picking.py	/^    def __init__(self, mode: ElementType = ElementType.CELL, callback=None):$/;"	m	class:PointPickingElementHandler
__init__	build/lib/pyvista/plotting/plotter.py	/^    def __init__($/;"	m	class:BasePlotter
__init__	build/lib/pyvista/plotting/plotter.py	/^    def __init__($/;"	m	class:Plotter
__init__	build/lib/pyvista/plotting/prop3d.py	/^    def __init__(self) -> None:$/;"	m	class:Prop3D
__init__	build/lib/pyvista/plotting/prop3d.py	/^    def __init__(self) -> None:$/;"	m	class:_Prop3DMixin
__init__	build/lib/pyvista/plotting/prop_collection.py	/^    def __init__(self, prop_collection: _vtk.vtkPropCollection):$/;"	m	class:_PropCollection
__init__	build/lib/pyvista/plotting/render_passes.py	/^    def __init__(self, renderer):$/;"	m	class:RenderPasses
__init__	build/lib/pyvista/plotting/render_window_interactor.py	/^            def __init__(self, parent):$/;"	m	class:_style_factory._make_class.CustomStyle
__init__	build/lib/pyvista/plotting/render_window_interactor.py	/^    def __init__(self, max_steps, callback):$/;"	m	class:Timer
__init__	build/lib/pyvista/plotting/render_window_interactor.py	/^    def __init__(self, plotter, desired_update_rate=30, light_follow_camera=True, interactor=None):$/;"	m	class:RenderWindowInteractor
__init__	build/lib/pyvista/plotting/renderer.py	/^    def __init__($/;"	m	class:Renderer
__init__	build/lib/pyvista/plotting/renderer.py	/^    def __init__(self, position, focal_point, viewup) -> None:$/;"	m	class:CameraPosition
__init__	build/lib/pyvista/plotting/renderers.py	/^    def __init__($/;"	m	class:Renderers
__init__	build/lib/pyvista/plotting/scalar_bars.py	/^    def __init__(self, plotter):$/;"	m	class:ScalarBars
__init__	build/lib/pyvista/plotting/text.py	/^    def __init__($/;"	m	class:Label
__init__	build/lib/pyvista/plotting/text.py	/^    def __init__($/;"	m	class:TextProperty
__init__	build/lib/pyvista/plotting/text.py	/^    def __init__(self, position, text, prop=None, linear_font_scale_factor=None, name=None):$/;"	m	class:CornerAnnotation
__init__	build/lib/pyvista/plotting/text.py	/^    def __init__(self, text=None, position=None, prop=None, name=None):$/;"	m	class:Text
__init__	build/lib/pyvista/plotting/texture.py	/^    def __init__(self, uinput=None, **kwargs):$/;"	m	class:Texture
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DarkTheme
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DocumentProTheme
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DocumentTheme
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:ParaViewTheme
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:Theme
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_AxesConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_CameraConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_ColorbarConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_DepthPeelingConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_Font
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_LightingConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SilhouetteConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SliderConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SliderStyleConfig
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_TestingTheme
__init__	build/lib/pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_TrameConfig
__init__	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def __init__(self):$/;"	m	class:CrinkleAlgorithm
__init__	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def __init__(self):$/;"	m	class:PointSetToPolyDataAlgorithm
__init__	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, nInputPorts=1, nOutputPorts=1):$/;"	m	class:PreserveTypeAlgorithmBase
__init__	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, name: str, preference: PointLiteral | CellLiteral = 'point'):$/;"	m	class:ActiveScalarsAlgorithm
__init__	build/lib/pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, point_ids: bool = True, cell_ids: bool = True):$/;"	m	class:AddIDsAlgorithm
__init__	build/lib/pyvista/plotting/volume.py	/^    def __init__(self):$/;"	m	class:Volume
__init__	build/lib/pyvista/plotting/volume_property.py	/^    def __init__($/;"	m	class:VolumeProperty
__init__	build/lib/pyvista/plotting/widgets.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:WidgetHelper
__init__	build/lib/pyvista/report.py	/^    def __init__(self):$/;"	m	class:GPUInfo
__init__	build/lib/pyvista/report.py	/^    def __init__(self, additional=None, ncol=3, text_width=80, sort=False, gpu=True):$/;"	m	class:Report
__init__	build/lib/pyvista/trame/jupyter.py	/^    def __init__(self):$/;"	m	class:TrameJupyterServerDownError
__init__	build/lib/pyvista/trame/jupyter.py	/^    def __init__(self, plotter, width, height, **kwargs):$/;"	m	class:EmbeddableWidget
__init__	build/lib/pyvista/trame/jupyter.py	/^    def __init__(self, server_name):$/;"	m	class:TrameServerDownError
__init__	build/lib/pyvista/trame/jupyter.py	/^    def __init__(self, viewer, src, width=None, height=None, iframe_attrs=None, **kwargs):$/;"	m	class:Widget
__init__	build/lib/pyvista/trame/ui/base_viewer.py	/^    def __init__(self, plotter, server=None, suppress_rendering=False):$/;"	m	class:BaseViewer
__init__	build/lib/pyvista/trame/ui/vuetify2.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Viewer
__init__	build/lib/pyvista/trame/ui/vuetify3.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Viewer
__init__	build/lib/pyvista/trame/views.py	/^    def __init__($/;"	m	class:PyVistaRemoteLocalView
__init__	build/lib/pyvista/trame/views.py	/^    def __init__($/;"	m	class:PyVistaRemoteView
__init__	build/lib/pyvista/trame/views.py	/^    def __init__(self, plotter):$/;"	m	class:_BasePyVistaView
__init__	build/lib/pyvista/trame/views.py	/^    def __init__(self, plotter, namespace=None, **kwargs):$/;"	m	class:PyVistaLocalView
__init__	doc/source/make_external_gallery.py	/^    def __init__(self, title, link, image):$/;"	m	class:Example
__init__	doc/source/make_tables.py	/^    def __init__($/;"	m	class:DatasetCard
__init__	examples/03-widgets/checkbox_widget.py	/^    def __init__(self, actor):$/;"	m	class:SetVisibilityCallback
__init__	examples/03-widgets/multi_slider_widget.py	/^    def __init__(self, mesh):$/;"	m	class:MyCustomRoutine
__init__	pyvista/core/_vtk_core.py	/^        def __init__(self):  # pragma: no cover$/;"	m	class:vtkPythonItem
__init__	pyvista/core/_vtk_core.py	/^    def __init__(self):$/;"	m	class:_VTKVerbosity
__init__	pyvista/core/cell.py	/^    def __init__($/;"	m	class:Cell
__init__	pyvista/core/cell.py	/^    def __init__($/;"	m	class:CellArray
__init__	pyvista/core/composite.py	/^    def __init__(self: MultiBlock, *args, **kwargs) -> None:$/;"	m	class:MultiBlock
__init__	pyvista/core/dataobject.py	/^    def __init__(self: Self, *args, **kwargs) -> None:$/;"	m	class:DataObject
__init__	pyvista/core/dataset.py	/^    def __init__(self: ActiveArrayInfo, association: FieldAssociation, name: str | None) -> None:$/;"	m	class:ActiveArrayInfo
__init__	pyvista/core/dataset.py	/^    def __init__(self: Self, *args, **kwargs) -> None:$/;"	m	class:DataSet
__init__	pyvista/core/datasetattributes.py	/^    def __init__($/;"	m	class:DataSetAttributes
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PartitionedDataSetsNotSupported
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetCellOperationError
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetDimensionReductionError
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PointSetNotSupported
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:PyVistaPipelineError
__init__	pyvista/core/errors.py	/^    def __init__($/;"	m	class:VTKVersionError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='Cell array size is invalid.') -> None:$/;"	m	class:CellSizeError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='Mesh must consist of only triangles') -> None:$/;"	m	class:NotAllTrianglesError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='Multiple data available.') -> None:$/;"	m	class:AmbiguousDataError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='No data available.') -> None:$/;"	m	class:MissingDataError
__init__	pyvista/core/errors.py	/^    def __init__(self, message='This feature has been deprecated') -> None:$/;"	m	class:DeprecationError
__init__	pyvista/core/grid.py	/^    def __init__($/;"	m	class:ImageData
__init__	pyvista/core/grid.py	/^    def __init__($/;"	m	class:RectilinearGrid
__init__	pyvista/core/objects.py	/^    def __init__(self, *args, deep: bool = True, **kwargs):$/;"	m	class:Table
__init__	pyvista/core/partitioned.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PartitionedDataSet
__init__	pyvista/core/pointset.py	/^    def __init__($/;"	m	class:PolyData
__init__	pyvista/core/pointset.py	/^    def __init__(self, *args, **kwargs) -> None:$/;"	m	class:PointGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, *args, deep: bool = False, **kwargs) -> None:$/;"	m	class:UnstructuredGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, *args, deep: bool = False, **kwargs):$/;"	m	class:ExplicitStructuredGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, uinput=None, y=None, z=None, *args, deep: bool = False, **kwargs) -> None:$/;"	m	class:StructuredGrid
__init__	pyvista/core/pointset.py	/^    def __init__(self, var_inp=None, deep: bool = False, force_float: bool = True) -> None:$/;"	m	class:PointSet
__init__	pyvista/core/utilities/arrays.py	/^    def __init__($/;"	m	class:_SerializedDictArray
__init__	pyvista/core/utilities/geometric_sources.py	/^        def __init__($/;"	m	class:.CapsuleSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:ArrowSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:AxesGeometrySource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:BoxSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:ConeSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:CubeFacesSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:CubeSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:CylinderSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:DiscSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:LineSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:OrthogonalPlanesSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:PlaneSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:PolygonSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:SphereSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:SuperquadricSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__($/;"	m	class:Text3DSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__(self: MultipleLinesSource, points: MatrixLike[float] | None = None) -> None:$/;"	m	class:MultipleLinesSource
__init__	pyvista/core/utilities/geometric_sources.py	/^    def __init__(self: PlatonicSolidSource, kind: str = 'tetrahedron') -> None:$/;"	m	class:PlatonicSolidSource
__init__	pyvista/core/utilities/image_sources.py	/^    def __init__($/;"	m	class:ImageNoiseSource
__init__	pyvista/core/utilities/image_sources.py	/^    def __init__($/;"	m	class:ImageSinusoidSource
__init__	pyvista/core/utilities/image_sources.py	/^    def __init__(self, center=None, whole_extent=None, maximum=None, std=None) -> None:$/;"	m	class:ImageGaussianSource
__init__	pyvista/core/utilities/image_sources.py	/^    def __init__(self, origin=None, extent=None, spacing=None) -> None:$/;"	m	class:ImageGridSource
__init__	pyvista/core/utilities/image_sources.py	/^    def __init__(self, whole_extent=None, center=None, radius=None) -> None:$/;"	m	class:ImageEllipsoidSource
__init__	pyvista/core/utilities/image_sources.py	/^    def __init__(self, whole_extent=None, maxiter=None) -> None:$/;"	m	class:ImageMandelbrotSource
__init__	pyvista/core/utilities/misc.py	/^    def __init__(self, dec, condition) -> None:  # noqa: ANN001$/;"	m	class:conditional_decorator
__init__	pyvista/core/utilities/observers.py	/^    def __init__($/;"	m	class:Observer
__init__	pyvista/core/utilities/observers.py	/^    def __init__(self, algorithm, message=''):$/;"	m	class:ProgressMonitor
__init__	pyvista/core/utilities/observers.py	/^    def __init__(self, raise_errors: bool = False, send_to_logging: bool = True) -> None:$/;"	m	class:VtkErrorCatcher
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self) -> None:$/;"	m	class:_GIFReader
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self) -> None:$/;"	m	class:_PVDReader
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self, exodus_reader: ExodusIIReader, object_type):$/;"	m	class:ExodusIIBlockSet
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self, path) -> None:$/;"	m	class:BaseReader
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self, path):$/;"	m	class:Nek5000Reader
__init__	pyvista/core/utilities/reader.py	/^    def __init__(self: BaseVTKReader) -> None:$/;"	m	class:BaseVTKReader
__init__	pyvista/core/utilities/transform.py	/^    def __init__($/;"	m	class:Transform
__init__	pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_DownloadableFile
__init__	pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_MultiFileDatasetLoader
__init__	pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_SingleFileDatasetLoader
__init__	pyvista/examples/_dataset_loader.py	/^    def __init__($/;"	m	class:_SingleFileDownloadableDatasetLoader
__init__	pyvista/examples/_dataset_loader.py	/^    def __init__(self, load_func: Callable[..., DatasetObject]):$/;"	m	class:_DatasetLoader
__init__	pyvista/examples/_dataset_loader.py	/^    def __init__(self, path):$/;"	m	class:_SingleFile
__init__	pyvista/ext/plot_directive.py	/^    def __init__(self, dirname, basename):$/;"	m	class:ImageFile
__init__	pyvista/plotting/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:BackgroundPlotter
__init__	pyvista/plotting/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:QtInteractor
__init__	pyvista/plotting/__init__.py	/^    def __init__(self, feature_name):$/;"	m	class:QtDeprecationError
__init__	pyvista/plotting/_property.py	/^    def __init__($/;"	m	class:Property
__init__	pyvista/plotting/actor.py	/^    def __init__(self, mapper=None, prop=None, name=None) -> None:$/;"	m	class:Actor
__init__	pyvista/plotting/actor_properties.py	/^    def __init__(self, properties: _vtk.vtkProperty) -> None:$/;"	m	class:ActorProperties
__init__	pyvista/plotting/affine_widget.py	/^    def __init__($/;"	m	class:AffineWidget3D
__init__	pyvista/plotting/axes.py	/^    def __init__($/;"	m	class:Axes
__init__	pyvista/plotting/axes_actor.py	/^    def __init__(self):$/;"	m	class:AxesActor
__init__	pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:AxesAssembly
__init__	pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:AxesAssemblySymmetric
__init__	pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:PlanesAssembly
__init__	pyvista/plotting/axes_assembly.py	/^    def __init__($/;"	m	class:_XYZAssembly
__init__	pyvista/plotting/axes_assembly.py	/^    def __init__(self):$/;"	m	class:_AxisActor
__init__	pyvista/plotting/background_renderer.py	/^    def __init__(self, parent, image_path, scale=1, view_port=None):$/;"	m	class:BackgroundRenderer
__init__	pyvista/plotting/camera.py	/^    def __init__(self, renderer=None):$/;"	m	class:Camera
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:BarPlot
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:Chart2D
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartBox
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartMPL
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ChartPie
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:LinePlot2D
__init__	pyvista/plotting/charts.py	/^    def __init__($/;"	m	class:ScatterPlot2D
__init__	pyvista/plotting/charts.py	/^    def __init__(cls, clsname, bases, attrs) -> None:$/;"	m	class:_vtkWrapperMeta
__init__	pyvista/plotting/charts.py	/^    def __init__(self) -> None:$/;"	m	class:_CustomContextItem
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart) -> None:$/;"	m	class:_ChartBackground
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart) -> None:$/;"	m	class:_MultiCompPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart) -> None:$/;"	m	class:_Plot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, data, colors=None, labels=None) -> None:$/;"	m	class:BoxPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, data, colors=None, labels=None) -> None:$/;"	m	class:PiePlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, x, y1, y2=None, color='b', label='') -> None:$/;"	m	class:AreaPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, chart, x, ys, colors=None, labels=None) -> None:$/;"	m	class:StackPlot
__init__	pyvista/plotting/charts.py	/^    def __init__(self, color='k', texture=None) -> None:$/;"	m	class:Brush
__init__	pyvista/plotting/charts.py	/^    def __init__(self, color='k', width=1, style='-') -> None:$/;"	m	class:Pen
__init__	pyvista/plotting/charts.py	/^    def __init__(self, label='', range=None, grid: bool = True) -> None:  # noqa: A002$/;"	m	class:Axis
__init__	pyvista/plotting/charts.py	/^    def __init__(self, renderer) -> None:$/;"	m	class:Charts
__init__	pyvista/plotting/charts.py	/^    def __init__(self, size=(1, 1), loc=(0, 0)) -> None:$/;"	m	class:_Chart
__init__	pyvista/plotting/colors.py	/^    def __init__($/;"	m	class:Color
__init__	pyvista/plotting/composite_mapper.py	/^    def __init__($/;"	m	class:CompositePolyDataMapper
__init__	pyvista/plotting/composite_mapper.py	/^    def __init__(self, block, attr):$/;"	m	class:BlockAttributes
__init__	pyvista/plotting/composite_mapper.py	/^    def __init__(self, mapper, dataset):$/;"	m	class:CompositeAttributes
__init__	pyvista/plotting/cube_axes_actor.py	/^    def __init__($/;"	m	class:CubeAxesActor
__init__	pyvista/plotting/errors.py	/^    def __init__(self, message='Render window is not available.'):$/;"	m	class:RenderWindowUnavailable
__init__	pyvista/plotting/errors.py	/^    def __init__(self, message=CAMERA_ERROR_MESSAGE):$/;"	m	class:InvalidCameraError
__init__	pyvista/plotting/lights.py	/^    def __init__($/;"	m	class:Light
__init__	pyvista/plotting/lookup_table.py	/^    def __init__($/;"	m	class:LookupTable
__init__	pyvista/plotting/mapper.py	/^    def __init__($/;"	m	class:DataSetMapper
__init__	pyvista/plotting/mapper.py	/^    def __init__($/;"	m	class:_DataSetMapper
__init__	pyvista/plotting/mapper.py	/^    def __init__(self, theme=None) -> None:$/;"	m	class:_BaseVolumeMapper
__init__	pyvista/plotting/mapper.py	/^    def __init__(self, theme=None, **kwargs) -> None:$/;"	m	class:_BaseMapper
__init__	pyvista/plotting/mapper.py	/^    def __init__(self, theme=None, emissive=None, scale_factor=1.0) -> None:$/;"	m	class:PointGaussianMapper
__init__	pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingHelper
__init__	pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingInterface
__init__	pyvista/plotting/picking.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:PickingMethods
__init__	pyvista/plotting/picking.py	/^    def __init__(self, frustum, viewport):$/;"	m	class:RectangleSelection
__init__	pyvista/plotting/picking.py	/^    def __init__(self, mode: ElementType = ElementType.CELL, callback=None):$/;"	m	class:PointPickingElementHandler
__init__	pyvista/plotting/plotter.py	/^    def __init__($/;"	m	class:BasePlotter
__init__	pyvista/plotting/plotter.py	/^    def __init__($/;"	m	class:Plotter
__init__	pyvista/plotting/prop3d.py	/^    def __init__(self) -> None:$/;"	m	class:Prop3D
__init__	pyvista/plotting/prop3d.py	/^    def __init__(self) -> None:$/;"	m	class:_Prop3DMixin
__init__	pyvista/plotting/prop_collection.py	/^    def __init__(self, prop_collection: _vtk.vtkPropCollection):$/;"	m	class:_PropCollection
__init__	pyvista/plotting/render_passes.py	/^    def __init__(self, renderer):$/;"	m	class:RenderPasses
__init__	pyvista/plotting/render_window_interactor.py	/^            def __init__(self, parent):$/;"	m	class:_style_factory._make_class.CustomStyle
__init__	pyvista/plotting/render_window_interactor.py	/^    def __init__(self, max_steps, callback):$/;"	m	class:Timer
__init__	pyvista/plotting/render_window_interactor.py	/^    def __init__(self, plotter, desired_update_rate=30, light_follow_camera=True, interactor=None):$/;"	m	class:RenderWindowInteractor
__init__	pyvista/plotting/renderer.py	/^    def __init__($/;"	m	class:Renderer
__init__	pyvista/plotting/renderer.py	/^    def __init__(self, position, focal_point, viewup) -> None:$/;"	m	class:CameraPosition
__init__	pyvista/plotting/renderers.py	/^    def __init__($/;"	m	class:Renderers
__init__	pyvista/plotting/scalar_bars.py	/^    def __init__(self, plotter):$/;"	m	class:ScalarBars
__init__	pyvista/plotting/text.py	/^    def __init__($/;"	m	class:Label
__init__	pyvista/plotting/text.py	/^    def __init__($/;"	m	class:TextProperty
__init__	pyvista/plotting/text.py	/^    def __init__(self, position, text, prop=None, linear_font_scale_factor=None, name=None):$/;"	m	class:CornerAnnotation
__init__	pyvista/plotting/text.py	/^    def __init__(self, text=None, position=None, prop=None, name=None):$/;"	m	class:Text
__init__	pyvista/plotting/texture.py	/^    def __init__(self, uinput=None, **kwargs):$/;"	m	class:Texture
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DarkTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DocumentProTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:DocumentTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:ParaViewTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:Theme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_AxesConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_CameraConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_ColorbarConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_DepthPeelingConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_Font
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_LightingConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SilhouetteConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SliderConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_SliderStyleConfig
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_TestingTheme
__init__	pyvista/plotting/themes.py	/^    def __init__(self):$/;"	m	class:_TrameConfig
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self):$/;"	m	class:CrinkleAlgorithm
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self):$/;"	m	class:PointSetToPolyDataAlgorithm
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, nInputPorts=1, nOutputPorts=1):$/;"	m	class:PreserveTypeAlgorithmBase
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, name: str, preference: PointLiteral | CellLiteral = 'point'):$/;"	m	class:ActiveScalarsAlgorithm
__init__	pyvista/plotting/utilities/algorithms.py	/^    def __init__(self, point_ids: bool = True, cell_ids: bool = True):$/;"	m	class:AddIDsAlgorithm
__init__	pyvista/plotting/volume.py	/^    def __init__(self):$/;"	m	class:Volume
__init__	pyvista/plotting/volume_property.py	/^    def __init__($/;"	m	class:VolumeProperty
__init__	pyvista/plotting/widgets.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:WidgetHelper
__init__	pyvista/report.py	/^    def __init__(self):$/;"	m	class:GPUInfo
__init__	pyvista/report.py	/^    def __init__(self, additional=None, ncol=3, text_width=80, sort=False, gpu=True):$/;"	m	class:Report
__init__	pyvista/trame/jupyter.py	/^    def __init__(self):$/;"	m	class:TrameJupyterServerDownError
__init__	pyvista/trame/jupyter.py	/^    def __init__(self, plotter, width, height, **kwargs):$/;"	m	class:EmbeddableWidget
__init__	pyvista/trame/jupyter.py	/^    def __init__(self, server_name):$/;"	m	class:TrameServerDownError
__init__	pyvista/trame/jupyter.py	/^    def __init__(self, viewer, src, width=None, height=None, iframe_attrs=None, **kwargs):$/;"	m	class:Widget
__init__	pyvista/trame/ui/base_viewer.py	/^    def __init__(self, plotter, server=None, suppress_rendering=False):$/;"	m	class:BaseViewer
__init__	pyvista/trame/ui/vuetify2.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Viewer
__init__	pyvista/trame/ui/vuetify3.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Viewer
__init__	pyvista/trame/views.py	/^    def __init__($/;"	m	class:PyVistaRemoteLocalView
__init__	pyvista/trame/views.py	/^    def __init__($/;"	m	class:PyVistaRemoteView
__init__	pyvista/trame/views.py	/^    def __init__(self, plotter):$/;"	m	class:_BasePyVistaView
__init__	pyvista/trame/views.py	/^    def __init__(self, plotter, namespace=None, **kwargs):$/;"	m	class:PyVistaLocalView
__init__	tests/core/test_dataset_filters.py	/^    def __init__(self):$/;"	m	class:GetOutput
__init__	tests/core/test_dataset_filters.py	/^    def __init__(self, alg: vtk.vtkGlyph3D):$/;"	m	class:InterrogateVTKGlyph3D
__init__	tests/core/test_utilities.py	/^        def __init__(self):$/;"	m	class:no_new_attr_subclass.B
__init__	tests/plotting/conftest.py	/^        def __init__(self) -> None:$/;"	m	class:check_gc.GcHandler
__init__	tests/plotting/test_actor.py	/^        def __init__(self):$/;"	m	class:dummy_actor.DummyActor
__init__	tests/plotting/test_charts.py	/^    def __init__(self, plotter):$/;"	m	class:PlotterChanged
__init__	tests/plotting/test_picking.py	/^        def __init__(self):$/;"	m	class:test_element_picking.Tracker
__init__	tests/plotting/test_picking.py	/^        def __init__(self):$/;"	m	class:test_point_picking_window.Tracker
__init__	tests/plotting/test_picking.py	/^        def __init__(self):$/;"	m	class:test_single_cell_picking.PickCallback
__init__	tests/plotting/test_render_window_interactor.py	/^        def __init__(self):$/;"	m	class:test_release_button_observers.CallBack
__init__	tests/plotting/test_scraper.py	/^    def __init__(self, *args):$/;"	m	class:QApplication
__init__	tests/plotting/test_theme.py	/^        def __init__(self):$/;"	m	class:test_user_theme.MyTheme
__init__	tests/plotting/test_widgets.py	/^        def __init__(self):$/;"	m	class:test_measurement_widget.DistanceCallback
__init__	tests/test_conftest.py	/^    def __init__(self):$/;"	m	class:_ReportDescriptor
__init__	tests/test_conftest.py	/^    def __init__(self, regex: re.Pattern[str] | str):$/;"	m	class:PytesterStdoutParser
__init__	tests/test_conftest.py	/^    def __init__(self, results: list[dict[str, str]]):$/;"	m	class:RunResultsReport
__init_subclass__	build/lib/pyvista/plotting/charts.py	/^    def __init_subclass__(cls, **kwargs) -> None:$/;"	m	class:DocSubs	file:
__init_subclass__	pyvista/plotting/charts.py	/^    def __init_subclass__(cls, **kwargs) -> None:$/;"	m	class:DocSubs	file:
__isub__	build/lib/pyvista/core/pointset.py	/^    def __isub__(self, cutting_mesh):$/;"	m	class:PolyData	file:
__isub__	pyvista/core/pointset.py	/^    def __isub__(self, cutting_mesh):$/;"	m	class:PolyData	file:
__iter__	build/lib/pyvista/core/dataset.py	/^    def __iter__(self: ActiveArrayInfo) -> Iterator[FieldAssociation | str]:$/;"	m	class:ActiveArrayInfo	file:
__iter__	build/lib/pyvista/core/datasetattributes.py	/^    def __iter__(self: Self) -> Iterator[str]:$/;"	m	class:DataSetAttributes	file:
__iter__	build/lib/pyvista/core/objects.py	/^    def __iter__(self):$/;"	m	class:Table	file:
__iter__	build/lib/pyvista/plotting/charts.py	/^    def __iter__(self):$/;"	m	class:Charts	file:
__iter__	build/lib/pyvista/plotting/colors.py	/^    def __iter__(self):$/;"	m	class:Color	file:
__iter__	build/lib/pyvista/plotting/composite_mapper.py	/^    def __iter__(self):$/;"	m	class:CompositeAttributes	file:
__iter__	build/lib/pyvista/plotting/renderers.py	/^    def __iter__(self):$/;"	m	class:Renderers	file:
__iter__	build/lib/pyvista/plotting/themes.py	/^    def __iter__(self):$/;"	m	class:_SliderConfig	file:
__iter__	pyvista/core/dataset.py	/^    def __iter__(self: ActiveArrayInfo) -> Iterator[FieldAssociation | str]:$/;"	m	class:ActiveArrayInfo	file:
__iter__	pyvista/core/datasetattributes.py	/^    def __iter__(self: Self) -> Iterator[str]:$/;"	m	class:DataSetAttributes	file:
__iter__	pyvista/core/objects.py	/^    def __iter__(self):$/;"	m	class:Table	file:
__iter__	pyvista/plotting/charts.py	/^    def __iter__(self):$/;"	m	class:Charts	file:
__iter__	pyvista/plotting/colors.py	/^    def __iter__(self):$/;"	m	class:Color	file:
__iter__	pyvista/plotting/composite_mapper.py	/^    def __iter__(self):$/;"	m	class:CompositeAttributes	file:
__iter__	pyvista/plotting/renderers.py	/^    def __iter__(self):$/;"	m	class:Renderers	file:
__iter__	pyvista/plotting/themes.py	/^    def __iter__(self):$/;"	m	class:_SliderConfig	file:
__kitchen_split	build/lib/pyvista/examples/downloads.py	/^__kitchen_split = _SingleFileDownloadableDatasetLoader($/;"	v
__kitchen_split	pyvista/examples/downloads.py	/^__kitchen_split = _SingleFileDownloadableDatasetLoader($/;"	v
__len__	build/lib/pyvista/core/composite.py	/^    def __len__(self: MultiBlock) -> int:$/;"	m	class:MultiBlock	file:
__len__	build/lib/pyvista/core/datasetattributes.py	/^    def __len__(self: Self) -> int:$/;"	m	class:DataSetAttributes	file:
__len__	build/lib/pyvista/core/partitioned.py	/^    def __len__(self) -> int:$/;"	m	class:PartitionedDataSet	file:
__len__	build/lib/pyvista/plotting/charts.py	/^    def __len__(self):$/;"	m	class:Charts	file:
__len__	build/lib/pyvista/plotting/composite_mapper.py	/^    def __len__(self):$/;"	m	class:CompositeAttributes	file:
__len__	build/lib/pyvista/plotting/prop_collection.py	/^    def __len__(self):$/;"	m	class:_PropCollection	file:
__len__	build/lib/pyvista/plotting/renderers.py	/^    def __len__(self):$/;"	m	class:Renderers	file:
__len__	build/lib/pyvista/plotting/scalar_bars.py	/^    def __len__(self):$/;"	m	class:ScalarBars	file:
__len__	pyvista/core/composite.py	/^    def __len__(self: MultiBlock) -> int:$/;"	m	class:MultiBlock	file:
__len__	pyvista/core/datasetattributes.py	/^    def __len__(self: Self) -> int:$/;"	m	class:DataSetAttributes	file:
__len__	pyvista/core/partitioned.py	/^    def __len__(self) -> int:$/;"	m	class:PartitionedDataSet	file:
__len__	pyvista/plotting/charts.py	/^    def __len__(self):$/;"	m	class:Charts	file:
__len__	pyvista/plotting/composite_mapper.py	/^    def __len__(self):$/;"	m	class:CompositeAttributes	file:
__len__	pyvista/plotting/prop_collection.py	/^    def __len__(self):$/;"	m	class:_PropCollection	file:
__len__	pyvista/plotting/renderers.py	/^    def __len__(self):$/;"	m	class:Renderers	file:
__len__	pyvista/plotting/scalar_bars.py	/^    def __len__(self):$/;"	m	class:ScalarBars	file:
__mul__	build/lib/pyvista/core/utilities/transform.py	/^    def __mul__(self: Transform, other: float | VectorLike[float] | TransformLike) -> Transform:$/;"	m	class:Transform	file:
__mul__	pyvista/core/utilities/transform.py	/^    def __mul__(self: Transform, other: float | VectorLike[float] | TransformLike) -> Transform:$/;"	m	class:Transform	file:
__new__	build/lib/pyvista/core/celltype.py	/^    def __new__(  # noqa: PYI034$/;"	m	class:CellType	file:
__new__	build/lib/pyvista/core/pointset.py	/^    def __new__(cls, *args, **kwargs):$/;"	m	class:PointSet	file:
__new__	build/lib/pyvista/core/pyvista_ndarray.py	/^    def __new__(  # noqa: PYI034$/;"	m	class:pyvista_ndarray	file:
__new__	build/lib/pyvista/core/utilities/misc.py	/^    def __new__(cls, *args, **kwargs):  # noqa: ANN001, ANN202$/;"	f	function:abstract_class	file:
__new__	build/lib/pyvista/core/utilities/misc.py	/^    def __new__(cls: type[T], value: int, annotation: str) -> T:$/;"	m	class:AnnotatedIntEnum	file:
__new__	build/lib/pyvista/plotting/lookup_table.py	/^    def __new__($/;"	m	class:lookup_table_ndarray	file:
__new__	pyvista/core/celltype.py	/^    def __new__(  # noqa: PYI034$/;"	m	class:CellType	file:
__new__	pyvista/core/pointset.py	/^    def __new__(cls, *args, **kwargs):$/;"	m	class:PointSet	file:
__new__	pyvista/core/pyvista_ndarray.py	/^    def __new__(  # noqa: PYI034$/;"	m	class:pyvista_ndarray	file:
__new__	pyvista/core/utilities/misc.py	/^    def __new__(cls, *args, **kwargs):  # noqa: ANN001, ANN202$/;"	f	function:abstract_class	file:
__new__	pyvista/core/utilities/misc.py	/^    def __new__(cls: type[T], value: int, annotation: str) -> T:$/;"	m	class:AnnotatedIntEnum	file:
__new__	pyvista/plotting/lookup_table.py	/^    def __new__($/;"	m	class:lookup_table_ndarray	file:
__or__	build/lib/pyvista/core/pointset.py	/^    def __or__(self, other_mesh):$/;"	m	class:PolyData	file:
__or__	pyvista/core/pointset.py	/^    def __or__(self, other_mesh):$/;"	m	class:PolyData	file:
__post_init__	doc/source/make_tables.py	/^    def __post_init__(cls):$/;"	m	class:CategoryBadge	file:
__post_init__	doc/source/make_tables.py	/^    def __post_init__(cls):$/;"	m	class:CellTypeBadge	file:
__post_init__	doc/source/make_tables.py	/^    def __post_init__(cls):$/;"	m	class:DataTypeBadge	file:
__post_init__	doc/source/make_tables.py	/^    def __post_init__(cls):$/;"	m	class:ModuleBadge	file:
__post_init__	doc/source/make_tables.py	/^    def __post_init__(cls):$/;"	m	class:SpecialDataTypeBadge	file:
__post_init__	doc/source/make_tables.py	/^    def __post_init__(self: _BaseDatasetBadge):$/;"	m	class:_BaseDatasetBadge	file:
__prepare__	build/lib/pyvista/plotting/themes.py	/^    def __prepare__(metaclass, name, bases, **kwargs):$/;"	m	class:_ForceSlots	file:
__prepare__	pyvista/plotting/themes.py	/^    def __prepare__(metaclass, name, bases, **kwargs):$/;"	m	class:_ForceSlots	file:
__radd__	build/lib/pyvista/core/utilities/transform.py	/^    def __radd__(self: Transform, other: VectorLike[float]) -> Transform:$/;"	m	class:Transform	file:
__radd__	pyvista/core/utilities/transform.py	/^    def __radd__(self: Transform, other: VectorLike[float]) -> Transform:$/;"	m	class:Transform	file:
__repr__	build/lib/pyvista/core/cell.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:Cell	file:
__repr__	build/lib/pyvista/core/composite.py	/^    def __repr__(self: MultiBlock) -> str:$/;"	m	class:MultiBlock	file:
__repr__	build/lib/pyvista/core/dataset.py	/^    def __repr__(self: ActiveArrayInfo) -> str:$/;"	m	class:ActiveArrayInfo	file:
__repr__	build/lib/pyvista/core/dataset.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:DataSet	file:
__repr__	build/lib/pyvista/core/datasetattributes.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:DataSetAttributes	file:
__repr__	build/lib/pyvista/core/grid.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:ImageData	file:
__repr__	build/lib/pyvista/core/grid.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:RectilinearGrid	file:
__repr__	build/lib/pyvista/core/objects.py	/^    def __repr__(self):$/;"	m	class:Table	file:
__repr__	build/lib/pyvista/core/partitioned.py	/^    def __repr__(self) -> str:$/;"	m	class:PartitionedDataSet	file:
__repr__	build/lib/pyvista/core/pointset.py	/^    def __repr__(self) -> str:$/;"	m	class:ExplicitStructuredGrid	file:
__repr__	build/lib/pyvista/core/pointset.py	/^    def __repr__(self) -> str:$/;"	m	class:PolyData	file:
__repr__	build/lib/pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:PointSet	file:
__repr__	build/lib/pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:StructuredGrid	file:
__repr__	build/lib/pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:UnstructuredGrid	file:
__repr__	build/lib/pyvista/core/utilities/arrays.py	/^    def __repr__(self: _SerializedDictArray) -> str:$/;"	m	class:_SerializedDictArray	file:
__repr__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __repr__(self: AxesGeometrySource) -> str:$/;"	m	class:AxesGeometrySource	file:
__repr__	build/lib/pyvista/core/utilities/reader.py	/^    def __repr__(self) -> str:$/;"	m	class:BaseReader	file:
__repr__	build/lib/pyvista/core/utilities/transform.py	/^    def __repr__(self: Transform) -> str:$/;"	m	class:Transform	file:
__repr__	build/lib/pyvista/ext/plot_directive.py	/^    def __repr__(self) -> str:  # pragma no cover$/;"	m	class:ImageFile	file:
__repr__	build/lib/pyvista/plotting/_property.py	/^    def __repr__(self):$/;"	m	class:Property	file:
__repr__	build/lib/pyvista/plotting/actor.py	/^    def __repr__(self):$/;"	m	class:Actor	file:
__repr__	build/lib/pyvista/plotting/axes_assembly.py	/^    def __repr__(self):$/;"	m	class:AxesAssembly	file:
__repr__	build/lib/pyvista/plotting/axes_assembly.py	/^    def __repr__(self):$/;"	m	class:PlanesAssembly	file:
__repr__	build/lib/pyvista/plotting/camera.py	/^    def __repr__(self):$/;"	m	class:Camera	file:
__repr__	build/lib/pyvista/plotting/colors.py	/^    def __repr__(self) -> str:  # pragma: no cover$/;"	m	class:Color	file:
__repr__	build/lib/pyvista/plotting/composite_mapper.py	/^    def __repr__(self):$/;"	m	class:BlockAttributes	file:
__repr__	build/lib/pyvista/plotting/lights.py	/^    def __repr__(self) -> str:$/;"	m	class:Light	file:
__repr__	build/lib/pyvista/plotting/lookup_table.py	/^    def __repr__(self):$/;"	m	class:LookupTable	file:
__repr__	build/lib/pyvista/plotting/mapper.py	/^    def __repr__(self):$/;"	m	class:PointGaussianMapper	file:
__repr__	build/lib/pyvista/plotting/mapper.py	/^    def __repr__(self):$/;"	m	class:_DataSetMapper	file:
__repr__	build/lib/pyvista/plotting/renderer.py	/^    def __repr__(self) -> str:$/;"	m	class:CameraPosition	file:
__repr__	build/lib/pyvista/plotting/scalar_bars.py	/^    def __repr__(self):$/;"	m	class:ScalarBars	file:
__repr__	build/lib/pyvista/plotting/texture.py	/^    def __repr__(self):$/;"	m	class:Texture	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:Theme	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_AxesConfig	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_ColorbarConfig	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_DepthPeelingConfig	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_Font	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SilhouetteConfig	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SliderConfig	file:
__repr__	build/lib/pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SliderStyleConfig	file:
__repr__	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    def __repr__(self) -> str:$/;"	m	class:DynamicScraper	file:
__repr__	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    def __repr__(self) -> str:$/;"	m	class:Scraper	file:
__repr__	build/lib/pyvista/plotting/volume_property.py	/^    def __repr__(self):$/;"	m	class:VolumeProperty	file:
__repr__	build/lib/pyvista/report.py	/^    def __repr__(self):$/;"	m	class:GPUInfo	file:
__repr__	doc/source/conf.py	/^    def __repr__(self):$/;"	m	class:ResetPyVista	file:
__repr__	pyvista/core/cell.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:Cell	file:
__repr__	pyvista/core/composite.py	/^    def __repr__(self: MultiBlock) -> str:$/;"	m	class:MultiBlock	file:
__repr__	pyvista/core/dataset.py	/^    def __repr__(self: ActiveArrayInfo) -> str:$/;"	m	class:ActiveArrayInfo	file:
__repr__	pyvista/core/dataset.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:DataSet	file:
__repr__	pyvista/core/datasetattributes.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:DataSetAttributes	file:
__repr__	pyvista/core/grid.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:ImageData	file:
__repr__	pyvista/core/grid.py	/^    def __repr__(self: Self) -> str:$/;"	m	class:RectilinearGrid	file:
__repr__	pyvista/core/objects.py	/^    def __repr__(self):$/;"	m	class:Table	file:
__repr__	pyvista/core/partitioned.py	/^    def __repr__(self) -> str:$/;"	m	class:PartitionedDataSet	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self) -> str:$/;"	m	class:ExplicitStructuredGrid	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self) -> str:$/;"	m	class:PolyData	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:PointSet	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:StructuredGrid	file:
__repr__	pyvista/core/pointset.py	/^    def __repr__(self):$/;"	m	class:UnstructuredGrid	file:
__repr__	pyvista/core/utilities/arrays.py	/^    def __repr__(self: _SerializedDictArray) -> str:$/;"	m	class:_SerializedDictArray	file:
__repr__	pyvista/core/utilities/geometric_sources.py	/^    def __repr__(self: AxesGeometrySource) -> str:$/;"	m	class:AxesGeometrySource	file:
__repr__	pyvista/core/utilities/reader.py	/^    def __repr__(self) -> str:$/;"	m	class:BaseReader	file:
__repr__	pyvista/core/utilities/transform.py	/^    def __repr__(self: Transform) -> str:$/;"	m	class:Transform	file:
__repr__	pyvista/ext/plot_directive.py	/^    def __repr__(self) -> str:  # pragma no cover$/;"	m	class:ImageFile	file:
__repr__	pyvista/plotting/_property.py	/^    def __repr__(self):$/;"	m	class:Property	file:
__repr__	pyvista/plotting/actor.py	/^    def __repr__(self):$/;"	m	class:Actor	file:
__repr__	pyvista/plotting/axes_assembly.py	/^    def __repr__(self):$/;"	m	class:AxesAssembly	file:
__repr__	pyvista/plotting/axes_assembly.py	/^    def __repr__(self):$/;"	m	class:PlanesAssembly	file:
__repr__	pyvista/plotting/camera.py	/^    def __repr__(self):$/;"	m	class:Camera	file:
__repr__	pyvista/plotting/colors.py	/^    def __repr__(self) -> str:  # pragma: no cover$/;"	m	class:Color	file:
__repr__	pyvista/plotting/composite_mapper.py	/^    def __repr__(self):$/;"	m	class:BlockAttributes	file:
__repr__	pyvista/plotting/lights.py	/^    def __repr__(self) -> str:$/;"	m	class:Light	file:
__repr__	pyvista/plotting/lookup_table.py	/^    def __repr__(self):$/;"	m	class:LookupTable	file:
__repr__	pyvista/plotting/mapper.py	/^    def __repr__(self):$/;"	m	class:PointGaussianMapper	file:
__repr__	pyvista/plotting/mapper.py	/^    def __repr__(self):$/;"	m	class:_DataSetMapper	file:
__repr__	pyvista/plotting/renderer.py	/^    def __repr__(self) -> str:$/;"	m	class:CameraPosition	file:
__repr__	pyvista/plotting/scalar_bars.py	/^    def __repr__(self):$/;"	m	class:ScalarBars	file:
__repr__	pyvista/plotting/texture.py	/^    def __repr__(self):$/;"	m	class:Texture	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:Theme	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_AxesConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_ColorbarConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_DepthPeelingConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_Font	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SilhouetteConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SliderConfig	file:
__repr__	pyvista/plotting/themes.py	/^    def __repr__(self):$/;"	m	class:_SliderStyleConfig	file:
__repr__	pyvista/plotting/utilities/sphinx_gallery.py	/^    def __repr__(self) -> str:$/;"	m	class:DynamicScraper	file:
__repr__	pyvista/plotting/utilities/sphinx_gallery.py	/^    def __repr__(self) -> str:$/;"	m	class:Scraper	file:
__repr__	pyvista/plotting/volume_property.py	/^    def __repr__(self):$/;"	m	class:VolumeProperty	file:
__repr__	pyvista/report.py	/^    def __repr__(self):$/;"	m	class:GPUInfo	file:
__rmul__	build/lib/pyvista/core/utilities/transform.py	/^    def __rmul__(self: Transform, other: float | VectorLike[float]) -> Transform:$/;"	m	class:Transform	file:
__rmul__	pyvista/core/utilities/transform.py	/^    def __rmul__(self: Transform, other: float | VectorLike[float]) -> Transform:$/;"	m	class:Transform	file:
__set_name__	tests/test_conftest.py	/^    def __set_name__(self, owner, name: str):$/;"	m	class:_ReportDescriptor	file:
__setattr__	build/lib/pyvista/core/utilities/arrays.py	/^    def __setattr__(self: _SerializedDictArray, key: Any, value: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__setattr__	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def __setattr__(self: Text3DSource, name: str, value: Any) -> None:$/;"	m	class:Text3DSource	file:
__setattr__	build/lib/pyvista/core/utilities/misc.py	/^    def __setattr__(self, name, value):  # noqa: ANN001, ANN202$/;"	f	function:no_new_attr	file:
__setattr__	pyvista/core/utilities/arrays.py	/^    def __setattr__(self: _SerializedDictArray, key: Any, value: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__setattr__	pyvista/core/utilities/geometric_sources.py	/^    def __setattr__(self: Text3DSource, name: str, value: Any) -> None:$/;"	m	class:Text3DSource	file:
__setattr__	pyvista/core/utilities/misc.py	/^    def __setattr__(self, name, value):  # noqa: ANN001, ANN202$/;"	f	function:no_new_attr	file:
__setitem__	build/lib/pyvista/core/composite.py	/^    def __setitem__($/;"	m	class:MultiBlock	file:
__setitem__	build/lib/pyvista/core/dataset.py	/^    def __setitem__($/;"	m	class:DataSet	file:
__setitem__	build/lib/pyvista/core/datasetattributes.py	/^    def __setitem__($/;"	m	class:DataSetAttributes	file:
__setitem__	build/lib/pyvista/core/objects.py	/^    def __setitem__(self, name, scalars) -> None:$/;"	m	class:Table	file:
__setitem__	build/lib/pyvista/core/partitioned.py	/^    def __setitem__($/;"	m	class:PartitionedDataSet	file:
__setitem__	build/lib/pyvista/core/partitioned.py	/^    def __setitem__(self, index: int, data: DataSet | None) -> None: ...  # pragma: no cover$/;"	m	class:PartitionedDataSet	file:
__setitem__	build/lib/pyvista/core/pyvista_ndarray.py	/^    def __setitem__(self: pyvista_ndarray, key: int | NumpyArray[int], value: Any) -> None:$/;"	m	class:pyvista_ndarray	file:
__setitem__	build/lib/pyvista/core/utilities/arrays.py	/^    def __setitem__(self: _SerializedDictArray, key: Any, item: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__setitem__	build/lib/pyvista/plotting/lookup_table.py	/^    def __setitem__(self, key, value):$/;"	m	class:lookup_table_ndarray	file:
__setitem__	build/lib/pyvista/plotting/prop_collection.py	/^    def __setitem__(self, key, value):$/;"	m	class:_PropCollection	file:
__setitem__	build/lib/pyvista/plotting/themes.py	/^    def __setitem__(self, key, value):$/;"	m	class:_ThemeConfig	file:
__setitem__	pyvista/core/composite.py	/^    def __setitem__($/;"	m	class:MultiBlock	file:
__setitem__	pyvista/core/dataset.py	/^    def __setitem__($/;"	m	class:DataSet	file:
__setitem__	pyvista/core/datasetattributes.py	/^    def __setitem__($/;"	m	class:DataSetAttributes	file:
__setitem__	pyvista/core/objects.py	/^    def __setitem__(self, name, scalars) -> None:$/;"	m	class:Table	file:
__setitem__	pyvista/core/partitioned.py	/^    def __setitem__($/;"	m	class:PartitionedDataSet	file:
__setitem__	pyvista/core/partitioned.py	/^    def __setitem__(self, index: int, data: DataSet | None) -> None: ...  # pragma: no cover$/;"	m	class:PartitionedDataSet	file:
__setitem__	pyvista/core/pyvista_ndarray.py	/^    def __setitem__(self: pyvista_ndarray, key: int | NumpyArray[int], value: Any) -> None:$/;"	m	class:pyvista_ndarray	file:
__setitem__	pyvista/core/utilities/arrays.py	/^    def __setitem__(self: _SerializedDictArray, key: Any, item: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__setitem__	pyvista/plotting/lookup_table.py	/^    def __setitem__(self, key, value):$/;"	m	class:lookup_table_ndarray	file:
__setitem__	pyvista/plotting/prop_collection.py	/^    def __setitem__(self, key, value):$/;"	m	class:_PropCollection	file:
__setitem__	pyvista/plotting/themes.py	/^    def __setitem__(self, key, value):$/;"	m	class:_ThemeConfig	file:
__setstate__	build/lib/pyvista/core/dataobject.py	/^    def __setstate__(self: Self, state: Any) -> None:$/;"	m	class:DataObject	file:
__setstate__	build/lib/pyvista/core/dataset.py	/^    def __setstate__(self: ActiveArrayInfo, state: dict[str, Any]) -> None:$/;"	m	class:ActiveArrayInfo	file:
__setstate__	build/lib/pyvista/core/utilities/arrays.py	/^    def __setstate__(self: _SerializedDictArray, state: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__setstate__	pyvista/core/dataobject.py	/^    def __setstate__(self: Self, state: Any) -> None:$/;"	m	class:DataObject	file:
__setstate__	pyvista/core/dataset.py	/^    def __setstate__(self: ActiveArrayInfo, state: dict[str, Any]) -> None:$/;"	m	class:ActiveArrayInfo	file:
__setstate__	pyvista/core/utilities/arrays.py	/^    def __setstate__(self: _SerializedDictArray, state: Any) -> None:$/;"	m	class:_SerializedDictArray	file:
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:Theme
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_CameraConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_LightingConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_SliderStyleConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_TrameConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = ['_box', '_show', '_x_color', '_y_color', '_z_color']$/;"	v	class:_AxesConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = ['_classic', '_modern']$/;"	v	class:_SliderConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = ['_color', '_decimate', '_enabled', '_feature_angle', '_line_width', '_opacity']$/;"	v	class:_SilhouetteConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = ['_color', '_family', '_fmt', '_label_size', '_size', '_title_size']$/;"	v	class:_Font
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = ['_enabled', '_number_of_peels', '_occlusion_ratio']$/;"	v	class:_DepthPeelingConfig
__slots__	build/lib/pyvista/plotting/themes.py	/^    __slots__ = ['_height', '_position_x', '_position_y', '_width']$/;"	v	class:_ColorbarConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:Theme
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_CameraConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_LightingConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_SliderStyleConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = [$/;"	v	class:_TrameConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_box', '_show', '_x_color', '_y_color', '_z_color']$/;"	v	class:_AxesConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_classic', '_modern']$/;"	v	class:_SliderConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_color', '_decimate', '_enabled', '_feature_angle', '_line_width', '_opacity']$/;"	v	class:_SilhouetteConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_color', '_family', '_fmt', '_label_size', '_size', '_title_size']$/;"	v	class:_Font
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_enabled', '_number_of_peels', '_occlusion_ratio']$/;"	v	class:_DepthPeelingConfig
__slots__	pyvista/plotting/themes.py	/^    __slots__ = ['_height', '_position_x', '_position_y', '_width']$/;"	v	class:_ColorbarConfig
__str__	build/lib/pyvista/core/cell.py	/^    def __str__(self: Self) -> str:$/;"	m	class:Cell	file:
__str__	build/lib/pyvista/core/composite.py	/^    def __str__(self: MultiBlock) -> str:$/;"	m	class:MultiBlock	file:
__str__	build/lib/pyvista/core/dataset.py	/^    def __str__(self: Self) -> str:$/;"	m	class:DataSet	file:
__str__	build/lib/pyvista/core/grid.py	/^    def __str__(self: Self) -> str:$/;"	m	class:ImageData	file:
__str__	build/lib/pyvista/core/grid.py	/^    def __str__(self: Self) -> str:$/;"	m	class:RectilinearGrid	file:
__str__	build/lib/pyvista/core/objects.py	/^    def __str__(self):$/;"	m	class:Table	file:
__str__	build/lib/pyvista/core/partitioned.py	/^    def __str__(self) -> str:$/;"	m	class:PartitionedDataSet	file:
__str__	build/lib/pyvista/core/pointset.py	/^    def __str__(self) -> str:$/;"	m	class:ExplicitStructuredGrid	file:
__str__	build/lib/pyvista/core/pointset.py	/^    def __str__(self) -> str:$/;"	m	class:PolyData	file:
__str__	build/lib/pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:PointSet	file:
__str__	build/lib/pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:StructuredGrid	file:
__str__	build/lib/pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:UnstructuredGrid	file:
__str__	build/lib/pyvista/plotting/camera.py	/^    def __str__(self):$/;"	m	class:Camera	file:
__str__	build/lib/pyvista/plotting/charts.py	/^    def __str__(self):$/;"	m	class:_vtkWrapper	file:
__str__	build/lib/pyvista/plotting/lights.py	/^    def __str__(self):$/;"	m	class:LightType	file:
__str__	doc/source/make_tables.py	/^        def __str__(self) -> str:$/;"	m	class:StrEnum	file:
__str__	pyvista/core/cell.py	/^    def __str__(self: Self) -> str:$/;"	m	class:Cell	file:
__str__	pyvista/core/composite.py	/^    def __str__(self: MultiBlock) -> str:$/;"	m	class:MultiBlock	file:
__str__	pyvista/core/dataset.py	/^    def __str__(self: Self) -> str:$/;"	m	class:DataSet	file:
__str__	pyvista/core/grid.py	/^    def __str__(self: Self) -> str:$/;"	m	class:ImageData	file:
__str__	pyvista/core/grid.py	/^    def __str__(self: Self) -> str:$/;"	m	class:RectilinearGrid	file:
__str__	pyvista/core/objects.py	/^    def __str__(self):$/;"	m	class:Table	file:
__str__	pyvista/core/partitioned.py	/^    def __str__(self) -> str:$/;"	m	class:PartitionedDataSet	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self) -> str:$/;"	m	class:ExplicitStructuredGrid	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self) -> str:$/;"	m	class:PolyData	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:PointSet	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:StructuredGrid	file:
__str__	pyvista/core/pointset.py	/^    def __str__(self):$/;"	m	class:UnstructuredGrid	file:
__str__	pyvista/plotting/camera.py	/^    def __str__(self):$/;"	m	class:Camera	file:
__str__	pyvista/plotting/charts.py	/^    def __str__(self):$/;"	m	class:_vtkWrapper	file:
__str__	pyvista/plotting/lights.py	/^    def __str__(self):$/;"	m	class:LightType	file:
__sub__	build/lib/pyvista/core/pointset.py	/^    def __sub__(self, cutting_mesh):$/;"	m	class:PolyData	file:
__sub__	pyvista/core/pointset.py	/^    def __sub__(self, cutting_mesh):$/;"	m	class:PolyData	file:
__version__	build/lib/pyvista/__init__.py	/^from pyvista._version import __version__ as __version__$/;"	i
__version__	build/lib/pyvista/_version.py	/^__version__ = '.'.join(map(str, version_info))$/;"	v
__version__	build/lib/pyvista/plotting/plotter.py	/^            from imageio import __version__$/;"	i
__version__	pyvista/__init__.py	/^from pyvista._version import __version__ as __version__$/;"	i
__version__	pyvista/_version.py	/^__version__ = '.'.join(map(str, version_info))$/;"	v
__version__	pyvista/plotting/plotter.py	/^            from imageio import __version__$/;"	i
_activate_plotting_scalars	build/lib/pyvista/core/composite.py	/^    def _activate_plotting_scalars($/;"	m	class:MultiBlock
_activate_plotting_scalars	pyvista/core/composite.py	/^    def _activate_plotting_scalars($/;"	m	class:MultiBlock
_active_normals_name	build/lib/pyvista/core/datasetattributes.py	/^    def _active_normals_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
_active_normals_name	build/lib/pyvista/core/datasetattributes.py	/^    def _active_normals_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
_active_normals_name	pyvista/core/datasetattributes.py	/^    def _active_normals_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
_active_normals_name	pyvista/core/datasetattributes.py	/^    def _active_normals_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
_add_dataset_card	doc/source/make_tables.py	/^    def _add_dataset_card(cls, dataset_name: str, dataset_loader: _DatasetLoader):$/;"	m	class:DatasetCardFetcher
_add_legend_label	build/lib/pyvista/plotting/plotter.py	/^    def _add_legend_label(self, actor, label, scalars, color: Color):$/;"	m	class:BasePlotter
_add_legend_label	pyvista/plotting/plotter.py	/^    def _add_legend_label(self, actor, label, scalars, color: Color):$/;"	m	class:BasePlotter
_add_pass	build/lib/pyvista/plotting/render_passes.py	/^    def _add_pass(self, render_pass):$/;"	m	class:RenderPasses
_add_pass	pyvista/plotting/render_passes.py	/^    def _add_pass(self, render_pass):$/;"	m	class:RenderPasses
_add_plot	build/lib/pyvista/plotting/charts.py	/^    def _add_plot(self, plot_type, *args, **kwargs):$/;"	m	class:Chart2D
_add_plot	pyvista/plotting/charts.py	/^    def _add_plot(self, plot_type, *args, **kwargs):$/;"	m	class:Chart2D
_aligned_dedent	doc/source/make_tables.py	/^def _aligned_dedent(txt):$/;"	f
_all__slots__	build/lib/pyvista/plotting/themes.py	/^    def _all__slots__(cls):$/;"	m	class:_ThemeConfig
_all__slots__	pyvista/plotting/themes.py	/^    def _all__slots__(cls):$/;"	m	class:_ThemeConfig
_allow_empty_mesh	tests/plotting/test_plotting.py	/^def _allow_empty_mesh():$/;"	f
_apply_attrs_to_reader	build/lib/pyvista/core/utilities/fileio.py	/^def _apply_attrs_to_reader(reader: BaseReader, attrs: dict[str, object | Sequence[object]]) -> None:$/;"	f
_apply_attrs_to_reader	pyvista/core/utilities/fileio.py	/^def _apply_attrs_to_reader(reader: BaseReader, attrs: dict[str, object | Sequence[object]]) -> None:$/;"	f
_apply_component_logic_to_array	build/lib/pyvista/core/filters/data_set.py	/^    def _apply_component_logic_to_array(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_apply_component_logic_to_array	pyvista/core/filters/data_set.py	/^    def _apply_component_logic_to_array(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_array_from_vtkmatrix	build/lib/pyvista/core/_validation/validate.py	/^def _array_from_vtkmatrix($/;"	f
_array_from_vtkmatrix	pyvista/core/_validation/validate.py	/^def _array_from_vtkmatrix($/;"	f
_array_from_vtkmatrix	tests/core/test_validation.py	/^from pyvista.core._validation.validate import _array_from_vtkmatrix$/;"	i
_as_iterable	doc/source/make_tables.py	/^def _as_iterable(item) -> Iterable[Any]:$/;"	f
_assert_irregular_faces_equal	tests/core/test_polydata.py	/^def _assert_irregular_faces_equal(faces, expected):$/;"	f
_assert_verts_equal	tests/core/test_polydata.py	/^def _assert_verts_equal($/;"	f
_assoc_array	build/lib/pyvista/core/utilities/arrays.py	/^def _assoc_array($/;"	f
_assoc_array	pyvista/core/utilities/arrays.py	/^def _assoc_array($/;"	f
_attr	build/lib/pyvista/plotting/composite_mapper.py	/^    def _attr(self):$/;"	m	class:BlockAttributes
_attr	pyvista/plotting/composite_mapper.py	/^    def _attr(self):$/;"	m	class:BlockAttributes
_background_color_set	build/lib/pyvista/plotting/text.py	/^    _background_color_set = None$/;"	v	class:TextProperty
_background_color_set	pyvista/plotting/text.py	/^    _background_color_set = None$/;"	v	class:TextProperty
_before_close_callback	build/lib/pyvista/plotting/plotter.py	/^    def _before_close_callback(self):$/;"	m	class:BasePlotter
_before_close_callback	build/lib/pyvista/plotting/plotter.py	/^    def _before_close_callback(self, func) -> None:$/;"	m	class:BasePlotter
_before_close_callback	pyvista/plotting/plotter.py	/^    def _before_close_callback(self):$/;"	m	class:BasePlotter
_before_close_callback	pyvista/plotting/plotter.py	/^    def _before_close_callback(self, func) -> None:$/;"	m	class:BasePlotter
_before_render_event	build/lib/pyvista/plotting/renderer.py	/^    def _before_render_event(self, *args, **kwargs) -> None:$/;"	m	class:Renderer
_before_render_event	pyvista/plotting/renderer.py	/^    def _before_render_event(self, *args, **kwargs) -> None:$/;"	m	class:Renderer
_blood_vessels_load_func	build/lib/pyvista/examples/downloads.py	/^def _blood_vessels_load_func(obj):  # pragma: no cover$/;"	f
_blood_vessels_load_func	pyvista/examples/downloads.py	/^def _blood_vessels_load_func(obj):  # pragma: no cover$/;"	f
_bolt_nut_files_func	build/lib/pyvista/examples/downloads.py	/^def _bolt_nut_files_func():  # pragma: no cover$/;"	f
_bolt_nut_files_func	pyvista/examples/downloads.py	/^def _bolt_nut_files_func():  # pragma: no cover$/;"	f
_boolean	build/lib/pyvista/core/filters/poly_data.py	/^    def _boolean(self, btype, other_mesh, tolerance, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
_boolean	pyvista/core/filters/poly_data.py	/^    def _boolean(self, btype, other_mesh, tolerance, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
_bounding_box	build/lib/pyvista/core/filters/data_set.py	/^    def _bounding_box(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_bounding_box	pyvista/core/filters/data_set.py	/^    def _bounding_box(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_bunny_coarse_load_func	build/lib/pyvista/examples/downloads.py	/^def _bunny_coarse_load_func(mesh):$/;"	f
_bunny_coarse_load_func	pyvista/examples/downloads.py	/^def _bunny_coarse_load_func(mesh):$/;"	f
_camera_pass	build/lib/pyvista/plotting/render_passes.py	/^    def _camera_pass(self):$/;"	m	class:RenderPasses
_camera_pass	pyvista/plotting/render_passes.py	/^    def _camera_pass(self):$/;"	m	class:RenderPasses
_capture	tests/plotting/test_charts.py	/^    def _capture(self):$/;"	m	class:PlotterChanged
_carotid_load_func	build/lib/pyvista/examples/downloads.py	/^def _carotid_load_func(mesh):  # pragma: no cover$/;"	f
_carotid_load_func	pyvista/examples/downloads.py	/^def _carotid_load_func(mesh):  # pragma: no cover$/;"	f
_cast_to_list	build/lib/pyvista/core/_validation/_cast_array.py	/^def _cast_to_list($/;"	f
_cast_to_list	pyvista/core/_validation/_cast_array.py	/^def _cast_to_list($/;"	f
_cast_to_list	tests/core/test_validation.py	/^from pyvista.core._validation._cast_array import _cast_to_list$/;"	i
_cast_to_numpy	build/lib/pyvista/core/_validation/_cast_array.py	/^def _cast_to_numpy($/;"	f
_cast_to_numpy	build/lib/pyvista/core/_validation/check.py	/^from pyvista.core._validation._cast_array import _cast_to_numpy$/;"	i
_cast_to_numpy	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation._cast_array import _cast_to_numpy$/;"	i
_cast_to_numpy	pyvista/core/_validation/_cast_array.py	/^def _cast_to_numpy($/;"	f
_cast_to_numpy	pyvista/core/_validation/check.py	/^from pyvista.core._validation._cast_array import _cast_to_numpy$/;"	i
_cast_to_numpy	pyvista/core/_validation/validate.py	/^from pyvista.core._validation._cast_array import _cast_to_numpy$/;"	i
_cast_to_numpy	tests/core/test_validation.py	/^from pyvista.core._validation._cast_array import _cast_to_numpy$/;"	i
_cast_to_tuple	build/lib/pyvista/core/_validation/_cast_array.py	/^def _cast_to_tuple($/;"	f
_cast_to_tuple	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation._cast_array import _cast_to_tuple$/;"	i
_cast_to_tuple	pyvista/core/_validation/_cast_array.py	/^def _cast_to_tuple($/;"	f
_cast_to_tuple	pyvista/core/_validation/validate.py	/^from pyvista.core._validation._cast_array import _cast_to_tuple$/;"	i
_cast_to_tuple	tests/core/test_imagedata_filters.py	/^from pyvista.core._validation._cast_array import _cast_to_tuple$/;"	i
_cast_to_tuple	tests/core/test_validation.py	/^from pyvista.core._validation._cast_array import _cast_to_tuple$/;"	i
_cell_attr_err_msg	build/lib/pyvista/core/utilities/reader.py	/^    _cell_attr_err_msg = 'Nek5000 data does not contain cell arrays, this method cannot be used'$/;"	v	class:Nek5000Reader
_cell_attr_err_msg	pyvista/core/utilities/reader.py	/^    _cell_attr_err_msg = 'Nek5000 data does not contain cell arrays, this method cannot be used'$/;"	v	class:Nek5000Reader
_cell_bounds	examples/02-plot/spherical.py	/^def _cell_bounds(points, bound_position=0.5):$/;"	f
_cgns_multi_read_func	build/lib/pyvista/examples/downloads.py	/^def _cgns_multi_read_func(filename):  # pragma: no cover$/;"	f
_cgns_multi_read_func	pyvista/examples/downloads.py	/^def _cgns_multi_read_func(filename):  # pragma: no cover$/;"	f
_change_fft_output_scalars	build/lib/pyvista/core/filters/image_data.py	/^    def _change_fft_output_scalars(self, dataset, orig_name, out_name) -> None:$/;"	m	class:ImageDataFilters
_change_fft_output_scalars	pyvista/core/filters/image_data.py	/^    def _change_fft_output_scalars(self, dataset, orig_name, out_name) -> None:$/;"	m	class:ImageDataFilters
_check_actor	build/lib/pyvista/plotting/lights.py	/^    def _check_actor(self):$/;"	m	class:Light
_check_actor	pyvista/plotting/lights.py	/^    def _check_actor(self):$/;"	m	class:Light
_check_args_kwargs_marker	tests/conftest.py	/^def _check_args_kwargs_marker(item_mark: pytest.Mark, sig: Signature):$/;"	f
_check_callable	build/lib/pyvista/plotting/affine_widget.py	/^def _check_callable(func, name='callback'):$/;"	f
_check_callable	pyvista/plotting/affine_widget.py	/^def _check_callable(func, name='callback'):$/;"	f
_check_compare_fail	tests/doc/tst_doc_images.py	/^def _check_compare_fail(filename, error_, allowed_error=500.0):$/;"	f
_check_compare_warn	tests/doc/tst_doc_images.py	/^def _check_compare_warn(filename, error_, allowed_warning=200.0):$/;"	f
_check_fft_scalars	build/lib/pyvista/core/filters/image_data.py	/^    def _check_fft_scalars(self):$/;"	m	class:ImageDataFilters
_check_fft_scalars	pyvista/core/filters/image_data.py	/^    def _check_fft_scalars(self):$/;"	m	class:ImageDataFilters
_check_for_consistency	build/lib/pyvista/core/pointset.py	/^    def _check_for_consistency(self):$/;"	m	class:UnstructuredGrid
_check_for_consistency	pyvista/core/pointset.py	/^    def _check_for_consistency(self):$/;"	m	class:UnstructuredGrid
_check_has_ren_win	build/lib/pyvista/plotting/plotter.py	/^    def _check_has_ren_win(self) -> None:$/;"	m	class:BasePlotter
_check_has_ren_win	pyvista/plotting/plotter.py	/^    def _check_has_ren_win(self) -> None:$/;"	m	class:BasePlotter
_check_mode	build/lib/pyvista/core/utilities/transform.py	/^        def _check_mode(kind: str, mode_: str | None, allowed_modes: list[str | None]) -> None:$/;"	f	function:Transform.apply
_check_mode	pyvista/core/utilities/transform.py	/^        def _check_mode(kind: str, mode_: str | None, allowed_modes: list[str | None]) -> None:$/;"	f	function:Transform.apply
_check_percent	build/lib/pyvista/core/filters/data_set.py	/^        def _check_percent(percent):$/;"	f	function:DataSetFilters.threshold_percent
_check_percent	pyvista/core/filters/data_set.py	/^        def _check_percent(percent):$/;"	f	function:DataSetFilters.threshold_percent
_check_range	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	build/lib/pyvista/core/utilities/misc.py	/^def _check_range(value: float, rng: Sequence[float], parm_name: str) -> None:$/;"	f
_check_range	build/lib/pyvista/plotting/_property.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	build/lib/pyvista/plotting/composite_mapper.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	build/lib/pyvista/plotting/text.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	build/lib/pyvista/plotting/themes.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	pyvista/core/utilities/misc.py	/^def _check_range(value: float, rng: Sequence[float], parm_name: str) -> None:$/;"	f
_check_range	pyvista/plotting/_property.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	pyvista/plotting/composite_mapper.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	pyvista/plotting/text.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	pyvista/plotting/themes.py	/^from pyvista.core.utilities.misc import _check_range$/;"	i
_check_range	tests/plotting/test_property.py	/^from pyvista.plotting._property import _check_range$/;"	i
_check_rendered	build/lib/pyvista/plotting/plotter.py	/^    def _check_rendered(self) -> None:$/;"	m	class:BasePlotter
_check_rendered	pyvista/plotting/plotter.py	/^    def _check_rendered(self) -> None:$/;"	m	class:BasePlotter
_check_sign	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def _check_sign(sign_: str) -> None:$/;"	f	function:OrthogonalPlanesSource.normal_sign
_check_sign	pyvista/core/utilities/geometric_sources.py	/^        def _check_sign(sign_: str) -> None:$/;"	f	function:OrthogonalPlanesSource.normal_sign
_check_sorted_params	tests/core/test_validation.py	/^    def _check_sorted_params(arr):$/;"	f	function:test_check_sorted
_class_reader	build/lib/pyvista/core/utilities/reader.py	/^    _class_reader = _GIFReader$/;"	v	class:GIFReader
_class_reader	build/lib/pyvista/core/utilities/reader.py	/^    _class_reader = _PVDReader$/;"	v	class:PVDReader
_class_reader	build/lib/pyvista/core/utilities/reader.py	/^    _class_reader = staticmethod(lazy_vtkPOpenFOAMReader)$/;"	v	class:POpenFOAMReader
_class_reader	pyvista/core/utilities/reader.py	/^    _class_reader = _GIFReader$/;"	v	class:GIFReader
_class_reader	pyvista/core/utilities/reader.py	/^    _class_reader = _PVDReader$/;"	v	class:PVDReader
_class_reader	pyvista/core/utilities/reader.py	/^    _class_reader = staticmethod(lazy_vtkPOpenFOAMReader)$/;"	v	class:POpenFOAMReader
_classproperty	build/lib/pyvista/core/utilities/misc.py	/^class _classproperty(property):$/;"	c
_classproperty	doc/source/make_tables.py	/^from pyvista.core.utilities.misc import _classproperty$/;"	i
_classproperty	pyvista/core/utilities/misc.py	/^class _classproperty(property):$/;"	c
_classproperty	tests/core/test_utilities.py	/^from pyvista.core.utilities.misc import _classproperty$/;"	i
_clear_g_path_event_watcher	build/lib/pyvista/plotting/picking.py	/^        def _clear_g_path_event_watcher():$/;"	f	function:PickingHelper.enable_geodesic_picking
_clear_g_path_event_watcher	pyvista/plotting/picking.py	/^        def _clear_g_path_event_watcher():$/;"	f	function:PickingHelper.enable_geodesic_picking
_clear_horizon_event_watcher	build/lib/pyvista/plotting/picking.py	/^        def _clear_horizon_event_watcher():$/;"	f	function:PickingHelper.enable_horizon_picking
_clear_horizon_event_watcher	pyvista/plotting/picking.py	/^        def _clear_horizon_event_watcher():$/;"	f	function:PickingHelper.enable_horizon_picking
_clear_path_event_watcher	build/lib/pyvista/plotting/picking.py	/^        def _clear_path_event_watcher():$/;"	f	function:PickingHelper.enable_path_picking
_clear_path_event_watcher	pyvista/plotting/picking.py	/^        def _clear_path_event_watcher():$/;"	f	function:PickingHelper.enable_path_picking
_clear_picking_representations	build/lib/pyvista/plotting/picking.py	/^    def _clear_picking_representations(self):$/;"	m	class:PickingInterface
_clear_picking_representations	pyvista/plotting/picking.py	/^    def _clear_picking_representations(self):$/;"	m	class:PickingInterface
_clear_ren_win	build/lib/pyvista/plotting/plotter.py	/^    def _clear_ren_win(self) -> None:$/;"	m	class:BasePlotter
_clear_ren_win	pyvista/plotting/plotter.py	/^    def _clear_ren_win(self) -> None:$/;"	m	class:BasePlotter
_click_event	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _click_event(self, _obj, event):$/;"	m	class:RenderWindowInteractor
_click_event	pyvista/plotting/render_window_interactor.py	/^    def _click_event(self, _obj, event):$/;"	m	class:RenderWindowInteractor
_clip_with_function	build/lib/pyvista/core/filters/data_object.py	/^    def _clip_with_function(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
_clip_with_function	pyvista/core/filters/data_object.py	/^    def _clip_with_function(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
_cmap	build/lib/pyvista/plotting/mapper.py	/^    _cmap = None$/;"	v	class:_DataSetMapper
_cmap	pyvista/plotting/mapper.py	/^    _cmap = None$/;"	v	class:_DataSetMapper
_coerce_pointslike_arg	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	build/lib/pyvista/core/utilities/arrays.py	/^def _coerce_pointslike_arg($/;"	f
_coerce_pointslike_arg	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	pyvista/core/dataset.py	/^from .utilities.arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	pyvista/core/utilities/arrays.py	/^def _coerce_pointslike_arg($/;"	f
_coerce_pointslike_arg	pyvista/core/utilities/geometric_objects.py	/^from .arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import _coerce_pointslike_arg$/;"	i
_coerce_pointslike_arg	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import _coerce_pointslike_arg$/;"	i
_color_set	build/lib/pyvista/plotting/_property.py	/^    _color_set = None$/;"	v	class:Property
_color_set	build/lib/pyvista/plotting/text.py	/^    _color_set = None$/;"	v	class:TextProperty
_color_set	pyvista/plotting/_property.py	/^    _color_set = None$/;"	v	class:Property
_color_set	pyvista/plotting/text.py	/^    _color_set = None$/;"	v	class:TextProperty
_color_synonyms	build/lib/pyvista/plotting/colors.py	/^_color_synonyms = {$/;"	v
_color_synonyms	pyvista/plotting/colors.py	/^_color_synonyms = {$/;"	v
_common_arg_parser	build/lib/pyvista/plotting/_plotting.py	/^def _common_arg_parser($/;"	f
_common_arg_parser	build/lib/pyvista/plotting/plotter.py	/^from ._plotting import _common_arg_parser$/;"	i
_common_arg_parser	pyvista/plotting/_plotting.py	/^def _common_arg_parser($/;"	f
_common_arg_parser	pyvista/plotting/plotter.py	/^from ._plotting import _common_arg_parser$/;"	i
_compose_with_translations	build/lib/pyvista/core/utilities/transform.py	/^    def _compose_with_translations($/;"	m	class:Transform
_compose_with_translations	pyvista/core/utilities/transform.py	/^    def _compose_with_translations($/;"	m	class:Transform
_compute_normals	build/lib/pyvista/core/filters/composite.py	/^    def _compute_normals($/;"	m	class:CompositeFilters
_compute_normals	pyvista/core/filters/composite.py	/^    def _compute_normals($/;"	m	class:CompositeFilters
_compute_unit_cell_quality	tests/core/test_utilities.py	/^def _compute_unit_cell_quality($/;"	f
_config_axes_theme	tests/plotting/test_axes_assembly.py	/^def _config_axes_theme():$/;"	f
_config_user_dict	build/lib/pyvista/core/dataobject.py	/^    def _config_user_dict(self: Self) -> None:$/;"	m	class:DataObject
_config_user_dict	pyvista/core/dataobject.py	/^    def _config_user_dict(self: Self) -> None:$/;"	m	class:DataObject
_configure_boundaries	build/lib/pyvista/core/filters/image_data.py	/^        def _configure_boundaries($/;"	f	function:ImageDataFilters.contour_labels
_configure_boundaries	pyvista/core/filters/image_data.py	/^        def _configure_boundaries($/;"	f	function:ImageDataFilters.contour_labels
_configure_scalars_mode	build/lib/pyvista/plotting/mapper.py	/^    def _configure_scalars_mode($/;"	m	class:_DataSetMapper
_configure_scalars_mode	pyvista/plotting/mapper.py	/^    def _configure_scalars_mode($/;"	m	class:_DataSetMapper
_configure_smoothing	build/lib/pyvista/core/filters/image_data.py	/^        def _configure_smoothing($/;"	f	function:ImageDataFilters.contour_labels
_configure_smoothing	pyvista/core/filters/image_data.py	/^        def _configure_smoothing($/;"	f	function:ImageDataFilters.contour_labels
_connectivity_array	build/lib/pyvista/core/pointset.py	/^    def _connectivity_array(self) -> NumpyArray[int]:$/;"	m	class:PolyData
_connectivity_array	pyvista/core/pointset.py	/^    def _connectivity_array(self) -> NumpyArray[int]:$/;"	m	class:PolyData
_construct_result_method	build/lib/pyvista/core/utilities/reader.py	/^    def _construct_result_method(self, prefix, suffix):$/;"	m	class:ExodusIIBlockSet
_construct_result_method	pyvista/core/utilities/reader.py	/^    def _construct_result_method(self, prefix, suffix):$/;"	m	class:ExodusIIBlockSet
_contains_doctest	build/lib/pyvista/ext/plot_directive.py	/^def _contains_doctest(text):$/;"	f
_contains_doctest	pyvista/ext/plot_directive.py	/^def _contains_doctest(text):$/;"	f
_contains_pyvista_plot	build/lib/pyvista/ext/plot_directive.py	/^def _contains_pyvista_plot(text) -> bool:$/;"	f
_contains_pyvista_plot	pyvista/ext/plot_directive.py	/^def _contains_pyvista_plot(text) -> bool:$/;"	f
_control_key_press	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _control_key_press(self):$/;"	m	class:RenderWindowInteractor
_control_key_press	pyvista/plotting/render_window_interactor.py	/^    def _control_key_press(self):$/;"	m	class:RenderWindowInteractor
_control_key_release	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _control_key_release(self):$/;"	m	class:RenderWindowInteractor
_control_key_release	pyvista/plotting/render_window_interactor.py	/^    def _control_key_release(self):$/;"	m	class:RenderWindowInteractor
_convert_to_real_scalars	build/lib/pyvista/core/composite.py	/^    def _convert_to_real_scalars(self: MultiBlock, data_attr: str, scalars_name: str) -> str:$/;"	m	class:MultiBlock
_convert_to_real_scalars	pyvista/core/composite.py	/^    def _convert_to_real_scalars(self: MultiBlock, data_attr: str, scalars_name: str) -> str:$/;"	m	class:MultiBlock
_convert_to_single_component	build/lib/pyvista/core/composite.py	/^    def _convert_to_single_component($/;"	m	class:MultiBlock
_convert_to_single_component	pyvista/core/composite.py	/^    def _convert_to_single_component($/;"	m	class:MultiBlock
_convert_to_uint8_rgb_scalars	build/lib/pyvista/core/composite.py	/^    def _convert_to_uint8_rgb_scalars(self: MultiBlock, data_attr: str, scalars_name: str) -> str:$/;"	m	class:MultiBlock
_convert_to_uint8_rgb_scalars	pyvista/core/composite.py	/^    def _convert_to_uint8_rgb_scalars(self: MultiBlock, data_attr: str, scalars_name: str) -> str:$/;"	m	class:MultiBlock
_create_dataset_props_block	doc/source/make_tables.py	/^    def _create_dataset_props_block($/;"	m	class:DatasetCard
_create_default_image	doc/source/make_tables.py	/^    def _create_default_image():$/;"	m	class:DatasetCard
_create_file_props_block	doc/source/make_tables.py	/^    def _create_file_props_block(cls, loader, file_size, num_files, file_ext, reader_type):$/;"	m	class:DatasetCard
_create_footer_block	doc/source/make_tables.py	/^    def _create_footer_block(cls, datasource_links):$/;"	m	class:DatasetCard
_create_frame_from_quad_points	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def _create_frame_from_quad_points($/;"	f	function:CubeFacesSource.update
_create_frame_from_quad_points	pyvista/core/utilities/geometric_sources.py	/^        def _create_frame_from_quad_points($/;"	f	function:CubeFacesSource.update
_create_header_block	doc/source/make_tables.py	/^    def _create_header_block(cls, index_name, header_name, carousel_badges):$/;"	m	class:DatasetCard
_create_image_block	doc/source/make_tables.py	/^    def _create_image_block(cls, img_path):$/;"	m	class:DatasetCard
_create_info_block	doc/source/make_tables.py	/^    def _create_info_block(cls, func_ref, func_doc):$/;"	m	class:DatasetCard
_create_object	tests/plotting/test_plotting.py	/^    def _create_object(_direction=None):$/;"	f	function:test_direction_objects
_create_seealso_block	doc/source/make_tables.py	/^    def _create_seealso_block(cls, cross_references):$/;"	m	class:DatasetCard
_cubemap_from_paths	build/lib/pyvista/plotting/utilities/cubemap.py	/^def _cubemap_from_paths(image_paths):$/;"	f
_cubemap_from_paths	pyvista/plotting/utilities/cubemap.py	/^def _cubemap_from_paths(image_paths):$/;"	f
_cylinder_crossflow_files_func	build/lib/pyvista/examples/downloads.py	/^def _cylinder_crossflow_files_func():  # pragma: no cover$/;"	f
_cylinder_crossflow_files_func	pyvista/examples/downloads.py	/^def _cylinder_crossflow_files_func():  # pragma: no cover$/;"	f
_damavand_volcano_load_func	build/lib/pyvista/examples/downloads.py	/^def _damavand_volcano_load_func(volume):  # pragma: no cover$/;"	f
_damavand_volcano_load_func	pyvista/examples/downloads.py	/^def _damavand_volcano_load_func(volume):  # pragma: no cover$/;"	f
_dataset_3gqp	build/lib/pyvista/examples/downloads.py	/^_dataset_3gqp = _SingleFileDownloadableDatasetLoader('3GQP.pdb')$/;"	v
_dataset_3gqp	pyvista/examples/downloads.py	/^_dataset_3gqp = _SingleFileDownloadableDatasetLoader('3GQP.pdb')$/;"	v
_dataset_action_figure	build/lib/pyvista/examples/downloads.py	/^_dataset_action_figure = _SingleFileDownloadableDatasetLoader('tigerfighter_decimated.obj')$/;"	v
_dataset_action_figure	pyvista/examples/downloads.py	/^_dataset_action_figure = _SingleFileDownloadableDatasetLoader('tigerfighter_decimated.obj')$/;"	v
_dataset_aero_bracket	build/lib/pyvista/examples/downloads.py	/^_dataset_aero_bracket = _SingleFileDownloadableDatasetLoader('fea\/aero_bracket\/aero_bracket.vtu')$/;"	v
_dataset_aero_bracket	pyvista/examples/downloads.py	/^_dataset_aero_bracket = _SingleFileDownloadableDatasetLoader('fea\/aero_bracket\/aero_bracket.vtu')$/;"	v
_dataset_airplane	build/lib/pyvista/examples/examples.py	/^_dataset_airplane = _SingleFileDownloadableDatasetLoader(planefile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_airplane	pyvista/examples/examples.py	/^_dataset_airplane = _SingleFileDownloadableDatasetLoader(planefile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_angular_sector	build/lib/pyvista/examples/downloads.py	/^_dataset_angular_sector = _SingleFileDownloadableDatasetLoader('AngularSector.vtk')$/;"	v
_dataset_angular_sector	pyvista/examples/downloads.py	/^_dataset_angular_sector = _SingleFileDownloadableDatasetLoader('AngularSector.vtk')$/;"	v
_dataset_ant	build/lib/pyvista/examples/examples.py	/^_dataset_ant = _SingleFileDownloadableDatasetLoader(antfile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_ant	pyvista/examples/examples.py	/^_dataset_ant = _SingleFileDownloadableDatasetLoader(antfile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_antarctica_velocity	build/lib/pyvista/examples/downloads.py	/^_dataset_antarctica_velocity = _SingleFileDownloadableDatasetLoader('antarctica_velocity.vtp')$/;"	v
_dataset_antarctica_velocity	pyvista/examples/downloads.py	/^_dataset_antarctica_velocity = _SingleFileDownloadableDatasetLoader('antarctica_velocity.vtp')$/;"	v
_dataset_armadillo	build/lib/pyvista/examples/downloads.py	/^_dataset_armadillo = _SingleFileDownloadableDatasetLoader('Armadillo.ply')$/;"	v
_dataset_armadillo	pyvista/examples/downloads.py	/^_dataset_armadillo = _SingleFileDownloadableDatasetLoader('Armadillo.ply')$/;"	v
_dataset_backward_facing_step	build/lib/pyvista/examples/downloads.py	/^_dataset_backward_facing_step = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_backward_facing_step	pyvista/examples/downloads.py	/^_dataset_backward_facing_step = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_beach	build/lib/pyvista/examples/downloads.py	/^_dataset_beach = _SingleFileDownloadableDatasetLoader('beach.nrrd')$/;"	v
_dataset_beach	pyvista/examples/downloads.py	/^_dataset_beach = _SingleFileDownloadableDatasetLoader('beach.nrrd')$/;"	v
_dataset_biplane	build/lib/pyvista/examples/downloads.py	/^_dataset_biplane = _SingleFileDownloadableDatasetLoader('biplane_rms_pressure_bs.exo')$/;"	v
_dataset_biplane	pyvista/examples/downloads.py	/^_dataset_biplane = _SingleFileDownloadableDatasetLoader('biplane_rms_pressure_bs.exo')$/;"	v
_dataset_bird	build/lib/pyvista/examples/downloads.py	/^_dataset_bird = _SingleFileDownloadableDatasetLoader('Pileated.jpg')$/;"	v
_dataset_bird	pyvista/examples/downloads.py	/^_dataset_bird = _SingleFileDownloadableDatasetLoader('Pileated.jpg')$/;"	v
_dataset_bird_bath	build/lib/pyvista/examples/downloads.py	/^_dataset_bird_bath = _SingleFileDownloadableDatasetLoader('ivan-nikolov\/birdBath_decimated.vtp')$/;"	v
_dataset_bird_bath	pyvista/examples/downloads.py	/^_dataset_bird_bath = _SingleFileDownloadableDatasetLoader('ivan-nikolov\/birdBath_decimated.vtp')$/;"	v
_dataset_bird_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_bird_texture = _SingleFileDownloadableDatasetLoader('Pileated.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_bird_texture	pyvista/examples/downloads.py	/^_dataset_bird_texture = _SingleFileDownloadableDatasetLoader('Pileated.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_black_vase	build/lib/pyvista/examples/downloads.py	/^_dataset_black_vase = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_black_vase	pyvista/examples/downloads.py	/^_dataset_black_vase = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_blood_vessels	build/lib/pyvista/examples/downloads.py	/^_dataset_blood_vessels = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_blood_vessels	pyvista/examples/downloads.py	/^_dataset_blood_vessels = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_blow	build/lib/pyvista/examples/downloads.py	/^_dataset_blow = _SingleFileDownloadableDatasetLoader('blow.vtk')$/;"	v
_dataset_blow	pyvista/examples/downloads.py	/^_dataset_blow = _SingleFileDownloadableDatasetLoader('blow.vtk')$/;"	v
_dataset_bolt_nut	build/lib/pyvista/examples/downloads.py	/^_dataset_bolt_nut = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_bolt_nut	pyvista/examples/downloads.py	/^_dataset_bolt_nut = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_brain	build/lib/pyvista/examples/downloads.py	/^_dataset_brain = _SingleFileDownloadableDatasetLoader('brain.vtk')$/;"	v
_dataset_brain	pyvista/examples/downloads.py	/^_dataset_brain = _SingleFileDownloadableDatasetLoader('brain.vtk')$/;"	v
_dataset_brain_atlas_with_sides	build/lib/pyvista/examples/downloads.py	/^_dataset_brain_atlas_with_sides = _SingleFileDownloadableDatasetLoader('avg152T1_RL_nifti.nii.gz')$/;"	v
_dataset_brain_atlas_with_sides	pyvista/examples/downloads.py	/^_dataset_brain_atlas_with_sides = _SingleFileDownloadableDatasetLoader('avg152T1_RL_nifti.nii.gz')$/;"	v
_dataset_bunny	build/lib/pyvista/examples/downloads.py	/^_dataset_bunny = _SingleFileDownloadableDatasetLoader('bunny.ply')$/;"	v
_dataset_bunny	pyvista/examples/downloads.py	/^_dataset_bunny = _SingleFileDownloadableDatasetLoader('bunny.ply')$/;"	v
_dataset_bunny_coarse	build/lib/pyvista/examples/downloads.py	/^_dataset_bunny_coarse = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_bunny_coarse	pyvista/examples/downloads.py	/^_dataset_bunny_coarse = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cad_model	build/lib/pyvista/examples/downloads.py	/^_dataset_cad_model = _SingleFileDownloadableDatasetLoader('42400-IDGH.stl')$/;"	v
_dataset_cad_model	pyvista/examples/downloads.py	/^_dataset_cad_model = _SingleFileDownloadableDatasetLoader('42400-IDGH.stl')$/;"	v
_dataset_cad_model_case	build/lib/pyvista/examples/downloads.py	/^_dataset_cad_model_case = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cad_model_case	pyvista/examples/downloads.py	/^_dataset_cad_model_case = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_caffeine	build/lib/pyvista/examples/downloads.py	/^_dataset_caffeine = _SingleFileDownloadableDatasetLoader('caffeine.pdb')$/;"	v
_dataset_caffeine	pyvista/examples/downloads.py	/^_dataset_caffeine = _SingleFileDownloadableDatasetLoader('caffeine.pdb')$/;"	v
_dataset_cake_easy	build/lib/pyvista/examples/downloads.py	/^_dataset_cake_easy = _SingleFileDownloadableDatasetLoader('cake_easy.jpg')$/;"	v
_dataset_cake_easy	pyvista/examples/downloads.py	/^_dataset_cake_easy = _SingleFileDownloadableDatasetLoader('cake_easy.jpg')$/;"	v
_dataset_cake_easy_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_cake_easy_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cake_easy_texture	pyvista/examples/downloads.py	/^_dataset_cake_easy_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_can	build/lib/pyvista/examples/downloads.py	/^_dataset_can = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_can	pyvista/examples/downloads.py	/^_dataset_can = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_can_crushed_hdf	build/lib/pyvista/examples/downloads.py	/^_dataset_can_crushed_hdf = _SingleFileDownloadableDatasetLoader('hdf\/can-vtu.hdf')$/;"	v
_dataset_can_crushed_hdf	pyvista/examples/downloads.py	/^_dataset_can_crushed_hdf = _SingleFileDownloadableDatasetLoader('hdf\/can-vtu.hdf')$/;"	v
_dataset_can_crushed_vtu	build/lib/pyvista/examples/downloads.py	/^_dataset_can_crushed_vtu = _SingleFileDownloadableDatasetLoader('can.vtu')$/;"	v
_dataset_can_crushed_vtu	pyvista/examples/downloads.py	/^_dataset_can_crushed_vtu = _SingleFileDownloadableDatasetLoader('can.vtu')$/;"	v
_dataset_can_files_func	build/lib/pyvista/examples/downloads.py	/^def _dataset_can_files_func():  # pragma: no cover$/;"	f
_dataset_can_files_func	pyvista/examples/downloads.py	/^def _dataset_can_files_func():  # pragma: no cover$/;"	f
_dataset_carburetor	build/lib/pyvista/examples/downloads.py	/^_dataset_carburetor = _SingleFileDownloadableDatasetLoader('carburetor.ply')$/;"	v
_dataset_carburetor	pyvista/examples/downloads.py	/^_dataset_carburetor = _SingleFileDownloadableDatasetLoader('carburetor.ply')$/;"	v
_dataset_carotid	build/lib/pyvista/examples/downloads.py	/^_dataset_carotid = _SingleFileDownloadableDatasetLoader('carotid.vtk', load_func=_carotid_load_func)$/;"	v
_dataset_carotid	pyvista/examples/downloads.py	/^_dataset_carotid = _SingleFileDownloadableDatasetLoader('carotid.vtk', load_func=_carotid_load_func)$/;"	v
_dataset_cavity	build/lib/pyvista/examples/downloads.py	/^_dataset_cavity = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cavity	pyvista/examples/downloads.py	/^_dataset_cavity = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cell_quality	build/lib/pyvista/core/filters/data_object.py	/^    def _dataset_cell_quality(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
_dataset_cell_quality	pyvista/core/filters/data_object.py	/^    def _dataset_cell_quality(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
_dataset_cells_nd	build/lib/pyvista/examples/downloads.py	/^_dataset_cells_nd = _SingleFileDownloadableDatasetLoader('cellsnd.ascii.inp')$/;"	v
_dataset_cells_nd	pyvista/examples/downloads.py	/^_dataset_cells_nd = _SingleFileDownloadableDatasetLoader('cellsnd.ascii.inp')$/;"	v
_dataset_cgns_multi	build/lib/pyvista/examples/downloads.py	/^_dataset_cgns_multi = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cgns_multi	pyvista/examples/downloads.py	/^_dataset_cgns_multi = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cgns_structured	build/lib/pyvista/examples/downloads.py	/^_dataset_cgns_structured = _SingleFileDownloadableDatasetLoader('cgns\/sqnz_s.adf.cgns')$/;"	v
_dataset_cgns_structured	pyvista/examples/downloads.py	/^_dataset_cgns_structured = _SingleFileDownloadableDatasetLoader('cgns\/sqnz_s.adf.cgns')$/;"	v
_dataset_channels	build/lib/pyvista/examples/examples.py	/^_dataset_channels = _SingleFileDownloadableDatasetLoader(channelsfile)$/;"	v
_dataset_channels	pyvista/examples/examples.py	/^_dataset_channels = _SingleFileDownloadableDatasetLoader(channelsfile)$/;"	v
_dataset_chest	build/lib/pyvista/examples/downloads.py	/^_dataset_chest = _SingleFileDownloadableDatasetLoader('MetaIO\/ChestCT-SHORT.mha')$/;"	v
_dataset_chest	pyvista/examples/downloads.py	/^_dataset_chest = _SingleFileDownloadableDatasetLoader('MetaIO\/ChestCT-SHORT.mha')$/;"	v
_dataset_cloud_dark_matter	build/lib/pyvista/examples/downloads.py	/^_dataset_cloud_dark_matter = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cloud_dark_matter	pyvista/examples/downloads.py	/^_dataset_cloud_dark_matter = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cloud_dark_matter_dense	build/lib/pyvista/examples/downloads.py	/^_dataset_cloud_dark_matter_dense = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cloud_dark_matter_dense	pyvista/examples/downloads.py	/^_dataset_cloud_dark_matter_dense = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_clown	build/lib/pyvista/examples/downloads.py	/^_dataset_clown = _SingleFileDownloadableDatasetLoader('clown.facet')$/;"	v
_dataset_clown	pyvista/examples/downloads.py	/^_dataset_clown = _SingleFileDownloadableDatasetLoader('clown.facet')$/;"	v
_dataset_coastlines	build/lib/pyvista/examples/downloads.py	/^_dataset_coastlines = _SingleFileDownloadableDatasetLoader('EarthModels\/Coastlines_Los_Alamos.vtp')$/;"	v
_dataset_coastlines	pyvista/examples/downloads.py	/^_dataset_coastlines = _SingleFileDownloadableDatasetLoader('EarthModels\/Coastlines_Los_Alamos.vtp')$/;"	v
_dataset_coil_magnetic_field	build/lib/pyvista/examples/downloads.py	/^_dataset_coil_magnetic_field = _SingleFileDownloadableDatasetLoader('magpylib\/coil_field.vti')$/;"	v
_dataset_coil_magnetic_field	pyvista/examples/downloads.py	/^_dataset_coil_magnetic_field = _SingleFileDownloadableDatasetLoader('magpylib\/coil_field.vti')$/;"	v
_dataset_cow	build/lib/pyvista/examples/downloads.py	/^_dataset_cow = _SingleFileDownloadableDatasetLoader('cow.vtp')$/;"	v
_dataset_cow	pyvista/examples/downloads.py	/^_dataset_cow = _SingleFileDownloadableDatasetLoader('cow.vtp')$/;"	v
_dataset_cow_head	build/lib/pyvista/examples/downloads.py	/^_dataset_cow_head = _SingleFileDownloadableDatasetLoader('cowHead.vtp')$/;"	v
_dataset_cow_head	pyvista/examples/downloads.py	/^_dataset_cow_head = _SingleFileDownloadableDatasetLoader('cowHead.vtp')$/;"	v
_dataset_crater_imagery	build/lib/pyvista/examples/downloads.py	/^_dataset_crater_imagery = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_crater_imagery	pyvista/examples/downloads.py	/^_dataset_crater_imagery = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_crater_topo	build/lib/pyvista/examples/downloads.py	/^_dataset_crater_topo = _SingleFileDownloadableDatasetLoader('Ruapehu_mag_dem_15m_NZTM.vtk')$/;"	v
_dataset_crater_topo	pyvista/examples/downloads.py	/^_dataset_crater_topo = _SingleFileDownloadableDatasetLoader('Ruapehu_mag_dem_15m_NZTM.vtk')$/;"	v
_dataset_cubemap_park	build/lib/pyvista/examples/downloads.py	/^_dataset_cubemap_park = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cubemap_park	pyvista/examples/downloads.py	/^_dataset_cubemap_park = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cubemap_space_16k	build/lib/pyvista/examples/downloads.py	/^_dataset_cubemap_space_16k = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cubemap_space_16k	pyvista/examples/downloads.py	/^_dataset_cubemap_space_16k = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cubemap_space_4k	build/lib/pyvista/examples/downloads.py	/^_dataset_cubemap_space_4k = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cubemap_space_4k	pyvista/examples/downloads.py	/^_dataset_cubemap_space_4k = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_cylinder_crossflow	build/lib/pyvista/examples/downloads.py	/^_dataset_cylinder_crossflow = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_cylinder_crossflow	pyvista/examples/downloads.py	/^_dataset_cylinder_crossflow = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_damavand_volcano	build/lib/pyvista/examples/downloads.py	/^_dataset_damavand_volcano = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_damavand_volcano	pyvista/examples/downloads.py	/^_dataset_damavand_volcano = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_delaunay_example	build/lib/pyvista/examples/downloads.py	/^_dataset_delaunay_example = _SingleFileDownloadableDatasetLoader('250.vtk')$/;"	v
_dataset_delaunay_example	pyvista/examples/downloads.py	/^_dataset_delaunay_example = _SingleFileDownloadableDatasetLoader('250.vtk')$/;"	v
_dataset_dicom_stack	build/lib/pyvista/examples/downloads.py	/^_dataset_dicom_stack = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_dicom_stack	pyvista/examples/downloads.py	/^_dataset_dicom_stack = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_dikhololo_night	build/lib/pyvista/examples/downloads.py	/^_dataset_dikhololo_night = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_dikhololo_night	pyvista/examples/downloads.py	/^_dataset_dikhololo_night = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_disc_quads	build/lib/pyvista/examples/downloads.py	/^_dataset_disc_quads = _SingleFileDownloadableDatasetLoader('Disc_BiQuadraticQuads_0_0.vtu')$/;"	v
_dataset_disc_quads	pyvista/examples/downloads.py	/^_dataset_disc_quads = _SingleFileDownloadableDatasetLoader('Disc_BiQuadraticQuads_0_0.vtu')$/;"	v
_dataset_dolfin	build/lib/pyvista/examples/downloads.py	/^_dataset_dolfin = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_dolfin	pyvista/examples/downloads.py	/^_dataset_dolfin = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_doorman	build/lib/pyvista/examples/downloads.py	/^_dataset_doorman = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_doorman	pyvista/examples/downloads.py	/^_dataset_doorman = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_dragon	build/lib/pyvista/examples/downloads.py	/^_dataset_dragon = _SingleFileDownloadableDatasetLoader('dragon.ply')$/;"	v
_dataset_dragon	pyvista/examples/downloads.py	/^_dataset_dragon = _SingleFileDownloadableDatasetLoader('dragon.ply')$/;"	v
_dataset_drill	build/lib/pyvista/examples/downloads.py	/^_dataset_drill = _SingleFileDownloadableDatasetLoader('drill.obj')$/;"	v
_dataset_drill	pyvista/examples/downloads.py	/^_dataset_drill = _SingleFileDownloadableDatasetLoader('drill.obj')$/;"	v
_dataset_dual_sphere_animation	build/lib/pyvista/examples/downloads.py	/^_dataset_dual_sphere_animation = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_dual_sphere_animation	pyvista/examples/downloads.py	/^_dataset_dual_sphere_animation = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_e07733s002i009	build/lib/pyvista/examples/downloads.py	/^_dataset_e07733s002i009 = _SingleFileDownloadableDatasetLoader('E07733S002I009.MR')$/;"	v
_dataset_e07733s002i009	pyvista/examples/downloads.py	/^_dataset_e07733s002i009 = _SingleFileDownloadableDatasetLoader('E07733S002I009.MR')$/;"	v
_dataset_electronics_cooling	build/lib/pyvista/examples/downloads.py	/^_dataset_electronics_cooling = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_electronics_cooling	pyvista/examples/downloads.py	/^_dataset_electronics_cooling = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_embryo	build/lib/pyvista/examples/downloads.py	/^_dataset_embryo = _SingleFileDownloadableDatasetLoader('embryo.slc', load_func=_embryo_load_func)$/;"	v
_dataset_embryo	pyvista/examples/downloads.py	/^_dataset_embryo = _SingleFileDownloadableDatasetLoader('embryo.slc', load_func=_embryo_load_func)$/;"	v
_dataset_emoji	build/lib/pyvista/examples/downloads.py	/^_dataset_emoji = _SingleFileDownloadableDatasetLoader('emote.jpg')$/;"	v
_dataset_emoji	pyvista/examples/downloads.py	/^_dataset_emoji = _SingleFileDownloadableDatasetLoader('emote.jpg')$/;"	v
_dataset_emoji_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_emoji_texture = _SingleFileDownloadableDatasetLoader('emote.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_emoji_texture	pyvista/examples/downloads.py	/^_dataset_emoji_texture = _SingleFileDownloadableDatasetLoader('emote.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_exodus	build/lib/pyvista/examples/downloads.py	/^_dataset_exodus = _SingleFileDownloadableDatasetLoader('mesh_fs8.exo')$/;"	v
_dataset_exodus	pyvista/examples/downloads.py	/^_dataset_exodus = _SingleFileDownloadableDatasetLoader('mesh_fs8.exo')$/;"	v
_dataset_explicit_structured	build/lib/pyvista/examples/examples.py	/^_dataset_explicit_structured = _DatasetLoader(_explicit_structured_load_func)$/;"	v
_dataset_explicit_structured	pyvista/examples/examples.py	/^_dataset_explicit_structured = _DatasetLoader(_explicit_structured_load_func)$/;"	v
_dataset_face	build/lib/pyvista/examples/downloads.py	/^_dataset_face = _SingleFileDownloadableDatasetLoader('fran_cut.vtk')$/;"	v
_dataset_face	pyvista/examples/downloads.py	/^_dataset_face = _SingleFileDownloadableDatasetLoader('fran_cut.vtk')$/;"	v
_dataset_face2	build/lib/pyvista/examples/downloads.py	/^_dataset_face2 = _SingleFileDownloadableDatasetLoader('man_face.stl')$/;"	v
_dataset_face2	pyvista/examples/downloads.py	/^_dataset_face2 = _SingleFileDownloadableDatasetLoader('man_face.stl')$/;"	v
_dataset_faults	build/lib/pyvista/examples/downloads.py	/^_dataset_faults = _SingleFileDownloadableDatasetLoader('faults.vtk')$/;"	v
_dataset_faults	pyvista/examples/downloads.py	/^_dataset_faults = _SingleFileDownloadableDatasetLoader('faults.vtk')$/;"	v
_dataset_fea_bracket	build/lib/pyvista/examples/downloads.py	/^_dataset_fea_bracket = _SingleFileDownloadableDatasetLoader('fea\/kiefer\/dataset.vtu')$/;"	v
_dataset_fea_bracket	pyvista/examples/downloads.py	/^_dataset_fea_bracket = _SingleFileDownloadableDatasetLoader('fea\/kiefer\/dataset.vtu')$/;"	v
_dataset_fea_hertzian_contact_cylinder	build/lib/pyvista/examples/downloads.py	/^_dataset_fea_hertzian_contact_cylinder = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_fea_hertzian_contact_cylinder	pyvista/examples/downloads.py	/^_dataset_fea_hertzian_contact_cylinder = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_filled_contours	build/lib/pyvista/examples/downloads.py	/^_dataset_filled_contours = _SingleFileDownloadableDatasetLoader('filledContours.vtp')$/;"	v
_dataset_filled_contours	pyvista/examples/downloads.py	/^_dataset_filled_contours = _SingleFileDownloadableDatasetLoader('filledContours.vtp')$/;"	v
_dataset_foot_bones	build/lib/pyvista/examples/downloads.py	/^_dataset_foot_bones = _SingleFileDownloadableDatasetLoader('fsu\/footbones.ply')$/;"	v
_dataset_foot_bones	pyvista/examples/downloads.py	/^_dataset_foot_bones = _SingleFileDownloadableDatasetLoader('fsu\/footbones.ply')$/;"	v
_dataset_frog	build/lib/pyvista/examples/downloads.py	/^_dataset_frog = _MultiFileDownloadableDatasetLoader(_frog_files_func)$/;"	v
_dataset_frog	pyvista/examples/downloads.py	/^_dataset_frog = _MultiFileDownloadableDatasetLoader(_frog_files_func)$/;"	v
_dataset_frog_tissue	build/lib/pyvista/examples/downloads.py	/^_dataset_frog_tissue = _MultiFileDownloadableDatasetLoader(_frog_tissue_files_func)$/;"	v
_dataset_frog_tissue	pyvista/examples/downloads.py	/^_dataset_frog_tissue = _MultiFileDownloadableDatasetLoader(_frog_tissue_files_func)$/;"	v
_dataset_frog_tissues	build/lib/pyvista/examples/examples.py	/^_dataset_frog_tissues = _SingleFileDownloadableDatasetLoader(frogtissuesfile)$/;"	v
_dataset_frog_tissues	pyvista/examples/examples.py	/^_dataset_frog_tissues = _SingleFileDownloadableDatasetLoader(frogtissuesfile)$/;"	v
_dataset_full_head	build/lib/pyvista/examples/downloads.py	/^_dataset_full_head = _MultiFileDownloadableDatasetLoader(_full_head_files_func)$/;"	v
_dataset_full_head	pyvista/examples/downloads.py	/^_dataset_full_head = _MultiFileDownloadableDatasetLoader(_full_head_files_func)$/;"	v
_dataset_gears	build/lib/pyvista/examples/downloads.py	/^_dataset_gears = _SingleFileDownloadableDatasetLoader('gears.stl')$/;"	v
_dataset_gears	pyvista/examples/downloads.py	/^_dataset_gears = _SingleFileDownloadableDatasetLoader('gears.stl')$/;"	v
_dataset_gif_simple	build/lib/pyvista/examples/downloads.py	/^_dataset_gif_simple = _SingleFileDownloadableDatasetLoader('gifs\/sample.gif')$/;"	v
_dataset_gif_simple	pyvista/examples/downloads.py	/^_dataset_gif_simple = _SingleFileDownloadableDatasetLoader('gifs\/sample.gif')$/;"	v
_dataset_globe	build/lib/pyvista/examples/examples.py	/^_dataset_globe = _SingleFileDownloadableDatasetLoader(globefile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_globe	pyvista/examples/examples.py	/^_dataset_globe = _SingleFileDownloadableDatasetLoader(globefile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_globe_texture	build/lib/pyvista/examples/examples.py	/^_dataset_globe_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_globe_texture	pyvista/examples/examples.py	/^_dataset_globe_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_gourds	build/lib/pyvista/examples/downloads.py	/^_dataset_gourds = _SingleFileDownloadableDatasetLoader('Gourds.png')$/;"	v
_dataset_gourds	pyvista/examples/downloads.py	/^_dataset_gourds = _SingleFileDownloadableDatasetLoader('Gourds.png')$/;"	v
_dataset_gourds_pnm	build/lib/pyvista/examples/downloads.py	/^_dataset_gourds_pnm = _SingleFileDownloadableDatasetLoader('Gourds.pnm')$/;"	v
_dataset_gourds_pnm	pyvista/examples/downloads.py	/^_dataset_gourds_pnm = _SingleFileDownloadableDatasetLoader('Gourds.pnm')$/;"	v
_dataset_gourds_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_gourds_texture = _SingleFileDownloadableDatasetLoader('Gourds.png', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_gourds_texture	pyvista/examples/downloads.py	/^_dataset_gourds_texture = _SingleFileDownloadableDatasetLoader('Gourds.png', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_gpr_data_array	build/lib/pyvista/examples/downloads.py	/^_dataset_gpr_data_array = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_gpr_data_array	pyvista/examples/downloads.py	/^_dataset_gpr_data_array = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_gpr_path	build/lib/pyvista/examples/downloads.py	/^_dataset_gpr_path = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_gpr_path	pyvista/examples/downloads.py	/^_dataset_gpr_path = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_great_white_shark	build/lib/pyvista/examples/downloads.py	/^_dataset_great_white_shark = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_great_white_shark	pyvista/examples/downloads.py	/^_dataset_great_white_shark = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_grey_nurse_shark	build/lib/pyvista/examples/downloads.py	/^_dataset_grey_nurse_shark = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_grey_nurse_shark	pyvista/examples/downloads.py	/^_dataset_grey_nurse_shark = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_guitar	build/lib/pyvista/examples/downloads.py	/^_dataset_guitar = _SingleFileDownloadableDatasetLoader('fsu\/stratocaster.ply')$/;"	v
_dataset_guitar	pyvista/examples/downloads.py	/^_dataset_guitar = _SingleFileDownloadableDatasetLoader('fsu\/stratocaster.ply')$/;"	v
_dataset_head	build/lib/pyvista/examples/downloads.py	/^_dataset_head = _MultiFileDownloadableDatasetLoader(_head_files_func)$/;"	v
_dataset_head	pyvista/examples/downloads.py	/^_dataset_head = _MultiFileDownloadableDatasetLoader(_head_files_func)$/;"	v
_dataset_head_2	build/lib/pyvista/examples/downloads.py	/^_dataset_head_2 = _SingleFileDownloadableDatasetLoader('head.vti')$/;"	v
_dataset_head_2	pyvista/examples/downloads.py	/^_dataset_head_2 = _SingleFileDownloadableDatasetLoader('head.vti')$/;"	v
_dataset_headsq	build/lib/pyvista/examples/downloads.py	/^_dataset_headsq = _MultiFileDownloadableDatasetLoader(_dataset_headsq_files_func)$/;"	v
_dataset_headsq	pyvista/examples/downloads.py	/^_dataset_headsq = _MultiFileDownloadableDatasetLoader(_dataset_headsq_files_func)$/;"	v
_dataset_headsq_files_func	build/lib/pyvista/examples/downloads.py	/^def _dataset_headsq_files_func():$/;"	f
_dataset_headsq_files_func	pyvista/examples/downloads.py	/^def _dataset_headsq_files_func():$/;"	f
_dataset_hexbeam	build/lib/pyvista/examples/examples.py	/^_dataset_hexbeam = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_hexbeam	pyvista/examples/examples.py	/^_dataset_hexbeam = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_honolulu	build/lib/pyvista/examples/downloads.py	/^_dataset_honolulu = _SingleFileDownloadableDatasetLoader('honolulu.vtk')$/;"	v
_dataset_honolulu	pyvista/examples/downloads.py	/^_dataset_honolulu = _SingleFileDownloadableDatasetLoader('honolulu.vtk')$/;"	v
_dataset_horse	build/lib/pyvista/examples/downloads.py	/^_dataset_horse = _SingleFileDownloadableDatasetLoader('horse.vtp')$/;"	v
_dataset_horse	pyvista/examples/downloads.py	/^_dataset_horse = _SingleFileDownloadableDatasetLoader('horse.vtp')$/;"	v
_dataset_horse_points	build/lib/pyvista/examples/downloads.py	/^_dataset_horse_points = _SingleFileDownloadableDatasetLoader('horsePoints.vtp')$/;"	v
_dataset_horse_points	pyvista/examples/downloads.py	/^_dataset_horse_points = _SingleFileDownloadableDatasetLoader('horsePoints.vtp')$/;"	v
_dataset_human	build/lib/pyvista/examples/downloads.py	/^_dataset_human = _SingleFileDownloadableDatasetLoader('Human.vtp')$/;"	v
_dataset_human	pyvista/examples/downloads.py	/^_dataset_human = _SingleFileDownloadableDatasetLoader('Human.vtp')$/;"	v
_dataset_hydrogen_orbital	build/lib/pyvista/examples/examples.py	/^_dataset_hydrogen_orbital = _DatasetLoader(_hydrogen_orbital_load_func)$/;"	v
_dataset_hydrogen_orbital	pyvista/examples/examples.py	/^_dataset_hydrogen_orbital = _DatasetLoader(_hydrogen_orbital_load_func)$/;"	v
_dataset_iron_protein	build/lib/pyvista/examples/downloads.py	/^_dataset_iron_protein = _SingleFileDownloadableDatasetLoader('ironProt.vtk')$/;"	v
_dataset_iron_protein	pyvista/examples/downloads.py	/^_dataset_iron_protein = _SingleFileDownloadableDatasetLoader('ironProt.vtk')$/;"	v
_dataset_ivan_angel	build/lib/pyvista/examples/downloads.py	/^_dataset_ivan_angel = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_ivan_angel	pyvista/examples/downloads.py	/^_dataset_ivan_angel = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_jupiter_surface	build/lib/pyvista/examples/planets.py	/^_dataset_jupiter_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_jupiter_surface	pyvista/examples/planets.py	/^_dataset_jupiter_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_kitchen	build/lib/pyvista/examples/downloads.py	/^_dataset_kitchen = _SingleFileDownloadableDatasetLoader('kitchen.vtk')$/;"	v
_dataset_kitchen	pyvista/examples/downloads.py	/^_dataset_kitchen = _SingleFileDownloadableDatasetLoader('kitchen.vtk')$/;"	v
_dataset_knee	build/lib/pyvista/examples/downloads.py	/^_dataset_knee = _SingleFileDownloadableDatasetLoader('DICOM_KNEE.dcm')$/;"	v
_dataset_knee	pyvista/examples/downloads.py	/^_dataset_knee = _SingleFileDownloadableDatasetLoader('DICOM_KNEE.dcm')$/;"	v
_dataset_knee_full	build/lib/pyvista/examples/downloads.py	/^_dataset_knee_full = _SingleFileDownloadableDatasetLoader('vw_knee.slc')$/;"	v
_dataset_knee_full	pyvista/examples/downloads.py	/^_dataset_knee_full = _SingleFileDownloadableDatasetLoader('vw_knee.slc')$/;"	v
_dataset_letter_a	build/lib/pyvista/examples/downloads.py	/^_dataset_letter_a = _SingleFileDownloadableDatasetLoader('a_grid.vtk')$/;"	v
_dataset_letter_a	pyvista/examples/downloads.py	/^_dataset_letter_a = _SingleFileDownloadableDatasetLoader('a_grid.vtk')$/;"	v
_dataset_letter_k	build/lib/pyvista/examples/downloads.py	/^_dataset_letter_k = _SingleFileDownloadableDatasetLoader('k.vtk')$/;"	v
_dataset_letter_k	pyvista/examples/downloads.py	/^_dataset_letter_k = _SingleFileDownloadableDatasetLoader('k.vtk')$/;"	v
_dataset_lidar	build/lib/pyvista/examples/downloads.py	/^_dataset_lidar = _SingleFileDownloadableDatasetLoader('kafadar-lidar-interp.vtp')$/;"	v
_dataset_lidar	pyvista/examples/downloads.py	/^_dataset_lidar = _SingleFileDownloadableDatasetLoader('kafadar-lidar-interp.vtp')$/;"	v
_dataset_lobster	build/lib/pyvista/examples/downloads.py	/^_dataset_lobster = _SingleFileDownloadableDatasetLoader('lobster.ply')$/;"	v
_dataset_lobster	pyvista/examples/downloads.py	/^_dataset_lobster = _SingleFileDownloadableDatasetLoader('lobster.ply')$/;"	v
_dataset_logo	build/lib/pyvista/examples/examples.py	/^_dataset_logo = _SingleFileDownloadableDatasetLoader(logofile)$/;"	v
_dataset_logo	pyvista/examples/examples.py	/^_dataset_logo = _SingleFileDownloadableDatasetLoader(logofile)$/;"	v
_dataset_louis_louvre	build/lib/pyvista/examples/downloads.py	/^_dataset_louis_louvre = _SingleFileDownloadableDatasetLoader('louis.ply')$/;"	v
_dataset_louis_louvre	pyvista/examples/downloads.py	/^_dataset_louis_louvre = _SingleFileDownloadableDatasetLoader('louis.ply')$/;"	v
_dataset_lshape	build/lib/pyvista/examples/downloads.py	/^_dataset_lshape = _MultiFileDownloadableDatasetLoader(files_func=_lshape_files_func)$/;"	v
_dataset_lshape	pyvista/examples/downloads.py	/^_dataset_lshape = _MultiFileDownloadableDatasetLoader(files_func=_lshape_files_func)$/;"	v
_dataset_lucy	build/lib/pyvista/examples/downloads.py	/^_dataset_lucy = _SingleFileDownloadableDatasetLoader('lucy.ply')$/;"	v
_dataset_lucy	pyvista/examples/downloads.py	/^_dataset_lucy = _SingleFileDownloadableDatasetLoader('lucy.ply')$/;"	v
_dataset_m4_total_density	build/lib/pyvista/examples/downloads.py	/^_dataset_m4_total_density = _SingleFileDownloadableDatasetLoader('m4_TotalDensity.cube')$/;"	v
_dataset_m4_total_density	pyvista/examples/downloads.py	/^_dataset_m4_total_density = _SingleFileDownloadableDatasetLoader('m4_TotalDensity.cube')$/;"	v
_dataset_mars_surface	build/lib/pyvista/examples/planets.py	/^_dataset_mars_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_mars_surface	pyvista/examples/planets.py	/^_dataset_mars_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_masonry_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_masonry_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_masonry_texture	pyvista/examples/downloads.py	/^_dataset_masonry_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_mercury_surface	build/lib/pyvista/examples/planets.py	/^_dataset_mercury_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_mercury_surface	pyvista/examples/planets.py	/^_dataset_mercury_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_meshio_xdmf	build/lib/pyvista/examples/downloads.py	/^_dataset_meshio_xdmf = _MultiFileDownloadableDatasetLoader(files_func=_meshio_xdmf_files_func)$/;"	v
_dataset_meshio_xdmf	pyvista/examples/downloads.py	/^_dataset_meshio_xdmf = _MultiFileDownloadableDatasetLoader(files_func=_meshio_xdmf_files_func)$/;"	v
_dataset_milkyway_sky_background	build/lib/pyvista/examples/planets.py	/^_dataset_milkyway_sky_background = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_milkyway_sky_background	pyvista/examples/planets.py	/^_dataset_milkyway_sky_background = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_model_with_variance	build/lib/pyvista/examples/downloads.py	/^_dataset_model_with_variance = _SingleFileDownloadableDatasetLoader('model_with_variance.vtu')$/;"	v
_dataset_model_with_variance	pyvista/examples/downloads.py	/^_dataset_model_with_variance = _SingleFileDownloadableDatasetLoader('model_with_variance.vtu')$/;"	v
_dataset_moon_surface	build/lib/pyvista/examples/planets.py	/^_dataset_moon_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_moon_surface	pyvista/examples/planets.py	/^_dataset_moon_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_moonlanding_image	build/lib/pyvista/examples/downloads.py	/^_dataset_moonlanding_image = _SingleFileDownloadableDatasetLoader('moonlanding.png')$/;"	v
_dataset_moonlanding_image	pyvista/examples/downloads.py	/^_dataset_moonlanding_image = _SingleFileDownloadableDatasetLoader('moonlanding.png')$/;"	v
_dataset_motor	build/lib/pyvista/examples/downloads.py	/^_dataset_motor = _SingleFileDownloadableDatasetLoader('motor.g')$/;"	v
_dataset_motor	pyvista/examples/downloads.py	/^_dataset_motor = _SingleFileDownloadableDatasetLoader('motor.g')$/;"	v
_dataset_mount_damavand	build/lib/pyvista/examples/downloads.py	/^_dataset_mount_damavand = _SingleFileDownloadableDatasetLoader('AOI.Damavand.32639.vtp')$/;"	v
_dataset_mount_damavand	pyvista/examples/downloads.py	/^_dataset_mount_damavand = _SingleFileDownloadableDatasetLoader('AOI.Damavand.32639.vtp')$/;"	v
_dataset_mug	build/lib/pyvista/examples/downloads.py	/^_dataset_mug = _SingleFileDownloadableDatasetLoader('mug.e')$/;"	v
_dataset_mug	pyvista/examples/downloads.py	/^_dataset_mug = _SingleFileDownloadableDatasetLoader('mug.e')$/;"	v
_dataset_naca	build/lib/pyvista/examples/downloads.py	/^_dataset_naca = _MultiFileDownloadableDatasetLoader(files_func=_naca_files_func)$/;"	v
_dataset_naca	pyvista/examples/downloads.py	/^_dataset_naca = _MultiFileDownloadableDatasetLoader(files_func=_naca_files_func)$/;"	v
_dataset_nefertiti	build/lib/pyvista/examples/downloads.py	/^_dataset_nefertiti = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_nefertiti	pyvista/examples/downloads.py	/^_dataset_nefertiti = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_nek5000	build/lib/pyvista/examples/downloads.py	/^_dataset_nek5000 = _MultiFileDownloadableDatasetLoader(_nek_5000_download)$/;"	v
_dataset_nek5000	pyvista/examples/downloads.py	/^_dataset_nek5000 = _MultiFileDownloadableDatasetLoader(_nek_5000_download)$/;"	v
_dataset_neptune_surface	build/lib/pyvista/examples/planets.py	/^_dataset_neptune_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_neptune_surface	pyvista/examples/planets.py	/^_dataset_neptune_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_notch_displacement	build/lib/pyvista/examples/downloads.py	/^_dataset_notch_displacement = _SingleFileDownloadableDatasetLoader('notch_disp.vtu')$/;"	v
_dataset_notch_displacement	pyvista/examples/downloads.py	/^_dataset_notch_displacement = _SingleFileDownloadableDatasetLoader('notch_disp.vtu')$/;"	v
_dataset_notch_stress	build/lib/pyvista/examples/downloads.py	/^_dataset_notch_stress = _SingleFileDownloadableDatasetLoader('notch_stress.vtk')$/;"	v
_dataset_notch_stress	pyvista/examples/downloads.py	/^_dataset_notch_stress = _SingleFileDownloadableDatasetLoader('notch_stress.vtk')$/;"	v
_dataset_nut	build/lib/pyvista/examples/examples.py	/^_dataset_nut = _SingleFileDownloadableDatasetLoader(nutfile)$/;"	v
_dataset_nut	pyvista/examples/examples.py	/^_dataset_nut = _SingleFileDownloadableDatasetLoader(nutfile)$/;"	v
_dataset_oblique_cone	build/lib/pyvista/examples/downloads.py	/^_dataset_oblique_cone = _SingleFileDownloadableDatasetLoader('ObliqueCone.vtp')$/;"	v
_dataset_oblique_cone	pyvista/examples/downloads.py	/^_dataset_oblique_cone = _SingleFileDownloadableDatasetLoader('ObliqueCone.vtp')$/;"	v
_dataset_office	build/lib/pyvista/examples/downloads.py	/^_dataset_office = _SingleFileDownloadableDatasetLoader('office.binary.vtk')$/;"	v
_dataset_office	pyvista/examples/downloads.py	/^_dataset_office = _SingleFileDownloadableDatasetLoader('office.binary.vtk')$/;"	v
_dataset_openfoam_tubes	build/lib/pyvista/examples/downloads.py	/^_dataset_openfoam_tubes = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_openfoam_tubes	pyvista/examples/downloads.py	/^_dataset_openfoam_tubes = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_osmnx_graph	build/lib/pyvista/examples/downloads.py	/^_dataset_osmnx_graph = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_osmnx_graph	pyvista/examples/downloads.py	/^_dataset_osmnx_graph = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_owl	build/lib/pyvista/examples/downloads.py	/^_dataset_owl = _SingleFileDownloadableDatasetLoader('ivan-nikolov\/owl_decimated.vtp')$/;"	v
_dataset_owl	pyvista/examples/downloads.py	/^_dataset_owl = _SingleFileDownloadableDatasetLoader('ivan-nikolov\/owl_decimated.vtp')$/;"	v
_dataset_parched_canal_4k	build/lib/pyvista/examples/downloads.py	/^_dataset_parched_canal_4k = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_parched_canal_4k	pyvista/examples/downloads.py	/^_dataset_parched_canal_4k = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_particles	build/lib/pyvista/examples/downloads.py	/^_dataset_particles = _SingleFileDownloadableDatasetLoader('Particles.raw')$/;"	v
_dataset_particles	pyvista/examples/downloads.py	/^_dataset_particles = _SingleFileDownloadableDatasetLoader('Particles.raw')$/;"	v
_dataset_particles_lethe	build/lib/pyvista/examples/downloads.py	/^_dataset_particles_lethe = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_particles_lethe	pyvista/examples/downloads.py	/^_dataset_particles_lethe = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_pepper	build/lib/pyvista/examples/downloads.py	/^_dataset_pepper = _SingleFileDownloadableDatasetLoader('pepper.ply')$/;"	v
_dataset_pepper	pyvista/examples/downloads.py	/^_dataset_pepper = _SingleFileDownloadableDatasetLoader('pepper.ply')$/;"	v
_dataset_pine_roots	build/lib/pyvista/examples/downloads.py	/^_dataset_pine_roots = _SingleFileDownloadableDatasetLoader('pine_root.tri')$/;"	v
_dataset_pine_roots	pyvista/examples/downloads.py	/^_dataset_pine_roots = _SingleFileDownloadableDatasetLoader('pine_root.tri')$/;"	v
_dataset_plastic_vase	build/lib/pyvista/examples/downloads.py	/^_dataset_plastic_vase = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_plastic_vase	pyvista/examples/downloads.py	/^_dataset_plastic_vase = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_pluto_surface	build/lib/pyvista/examples/planets.py	/^_dataset_pluto_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_pluto_surface	pyvista/examples/planets.py	/^_dataset_pluto_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_poly_line	build/lib/pyvista/examples/downloads.py	/^_dataset_poly_line = _SingleFileDownloadableDatasetLoader('polyline.vtk')$/;"	v
_dataset_poly_line	pyvista/examples/downloads.py	/^_dataset_poly_line = _SingleFileDownloadableDatasetLoader('polyline.vtk')$/;"	v
_dataset_prism	build/lib/pyvista/examples/downloads.py	/^_dataset_prism = _SingleFileDownloadableDatasetLoader('prism.neu')$/;"	v
_dataset_prism	pyvista/examples/downloads.py	/^_dataset_prism = _SingleFileDownloadableDatasetLoader('prism.neu')$/;"	v
_dataset_prostar	build/lib/pyvista/examples/downloads.py	/^_dataset_prostar = _MultiFileDownloadableDatasetLoader(_prostar_files_func)$/;"	v
_dataset_prostar	pyvista/examples/downloads.py	/^_dataset_prostar = _MultiFileDownloadableDatasetLoader(_prostar_files_func)$/;"	v
_dataset_prostate	build/lib/pyvista/examples/downloads.py	/^_dataset_prostate = _SingleFileDownloadableDatasetLoader('prostate.img')$/;"	v
_dataset_prostate	pyvista/examples/downloads.py	/^_dataset_prostate = _SingleFileDownloadableDatasetLoader('prostate.img')$/;"	v
_dataset_pump_bracket	build/lib/pyvista/examples/downloads.py	/^_dataset_pump_bracket = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_pump_bracket	pyvista/examples/downloads.py	/^_dataset_pump_bracket = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_puppy	build/lib/pyvista/examples/downloads.py	/^_dataset_puppy = _SingleFileDownloadableDatasetLoader('puppy.jpg')$/;"	v
_dataset_puppy	pyvista/examples/downloads.py	/^_dataset_puppy = _SingleFileDownloadableDatasetLoader('puppy.jpg')$/;"	v
_dataset_puppy_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_puppy_texture = _SingleFileDownloadableDatasetLoader('puppy.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_puppy_texture	pyvista/examples/downloads.py	/^_dataset_puppy_texture = _SingleFileDownloadableDatasetLoader('puppy.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_quadratic_pyramid	build/lib/pyvista/examples/downloads.py	/^_dataset_quadratic_pyramid = _SingleFileDownloadableDatasetLoader('QuadraticPyramid.vtu')$/;"	v
_dataset_quadratic_pyramid	pyvista/examples/downloads.py	/^_dataset_quadratic_pyramid = _SingleFileDownloadableDatasetLoader('QuadraticPyramid.vtu')$/;"	v
_dataset_random_hills	build/lib/pyvista/examples/examples.py	/^_dataset_random_hills = _DatasetLoader(_random_hills_load_func)$/;"	v
_dataset_random_hills	pyvista/examples/examples.py	/^_dataset_random_hills = _DatasetLoader(_random_hills_load_func)$/;"	v
_dataset_rectilinear	build/lib/pyvista/examples/examples.py	/^_dataset_rectilinear = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_rectilinear	pyvista/examples/examples.py	/^_dataset_rectilinear = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_rectilinear_grid	build/lib/pyvista/examples/downloads.py	/^_dataset_rectilinear_grid = _SingleFileDownloadableDatasetLoader('RectilinearGrid.vtr')$/;"	v
_dataset_rectilinear_grid	pyvista/examples/downloads.py	/^_dataset_rectilinear_grid = _SingleFileDownloadableDatasetLoader('RectilinearGrid.vtr')$/;"	v
_dataset_reservoir	build/lib/pyvista/examples/downloads.py	/^_dataset_reservoir = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_reservoir	pyvista/examples/downloads.py	/^_dataset_reservoir = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_rgba_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_rgba_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_rgba_texture	pyvista/examples/downloads.py	/^_dataset_rgba_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_room_cff	build/lib/pyvista/examples/downloads.py	/^_dataset_room_cff = _MultiFileDownloadableDatasetLoader(_dataset_room_cff_files_func)$/;"	v
_dataset_room_cff	pyvista/examples/downloads.py	/^_dataset_room_cff = _MultiFileDownloadableDatasetLoader(_dataset_room_cff_files_func)$/;"	v
_dataset_room_cff_files_func	build/lib/pyvista/examples/downloads.py	/^def _dataset_room_cff_files_func():$/;"	f
_dataset_room_cff_files_func	pyvista/examples/downloads.py	/^def _dataset_room_cff_files_func():$/;"	f
_dataset_room_surface_mesh	build/lib/pyvista/examples/downloads.py	/^_dataset_room_surface_mesh = _SingleFileDownloadableDatasetLoader('room_surface_mesh.obj')$/;"	v
_dataset_room_surface_mesh	pyvista/examples/downloads.py	/^_dataset_room_surface_mesh = _SingleFileDownloadableDatasetLoader('room_surface_mesh.obj')$/;"	v
_dataset_saddle_surface	build/lib/pyvista/examples/downloads.py	/^_dataset_saddle_surface = _SingleFileDownloadableDatasetLoader('InterpolatingOnSTL_final.stl')$/;"	v
_dataset_saddle_surface	pyvista/examples/downloads.py	/^_dataset_saddle_surface = _SingleFileDownloadableDatasetLoader('InterpolatingOnSTL_final.stl')$/;"	v
_dataset_saturn_rings	build/lib/pyvista/examples/planets.py	/^_dataset_saturn_rings = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_saturn_rings	pyvista/examples/planets.py	/^_dataset_saturn_rings = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_saturn_surface	build/lib/pyvista/examples/planets.py	/^_dataset_saturn_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_saturn_surface	pyvista/examples/planets.py	/^_dataset_saturn_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_sea_vase	build/lib/pyvista/examples/downloads.py	/^_dataset_sea_vase = _SingleFileDownloadableDatasetLoader('ivan-nikolov\/seaVase_decimated.vtp')$/;"	v
_dataset_sea_vase	pyvista/examples/downloads.py	/^_dataset_sea_vase = _SingleFileDownloadableDatasetLoader('ivan-nikolov\/seaVase_decimated.vtp')$/;"	v
_dataset_shark	build/lib/pyvista/examples/downloads.py	/^_dataset_shark = _SingleFileDownloadableDatasetLoader('shark.ply')$/;"	v
_dataset_shark	pyvista/examples/downloads.py	/^_dataset_shark = _SingleFileDownloadableDatasetLoader('shark.ply')$/;"	v
_dataset_single_sphere_animation	build/lib/pyvista/examples/downloads.py	/^_dataset_single_sphere_animation = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_single_sphere_animation	pyvista/examples/downloads.py	/^_dataset_single_sphere_animation = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_sky_box_cube_map	build/lib/pyvista/examples/downloads.py	/^_dataset_sky_box_cube_map = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_sky_box_cube_map	pyvista/examples/downloads.py	/^_dataset_sky_box_cube_map = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_sky_box_nz	build/lib/pyvista/examples/downloads.py	/^_dataset_sky_box_nz = _SingleFileDownloadableDatasetLoader('skybox-nz.jpg')$/;"	v
_dataset_sky_box_nz	pyvista/examples/downloads.py	/^_dataset_sky_box_nz = _SingleFileDownloadableDatasetLoader('skybox-nz.jpg')$/;"	v
_dataset_sky_box_nz_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_sky_box_nz_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_sky_box_nz_texture	pyvista/examples/downloads.py	/^_dataset_sky_box_nz_texture = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_sparse_points	build/lib/pyvista/examples/downloads.py	/^_dataset_sparse_points = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_sparse_points	pyvista/examples/downloads.py	/^_dataset_sparse_points = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_sphere	build/lib/pyvista/examples/examples.py	/^_dataset_sphere = _SingleFileDownloadableDatasetLoader(spherefile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_sphere	pyvista/examples/examples.py	/^_dataset_sphere = _SingleFileDownloadableDatasetLoader(spherefile, read_func=pyvista.PolyData)  # type: ignore[arg-type]$/;"	v
_dataset_sphere_vectors	build/lib/pyvista/examples/examples.py	/^_dataset_sphere_vectors = _DatasetLoader(_sphere_vectors_load_func)$/;"	v
_dataset_sphere_vectors	pyvista/examples/examples.py	/^_dataset_sphere_vectors = _DatasetLoader(_sphere_vectors_load_func)$/;"	v
_dataset_spider	build/lib/pyvista/examples/downloads.py	/^_dataset_spider = _SingleFileDownloadableDatasetLoader('spider.ply')$/;"	v
_dataset_spider	pyvista/examples/downloads.py	/^_dataset_spider = _SingleFileDownloadableDatasetLoader('spider.ply')$/;"	v
_dataset_spline	build/lib/pyvista/examples/examples.py	/^_dataset_spline = _DatasetLoader(_spline_load_func)$/;"	v
_dataset_spline	pyvista/examples/examples.py	/^_dataset_spline = _DatasetLoader(_spline_load_func)$/;"	v
_dataset_st_helens	build/lib/pyvista/examples/downloads.py	/^_dataset_st_helens = _SingleFileDownloadableDatasetLoader('SainteHelens.dem')$/;"	v
_dataset_st_helens	pyvista/examples/downloads.py	/^_dataset_st_helens = _SingleFileDownloadableDatasetLoader('SainteHelens.dem')$/;"	v
_dataset_stars_cloud_hyg	build/lib/pyvista/examples/downloads.py	/^_dataset_stars_cloud_hyg = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_stars_cloud_hyg	pyvista/examples/downloads.py	/^_dataset_stars_cloud_hyg = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_stars_sky_background	build/lib/pyvista/examples/planets.py	/^_dataset_stars_sky_background = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_stars_sky_background	pyvista/examples/planets.py	/^_dataset_stars_sky_background = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_structured	build/lib/pyvista/examples/examples.py	/^_dataset_structured = _DatasetLoader(_structured_load_func)$/;"	v
_dataset_structured	pyvista/examples/examples.py	/^_dataset_structured = _DatasetLoader(_structured_load_func)$/;"	v
_dataset_structured_grid	build/lib/pyvista/examples/downloads.py	/^_dataset_structured_grid = _SingleFileDownloadableDatasetLoader('StructuredGrid.vts')$/;"	v
_dataset_structured_grid	pyvista/examples/downloads.py	/^_dataset_structured_grid = _SingleFileDownloadableDatasetLoader('StructuredGrid.vts')$/;"	v
_dataset_structured_grid_two	build/lib/pyvista/examples/downloads.py	/^_dataset_structured_grid_two = _SingleFileDownloadableDatasetLoader('SampleStructGrid.vtk')$/;"	v
_dataset_structured_grid_two	pyvista/examples/downloads.py	/^_dataset_structured_grid_two = _SingleFileDownloadableDatasetLoader('SampleStructGrid.vtk')$/;"	v
_dataset_sun_surface	build/lib/pyvista/examples/planets.py	/^_dataset_sun_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_sun_surface	pyvista/examples/planets.py	/^_dataset_sun_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_t3_grid_0	build/lib/pyvista/examples/downloads.py	/^_dataset_t3_grid_0 = _SingleFileDownloadableDatasetLoader('t3_grid_0.mnc')$/;"	v
_dataset_t3_grid_0	pyvista/examples/downloads.py	/^_dataset_t3_grid_0 = _SingleFileDownloadableDatasetLoader('t3_grid_0.mnc')$/;"	v
_dataset_teapot	build/lib/pyvista/examples/downloads.py	/^_dataset_teapot = _SingleFileDownloadableDatasetLoader('teapot.g')$/;"	v
_dataset_teapot	pyvista/examples/downloads.py	/^_dataset_teapot = _SingleFileDownloadableDatasetLoader('teapot.g')$/;"	v
_dataset_tecplot_ascii	build/lib/pyvista/examples/downloads.py	/^_dataset_tecplot_ascii = _SingleFileDownloadableDatasetLoader('tecplot_ascii.dat')$/;"	v
_dataset_tecplot_ascii	pyvista/examples/downloads.py	/^_dataset_tecplot_ascii = _SingleFileDownloadableDatasetLoader('tecplot_ascii.dat')$/;"	v
_dataset_tensors	build/lib/pyvista/examples/downloads.py	/^_dataset_tensors = _SingleFileDownloadableDatasetLoader('tensors.vtk')$/;"	v
_dataset_tensors	pyvista/examples/downloads.py	/^_dataset_tensors = _SingleFileDownloadableDatasetLoader('tensors.vtk')$/;"	v
_dataset_tetbeam	build/lib/pyvista/examples/examples.py	/^_dataset_tetbeam = _DatasetLoader(_tetbeam_load_func)$/;"	v
_dataset_tetbeam	pyvista/examples/examples.py	/^_dataset_tetbeam = _DatasetLoader(_tetbeam_load_func)$/;"	v
_dataset_tetra_dc_mesh	build/lib/pyvista/examples/downloads.py	/^_dataset_tetra_dc_mesh = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_tetra_dc_mesh	pyvista/examples/downloads.py	/^_dataset_tetra_dc_mesh = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_tetrahedron	build/lib/pyvista/examples/downloads.py	/^_dataset_tetrahedron = _SingleFileDownloadableDatasetLoader('Tetrahedron.vtu')$/;"	v
_dataset_tetrahedron	pyvista/examples/downloads.py	/^_dataset_tetrahedron = _SingleFileDownloadableDatasetLoader('Tetrahedron.vtu')$/;"	v
_dataset_thermal_probes	build/lib/pyvista/examples/downloads.py	/^_dataset_thermal_probes = _SingleFileDownloadableDatasetLoader('probes.vtp')$/;"	v
_dataset_thermal_probes	pyvista/examples/downloads.py	/^_dataset_thermal_probes = _SingleFileDownloadableDatasetLoader('probes.vtp')$/;"	v
_dataset_topo_global	build/lib/pyvista/examples/downloads.py	/^_dataset_topo_global = _SingleFileDownloadableDatasetLoader('EarthModels\/ETOPO_10min_Ice.vtp')$/;"	v
_dataset_topo_global	pyvista/examples/downloads.py	/^_dataset_topo_global = _SingleFileDownloadableDatasetLoader('EarthModels\/ETOPO_10min_Ice.vtp')$/;"	v
_dataset_topo_land	build/lib/pyvista/examples/downloads.py	/^_dataset_topo_land = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_topo_land	pyvista/examples/downloads.py	/^_dataset_topo_land = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_torso	build/lib/pyvista/examples/downloads.py	/^_dataset_torso = _SingleFileDownloadableDatasetLoader('Torso.vtp')$/;"	v
_dataset_torso	pyvista/examples/downloads.py	/^_dataset_torso = _SingleFileDownloadableDatasetLoader('Torso.vtp')$/;"	v
_dataset_tri_quadratic_hexahedron	build/lib/pyvista/examples/downloads.py	/^_dataset_tri_quadratic_hexahedron = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_tri_quadratic_hexahedron	pyvista/examples/downloads.py	/^_dataset_tri_quadratic_hexahedron = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_trumpet	build/lib/pyvista/examples/downloads.py	/^_dataset_trumpet = _SingleFileDownloadableDatasetLoader('trumpet.obj')$/;"	v
_dataset_trumpet	pyvista/examples/downloads.py	/^_dataset_trumpet = _SingleFileDownloadableDatasetLoader('trumpet.obj')$/;"	v
_dataset_turbine_blade	build/lib/pyvista/examples/downloads.py	/^_dataset_turbine_blade = _SingleFileDownloadableDatasetLoader('turbineblade.ply')$/;"	v
_dataset_turbine_blade	pyvista/examples/downloads.py	/^_dataset_turbine_blade = _SingleFileDownloadableDatasetLoader('turbineblade.ply')$/;"	v
_dataset_uniform	build/lib/pyvista/examples/examples.py	/^_dataset_uniform = _SingleFileDownloadableDatasetLoader(uniformfile, read_func=pyvista.ImageData)  # type: ignore[arg-type]$/;"	v
_dataset_uniform	pyvista/examples/examples.py	/^_dataset_uniform = _SingleFileDownloadableDatasetLoader(uniformfile, read_func=pyvista.ImageData)  # type: ignore[arg-type]$/;"	v
_dataset_unstructured_grid	build/lib/pyvista/examples/downloads.py	/^_dataset_unstructured_grid = _SingleFileDownloadableDatasetLoader('uGridEx.vtk')$/;"	v
_dataset_unstructured_grid	pyvista/examples/downloads.py	/^_dataset_unstructured_grid = _SingleFileDownloadableDatasetLoader('uGridEx.vtk')$/;"	v
_dataset_uranus_surface	build/lib/pyvista/examples/planets.py	/^_dataset_uranus_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_uranus_surface	pyvista/examples/planets.py	/^_dataset_uranus_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_urn	build/lib/pyvista/examples/downloads.py	/^_dataset_urn = _SingleFileDownloadableDatasetLoader('urn.stl')$/;"	v
_dataset_urn	pyvista/examples/downloads.py	/^_dataset_urn = _SingleFileDownloadableDatasetLoader('urn.stl')$/;"	v
_dataset_usa	build/lib/pyvista/examples/downloads.py	/^_dataset_usa = _SingleFileDownloadableDatasetLoader('usa.vtk')$/;"	v
_dataset_usa	pyvista/examples/downloads.py	/^_dataset_usa = _SingleFileDownloadableDatasetLoader('usa.vtk')$/;"	v
_dataset_usa_texture	build/lib/pyvista/examples/downloads.py	/^_dataset_usa_texture = _SingleFileDownloadableDatasetLoader('usa_image.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_usa_texture	pyvista/examples/downloads.py	/^_dataset_usa_texture = _SingleFileDownloadableDatasetLoader('usa_image.jpg', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_venus_surface	build/lib/pyvista/examples/planets.py	/^_dataset_venus_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_venus_surface	pyvista/examples/planets.py	/^_dataset_venus_surface = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_victorian_goblet_face_illusion	build/lib/pyvista/examples/downloads.py	/^_dataset_victorian_goblet_face_illusion = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_victorian_goblet_face_illusion	pyvista/examples/downloads.py	/^_dataset_victorian_goblet_face_illusion = _SingleFileDownloadableDatasetLoader($/;"	v
_dataset_vtk	build/lib/pyvista/examples/downloads.py	/^_dataset_vtk = _SingleFileDownloadableDatasetLoader('vtk.vtp')$/;"	v
_dataset_vtk	pyvista/examples/downloads.py	/^_dataset_vtk = _SingleFileDownloadableDatasetLoader('vtk.vtp')$/;"	v
_dataset_vtk_logo	build/lib/pyvista/examples/downloads.py	/^_dataset_vtk_logo = _SingleFileDownloadableDatasetLoader('vtk.png', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_vtk_logo	pyvista/examples/downloads.py	/^_dataset_vtk_logo = _SingleFileDownloadableDatasetLoader('vtk.png', read_func=read_texture)  # type: ignore[arg-type]$/;"	v
_dataset_wavy	build/lib/pyvista/examples/downloads.py	/^_dataset_wavy = _SingleFileDownloadableDatasetLoader('PVD\/wavy.zip', target_file='unzip\/wavy.pvd')$/;"	v
_dataset_wavy	pyvista/examples/downloads.py	/^_dataset_wavy = _SingleFileDownloadableDatasetLoader('PVD\/wavy.zip', target_file='unzip\/wavy.pvd')$/;"	v
_dataset_whole_body_ct_female	build/lib/pyvista/examples/downloads.py	/^_dataset_whole_body_ct_female = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_whole_body_ct_female	pyvista/examples/downloads.py	/^_dataset_whole_body_ct_female = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_whole_body_ct_male	build/lib/pyvista/examples/downloads.py	/^_dataset_whole_body_ct_male = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_whole_body_ct_male	pyvista/examples/downloads.py	/^_dataset_whole_body_ct_male = _MultiFileDownloadableDatasetLoader($/;"	v
_dataset_woman	build/lib/pyvista/examples/downloads.py	/^_dataset_woman = _SingleFileDownloadableDatasetLoader('woman.stl')$/;"	v
_dataset_woman	pyvista/examples/downloads.py	/^_dataset_woman = _SingleFileDownloadableDatasetLoader('woman.stl')$/;"	v
_datasets	build/lib/pyvista/plotting/plotter.py	/^    def _datasets(self):$/;"	m	class:BasePlotter
_datasets	pyvista/plotting/plotter.py	/^    def _datasets(self):$/;"	m	class:BasePlotter
_dikhololo_night_load_func	build/lib/pyvista/examples/downloads.py	/^def _dikhololo_night_load_func(texture):  # pragma: no cover$/;"	f
_dikhololo_night_load_func	pyvista/examples/downloads.py	/^def _dikhololo_night_load_func(texture):  # pragma: no cover$/;"	f
_dimensions	build/lib/pyvista/core/pointset.py	/^    def _dimensions(self) -> tuple[int, int, int]:$/;"	m	class:ExplicitStructuredGrid
_dimensions	pyvista/core/pointset.py	/^    def _dimensions(self) -> tuple[int, int, int]:$/;"	m	class:ExplicitStructuredGrid
_disable_fxaa	build/lib/pyvista/plotting/renderer.py	/^    def _disable_fxaa(self) -> None:$/;"	m	class:Renderer
_disable_fxaa	pyvista/plotting/renderer.py	/^    def _disable_fxaa(self) -> None:$/;"	m	class:Renderer
_display	build/lib/pyvista/core/dataobject.py	/^                from IPython.display import display as _display$/;"	i
_display	pyvista/core/dataobject.py	/^                from IPython.display import display as _display$/;"	i
_doorman_files_func	build/lib/pyvista/examples/downloads.py	/^def _doorman_files_func():$/;"	f
_doorman_files_func	pyvista/examples/downloads.py	/^def _doorman_files_func():$/;"	f
_download_and_read	build/lib/pyvista/examples/downloads.py	/^def _download_and_read(filename, texture=False, file_format=None, load=True):$/;"	f
_download_and_read	pyvista/examples/downloads.py	/^def _download_and_read(filename, texture=False, file_format=None, load=True):$/;"	f
_download_archive	build/lib/pyvista/examples/downloads.py	/^def _download_archive(filename, target_file=None):  # pragma: no cover$/;"	f
_download_archive	pyvista/examples/downloads.py	/^def _download_archive(filename, target_file=None):  # pragma: no cover$/;"	f
_download_archive_file_or_folder	build/lib/pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import _download_archive_file_or_folder$/;"	i
_download_archive_file_or_folder	build/lib/pyvista/examples/downloads.py	/^def _download_archive_file_or_folder(filename, target_file=None):$/;"	f
_download_archive_file_or_folder	pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import _download_archive_file_or_folder$/;"	i
_download_archive_file_or_folder	pyvista/examples/downloads.py	/^def _download_archive_file_or_folder(filename, target_file=None):$/;"	f
_download_dataset	build/lib/pyvista/examples/_dataset_loader.py	/^def _download_dataset($/;"	f
_download_dataset	build/lib/pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _download_dataset$/;"	i
_download_dataset	build/lib/pyvista/examples/planets.py	/^from pyvista.examples._dataset_loader import _download_dataset$/;"	i
_download_dataset	pyvista/examples/_dataset_loader.py	/^def _download_dataset($/;"	f
_download_dataset	pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _download_dataset$/;"	i
_download_dataset	pyvista/examples/planets.py	/^from pyvista.examples._dataset_loader import _download_dataset$/;"	i
_download_dataset_texture	build/lib/pyvista/examples/planets.py	/^def _download_dataset_texture($/;"	f
_download_dataset_texture	pyvista/examples/planets.py	/^def _download_dataset_texture($/;"	f
_download_dataset_texture	tests/examples/test_dataset_loader.py	/^from pyvista.examples.planets import _download_dataset_texture$/;"	i
_download_file	build/lib/pyvista/examples/downloads.py	/^def _download_file(filename):$/;"	f
_download_file	pyvista/examples/downloads.py	/^def _download_file(filename):$/;"	f
_dtype_convert_func	tests/plotting/test_plotting.py	/^    def _dtype_convert_func(dtype):$/;"	f	function:_make_rgb_dataset
_electronics_cooling_files_func	build/lib/pyvista/examples/downloads.py	/^def _electronics_cooling_files_func():  # pragma: no cover$/;"	f
_electronics_cooling_files_func	pyvista/examples/downloads.py	/^def _electronics_cooling_files_func():  # pragma: no cover$/;"	f
_embryo_load_func	build/lib/pyvista/examples/downloads.py	/^def _embryo_load_func(dataset):  # pragma: no cover$/;"	f
_embryo_load_func	pyvista/examples/downloads.py	/^def _embryo_load_func(dataset):  # pragma: no cover$/;"	f
_enable_fxaa	build/lib/pyvista/plotting/renderer.py	/^    def _enable_fxaa(self) -> None:$/;"	m	class:Renderer
_enable_fxaa	pyvista/plotting/renderer.py	/^    def _enable_fxaa(self) -> None:$/;"	m	class:Renderer
_end_handler	build/lib/pyvista/plotting/picking.py	/^        def _end_handler(picked):$/;"	f	function:PickingMethods.enable_element_picking
_end_handler	pyvista/plotting/picking.py	/^        def _end_handler(picked):$/;"	f	function:PickingMethods.enable_element_picking
_end_pick_event	build/lib/pyvista/plotting/picking.py	/^        def _end_pick_event(picked_point, picker):$/;"	f	function:PickingMethods.enable_surface_point_picking
_end_pick_event	build/lib/pyvista/plotting/picking.py	/^        def _end_pick_event(picker, _event):$/;"	f	function:PickingInterface.enable_point_picking
_end_pick_event	pyvista/plotting/picking.py	/^        def _end_pick_event(picked_point, picker):$/;"	f	function:PickingMethods.enable_surface_point_picking
_end_pick_event	pyvista/plotting/picking.py	/^        def _end_pick_event(picker, _event):$/;"	f	function:PickingInterface.enable_point_picking
_end_pick_helper	build/lib/pyvista/plotting/picking.py	/^        def _end_pick_helper(picker, *args):$/;"	f	function:PickingInterface.enable_rectangle_picking
_end_pick_helper	pyvista/plotting/picking.py	/^        def _end_pick_helper(picker, *args):$/;"	f	function:PickingInterface.enable_rectangle_picking
_explicit_structured_load_func	build/lib/pyvista/examples/examples.py	/^def _explicit_structured_load_func(dimensions=(5, 6, 7), spacing=(20, 10, 1)):$/;"	f
_explicit_structured_load_func	pyvista/examples/examples.py	/^def _explicit_structured_load_func(dimensions=(5, 6, 7), spacing=(20, 10, 1)):$/;"	f
_extract_values	build/lib/pyvista/core/filters/data_set.py	/^    def _extract_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_extract_values	pyvista/core/filters/data_set.py	/^    def _extract_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_file_copier	build/lib/pyvista/examples/downloads.py	/^def _file_copier(input_file, output_file, *args, **kwargs):$/;"	f
_file_copier	pyvista/examples/downloads.py	/^def _file_copier(input_file, output_file, *args, **kwargs):$/;"	f
_file_objects	build/lib/pyvista/examples/_dataset_loader.py	/^    def _file_objects(self):$/;"	m	class:_MultiFileDatasetLoader
_file_objects	pyvista/examples/_dataset_loader.py	/^    def _file_objects(self):$/;"	m	class:_MultiFileDatasetLoader
_files_func	tests/examples/test_dataset_loader.py	/^    def _files_func():$/;"	f	function:dataset_loader_two_files_both_loadable
_files_func	tests/examples/test_dataset_loader.py	/^    def _files_func():$/;"	f	function:dataset_loader_two_files_one_loadable
_filesize_bytes	build/lib/pyvista/examples/_dataset_loader.py	/^    def _filesize_bytes(self) -> _FilePropIntType_co:$/;"	m	class:_BaseFilePropsProtocol
_filesize_bytes	build/lib/pyvista/examples/_dataset_loader.py	/^    def _filesize_bytes(self) -> int:$/;"	m	class:_SingleFile
_filesize_bytes	build/lib/pyvista/examples/_dataset_loader.py	/^    def _filesize_bytes(self) -> tuple[int, ...]:$/;"	m	class:_MultiFileDatasetLoader
_filesize_bytes	pyvista/examples/_dataset_loader.py	/^    def _filesize_bytes(self) -> _FilePropIntType_co:$/;"	m	class:_BaseFilePropsProtocol
_filesize_bytes	pyvista/examples/_dataset_loader.py	/^    def _filesize_bytes(self) -> int:$/;"	m	class:_SingleFile
_filesize_bytes	pyvista/examples/_dataset_loader.py	/^    def _filesize_bytes(self) -> tuple[int, ...]:$/;"	m	class:_MultiFileDatasetLoader
_filesize_format	build/lib/pyvista/examples/_dataset_loader.py	/^    def _filesize_format(self) -> _FilePropStrType_co:$/;"	m	class:_BaseFilePropsProtocol
_filesize_format	build/lib/pyvista/examples/_dataset_loader.py	/^    def _filesize_format(self) -> str:$/;"	m	class:_SingleFile
_filesize_format	build/lib/pyvista/examples/_dataset_loader.py	/^    def _filesize_format(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDatasetLoader
_filesize_format	pyvista/examples/_dataset_loader.py	/^    def _filesize_format(self) -> _FilePropStrType_co:$/;"	m	class:_BaseFilePropsProtocol
_filesize_format	pyvista/examples/_dataset_loader.py	/^    def _filesize_format(self) -> str:$/;"	m	class:_SingleFile
_filesize_format	pyvista/examples/_dataset_loader.py	/^    def _filesize_format(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDatasetLoader
_filter_part_actors	build/lib/pyvista/plotting/axes_assembly.py	/^    def _filter_part_actors($/;"	m	class:AxesAssembly
_filter_part_actors	pyvista/plotting/axes_assembly.py	/^    def _filter_part_actors($/;"	m	class:AxesAssembly
_fixup_bounds	build/lib/pyvista/plotting/renderer.py	/^def _fixup_bounds(bounds) -> BoundsTuple:$/;"	f
_fixup_bounds	pyvista/plotting/renderer.py	/^def _fixup_bounds(bounds) -> BoundsTuple:$/;"	f
_flat	build/lib/pyvista/examples/_dataset_loader.py	/^        def _flat(obj):$/;"	f	function:_DatasetLoader.dataset_iterable
_flat	pyvista/examples/_dataset_loader.py	/^        def _flat(obj):$/;"	f	function:_DatasetLoader.dataset_iterable
_flatten_nested_sequence	build/lib/pyvista/examples/_dataset_loader.py	/^def _flatten_nested_sequence(nested: Sequence[_ScalarType | Sequence[_ScalarType]]):$/;"	f
_flatten_nested_sequence	pyvista/examples/_dataset_loader.py	/^def _flatten_nested_sequence(nested: Sequence[_ScalarType | Sequence[_ScalarType]]):$/;"	f
_flatten_path	tests/doc/tst_doc_images.py	/^def _flatten_path(path: str):$/;"	f
_flip_uniform	build/lib/pyvista/core/filters/image_data.py	/^    def _flip_uniform(self, axis) -> pyvista.ImageData:$/;"	m	class:ImageDataFilters
_flip_uniform	pyvista/core/filters/image_data.py	/^    def _flip_uniform(self, axis) -> pyvista.ImageData:$/;"	m	class:ImageDataFilters
_float_hls	build/lib/pyvista/plotting/colors.py	/^    def _float_hls(self) -> tuple[float, float, float]:$/;"	m	class:Color
_float_hls	pyvista/plotting/colors.py	/^    def _float_hls(self) -> tuple[float, float, float]:$/;"	m	class:Color
_font_family	build/lib/pyvista/plotting/text.py	/^    _font_family = None$/;"	v	class:TextProperty
_font_family	pyvista/plotting/text.py	/^    _font_family = None$/;"	v	class:TextProperty
_format_and_indent_from_template	doc/source/make_tables.py	/^    def _format_and_indent_from_template(*args, template=None, indent_level=None):$/;"	m	class:DatasetCard
_format_color_dict	build/lib/pyvista/plotting/colors.py	/^def _format_color_dict(colors: dict[str, str]):$/;"	f
_format_color_dict	doc/source/make_tables.py	/^from pyvista.plotting.colors import _format_color_dict$/;"	i
_format_color_dict	pyvista/plotting/colors.py	/^def _format_color_dict(colors: dict[str, str]):$/;"	f
_format_color_name	build/lib/pyvista/plotting/colors.py	/^def _format_color_name(name: str):$/;"	f
_format_color_name	pyvista/plotting/colors.py	/^def _format_color_name(name: str):$/;"	f
_format_ext	doc/source/make_tables.py	/^        def _format_ext(file_ext_: list[str]):$/;"	f	function:DatasetPropsGenerator.generate_file_ext
_format_file_size	build/lib/pyvista/examples/_dataset_loader.py	/^def _format_file_size(size: int) -> str:$/;"	f
_format_file_size	pyvista/examples/_dataset_loader.py	/^def _format_file_size(size: int) -> str:$/;"	f
_format_file_size	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _format_file_size$/;"	i
_format_nested_index	build/lib/pyvista/core/composite.py	/^from .filters.composite import _format_nested_index$/;"	i
_format_nested_index	build/lib/pyvista/core/dataobject.py	/^                    from pyvista.core.filters.composite import _format_nested_index$/;"	i
_format_nested_index	build/lib/pyvista/core/filters/composite.py	/^def _format_nested_index(index: tuple[int, ...]) -> str:$/;"	f
_format_nested_index	pyvista/core/composite.py	/^from .filters.composite import _format_nested_index$/;"	i
_format_nested_index	pyvista/core/dataobject.py	/^                    from pyvista.core.filters.composite import _format_nested_index$/;"	i
_format_nested_index	pyvista/core/filters/composite.py	/^def _format_nested_index(index: tuple[int, ...]) -> str:$/;"	f
_frog_files_func	build/lib/pyvista/examples/downloads.py	/^def _frog_files_func():  # pragma: no cover$/;"	f
_frog_files_func	pyvista/examples/downloads.py	/^def _frog_files_func():  # pragma: no cover$/;"	f
_frog_tissue_files_func	build/lib/pyvista/examples/downloads.py	/^def _frog_tissue_files_func():$/;"	f
_frog_tissue_files_func	pyvista/examples/downloads.py	/^def _frog_tissue_files_func():$/;"	f
_from_array	build/lib/pyvista/plotting/texture.py	/^    def _from_array(self, image):$/;"	m	class:Texture
_from_array	pyvista/plotting/texture.py	/^    def _from_array(self, image):$/;"	m	class:Texture
_from_arrays	build/lib/pyvista/core/grid.py	/^    def _from_arrays($/;"	m	class:RectilinearGrid
_from_arrays	build/lib/pyvista/core/objects.py	/^    def _from_arrays(self, arrays) -> None:$/;"	m	class:Table
_from_arrays	build/lib/pyvista/core/pointset.py	/^    def _from_arrays($/;"	m	class:UnstructuredGrid
_from_arrays	build/lib/pyvista/core/pointset.py	/^    def _from_arrays(self, dims: VectorLike[int], corners: MatrixLike[float]) -> None:$/;"	m	class:ExplicitStructuredGrid
_from_arrays	build/lib/pyvista/core/pointset.py	/^    def _from_arrays(self, x, y, z, force_float: bool = True):$/;"	m	class:StructuredGrid
_from_arrays	pyvista/core/grid.py	/^    def _from_arrays($/;"	m	class:RectilinearGrid
_from_arrays	pyvista/core/objects.py	/^    def _from_arrays(self, arrays) -> None:$/;"	m	class:Table
_from_arrays	pyvista/core/pointset.py	/^    def _from_arrays($/;"	m	class:UnstructuredGrid
_from_arrays	pyvista/core/pointset.py	/^    def _from_arrays(self, dims: VectorLike[int], corners: MatrixLike[float]) -> None:$/;"	m	class:ExplicitStructuredGrid
_from_arrays	pyvista/core/pointset.py	/^    def _from_arrays(self, x, y, z, force_float: bool = True):$/;"	m	class:StructuredGrid
_from_cells_dict	build/lib/pyvista/core/pointset.py	/^    def _from_cells_dict(self, cells_dict, points, deep: bool = True):$/;"	m	class:UnstructuredGrid
_from_cells_dict	pyvista/core/pointset.py	/^    def _from_cells_dict(self, cells_dict, points, deep: bool = True):$/;"	m	class:UnstructuredGrid
_from_cells_points	build/lib/pyvista/core/pointset.py	/^    def _from_cells_points($/;"	m	class:ExplicitStructuredGrid
_from_cells_points	pyvista/core/pointset.py	/^    def _from_cells_points($/;"	m	class:ExplicitStructuredGrid
_from_dict	build/lib/pyvista/core/objects.py	/^    def _from_dict(self, array_dict):$/;"	m	class:Table
_from_dict	build/lib/pyvista/plotting/colors.py	/^    def _from_dict(self, dct):$/;"	m	class:Color
_from_dict	pyvista/core/objects.py	/^    def _from_dict(self, array_dict):$/;"	m	class:Table
_from_dict	pyvista/plotting/colors.py	/^    def _from_dict(self, dct):$/;"	m	class:Color
_from_file	build/lib/pyvista/core/dataobject.py	/^    def _from_file(self: Self, filename: str | Path, **kwargs) -> None:$/;"	m	class:DataObject
_from_file	build/lib/pyvista/plotting/texture.py	/^    def _from_file(self, filename, **kwargs):$/;"	m	class:Texture
_from_file	pyvista/core/dataobject.py	/^    def _from_file(self: Self, filename: str | Path, **kwargs) -> None:$/;"	m	class:DataObject
_from_file	pyvista/plotting/texture.py	/^    def _from_file(self, filename, **kwargs):$/;"	m	class:Texture
_from_hex	build/lib/pyvista/plotting/colors.py	/^    def _from_hex(self, h):$/;"	m	class:Color
_from_hex	pyvista/plotting/colors.py	/^    def _from_hex(self, h):$/;"	m	class:Color
_from_image_data	build/lib/pyvista/plotting/texture.py	/^    def _from_image_data(self, image):$/;"	m	class:Texture
_from_image_data	pyvista/plotting/texture.py	/^    def _from_image_data(self, image):$/;"	m	class:Texture
_from_pandas	build/lib/pyvista/core/objects.py	/^    def _from_pandas(self, data_frame) -> None:$/;"	m	class:Table
_from_pandas	pyvista/core/objects.py	/^    def _from_pandas(self, data_frame) -> None:$/;"	m	class:Table
_from_rgba	build/lib/pyvista/plotting/colors.py	/^    def _from_rgba(self, rgba):$/;"	m	class:Color
_from_rgba	pyvista/plotting/colors.py	/^    def _from_rgba(self, rgba):$/;"	m	class:Color
_from_str	build/lib/pyvista/plotting/colors.py	/^    def _from_str(self, n: str):$/;"	m	class:Color
_from_str	pyvista/plotting/colors.py	/^    def _from_str(self, n: str):$/;"	m	class:Color
_from_texture	build/lib/pyvista/plotting/texture.py	/^    def _from_texture(self, texture):$/;"	m	class:Texture
_from_texture	pyvista/plotting/texture.py	/^    def _from_texture(self, texture):$/;"	m	class:Texture
_full_head_files_func	build/lib/pyvista/examples/downloads.py	/^def _full_head_files_func():  # pragma: no cover$/;"	f
_full_head_files_func	pyvista/examples/downloads.py	/^def _full_head_files_func():  # pragma: no cover$/;"	f
_fwd_load_func	build/lib/pyvista/examples/downloads.py	/^    def _fwd_load_func(mesh):$/;"	f	function:_tetra_dc_mesh_files_func
_fwd_load_func	pyvista/examples/downloads.py	/^    def _fwd_load_func(mesh):$/;"	f	function:_tetra_dc_mesh_files_func
_generate_button	doc/source/make_tables.py	/^        def _generate_button(string, ref):$/;"	f	function:DatasetCardFetcher.generate_alphabet_index
_generate_carousel_badges	doc/source/make_tables.py	/^    def _generate_carousel_badges(badges: list[_BaseDatasetBadge]):$/;"	m	class:DatasetCard
_generate_celltype_badges	doc/source/make_tables.py	/^    def _generate_celltype_badges(badges: list[_BaseDatasetBadge]):$/;"	m	class:DatasetCard
_generate_cross_references	doc/source/make_tables.py	/^    def _generate_cross_references(dataset_name: str, index_name: str, header_name):$/;"	m	class:DatasetCard
_generate_dataset_loader_test_cases_from_module	tests/examples/test_dataset_loader.py	/^def _generate_dataset_loader_test_cases_from_module($/;"	f
_generate_dataset_loader_test_cases_from_module	tests/examples/test_downloads.py	/^from tests.examples.test_dataset_loader import _generate_dataset_loader_test_cases_from_module$/;"	i
_generate_dataset_loader_test_cases_from_module	tests/examples/test_examples.py	/^from tests.examples.test_dataset_loader import _generate_dataset_loader_test_cases_from_module$/;"	i
_generate_dataset_name	doc/source/make_tables.py	/^    def _generate_dataset_name(dataset_name: str):$/;"	m	class:DatasetCard
_generate_dataset_properties	doc/source/make_tables.py	/^    def _generate_dataset_properties(loader):$/;"	m	class:DatasetCard
_generate_dataset_repr	doc/source/make_tables.py	/^    def _generate_dataset_repr(loader: _DatasetLoader, indent_level: int) -> str:$/;"	m	class:DatasetPropsGenerator
_generate_dimension_badge	build/lib/pyvista/core/celltype.py	/^def _generate_dimension_badge(dimension: int) -> str:$/;"	f
_generate_dimension_badge	pyvista/core/celltype.py	/^def _generate_dimension_badge(dimension: int) -> str:$/;"	f
_generate_direction_object_functions	tests/plotting/test_plotting.py	/^def _generate_direction_object_functions() -> ItemsView[str, FunctionType]:$/;"	f
_generate_edges_badge	build/lib/pyvista/core/celltype.py	/^def _generate_edges_badge(num_edges: int) -> str:$/;"	f
_generate_edges_badge	pyvista/core/celltype.py	/^def _generate_edges_badge(num_edges: int) -> str:$/;"	f
_generate_faces_badge	build/lib/pyvista/core/celltype.py	/^def _generate_faces_badge(num_faces: int) -> str:$/;"	f
_generate_faces_badge	pyvista/core/celltype.py	/^def _generate_faces_badge(num_faces: int) -> str:$/;"	f
_generate_field_block	doc/source/make_tables.py	/^    def _generate_field_block(fields: list[tuple[str, str | None]], indent_level: int = 0):$/;"	m	class:DatasetCard
_generate_field_grid	doc/source/make_tables.py	/^    def _generate_field_grid(cls, field_name, field_values):$/;"	m	class:DatasetCard
_generate_grid	doc/source/make_tables.py	/^        def _generate_grid(string):$/;"	f	function:DatasetCardFetcher.generate_alphabet_index
_generate_grid_item	doc/source/make_tables.py	/^        def _generate_grid_item(string):$/;"	f	function:DatasetCardFetcher.generate_alphabet_index
_generate_linear_badge	build/lib/pyvista/core/celltype.py	/^def _generate_linear_badge(is_linear: bool) -> str:$/;"	f
_generate_linear_badge	pyvista/core/celltype.py	/^def _generate_linear_badge(is_linear: bool) -> str:$/;"	f
_generate_mesh	tests/plotting/test_plotting.py	/^    def _generate_mesh(style):$/;"	f	function:test_contour_labels_boundary_style
_generate_number	doc/source/make_tables.py	/^    def _generate_number(num: float | None, fmt: Literal['exp', 'spaced'] | None = None):$/;"	m	class:DatasetPropsGenerator
_generate_points_badge	build/lib/pyvista/core/celltype.py	/^def _generate_points_badge(num_points: int) -> str:$/;"	f
_generate_points_badge	pyvista/core/celltype.py	/^def _generate_points_badge(num_points: int) -> str:$/;"	f
_generate_primary_badge	build/lib/pyvista/core/celltype.py	/^def _generate_primary_badge(is_primary: bool) -> str:$/;"	f
_generate_primary_badge	pyvista/core/celltype.py	/^def _generate_primary_badge(is_primary: bool) -> str:$/;"	f
_generate_rectilinear_coords	build/lib/pyvista/core/grid.py	/^    def _generate_rectilinear_coords($/;"	m	class:ImageData
_generate_rectilinear_coords	pyvista/core/grid.py	/^    def _generate_rectilinear_coords($/;"	m	class:ImageData
_generate_test_cases	tests/doc/tst_doc_images.py	/^def _generate_test_cases():$/;"	f
_generate_vtk_err	tests/core/test_utilities.py	/^def _generate_vtk_err():$/;"	f
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartBox
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartMPL
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartPie
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:_Chart
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self, _):$/;"	m	class:ChartMPL
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self, val) -> None:$/;"	m	class:_Chart
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self, value):$/;"	m	class:ChartBox
_geometry	build/lib/pyvista/plotting/charts.py	/^    def _geometry(self, value):$/;"	m	class:ChartPie
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartBox
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartMPL
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:ChartPie
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self):$/;"	m	class:_Chart
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, _):$/;"	m	class:ChartMPL
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, val) -> None:$/;"	m	class:_Chart
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, value):$/;"	m	class:ChartBox
_geometry	pyvista/plotting/charts.py	/^    def _geometry(self, value):$/;"	m	class:ChartPie
_get_alg_input	build/lib/pyvista/core/filters/image_data.py	/^        def _get_alg_input(image: ImageData, scalars_: str | None) -> ImageData:$/;"	f	function:ImageDataFilters.contour_labels
_get_alg_input	pyvista/core/filters/image_data.py	/^        def _get_alg_input(image: ImageData, scalars_: str | None) -> ImageData:$/;"	f	function:ImageDataFilters.contour_labels
_get_all_nested_filepaths	build/lib/pyvista/examples/_dataset_loader.py	/^def _get_all_nested_filepaths(filepath, exclude_readme=True):$/;"	f
_get_all_nested_filepaths	pyvista/examples/_dataset_loader.py	/^def _get_all_nested_filepaths(filepath, exclude_readme=True):$/;"	f
_get_attrs	build/lib/pyvista/core/cell.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:Cell
_get_attrs	build/lib/pyvista/core/composite.py	/^    def _get_attrs(self: MultiBlock) -> list[tuple[str, Any, str]]:$/;"	m	class:MultiBlock
_get_attrs	build/lib/pyvista/core/dataobject.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:  # pragma: no cover$/;"	m	class:DataObject
_get_attrs	build/lib/pyvista/core/dataset.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:DataSet
_get_attrs	build/lib/pyvista/core/grid.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:Grid
_get_attrs	build/lib/pyvista/core/grid.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:ImageData
_get_attrs	build/lib/pyvista/core/objects.py	/^    def _get_attrs(self):$/;"	m	class:Table
_get_attrs	build/lib/pyvista/core/partitioned.py	/^    def _get_attrs(self):$/;"	m	class:PartitionedDataSet
_get_attrs	build/lib/pyvista/core/pointset.py	/^    def _get_attrs(self):$/;"	m	class:StructuredGrid
_get_attrs	build/lib/pyvista/plotting/texture.py	/^    def _get_attrs(self):$/;"	m	class:Texture
_get_attrs	pyvista/core/cell.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:Cell
_get_attrs	pyvista/core/composite.py	/^    def _get_attrs(self: MultiBlock) -> list[tuple[str, Any, str]]:$/;"	m	class:MultiBlock
_get_attrs	pyvista/core/dataobject.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:  # pragma: no cover$/;"	m	class:DataObject
_get_attrs	pyvista/core/dataset.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:DataSet
_get_attrs	pyvista/core/grid.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:Grid
_get_attrs	pyvista/core/grid.py	/^    def _get_attrs(self: Self) -> list[tuple[str, Any, str]]:$/;"	m	class:ImageData
_get_attrs	pyvista/core/objects.py	/^    def _get_attrs(self):$/;"	m	class:Table
_get_attrs	pyvista/core/partitioned.py	/^    def _get_attrs(self):$/;"	m	class:PartitionedDataSet
_get_attrs	pyvista/core/pointset.py	/^    def _get_attrs(self):$/;"	m	class:StructuredGrid
_get_attrs	pyvista/plotting/texture.py	/^    def _get_attrs(self):$/;"	m	class:Texture
_get_axis_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def _get_axis_label(self, axis: _AxisEnum) -> tuple[str, str]:$/;"	m	class:AxesAssemblySymmetric
_get_axis_label	pyvista/plotting/axes_assembly.py	/^    def _get_axis_label(self, axis: _AxisEnum) -> tuple[str, str]:$/;"	m	class:AxesAssemblySymmetric
_get_bounds	build/lib/pyvista/plotting/axes_assembly.py	/^    def _get_bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
_get_bounds	build/lib/pyvista/plotting/prop3d.py	/^    def _get_bounds(self) -> BoundsTuple:$/;"	m	class:_Prop3DMixin
_get_bounds	build/lib/pyvista/plotting/text.py	/^    def _get_bounds(self) -> BoundsTuple:$/;"	m	class:Label
_get_bounds	pyvista/plotting/axes_assembly.py	/^    def _get_bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
_get_bounds	pyvista/plotting/prop3d.py	/^    def _get_bounds(self) -> BoundsTuple:$/;"	m	class:_Prop3DMixin
_get_bounds	pyvista/plotting/text.py	/^    def _get_bounds(self) -> BoundsTuple:$/;"	m	class:Label
_get_bounds	tests/plotting/test_actor.py	/^        def _get_bounds(self):$/;"	m	class:dummy_actor.DummyActor
_get_cell_quality_measures	build/lib/pyvista/core/filters/data_object.py	/^def _get_cell_quality_measures() -> dict[str, str]:$/;"	f
_get_cell_quality_measures	doc/source/make_tables.py	/^from pyvista.core.filters.data_object import _get_cell_quality_measures$/;"	i
_get_cell_quality_measures	pyvista/core/filters/data_object.py	/^def _get_cell_quality_measures() -> dict[str, str]:$/;"	f
_get_cell_quality_measures	tests/core/test_dataobject_filters.py	/^from pyvista.core.filters.data_object import _get_cell_quality_measures$/;"	i
_get_cell_types_array	build/lib/pyvista/core/pointset.py	/^    def _get_cell_types_array(self):$/;"	m	class:UnstructuredGrid
_get_cell_types_array	pyvista/core/pointset.py	/^    def _get_cell_types_array(self):$/;"	m	class:UnstructuredGrid
_get_cells	build/lib/pyvista/core/pointset.py	/^    def _get_cells(self):$/;"	m	class:UnstructuredGrid
_get_cells	pyvista/core/pointset.py	/^    def _get_cells(self):$/;"	m	class:UnstructuredGrid
_get_charts_by_pos	build/lib/pyvista/plotting/renderer.py	/^    def _get_charts_by_pos(self, pos):$/;"	m	class:Renderer
_get_charts_by_pos	pyvista/plotting/renderer.py	/^    def _get_charts_by_pos(self, pos):$/;"	m	class:Renderer
_get_classes_from_module	tests/typing/test_return_type.py	/^    def _get_classes_from_module(module: ModuleType) -> list[type]:$/;"	f	function:get_classes_with_attribute
_get_click_event	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _get_click_event(side) -> str:$/;"	m	class:RenderWindowInteractor
_get_click_event	pyvista/plotting/render_window_interactor.py	/^    def _get_click_event(side) -> str:$/;"	m	class:RenderWindowInteractor
_get_color_source_badge	doc/source/make_tables.py	/^def _get_color_source_badge(name: str) -> str:$/;"	f
_get_connectivity_array	build/lib/pyvista/core/cell.py	/^def _get_connectivity_array(cellarr: _vtk.vtkCellArray) -> NumpyArray[int]:$/;"	f
_get_connectivity_array	build/lib/pyvista/core/pointset.py	/^from .cell import _get_connectivity_array$/;"	i
_get_connectivity_array	pyvista/core/cell.py	/^def _get_connectivity_array(cellarr: _vtk.vtkCellArray) -> NumpyArray[int]:$/;"	f
_get_connectivity_array	pyvista/core/pointset.py	/^from .cell import _get_connectivity_array$/;"	i
_get_consistent_active_scalars	build/lib/pyvista/core/composite.py	/^    def _get_consistent_active_scalars(self: MultiBlock) -> tuple[str | None, str | None]:$/;"	m	class:MultiBlock
_get_consistent_active_scalars	pyvista/core/composite.py	/^    def _get_consistent_active_scalars(self: MultiBlock) -> tuple[str | None, str | None]:$/;"	m	class:MultiBlock
_get_dataset_function	doc/source/make_tables.py	/^    def _get_dataset_function(dataset_name: str) -> tuple[FunctionType, str]:$/;"	m	class:DatasetCard
_get_default_kwargs	tests/plotting/test_plotting.py	/^def _get_default_kwargs(call: Callable) -> dict[str, Any]:$/;"	f
_get_default_param_value	tests/plotting/test_plotting.py	/^def _get_default_param_value(call: Callable, param: str) -> Any:$/;"	f
_get_doc	doc/source/make_tables.py	/^def _get_doc(func: Callable[[], Any]) -> str | None:$/;"	f
_get_event_str	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _get_event_str(event):$/;"	m	class:RenderWindowInteractor
_get_event_str	pyvista/plotting/render_window_interactor.py	/^    def _get_event_str(event):$/;"	m	class:RenderWindowInteractor
_get_ext_force	build/lib/pyvista/core/utilities/fileio.py	/^def _get_ext_force(filename: str | Path, force_ext: str | None = None) -> str:$/;"	f
_get_ext_force	build/lib/pyvista/core/utilities/reader.py	/^from .fileio import _get_ext_force$/;"	i
_get_ext_force	pyvista/core/utilities/fileio.py	/^def _get_ext_force(filename: str | Path, force_ext: str | None = None) -> str:$/;"	f
_get_ext_force	pyvista/core/utilities/reader.py	/^from .fileio import _get_ext_force$/;"	i
_get_file_or_folder_ext	build/lib/pyvista/examples/_dataset_loader.py	/^def _get_file_or_folder_ext(path: str):$/;"	f
_get_file_or_folder_ext	pyvista/examples/_dataset_loader.py	/^def _get_file_or_folder_ext(path: str):$/;"	f
_get_file_or_folder_size	build/lib/pyvista/examples/_dataset_loader.py	/^def _get_file_or_folder_size(filepath) -> int:$/;"	f
_get_file_or_folder_size	pyvista/examples/_dataset_loader.py	/^def _get_file_or_folder_size(filepath) -> int:$/;"	f
_get_file_paths	tests/doc/tst_doc_images.py	/^def _get_file_paths(dir_: str, ext: str):$/;"	f
_get_fullname	doc/source/make_tables.py	/^def _get_fullname(typ: type[Any]) -> str:$/;"	f
_get_inputs_from_dict	build/lib/pyvista/core/filters/data_set.py	/^        def _get_inputs_from_dict(input_):$/;"	f	function:DataSetFilters._validate_extract_values
_get_inputs_from_dict	pyvista/core/filters/data_set.py	/^        def _get_inputs_from_dict(input_):$/;"	f	function:DataSetFilters._validate_extract_values
_get_irregular_cells	build/lib/pyvista/core/cell.py	/^def _get_irregular_cells(cellarr: _vtk.vtkCellArray) -> tuple[NumpyArray[int], ...]:$/;"	f
_get_irregular_cells	build/lib/pyvista/core/pointset.py	/^from .cell import _get_irregular_cells$/;"	i
_get_irregular_cells	pyvista/core/cell.py	/^def _get_irregular_cells(cellarr: _vtk.vtkCellArray) -> tuple[NumpyArray[int], ...]:$/;"	f
_get_irregular_cells	pyvista/core/pointset.py	/^from .cell import _get_irregular_cells$/;"	i
_get_levels_neihgbors	build/lib/pyvista/core/dataset.py	/^    def _get_levels_neihgbors($/;"	m	class:DataSet
_get_levels_neihgbors	pyvista/core/dataset.py	/^    def _get_levels_neihgbors($/;"	m	class:DataSet
_get_mismatch_fail_msg	tests/examples/test_dataset_loader.py	/^def _get_mismatch_fail_msg(test_case: DatasetLoaderTestCase):$/;"	f
_get_mismatch_fail_msg	tests/examples/test_downloads.py	/^from tests.examples.test_dataset_loader import _get_mismatch_fail_msg$/;"	i
_get_mismatch_fail_msg	tests/examples/test_examples.py	/^from tests.examples.test_dataset_loader import _get_mismatch_fail_msg$/;"	i
_get_module_functions	tests/plotting/test_plotting.py	/^def _get_module_functions(module: ModuleType):$/;"	f
_get_module_members	tests/plotting/test_plotting.py	/^def _get_module_members(module: ModuleType, typ: _TypeType) -> dict[str, _TypeType]:$/;"	f
_get_num_components	build/lib/pyvista/core/filters/image_data.py	/^        def _get_num_components(array_):$/;"	f	function:ImageDataFilters.pad_image
_get_num_components	pyvista/core/filters/image_data.py	/^        def _get_num_components(array_):$/;"	f	function:ImageDataFilters.pad_image
_get_offset_array	build/lib/pyvista/core/cell.py	/^def _get_offset_array(cellarr: _vtk.vtkCellArray) -> NumpyArray[int]:$/;"	f
_get_offset_array	build/lib/pyvista/core/pointset.py	/^from .cell import _get_offset_array$/;"	i
_get_offset_array	pyvista/core/cell.py	/^def _get_offset_array(cellarr: _vtk.vtkCellArray) -> NumpyArray[int]:$/;"	f
_get_offset_array	pyvista/core/pointset.py	/^from .cell import _get_offset_array$/;"	i
_get_offset_label_position_vectors	build/lib/pyvista/plotting/axes_assembly.py	/^    def _get_offset_label_position_vectors(self, position_scalars: tuple[float, float, float]):$/;"	m	class:AxesAssembly
_get_offset_label_position_vectors	pyvista/plotting/axes_assembly.py	/^    def _get_offset_label_position_vectors(self, position_scalars: tuple[float, float, float]):$/;"	m	class:AxesAssembly
_get_output	build/lib/pyvista/core/dataset.py	/^from .filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/__init__.py	/^def _get_output($/;"	f
_get_output	build/lib/pyvista/core/filters/composite.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/structured_grid.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/grid.py	/^from .filters import _get_output$/;"	i
_get_output	build/lib/pyvista/core/pointset.py	/^from .filters import _get_output$/;"	i
_get_output	build/lib/pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
_get_output	pyvista/core/dataset.py	/^from .filters import _get_output$/;"	i
_get_output	pyvista/core/filters/__init__.py	/^def _get_output($/;"	f
_get_output	pyvista/core/filters/composite.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/filters/data_object.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/filters/data_set.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/filters/image_data.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/filters/poly_data.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/filters/structured_grid.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters import _get_output$/;"	i
_get_output	pyvista/core/grid.py	/^from .filters import _get_output$/;"	i
_get_output	pyvista/core/pointset.py	/^from .filters import _get_output$/;"	i
_get_output	pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
_get_output_scalars	build/lib/pyvista/core/filters/image_data.py	/^        def _get_output_scalars(preference):$/;"	f	function:ImageDataFilters._remesh_points_cells
_get_output_scalars	pyvista/core/filters/image_data.py	/^        def _get_output_scalars(preference):$/;"	f	function:ImageDataFilters._remesh_points_cells
_get_padded_output	build/lib/pyvista/core/filters/image_data.py	/^        def _get_padded_output(scalars_):$/;"	f	function:ImageDataFilters.pad_image
_get_padded_output	pyvista/core/filters/image_data.py	/^        def _get_padded_output(scalars_):$/;"	f	function:ImageDataFilters.pad_image
_get_point_translations	build/lib/pyvista/core/utilities/transform.py	/^    def _get_point_translations($/;"	m	class:Transform
_get_point_translations	pyvista/core/utilities/transform.py	/^    def _get_point_translations($/;"	m	class:Transform
_get_points_from_object	tests/core/test_utilities.py	/^    def _get_points_from_object(obj_):$/;"	f	function:test_transform_apply
_get_quarter	build/lib/pyvista/core/filters/data_object.py	/^            def _get_quarter(dmin, dmax):$/;"	f	function:DataObjectFilters.clip_box
_get_quarter	pyvista/core/filters/data_object.py	/^            def _get_quarter(dmin, dmax):$/;"	f	function:DataObjectFilters.clip_box
_get_regular_cells	build/lib/pyvista/core/cell.py	/^def _get_regular_cells(cellarr: _vtk.vtkCellArray) -> NumpyArray[int]:$/;"	f
_get_regular_cells	build/lib/pyvista/core/pointset.py	/^from .cell import _get_regular_cells$/;"	i
_get_regular_cells	pyvista/core/cell.py	/^def _get_regular_cells(cellarr: _vtk.vtkCellArray) -> NumpyArray[int]:$/;"	f
_get_regular_cells	pyvista/core/pointset.py	/^from .cell import _get_regular_cells$/;"	i
_get_sg_image_scraper	build/lib/pyvista/plotting/__init__.py	/^from .utilities.sphinx_gallery import _get_sg_image_scraper as _get_sg_image_scraper$/;"	i
_get_sg_image_scraper	build/lib/pyvista/plotting/utilities/__init__.py	/^from .sphinx_gallery import _get_sg_image_scraper as _get_sg_image_scraper$/;"	i
_get_sg_image_scraper	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^def _get_sg_image_scraper():$/;"	f
_get_sg_image_scraper	pyvista/plotting/__init__.py	/^from .utilities.sphinx_gallery import _get_sg_image_scraper as _get_sg_image_scraper$/;"	i
_get_sg_image_scraper	pyvista/plotting/utilities/__init__.py	/^from .sphinx_gallery import _get_sg_image_scraper as _get_sg_image_scraper$/;"	i
_get_sg_image_scraper	pyvista/plotting/utilities/sphinx_gallery.py	/^def _get_sg_image_scraper():$/;"	f
_get_sg_image_scraper	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.sphinx_gallery import _get_sg_image_scraper  # noqa: F401$/;"	i
_get_srcset_st	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    from sphinx_gallery.scrapers import _get_srcset_st$/;"	i
_get_srcset_st	pyvista/plotting/utilities/sphinx_gallery.py	/^    from sphinx_gallery.scrapers import _get_srcset_st$/;"	i
_get_table_entry	doc/source/make_tables.py	/^        def _get_table_entry(cell_type):$/;"	f	function:CellQualityMeasuresTable.get_row
_get_tuple	build/lib/pyvista/plotting/axes_assembly.py	/^            def _get_tuple(actor_or_actors):$/;"	f	function:_XYZAssembly.__init__._make_xyz_tuple
_get_tuple	pyvista/plotting/axes_assembly.py	/^            def _get_tuple(actor_or_actors):$/;"	f	function:_XYZAssembly.__init__._make_xyz_tuple
_get_type_fullname	build/lib/pyvista/typing/mypy_plugin.py	/^            def _get_type_fullname(typ: Any) -> str:$/;"	f	function:promote_type._PyVistaPlugin.get_class_decorator_hook
_get_type_fullname	pyvista/typing/mypy_plugin.py	/^            def _get_type_fullname(typ: Any) -> str:$/;"	f	function:promote_type._PyVistaPlugin.get_class_decorator_hook
_get_unique_dataset_type	build/lib/pyvista/examples/_dataset_loader.py	/^def _get_unique_dataset_type($/;"	f
_get_unique_dataset_type	pyvista/examples/_dataset_loader.py	/^def _get_unique_dataset_type($/;"	f
_get_unique_extension	build/lib/pyvista/examples/_dataset_loader.py	/^def _get_unique_extension(path: str | Sequence[str]):$/;"	f
_get_unique_extension	pyvista/examples/_dataset_loader.py	/^def _get_unique_extension(path: str | Sequence[str]):$/;"	f
_get_unique_labels_no_background	build/lib/pyvista/core/filters/image_data.py	/^        def _get_unique_labels_no_background($/;"	f	function:ImageDataFilters.contour_labels
_get_unique_labels_no_background	pyvista/core/filters/image_data.py	/^        def _get_unique_labels_no_background($/;"	f	function:ImageDataFilters.contour_labels
_get_unique_reader_type	build/lib/pyvista/examples/_dataset_loader.py	/^def _get_unique_reader_type($/;"	f
_get_unique_reader_type	pyvista/examples/_dataset_loader.py	/^def _get_unique_reader_type($/;"	f
_get_val	build/lib/pyvista/core/filters/data_set.py	/^        def _get_val(percent, dmin, dmax):$/;"	f	function:DataSetFilters.threshold_percent
_get_val	pyvista/core/filters/data_set.py	/^        def _get_val(percent, dmin, dmax):$/;"	f	function:DataSetFilters.threshold_percent
_get_vtk_id_type	build/lib/pyvista/__init__.py	/^from pyvista.core.cell import _get_vtk_id_type$/;"	i
_get_vtk_id_type	build/lib/pyvista/core/cell.py	/^def _get_vtk_id_type() -> type[np.int32 | np.int64]:$/;"	f
_get_vtk_id_type	pyvista/__init__.py	/^from pyvista.core.cell import _get_vtk_id_type$/;"	i
_get_vtk_id_type	pyvista/core/cell.py	/^def _get_vtk_id_type() -> type[np.int32 | np.int64]:$/;"	f
_get_world_coord_rot	build/lib/pyvista/plotting/affine_widget.py	/^    def _get_world_coord_rot(self, interactor):$/;"	m	class:AffineWidget3D
_get_world_coord_rot	pyvista/plotting/affine_widget.py	/^    def _get_world_coord_rot(self, interactor):$/;"	m	class:AffineWidget3D
_get_world_coord_trans	build/lib/pyvista/plotting/affine_widget.py	/^    def _get_world_coord_trans(self, interactor):$/;"	m	class:AffineWidget3D
_get_world_coord_trans	pyvista/plotting/affine_widget.py	/^    def _get_world_coord_trans(self, interactor):$/;"	m	class:AffineWidget3D
_greater_than_equal_or_close	build/lib/pyvista/core/utilities/geometric_objects.py	/^    def _greater_than_equal_or_close(value1: float, value2: float, atol: float) -> bool | np.bool_:$/;"	f	function:SolidSphereGeneric
_greater_than_equal_or_close	pyvista/core/utilities/geometric_objects.py	/^    def _greater_than_equal_or_close(value1: float, value2: float, atol: float) -> bool | np.bool_:$/;"	f	function:SolidSphereGeneric
_has_color	build/lib/pyvista/plotting/composite_mapper.py	/^    def _has_color(self):$/;"	m	class:BlockAttributes
_has_color	pyvista/plotting/composite_mapper.py	/^    def _has_color(self):$/;"	m	class:BlockAttributes
_has_opacity	build/lib/pyvista/plotting/composite_mapper.py	/^    def _has_opacity(self):$/;"	m	class:BlockAttributes
_has_opacity	pyvista/plotting/composite_mapper.py	/^    def _has_opacity(self):$/;"	m	class:BlockAttributes
_has_param	tests/plotting/test_plotting.py	/^def _has_param(call: Callable, param: str) -> bool:$/;"	f
_has_pickable	build/lib/pyvista/plotting/composite_mapper.py	/^    def _has_pickable(self):$/;"	m	class:BlockAttributes
_has_pickable	pyvista/plotting/composite_mapper.py	/^    def _has_pickable(self):$/;"	m	class:BlockAttributes
_has_visibility	build/lib/pyvista/plotting/composite_mapper.py	/^    def _has_visibility(self):$/;"	m	class:BlockAttributes
_has_visibility	pyvista/plotting/composite_mapper.py	/^    def _has_visibility(self):$/;"	m	class:BlockAttributes
_head_files_func	build/lib/pyvista/examples/downloads.py	/^def _head_files_func():$/;"	f
_head_files_func	pyvista/examples/downloads.py	/^def _head_files_func():$/;"	f
_hydrogen_orbital_load_func	build/lib/pyvista/examples/examples.py	/^def _hydrogen_orbital_load_func(n=1, l=0, m=0, zoom_fac=1.0):$/;"	f
_hydrogen_orbital_load_func	pyvista/examples/examples.py	/^def _hydrogen_orbital_load_func(n=1, l=0, m=0, zoom_fac=1.0):$/;"	f
_indent_multi_line_string	doc/source/make_tables.py	/^def _indent_multi_line_string($/;"	f
_indent_paragraph	build/lib/pyvista/core/celltype.py	/^def _indent_paragraph(string: str, level: int) -> str:$/;"	f
_indent_paragraph	pyvista/core/celltype.py	/^def _indent_paragraph(string: str, level: int) -> str:$/;"	f
_index	build/lib/pyvista/core/utilities/geometric_objects.py	/^    def _index(ir: int, iphi: int, itheta: int) -> int:$/;"	f	function:SolidSphereGeneric
_index	pyvista/core/utilities/geometric_objects.py	/^    def _index(ir: int, iphi: int, itheta: int) -> int:$/;"	f	function:SolidSphereGeneric
_init_actors	build/lib/pyvista/plotting/affine_widget.py	/^    def _init_actors(self, scale, always_visible):$/;"	m	class:AffineWidget3D
_init_actors	pyvista/plotting/affine_widget.py	/^    def _init_actors(self, scale, always_visible):$/;"	m	class:AffineWidget3D
_init_actors_from_source	build/lib/pyvista/plotting/axes_assembly.py	/^    def _init_actors_from_source(self, geometry_source: AxesGeometrySource):$/;"	m	class:AxesAssembly
_init_actors_from_source	pyvista/plotting/axes_assembly.py	/^    def _init_actors_from_source(self, geometry_source: AxesGeometrySource):$/;"	m	class:AxesAssembly
_init_cards_from_module	doc/source/make_tables.py	/^    def _init_cards_from_module(cls, module: ModuleType):$/;"	m	class:DatasetCardFetcher
_init_click_picking_callback	build/lib/pyvista/plotting/picking.py	/^    def _init_click_picking_callback(self, left_clicking=False):$/;"	m	class:PickingInterface
_init_click_picking_callback	pyvista/plotting/picking.py	/^    def _init_click_picking_callback(self, left_clicking=False):$/;"	m	class:PickingInterface
_init_passes	build/lib/pyvista/plotting/render_passes.py	/^    def _init_passes(self):$/;"	m	class:RenderPasses
_init_passes	pyvista/plotting/render_passes.py	/^    def _init_passes(self):$/;"	m	class:RenderPasses
_interactive	build/lib/pyvista/plotting/charts.py	/^    def _interactive(self):$/;"	m	class:_Chart
_interactive	build/lib/pyvista/plotting/charts.py	/^    def _interactive(self, val) -> None:$/;"	m	class:_Chart
_interactive	pyvista/plotting/charts.py	/^    def _interactive(self):$/;"	m	class:_Chart
_interactive	pyvista/plotting/charts.py	/^    def _interactive(self, val) -> None:$/;"	m	class:_Chart
_inv_load_func	build/lib/pyvista/examples/downloads.py	/^    def _inv_load_func(mesh):$/;"	f	function:_tetra_dc_mesh_files_func
_inv_load_func	pyvista/examples/downloads.py	/^    def _inv_load_func(mesh):$/;"	f	function:_tetra_dc_mesh_files_func
_ipython_key_completions_	build/lib/pyvista/core/composite.py	/^    def _ipython_key_completions_(self: MultiBlock) -> list[str]:$/;"	m	class:MultiBlock
_ipython_key_completions_	build/lib/pyvista/core/dataset.py	/^    def _ipython_key_completions_(self: Self) -> list[str]:$/;"	m	class:DataSet
_ipython_key_completions_	build/lib/pyvista/core/objects.py	/^    def _ipython_key_completions_(self):$/;"	m	class:Table
_ipython_key_completions_	pyvista/core/composite.py	/^    def _ipython_key_completions_(self: MultiBlock) -> list[str]:$/;"	m	class:MultiBlock
_ipython_key_completions_	pyvista/core/dataset.py	/^    def _ipython_key_completions_(self: Self) -> list[str]:$/;"	m	class:DataSet
_ipython_key_completions_	pyvista/core/objects.py	/^    def _ipython_key_completions_(self):$/;"	m	class:Table
_is_dataset_function	tests/examples/test_dataset_loader.py	/^    def _is_dataset_function(name, item):$/;"	f	function:_generate_dataset_loader_test_cases_from_module
_is_false_positive	tests/doc/tst_doc_images.py	/^def _is_false_positive(test_name, docs_image):$/;"	f
_is_index_like	build/lib/pyvista/core/filters/data_set.py	/^        def _is_index_like(array_, max_value):$/;"	f	function:DataSetFilters.color_labels
_is_index_like	pyvista/core/filters/data_set.py	/^        def _is_index_like(array_, max_value):$/;"	f	function:DataSetFilters.color_labels
_is_pyvista_format	build/lib/pyvista/core/dataobject.py	/^        def _is_pyvista_format(state_: Any) -> bool:$/;"	f	function:DataObject.__setstate__
_is_pyvista_format	pyvista/core/dataobject.py	/^        def _is_pyvista_format(state_: Any) -> bool:$/;"	f	function:DataObject.__setstate__
_is_small_number	build/lib/pyvista/core/filters/image_data.py	/^            def _is_small_number(num) -> bool | np.bool_:$/;"	f	function:ImageDataFilters.contour_labels._configure_smoothing
_is_small_number	pyvista/core/filters/image_data.py	/^            def _is_small_number(num) -> bool | np.bool_:$/;"	f	function:ImageDataFilters.contour_labels._configure_smoothing
_is_sorted	build/lib/pyvista/core/utilities/geometric_objects.py	/^    def _is_sorted(a: NumpyArray[float]) -> np.bool_:$/;"	f	function:SolidSphereGeneric
_is_sorted	pyvista/core/utilities/geometric_objects.py	/^    def _is_sorted(a: NumpyArray[float]) -> np.bool_:$/;"	f	function:SolidSphereGeneric
_is_valid_dim	build/lib/pyvista/core/_validation/check.py	/^    def _is_valid_dim(d: Any) -> bool:$/;"	f	function:_validate_shape_value
_is_valid_dim	pyvista/core/_validation/check.py	/^    def _is_valid_dim(d: Any) -> bool:$/;"	f	function:_validate_shape_value
_is_valid_url	tests/examples/test_downloads.py	/^def _is_valid_url(url):$/;"	f
_is_vtk	tests/plotting/conftest.py	/^def _is_vtk(obj):$/;"	f
_is_vtk_format	build/lib/pyvista/core/dataobject.py	/^        def _is_vtk_format(state_: Any) -> bool:$/;"	f	function:DataObject.__setstate__
_is_vtk_format	pyvista/core/dataobject.py	/^        def _is_vtk_format(state_: Any) -> bool:$/;"	f	function:DataObject.__setstate__
_is_within	build/lib/pyvista/plotting/charts.py	/^    def _is_within(self, pos):$/;"	m	class:_Chart
_is_within	pyvista/plotting/charts.py	/^    def _is_within(self, pos):$/;"	m	class:_Chart
_items	build/lib/pyvista/core/composite.py	/^    def _items(self) -> Iterable[tuple[str | None, _TypeMultiBlockLeaf]]:$/;"	m	class:MultiBlock
_items	pyvista/core/composite.py	/^    def _items(self) -> Iterable[tuple[str | None, _TypeMultiBlockLeaf]]:$/;"	m	class:MultiBlock
_kill_display	build/lib/pyvista/plotting/plotter.py	/^def _kill_display(disp_id) -> None:  # pragma: no cover$/;"	f
_kill_display	pyvista/plotting/plotter.py	/^def _kill_display(disp_id) -> None:  # pragma: no cover$/;"	f
_kitchen_split_load_func	build/lib/pyvista/examples/downloads.py	/^def _kitchen_split_load_func(mesh):  # pragma: no cover$/;"	f
_kitchen_split_load_func	pyvista/examples/downloads.py	/^def _kitchen_split_load_func(mesh):  # pragma: no cover$/;"	f
_label_actor_iterator	build/lib/pyvista/plotting/axes_assembly.py	/^    def _label_actor_iterator(self) -> Iterator[Label]:$/;"	m	class:_XYZAssembly
_label_actor_iterator	pyvista/plotting/axes_assembly.py	/^    def _label_actor_iterator(self) -> Iterator[Label]:$/;"	m	class:_XYZAssembly
_label_position	build/lib/pyvista/plotting/text.py	/^    def _label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Label
_label_position	build/lib/pyvista/plotting/text.py	/^    def _label_position(self, position: VectorLike[float]):$/;"	m	class:Label
_label_position	pyvista/plotting/text.py	/^    def _label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Label
_label_position	pyvista/plotting/text.py	/^    def _label_position(self, position: VectorLike[float]):$/;"	m	class:Label
_launch_pick_event	build/lib/pyvista/plotting/picking.py	/^def _launch_pick_event(interactor, _event):$/;"	f
_launch_pick_event	pyvista/plotting/picking.py	/^def _launch_pick_event(interactor, _event):$/;"	f
_lazy_vtk_instantiation	build/lib/pyvista/core/utilities/reader.py	/^def _lazy_vtk_instantiation(module_name, class_name):$/;"	f
_lazy_vtk_instantiation	pyvista/core/utilities/reader.py	/^def _lazy_vtk_instantiation(module_name, class_name):$/;"	f
_length_distribution_percentile	build/lib/pyvista/core/filters/data_set.py	/^def _length_distribution_percentile(poly, percentile, cell_length_sample_size, progress_bar):$/;"	f
_length_distribution_percentile	pyvista/core/filters/data_set.py	/^def _length_distribution_percentile(poly, percentile, cell_length_sample_size, progress_bar):$/;"	f
_less_than_equal_or_close	build/lib/pyvista/core/utilities/geometric_objects.py	/^    def _less_than_equal_or_close(value1: float, value2: float, atol: float) -> bool | np.bool_:$/;"	f	function:SolidSphereGeneric
_less_than_equal_or_close	pyvista/core/utilities/geometric_objects.py	/^    def _less_than_equal_or_close(value1: float, value2: float, atol: float) -> bool | np.bool_:$/;"	f	function:SolidSphereGeneric
_line_for_legend	build/lib/pyvista/plotting/renderer.py	/^def _line_for_legend():$/;"	f
_line_for_legend	pyvista/plotting/renderer.py	/^def _line_for_legend():$/;"	f
_ljust_lines	doc/source/make_tables.py	/^def _ljust_lines(lines: list[str], min_width=None) -> list[str]:$/;"	f
_load_and_merge	build/lib/pyvista/examples/_dataset_loader.py	/^def _load_and_merge(files: Sequence[_SingleFile]):$/;"	f
_load_and_merge	build/lib/pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _load_and_merge$/;"	i
_load_and_merge	pyvista/examples/_dataset_loader.py	/^def _load_and_merge(files: Sequence[_SingleFile]):$/;"	f
_load_and_merge	pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _load_and_merge$/;"	i
_load_and_merge	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _load_and_merge$/;"	i
_load_as_cubemap	build/lib/pyvista/examples/_dataset_loader.py	/^def _load_as_cubemap(files: str | _SingleFile | Sequence[_SingleFile]) -> pv.Texture:$/;"	f
_load_as_cubemap	build/lib/pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _load_as_cubemap$/;"	i
_load_as_cubemap	pyvista/examples/_dataset_loader.py	/^def _load_as_cubemap(files: str | _SingleFile | Sequence[_SingleFile]) -> pv.Texture:$/;"	f
_load_as_cubemap	pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _load_as_cubemap$/;"	i
_load_as_cubemap	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _load_as_cubemap$/;"	i
_load_as_dataset_or_multiblock	build/lib/pyvista/examples/_dataset_loader.py	/^def _load_as_dataset_or_multiblock(files):$/;"	f
_load_as_dataset_or_multiblock	pyvista/examples/_dataset_loader.py	/^def _load_as_dataset_or_multiblock(files):$/;"	f
_load_as_multiblock	build/lib/pyvista/examples/_dataset_loader.py	/^def _load_as_multiblock($/;"	f
_load_as_multiblock	build/lib/pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _load_as_multiblock$/;"	i
_load_as_multiblock	pyvista/examples/_dataset_loader.py	/^def _load_as_multiblock($/;"	f
_load_as_multiblock	pyvista/examples/downloads.py	/^from pyvista.examples._dataset_loader import _load_as_multiblock$/;"	i
_load_as_multiblock	tests/examples/test_dataset_loader.py	/^from pyvista.examples._dataset_loader import _load_as_multiblock$/;"	i
_load_current_config	tests/plotting/test_conftest.py	/^def _load_current_config($/;"	f
_load_current_config	tests/test_conftest.py	/^def _load_current_config($/;"	f
_local_validate_color_sequence	build/lib/pyvista/core/filters/data_set.py	/^        def _local_validate_color_sequence(seq: ColorLike | Sequence[ColorLike]) -> Sequence[Color]:$/;"	f	function:DataSetFilters.color_labels
_local_validate_color_sequence	pyvista/core/filters/data_set.py	/^        def _local_validate_color_sequence(seq: ColorLike | Sequence[ColorLike]) -> Sequence[Color]:$/;"	f	function:DataSetFilters.color_labels
_lookup_type	build/lib/pyvista/plotting/lookup_table.py	/^    def _lookup_type(self) -> str:$/;"	m	class:LookupTable
_lookup_type	pyvista/plotting/lookup_table.py	/^    def _lookup_type(self) -> str:$/;"	m	class:LookupTable
_lshape_files_func	build/lib/pyvista/examples/downloads.py	/^def _lshape_files_func():  # pragma: no cover$/;"	f
_lshape_files_func	pyvista/examples/downloads.py	/^def _lshape_files_func():  # pragma: no cover$/;"	f
_make_any_part	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def _make_any_part(geometry: str | DataSet) -> tuple[str, PolyData]:$/;"	m	class:AxesGeometrySource
_make_any_part	pyvista/core/utilities/geometric_sources.py	/^    def _make_any_part(geometry: str | DataSet) -> tuple[str, PolyData]:$/;"	m	class:AxesGeometrySource
_make_axes_parts	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def _make_axes_parts($/;"	m	class:AxesGeometrySource
_make_axes_parts	pyvista/core/utilities/geometric_sources.py	/^    def _make_axes_parts($/;"	m	class:AxesGeometrySource
_make_class	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _make_class(klass):$/;"	f	function:_style_factory
_make_class	pyvista/plotting/render_window_interactor.py	/^    def _make_class(klass):$/;"	f	function:_style_factory
_make_default_part	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def _make_default_part(geometry: str) -> PolyData:$/;"	m	class:AxesGeometrySource
_make_default_part	pyvista/core/utilities/geometric_sources.py	/^    def _make_default_part(geometry: str) -> PolyData:$/;"	m	class:AxesGeometrySource
_make_isoparametric_unstructured_grid	build/lib/pyvista/examples/cells.py	/^def _make_isoparametric_unstructured_grid(vtk_cell: _vtk.vtkCell):$/;"	f
_make_isoparametric_unstructured_grid	pyvista/examples/cells.py	/^def _make_isoparametric_unstructured_grid(vtk_cell: _vtk.vtkCell):$/;"	f
_make_nested_multiblock	tests/core/test_composite.py	/^def _make_nested_multiblock($/;"	f
_make_polys	tests/plotting/test_plotting.py	/^    def _make_polys():$/;"	f	function:_make_rgb_dataset
_make_quarter_arc	build/lib/pyvista/plotting/affine_widget.py	/^def _make_quarter_arc():$/;"	f
_make_quarter_arc	pyvista/plotting/affine_widget.py	/^def _make_quarter_arc():$/;"	f
_make_render_window_current	build/lib/pyvista/plotting/plotter.py	/^    def _make_render_window_current(self) -> None:$/;"	m	class:BasePlotter
_make_render_window_current	pyvista/plotting/plotter.py	/^    def _make_render_window_current(self) -> None:$/;"	m	class:BasePlotter
_make_rgb_dataset	tests/plotting/test_plotting.py	/^def _make_rgb_dataset(dtype: str, return_composite: bool, scalars: str):$/;"	f
_make_vertex_cells	build/lib/pyvista/core/pointset.py	/^    def _make_vertex_cells(npoints: int) -> NumpyArray[int]:$/;"	m	class:PolyData
_make_vertex_cells	pyvista/core/pointset.py	/^    def _make_vertex_cells(npoints: int) -> NumpyArray[int]:$/;"	m	class:PolyData
_make_xyz_tuple	build/lib/pyvista/plotting/axes_assembly.py	/^        def _make_xyz_tuple(xyz):$/;"	f	function:_XYZAssembly.__init__
_make_xyz_tuple	pyvista/plotting/axes_assembly.py	/^        def _make_xyz_tuple(xyz):$/;"	f	function:_XYZAssembly.__init__
_matrix_repr	build/lib/pyvista/core/utilities/transform.py	/^        def _matrix_repr() -> str:$/;"	f	function:Transform.__repr__
_matrix_repr	pyvista/core/utilities/transform.py	/^        def _matrix_repr() -> str:$/;"	f	function:Transform.__repr__
_max_width	doc/source/make_tables.py	/^def _max_width(lines: list[str]) -> int:$/;"	f
_meshio_xdmf_files_func	build/lib/pyvista/examples/downloads.py	/^def _meshio_xdmf_files_func():$/;"	f
_meshio_xdmf_files_func	pyvista/examples/downloads.py	/^def _meshio_xdmf_files_func():$/;"	f
_modifies_pickle_format	tests/core/test_dataobject.py	/^def _modifies_pickle_format():$/;"	f
_module_is_loaded	tests/test_init.py	/^def _module_is_loaded(module: str) -> bool:$/;"	f
_mouse_left_button_click	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_left_button_click	pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_left_button_press	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_press($/;"	m	class:RenderWindowInteractor
_mouse_left_button_press	pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_press($/;"	m	class:RenderWindowInteractor
_mouse_left_button_release	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_release($/;"	m	class:RenderWindowInteractor
_mouse_left_button_release	pyvista/plotting/render_window_interactor.py	/^    def _mouse_left_button_release($/;"	m	class:RenderWindowInteractor
_mouse_middle_button_click	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_middle_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_middle_button_click	pyvista/plotting/render_window_interactor.py	/^    def _mouse_middle_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_middle_button_press	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_middle_button_press($/;"	m	class:RenderWindowInteractor
_mouse_middle_button_press	pyvista/plotting/render_window_interactor.py	/^    def _mouse_middle_button_press($/;"	m	class:RenderWindowInteractor
_mouse_middle_button_release	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_middle_button_release($/;"	m	class:RenderWindowInteractor
_mouse_middle_button_release	pyvista/plotting/render_window_interactor.py	/^    def _mouse_middle_button_release($/;"	m	class:RenderWindowInteractor
_mouse_move	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_move(self, x, y):  # pragma:$/;"	m	class:RenderWindowInteractor
_mouse_move	pyvista/plotting/render_window_interactor.py	/^    def _mouse_move(self, x, y):  # pragma:$/;"	m	class:RenderWindowInteractor
_mouse_right_button_click	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_right_button_click	pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_click(self, x=None, y=None, count=1):$/;"	m	class:RenderWindowInteractor
_mouse_right_button_press	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_press($/;"	m	class:RenderWindowInteractor
_mouse_right_button_press	pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_press($/;"	m	class:RenderWindowInteractor
_mouse_right_button_release	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_release($/;"	m	class:RenderWindowInteractor
_mouse_right_button_release	pyvista/plotting/render_window_interactor.py	/^    def _mouse_right_button_release($/;"	m	class:RenderWindowInteractor
_move_callback	build/lib/pyvista/plotting/affine_widget.py	/^    def _move_callback(self, interactor, _event):$/;"	m	class:AffineWidget3D
_move_callback	pyvista/plotting/affine_widget.py	/^    def _move_callback(self, interactor, _event):$/;"	m	class:AffineWidget3D
_multiblock_to_polydata	build/lib/pyvista/core/filters/data_set.py	/^        def _multiblock_to_polydata(multiblock):$/;"	f	function:DataSetFilters._bounding_box
_multiblock_to_polydata	pyvista/core/filters/data_set.py	/^        def _multiblock_to_polydata(multiblock):$/;"	f	function:DataSetFilters._bounding_box
_naca_files_func	build/lib/pyvista/examples/downloads.py	/^def _naca_files_func():$/;"	f
_naca_files_func	pyvista/examples/downloads.py	/^def _naca_files_func():$/;"	f
_namedtuple	build/lib/pyvista/core/dataset.py	/^    def _namedtuple(self: ActiveArrayInfo) -> ActiveArrayInfoTuple:$/;"	m	class:ActiveArrayInfo
_namedtuple	pyvista/core/dataset.py	/^    def _namedtuple(self: ActiveArrayInfo) -> ActiveArrayInfoTuple:$/;"	m	class:ActiveArrayInfo
_nan_color_set	build/lib/pyvista/plotting/lookup_table.py	/^    _nan_color_set = False$/;"	v	class:LookupTable
_nan_color_set	pyvista/plotting/lookup_table.py	/^    _nan_color_set = False$/;"	v	class:LookupTable
_navigate_to_parent	build/lib/pyvista/core/composite.py	/^    def _navigate_to_parent(self, indices: Sequence[int]) -> tuple[MultiBlock, int]:$/;"	m	class:MultiBlock
_navigate_to_parent	pyvista/core/composite.py	/^    def _navigate_to_parent(self, indices: Sequence[int]) -> tuple[MultiBlock, int]:$/;"	m	class:MultiBlock
_nek_5000_download	build/lib/pyvista/examples/downloads.py	/^def _nek_5000_download():  # pragma: no cover$/;"	f
_nek_5000_download	pyvista/examples/downloads.py	/^def _nek_5000_download():  # pragma: no cover$/;"	f
_new_attr_exceptions	build/lib/pyvista/plotting/mapper.py	/^    _new_attr_exceptions = ('_theme',)$/;"	v	class:_BaseMapper
_new_attr_exceptions	pyvista/plotting/mapper.py	/^    _new_attr_exceptions = ('_theme',)$/;"	v	class:_BaseMapper
_new_attr_exceptions	tests/core/test_utilities.py	/^        _new_attr_exceptions = 'eggs'$/;"	v	class:no_new_attr_subclass.B
_normalize_part	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def _normalize_part(part: PolyData) -> PolyData:$/;"	m	class:AxesGeometrySource
_normalize_part	pyvista/core/utilities/geometric_sources.py	/^    def _normalize_part(part: PolyData) -> PolyData:$/;"	m	class:AxesGeometrySource
_offset_array	build/lib/pyvista/core/pointset.py	/^    def _offset_array(self) -> NumpyArray[int]:$/;"	m	class:PolyData
_offset_array	pyvista/core/pointset.py	/^    def _offset_array(self) -> NumpyArray[int]:$/;"	m	class:PolyData
_on_first_render_request	build/lib/pyvista/plotting/plotter.py	/^    def _on_first_render_request(self) -> None:$/;"	m	class:BasePlotter
_on_first_render_request	pyvista/plotting/plotter.py	/^    def _on_first_render_request(self) -> None:$/;"	m	class:BasePlotter
_openfoam_tubes_read_func	build/lib/pyvista/examples/downloads.py	/^def _openfoam_tubes_read_func(filename):  # pragma: no cover$/;"	f
_openfoam_tubes_read_func	pyvista/examples/downloads.py	/^def _openfoam_tubes_read_func(filename):  # pragma: no cover$/;"	f
_option_boolean	build/lib/pyvista/ext/plot_directive.py	/^def _option_boolean(arg) -> bool:$/;"	f
_option_boolean	pyvista/ext/plot_directive.py	/^def _option_boolean(arg) -> bool:$/;"	f
_option_context	build/lib/pyvista/ext/plot_directive.py	/^def _option_context(arg):$/;"	f
_option_context	pyvista/ext/plot_directive.py	/^def _option_context(arg):$/;"	f
_option_format	build/lib/pyvista/ext/plot_directive.py	/^def _option_format(arg):$/;"	f
_option_format	pyvista/ext/plot_directive.py	/^def _option_format(arg):$/;"	f
_orientation_as_rotation_matrix	build/lib/pyvista/plotting/prop3d.py	/^def _orientation_as_rotation_matrix(orientation: VectorLike[float]) -> NumpyArray[float]:$/;"	f
_orientation_as_rotation_matrix	pyvista/plotting/prop3d.py	/^def _orientation_as_rotation_matrix(orientation: VectorLike[float]) -> NumpyArray[float]:$/;"	f
_orientation_as_rotation_matrix	tests/core/test_utilities.py	/^from pyvista.plotting.prop3d import _orientation_as_rotation_matrix$/;"	i
_orientation_as_rotation_matrix	tests/plotting/test_actor.py	/^from pyvista.plotting.prop3d import _orientation_as_rotation_matrix$/;"	i
_osmnx_graph_read_func	build/lib/pyvista/examples/downloads.py	/^def _osmnx_graph_read_func(filename):  # pragma: no cover$/;"	f
_osmnx_graph_read_func	pyvista/examples/downloads.py	/^def _osmnx_graph_read_func(filename):  # pragma: no cover$/;"	f
_pad_lines	doc/source/make_tables.py	/^def _pad_lines($/;"	f
_padded_bins	build/lib/pyvista/core/utilities/features.py	/^def _padded_bins(mesh, density):$/;"	f
_padded_bins	pyvista/core/utilities/features.py	/^def _padded_bins(mesh, density):$/;"	f
_parse_format	build/lib/pyvista/plotting/charts.py	/^    def _parse_format(cls, fmt):$/;"	m	class:Chart2D
_parse_format	pyvista/plotting/charts.py	/^    def _parse_format(cls, fmt):$/;"	m	class:Chart2D
_parse_interaction_event	build/lib/pyvista/plotting/widgets.py	/^def _parse_interaction_event(interaction_event: InteractionEventType):$/;"	f
_parse_interaction_event	pyvista/plotting/widgets.py	/^def _parse_interaction_event(interaction_event: InteractionEventType):$/;"	f
_parse_interaction_event	tests/core/test_utilities.py	/^from pyvista.plotting.widgets import _parse_interaction_event$/;"	i
_pass_collection	build/lib/pyvista/plotting/render_passes.py	/^    def _pass_collection(self):$/;"	m	class:RenderPasses
_pass_collection	pyvista/plotting/render_passes.py	/^    def _pass_collection(self):$/;"	m	class:RenderPasses
_patch_mac_system	tests/test_conftest.py	/^def _patch_mac_system(mocker: MockerFixture):$/;"	f
_patch_type	build/lib/pyvista/core/datasetattributes.py	/^    def _patch_type(self: Self, narray: pyvista_ndarray) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes
_patch_type	pyvista/core/datasetattributes.py	/^    def _patch_type(self: Self, narray: pyvista_ndarray) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes
_patch_uses_egl	tests/test_conftest.py	/^def _patch_uses_egl(mocker: MockerFixture):$/;"	f
_path	build/lib/pyvista/examples/downloads.py	/^        _path = _path + '\/'$/;"	v
_path	build/lib/pyvista/examples/downloads.py	/^        _path = str(Path(_path) \/ 'Data')$/;"	v
_path	build/lib/pyvista/examples/downloads.py	/^    _path = os.environ['PYVISTA_VTK_DATA']$/;"	v
_path	pyvista/examples/downloads.py	/^        _path = _path + '\/'$/;"	v
_path	pyvista/examples/downloads.py	/^        _path = str(Path(_path) \/ 'Data')$/;"	v
_path	pyvista/examples/downloads.py	/^    _path = os.environ['PYVISTA_VTK_DATA']$/;"	v
_play	examples/99-advanced/customization_trame_toolbar.py	/^async def _play(play, **kwargs):$/;"	f
_plot_skybox	build/lib/pyvista/plotting/texture.py	/^    def _plot_skybox(self, **kwargs):$/;"	m	class:Texture
_plot_skybox	pyvista/plotting/texture.py	/^    def _plot_skybox(self, **kwargs):$/;"	m	class:Texture
_plotter	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _plotter(self):$/;"	m	class:RenderWindowInteractor
_plotter	pyvista/plotting/render_window_interactor.py	/^    def _plotter(self):$/;"	m	class:RenderWindowInteractor
_plotting	tests/plotting/test_plotter.py	/^from pyvista.plotting import _plotting$/;"	i
_poked_context_callback	build/lib/pyvista/plotting/picking.py	/^def _poked_context_callback(plotter, *args, **kwargs):$/;"	f
_poked_context_callback	pyvista/plotting/picking.py	/^def _poked_context_callback(plotter, *args, **kwargs):$/;"	f
_polar_decomposition	build/lib/pyvista/core/utilities/transformations.py	/^def _polar_decomposition(a: NumpyArray[float]) -> tuple[NumpyArray[float], NumpyArray[float]]:$/;"	f
_polar_decomposition	pyvista/core/utilities/transformations.py	/^def _polar_decomposition(a: NumpyArray[float]) -> tuple[NumpyArray[float], NumpyArray[float]]:$/;"	f
_post_file_load_processing	build/lib/pyvista/core/dataobject.py	/^    def _post_file_load_processing(self: Self) -> None:$/;"	m	class:DataObject
_post_file_load_processing	build/lib/pyvista/core/pointset.py	/^    def _post_file_load_processing(self) -> None:$/;"	m	class:PolyData
_post_file_load_processing	pyvista/core/dataobject.py	/^    def _post_file_load_processing(self: Self) -> None:$/;"	m	class:DataObject
_post_file_load_processing	pyvista/core/pointset.py	/^    def _post_file_load_processing(self) -> None:$/;"	m	class:PolyData
_post_initialize	build/lib/pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:PyVistaLocalView
_post_initialize	build/lib/pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:PyVistaRemoteLocalView
_post_initialize	build/lib/pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:_BasePyVistaView
_post_initialize	pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:PyVistaLocalView
_post_initialize	pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:PyVistaRemoteLocalView
_post_initialize	pyvista/trame/views.py	/^    def _post_initialize(self):$/;"	m	class:_BasePyVistaView
_post_process_extract_values	build/lib/pyvista/core/filters/data_set.py	/^        def _post_process_extract_values(before_extraction, extracted):$/;"	f	function:DataSetFilters.connectivity
_post_process_extract_values	pyvista/core/filters/data_set.py	/^        def _post_process_extract_values(before_extraction, extracted):$/;"	f	function:DataSetFilters.connectivity
_post_set_update	build/lib/pyvista/plotting/axes_assembly.py	/^    def _post_set_update(self):$/;"	m	class:PlanesAssembly
_post_set_update	build/lib/pyvista/plotting/axes_assembly.py	/^    def _post_set_update(self):$/;"	m	class:_XYZAssembly
_post_set_update	build/lib/pyvista/plotting/prop3d.py	/^    def _post_set_update(self):$/;"	m	class:_Prop3DMixin
_post_set_update	build/lib/pyvista/plotting/text.py	/^    def _post_set_update(self):$/;"	m	class:Label
_post_set_update	pyvista/plotting/axes_assembly.py	/^    def _post_set_update(self):$/;"	m	class:PlanesAssembly
_post_set_update	pyvista/plotting/axes_assembly.py	/^    def _post_set_update(self):$/;"	m	class:_XYZAssembly
_post_set_update	pyvista/plotting/prop3d.py	/^    def _post_set_update(self):$/;"	m	class:_Prop3DMixin
_post_set_update	pyvista/plotting/text.py	/^    def _post_set_update(self):$/;"	m	class:Label
_post_set_update	tests/plotting/test_actor.py	/^        def _post_set_update(self):$/;"	m	class:dummy_actor.DummyActor
_prep_for_close	build/lib/pyvista/plotting/plotter.py	/^    def _prep_for_close(self) -> None:$/;"	m	class:BasePlotter
_prep_for_close	pyvista/plotting/plotter.py	/^    def _prep_for_close(self) -> None:$/;"	m	class:BasePlotter
_prepare_array	build/lib/pyvista/core/datasetattributes.py	/^    def _prepare_array($/;"	m	class:DataSetAttributes
_prepare_array	pyvista/core/datasetattributes.py	/^    def _prepare_array($/;"	m	class:DataSetAttributes
_prepare_arrays	build/lib/pyvista/core/objects.py	/^    def _prepare_arrays(arrays):$/;"	m	class:Table
_prepare_arrays	pyvista/core/objects.py	/^    def _prepare_arrays(arrays):$/;"	m	class:Table
_preprocess_build_images	tests/doc/tst_doc_images.py	/^def _preprocess_build_images(build_images_dir: str, output_dir: str):$/;"	f
_preprocess_polydata	build/lib/pyvista/core/filters/data_set.py	/^        def _preprocess_polydata(poly_in):$/;"	f	function:DataSetFilters.voxelize_binary_mask
_preprocess_polydata	pyvista/core/filters/data_set.py	/^        def _preprocess_polydata(poly_in):$/;"	f	function:DataSetFilters.voxelize_binary_mask
_press	build/lib/pyvista/plotting/render_window_interactor.py	/^            def _press(self, *args):$/;"	m	class:_style_factory._make_class.CustomStyle
_press	pyvista/plotting/render_window_interactor.py	/^            def _press(self, *args):$/;"	m	class:_style_factory._make_class.CustomStyle
_press_callback	build/lib/pyvista/plotting/affine_widget.py	/^    def _press_callback(self, interactor, _event):$/;"	m	class:AffineWidget3D
_press_callback	build/lib/pyvista/plotting/render_window_interactor.py	/^            def _press_callback(_obj, event):$/;"	f	function:RenderWindowInteractor.enable_custom_trackball_style._setup_callbacks
_press_callback	pyvista/plotting/affine_widget.py	/^    def _press_callback(self, interactor, _event):$/;"	m	class:AffineWidget3D
_press_callback	pyvista/plotting/render_window_interactor.py	/^            def _press_callback(_obj, event):$/;"	f	function:RenderWindowInteractor.enable_custom_trackball_style._setup_callbacks
_process_events_before_scraping	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^def _process_events_before_scraping(plotter):$/;"	f
_process_events_before_scraping	pyvista/plotting/utilities/sphinx_gallery.py	/^def _process_events_before_scraping(plotter):$/;"	f
_process_filename	build/lib/pyvista/core/utilities/fileio.py	/^def _process_filename(filename: str | Path) -> Path:$/;"	f
_process_filename	build/lib/pyvista/core/utilities/reader.py	/^from .fileio import _process_filename$/;"	i
_process_filename	pyvista/core/utilities/fileio.py	/^def _process_filename(filename: str | Path) -> Path:$/;"	f
_process_filename	pyvista/core/utilities/reader.py	/^from .fileio import _process_filename$/;"	i
_process_select_inputs	build/lib/pyvista/core/filters/image_data.py	/^        def _process_select_inputs($/;"	f	function:ImageDataFilters.contour_labels
_process_select_inputs	pyvista/core/filters/image_data.py	/^        def _process_select_inputs($/;"	f	function:ImageDataFilters.contour_labels
_promote_type_callback	build/lib/pyvista/typing/mypy_plugin.py	/^    def _promote_type_callback(ctx: ClassDefContext) -> None:$/;"	f	function:promote_type
_promote_type_callback	pyvista/typing/mypy_plugin.py	/^    def _promote_type_callback(ctx: ClassDefContext) -> None:$/;"	f	function:promote_type
_prostar_files_func	build/lib/pyvista/examples/downloads.py	/^def _prostar_files_func():  # pragma: no cover$/;"	f
_prostar_files_func	pyvista/examples/downloads.py	/^def _prostar_files_func():  # pragma: no cover$/;"	f
_raise_field_data_no_scalars_vectors_normals	build/lib/pyvista/core/datasetattributes.py	/^    def _raise_field_data_no_scalars_vectors_normals(self: Self) -> None:$/;"	m	class:DataSetAttributes
_raise_field_data_no_scalars_vectors_normals	pyvista/core/datasetattributes.py	/^    def _raise_field_data_no_scalars_vectors_normals(self: Self) -> None:$/;"	m	class:DataSetAttributes
_raise_index_out_of_bounds	build/lib/pyvista/core/datasetattributes.py	/^    def _raise_index_out_of_bounds(self: Self, index: Any) -> None:$/;"	m	class:DataSetAttributes
_raise_index_out_of_bounds	pyvista/core/datasetattributes.py	/^    def _raise_index_out_of_bounds(self: Self, index: Any) -> None:$/;"	m	class:DataSetAttributes
_raise_no_normals	build/lib/pyvista/core/datasetattributes.py	/^    def _raise_no_normals(self: Self) -> None:$/;"	m	class:DataSetAttributes
_raise_no_normals	pyvista/core/datasetattributes.py	/^    def _raise_no_normals(self: Self) -> None:$/;"	m	class:DataSetAttributes
_raise_no_texture_coordinates	build/lib/pyvista/core/datasetattributes.py	/^    def _raise_no_texture_coordinates(self: Self) -> None:$/;"	m	class:DataSetAttributes
_raise_no_texture_coordinates	pyvista/core/datasetattributes.py	/^    def _raise_no_texture_coordinates(self: Self) -> None:$/;"	m	class:DataSetAttributes
_random_hills_load_func	build/lib/pyvista/examples/examples.py	/^def _random_hills_load_func():$/;"	f
_random_hills_load_func	pyvista/examples/examples.py	/^def _random_hills_load_func():$/;"	f
_reader	build/lib/pyvista/examples/_dataset_loader.py	/^    def _reader($/;"	m	class:_BaseFilePropsProtocol
_reader	build/lib/pyvista/examples/_dataset_loader.py	/^    def _reader($/;"	m	class:_MultiFileDatasetLoader
_reader	build/lib/pyvista/examples/_dataset_loader.py	/^    def _reader(self) -> pv.BaseReader | None:$/;"	m	class:_SingleFile
_reader	build/lib/pyvista/examples/_dataset_loader.py	/^    def _reader(self) -> pv.BaseReader | None:$/;"	m	class:_SingleFileDatasetLoader
_reader	pyvista/examples/_dataset_loader.py	/^    def _reader($/;"	m	class:_BaseFilePropsProtocol
_reader	pyvista/examples/_dataset_loader.py	/^    def _reader($/;"	m	class:_MultiFileDatasetLoader
_reader	pyvista/examples/_dataset_loader.py	/^    def _reader(self) -> pv.BaseReader | None:$/;"	m	class:_SingleFile
_reader	pyvista/examples/_dataset_loader.py	/^    def _reader(self) -> pv.BaseReader | None:$/;"	m	class:_SingleFileDatasetLoader
_reciprocal	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.misc import _reciprocal$/;"	i
_reciprocal	build/lib/pyvista/core/utilities/misc.py	/^def _reciprocal(x: ArrayLike[float], tol: float = 1e-8) -> NumpyArray[float]:$/;"	f
_reciprocal	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.misc import _reciprocal$/;"	i
_reciprocal	pyvista/core/utilities/misc.py	/^def _reciprocal(x: ArrayLike[float], tol: float = 1e-8) -> NumpyArray[float]:$/;"	f
_recursive_iterator	build/lib/pyvista/core/composite.py	/^    def _recursive_iterator($/;"	m	class:MultiBlock
_recursive_iterator	pyvista/core/composite.py	/^    def _recursive_iterator($/;"	m	class:MultiBlock
_redraw	build/lib/pyvista/plotting/charts.py	/^    def _redraw(self, event=None) -> None:$/;"	m	class:ChartMPL
_redraw	pyvista/plotting/charts.py	/^    def _redraw(self, event=None) -> None:$/;"	m	class:ChartMPL
_release	build/lib/pyvista/plotting/render_window_interactor.py	/^            def _release(self, *args):$/;"	m	class:_style_factory._make_class.CustomStyle
_release	pyvista/plotting/render_window_interactor.py	/^            def _release(self, *args):$/;"	m	class:_style_factory._make_class.CustomStyle
_release_callback	build/lib/pyvista/plotting/affine_widget.py	/^    def _release_callback(self, _interactor, _event):$/;"	m	class:AffineWidget3D
_release_callback	build/lib/pyvista/plotting/render_window_interactor.py	/^            def _release_callback(_obj, event):$/;"	f	function:RenderWindowInteractor.enable_custom_trackball_style._setup_callbacks
_release_callback	pyvista/plotting/affine_widget.py	/^    def _release_callback(self, _interactor, _event):$/;"	m	class:AffineWidget3D
_release_callback	pyvista/plotting/render_window_interactor.py	/^            def _release_callback(_obj, event):$/;"	f	function:RenderWindowInteractor.enable_custom_trackball_style._setup_callbacks
_remesh_points_cells	build/lib/pyvista/core/filters/image_data.py	/^    def _remesh_points_cells(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
_remesh_points_cells	pyvista/core/filters/image_data.py	/^    def _remesh_points_cells(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
_remove_array	build/lib/pyvista/core/objects.py	/^    def _remove_array(self, _, key) -> None:$/;"	m	class:Table
_remove_array	pyvista/core/objects.py	/^    def _remove_array(self, _, key) -> None:$/;"	m	class:Table
_remove_duplicate_points	tests/core/test_imagedata_filters.py	/^def _remove_duplicate_points(polydata):$/;"	f
_remove_mapper_from_plotter	build/lib/pyvista/plotting/scalar_bars.py	/^    def _remove_mapper_from_plotter($/;"	m	class:ScalarBars
_remove_mapper_from_plotter	pyvista/plotting/scalar_bars.py	/^    def _remove_mapper_from_plotter($/;"	m	class:ScalarBars
_remove_pass	build/lib/pyvista/plotting/render_passes.py	/^    def _remove_pass(self, render_pass):$/;"	m	class:RenderPasses
_remove_pass	pyvista/plotting/render_passes.py	/^    def _remove_pass(self, render_pass):$/;"	m	class:RenderPasses
_remove_ref	build/lib/pyvista/core/composite.py	/^    def _remove_ref(self: MultiBlock, index: int) -> None:$/;"	m	class:MultiBlock
_remove_ref	pyvista/core/composite.py	/^    def _remove_ref(self: MultiBlock, index: int) -> None:$/;"	m	class:MultiBlock
_render_event	build/lib/pyvista/plotting/charts.py	/^    def _render_event(self, *args, **kwargs) -> None:$/;"	m	class:ChartBox
_render_event	build/lib/pyvista/plotting/charts.py	/^    def _render_event(self, *args, **kwargs) -> None:$/;"	m	class:ChartPie
_render_event	build/lib/pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render: bool = False, **kwargs) -> None:$/;"	m	class:Chart2D
_render_event	build/lib/pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render: bool = False, **kwargs) -> None:$/;"	m	class:ChartMPL
_render_event	build/lib/pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render: bool = False, **kwargs) -> None:$/;"	m	class:_Chart
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, **kwargs) -> None:$/;"	m	class:ChartBox
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, **kwargs) -> None:$/;"	m	class:ChartPie
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render: bool = False, **kwargs) -> None:$/;"	m	class:Chart2D
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render: bool = False, **kwargs) -> None:$/;"	m	class:ChartMPL
_render_event	pyvista/plotting/charts.py	/^    def _render_event(self, *args, plotter_render: bool = False, **kwargs) -> None:$/;"	m	class:_Chart
_renderer	build/lib/pyvista/plotting/charts.py	/^    def _renderer(self):$/;"	m	class:Charts
_renderer	build/lib/pyvista/plotting/charts.py	/^    def _renderer(self):$/;"	m	class:_Chart
_renderer	build/lib/pyvista/plotting/render_passes.py	/^    def _renderer(self):$/;"	m	class:RenderPasses
_renderer	pyvista/plotting/charts.py	/^    def _renderer(self):$/;"	m	class:Charts
_renderer	pyvista/plotting/charts.py	/^    def _renderer(self):$/;"	m	class:_Chart
_renderer	pyvista/plotting/render_passes.py	/^    def _renderer(self):$/;"	m	class:RenderPasses
_repeat_string	doc/source/make_tables.py	/^def _repeat_string(string: str, num_repeat: int) -> str:$/;"	f
_replace_nested_multiblocks	build/lib/pyvista/core/composite.py	/^        def _replace_nested_multiblocks($/;"	f	function:MultiBlock.shallow_copy
_replace_nested_multiblocks	pyvista/core/composite.py	/^        def _replace_nested_multiblocks($/;"	f	function:MultiBlock.shallow_copy
_replace_range_infinity	tests/core/test_utilities.py	/^def _replace_range_infinity(rng):$/;"	f
_repr_html_	build/lib/pyvista/core/composite.py	/^    def _repr_html_(self: MultiBlock) -> str:$/;"	m	class:MultiBlock
_repr_html_	build/lib/pyvista/core/dataobject.py	/^    def _repr_html_(self: Self) -> str:  # pragma: no cover$/;"	m	class:DataObject
_repr_html_	build/lib/pyvista/core/dataset.py	/^    def _repr_html_(self: Self) -> str:$/;"	m	class:DataSet
_repr_html_	build/lib/pyvista/core/objects.py	/^    def _repr_html_(self):$/;"	m	class:Table
_repr_html_	build/lib/pyvista/core/partitioned.py	/^    def _repr_html_(self) -> str:$/;"	m	class:PartitionedDataSet
_repr_html_	build/lib/pyvista/report.py	/^    def _repr_html_(self):$/;"	m	class:GPUInfo
_repr_html_	pyvista/core/composite.py	/^    def _repr_html_(self: MultiBlock) -> str:$/;"	m	class:MultiBlock
_repr_html_	pyvista/core/dataobject.py	/^    def _repr_html_(self: Self) -> str:  # pragma: no cover$/;"	m	class:DataObject
_repr_html_	pyvista/core/dataset.py	/^    def _repr_html_(self: Self) -> str:$/;"	m	class:DataSet
_repr_html_	pyvista/core/objects.py	/^    def _repr_html_(self):$/;"	m	class:Table
_repr_html_	pyvista/core/partitioned.py	/^    def _repr_html_(self) -> str:$/;"	m	class:PartitionedDataSet
_repr_html_	pyvista/report.py	/^    def _repr_html_(self):$/;"	m	class:GPUInfo
_repr_no_first_line	tests/core/test_utilities.py	/^    def _repr_no_first_line(trans):$/;"	f	function:test_transform_repr
_reservoir_load_func	build/lib/pyvista/examples/downloads.py	/^def _reservoir_load_func(grid):  # pragma: no cover$/;"	f
_reservoir_load_func	pyvista/examples/downloads.py	/^def _reservoir_load_func(grid):  # pragma: no cover$/;"	f
_reset	build/lib/pyvista/plotting/affine_widget.py	/^    def _reset(self):$/;"	m	class:AffineWidget3D
_reset	pyvista/plotting/affine_widget.py	/^    def _reset(self):$/;"	m	class:AffineWidget3D
_reset_shaft_and_tip_geometry	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def _reset_shaft_and_tip_geometry(self: AxesGeometrySource) -> None:$/;"	m	class:AxesGeometrySource
_reset_shaft_and_tip_geometry	pyvista/core/utilities/geometric_sources.py	/^    def _reset_shaft_and_tip_geometry(self: AxesGeometrySource) -> None:$/;"	m	class:AxesGeometrySource
_reshape_cell_array	build/lib/pyvista/core/pointset.py	/^    def _reshape_cell_array(self, array: NumpyArray[float]) -> NumpyArray[float]:$/;"	m	class:StructuredGrid
_reshape_cell_array	pyvista/core/pointset.py	/^    def _reshape_cell_array(self, array: NumpyArray[float]) -> NumpyArray[float]:$/;"	m	class:StructuredGrid
_reshape_point_array	build/lib/pyvista/core/pointset.py	/^    def _reshape_point_array(self, array: NumpyArray[float]) -> NumpyArray[float]:$/;"	m	class:StructuredGrid
_reshape_point_array	pyvista/core/pointset.py	/^    def _reshape_point_array(self, array: NumpyArray[float]) -> NumpyArray[float]:$/;"	m	class:StructuredGrid
_resize	build/lib/pyvista/plotting/charts.py	/^    def _resize(self):$/;"	m	class:ChartMPL
_resize	build/lib/pyvista/plotting/charts.py	/^    def _resize(self):$/;"	m	class:_Chart
_resize	pyvista/plotting/charts.py	/^    def _resize(self):$/;"	m	class:ChartMPL
_resize	pyvista/plotting/charts.py	/^    def _resize(self):$/;"	m	class:_Chart
_restore_active_scalars	build/lib/pyvista/core/filters/data_object.py	/^        def _restore_active_scalars(input_: _DataSetType, output_: _DataSetType):$/;"	f	function:DataObjectFilters.transform
_restore_active_scalars	pyvista/core/filters/data_object.py	/^        def _restore_active_scalars(input_: _DataSetType, output_: _DataSetType):$/;"	f	function:DataObjectFilters.transform
_restore_metadata	build/lib/pyvista/core/dataobject.py	/^    def _restore_metadata(self: Self) -> None:$/;"	m	class:DataObject
_restore_metadata	pyvista/core/dataobject.py	/^    def _restore_metadata(self: Self) -> None:$/;"	m	class:DataObject
_reverse_sense	build/lib/pyvista/core/filters/poly_data.py	/^    def _reverse_sense(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
_reverse_sense	pyvista/core/filters/poly_data.py	/^    def _reverse_sense(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
_rotation_matrix_as_orientation	build/lib/pyvista/plotting/prop3d.py	/^def _rotation_matrix_as_orientation($/;"	f
_rotation_matrix_as_orientation	pyvista/plotting/prop3d.py	/^def _rotation_matrix_as_orientation($/;"	f
_rotation_matrix_as_orientation	tests/plotting/test_actor.py	/^from pyvista.plotting.prop3d import _rotation_matrix_as_orientation$/;"	i
_row_array	build/lib/pyvista/core/objects.py	/^    def _row_array(self, name=None):$/;"	m	class:Table
_row_array	pyvista/core/objects.py	/^    def _row_array(self, name=None):$/;"	m	class:Table
_rst_link	doc/source/make_tables.py	/^        def _rst_link(name, url):$/;"	f	function:DatasetPropsGenerator.generate_datasource_links
_run_code	build/lib/pyvista/ext/plot_directive.py	/^def _run_code(code, code_path, ns=None, function_name=None):$/;"	f
_run_code	pyvista/ext/plot_directive.py	/^def _run_code(code, code_path, ns=None, function_name=None):$/;"	f
_run_mypy_code	tests/typing/mypy_plugin/test_plugin.py	/^def _run_mypy_code(code, use_plugin, tmp_path):$/;"	f
_save_failed_test_image	tests/doc/tst_doc_images.py	/^def _save_failed_test_image(source_path):$/;"	f
_save_image	build/lib/pyvista/plotting/plotter.py	/^    def _save_image(image, filename, return_img):$/;"	m	class:BasePlotter
_save_image	pyvista/plotting/plotter.py	/^    def _save_image(image, filename, return_img):$/;"	m	class:BasePlotter
_scalar_bar_slot_lookup	build/lib/pyvista/plotting/plotter.py	/^    def _scalar_bar_slot_lookup(self):$/;"	m	class:BasePlotter
_scalar_bar_slot_lookup	build/lib/pyvista/plotting/plotter.py	/^    def _scalar_bar_slot_lookup(self, value) -> None:$/;"	m	class:BasePlotter
_scalar_bar_slot_lookup	pyvista/plotting/plotter.py	/^    def _scalar_bar_slot_lookup(self):$/;"	m	class:BasePlotter
_scalar_bar_slot_lookup	pyvista/plotting/plotter.py	/^    def _scalar_bar_slot_lookup(self, value) -> None:$/;"	m	class:BasePlotter
_scalar_bar_slots	build/lib/pyvista/plotting/plotter.py	/^    def _scalar_bar_slots(self) -> set[int]:$/;"	m	class:BasePlotter
_scalar_bar_slots	build/lib/pyvista/plotting/plotter.py	/^    def _scalar_bar_slots(self, value) -> None:$/;"	m	class:BasePlotter
_scalar_bar_slots	pyvista/plotting/plotter.py	/^    def _scalar_bar_slots(self) -> set[int]:$/;"	m	class:BasePlotter
_scalar_bar_slots	pyvista/plotting/plotter.py	/^    def _scalar_bar_slots(self, value) -> None:$/;"	m	class:BasePlotter
_scale_points	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def _scale_points($/;"	f	function:CubeFacesSource.update
_scale_points	pyvista/core/utilities/geometric_sources.py	/^        def _scale_points($/;"	f	function:CubeFacesSource.update
_scene	build/lib/pyvista/plotting/charts.py	/^    def _scene(self):$/;"	m	class:_Chart
_scene	pyvista/plotting/charts.py	/^    def _scene(self):$/;"	m	class:_Chart
_select_values	build/lib/pyvista/core/filters/image_data.py	/^    def _select_values(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
_select_values	pyvista/core/filters/image_data.py	/^    def _select_values(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
_seq_pass	build/lib/pyvista/plotting/render_passes.py	/^    def _seq_pass(self):$/;"	m	class:RenderPasses
_seq_pass	pyvista/plotting/render_passes.py	/^    def _seq_pass(self):$/;"	m	class:RenderPasses
_serialize_pyvista_pickle_format	build/lib/pyvista/core/dataobject.py	/^    def _serialize_pyvista_pickle_format(self: Self) -> dict[str, Any]:$/;"	m	class:DataObject
_serialize_pyvista_pickle_format	pyvista/core/dataobject.py	/^    def _serialize_pyvista_pickle_format(self: Self) -> dict[str, Any]:$/;"	m	class:DataObject
_serialize_vtk_pickle_format	build/lib/pyvista/core/dataobject.py	/^    def _serialize_vtk_pickle_format($/;"	m	class:DataObject
_serialize_vtk_pickle_format	pyvista/core/dataobject.py	/^    def _serialize_vtk_pickle_format($/;"	m	class:DataObject
_set_axis_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def _set_axis_label(self, axis: _AxisEnum, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
_set_axis_label	pyvista/plotting/axes_assembly.py	/^    def _set_axis_label(self, axis: _AxisEnum, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
_set_context_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _set_context_style(self, scene):$/;"	m	class:RenderWindowInteractor
_set_context_style	pyvista/plotting/render_window_interactor.py	/^    def _set_context_style(self, scene):$/;"	m	class:RenderWindowInteractor
_set_data	build/lib/pyvista/core/cell.py	/^    def _set_data($/;"	m	class:CellArray
_set_data	pyvista/core/cell.py	/^    def _set_data($/;"	m	class:CellArray
_set_default_kwarg_mandatory	build/lib/pyvista/core/_validation/validate.py	/^def _set_default_kwarg_mandatory(kwargs: dict[str, Any], key: str, default: Any) -> None:$/;"	f
_set_default_kwarg_mandatory	pyvista/core/_validation/validate.py	/^def _set_default_kwarg_mandatory(kwargs: dict[str, Any], key: str, default: Any) -> None:$/;"	f
_set_default_kwarg_mandatory	tests/core/test_validation.py	/^from pyvista.core._validation.validate import _set_default_kwarg_mandatory$/;"	i
_set_default_label_props	build/lib/pyvista/plotting/axes_assembly.py	/^    def _set_default_label_props(self):$/;"	m	class:AxesAssembly
_set_default_label_props	pyvista/plotting/axes_assembly.py	/^    def _set_default_label_props(self):$/;"	m	class:AxesAssembly
_set_defaults	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults(self) -> None:$/;"	m	class:BaseReader
_set_defaults	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults(self) -> None:$/;"	m	class:MultiBlockPlot3DReader
_set_defaults	pyvista/core/utilities/reader.py	/^    def _set_defaults(self) -> None:$/;"	m	class:BaseReader
_set_defaults	pyvista/core/utilities/reader.py	/^    def _set_defaults(self) -> None:$/;"	m	class:MultiBlockPlot3DReader
_set_defaults_post	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:BaseReader
_set_defaults_post	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:CGNSReader
_set_defaults_post	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:Nek5000Reader
_set_defaults_post	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:OpenFOAMReader
_set_defaults_post	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:VTKDataSetReader
_set_defaults_post	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:XdmfReader
_set_defaults_post	build/lib/pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self):$/;"	m	class:ExodusIIReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:BaseReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:CGNSReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:Nek5000Reader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:OpenFOAMReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:VTKDataSetReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self) -> None:$/;"	m	class:XdmfReader
_set_defaults_post	pyvista/core/utilities/reader.py	/^    def _set_defaults_post(self):$/;"	m	class:ExodusIIReader
_set_directory	build/lib/pyvista/core/utilities/reader.py	/^    def _set_directory(self, directory) -> None:$/;"	m	class:BaseReader
_set_directory	pyvista/core/utilities/reader.py	/^    def _set_directory(self, directory) -> None:$/;"	m	class:BaseReader
_set_filename	build/lib/pyvista/core/utilities/reader.py	/^    def _set_filename(self, filename) -> None:$/;"	m	class:BaseReader
_set_filename	build/lib/pyvista/core/utilities/reader.py	/^    def _set_filename(self, filename) -> None:$/;"	m	class:EnSightReader
_set_filename	pyvista/core/utilities/reader.py	/^    def _set_filename(self, filename) -> None:$/;"	m	class:BaseReader
_set_filename	pyvista/core/utilities/reader.py	/^    def _set_filename(self, filename) -> None:$/;"	m	class:EnSightReader
_set_name_for_none_blocks	build/lib/pyvista/core/composite.py	/^        def _set_name_for_none_blocks($/;"	f	function:MultiBlock.deep_copy
_set_name_for_none_blocks	pyvista/core/composite.py	/^        def _set_name_for_none_blocks($/;"	f	function:MultiBlock.deep_copy
_set_normalized_datasets	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def _set_normalized_datasets($/;"	m	class:AxesGeometrySource
_set_normalized_datasets	pyvista/core/utilities/geometric_sources.py	/^    def _set_normalized_datasets($/;"	m	class:AxesGeometrySource
_set_output_mesh_type	build/lib/pyvista/core/filters/image_data.py	/^        def _set_output_mesh_type(alg_: _vtk.vtkSurfaceNets3D):$/;"	f	function:ImageDataFilters.contour_labels
_set_output_mesh_type	pyvista/core/filters/image_data.py	/^        def _set_output_mesh_type(alg_: _vtk.vtkSurfaceNets3D):$/;"	f	function:ImageDataFilters.contour_labels
_set_plot_theme_from_env	build/lib/pyvista/plotting/__init__.py	/^from .themes import _set_plot_theme_from_env$/;"	i
_set_plot_theme_from_env	build/lib/pyvista/plotting/themes.py	/^def _set_plot_theme_from_env() -> None:$/;"	f
_set_plot_theme_from_env	pyvista/plotting/__init__.py	/^from .themes import _set_plot_theme_from_env$/;"	i
_set_plot_theme_from_env	pyvista/plotting/themes.py	/^def _set_plot_theme_from_env() -> None:$/;"	f
_set_plot_theme_from_env	tests/plotting/test_theme.py	/^from pyvista.plotting.themes import _set_plot_theme_from_env$/;"	i
_set_string_scalar_object_name	build/lib/pyvista/core/utilities/arrays.py	/^def _set_string_scalar_object_name(vtkarr: _vtk.vtkStringArray) -> None:$/;"	f
_set_string_scalar_object_name	pyvista/core/utilities/arrays.py	/^def _set_string_scalar_object_name(vtkarr: _vtk.vtkStringArray) -> None:$/;"	f
_set_threshold_limit	build/lib/pyvista/core/filters/data_set.py	/^def _set_threshold_limit(alg, value, method, invert):$/;"	f
_set_threshold_limit	build/lib/pyvista/plotting/widgets.py	/^        from pyvista.core.filters.data_set import _set_threshold_limit$/;"	i
_set_threshold_limit	pyvista/core/filters/data_set.py	/^def _set_threshold_limit(alg, value, method, invert):$/;"	f
_set_threshold_limit	pyvista/plotting/widgets.py	/^        from pyvista.core.filters.data_set import _set_threshold_limit$/;"	i
_setup_callbacks	build/lib/pyvista/plotting/render_window_interactor.py	/^        def _setup_callbacks(button, click, control, shift):$/;"	f	function:RenderWindowInteractor.enable_custom_trackball_style
_setup_callbacks	pyvista/plotting/render_window_interactor.py	/^        def _setup_callbacks(button, click, control, shift):$/;"	f	function:RenderWindowInteractor.enable_custom_trackball_style
_setup_scene	build/lib/pyvista/plotting/charts.py	/^    def _setup_scene(self) -> None:$/;"	m	class:Charts
_setup_scene	pyvista/plotting/charts.py	/^    def _setup_scene(self) -> None:$/;"	m	class:Charts
_shape_is_allowed	build/lib/pyvista/core/_validation/check.py	/^    def _shape_is_allowed(a: _Shape, b: _Shape) -> bool:$/;"	f	function:check_shape
_shape_is_allowed	pyvista/core/_validation/check.py	/^    def _shape_is_allowed(a: _Shape, b: _Shape) -> bool:$/;"	f	function:check_shape
_shift_key_press	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _shift_key_press(self):$/;"	m	class:RenderWindowInteractor
_shift_key_press	pyvista/plotting/render_window_interactor.py	/^    def _shift_key_press(self):$/;"	m	class:RenderWindowInteractor
_shift_key_release	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _shift_key_release(self):$/;"	m	class:RenderWindowInteractor
_shift_key_release	pyvista/plotting/render_window_interactor.py	/^    def _shift_key_release(self):$/;"	m	class:RenderWindowInteractor
_show_edges	tests/plotting/test_plotting.py	/^def _show_edges():$/;"	f
_simulate_keypress	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _simulate_keypress(self, key):$/;"	m	class:RenderWindowInteractor
_simulate_keypress	pyvista/plotting/render_window_interactor.py	/^    def _simulate_keypress(self, key):$/;"	m	class:RenderWindowInteractor
_sky_box_cube_map_files_func	build/lib/pyvista/examples/downloads.py	/^def _sky_box_cube_map_files_func():$/;"	f
_sky_box_cube_map_files_func	pyvista/examples/downloads.py	/^def _sky_box_cube_map_files_func():$/;"	f
_sort_colors_by_hls	doc/source/make_tables.py	/^def _sort_colors_by_hls(colors: Sequence[Color]):$/;"	f
_sparse_points_reader	build/lib/pyvista/examples/downloads.py	/^def _sparse_points_reader(saved_file):  # pragma: no cover$/;"	f
_sparse_points_reader	pyvista/examples/downloads.py	/^def _sparse_points_reader(saved_file):  # pragma: no cover$/;"	f
_sphere_vectors_load_func	build/lib/pyvista/examples/examples.py	/^def _sphere_vectors_load_func() -> pyvista.PolyData:$/;"	f
_sphere_vectors_load_func	pyvista/examples/examples.py	/^def _sphere_vectors_load_func() -> pyvista.PolyData:$/;"	f
_sphere_with_texture_map	build/lib/pyvista/examples/planets.py	/^def _sphere_with_texture_map(radius=1.0, lat_resolution=50, lon_resolution=100):$/;"	f
_sphere_with_texture_map	pyvista/examples/planets.py	/^def _sphere_with_texture_map(radius=1.0, lat_resolution=50, lon_resolution=100):$/;"	f
_spherical_to_cartesian	build/lib/pyvista/core/utilities/geometric_objects.py	/^    def _spherical_to_cartesian($/;"	f	function:SolidSphereGeneric
_spherical_to_cartesian	pyvista/core/utilities/geometric_objects.py	/^    def _spherical_to_cartesian($/;"	f	function:SolidSphereGeneric
_spline_load_func	build/lib/pyvista/examples/examples.py	/^def _spline_load_func():$/;"	f
_spline_load_func	pyvista/examples/examples.py	/^def _spline_load_func():$/;"	f
_split_code_at_show	build/lib/pyvista/ext/plot_directive.py	/^def _split_code_at_show(text):$/;"	f
_split_code_at_show	pyvista/ext/plot_directive.py	/^def _split_code_at_show(text):$/;"	f
_split_values	build/lib/pyvista/core/filters/data_set.py	/^    def _split_values(  # type:ignore[misc]$/;"	m	class:DataSetFilters
_split_values	pyvista/core/filters/data_set.py	/^    def _split_values(  # type:ignore[misc]$/;"	m	class:DataSetFilters
_store_metadata	build/lib/pyvista/core/dataobject.py	/^    def _store_metadata(self: Self) -> None:$/;"	m	class:DataObject
_store_metadata	pyvista/core/dataobject.py	/^    def _store_metadata(self: Self) -> None:$/;"	m	class:DataObject
_str_examples	doc/source/conf.py	/^def _str_examples(self):$/;"	f
_str_examples	tests/plotting/tinypages/conf.py	/^def _str_examples(self):$/;"	f
_string	build/lib/pyvista/core/utilities/arrays.py	/^    def _string(self: _SerializedDictArray) -> str:$/;"	m	class:_SerializedDictArray
_string	build/lib/pyvista/core/utilities/arrays.py	/^    def _string(self: _SerializedDictArray, str_: str) -> None:$/;"	m	class:_SerializedDictArray
_string	pyvista/core/utilities/arrays.py	/^    def _string(self: _SerializedDictArray) -> str:$/;"	m	class:_SerializedDictArray
_string	pyvista/core/utilities/arrays.py	/^    def _string(self: _SerializedDictArray, str_: str) -> None:$/;"	m	class:_SerializedDictArray
_strip_comments	build/lib/pyvista/ext/plot_directive.py	/^def _strip_comments(code):$/;"	f
_strip_comments	pyvista/ext/plot_directive.py	/^def _strip_comments(code):$/;"	f
_structured_load_func	build/lib/pyvista/examples/examples.py	/^def _structured_load_func():$/;"	f
_structured_load_func	pyvista/examples/examples.py	/^def _structured_load_func():$/;"	f
_style_factory	build/lib/pyvista/plotting/render_window_interactor.py	/^def _style_factory(klass):$/;"	f
_style_factory	pyvista/plotting/render_window_interactor.py	/^def _style_factory(klass):$/;"	f
_swap	build/lib/pyvista/core/filters/data_set.py	/^    def _swap(axis_a, axis_b) -> None:$/;"	f	function:_swap_axes
_swap	pyvista/core/filters/data_set.py	/^    def _swap(axis_a, axis_b) -> None:$/;"	f	function:_swap_axes
_swap_axes	build/lib/pyvista/core/filters/data_set.py	/^def _swap_axes(vectors, values):$/;"	f
_swap_axes	pyvista/core/filters/data_set.py	/^def _swap_axes(vectors, values):$/;"	f
_swap_axes	tests/core/test_dataset_filters.py	/^from pyvista.core.filters.data_set import _swap_axes$/;"	i
_system_supports_plotting	build/lib/pyvista/plotting/tools.py	/^def _system_supports_plotting():$/;"	f
_system_supports_plotting	pyvista/plotting/tools.py	/^def _system_supports_plotting():$/;"	f
_table_data_from_color_sequence	doc/source/make_tables.py	/^    def _table_data_from_color_sequence(colors: Sequence[Color]):$/;"	m	class:ColorTable
_test_block_arrays	tests/core/test_reader.py	/^def _test_block_arrays(block, array_names):$/;"	f
_test_block_names	tests/core/test_reader.py	/^def _test_block_names(block, names):$/;"	f
_test_both_images_exist	tests/doc/tst_doc_images.py	/^def _test_both_images_exist(filename, docs_image_path, cached_image_path):$/;"	f
_test_compare_images	tests/doc/tst_doc_images.py	/^def _test_compare_images(test_name, docs_image_path, cached_image_path):$/;"	f
_tetbeam_load_func	build/lib/pyvista/examples/examples.py	/^def _tetbeam_load_func():$/;"	f
_tetbeam_load_func	pyvista/examples/examples.py	/^def _tetbeam_load_func():$/;"	f
_tetra_dc_mesh_files_func	build/lib/pyvista/examples/downloads.py	/^def _tetra_dc_mesh_files_func():  # pragma: no cover$/;"	f
_tetra_dc_mesh_files_func	pyvista/examples/downloads.py	/^def _tetra_dc_mesh_files_func():  # pragma: no cover$/;"	f
_the_callback	build/lib/pyvista/plotting/picking.py	/^        def _the_callback(*args):$/;"	f	function:PickingHelper.enable_fly_to_right_click
_the_callback	build/lib/pyvista/plotting/picking.py	/^        def _the_callback(path):$/;"	f	function:PickingHelper.enable_horizon_picking
_the_callback	build/lib/pyvista/plotting/picking.py	/^        def _the_callback(picked_point, picker):$/;"	f	function:PickingHelper.enable_geodesic_picking
_the_callback	build/lib/pyvista/plotting/picking.py	/^        def _the_callback(picked_point, picker):$/;"	f	function:PickingHelper.enable_path_picking
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(box_widget, _event):$/;"	f	function:WidgetHelper.add_box_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(value):$/;"	f	function:WidgetHelper.add_text_slider_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_checkbox_button_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_line_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_plane_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_radio_button_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_slider_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_sphere_widget
_the_callback	build/lib/pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_spline_widget
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(*args):$/;"	f	function:PickingHelper.enable_fly_to_right_click
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(path):$/;"	f	function:PickingHelper.enable_horizon_picking
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(picked_point, picker):$/;"	f	function:PickingHelper.enable_geodesic_picking
_the_callback	pyvista/plotting/picking.py	/^        def _the_callback(picked_point, picker):$/;"	f	function:PickingHelper.enable_path_picking
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(box_widget, _event):$/;"	f	function:WidgetHelper.add_box_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(value):$/;"	f	function:WidgetHelper.add_text_slider_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_checkbox_button_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_line_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_plane_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_radio_button_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_slider_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_sphere_widget
_the_callback	pyvista/plotting/widgets.py	/^        def _the_callback(widget, _event):$/;"	f	function:WidgetHelper.add_spline_widget
_theme	build/lib/pyvista/plotting/_property.py	/^    _theme = None$/;"	v	class:Property
_theme	build/lib/pyvista/plotting/text.py	/^    _theme = Theme()$/;"	v	class:TextProperty
_theme	pyvista/plotting/_property.py	/^    _theme = None$/;"	v	class:Property
_theme	pyvista/plotting/text.py	/^    _theme = Theme()$/;"	v	class:TextProperty
_to_pos	build/lib/pyvista/plotting/plotter.py	/^        def _to_pos(elevation, azimuth):$/;"	f	function:BasePlotter.enable_3_lights
_to_pos	pyvista/plotting/plotter.py	/^        def _to_pos(elevation, azimuth):$/;"	f	function:BasePlotter.enable_3_lights
_to_tuple	build/lib/pyvista/core/_validation/_cast_array.py	/^    def _to_tuple(s):$/;"	f	function:_cast_to_tuple
_to_tuple	pyvista/core/_validation/_cast_array.py	/^    def _to_tuple(s):$/;"	f	function:_cast_to_tuple
_toggle_chart_interaction	build/lib/pyvista/plotting/render_window_interactor.py	/^    def _toggle_chart_interaction(self, mouse_pos):$/;"	m	class:RenderWindowInteractor
_toggle_chart_interaction	pyvista/plotting/render_window_interactor.py	/^    def _toggle_chart_interaction(self, mouse_pos):$/;"	m	class:RenderWindowInteractor
_total_size_bytes	build/lib/pyvista/examples/_dataset_loader.py	/^    def _total_size_bytes(self) -> int:$/;"	m	class:_BaseFilePropsProtocol
_total_size_bytes	build/lib/pyvista/examples/_dataset_loader.py	/^    def _total_size_bytes(self) -> int:$/;"	m	class:_MultiFileDatasetLoader
_total_size_bytes	build/lib/pyvista/examples/_dataset_loader.py	/^    def _total_size_bytes(self) -> int:$/;"	m	class:_SingleFile
_total_size_bytes	pyvista/examples/_dataset_loader.py	/^    def _total_size_bytes(self) -> int:$/;"	m	class:_BaseFilePropsProtocol
_total_size_bytes	pyvista/examples/_dataset_loader.py	/^    def _total_size_bytes(self) -> int:$/;"	m	class:_MultiFileDatasetLoader
_total_size_bytes	pyvista/examples/_dataset_loader.py	/^    def _total_size_bytes(self) -> int:$/;"	m	class:_SingleFile
_transform_output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def _transform_output(self: Text3DSource) -> None:$/;"	m	class:Text3DSource
_transform_output	pyvista/core/utilities/geometric_sources.py	/^    def _transform_output(self: Text3DSource) -> None:$/;"	m	class:Text3DSource
_transformation_matrix	build/lib/pyvista/plotting/prop3d.py	/^    def _transformation_matrix(self):$/;"	m	class:_Prop3DMixin
_transformation_matrix	pyvista/plotting/prop3d.py	/^    def _transformation_matrix(self):$/;"	m	class:_Prop3DMixin
_tri_quadratic_hexahedron_load_func	build/lib/pyvista/examples/downloads.py	/^def _tri_quadratic_hexahedron_load_func(dataset):  # pragma: no cover$/;"	f
_tri_quadratic_hexahedron_load_func	pyvista/examples/downloads.py	/^def _tri_quadratic_hexahedron_load_func(dataset):  # pragma: no cover$/;"	f
_try_getattr	doc/source/make_tables.py	/^    def _try_getattr(dataset, attr: str):$/;"	m	class:DatasetPropsGenerator
_try_imageio_imread	build/lib/pyvista/core/utilities/fileio.py	/^def _try_imageio_imread(filename: str | Path) -> imageio.core.util.Array:$/;"	f
_try_imageio_imread	build/lib/pyvista/plotting/texture.py	/^from pyvista.core.utilities.fileio import _try_imageio_imread$/;"	i
_try_imageio_imread	pyvista/core/utilities/fileio.py	/^def _try_imageio_imread(filename: str | Path) -> imageio.core.util.Array:$/;"	f
_try_imageio_imread	pyvista/plotting/texture.py	/^from pyvista.core.utilities.fileio import _try_imageio_imread$/;"	i
_try_imageio_imread	tests/core/test_reader.py	/^from pyvista.core.utilities.fileio import _try_imageio_imread$/;"	i
_try_import	build/lib/pyvista/errors.py	/^def _try_import(module, name):$/;"	f
_try_import	build/lib/pyvista/utilities/__init__.py	/^def _try_import(module, name):$/;"	f
_try_import	pyvista/errors.py	/^def _try_import(module, name):$/;"	f
_try_import	pyvista/utilities/__init__.py	/^def _try_import(module, name):$/;"	f
_unravel_and_validate_ids	build/lib/pyvista/core/filters/data_set.py	/^        def _unravel_and_validate_ids(ids):$/;"	f	function:DataSetFilters.connectivity
_unravel_and_validate_ids	pyvista/core/filters/data_set.py	/^        def _unravel_and_validate_ids(ids):$/;"	f	function:DataSetFilters.connectivity
_unserialize_pyvista_pickle_format	build/lib/pyvista/core/dataobject.py	/^    def _unserialize_pyvista_pickle_format(self: Self, state: dict[str, Any]) -> None:$/;"	m	class:DataObject
_unserialize_pyvista_pickle_format	pyvista/core/dataobject.py	/^    def _unserialize_pyvista_pickle_format(self: Self, state: dict[str, Any]) -> None:$/;"	m	class:DataObject
_unserialize_vtk_pickle_format	build/lib/pyvista/core/dataobject.py	/^    def _unserialize_vtk_pickle_format($/;"	m	class:DataObject
_unserialize_vtk_pickle_format	pyvista/core/dataobject.py	/^    def _unserialize_vtk_pickle_format($/;"	m	class:DataObject
_update_alg	build/lib/pyvista/core/filters/__init__.py	/^def _update_alg(alg, progress_bar: bool = False, message='') -> None:$/;"	f
_update_alg	build/lib/pyvista/core/filters/composite.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/utilities/features.py	/^    from pyvista.core.filters import _update_alg$/;"	i
_update_alg	build/lib/pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
_update_alg	pyvista/core/filters/__init__.py	/^def _update_alg(alg, progress_bar: bool = False, message='') -> None:$/;"	f
_update_alg	pyvista/core/filters/composite.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/filters/data_object.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/filters/data_set.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/filters/image_data.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/filters/poly_data.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/utilities/features.py	/^    from pyvista.core.filters import _update_alg$/;"	i
_update_alg	pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
_update_and_get_output	build/lib/pyvista/core/filters/image_data.py	/^            def _update_and_get_output():$/;"	f	function:ImageDataFilters.pad_image._get_padded_output
_update_and_get_output	pyvista/core/filters/image_data.py	/^            def _update_and_get_output():$/;"	f	function:ImageDataFilters.pad_image._get_padded_output
_update_array	build/lib/pyvista/core/datasetattributes.py	/^    def _update_array($/;"	m	class:DataSetAttributes
_update_array	pyvista/core/datasetattributes.py	/^    def _update_array($/;"	m	class:DataSetAttributes
_update_axes_label_color	build/lib/pyvista/plotting/tools.py	/^def _update_axes_label_color(axes_actor, color=None):$/;"	f
_update_axes_label_color	pyvista/plotting/tools.py	/^def _update_axes_label_color(axes_actor, color=None):$/;"	f
_update_bounds	build/lib/pyvista/plotting/renderer.py	/^        def _update_bounds(bounds) -> None:$/;"	f	function:Renderer.compute_bounds
_update_bounds	pyvista/plotting/renderer.py	/^        def _update_bounds(bounds) -> None:$/;"	f	function:Renderer.compute_bounds
_update_dimensions	build/lib/pyvista/core/grid.py	/^    def _update_dimensions(self: Self) -> None:$/;"	m	class:RectilinearGrid
_update_dimensions	pyvista/core/grid.py	/^    def _update_dimensions(self: Self) -> None:$/;"	m	class:RectilinearGrid
_update_id_mask	build/lib/pyvista/core/filters/data_set.py	/^        def _update_id_mask(logic_) -> None:$/;"	f	function:DataSetFilters._apply_component_logic_to_array
_update_id_mask	pyvista/core/filters/data_set.py	/^        def _update_id_mask(logic_) -> None:$/;"	f	function:DataSetFilters._apply_component_logic_to_array
_update_information	build/lib/pyvista/core/utilities/reader.py	/^    def _update_information(self) -> None:$/;"	m	class:BaseReader
_update_information	pyvista/core/utilities/reader.py	/^    def _update_information(self) -> None:$/;"	m	class:BaseReader
_update_label_positions	build/lib/pyvista/plotting/axes_assembly.py	/^    def _update_label_positions(self):$/;"	m	class:AxesAssembly
_update_label_positions	build/lib/pyvista/plotting/axes_assembly.py	/^    def _update_label_positions(self):$/;"	m	class:AxesAssemblySymmetric
_update_label_positions	build/lib/pyvista/plotting/axes_assembly.py	/^    def _update_label_positions(self):$/;"	m	class:PlanesAssembly
_update_label_positions	pyvista/plotting/axes_assembly.py	/^    def _update_label_positions(self):$/;"	m	class:AxesAssembly
_update_label_positions	pyvista/plotting/axes_assembly.py	/^    def _update_label_positions(self):$/;"	m	class:AxesAssemblySymmetric
_update_label_positions	pyvista/plotting/axes_assembly.py	/^    def _update_label_positions(self):$/;"	m	class:PlanesAssembly
_update_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def _update_labels(self):$/;"	m	class:CubeAxesActor
_update_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_labels(self):$/;"	m	class:CubeAxesActor
_update_passes	build/lib/pyvista/plotting/render_passes.py	/^    def _update_passes(self):$/;"	m	class:RenderPasses
_update_passes	pyvista/plotting/render_passes.py	/^    def _update_passes(self):$/;"	m	class:RenderPasses
_update_string	build/lib/pyvista/core/utilities/arrays.py	/^    def _update_string(self: _SerializedDictArray) -> None:$/;"	m	class:_SerializedDictArray
_update_string	pyvista/core/utilities/arrays.py	/^    def _update_string(self: _SerializedDictArray) -> None:$/;"	m	class:_SerializedDictArray
_update_textureprops	build/lib/pyvista/plotting/charts.py	/^    def _update_textureprops(self) -> None:$/;"	m	class:Brush
_update_textureprops	pyvista/plotting/charts.py	/^    def _update_textureprops(self) -> None:$/;"	m	class:Brush
_update_ticks	build/lib/pyvista/plotting/charts.py	/^    def _update_ticks(self) -> None:$/;"	m	class:Axis
_update_ticks	pyvista/plotting/charts.py	/^    def _update_ticks(self) -> None:$/;"	m	class:Axis
_update_x_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def _update_x_labels(self):$/;"	m	class:CubeAxesActor
_update_x_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_x_labels(self):$/;"	m	class:CubeAxesActor
_update_y_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def _update_y_labels(self):$/;"	m	class:CubeAxesActor
_update_y_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_y_labels(self):$/;"	m	class:CubeAxesActor
_update_z_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def _update_z_labels(self):$/;"	m	class:CubeAxesActor
_update_z_labels	pyvista/plotting/cube_axes_actor.py	/^    def _update_z_labels(self):$/;"	m	class:CubeAxesActor
_validate_axes	build/lib/pyvista/plotting/affine_widget.py	/^def _validate_axes(axes):$/;"	f
_validate_axes	pyvista/plotting/affine_widget.py	/^def _validate_axes(axes):$/;"	f
_validate_color_sequence	build/lib/pyvista/core/_validation/validate.py	/^def _validate_color_sequence($/;"	f
_validate_color_sequence	build/lib/pyvista/core/filters/data_set.py	/^        from pyvista.core._validation.validate import _validate_color_sequence$/;"	i
_validate_color_sequence	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.core._validation.validate import _validate_color_sequence$/;"	i
_validate_color_sequence	pyvista/core/_validation/validate.py	/^def _validate_color_sequence($/;"	f
_validate_color_sequence	pyvista/core/filters/data_set.py	/^        from pyvista.core._validation.validate import _validate_color_sequence$/;"	i
_validate_color_sequence	pyvista/plotting/axes_assembly.py	/^from pyvista.core._validation.validate import _validate_color_sequence$/;"	i
_validate_component_mode	build/lib/pyvista/core/filters/data_set.py	/^        def _validate_component_mode(array_, component_mode_):$/;"	f	function:DataSetFilters._validate_extract_values
_validate_component_mode	pyvista/core/filters/data_set.py	/^        def _validate_component_mode(array_, component_mode_):$/;"	f	function:DataSetFilters._validate_extract_values
_validate_dimensional_operation	build/lib/pyvista/core/filters/image_data.py	/^    def _validate_dimensional_operation($/;"	m	class:ImageDataFilters
_validate_dimensional_operation	pyvista/core/filters/image_data.py	/^    def _validate_dimensional_operation($/;"	m	class:ImageDataFilters
_validate_extract_values	build/lib/pyvista/core/filters/data_set.py	/^    def _validate_extract_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_validate_extract_values	pyvista/core/filters/data_set.py	/^    def _validate_extract_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
_validate_index	build/lib/pyvista/plotting/prop_collection.py	/^    def _validate_index(self, index: int | np.integer[Any]) -> int:$/;"	m	class:_PropCollection
_validate_index	pyvista/plotting/prop_collection.py	/^    def _validate_index(self, index: int | np.integer[Any]) -> int:$/;"	m	class:_PropCollection
_validate_jupyter_backend	build/lib/pyvista/jupyter/__init__.py	/^def _validate_jupyter_backend(backend):$/;"	f
_validate_jupyter_backend	build/lib/pyvista/plotting/themes.py	/^        from pyvista.jupyter import _validate_jupyter_backend$/;"	i
_validate_jupyter_backend	pyvista/jupyter/__init__.py	/^def _validate_jupyter_backend(backend):$/;"	f
_validate_jupyter_backend	pyvista/plotting/themes.py	/^        from pyvista.jupyter import _validate_jupyter_backend$/;"	i
_validate_jupyter_backend	tests/plotting/jupyter/test_static.py	/^from pyvista.jupyter import _validate_jupyter_backend$/;"	i
_validate_label_sequence	build/lib/pyvista/plotting/axes_assembly.py	/^def _validate_label_sequence(labels: Sequence[str], n_labels: int | Sequence[int], name: str):$/;"	f
_validate_label_sequence	pyvista/plotting/axes_assembly.py	/^def _validate_label_sequence(labels: Sequence[str], n_labels: int | Sequence[int], name: str):$/;"	f
_validate_picker_not_in_use	build/lib/pyvista/plotting/picking.py	/^    def _validate_picker_not_in_use(self):$/;"	m	class:PickingInterface
_validate_picker_not_in_use	pyvista/plotting/picking.py	/^    def _validate_picker_not_in_use(self):$/;"	m	class:PickingInterface
_validate_real_value	build/lib/pyvista/core/_validation/check.py	/^def _validate_real_value(scalar: float, name: str = 'Value') -> NumpyArray[float]:$/;"	f
_validate_real_value	pyvista/core/_validation/check.py	/^def _validate_real_value(scalar: float, name: str = 'Value') -> NumpyArray[float]:$/;"	f
_validate_scalar_array	build/lib/pyvista/core/filters/data_set.py	/^        def _validate_scalar_array(scalars_, preference_):$/;"	f	function:DataSetFilters._validate_extract_values
_validate_scalar_array	pyvista/core/filters/data_set.py	/^        def _validate_scalar_array(scalars_, preference_):$/;"	f	function:DataSetFilters._validate_extract_values
_validate_shape_value	build/lib/pyvista/core/_validation/check.py	/^def _validate_shape_value(shape: _ShapeLike) -> _Shape:$/;"	f
_validate_shape_value	pyvista/core/_validation/check.py	/^def _validate_shape_value(shape: _ShapeLike) -> _Shape:$/;"	f
_validate_shape_value	tests/core/test_validation.py	/^from pyvista.core._validation.check import _validate_shape_value$/;"	i
_validate_values_and_ranges	build/lib/pyvista/core/filters/data_set.py	/^        def _validate_values_and_ranges(array_, values_, ranges_, num_components_, component_mode_):$/;"	f	function:DataSetFilters._validate_extract_values
_validate_values_and_ranges	pyvista/core/filters/data_set.py	/^        def _validate_values_and_ranges(array_, values_, ranges_, num_components_, component_mode_):$/;"	f	function:DataSetFilters._validate_extract_values
_validate_vector	build/lib/pyvista/core/filters/data_set.py	/^        def _validate_vector($/;"	f	function:DataSetFilters.align_xyz
_validate_vector	pyvista/core/filters/data_set.py	/^        def _validate_vector($/;"	f	function:DataSetFilters.align_xyz
_validate_verbosity	build/lib/pyvista/core/_vtk_core.py	/^    def _validate_verbosity($/;"	m	class:_VTKVerbosity
_validate_verbosity	pyvista/core/_vtk_core.py	/^    def _validate_verbosity($/;"	m	class:_VTKVerbosity
_validation	build/lib/pyvista/__init__.py	/^from pyvista.core import _validation as _validation$/;"	i
_validation	build/lib/pyvista/core/composite.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/grid.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/utilities/helpers.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/utilities/parametric_objects.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/utilities/points.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/core/utilities/transformations.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/plotting/lights.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/plotting/prop3d.py	/^from pyvista.core import _validation$/;"	i
_validation	build/lib/pyvista/plotting/prop_collection.py	/^from pyvista import _validation$/;"	i
_validation	build/lib/pyvista/plotting/text.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/__init__.py	/^from pyvista.core import _validation as _validation$/;"	i
_validation	pyvista/core/composite.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/filters/data_object.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/filters/data_set.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/filters/image_data.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/filters/poly_data.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/grid.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/utilities/helpers.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/utilities/parametric_objects.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/utilities/points.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/utilities/transform.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/core/utilities/transformations.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/plotting/axes_assembly.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/plotting/lights.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/plotting/prop3d.py	/^from pyvista.core import _validation$/;"	i
_validation	pyvista/plotting/prop_collection.py	/^from pyvista import _validation$/;"	i
_validation	pyvista/plotting/text.py	/^from pyvista.core import _validation$/;"	i
_values_manual	build/lib/pyvista/plotting/lookup_table.py	/^    _values_manual = False$/;"	v	class:LookupTable
_values_manual	pyvista/plotting/lookup_table.py	/^    _values_manual = False$/;"	v	class:LookupTable
_verbosity	build/lib/pyvista/core/_vtk_core.py	/^    def _verbosity(self):$/;"	m	class:_VTKVerbosity
_verbosity	build/lib/pyvista/core/_vtk_core.py	/^    def _verbosity(self, verbosity: _VerbosityOptions):$/;"	m	class:_VTKVerbosity
_verbosity	pyvista/core/_vtk_core.py	/^    def _verbosity(self):$/;"	m	class:_VTKVerbosity
_verbosity	pyvista/core/_vtk_core.py	/^    def _verbosity(self, verbosity: _VerbosityOptions):$/;"	m	class:_VTKVerbosity
_verbosity_string	build/lib/pyvista/core/_vtk_core.py	/^    def _verbosity_string(self):$/;"	m	class:_VTKVerbosity
_verbosity_string	pyvista/core/_vtk_core.py	/^    def _verbosity_string(self):$/;"	m	class:_VTKVerbosity
_vtk	build/lib/pyvista/core/_typing_core/_aliases.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/cell.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/celltype.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/composite.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/dataobject.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/dataset.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/datasetattributes.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/__init__.py	/^    from .. import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/composite.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/data_set.py	/^import pyvista.core._vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/structured_grid.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/filters/unstructured_grid.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/grid.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/objects.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/partitioned.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/pointset.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/pyvista_ndarray.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/arrays.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/cells.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/features.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/fileio.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/geometric_objects.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/helpers.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/image_sources.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/observers.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/parametric_objects.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/points.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/reader.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/core/wrappers.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/demos/logo.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/examples/cells.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/examples/downloads.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/__init__.py	/^from . import _vtk as _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/_property.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/_typing.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/actor.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/actor_properties.py	/^    from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/affine_widget.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/axes.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/axes_actor.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/axes_assembly.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/background_renderer.py	/^        from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/camera.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/charts.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/colors.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/composite_mapper.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/cube_axes_actor.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/lookup_table.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/mapper.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/picking.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/plotter.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/prop3d.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/prop_collection.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/render_passes.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/render_window_interactor.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/renderer.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/scalar_bars.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/text.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/texture.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/tools.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/utilities/algorithms.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/utilities/cubemap.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/utilities/gl_checks.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/utilities/regression.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/volume.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/volume_property.py	/^from . import _vtk$/;"	i
_vtk	build/lib/pyvista/plotting/widgets.py	/^from . import _vtk$/;"	i
_vtk	pyvista/core/_typing_core/_aliases.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/cell.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/celltype.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/composite.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/dataobject.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/dataset.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/datasetattributes.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/__init__.py	/^    from .. import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/composite.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/data_object.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/data_set.py	/^import pyvista.core._vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/image_data.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/poly_data.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/structured_grid.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/filters/unstructured_grid.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/grid.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/objects.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/partitioned.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/pointset.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/pyvista_ndarray.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/arrays.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/cells.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/features.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/fileio.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/geometric_objects.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/helpers.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/image_sources.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/observers.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/parametric_objects.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/points.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/reader.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/utilities/transform.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/core/wrappers.py	/^from . import _vtk_core as _vtk$/;"	i
_vtk	pyvista/demos/logo.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/examples/cells.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/examples/downloads.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	pyvista/plotting/__init__.py	/^from . import _vtk as _vtk$/;"	i
_vtk	pyvista/plotting/_property.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/_typing.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/actor.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/actor_properties.py	/^    from . import _vtk$/;"	i
_vtk	pyvista/plotting/affine_widget.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/axes.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/axes_actor.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/axes_assembly.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	pyvista/plotting/background_renderer.py	/^        from . import _vtk$/;"	i
_vtk	pyvista/plotting/camera.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/charts.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/colors.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/composite_mapper.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/cube_axes_actor.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/lookup_table.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/mapper.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/picking.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/plotter.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/prop3d.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	pyvista/plotting/prop_collection.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	pyvista/plotting/render_passes.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/render_window_interactor.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/renderer.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/scalar_bars.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/text.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/texture.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/tools.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/utilities/algorithms.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	pyvista/plotting/utilities/cubemap.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	pyvista/plotting/utilities/gl_checks.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	pyvista/plotting/utilities/regression.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	pyvista/plotting/volume.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/volume_property.py	/^from . import _vtk$/;"	i
_vtk	pyvista/plotting/widgets.py	/^from . import _vtk$/;"	i
_vtk	tests/core/test_pyvista_ndarray.py	/^import vtk as _vtk$/;"	i
_vtk	tests/core/test_utilities.py	/^from pyvista.core import _vtk_core as _vtk$/;"	i
_vtk	tests/plotting/test_axes.py	/^from pyvista.plotting import _vtk$/;"	i
_vtk	tests/plotting/test_render_pass.py	/^from pyvista import _vtk$/;"	i
_vtk	tests/plotting/test_render_window_interactor.py	/^from pyvista import _vtk$/;"	i
_vtk	tests/plotting/test_scalar_bars.py	/^from pyvista import _vtk$/;"	i
_vtkArrayType	build/lib/pyvista/core/utilities/arrays.py	/^_vtkArrayType = TypeVar('_vtkArrayType', bound=_vtk.vtkAbstractArray)$/;"	v
_vtkArrayType	pyvista/core/utilities/arrays.py	/^_vtkArrayType = TypeVar('_vtkArrayType', bound=_vtk.vtkAbstractArray)$/;"	v
_vtkWrapper	build/lib/pyvista/plotting/charts.py	/^class _vtkWrapper(metaclass=_vtkWrapperMeta):$/;"	c
_vtkWrapper	pyvista/plotting/charts.py	/^class _vtkWrapper(metaclass=_vtkWrapperMeta):$/;"	c
_vtkWrapperMeta	build/lib/pyvista/plotting/charts.py	/^class _vtkWrapperMeta(type):$/;"	c
_vtkWrapperMeta	pyvista/plotting/charts.py	/^class _vtkWrapperMeta(type):$/;"	c
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = ''$/;"	v	class:POpenFOAMReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkAVSucdReader'$/;"	v	class:AVSucdReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkBMPReader'$/;"	v	class:BMPReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkBYUReader'$/;"	v	class:BYUReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkCGNSReader'$/;"	v	class:CGNSReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkDEMReader'$/;"	v	class:DEMReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkDICOMImageReader'$/;"	v	class:DICOMReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkDataSetReader'$/;"	v	class:VTKDataSetReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkExodusIIReader'$/;"	v	class:ExodusIIReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkFLUENTCFFReader'$/;"	v	class:FLUENTCFFReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkFLUENTReader'$/;"	v	class:FluentReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkFacetReader'$/;"	v	class:FacetReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGAMBITReader'$/;"	v	class:GambitReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGESignaReader'$/;"	v	class:GESignaReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGLTFReader'$/;"	v	class:GLTFReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGaussianCubeReader'$/;"	v	class:GaussianCubeReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGenericEnSightReader'$/;"	v	class:EnSightReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkHDFReader'$/;"	v	class:HDFReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkHDRReader'$/;"	v	class:HDRReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkJPEGReader'$/;"	v	class:JPEGReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMCubesReader'$/;"	v	class:BinaryMarchingCubesReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMFIXReader'$/;"	v	class:MFIXReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMINCImageReader'$/;"	v	class:MINCImageReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMetaImageReader'$/;"	v	class:MetaImageReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMultiBlockPLOT3DReader'$/;"	v	class:MultiBlockPlot3DReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkNIFTIImageReader'$/;"	v	class:NIFTIReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkNek5000Reader'$/;"	v	class:Nek5000Reader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkNrrdReader'$/;"	v	class:NRRDReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkOBJReader'$/;"	v	class:OBJReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkOpenFOAMReader'$/;"	v	class:OpenFOAMReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPDBReader'$/;"	v	class:PDBReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPDataSetReader'$/;"	v	class:VTKPDataSetReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPLYReader'$/;"	v	class:PLYReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPNGReader'$/;"	v	class:PNGReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPNMReader'$/;"	v	class:PNMReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPTSReader'$/;"	v	class:PTSReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkParticleReader'$/;"	v	class:ParticleReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPlot3DMetaReader'$/;"	v	class:Plot3DMetaReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkProStarReader'$/;"	v	class:ProStarReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkSLCReader'$/;"	v	class:SLCReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkSTLReader'$/;"	v	class:STLReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkSegYReader'$/;"	v	class:SegYReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkTIFFReader'$/;"	v	class:TIFFReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkTecplotReader'$/;"	v	class:TecplotReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLImageDataReader'$/;"	v	class:XMLImageDataReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLMultiBlockDataReader'$/;"	v	class:XMLMultiBlockDataReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPImageDataReader'$/;"	v	class:XMLPImageDataReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPRectilinearGridReader'$/;"	v	class:XMLPRectilinearGridReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPUnstructuredGridReader'$/;"	v	class:XMLPUnstructuredGridReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPartitionedDataSetReader'$/;"	v	class:XMLPartitionedDataSetReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPolyDataReader'$/;"	v	class:XMLPolyDataReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLRectilinearGridReader'$/;"	v	class:XMLRectilinearGridReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLStructuredGridReader'$/;"	v	class:XMLStructuredGridReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLUnstructuredGridReader'$/;"	v	class:XMLUnstructuredGridReader
_vtk_class_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXdmfReader'$/;"	v	class:XdmfReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = ''$/;"	v	class:POpenFOAMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkAVSucdReader'$/;"	v	class:AVSucdReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkBMPReader'$/;"	v	class:BMPReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkBYUReader'$/;"	v	class:BYUReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkCGNSReader'$/;"	v	class:CGNSReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkDEMReader'$/;"	v	class:DEMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkDICOMImageReader'$/;"	v	class:DICOMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkDataSetReader'$/;"	v	class:VTKDataSetReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkExodusIIReader'$/;"	v	class:ExodusIIReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkFLUENTCFFReader'$/;"	v	class:FLUENTCFFReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkFLUENTReader'$/;"	v	class:FluentReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkFacetReader'$/;"	v	class:FacetReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGAMBITReader'$/;"	v	class:GambitReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGESignaReader'$/;"	v	class:GESignaReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGLTFReader'$/;"	v	class:GLTFReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGaussianCubeReader'$/;"	v	class:GaussianCubeReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkGenericEnSightReader'$/;"	v	class:EnSightReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkHDFReader'$/;"	v	class:HDFReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkHDRReader'$/;"	v	class:HDRReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkJPEGReader'$/;"	v	class:JPEGReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMCubesReader'$/;"	v	class:BinaryMarchingCubesReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMFIXReader'$/;"	v	class:MFIXReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMINCImageReader'$/;"	v	class:MINCImageReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMetaImageReader'$/;"	v	class:MetaImageReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkMultiBlockPLOT3DReader'$/;"	v	class:MultiBlockPlot3DReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkNIFTIImageReader'$/;"	v	class:NIFTIReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkNek5000Reader'$/;"	v	class:Nek5000Reader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkNrrdReader'$/;"	v	class:NRRDReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkOBJReader'$/;"	v	class:OBJReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkOpenFOAMReader'$/;"	v	class:OpenFOAMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPDBReader'$/;"	v	class:PDBReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPDataSetReader'$/;"	v	class:VTKPDataSetReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPLYReader'$/;"	v	class:PLYReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPNGReader'$/;"	v	class:PNGReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPNMReader'$/;"	v	class:PNMReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPTSReader'$/;"	v	class:PTSReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkParticleReader'$/;"	v	class:ParticleReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkPlot3DMetaReader'$/;"	v	class:Plot3DMetaReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkProStarReader'$/;"	v	class:ProStarReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkSLCReader'$/;"	v	class:SLCReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkSTLReader'$/;"	v	class:STLReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkSegYReader'$/;"	v	class:SegYReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkTIFFReader'$/;"	v	class:TIFFReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkTecplotReader'$/;"	v	class:TecplotReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLImageDataReader'$/;"	v	class:XMLImageDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLMultiBlockDataReader'$/;"	v	class:XMLMultiBlockDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPImageDataReader'$/;"	v	class:XMLPImageDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPRectilinearGridReader'$/;"	v	class:XMLPRectilinearGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPUnstructuredGridReader'$/;"	v	class:XMLPUnstructuredGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPartitionedDataSetReader'$/;"	v	class:XMLPartitionedDataSetReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLPolyDataReader'$/;"	v	class:XMLPolyDataReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLRectilinearGridReader'$/;"	v	class:XMLRectilinearGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLStructuredGridReader'$/;"	v	class:XMLStructuredGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXMLUnstructuredGridReader'$/;"	v	class:XMLUnstructuredGridReader
_vtk_class_name	pyvista/core/utilities/reader.py	/^    _vtk_class_name = 'vtkXdmfReader'$/;"	v	class:XdmfReader
_vtk_core	build/lib/pyvista/core/__init__.py	/^from . import _vtk_core as _vtk_core$/;"	i
_vtk_core	pyvista/core/__init__.py	/^from . import _vtk_core as _vtk_core$/;"	i
_vtk_core	tests/core/test_dataobject_filters.py	/^from pyvista.core import _vtk_core$/;"	i
_vtk_core	tests/core/test_helpers.py	/^from pyvista.core import _vtk_core$/;"	i
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = ''$/;"	v	class:POpenFOAMReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkFiltersHybrid'$/;"	v	class:FacetReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOCGNSReader'$/;"	v	class:CGNSReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOChemistry'$/;"	v	class:GaussianCubeReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOChemistry'$/;"	v	class:PDBReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOEnSight'$/;"	v	class:EnSightReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOExodus'$/;"	v	class:ExodusIIReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOFLUENTCFF'$/;"	v	class:FLUENTCFFReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:AVSucdReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:BYUReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:BinaryMarchingCubesReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:FluentReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:GLTFReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:GambitReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:MFIXReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:OBJReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:OpenFOAMReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:PTSReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:ParticleReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:ProStarReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:STLReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:TecplotReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOHDF'$/;"	v	class:HDFReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:BMPReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:DEMReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:DICOMReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:GESignaReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:HDRReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:JPEGReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:MetaImageReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:NIFTIReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:NRRDReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:PNGReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:PNMReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:SLCReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:TIFFReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOLegacy'$/;"	v	class:VTKDataSetReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOMINC'$/;"	v	class:MINCImageReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOPLY'$/;"	v	class:PLYReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:MultiBlockPlot3DReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:Nek5000Reader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:Plot3DMetaReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:VTKPDataSetReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOSegY'$/;"	v	class:SegYReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLImageDataReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLMultiBlockDataReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPImageDataReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPRectilinearGridReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPUnstructuredGridReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPartitionedDataSetReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPolyDataReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLRectilinearGridReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLStructuredGridReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLUnstructuredGridReader
_vtk_module_name	build/lib/pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXdmf2'$/;"	v	class:XdmfReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = ''$/;"	v	class:POpenFOAMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkFiltersHybrid'$/;"	v	class:FacetReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOCGNSReader'$/;"	v	class:CGNSReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOChemistry'$/;"	v	class:GaussianCubeReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOChemistry'$/;"	v	class:PDBReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOEnSight'$/;"	v	class:EnSightReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOExodus'$/;"	v	class:ExodusIIReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOFLUENTCFF'$/;"	v	class:FLUENTCFFReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:AVSucdReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:BYUReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:BinaryMarchingCubesReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:FluentReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:GLTFReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:GambitReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:MFIXReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:OBJReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:OpenFOAMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:PTSReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:ParticleReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:ProStarReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:STLReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOGeometry'$/;"	v	class:TecplotReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOHDF'$/;"	v	class:HDFReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:BMPReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:DEMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:DICOMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:GESignaReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:HDRReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:JPEGReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:MetaImageReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:NIFTIReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:NRRDReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:PNGReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:PNMReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:SLCReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOImage'$/;"	v	class:TIFFReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOLegacy'$/;"	v	class:VTKDataSetReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOMINC'$/;"	v	class:MINCImageReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOPLY'$/;"	v	class:PLYReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:MultiBlockPlot3DReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:Nek5000Reader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:Plot3DMetaReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOParallel'$/;"	v	class:VTKPDataSetReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOSegY'$/;"	v	class:SegYReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLImageDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLMultiBlockDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPImageDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPRectilinearGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPUnstructuredGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPartitionedDataSetReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLPolyDataReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLRectilinearGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLStructuredGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXML'$/;"	v	class:XMLUnstructuredGridReader
_vtk_module_name	pyvista/core/utilities/reader.py	/^    _vtk_module_name = 'vtkIOXdmf2'$/;"	v	class:XdmfReader
_warn_multiblock_nested_field_data	build/lib/pyvista/core/dataobject.py	/^        def _warn_multiblock_nested_field_data(mesh: pyvista.MultiBlock) -> None:$/;"	f	function:DataObject.save
_warn_multiblock_nested_field_data	pyvista/core/dataobject.py	/^        def _warn_multiblock_nested_field_data(mesh: pyvista.MultiBlock) -> None:$/;"	f	function:DataObject.save
_warn_xserver	build/lib/pyvista/plotting/plotter.py	/^def _warn_xserver():  # pragma: no cover$/;"	f
_warn_xserver	pyvista/plotting/plotter.py	/^def _warn_xserver():  # pragma: no cover$/;"	f
_wrap_member	build/lib/pyvista/plotting/charts.py	/^    def _wrap_member(member):$/;"	m	class:DocSubs
_wrap_member	pyvista/plotting/charts.py	/^    def _wrap_member(member):$/;"	m	class:DocSubs
_wrappers	build/lib/pyvista/__init__.py	/^from pyvista.core.wrappers import _wrappers as _wrappers$/;"	i
_wrappers	build/lib/pyvista/core/__init__.py	/^from .wrappers import _wrappers as _wrappers$/;"	i
_wrappers	build/lib/pyvista/core/wrappers.py	/^_wrappers = {$/;"	v
_wrappers	pyvista/__init__.py	/^from pyvista.core.wrappers import _wrappers as _wrappers$/;"	i
_wrappers	pyvista/core/__init__.py	/^from .wrappers import _wrappers as _wrappers$/;"	i
_wrappers	pyvista/core/wrappers.py	/^_wrappers = {$/;"	v
_write_vtk	build/lib/pyvista/core/dataobject.py	/^        def _write_vtk(mesh_: DataObject) -> None:$/;"	f	function:DataObject.save
_write_vtk	pyvista/core/dataobject.py	/^        def _write_vtk(mesh_: DataObject) -> None:$/;"	f	function:DataObject.save
a	examples/01-filter/flying_edges.py	/^a = 0.9$/;"	v
a	examples/01-filter/geodesic.py	/^a = land.geodesic(cape_town, dubai)$/;"	v
a	examples/01-filter/slicing.py	/^a = mesh.center + normal * mesh.length \/ 3.0$/;"	v
a	examples/02-plot/plot_over_circular_arc.py	/^a = arc.points[0]$/;"	v
a	examples/02-plot/plot_over_line.py	/^a = [mesh.bounds.x_min, mesh.bounds.y_min, mesh.bounds.z_min]$/;"	v
a	examples/02-plot/plot_over_line.py	/^a = [mesh.center[0], mesh.bounds.y_min, mesh.bounds.z_max]$/;"	v
a	examples/99-advanced/antarctica_compare.py	/^a = extract_node(12)$/;"	v
a	examples/99-advanced/fea_hertzian_contact_pressure.py	/^a = [0.1, ypos, 0.2 - 1e-4]$/;"	v
a_part	build/lib/pyvista/demos/logo.py	/^    a_part = grid.extract_cells(mask)$/;"	v
a_part	pyvista/demos/logo.py	/^    a_part = grid.extract_cells(mask)$/;"	v
above_color	examples/01-filter/connectivity.py	/^    above_color='red',$/;"	v
above_color	examples/01-filter/mesh_quality.py	/^    above_color='red',$/;"	v
above_range_color	build/lib/pyvista/plotting/lookup_table.py	/^    def above_range_color(self) -> Color | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
above_range_color	build/lib/pyvista/plotting/lookup_table.py	/^    def above_range_color(self, value: bool | ColorLike | None):$/;"	m	class:LookupTable
above_range_color	build/lib/pyvista/plotting/themes.py	/^    def above_range_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
above_range_color	build/lib/pyvista/plotting/themes.py	/^    def above_range_color(self, value: ColorLike):$/;"	m	class:Theme
above_range_color	pyvista/plotting/lookup_table.py	/^    def above_range_color(self) -> Color | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
above_range_color	pyvista/plotting/lookup_table.py	/^    def above_range_color(self, value: bool | ColorLike | None):$/;"	m	class:LookupTable
above_range_color	pyvista/plotting/themes.py	/^    def above_range_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
above_range_color	pyvista/plotting/themes.py	/^    def above_range_color(self, value: ColorLike):$/;"	m	class:Theme
above_range_opacity	build/lib/pyvista/plotting/lookup_table.py	/^    def above_range_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
above_range_opacity	build/lib/pyvista/plotting/lookup_table.py	/^    def above_range_opacity(self, value):$/;"	m	class:LookupTable
above_range_opacity	pyvista/plotting/lookup_table.py	/^    def above_range_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
above_range_opacity	pyvista/plotting/lookup_table.py	/^    def above_range_opacity(self, value):$/;"	m	class:LookupTable
absolute	examples_trame/basic/file_viewer.py	/^            absolute=True,$/;"	v
abstract_class	build/lib/pyvista/core/dataobject.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/dataset.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/filters/composite.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/filters/structured_grid.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/grid.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/pointset.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import abstract_class as abstract_class$/;"	i
abstract_class	build/lib/pyvista/core/utilities/misc.py	/^def abstract_class(cls_):  # noqa: ANN001, ANN201 # numpydoc ignore=RT01$/;"	f
abstract_class	build/lib/pyvista/core/utilities/reader.py	/^from .misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/dataobject.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/dataset.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/filters/composite.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/filters/rectilinear_grid.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/filters/structured_grid.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/filters/unstructured_grid.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/grid.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/pointset.py	/^from .utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/core/utilities/__init__.py	/^from .misc import abstract_class as abstract_class$/;"	i
abstract_class	pyvista/core/utilities/misc.py	/^def abstract_class(cls_):  # noqa: ANN001, ANN201 # numpydoc ignore=RT01$/;"	f
abstract_class	pyvista/core/utilities/reader.py	/^from .misc import abstract_class$/;"	i
abstract_class	pyvista/plotting/mapper.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.misc import abstract_class$/;"	i
abstract_class	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import abstract_class  # noqa: F401$/;"	i
abstractmethod	build/lib/pyvista/core/dataobject.py	/^from abc import abstractmethod$/;"	i
abstractmethod	build/lib/pyvista/core/utilities/reader.py	/^from abc import abstractmethod$/;"	i
abstractmethod	build/lib/pyvista/examples/_dataset_loader.py	/^from abc import abstractmethod$/;"	i
abstractmethod	build/lib/pyvista/plotting/axes_assembly.py	/^from abc import abstractmethod$/;"	i
abstractmethod	build/lib/pyvista/plotting/prop3d.py	/^from abc import abstractmethod$/;"	i
abstractmethod	doc/source/make_tables.py	/^from abc import abstractmethod$/;"	i
abstractmethod	pyvista/core/dataobject.py	/^from abc import abstractmethod$/;"	i
abstractmethod	pyvista/core/utilities/reader.py	/^from abc import abstractmethod$/;"	i
abstractmethod	pyvista/examples/_dataset_loader.py	/^from abc import abstractmethod$/;"	i
abstractmethod	pyvista/plotting/axes_assembly.py	/^from abc import abstractmethod$/;"	i
abstractmethod	pyvista/plotting/prop3d.py	/^from abc import abstractmethod$/;"	i
action	tests/check_doctest_names.py	/^        action='store_false',$/;"	v
action	tests/check_doctest_names.py	/^        action='store_true',$/;"	v
active	examples_trame/basic/file_viewer.py	/^            active=('trame__busy',),$/;"	v
active_background_color	build/lib/pyvista/plotting/charts.py	/^    def active_background_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
active_background_color	build/lib/pyvista/plotting/charts.py	/^    def active_background_color(self, val) -> None:$/;"	m	class:_Chart
active_background_color	pyvista/plotting/charts.py	/^    def active_background_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
active_background_color	pyvista/plotting/charts.py	/^    def active_background_color(self, val) -> None:$/;"	m	class:_Chart
active_border_color	build/lib/pyvista/plotting/charts.py	/^    def active_border_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
active_border_color	build/lib/pyvista/plotting/charts.py	/^    def active_border_color(self, val) -> None:$/;"	m	class:_Chart
active_border_color	pyvista/plotting/charts.py	/^    def active_border_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
active_border_color	pyvista/plotting/charts.py	/^    def active_border_color(self, val) -> None:$/;"	m	class:_Chart
active_component_consistency_check	tests/core/test_dataset.py	/^def active_component_consistency_check(grid, component_type, field_association='point'):$/;"	f
active_datasets	build/lib/pyvista/core/utilities/reader.py	/^    def active_datasets(self):$/;"	m	class:PVDReader
active_datasets	pyvista/core/utilities/reader.py	/^    def active_datasets(self):$/;"	m	class:PVDReader
active_index	build/lib/pyvista/plotting/renderers.py	/^    def active_index(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
active_index	pyvista/plotting/renderers.py	/^    def active_index(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
active_normals	build/lib/pyvista/core/dataset.py	/^    def active_normals(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_normals	build/lib/pyvista/core/datasetattributes.py	/^    def active_normals(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_normals	build/lib/pyvista/core/datasetattributes.py	/^    def active_normals(self: Self, normals: MatrixLike[float]) -> None:$/;"	m	class:DataSetAttributes
active_normals	pyvista/core/dataset.py	/^    def active_normals(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_normals	pyvista/core/datasetattributes.py	/^    def active_normals(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_normals	pyvista/core/datasetattributes.py	/^    def active_normals(self: Self, normals: MatrixLike[float]) -> None:$/;"	m	class:DataSetAttributes
active_normals_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_normals_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_normals_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_normals_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
active_normals_name	pyvista/core/datasetattributes.py	/^    def active_normals_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_normals_name	pyvista/core/datasetattributes.py	/^    def active_normals_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
active_readers	build/lib/pyvista/core/utilities/reader.py	/^    def active_readers(self):$/;"	m	class:PVDReader
active_readers	pyvista/core/utilities/reader.py	/^    def active_readers(self):$/;"	m	class:PVDReader
active_renderer	build/lib/pyvista/plotting/renderers.py	/^    def active_renderer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
active_renderer	pyvista/plotting/renderers.py	/^    def active_renderer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
active_scalars	build/lib/pyvista/core/dataset.py	/^    def active_scalars(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_scalars	build/lib/pyvista/core/datasetattributes.py	/^    def active_scalars(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_scalars	pyvista/core/dataset.py	/^    def active_scalars(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_scalars	pyvista/core/datasetattributes.py	/^    def active_scalars(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_scalars_algorithm	build/lib/pyvista/plotting/plotter.py	/^from .utilities.algorithms import active_scalars_algorithm$/;"	i
active_scalars_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import active_scalars_algorithm as active_scalars_algorithm$/;"	i
active_scalars_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def active_scalars_algorithm(inp, name, preference='point'):$/;"	f
active_scalars_algorithm	pyvista/plotting/plotter.py	/^from .utilities.algorithms import active_scalars_algorithm$/;"	i
active_scalars_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import active_scalars_algorithm as active_scalars_algorithm$/;"	i
active_scalars_algorithm	pyvista/plotting/utilities/algorithms.py	/^def active_scalars_algorithm(inp, name, preference='point'):$/;"	f
active_scalars_info	build/lib/pyvista/core/dataset.py	/^    def active_scalars_info(self: Self) -> ActiveArrayInfoTuple:$/;"	m	class:DataSet
active_scalars_info	pyvista/core/dataset.py	/^    def active_scalars_info(self: Self) -> ActiveArrayInfoTuple:$/;"	m	class:DataSet
active_scalars_name	build/lib/pyvista/core/dataset.py	/^    def active_scalars_name(self: Self) -> str | None:$/;"	m	class:DataSet
active_scalars_name	build/lib/pyvista/core/dataset.py	/^    def active_scalars_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSet
active_scalars_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_scalars_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_scalars_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_scalars_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
active_scalars_name	pyvista/core/dataset.py	/^    def active_scalars_name(self: Self) -> str | None:$/;"	m	class:DataSet
active_scalars_name	pyvista/core/dataset.py	/^    def active_scalars_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSet
active_scalars_name	pyvista/core/datasetattributes.py	/^    def active_scalars_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_scalars_name	pyvista/core/datasetattributes.py	/^    def active_scalars_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
active_t_coords	build/lib/pyvista/core/dataset.py	/^    def active_t_coords(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_t_coords	build/lib/pyvista/core/dataset.py	/^    def active_t_coords(self: Self, t_coords: NumpyArray[float]) -> None:$/;"	m	class:DataSet
active_t_coords	build/lib/pyvista/core/datasetattributes.py	/^    def active_t_coords(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_t_coords	build/lib/pyvista/core/datasetattributes.py	/^    def active_t_coords(self: Self, t_coords: NumpyArray[float]) -> None:$/;"	m	class:DataSetAttributes
active_t_coords	pyvista/core/dataset.py	/^    def active_t_coords(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_t_coords	pyvista/core/dataset.py	/^    def active_t_coords(self: Self, t_coords: NumpyArray[float]) -> None:$/;"	m	class:DataSet
active_t_coords	pyvista/core/datasetattributes.py	/^    def active_t_coords(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_t_coords	pyvista/core/datasetattributes.py	/^    def active_t_coords(self: Self, t_coords: NumpyArray[float]) -> None:$/;"	m	class:DataSetAttributes
active_t_coords_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_t_coords_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_t_coords_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_t_coords_name(self: Self, name: str) -> None:$/;"	m	class:DataSetAttributes
active_t_coords_name	pyvista/core/datasetattributes.py	/^    def active_t_coords_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_t_coords_name	pyvista/core/datasetattributes.py	/^    def active_t_coords_name(self: Self, name: str) -> None:$/;"	m	class:DataSetAttributes
active_tensors	build/lib/pyvista/core/dataset.py	/^    def active_tensors(self: Self) -> NumpyArray[float] | None:$/;"	m	class:DataSet
active_tensors	pyvista/core/dataset.py	/^    def active_tensors(self: Self) -> NumpyArray[float] | None:$/;"	m	class:DataSet
active_tensors_info	build/lib/pyvista/core/dataset.py	/^    def active_tensors_info(self: Self) -> ActiveArrayInfoTuple:$/;"	m	class:DataSet
active_tensors_info	pyvista/core/dataset.py	/^    def active_tensors_info(self: Self) -> ActiveArrayInfoTuple:$/;"	m	class:DataSet
active_tensors_name	build/lib/pyvista/core/dataset.py	/^    def active_tensors_name(self: Self) -> str | None:$/;"	m	class:DataSet
active_tensors_name	build/lib/pyvista/core/dataset.py	/^    def active_tensors_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSet
active_tensors_name	pyvista/core/dataset.py	/^    def active_tensors_name(self: Self) -> str | None:$/;"	m	class:DataSet
active_tensors_name	pyvista/core/dataset.py	/^    def active_tensors_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSet
active_texture_coordinates	build/lib/pyvista/core/dataset.py	/^    def active_texture_coordinates($/;"	m	class:DataSet
active_texture_coordinates	build/lib/pyvista/core/dataset.py	/^    def active_texture_coordinates(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_texture_coordinates	build/lib/pyvista/core/datasetattributes.py	/^    def active_texture_coordinates($/;"	m	class:DataSetAttributes
active_texture_coordinates	build/lib/pyvista/core/datasetattributes.py	/^    def active_texture_coordinates(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_texture_coordinates	pyvista/core/dataset.py	/^    def active_texture_coordinates($/;"	m	class:DataSet
active_texture_coordinates	pyvista/core/dataset.py	/^    def active_texture_coordinates(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_texture_coordinates	pyvista/core/datasetattributes.py	/^    def active_texture_coordinates($/;"	m	class:DataSetAttributes
active_texture_coordinates	pyvista/core/datasetattributes.py	/^    def active_texture_coordinates(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
active_texture_coordinates_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_texture_coordinates_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_texture_coordinates_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_texture_coordinates_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
active_texture_coordinates_name	pyvista/core/datasetattributes.py	/^    def active_texture_coordinates_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_texture_coordinates_name	pyvista/core/datasetattributes.py	/^    def active_texture_coordinates_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_point(self):$/;"	m	class:Nek5000Reader
active_time_point	pyvista/core/utilities/reader.py	/^    def active_time_point(self):$/;"	m	class:Nek5000Reader
active_time_set	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_set(self) -> int:$/;"	m	class:EnSightReader
active_time_set	pyvista/core/utilities/reader.py	/^    def active_time_set(self) -> int:$/;"	m	class:EnSightReader
active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:EnSightReader
active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:OpenFOAMReader
active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:PVDReader
active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:XdmfReader
active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_value(self):$/;"	m	class:ExodusIIReader
active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_value(self):$/;"	m	class:Nek5000Reader
active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def active_time_value(self):$/;"	m	class:TimeReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:EnSightReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:OpenFOAMReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:PVDReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):  # noqa: D102$/;"	m	class:XdmfReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):$/;"	m	class:ExodusIIReader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):$/;"	m	class:Nek5000Reader
active_time_value	pyvista/core/utilities/reader.py	/^    def active_time_value(self):$/;"	m	class:TimeReader
active_vectors	build/lib/pyvista/core/dataset.py	/^    def active_vectors(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_vectors	build/lib/pyvista/core/datasetattributes.py	/^    def active_vectors(self: Self) -> NumpyArray[float] | None:$/;"	m	class:DataSetAttributes
active_vectors	pyvista/core/dataset.py	/^    def active_vectors(self: Self) -> pyvista_ndarray | None:$/;"	m	class:DataSet
active_vectors	pyvista/core/datasetattributes.py	/^    def active_vectors(self: Self) -> NumpyArray[float] | None:$/;"	m	class:DataSetAttributes
active_vectors_info	build/lib/pyvista/core/dataset.py	/^    def active_vectors_info(self: Self) -> ActiveArrayInfoTuple:$/;"	m	class:DataSet
active_vectors_info	pyvista/core/dataset.py	/^    def active_vectors_info(self: Self) -> ActiveArrayInfoTuple:$/;"	m	class:DataSet
active_vectors_name	build/lib/pyvista/core/dataset.py	/^    def active_vectors_name(self: Self) -> str | None:$/;"	m	class:DataSet
active_vectors_name	build/lib/pyvista/core/dataset.py	/^    def active_vectors_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSet
active_vectors_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_vectors_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_vectors_name	build/lib/pyvista/core/datasetattributes.py	/^    def active_vectors_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
active_vectors_name	pyvista/core/dataset.py	/^    def active_vectors_name(self: Self) -> str | None:$/;"	m	class:DataSet
active_vectors_name	pyvista/core/dataset.py	/^    def active_vectors_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSet
active_vectors_name	pyvista/core/datasetattributes.py	/^    def active_vectors_name(self: Self) -> str | None:$/;"	m	class:DataSetAttributes
active_vectors_name	pyvista/core/datasetattributes.py	/^    def active_vectors_name(self: Self, name: str | None) -> None:$/;"	m	class:DataSetAttributes
actor	build/lib/pyvista/plotting/tools.py	/^        actor = axes_actor  # type: ignore[assignment]$/;"	v
actor	build/lib/pyvista/plotting/tools.py	/^        actor = prop_assembly$/;"	v
actor	examples/02-plot/backface_props.py	/^actor = plotter.add_mesh(catalan, color='dodgerblue', smooth_shading=True)$/;"	v
actor	examples/02-plot/background_image.py	/^actor = pl.add_mesh(earth_alt, cmap='gist_earth')$/;"	v
actor	examples/02-plot/background_image.py	/^actor = pl.add_mesh(examples.load_airplane(), smooth_shading=True)$/;"	v
actor	examples/02-plot/background_image.py	/^actor = pl.add_mesh(topo, cmap='gist_earth')$/;"	v
actor	examples/02-plot/clear.py	/^actor = plotter.add_mesh(pv.Sphere())$/;"	v
actor	examples/02-plot/lookup_table.py	/^actor = pl.add_mesh(bracket)$/;"	v
actor	examples/02-plot/lookup_table.py	/^actor = pl.add_mesh(bracket, cmap=lut, lighting=False)$/;"	v
actor	examples/02-plot/point_clouds.py	/^actor = pl.add_points($/;"	v
actor	examples/02-plot/points_gaussian_scale.py	/^actor = pl.add_mesh($/;"	v
actor	examples/02-plot/texture.py	/^actor = plotter.add_mesh(mesh, smooth_shading=True, color='white')$/;"	v
actor	examples/03-widgets/animation.py	/^actor = pl.add_mesh(sphere)$/;"	v
actor	examples/03-widgets/checkbox_widget.py	/^actor = p.add_mesh(mesh)$/;"	v
actor	examples/99-advanced/add_example.py	/^actor = pl.add_mesh(dataset)$/;"	v
actor	examples/99-advanced/add_example.py	/^actor = pl.add_mesh(sphere)$/;"	v
actor	examples_trame/advanced/contour.py	/^actor = pl.add_mesh(contour, cmap='viridis', clim=data_range)$/;"	v
actor	examples_trame/advanced/custom_ui.py	/^actor = plotter.add_mesh(mesh, cmap='viridis')$/;"	v
actor	examples_trame/basic/PyVistaLocalView.py	/^actor = plotter.add_mesh(mesh)$/;"	v
actor	examples_trame/basic/PyVistaRemoteLocalView.py	/^actor = plotter.add_mesh(mesh, cmap='viridis')$/;"	v
actor	examples_trame/basic/PyVistaRemoteView.py	/^actor = plotter.add_mesh(mesh, cmap='viridis')$/;"	v
actor	examples_trame/basic/actor_color.py	/^actor = pl.add_mesh(mesh, color='seagreen')$/;"	v
actor	examples_trame/basic/mesh_scalars.py	/^actor = pl.add_mesh(mesh)$/;"	v
actor	examples_trame/basic/ui_template.py	/^actor = plotter.add_mesh(mesh, cmap='viridis')$/;"	v
actor	examples_trame/validation/many_actors.py	/^        actor = plotter.add_mesh(pv.Sphere(center=(i, j, 0)))$/;"	v
actor	pyvista/plotting/tools.py	/^        actor = axes_actor  # type: ignore[assignment]$/;"	v
actor	pyvista/plotting/tools.py	/^        actor = prop_assembly$/;"	v
actor	tests/plotting/test_actor.py	/^def actor():$/;"	f
actor	tests/plotting/test_plotting.py	/^actor = pv.Actor()$/;"	v
actor_from_multi_block	tests/plotting/test_actor.py	/^def actor_from_multi_block():$/;"	f
actors	build/lib/pyvista/plotting/plotter.py	/^    def actors(self) -> dict[str, _vtk.vtkProp]:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
actors	build/lib/pyvista/plotting/renderer.py	/^    def actors(self) -> dict[str, _vtk.vtkProp]:  # numpydoc ignore=RT01$/;"	m	class:Renderer
actors	build/lib/pyvista/trame/ui/base_viewer.py	/^    def actors(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
actors	examples/02-plot/volume.py	/^actors = pl.add_volume(bolt_nut, cmap='coolwarm', opacity='sigmoid_5', show_scalar_bar=False)$/;"	v
actors	pyvista/plotting/plotter.py	/^    def actors(self) -> dict[str, _vtk.vtkProp]:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
actors	pyvista/plotting/renderer.py	/^    def actors(self) -> dict[str, _vtk.vtkProp]:  # numpydoc ignore=RT01$/;"	m	class:Renderer
actors	pyvista/trame/ui/base_viewer.py	/^    def actors(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
actual_memory_size	build/lib/pyvista/core/dataobject.py	/^    def actual_memory_size(self: Self) -> int:$/;"	m	class:DataObject
actual_memory_size	pyvista/core/dataobject.py	/^    def actual_memory_size(self: Self) -> int:$/;"	m	class:DataObject
add_actor	build/lib/pyvista/plotting/plotter.py	/^    def add_actor(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_actor	build/lib/pyvista/plotting/renderer.py	/^    def add_actor($/;"	m	class:Renderer
add_actor	pyvista/plotting/plotter.py	/^    def add_actor(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_actor	pyvista/plotting/renderer.py	/^    def add_actor($/;"	m	class:Renderer
add_affine_transform_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_affine_transform_widget($/;"	m	class:WidgetHelper
add_affine_transform_widget	pyvista/plotting/widgets.py	/^    def add_affine_transform_widget($/;"	m	class:WidgetHelper
add_arrows	build/lib/pyvista/plotting/plotter.py	/^    def add_arrows(self, cent, direction, mag=1, **kwargs) -> Actor:$/;"	m	class:BasePlotter
add_arrows	pyvista/plotting/plotter.py	/^    def add_arrows(self, cent, direction, mag=1, **kwargs) -> Actor:$/;"	m	class:BasePlotter
add_axes	build/lib/pyvista/plotting/plotter.py	/^    def add_axes($/;"	m	class:BasePlotter
add_axes	build/lib/pyvista/plotting/renderer.py	/^    def add_axes($/;"	m	class:Renderer
add_axes	pyvista/plotting/plotter.py	/^    def add_axes($/;"	m	class:BasePlotter
add_axes	pyvista/plotting/renderer.py	/^    def add_axes($/;"	m	class:Renderer
add_axes_at_origin	build/lib/pyvista/plotting/plotter.py	/^    def add_axes_at_origin(self, *args, **kwargs) -> _vtk.vtkAxesActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_axes_at_origin	build/lib/pyvista/plotting/renderer.py	/^    def add_axes_at_origin($/;"	m	class:Renderer
add_axes_at_origin	pyvista/plotting/plotter.py	/^    def add_axes_at_origin(self, *args, **kwargs) -> _vtk.vtkAxesActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_axes_at_origin	pyvista/plotting/renderer.py	/^    def add_axes_at_origin($/;"	m	class:Renderer
add_background_image	build/lib/pyvista/plotting/plotter.py	/^    def add_background_image(self, image_path, scale=1.0, auto_resize=True, as_global=True):$/;"	m	class:BasePlotter
add_background_image	pyvista/plotting/plotter.py	/^    def add_background_image(self, image_path, scale=1.0, auto_resize=True, as_global=True):$/;"	m	class:BasePlotter
add_background_renderer	build/lib/pyvista/plotting/renderers.py	/^    def add_background_renderer(self, image_path, scale, as_global):$/;"	m	class:Renderers
add_background_renderer	pyvista/plotting/renderers.py	/^    def add_background_renderer(self, image_path, scale, as_global):$/;"	m	class:Renderers
add_badge	doc/source/make_tables.py	/^    def add_badge(self, badge: _BaseDatasetBadge):$/;"	m	class:DatasetCard
add_badge_to_cards	doc/source/make_tables.py	/^    def add_badge_to_cards(cls, dataset_names: list[str], badge: _BaseDatasetBadge | None):$/;"	m	class:DatasetCardFetcher
add_blur_pass	build/lib/pyvista/plotting/render_passes.py	/^    def add_blur_pass(self):$/;"	m	class:RenderPasses
add_blur_pass	pyvista/plotting/render_passes.py	/^    def add_blur_pass(self):$/;"	m	class:RenderPasses
add_blurring	build/lib/pyvista/plotting/plotter.py	/^    def add_blurring(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_blurring	build/lib/pyvista/plotting/renderer.py	/^    def add_blurring(self) -> None:$/;"	m	class:Renderer
add_blurring	pyvista/plotting/plotter.py	/^    def add_blurring(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_blurring	pyvista/plotting/renderer.py	/^    def add_blurring(self) -> None:$/;"	m	class:Renderer
add_border	build/lib/pyvista/plotting/renderer.py	/^    def add_border(self, color='white', width=2.0):$/;"	m	class:Renderer
add_border	pyvista/plotting/renderer.py	/^    def add_border(self, color='white', width=2.0):$/;"	m	class:Renderer
add_bounding_box	build/lib/pyvista/plotting/plotter.py	/^    def add_bounding_box(self, *args, **kwargs) -> Actor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_bounding_box	build/lib/pyvista/plotting/renderer.py	/^    def add_bounding_box($/;"	m	class:Renderer
add_bounding_box	pyvista/plotting/plotter.py	/^    def add_bounding_box(self, *args, **kwargs) -> Actor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_bounding_box	pyvista/plotting/renderer.py	/^    def add_bounding_box($/;"	m	class:Renderer
add_box_axes	build/lib/pyvista/plotting/plotter.py	/^    def add_box_axes($/;"	m	class:BasePlotter
add_box_axes	build/lib/pyvista/plotting/renderer.py	/^    def add_box_axes($/;"	m	class:Renderer
add_box_axes	pyvista/plotting/plotter.py	/^    def add_box_axes($/;"	m	class:BasePlotter
add_box_axes	pyvista/plotting/renderer.py	/^    def add_box_axes($/;"	m	class:Renderer
add_box_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_box_widget($/;"	m	class:WidgetHelper
add_box_widget	pyvista/plotting/widgets.py	/^    def add_box_widget($/;"	m	class:WidgetHelper
add_camera3d_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_camera3d_widget(self):$/;"	m	class:WidgetHelper
add_camera3d_widget	pyvista/plotting/widgets.py	/^    def add_camera3d_widget(self):$/;"	m	class:WidgetHelper
add_camera_orientation_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_camera_orientation_widget(self, animate: bool = True, n_frames=20):$/;"	m	class:WidgetHelper
add_camera_orientation_widget	pyvista/plotting/widgets.py	/^    def add_camera_orientation_widget(self, animate: bool = True, n_frames=20):$/;"	m	class:WidgetHelper
add_cell_badges_to_all_cards	doc/source/make_tables.py	/^    def add_cell_badges_to_all_cards(cls):$/;"	m	class:DatasetCardFetcher
add_cell_helper	examples/00-load/linear_cells.py	/^def add_cell_helper(pl, text, grid, subplot, cpos=None):$/;"	f
add_chart	build/lib/pyvista/plotting/charts.py	/^    def add_chart(self, *charts) -> None:$/;"	m	class:Charts
add_chart	build/lib/pyvista/plotting/plotter.py	/^    def add_chart(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_chart	build/lib/pyvista/plotting/renderer.py	/^    def add_chart(self, chart, *charts):$/;"	m	class:Renderer
add_chart	pyvista/plotting/charts.py	/^    def add_chart(self, *charts) -> None:$/;"	m	class:Charts
add_chart	pyvista/plotting/plotter.py	/^    def add_chart(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_chart	pyvista/plotting/renderer.py	/^    def add_chart(self, chart, *charts):$/;"	m	class:Renderer
add_checkbox_button_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_checkbox_button_widget($/;"	m	class:WidgetHelper
add_checkbox_button_widget	pyvista/plotting/widgets.py	/^    def add_checkbox_button_widget($/;"	m	class:WidgetHelper
add_component_to_labeled_data	tests/core/test_dataset_filters.py	/^def add_component_to_labeled_data(labeled_data, offset):$/;"	f
add_composite	build/lib/pyvista/plotting/plotter.py	/^    def add_composite($/;"	m	class:BasePlotter
add_composite	pyvista/plotting/plotter.py	/^    def add_composite($/;"	m	class:BasePlotter
add_cursor	build/lib/pyvista/plotting/plotter.py	/^    def add_cursor($/;"	m	class:Plotter
add_cursor	pyvista/plotting/plotter.py	/^    def add_cursor($/;"	m	class:Plotter
add_field_data	build/lib/pyvista/core/dataobject.py	/^    def add_field_data(self: Self, array: NumpyArray[float], name: str, deep: bool = True) -> None:$/;"	m	class:DataObject
add_field_data	pyvista/core/dataobject.py	/^    def add_field_data(self: Self, array: NumpyArray[float], name: str, deep: bool = True) -> None:$/;"	m	class:DataObject
add_floor	build/lib/pyvista/plotting/plotter.py	/^    def add_floor(self, *args, **kwargs) -> Actor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_floor	build/lib/pyvista/plotting/renderer.py	/^    def add_floor($/;"	m	class:Renderer
add_floor	pyvista/plotting/plotter.py	/^    def add_floor(self, *args, **kwargs) -> Actor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_floor	pyvista/plotting/renderer.py	/^    def add_floor($/;"	m	class:Renderer
add_function	build/lib/pyvista/core/utilities/reader.py	/^    def add_function(self, value: int | Plot3DFunctionEnum) -> None:$/;"	m	class:MultiBlockPlot3DReader
add_function	pyvista/core/utilities/reader.py	/^    def add_function(self, value: int | Plot3DFunctionEnum) -> None:$/;"	m	class:MultiBlockPlot3DReader
add_ids_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import add_ids_algorithm as add_ids_algorithm$/;"	i
add_ids_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def add_ids_algorithm(inp, point_ids: bool = True, cell_ids: bool = True):$/;"	f
add_ids_algorithm	build/lib/pyvista/plotting/widgets.py	/^from .utilities.algorithms import add_ids_algorithm$/;"	i
add_ids_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import add_ids_algorithm as add_ids_algorithm$/;"	i
add_ids_algorithm	pyvista/plotting/utilities/algorithms.py	/^def add_ids_algorithm(inp, point_ids: bool = True, cell_ids: bool = True):$/;"	f
add_ids_algorithm	pyvista/plotting/widgets.py	/^from .utilities.algorithms import add_ids_algorithm$/;"	i
add_ids_algorithm	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import add_ids_algorithm  # noqa: F401$/;"	i
add_key_event	build/lib/pyvista/plotting/plotter.py	/^    def add_key_event(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_key_event	build/lib/pyvista/plotting/render_window_interactor.py	/^    def add_key_event(self, key, callback):$/;"	m	class:RenderWindowInteractor
add_key_event	pyvista/plotting/plotter.py	/^    def add_key_event(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_key_event	pyvista/plotting/render_window_interactor.py	/^    def add_key_event(self, key, callback):$/;"	m	class:RenderWindowInteractor
add_legend	build/lib/pyvista/plotting/plotter.py	/^    def add_legend(self, *args, **kwargs) -> _vtk.vtkLegendBoxActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_legend	build/lib/pyvista/plotting/renderer.py	/^    def add_legend($/;"	m	class:Renderer
add_legend	pyvista/plotting/plotter.py	/^    def add_legend(self, *args, **kwargs) -> _vtk.vtkLegendBoxActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_legend	pyvista/plotting/renderer.py	/^    def add_legend($/;"	m	class:Renderer
add_legend_scale	build/lib/pyvista/plotting/plotter.py	/^    def add_legend_scale($/;"	m	class:BasePlotter
add_legend_scale	build/lib/pyvista/plotting/renderer.py	/^    def add_legend_scale($/;"	m	class:Renderer
add_legend_scale	pyvista/plotting/plotter.py	/^    def add_legend_scale($/;"	m	class:BasePlotter
add_legend_scale	pyvista/plotting/renderer.py	/^    def add_legend_scale($/;"	m	class:Renderer
add_light	build/lib/pyvista/plotting/plotter.py	/^    def add_light(self, light, only_active=False) -> None:$/;"	m	class:BasePlotter
add_light	build/lib/pyvista/plotting/renderer.py	/^    def add_light(self, light):$/;"	m	class:Renderer
add_light	pyvista/plotting/plotter.py	/^    def add_light(self, light, only_active=False) -> None:$/;"	m	class:BasePlotter
add_light	pyvista/plotting/renderer.py	/^    def add_light(self, light):$/;"	m	class:Renderer
add_line_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_line_widget($/;"	m	class:WidgetHelper
add_line_widget	pyvista/plotting/widgets.py	/^    def add_line_widget($/;"	m	class:WidgetHelper
add_lines	build/lib/pyvista/plotting/plotter.py	/^    def add_lines(self, lines, color='w', width=5, label=None, name=None, connected=False) -> Actor:$/;"	m	class:BasePlotter
add_lines	pyvista/plotting/plotter.py	/^    def add_lines(self, lines, color='w', width=5, label=None, name=None, connected=False) -> Actor:$/;"	m	class:BasePlotter
add_logo_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_logo_widget($/;"	m	class:WidgetHelper
add_logo_widget	pyvista/plotting/widgets.py	/^    def add_logo_widget($/;"	m	class:WidgetHelper
add_measurement_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_measurement_widget($/;"	m	class:WidgetHelper
add_measurement_widget	pyvista/plotting/widgets.py	/^    def add_measurement_widget($/;"	m	class:WidgetHelper
add_menu	build/lib/pyvista/trame/jupyter.py	/^        add_menu=add_menu,$/;"	v
add_menu	build/lib/pyvista/trame/ui/__init__.py	/^        add_menu=add_menu,$/;"	v
add_menu	pyvista/trame/jupyter.py	/^        add_menu=add_menu,$/;"	v
add_menu	pyvista/trame/ui/__init__.py	/^        add_menu=add_menu,$/;"	v
add_menu_items	build/lib/pyvista/trame/jupyter.py	/^        add_menu_items=add_menu_items,$/;"	v
add_menu_items	pyvista/trame/jupyter.py	/^        add_menu_items=add_menu_items,$/;"	v
add_mesh	build/lib/pyvista/plotting/plotter.py	/^    def add_mesh($/;"	m	class:BasePlotter
add_mesh	examples/01-filter/mesh_quality.py	/^def add_mesh(plotter, mesh, scalars=None, cmap='bwr', show_edges=True):$/;"	f
add_mesh	pyvista/plotting/plotter.py	/^    def add_mesh($/;"	m	class:BasePlotter
add_mesh_clip_box	build/lib/pyvista/plotting/widgets.py	/^    def add_mesh_clip_box($/;"	m	class:WidgetHelper
add_mesh_clip_box	pyvista/plotting/widgets.py	/^    def add_mesh_clip_box($/;"	m	class:WidgetHelper
add_mesh_clip_plane	build/lib/pyvista/plotting/widgets.py	/^    def add_mesh_clip_plane($/;"	m	class:WidgetHelper
add_mesh_clip_plane	pyvista/plotting/widgets.py	/^    def add_mesh_clip_plane($/;"	m	class:WidgetHelper
add_mesh_isovalue	build/lib/pyvista/plotting/widgets.py	/^    def add_mesh_isovalue($/;"	m	class:WidgetHelper
add_mesh_isovalue	pyvista/plotting/widgets.py	/^    def add_mesh_isovalue($/;"	m	class:WidgetHelper
add_mesh_slice	build/lib/pyvista/plotting/widgets.py	/^    def add_mesh_slice($/;"	m	class:WidgetHelper
add_mesh_slice	pyvista/plotting/widgets.py	/^    def add_mesh_slice($/;"	m	class:WidgetHelper
add_mesh_slice_orthogonal	build/lib/pyvista/plotting/widgets.py	/^    def add_mesh_slice_orthogonal($/;"	m	class:WidgetHelper
add_mesh_slice_orthogonal	pyvista/plotting/widgets.py	/^    def add_mesh_slice_orthogonal($/;"	m	class:WidgetHelper
add_mesh_slice_spline	build/lib/pyvista/plotting/widgets.py	/^    def add_mesh_slice_spline($/;"	m	class:WidgetHelper
add_mesh_slice_spline	pyvista/plotting/widgets.py	/^    def add_mesh_slice_spline($/;"	m	class:WidgetHelper
add_mesh_threshold	build/lib/pyvista/plotting/widgets.py	/^    def add_mesh_threshold($/;"	m	class:WidgetHelper
add_mesh_threshold	pyvista/plotting/widgets.py	/^    def add_mesh_threshold($/;"	m	class:WidgetHelper
add_metadata	build/lib/pyvista/examples/downloads.py	/^    def add_metadata(dataset: pyvista.MultiBlock, colors_module_path: str):$/;"	m	class:_WholeBodyCTUtilities
add_metadata	pyvista/examples/downloads.py	/^    def add_metadata(dataset: pyvista.MultiBlock, colors_module_path: str):$/;"	m	class:_WholeBodyCTUtilities
add_module_names	doc/source/conf.py	/^add_module_names = False$/;"	v
add_north_arrow_widget	build/lib/pyvista/plotting/plotter.py	/^    def add_north_arrow_widget($/;"	m	class:BasePlotter
add_north_arrow_widget	build/lib/pyvista/plotting/renderer.py	/^    def add_north_arrow_widget($/;"	m	class:Renderer
add_north_arrow_widget	pyvista/plotting/plotter.py	/^    def add_north_arrow_widget($/;"	m	class:BasePlotter
add_north_arrow_widget	pyvista/plotting/renderer.py	/^    def add_north_arrow_widget($/;"	m	class:Renderer
add_observer	build/lib/pyvista/plotting/render_window_interactor.py	/^            def add_observer(self, event, callback):$/;"	m	class:_style_factory._make_class.CustomStyle
add_observer	build/lib/pyvista/plotting/render_window_interactor.py	/^    def add_observer(self, event, call, interactor_style_fallback=True):$/;"	m	class:RenderWindowInteractor
add_observer	pyvista/plotting/render_window_interactor.py	/^            def add_observer(self, event, callback):$/;"	m	class:_style_factory._make_class.CustomStyle
add_observer	pyvista/plotting/render_window_interactor.py	/^    def add_observer(self, event, call, interactor_style_fallback=True):$/;"	m	class:RenderWindowInteractor
add_on_render_callback	build/lib/pyvista/plotting/plotter.py	/^    def add_on_render_callback(self, callback, render_event=False) -> None:$/;"	m	class:BasePlotter
add_on_render_callback	pyvista/plotting/plotter.py	/^    def add_on_render_callback(self, callback, render_event=False) -> None:$/;"	m	class:BasePlotter
add_orientation_widget	build/lib/pyvista/plotting/plotter.py	/^    def add_orientation_widget($/;"	m	class:BasePlotter
add_orientation_widget	build/lib/pyvista/plotting/renderer.py	/^    def add_orientation_widget($/;"	m	class:Renderer
add_orientation_widget	pyvista/plotting/plotter.py	/^    def add_orientation_widget($/;"	m	class:BasePlotter
add_orientation_widget	pyvista/plotting/renderer.py	/^    def add_orientation_widget($/;"	m	class:Renderer
add_pick_obeserver	build/lib/pyvista/plotting/render_window_interactor.py	/^    def add_pick_obeserver(self, observer):$/;"	m	class:RenderWindowInteractor
add_pick_obeserver	pyvista/plotting/render_window_interactor.py	/^    def add_pick_obeserver(self, observer):$/;"	m	class:RenderWindowInteractor
add_pick_observer	build/lib/pyvista/plotting/render_window_interactor.py	/^    def add_pick_observer(self, observer):$/;"	m	class:RenderWindowInteractor
add_pick_observer	pyvista/plotting/render_window_interactor.py	/^    def add_pick_observer(self, observer):$/;"	m	class:RenderWindowInteractor
add_plane_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_plane_widget($/;"	m	class:WidgetHelper
add_plane_widget	pyvista/plotting/widgets.py	/^    def add_plane_widget($/;"	m	class:WidgetHelper
add_point_labels	build/lib/pyvista/plotting/plotter.py	/^    def add_point_labels($/;"	m	class:BasePlotter
add_point_labels	pyvista/plotting/plotter.py	/^    def add_point_labels($/;"	m	class:BasePlotter
add_point_scalar_labels	build/lib/pyvista/plotting/plotter.py	/^    def add_point_scalar_labels($/;"	m	class:BasePlotter
add_point_scalar_labels	pyvista/plotting/plotter.py	/^    def add_point_scalar_labels($/;"	m	class:BasePlotter
add_points	build/lib/pyvista/plotting/plotter.py	/^    def add_points(self, points, style='points', **kwargs) -> Actor:$/;"	m	class:BasePlotter
add_points	pyvista/plotting/plotter.py	/^    def add_points(self, points, style='points', **kwargs) -> Actor:$/;"	m	class:BasePlotter
add_q_files	build/lib/pyvista/core/utilities/reader.py	/^    def add_q_files(self, files) -> None:$/;"	m	class:MultiBlockPlot3DReader
add_q_files	pyvista/core/utilities/reader.py	/^    def add_q_files(self, files) -> None:$/;"	m	class:MultiBlockPlot3DReader
add_radio_button_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_radio_button_widget($/;"	m	class:WidgetHelper
add_radio_button_widget	pyvista/plotting/widgets.py	/^    def add_radio_button_widget($/;"	m	class:WidgetHelper
add_renderer	build/lib/pyvista/plotting/lights.py	/^    def add_renderer(self, renderer):$/;"	m	class:Light
add_renderer	pyvista/plotting/lights.py	/^    def add_renderer(self, renderer):$/;"	m	class:Light
add_ruler	build/lib/pyvista/plotting/plotter.py	/^    def add_ruler(self, *args, **kwargs) -> _vtk.vtkAxisActor2D:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_ruler	build/lib/pyvista/plotting/renderer.py	/^    def add_ruler($/;"	m	class:Renderer
add_ruler	pyvista/plotting/plotter.py	/^    def add_ruler(self, *args, **kwargs) -> _vtk.vtkAxisActor2D:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_ruler	pyvista/plotting/renderer.py	/^    def add_ruler($/;"	m	class:Renderer
add_scalar_bar	build/lib/pyvista/plotting/plotter.py	/^    def add_scalar_bar($/;"	m	class:BasePlotter
add_scalar_bar	build/lib/pyvista/plotting/scalar_bars.py	/^    def add_scalar_bar($/;"	m	class:ScalarBars
add_scalar_bar	pyvista/plotting/plotter.py	/^    def add_scalar_bar($/;"	m	class:BasePlotter
add_scalar_bar	pyvista/plotting/scalar_bars.py	/^    def add_scalar_bar($/;"	m	class:ScalarBars
add_silhouette	build/lib/pyvista/plotting/plotter.py	/^    def add_silhouette($/;"	m	class:BasePlotter
add_silhouette	pyvista/plotting/plotter.py	/^    def add_silhouette($/;"	m	class:BasePlotter
add_slider_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_slider_widget($/;"	m	class:WidgetHelper
add_slider_widget	pyvista/plotting/widgets.py	/^    def add_slider_widget($/;"	m	class:WidgetHelper
add_sphere_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_sphere_widget($/;"	m	class:WidgetHelper
add_sphere_widget	pyvista/plotting/widgets.py	/^    def add_sphere_widget($/;"	m	class:WidgetHelper
add_spline_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_spline_widget($/;"	m	class:WidgetHelper
add_spline_widget	pyvista/plotting/widgets.py	/^    def add_spline_widget($/;"	m	class:WidgetHelper
add_text	build/lib/pyvista/plotting/plotter.py	/^    def add_text($/;"	m	class:BasePlotter
add_text	pyvista/plotting/plotter.py	/^    def add_text($/;"	m	class:BasePlotter
add_text_slider_widget	build/lib/pyvista/plotting/widgets.py	/^    def add_text_slider_widget($/;"	m	class:WidgetHelper
add_text_slider_widget	pyvista/plotting/widgets.py	/^    def add_text_slider_widget($/;"	m	class:WidgetHelper
add_timer_event	build/lib/pyvista/plotting/plotter.py	/^    def add_timer_event(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_timer_event	build/lib/pyvista/plotting/render_window_interactor.py	/^    def add_timer_event(self, max_steps, duration, callback):$/;"	m	class:RenderWindowInteractor
add_timer_event	pyvista/plotting/plotter.py	/^    def add_timer_event(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
add_timer_event	pyvista/plotting/render_window_interactor.py	/^    def add_timer_event(self, max_steps, duration, callback):$/;"	m	class:RenderWindowInteractor
add_title	build/lib/pyvista/plotting/plotter.py	/^    def add_title($/;"	m	class:Plotter
add_title	pyvista/plotting/plotter.py	/^    def add_title($/;"	m	class:Plotter
add_to_dict	tests/doc/tst_doc_images.py	/^    def add_to_dict(filepath: str, key: str):$/;"	f	function:_generate_test_cases
add_to_dict	tests/examples/test_dataset_loader.py	/^    def add_to_dict(func: str, dataset_function: Callable[[], Any]):$/;"	f	function:_generate_dataset_loader_test_cases_from_module
add_volume	build/lib/pyvista/plotting/plotter.py	/^    def add_volume($/;"	m	class:BasePlotter
add_volume	pyvista/plotting/plotter.py	/^    def add_volume($/;"	m	class:BasePlotter
add_volume_clip_plane	build/lib/pyvista/plotting/widgets.py	/^    def add_volume_clip_plane($/;"	m	class:WidgetHelper
add_volume_clip_plane	pyvista/plotting/widgets.py	/^    def add_volume_clip_plane($/;"	m	class:WidgetHelper
aero_sandbox	doc/source/make_external_gallery.py	/^    aero_sandbox=Example($/;"	v
agree	examples/99-advanced/antarctica_compare.py	/^agree = flow_a.dot(flow_b.mean(0))$/;"	v
agree	examples/99-advanced/antarctica_compare.py	/^agree = flow_b.dot(flow_a.mean(0))$/;"	v
air	examples/99-advanced/openfoam_tubes.py	/^air = block[0]$/;"	v
air_racing_optimization	doc/source/make_external_gallery.py	/^    air_racing_optimization=Example($/;"	v
airplane	examples/01-filter/reflect.py	/^airplane = examples.load_airplane()$/;"	v
airplane	tests/conftest.py	/^def airplane():$/;"	f
airplane	tests/test_meshio.py	/^airplane = examples.load_airplane().cast_to_unstructured_grid()$/;"	v
airplane_reflected	examples/01-filter/reflect.py	/^airplane_reflected = airplane.reflect((0, 0, 1), point=(0, 0, -100))$/;"	v
algo	examples/99-advanced/customization_trame_toolbar.py	/^algo = pv.ConeSource()$/;"	v
algo	examples/99-advanced/plotting_algorithms.py	/^algo = pv.ConeSource()$/;"	v
algorithm_to_mesh_handler	build/lib/pyvista/plotting/plotter.py	/^from .utilities.algorithms import algorithm_to_mesh_handler$/;"	i
algorithm_to_mesh_handler	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import algorithm_to_mesh_handler as algorithm_to_mesh_handler$/;"	i
algorithm_to_mesh_handler	build/lib/pyvista/plotting/utilities/algorithms.py	/^def algorithm_to_mesh_handler(mesh_or_algo, port=0):$/;"	f
algorithm_to_mesh_handler	build/lib/pyvista/plotting/widgets.py	/^from .utilities.algorithms import algorithm_to_mesh_handler$/;"	i
algorithm_to_mesh_handler	pyvista/plotting/plotter.py	/^from .utilities.algorithms import algorithm_to_mesh_handler$/;"	i
algorithm_to_mesh_handler	pyvista/plotting/utilities/__init__.py	/^from .algorithms import algorithm_to_mesh_handler as algorithm_to_mesh_handler$/;"	i
algorithm_to_mesh_handler	pyvista/plotting/utilities/algorithms.py	/^def algorithm_to_mesh_handler(mesh_or_algo, port=0):$/;"	f
algorithm_to_mesh_handler	pyvista/plotting/widgets.py	/^from .utilities.algorithms import algorithm_to_mesh_handler$/;"	i
algorithm_to_mesh_handler	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import algorithm_to_mesh_handler  # noqa: F401$/;"	i
algorithms	tests/plotting/test_plotting.py	/^from pyvista.plotting.utilities import algorithms$/;"	i
algorithms	tests/plotting/test_utilities.py	/^from pyvista.plotting.utilities import algorithms$/;"	i
alien	examples/00-load/create_pixel_art.py	/^alien = []$/;"	v
align	build/lib/pyvista/core/filters/data_set.py	/^    def align(  # type: ignore[misc]$/;"	m	class:DataSetFilters
align	pyvista/core/filters/data_set.py	/^    def align(  # type: ignore[misc]$/;"	m	class:DataSetFilters
align_xyz	build/lib/pyvista/core/filters/data_set.py	/^    def align_xyz(  # type: ignore[misc]$/;"	m	class:DataSetFilters
align_xyz	pyvista/core/filters/data_set.py	/^    def align_xyz(  # type: ignore[misc]$/;"	m	class:DataSetFilters
all_attenuation_values	examples/04-lights/attenuation.py	/^all_attenuation_values = [(1, 0, 0), (0, 2, 0), (0, 0, 2)]$/;"	v
all_attenuation_values	examples/04-lights/attenuation.py	/^all_attenuation_values = [(2, 0, 0), (0, 2, 0), (0, 0, 2)]$/;"	v
all_cell_arrays_status	build/lib/pyvista/core/utilities/reader.py	/^    def all_cell_arrays_status(self):$/;"	m	class:PointCellDataSelection
all_cell_arrays_status	pyvista/core/utilities/reader.py	/^    def all_cell_arrays_status(self):$/;"	m	class:PointCellDataSelection
all_patch_arrays_status	build/lib/pyvista/core/utilities/reader.py	/^    def all_patch_arrays_status(self):$/;"	m	class:OpenFOAMReader
all_patch_arrays_status	pyvista/core/utilities/reader.py	/^    def all_patch_arrays_status(self):$/;"	m	class:OpenFOAMReader
all_point_arrays_status	build/lib/pyvista/core/utilities/reader.py	/^    def all_point_arrays_status(self):$/;"	m	class:PointCellDataSelection
all_point_arrays_status	pyvista/core/utilities/reader.py	/^    def all_point_arrays_status(self):$/;"	m	class:PointCellDataSelection
all_regions	examples/01-filter/connectivity.py	/^all_regions = pine_roots.connectivity('all')$/;"	v
allow_empty_mesh	build/lib/pyvista/plotting/themes.py	/^    def allow_empty_mesh(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
allow_empty_mesh	build/lib/pyvista/plotting/themes.py	/^    def allow_empty_mesh(self, allow_empty_mesh: bool):$/;"	m	class:Theme
allow_empty_mesh	pyvista/plotting/themes.py	/^    def allow_empty_mesh(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
allow_empty_mesh	pyvista/plotting/themes.py	/^    def allow_empty_mesh(self, allow_empty_mesh: bool):$/;"	m	class:Theme
alpha	examples/99-advanced/sphere_eversion.py	/^alpha = alpha_final$/;"	v
alpha_final	examples/99-advanced/sphere_eversion.py	/^alpha_final = 1  # arbitrary > 1$/;"	v
alpha_range	build/lib/pyvista/plotting/lookup_table.py	/^    def alpha_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
alpha_range	build/lib/pyvista/plotting/lookup_table.py	/^    def alpha_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
alpha_range	pyvista/plotting/lookup_table.py	/^    def alpha_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
alpha_range	pyvista/plotting/lookup_table.py	/^    def alpha_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
alphas	examples/02-plot/chart_basics.py	/^alphas = [0.5 + i for i in range(5)]$/;"	v
alphas	examples/99-advanced/sphere_eversion.py	/^alphas = np.linspace(0, alpha_final, n_steps)$/;"	v
alphas	examples/99-advanced/sphere_eversion.py	/^alphas = np.linspace(alpha_final, 0, n_steps + 1)[1:]$/;"	v
always_visible	examples/00-load/create_polyhedron.py	/^    always_visible=True,$/;"	v
always_visible	examples/00-load/create_sphere.py	/^    always_visible=True,$/;"	v
always_visible	examples/02-plot/distance_along_spline.py	/^    always_visible=True,$/;"	v
ambient	build/lib/pyvista/plotting/_property.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
ambient	build/lib/pyvista/plotting/_property.py	/^    def ambient(self, value: float):$/;"	m	class:Property
ambient	build/lib/pyvista/plotting/themes.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
ambient	build/lib/pyvista/plotting/themes.py	/^    def ambient(self, ambient: float):$/;"	m	class:_LightingConfig
ambient	build/lib/pyvista/plotting/volume_property.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
ambient	build/lib/pyvista/plotting/volume_property.py	/^    def ambient(self, value: float):$/;"	m	class:VolumeProperty
ambient	examples/02-plot/point_clouds.py	/^    ambient=0.7,$/;"	v
ambient	examples/02-plot/point_clouds.py	/^    ambient=1.0,$/;"	v
ambient	examples/04-lights/shadows.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/atomic_orbitals.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/fea_hertzian_contact_pressure.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/magnetic_fields.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/openfoam_cooling.py	/^    ambient=0.2,$/;"	v
ambient	examples/99-advanced/pump_bracket.py	/^    ambient=0.2,$/;"	v
ambient	pyvista/plotting/_property.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
ambient	pyvista/plotting/_property.py	/^    def ambient(self, value: float):$/;"	m	class:Property
ambient	pyvista/plotting/themes.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
ambient	pyvista/plotting/themes.py	/^    def ambient(self, ambient: float):$/;"	m	class:_LightingConfig
ambient	pyvista/plotting/volume_property.py	/^    def ambient(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
ambient	pyvista/plotting/volume_property.py	/^    def ambient(self, value: float):$/;"	m	class:VolumeProperty
ambient_color	build/lib/pyvista/plotting/_property.py	/^    def ambient_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
ambient_color	build/lib/pyvista/plotting/_property.py	/^    def ambient_color(self, value):$/;"	m	class:Property
ambient_color	build/lib/pyvista/plotting/lights.py	/^    def ambient_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
ambient_color	build/lib/pyvista/plotting/lights.py	/^    def ambient_color(self, color: ColorLike):$/;"	m	class:Light
ambient_color	pyvista/plotting/_property.py	/^    def ambient_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
ambient_color	pyvista/plotting/_property.py	/^    def ambient_color(self, value):$/;"	m	class:Property
ambient_color	pyvista/plotting/lights.py	/^    def ambient_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
ambient_color	pyvista/plotting/lights.py	/^    def ambient_color(self, color: ColorLike):$/;"	m	class:Light
amplitude	build/lib/pyvista/core/utilities/image_sources.py	/^    def amplitude(self) -> float:$/;"	m	class:ImageSinusoidSource
amplitude	build/lib/pyvista/core/utilities/image_sources.py	/^    def amplitude(self, amplitude: float) -> None:$/;"	m	class:ImageSinusoidSource
amplitude	pyvista/core/utilities/image_sources.py	/^    def amplitude(self) -> float:$/;"	m	class:ImageSinusoidSource
amplitude	pyvista/core/utilities/image_sources.py	/^    def amplitude(self, amplitude: float) -> None:$/;"	m	class:ImageSinusoidSource
analytical_integral_rppd	examples/99-advanced/warp_by_vector_eigenmodes.py	/^def analytical_integral_rppd(p, q, r, a, b, c):$/;"	f
angle	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def angle(self: ConeSource) -> float:$/;"	m	class:ConeSource
angle	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def angle(self: ConeSource, angle: float) -> None:$/;"	m	class:ConeSource
angle	examples/02-plot/plot_over_circular_arc.py	/^angle = 90.0$/;"	v
angle	pyvista/core/utilities/geometric_sources.py	/^    def angle(self: ConeSource) -> float:$/;"	m	class:ConeSource
angle	pyvista/core/utilities/geometric_sources.py	/^    def angle(self: ConeSource, angle: float) -> None:$/;"	m	class:ConeSource
angle_to_range	examples/01-filter/flying_edges.py	/^def angle_to_range(angle):$/;"	f
angle_u	examples/02-plot/moving_cmap.py	/^angle_u = np.linspace(-np.pi, np.pi, 400)$/;"	v
angle_v	examples/02-plot/moving_cmap.py	/^angle_v = np.linspace(0, np.pi, 200)$/;"	v
anisotropy	build/lib/pyvista/plotting/_property.py	/^    def anisotropy(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
anisotropy	build/lib/pyvista/plotting/_property.py	/^    def anisotropy(self, value: float):$/;"	m	class:Property
anisotropy	build/lib/pyvista/plotting/actor_properties.py	/^    def anisotropy(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
anisotropy	build/lib/pyvista/plotting/actor_properties.py	/^    def anisotropy(self, value: float):$/;"	m	class:ActorProperties
anisotropy	pyvista/plotting/_property.py	/^    def anisotropy(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
anisotropy	pyvista/plotting/_property.py	/^    def anisotropy(self, value: float):$/;"	m	class:Property
anisotropy	pyvista/plotting/actor_properties.py	/^    def anisotropy(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
anisotropy	pyvista/plotting/actor_properties.py	/^    def anisotropy(self, value: float):$/;"	m	class:ActorProperties
anisotropy_rotation	build/lib/pyvista/plotting/actor_properties.py	/^    def anisotropy_rotation(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
anisotropy_rotation	build/lib/pyvista/plotting/actor_properties.py	/^    def anisotropy_rotation(self, value: float):$/;"	m	class:ActorProperties
anisotropy_rotation	pyvista/plotting/actor_properties.py	/^    def anisotropy_rotation(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
anisotropy_rotation	pyvista/plotting/actor_properties.py	/^    def anisotropy_rotation(self, value: float):$/;"	m	class:ActorProperties
annotations	build/lib/pyvista/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/_plot.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/_version.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/conftest.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_typing_core/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_typing_core/_aliases.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_typing_core/_array_like.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_typing_core/_dataset_types.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_validation/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_validation/_cast_array.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_validation/check.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_validation/validate.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/_vtk_core.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/cell.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/celltype.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/composite.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/dataobject.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/dataset.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/datasetattributes.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/errors.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/composite.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/data_object.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/data_set.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/image_data.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/poly_data.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/rectilinear_grid.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/structured_grid.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/filters/unstructured_grid.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/grid.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/objects.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/partitioned.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/pointset.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/pyvista_ndarray.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/arrays.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/cell_quality.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/cell_type_helper.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/cells.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/docs.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/features.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/fileio.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/geometric_objects.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/geometric_sources.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/helpers.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/image_sources.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/misc.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/observers.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/parametric_objects.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/points.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/reader.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/transform.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/utilities/transformations.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/core/wrappers.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/demos/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/demos/demos.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/demos/logo.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/errors.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/_dataset_loader.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/cells.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/download_3ds.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/downloads.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/examples.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/gltf.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/planets.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/examples/vrml.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/ext/coverage.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/ext/plot_directive.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/ext/viewer_directive.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/jupyter/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/jupyter/notebook.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/_plotting.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/_property.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/_typing.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/_vtk.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/_vtk_gl.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/actor.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/actor_properties.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/affine_widget.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/axes.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/axes_actor.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/axes_assembly.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/background_renderer.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/camera.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/charts.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/colors.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/composite_mapper.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/cube_axes_actor.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/errors.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/helpers.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/lights.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/lookup_table.py	/^    def annotations(self) -> dict[float, str]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
annotations	build/lib/pyvista/plotting/lookup_table.py	/^    def annotations(self, values: dict[float, str] | None):$/;"	m	class:LookupTable
annotations	build/lib/pyvista/plotting/lookup_table.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/mapper.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/opts.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/picking.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/plotter.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/plotting/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/prop3d.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/prop_collection.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/render_passes.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/render_window_interactor.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/renderer.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/renderers.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/scalar_bars.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/text.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/texture.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/themes.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/tools.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/utilities/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/utilities/algorithms.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/utilities/cubemap.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/utilities/gl_checks.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/utilities/regression.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/utilities/xvfb.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/volume.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/volume_property.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/plotting/widgets.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/report.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/trame/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/trame/jupyter.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/trame/ui/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/trame/ui/base_viewer.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/trame/ui/vuetify2.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/trame/ui/vuetify3.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/trame/views.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/typing/mypy_plugin.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/__init__.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/algorithms.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/arrays.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/cell_type_helper.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/cells.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/common.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/docs.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/errors.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/features.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/fileio.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/geometric_objects.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/helpers.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/misc.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/parametric_objects.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/reader.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/regression.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/sphinx_gallery.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/transformations.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/wrappers.py	/^from __future__ import annotations$/;"	i
annotations	build/lib/pyvista/utilities/xvfb.py	/^from __future__ import annotations$/;"	i
annotations	doc/source/conf.py	/^from __future__ import annotations$/;"	i
annotations	doc/source/make_external_gallery.py	/^from __future__ import annotations$/;"	i
annotations	doc/source/make_tables.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_explicit_structured_grid.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_geometric_objects.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_kochanek_spline.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_parametric_geometric_objects.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_pixel_art.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_platonic_solids.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_point_cloud.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_pointset.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_poly.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_polydata_strips.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_polyhedron.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_sphere.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_spline.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_structured_surface.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_surface_draped.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_tri_surface.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_truss.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_uniform_grid.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/create_unstructured_surface.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/linear_cells.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/load_gltf.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/load_vrml.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/read_dolfin.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/read_file.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/read_image.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/read_parallel.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/reader.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/terrain_mesh.py	/^from __future__ import annotations$/;"	i
annotations	examples/00-load/wrap_trimesh.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/boolean_operations.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/cell_centers.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/clipping.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/clipping_with_surface.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/collisions.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/compute_normals.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/compute_volume.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/connectivity.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/contouring.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/decimate.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/distance_between_surfaces.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/extract_cells_inside_surface.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/extract_edges.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/extract_surface.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/extrude_rotate.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/extrude_trim.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/flying_edges.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/gaussian_smoothing.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/geodesic.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/glyphs.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/glyphs_table.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/gradients.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/image_fft.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/image_fft_perlin_noise.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/image_representations.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/integrate_data.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/interpolate.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/interpolate_sample.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/mesh_quality.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/poly_ray_trace.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/project_plane.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/reflect.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/resample.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/rotate.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/sampling_functions_2d.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/sampling_functions_3d.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/slicing.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/streamlines.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/streamlines_2D.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/subdivide.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/surface_reconstruction.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/surface_smoothing.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/using_filters.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/voxelize.py	/^from __future__ import annotations$/;"	i
annotations	examples/01-filter/warp_by_vector.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/anti_aliasing.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/backface_props.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/background_image.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/blurring.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/bounds.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/chart_basics.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/chart_overlays.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/clear.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/cmap.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/color_cycler.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/composite_picking.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/depth_of_field.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/depth_peeling.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/distance_along_spline.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/distance_measurement.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/edges.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/edl.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/element_picking.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/floors.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/ghost_cells.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/gif.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/image_depth.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/interpolate_before_map.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/isovalue.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/labels.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/legend.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/lighting_mesh.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/linked.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/lookup_table.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/mesh_picking.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/movie.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/movie_glyphs.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/moving_cmap.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/multi_window.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/opacity.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/orbit.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/ortho_slices.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/pbr.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/plot_over_circular_arc.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/plot_over_line.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/point_cell_scalars.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/point_clouds.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/point_picking.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/points_gaussian_scale.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/scalar_bars.py	/^annotations = {$/;"	v
annotations	examples/02-plot/scalar_bars.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/screenshot.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/shading.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/silhouette.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/spherical.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/ssao.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/surface_picking.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/texture.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/themes.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/topo_map.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/vector_component.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/vertices.py	/^from __future__ import annotations$/;"	i
annotations	examples/02-plot/volume.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/animation.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/box_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/checkbox_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/clip_volume.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/line_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/multi_slider_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/plane_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/slider_bar_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/sphere_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/03-widgets/spline_widget.py	/^from __future__ import annotations$/;"	i
annotations	examples/04-lights/actors.py	/^from __future__ import annotations$/;"	i
annotations	examples/04-lights/attenuation.py	/^from __future__ import annotations$/;"	i
annotations	examples/04-lights/beam_shape.py	/^from __future__ import annotations$/;"	i
annotations	examples/04-lights/light_types.py	/^from __future__ import annotations$/;"	i
annotations	examples/04-lights/mesh_lighting.py	/^from __future__ import annotations$/;"	i
annotations	examples/04-lights/plotter_builtins.py	/^from __future__ import annotations$/;"	i
annotations	examples/04-lights/shadows.py	/^from __future__ import annotations$/;"	i
annotations	examples/98-common/project_points_tessellate.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/add_example.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/anatomical_groups.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/antarctica_compare.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/atomic_orbitals.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/customization_trame_toolbar.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/extending_pyvista.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/fea_hertzian_contact_pressure.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/magnetic_fields.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/openfoam_cooling.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/openfoam_example.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/openfoam_tubes.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/planets.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/plotting_algorithms.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/pump_bracket.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/ray_trace_moeller.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/sphere_eversion.py	/^from __future__ import annotations$/;"	i
annotations	examples/99-advanced/warp_by_vector_eigenmodes.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/advanced/contour.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/advanced/custom_ui.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/PyVistaLocalView.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/PyVistaRemoteLocalView.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/PyVistaRemoteView.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/actor_color.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/algorithm.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/file_viewer.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/mesh_scalars.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/multi_views.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/basic/ui_template.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/tests/test_trame.py	/^from __future__ import annotations$/;"	i
annotations	examples_trame/validation/many_actors.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/_plot.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/_version.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/conftest.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_typing_core/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_typing_core/_aliases.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_typing_core/_array_like.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_typing_core/_dataset_types.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_validation/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_validation/_cast_array.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_validation/check.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_validation/validate.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/_vtk_core.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/cell.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/celltype.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/composite.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/dataobject.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/dataset.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/datasetattributes.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/errors.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/composite.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/data_object.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/data_set.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/image_data.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/poly_data.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/rectilinear_grid.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/structured_grid.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/filters/unstructured_grid.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/grid.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/objects.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/partitioned.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/pointset.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/pyvista_ndarray.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/arrays.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/cell_quality.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/cell_type_helper.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/cells.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/docs.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/features.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/fileio.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/geometric_objects.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/geometric_sources.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/helpers.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/image_sources.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/misc.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/observers.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/parametric_objects.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/points.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/reader.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/transform.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/utilities/transformations.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/core/wrappers.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/demos/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/demos/demos.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/demos/logo.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/errors.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/_dataset_loader.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/cells.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/download_3ds.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/downloads.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/examples.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/gltf.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/planets.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/examples/vrml.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/ext/coverage.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/ext/plot_directive.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/ext/viewer_directive.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/jupyter/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/jupyter/notebook.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/_plotting.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/_property.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/_typing.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/_vtk.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/_vtk_gl.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/actor.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/actor_properties.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/affine_widget.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/axes.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/axes_actor.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/axes_assembly.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/background_renderer.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/camera.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/charts.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/colors.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/composite_mapper.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/cube_axes_actor.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/errors.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/helpers.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/lights.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/lookup_table.py	/^    def annotations(self) -> dict[float, str]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
annotations	pyvista/plotting/lookup_table.py	/^    def annotations(self, values: dict[float, str] | None):$/;"	m	class:LookupTable
annotations	pyvista/plotting/lookup_table.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/mapper.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/opts.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/picking.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/plotter.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/plotting/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/prop3d.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/prop_collection.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/render_passes.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/render_window_interactor.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/renderer.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/renderers.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/scalar_bars.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/text.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/texture.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/themes.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/tools.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/utilities/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/utilities/algorithms.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/utilities/cubemap.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/utilities/gl_checks.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/utilities/regression.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/utilities/sphinx_gallery.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/utilities/xvfb.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/volume.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/volume_property.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/plotting/widgets.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/report.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/trame/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/trame/jupyter.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/trame/ui/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/trame/ui/base_viewer.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/trame/ui/vuetify2.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/trame/ui/vuetify3.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/trame/views.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/typing/mypy_plugin.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/__init__.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/algorithms.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/arrays.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/cell_type_helper.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/cells.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/common.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/docs.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/errors.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/features.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/fileio.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/geometric_objects.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/helpers.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/misc.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/parametric_objects.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/reader.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/regression.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/sphinx_gallery.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/transformations.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/wrappers.py	/^from __future__ import annotations$/;"	i
annotations	pyvista/utilities/xvfb.py	/^from __future__ import annotations$/;"	i
annotations	setup.py	/^from __future__ import annotations$/;"	i
annotations	tests/check_doctest_names.py	/^from __future__ import annotations$/;"	i
annotations	tests/conftest.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_cells.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_composite.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_dataobject.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_dataobject_filters.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_dataset.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_dataset_filters.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_datasetattributes.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_geometric_objects.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_geometric_sources.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_grid.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_helpers.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_image_sources.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_imagedata_filters.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_imaging.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_objects.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_parametric_geometry.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_partitioned.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_pointset.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_polydata.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_polydata_filters.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_pyvista_ndarray.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_reader.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_rectilinear_grid_filters.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_unstructured_grid_filters.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_utilities.py	/^from __future__ import annotations$/;"	i
annotations	tests/core/test_validation.py	/^from __future__ import annotations$/;"	i
annotations	tests/doc/tst_doc_images.py	/^from __future__ import annotations$/;"	i
annotations	tests/examples/test_cell_examples.py	/^from __future__ import annotations$/;"	i
annotations	tests/examples/test_dataset_loader.py	/^from __future__ import annotations$/;"	i
annotations	tests/examples/test_download_files.py	/^from __future__ import annotations$/;"	i
annotations	tests/examples/test_downloads.py	/^from __future__ import annotations$/;"	i
annotations	tests/examples/test_examples.py	/^from __future__ import annotations$/;"	i
annotations	tests/namespace/test_errors_namespace.py	/^from __future__ import annotations$/;"	i
annotations	tests/namespace/test_plotting_namespace.py	/^from __future__ import annotations$/;"	i
annotations	tests/namespace/test_public_namespace.py	/^from __future__ import annotations$/;"	i
annotations	tests/namespace/test_utilities_namespace.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/conftest.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/jupyter/conftest.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/jupyter/test_static.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/jupyter/test_trame.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/mappers/test_composite_mapper.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/mappers/test_gaussian_mapper.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/mappers/test_mapper.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/mappers/test_volume_mapper.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_actor.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_axes.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_axes_assembly.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_camera.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_charts.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_collection.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_colors.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_conftest.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_cube_axes_actor.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_demos.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_lights.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_lookup_table.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_picking.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_plotter.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_plotting.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_plotting_utilities.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_property.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_regression.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_render_pass.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_render_window_interactor.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_renderer.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_scalar_bars.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_scraper.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_text.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_texture.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_theme.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_tinypages.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_utilities.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_volume_property.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/test_widgets.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/tinypages/conf.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/tinypages/plot_cone.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/tinypages/plot_polygon.py	/^from __future__ import annotations$/;"	i
annotations	tests/plotting/tinypages/samples.py	/^from __future__ import annotations$/;"	i
annotations	tests/test_conftest.py	/^from __future__ import annotations$/;"	i
annotations	tests/test_init.py	/^from __future__ import annotations$/;"	i
annotations	tests/test_meshio.py	/^from __future__ import annotations$/;"	i
annotations	tests/test_meta.py	/^from __future__ import annotations$/;"	i
annotations	tests/typing/mypy_plugin/test_plugin.py	/^from __future__ import annotations$/;"	i
annotations	tests/typing/test_return_type.py	/^from __future__ import annotations$/;"	i
ant	tests/conftest.py	/^def ant():$/;"	f
ant_with_normals	tests/core/test_polydata.py	/^def ant_with_normals(ant):$/;"	f
antfile	build/lib/pyvista/examples/examples.py	/^antfile = str(Path(dir_path) \/ 'ant.ply')$/;"	v
antfile	pyvista/examples/examples.py	/^antfile = str(Path(dir_path) \/ 'ant.ply')$/;"	v
anti_aliasing	build/lib/pyvista/plotting/themes.py	/^    def anti_aliasing(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:Theme
anti_aliasing	build/lib/pyvista/plotting/themes.py	/^    def anti_aliasing(self, anti_aliasing: str | None):$/;"	m	class:Theme
anti_aliasing	examples/99-advanced/pump_bracket.py	/^    anti_aliasing='fxaa',$/;"	v
anti_aliasing	pyvista/plotting/themes.py	/^    def anti_aliasing(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:Theme
anti_aliasing	pyvista/plotting/themes.py	/^    def anti_aliasing(self, anti_aliasing: str | None):$/;"	m	class:Theme
anvil_cirrus_plumes	doc/source/make_external_gallery.py	/^    anvil_cirrus_plumes=Example($/;"	v
append	build/lib/pyvista/core/composite.py	/^    def append(self: MultiBlock, dataset: _TypeMultiBlockLeaf, name: str | None = None) -> None:$/;"	m	class:MultiBlock
append	build/lib/pyvista/core/partitioned.py	/^    def append(self, dataset) -> None:$/;"	m	class:PartitionedDataSet
append	build/lib/pyvista/plotting/prop_collection.py	/^    def append(self, value: _vtk.vtkProp):$/;"	m	class:_PropCollection
append	pyvista/core/composite.py	/^    def append(self: MultiBlock, dataset: _TypeMultiBlockLeaf, name: str | None = None) -> None:$/;"	m	class:MultiBlock
append	pyvista/core/partitioned.py	/^    def append(self, dataset) -> None:$/;"	m	class:PartitionedDataSet
append	pyvista/plotting/prop_collection.py	/^    def append(self, value: _vtk.vtkProp):$/;"	m	class:_PropCollection
append_polydata	build/lib/pyvista/core/filters/poly_data.py	/^    def append_polydata($/;"	m	class:PolyDataFilters
append_polydata	pyvista/core/filters/poly_data.py	/^    def append_polydata($/;"	m	class:PolyDataFilters
apply	build/lib/pyvista/core/utilities/transform.py	/^    def apply($/;"	m	class:Transform
apply	pyvista/core/utilities/transform.py	/^    def apply($/;"	m	class:Transform
apply_cmap	build/lib/pyvista/plotting/lookup_table.py	/^    def apply_cmap(self, cmap, n_values: int = 256, flip: bool = False):$/;"	m	class:LookupTable
apply_cmap	pyvista/plotting/lookup_table.py	/^    def apply_cmap(self, cmap, n_values: int = 256, flip: bool = False):$/;"	m	class:LookupTable
apply_filter	build/lib/pyvista/core/filters/composite.py	/^        def apply_filter(function_, ids_, name_, block_):$/;"	f	function:CompositeFilters.generic_filter
apply_filter	pyvista/core/filters/composite.py	/^        def apply_filter(function_, ids_, name_, block_):$/;"	f	function:CompositeFilters.generic_filter
apply_lookup_table	build/lib/pyvista/plotting/volume_property.py	/^    def apply_lookup_table(self, lookup_table: pyvista.LookupTable):$/;"	m	class:VolumeProperty
apply_lookup_table	pyvista/plotting/volume_property.py	/^    def apply_lookup_table(self, lookup_table: pyvista.LookupTable):$/;"	m	class:VolumeProperty
apply_opacity	build/lib/pyvista/plotting/lookup_table.py	/^    def apply_opacity(self, opacity, interpolate: bool = True, kind: str = 'quadratic'):$/;"	m	class:LookupTable
apply_opacity	pyvista/plotting/lookup_table.py	/^    def apply_opacity(self, opacity, interpolate: bool = True, kind: str = 'quadratic'):$/;"	m	class:LookupTable
apply_to_dataset	build/lib/pyvista/core/utilities/transform.py	/^    def apply_to_dataset($/;"	m	class:Transform
apply_to_dataset	pyvista/core/utilities/transform.py	/^    def apply_to_dataset($/;"	m	class:Transform
apply_to_points	build/lib/pyvista/core/utilities/transform.py	/^    def apply_to_points($/;"	m	class:Transform
apply_to_points	pyvista/core/utilities/transform.py	/^    def apply_to_points($/;"	m	class:Transform
apply_to_vectors	build/lib/pyvista/core/utilities/transform.py	/^    def apply_to_vectors($/;"	m	class:Transform
apply_to_vectors	pyvista/core/utilities/transform.py	/^    def apply_to_vectors($/;"	m	class:Transform
apply_transformation_to_points	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import apply_transformation_to_points$/;"	i
apply_transformation_to_points	build/lib/pyvista/core/utilities/transformations.py	/^def apply_transformation_to_points($/;"	f
apply_transformation_to_points	pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import apply_transformation_to_points$/;"	i
apply_transformation_to_points	pyvista/core/utilities/transformations.py	/^def apply_transformation_to_points($/;"	f
apply_transformation_to_points	tests/core/test_dataobject_filters.py	/^    from pyvista.core.utilities.transformations import apply_transformation_to_points$/;"	i
aprox_le	tests/core/test_dataset_filters.py	/^def aprox_le(a, b, rtol=1e-5, atol=1e-8):$/;"	f
arc	examples/00-load/create_parametric_geometric_objects.py	/^arc = pv.CircularArc(pointa, pointb, center, resolution)$/;"	v
arc	examples/02-plot/plot_over_circular_arc.py	/^arc = pv.CircularArcFromNormal(center, 100, normal, polar, angle)$/;"	v
area	build/lib/pyvista/core/dataset.py	/^    def area($/;"	m	class:DataSet
area	build/lib/pyvista/core/pointset.py	/^    def area(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointSet
area	build/lib/pyvista/plotting/charts.py	/^    def area(self, x, y1, y2=None, color='b', label=''):$/;"	m	class:Chart2D
area	examples/01-filter/integrate_data.py	/^area = integrated_data['Area'][0]$/;"	v
area	pyvista/core/dataset.py	/^    def area($/;"	m	class:DataSet
area	pyvista/core/pointset.py	/^    def area(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointSet
area	pyvista/plotting/charts.py	/^    def area(self, x, y1, y2=None, color='b', label=''):$/;"	m	class:Chart2D
area_plot	tests/plotting/test_charts.py	/^def area_plot(chart_2d):$/;"	f
arg_type	tests/typing/mypy_plugin/test_plugin.py	/^        arg_type=float,$/;"	v
arg_type	tests/typing/mypy_plugin/test_plugin.py	/^        arg_type=int,$/;"	v
args	tests/check_doctest_names.py	/^    args = parser.parse_args()$/;"	v
arial	build/lib/pyvista/plotting/tools.py	/^    arial = _vtk.VTK_ARIAL$/;"	v	class:FONTS
arial	pyvista/plotting/tools.py	/^    arial = _vtk.VTK_ARIAL$/;"	v	class:FONTS
arr	examples/03-widgets/line_widget.py	/^arr = np.linalg.norm(mesh['velocity'], axis=1)$/;"	v
array_after	examples/01-filter/image_representations.py	/^array_after = points_volume.points_to_cells().cells_to_points().active_scalars$/;"	v
array_before	examples/01-filter/image_representations.py	/^array_before = points_volume.active_scalars$/;"	v
array_from_vtkmatrix	build/lib/pyvista/core/grid.py	/^from .utilities.arrays import array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import array_from_vtkmatrix as array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	build/lib/pyvista/core/utilities/arrays.py	/^def array_from_vtkmatrix(matrix: _vtk.vtkMatrix3x3 | _vtk.vtkMatrix4x4) -> NumpyArray[float]:$/;"	f
array_from_vtkmatrix	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.arrays import array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	build/lib/pyvista/plotting/prop3d.py	/^from pyvista.core.utilities.arrays import array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	pyvista/core/grid.py	/^from .utilities.arrays import array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	pyvista/core/utilities/__init__.py	/^from .arrays import array_from_vtkmatrix as array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	pyvista/core/utilities/arrays.py	/^def array_from_vtkmatrix(matrix: _vtk.vtkMatrix3x3 | _vtk.vtkMatrix4x4) -> NumpyArray[float]:$/;"	f
array_from_vtkmatrix	pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.arrays import array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	pyvista/plotting/prop3d.py	/^from pyvista.core.utilities.arrays import array_from_vtkmatrix$/;"	i
array_from_vtkmatrix	tests/core/test_validation.py	/^from pyvista.core.utilities.arrays import array_from_vtkmatrix$/;"	i
array_name	build/lib/pyvista/plotting/mapper.py	/^    def array_name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
array_name	build/lib/pyvista/plotting/mapper.py	/^    def array_name(self, name: str) -> None:$/;"	m	class:_BaseMapper
array_name	pyvista/plotting/mapper.py	/^    def array_name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
array_name	pyvista/plotting/mapper.py	/^    def array_name(self, name: str) -> None:$/;"	m	class:_BaseMapper
array_names	build/lib/pyvista/core/dataset.py	/^    def array_names(self: Self) -> list[str]:$/;"	m	class:DataSet
array_names	build/lib/pyvista/core/utilities/reader.py	/^    def array_names(self):$/;"	m	class:ExodusIIBlockSet
array_names	pyvista/core/dataset.py	/^    def array_names(self: Self) -> list[str]:$/;"	m	class:DataSet
array_names	pyvista/core/utilities/reader.py	/^    def array_names(self):$/;"	m	class:ExodusIIBlockSet
array_shapes	tests/core/test_dataobject_filters.py	/^from hypothesis.extra._array_helpers import array_shapes$/;"	i
array_status	build/lib/pyvista/core/utilities/reader.py	/^    def array_status(self, name):$/;"	m	class:ExodusIIBlockSet
array_status	pyvista/core/utilities/reader.py	/^    def array_status(self, name):$/;"	m	class:ExodusIIBlockSet
arrays	tests/core/test_dataobject_filters.py	/^from hypothesis.extra.numpy import arrays$/;"	i
arrays	tests/core/test_datasetattributes.py	/^from hypothesis.extra.numpy import arrays$/;"	i
arrow	examples/00-load/create_geometric_objects.py	/^arrow = pv.Arrow()$/;"	v
arrows	build/lib/pyvista/core/dataset.py	/^    def arrows($/;"	m	class:DataSet
arrows	examples/00-load/create_point_cloud.py	/^arrows = point_cloud.glyph($/;"	v
arrows	examples/01-filter/contouring.py	/^arrows = mesh.glyph(scale='Normals', orient='Normals', tolerance=0.05)$/;"	v
arrows	examples/01-filter/glyphs.py	/^arrows = mesh.glyph(scale='Normals', orient='Normals', tolerance=0.05)$/;"	v
arrows	examples/02-plot/legend.py	/^arrows = mesh.glyph(scale='Normals', orient='Normals', tolerance=0.05)$/;"	v
arrows	examples_trame/basic/multi_views.py	/^arrows = mesh.glyph(scale='Normals', orient='Normals', tolerance=0.05)$/;"	v
arrows	pyvista/core/dataset.py	/^    def arrows($/;"	m	class:DataSet
arrows_inversed	examples/02-plot/legend.py	/^arrows_inversed = mesh.glyph(scale='NormalInversed', orient='NormalInversed', tolerance=0.05)$/;"	v
articles	doc/source/make_external_gallery.py	/^articles = dict($/;"	v
as_dtype	tests/plotting/test_plotting.py	/^            def as_dtype(color: tuple[float, float, float]):$/;"	f	function:_make_rgb_dataset._dtype_convert_func
as_polydata_blocks	build/lib/pyvista/core/composite.py	/^    def as_polydata_blocks(self: MultiBlock, copy: bool = False) -> MultiBlock:$/;"	m	class:MultiBlock
as_polydata_blocks	pyvista/core/composite.py	/^    def as_polydata_blocks(self: MultiBlock, copy: bool = False) -> MultiBlock:$/;"	m	class:MultiBlock
as_rgba	build/lib/pyvista/plotting/mapper.py	/^    def as_rgba(self) -> None:$/;"	m	class:_DataSetMapper
as_rgba	pyvista/plotting/mapper.py	/^    def as_rgba(self) -> None:$/;"	m	class:_DataSetMapper
as_rotation	build/lib/pyvista/core/utilities/transform.py	/^    def as_rotation($/;"	m	class:Transform
as_rotation	pyvista/core/utilities/transform.py	/^    def as_rotation($/;"	m	class:Transform
as_unstructured_grid_blocks	build/lib/pyvista/core/composite.py	/^    def as_unstructured_grid_blocks(self: MultiBlock, copy: bool = False) -> MultiBlock:$/;"	m	class:MultiBlock
as_unstructured_grid_blocks	pyvista/core/composite.py	/^    def as_unstructured_grid_blocks(self: MultiBlock, copy: bool = False) -> MultiBlock:$/;"	m	class:MultiBlock
ascii_letters	tests/core/test_datasetattributes.py	/^from string import ascii_letters$/;"	i
assemble_mass_and_stiffness	examples/99-advanced/warp_by_vector_eigenmodes.py	/^def assemble_mass_and_stiffness(N, F, geom_params, cijkl):$/;"	f
assert_actor_bounds	tests/plotting/test_renderer.py	/^    def assert_actor_bounds(plot_, actor_, mesh_):$/;"	f	function:test_compute_bounds
assert_allclose	tests/core/test_imaging.py	/^from numpy.testing import assert_allclose$/;"	i
assert_area	tests/core/test_dataset.py	/^    def assert_area(grid):$/;"	f	function:test_volume_area
assert_array_names	tests/core/test_dataobject_filters.py	/^    def assert_array_names(clipped):$/;"	f	function:test_clip_filter_crinkle_disjoint
assert_default_bounds	tests/plotting/test_renderer.py	/^    def assert_default_bounds(plot_):$/;"	f	function:test_compute_bounds
assert_empty_kwargs	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import assert_empty_kwargs as assert_empty_kwargs$/;"	i
assert_empty_kwargs	build/lib/pyvista/core/utilities/misc.py	/^def assert_empty_kwargs(**kwargs) -> bool:$/;"	f
assert_empty_kwargs	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	build/lib/pyvista/plotting/_plotting.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	build/lib/pyvista/plotting/renderer.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	build/lib/pyvista/plotting/widgets.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/core/utilities/__init__.py	/^from .misc import assert_empty_kwargs as assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/core/utilities/misc.py	/^def assert_empty_kwargs(**kwargs) -> bool:$/;"	f
assert_empty_kwargs	pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/plotting/_plotting.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/plotting/renderer.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	pyvista/plotting/widgets.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	tests/core/test_utilities.py	/^from pyvista.core.utilities.misc import assert_empty_kwargs$/;"	i
assert_empty_kwargs	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import assert_empty_kwargs  # noqa: F401$/;"	i
assert_field_data_keys	tests/core/test_composite.py	/^    def assert_field_data_keys(flat_, root_, nested_):$/;"	f	function:test_flatten
assert_volume	tests/core/test_dataset.py	/^    def assert_volume(grid):$/;"	f	function:test_volume_area
assignment	build/lib/pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
assignment	pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
assume	tests/core/test_dataobject_filters.py	/^from hypothesis import assume$/;"	i
asyncio	build/lib/pyvista/trame/jupyter.py	/^import asyncio$/;"	i
asyncio	examples/99-advanced/customization_trame_toolbar.py	/^import asyncio$/;"	i
asyncio	pyvista/trame/jupyter.py	/^import asyncio$/;"	i
atmos_conv	doc/source/make_external_gallery.py	/^    atmos_conv=Example($/;"	v
atmosphere_texture	examples/99-advanced/planets.py	/^atmosphere_texture = examples.planets.download_venus_surface(atmosphere=True, texture=True)$/;"	v
atomize	build/lib/pyvista/demos/logo.py	/^def atomize(grid, shift_fac=0.1, scale=0.9):$/;"	f
atomize	pyvista/demos/logo.py	/^def atomize(grid, shift_fac=0.1, scale=0.9):$/;"	f
attach_export	build/lib/pyvista/trame/ui/vuetify2.py	/^            def attach_export():$/;"	f	function:Viewer.ui_controls
attach_export	build/lib/pyvista/trame/ui/vuetify3.py	/^            def attach_export():$/;"	f	function:Viewer.ui_controls
attach_export	pyvista/trame/ui/vuetify2.py	/^            def attach_export():$/;"	f	function:Viewer.ui_controls
attach_export	pyvista/trame/ui/vuetify3.py	/^            def attach_export():$/;"	f	function:Viewer.ui_controls
attach_screenshot	build/lib/pyvista/trame/ui/vuetify2.py	/^                def attach_screenshot():$/;"	f	function:Viewer.ui_controls
attach_screenshot	build/lib/pyvista/trame/ui/vuetify3.py	/^                def attach_screenshot():$/;"	f	function:Viewer.ui_controls
attach_screenshot	pyvista/trame/ui/vuetify2.py	/^                def attach_screenshot():$/;"	f	function:Viewer.ui_controls
attach_screenshot	pyvista/trame/ui/vuetify3.py	/^                def attach_screenshot():$/;"	f	function:Viewer.ui_controls
attenuation_values	build/lib/pyvista/plotting/lights.py	/^    def attenuation_values(self):  # numpydoc ignore=RT01$/;"	m	class:Light
attenuation_values	build/lib/pyvista/plotting/lights.py	/^    def attenuation_values(self, values):$/;"	m	class:Light
attenuation_values	examples/04-lights/shadows.py	/^    attenuation_values=(2, 0, 0),$/;"	v
attenuation_values	pyvista/plotting/lights.py	/^    def attenuation_values(self):  # numpydoc ignore=RT01$/;"	m	class:Light
attenuation_values	pyvista/plotting/lights.py	/^    def attenuation_values(self, values):$/;"	m	class:Light
attr	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
attr	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
attr	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
attr	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
attr	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
attr	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
attr_type	build/lib/pyvista/core/datasetattributes.py	/^attr_type = [$/;"	v
attr_type	pyvista/core/datasetattributes.py	/^attr_type = [$/;"	v
author	doc/source/conf.py	/^author = 'Alex Kaszynski and Bane Sullivan'$/;"	v
auto	doc/source/make_tables.py	/^from enum import auto$/;"	i
auto_close	build/lib/pyvista/_plot.py	/^        auto_close=auto_close,$/;"	v
auto_close	build/lib/pyvista/_plot.py	/^    auto_close = kwargs.get('auto_close')$/;"	v
auto_close	build/lib/pyvista/plotting/themes.py	/^    def auto_close(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
auto_close	build/lib/pyvista/plotting/themes.py	/^    def auto_close(self, value: bool):$/;"	m	class:Theme
auto_close	pyvista/_plot.py	/^        auto_close=auto_close,$/;"	v
auto_close	pyvista/_plot.py	/^    auto_close = kwargs.get('auto_close')$/;"	v
auto_close	pyvista/plotting/themes.py	/^    def auto_close(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
auto_close	pyvista/plotting/themes.py	/^    def auto_close(self, value: bool):$/;"	m	class:Theme
auto_detect_format	build/lib/pyvista/core/utilities/reader.py	/^    def auto_detect_format(self):$/;"	m	class:MultiBlockPlot3DReader
auto_detect_format	build/lib/pyvista/core/utilities/reader.py	/^    def auto_detect_format(self, value) -> None:$/;"	m	class:MultiBlockPlot3DReader
auto_detect_format	pyvista/core/utilities/reader.py	/^    def auto_detect_format(self):$/;"	m	class:MultiBlockPlot3DReader
auto_detect_format	pyvista/core/utilities/reader.py	/^    def auto_detect_format(self, value) -> None:$/;"	m	class:MultiBlockPlot3DReader
autoclose_plotters	build/lib/pyvista/conftest.py	/^def autoclose_plotters():$/;"	f
autoclose_plotters	pyvista/conftest.py	/^def autoclose_plotters():$/;"	f
autodoc_mock_imports	doc/source/conf.py	/^autodoc_mock_imports = ['example']$/;"	v
autodoc_type_aliases	doc/source/conf.py	/^autodoc_type_aliases = {$/;"	v
autosummary_context	doc/source/conf.py	/^autosummary_context = {$/;"	v
average_velocity	examples/01-filter/integrate_data.py	/^average_velocity = total_flow_rate \/ area$/;"	v
avoid	build/lib/pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
avoid	build/lib/pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
avoid	build/lib/pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
avoid	build/lib/pyvista/plotting/composite_mapper.py	/^        from pyvista import MultiBlock  # avoid circular$/;"	i
avoid	pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
avoid	pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
avoid	pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
avoid	pyvista/plotting/composite_mapper.py	/^        from pyvista import MultiBlock  # avoid circular$/;"	i
avoids	build/lib/pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
avoids	pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
axes	build/lib/pyvista/plotting/affine_widget.py	/^    def axes(self):$/;"	m	class:AffineWidget3D
axes	build/lib/pyvista/plotting/affine_widget.py	/^    def axes(self, axes):$/;"	m	class:AffineWidget3D
axes	build/lib/pyvista/plotting/themes.py	/^    def axes(self) -> _AxesConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
axes	build/lib/pyvista/plotting/themes.py	/^    def axes(self, config: _AxesConfig):$/;"	m	class:Theme
axes	examples/01-filter/rotate.py	/^axes = pv.Axes(show_actor=True, actor_scale=2.0, line_width=5)$/;"	v
axes	pyvista/plotting/affine_widget.py	/^    def axes(self):$/;"	m	class:AffineWidget3D
axes	pyvista/plotting/affine_widget.py	/^    def axes(self, axes):$/;"	m	class:AffineWidget3D
axes	pyvista/plotting/themes.py	/^    def axes(self) -> _AxesConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
axes	pyvista/plotting/themes.py	/^    def axes(self, config: _AxesConfig):$/;"	m	class:Theme
axes	tests/plotting/test_axes.py	/^def axes():$/;"	f
axes_actor	build/lib/pyvista/plotting/tools.py	/^    axes_actor = _vtk.vtkAnnotatedCubeActor()$/;"	v
axes_actor	build/lib/pyvista/plotting/tools.py	/^    axes_actor = _vtk.vtkAxesActor()$/;"	v
axes_actor	pyvista/plotting/tools.py	/^    axes_actor = _vtk.vtkAnnotatedCubeActor()$/;"	v
axes_actor	pyvista/plotting/tools.py	/^    axes_actor = _vtk.vtkAxesActor()$/;"	v
axes_actor	tests/plotting/test_axes.py	/^def axes_actor(axes):$/;"	f
axes_assembly	tests/plotting/test_axes_assembly.py	/^def axes_assembly():$/;"	f
axes_assembly_symmetric	tests/plotting/test_axes_assembly.py	/^def axes_assembly_symmetric():$/;"	f
axes_enabled	build/lib/pyvista/plotting/renderer.py	/^    def axes_enabled(self):$/;"	m	class:Renderer
axes_enabled	pyvista/plotting/renderer.py	/^    def axes_enabled(self):$/;"	m	class:Renderer
axes_geometry_source	tests/core/test_geometric_sources.py	/^def axes_geometry_source():$/;"	f
axes_ranges	examples/01-filter/image_fft_perlin_noise.py	/^    axes_ranges=(0, max_freq, 0, max_freq, 0, warped_subset.bounds[-1]),$/;"	v
axes_ranges	examples/02-plot/bounds.py	/^    axes_ranges=[0, x_size, 0, y_size, 0, z_size],$/;"	v
axial_num_puppies	examples/02-plot/texture.py	/^axial_num_puppies = 4$/;"	v
axis	examples/02-plot/spherical.py	/^    axis=1,$/;"	v
axis	tests/plotting/test_charts.py	/^def axis(chart_2d):$/;"	f
axis_angle_rotation	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import axis_angle_rotation$/;"	i
axis_angle_rotation	build/lib/pyvista/core/utilities/transformations.py	/^def axis_angle_rotation($/;"	f
axis_angle_rotation	pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import axis_angle_rotation$/;"	i
axis_angle_rotation	pyvista/core/utilities/transformations.py	/^def axis_angle_rotation($/;"	f
axis_rotation	build/lib/pyvista/core/utilities/__init__.py	/^from .helpers import axis_rotation as axis_rotation$/;"	i
axis_rotation	build/lib/pyvista/core/utilities/helpers.py	/^def axis_rotation($/;"	f
axis_rotation	pyvista/core/utilities/__init__.py	/^from .helpers import axis_rotation as axis_rotation$/;"	i
axis_rotation	pyvista/core/utilities/helpers.py	/^def axis_rotation($/;"	f
azimuth	build/lib/pyvista/plotting/camera.py	/^    def azimuth(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
azimuth	build/lib/pyvista/plotting/camera.py	/^    def azimuth(self, angle):$/;"	m	class:Camera
azimuth	pyvista/plotting/camera.py	/^    def azimuth(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
azimuth	pyvista/plotting/camera.py	/^    def azimuth(self, angle):$/;"	m	class:Camera
b	doc/source/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
b	doc/source/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
b	examples/00-load/create_kochanek_spline.py	/^b = [-1.0, -0.5, 0.0, 0.5, 1.0]$/;"	v
b	examples/01-filter/compute_volume.py	/^    b = bodies[key]$/;"	v
b	examples/01-filter/geodesic.py	/^b = land.geodesic(cape_town, bangkok)$/;"	v
b	examples/01-filter/slicing.py	/^b = mesh.center - normal * mesh.length \/ 3.0$/;"	v
b	examples/02-plot/plot_over_circular_arc.py	/^b = arc.points[-1]$/;"	v
b	examples/02-plot/plot_over_line.py	/^b = [mesh.bounds.x_max, mesh.bounds.y_max, mesh.bounds.z_max]$/;"	v
b	examples/02-plot/plot_over_line.py	/^b = [mesh.center[0], mesh.bounds.y_max, mesh.bounds.z_max]$/;"	v
b	examples/99-advanced/antarctica_compare.py	/^b = extract_node(20)$/;"	v
b	examples/99-advanced/fea_hertzian_contact_pressure.py	/^b = [0.095, ypos, 0.2 - 1e-4]$/;"	v
b	tests/plotting/tinypages/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
b	tests/plotting/tinypages/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
b_scale	build/lib/pyvista/core/utilities/reader.py	/^    def b_scale(self) -> float:$/;"	m	class:GaussianCubeReader
b_scale	build/lib/pyvista/core/utilities/reader.py	/^    def b_scale(self, b_scale: float) -> None:$/;"	m	class:GaussianCubeReader
b_scale	pyvista/core/utilities/reader.py	/^    def b_scale(self) -> float:$/;"	m	class:GaussianCubeReader
b_scale	pyvista/core/utilities/reader.py	/^    def b_scale(self, b_scale: float) -> None:$/;"	m	class:GaussianCubeReader
backface_culling	build/lib/pyvista/demos/logo.py	/^        backface_culling=True,$/;"	v
backface_culling	pyvista/demos/logo.py	/^        backface_culling=True,$/;"	v
backface_params	examples/02-plot/backface_props.py	/^    backface_params={'color': 'r'},$/;"	v
backface_params	examples/02-plot/backface_props.py	/^    backface_params={'color': [0.2, 0.2, 0.2]},$/;"	v
backface_params	examples/02-plot/backface_props.py	/^backface_params = dict(color='mediumseagreen', specular=1.0, specular_power=50.0)$/;"	v
backface_params	examples/02-plot/backface_props.py	/^backface_params = dict(color='orangered')$/;"	v
backface_params	examples/02-plot/backface_props.py	/^backface_params = dict(opacity=0.5)$/;"	v
backface_params	examples/99-advanced/sphere_eversion.py	/^    backface_params=dict(color='forestgreen'),$/;"	v
backface_prop	build/lib/pyvista/plotting/actor.py	/^    def backface_prop(self) -> pyvista.Property | None:  # numpydoc ignore=RT01$/;"	m	class:Actor
backface_prop	build/lib/pyvista/plotting/actor.py	/^    def backface_prop(self, value: pyvista.Property) -> None:$/;"	m	class:Actor
backface_prop	pyvista/plotting/actor.py	/^    def backface_prop(self) -> pyvista.Property | None:  # numpydoc ignore=RT01$/;"	m	class:Actor
backface_prop	pyvista/plotting/actor.py	/^    def backface_prop(self, value: pyvista.Property) -> None:$/;"	m	class:Actor
background	build/lib/pyvista/plotting/themes.py	/^    def background(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
background	build/lib/pyvista/plotting/themes.py	/^    def background(self, new_background: ColorLike) -> None:$/;"	m	class:Theme
background	examples/00-load/create_truss.py	/^    background='w',$/;"	v
background	examples/01-filter/sampling_functions_3d.py	/^    background='white',$/;"	v
background	examples/99-advanced/atomic_orbitals.py	/^    background='k',$/;"	v
background	pyvista/plotting/themes.py	/^    def background(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
background	pyvista/plotting/themes.py	/^    def background(self, new_background: ColorLike) -> None:$/;"	m	class:Theme
background_color	build/lib/pyvista/plotting/charts.py	/^    def background_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
background_color	build/lib/pyvista/plotting/charts.py	/^    def background_color(self, val) -> None:$/;"	m	class:_Chart
background_color	build/lib/pyvista/plotting/plotter.py	/^    def background_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
background_color	build/lib/pyvista/plotting/plotter.py	/^    def background_color(self, color) -> None:$/;"	m	class:BasePlotter
background_color	build/lib/pyvista/plotting/renderer.py	/^    def background_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
background_color	build/lib/pyvista/plotting/renderer.py	/^    def background_color(self, color) -> None:$/;"	m	class:Renderer
background_color	build/lib/pyvista/plotting/text.py	/^    def background_color(self) -> Color:$/;"	m	class:TextProperty
background_color	build/lib/pyvista/plotting/text.py	/^    def background_color(self, color: ColorLike):$/;"	m	class:TextProperty
background_color	pyvista/plotting/charts.py	/^    def background_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
background_color	pyvista/plotting/charts.py	/^    def background_color(self, val) -> None:$/;"	m	class:_Chart
background_color	pyvista/plotting/plotter.py	/^    def background_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
background_color	pyvista/plotting/plotter.py	/^    def background_color(self, color) -> None:$/;"	m	class:BasePlotter
background_color	pyvista/plotting/renderer.py	/^    def background_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
background_color	pyvista/plotting/renderer.py	/^    def background_color(self, color) -> None:$/;"	m	class:Renderer
background_color	pyvista/plotting/text.py	/^    def background_color(self) -> Color:$/;"	m	class:TextProperty
background_color	pyvista/plotting/text.py	/^    def background_color(self, color: ColorLike):$/;"	m	class:TextProperty
background_opacity	build/lib/pyvista/plotting/text.py	/^    def background_opacity(self) -> float:$/;"	m	class:TextProperty
background_opacity	build/lib/pyvista/plotting/text.py	/^    def background_opacity(self, opacity: float):$/;"	m	class:TextProperty
background_opacity	pyvista/plotting/text.py	/^    def background_opacity(self) -> float:$/;"	m	class:TextProperty
background_opacity	pyvista/plotting/text.py	/^    def background_opacity(self, opacity: float):$/;"	m	class:TextProperty
background_texture	build/lib/pyvista/plotting/charts.py	/^    def background_texture(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
background_texture	build/lib/pyvista/plotting/charts.py	/^    def background_texture(self, val) -> None:$/;"	m	class:_Chart
background_texture	pyvista/plotting/charts.py	/^    def background_texture(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
background_texture	pyvista/plotting/charts.py	/^    def background_texture(self, val) -> None:$/;"	m	class:_Chart
badge	doc/source/make_tables.py	/^    badge = CategoryBadge('Medical', ref='medical_dataset_gallery')$/;"	v	class:MedicalCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('ExplicitStructuredGrid', ref='pointset_datatype_gallery')$/;"	v	class:ExplicitStructuredGridCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('ImageData', ref='grid_datatype_gallery')$/;"	v	class:ImageDataCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('Misc', ref='misc_dataset_gallery')$/;"	v	class:MiscCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('MultiBlock', ref='composite_dataset_gallery')$/;"	v	class:MultiBlockCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('PointSet', ref='pointset_datatype_gallery')$/;"	v	class:PointSetCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('PolyData', ref='pointset_datatype_gallery')$/;"	v	class:PolyDataCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('RectilinearGrid', ref='grid_datatype_gallery')$/;"	v	class:RectilinearGridCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('StructuredGrid', ref='pointset_datatype_gallery')$/;"	v	class:StructuredGridCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('Texture', ref='imagedata_texture_gallery')$/;"	v	class:TextureCarousel
badge	doc/source/make_tables.py	/^    badge = DataTypeBadge('UnstructuredGrid', ref='pointset_datatype_gallery')$/;"	v	class:UnstructuredGridCarousel
badge	doc/source/make_tables.py	/^    badge = ModuleBadge('Built-in', ref='modules_gallery')$/;"	v	class:BuiltinCarousel
badge	doc/source/make_tables.py	/^    badge = ModuleBadge('Downloads', ref='modules_gallery')$/;"	v	class:DownloadsCarousel
badge	doc/source/make_tables.py	/^    badge = ModuleBadge('Planets', ref='modules_gallery')$/;"	v	class:PlanetsCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('2D Image', ref='imagedata_texture_gallery')$/;"	v	class:ImageData2DCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('3D Volume', ref='imagedata_texture_gallery')$/;"	v	class:ImageData3DCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('Cubemap', ref='imagedata_texture_gallery')$/;"	v	class:CubemapCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('Heterogeneous', ref='composite_dataset_gallery')$/;"	v	class:MultiBlockHeteroCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('Homogeneous', ref='composite_dataset_gallery')$/;"	v	class:MultiBlockHomoCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('Point Cloud', ref='pointcloud_surfacemesh_gallery')$/;"	v	class:PointCloudCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('Single Block', ref='composite_dataset_gallery')$/;"	v	class:MultiBlockSingleCarousel
badge	doc/source/make_tables.py	/^    badge = SpecialDataTypeBadge('Surface Mesh', ref='pointcloud_surfacemesh_gallery')$/;"	v	class:SurfaceMeshCarousel
bangkok	examples/01-filter/geodesic.py	/^bangkok = land.find_closest_point((-0.177077, 0.955419, 0.236273))$/;"	v
bar	build/lib/pyvista/plotting/charts.py	/^    def bar(self, x, y, color=None, orientation='V', label=None):$/;"	m	class:Chart2D
bar	pyvista/plotting/charts.py	/^    def bar(self, x, y, color=None, orientation='V', label=None):$/;"	m	class:Chart2D
bar	tests/plotting/test_regression.py	/^    class bar:$/;"	c	function:test_commpare_images_raises
bar_plot	tests/plotting/test_charts.py	/^def bar_plot(chart_2d):$/;"	f
barth_sextic	examples/01-filter/flying_edges.py	/^def barth_sextic(x, y, z):$/;"	f
base_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def base_array_names(self):$/;"	m	class:CGNSReader
base_array_names	pyvista/core/utilities/reader.py	/^    def base_array_names(self):$/;"	m	class:CGNSReader
base_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def base_array_status(self, name: str) -> bool:$/;"	m	class:CGNSReader
base_array_status	pyvista/core/utilities/reader.py	/^    def base_array_status(self, name: str) -> bool:$/;"	m	class:CGNSReader
base_mesh	examples/04-lights/shadows.py	/^base_mesh = pyvista.Cube(center, width, length, height)$/;"	v
base_url	build/lib/pyvista/examples/_dataset_loader.py	/^    def base_url(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
base_url	build/lib/pyvista/examples/_dataset_loader.py	/^    def base_url(self) -> str:$/;"	m	class:_DownloadableFile
base_url	build/lib/pyvista/examples/_dataset_loader.py	/^    def base_url(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDownloadableDatasetLoader
base_url	build/lib/pyvista/examples/downloads.py	/^    base_url=SOURCE,$/;"	v
base_url	build/lib/pyvista/examples/gltf.py	/^    base_url='https:\/\/raw.githubusercontent.com\/KhronosGroup\/glTF-Sample-Models\/master\/2.0\/',$/;"	v
base_url	pyvista/examples/_dataset_loader.py	/^    def base_url(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
base_url	pyvista/examples/_dataset_loader.py	/^    def base_url(self) -> str:$/;"	m	class:_DownloadableFile
base_url	pyvista/examples/_dataset_loader.py	/^    def base_url(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDownloadableDatasetLoader
base_url	pyvista/examples/downloads.py	/^    base_url=SOURCE,$/;"	v
base_url	pyvista/examples/gltf.py	/^    base_url='https:\/\/raw.githubusercontent.com\/KhronosGroup\/glTF-Sample-Models\/master\/2.0\/',$/;"	v
base_viewer	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui import base_viewer$/;"	i
beach	tests/core/test_imagedata_filters.py	/^def beach():$/;"	f
beam	tests/test_meshio.py	/^beam = pv.UnstructuredGrid(examples.hexbeamfile)$/;"	v
before_close_callback	build/lib/pyvista/_plot.py	/^        before_close_callback=before_close_callback,$/;"	v
before_close_callback	build/lib/pyvista/_plot.py	/^    before_close_callback = kwargs.pop('before_close_callback', None)$/;"	v
before_close_callback	build/lib/pyvista/plotting/themes.py	/^    def before_close_callback($/;"	m	class:Theme
before_close_callback	build/lib/pyvista/plotting/themes.py	/^    def before_close_callback(self) -> Callable[[pyvista.Plotter], None]:  # numpydoc ignore=RT01$/;"	m	class:Theme
before_close_callback	pyvista/_plot.py	/^        before_close_callback=before_close_callback,$/;"	v
before_close_callback	pyvista/_plot.py	/^    before_close_callback = kwargs.pop('before_close_callback', None)$/;"	v
before_close_callback	pyvista/plotting/themes.py	/^    def before_close_callback($/;"	m	class:Theme
before_close_callback	pyvista/plotting/themes.py	/^    def before_close_callback(self) -> Callable[[pyvista.Plotter], None]:  # numpydoc ignore=RT01$/;"	m	class:Theme
behavior	build/lib/pyvista/plotting/charts.py	/^    def behavior(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
behavior	build/lib/pyvista/plotting/charts.py	/^    def behavior(self, val):$/;"	m	class:Axis
behavior	pyvista/plotting/charts.py	/^    def behavior(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
behavior	pyvista/plotting/charts.py	/^    def behavior(self, val):$/;"	m	class:Axis
below_color	examples/01-filter/connectivity.py	/^    below_color='blue',$/;"	v
below_color	examples/01-filter/mesh_quality.py	/^    below_color='blue',$/;"	v
below_range_color	build/lib/pyvista/plotting/lookup_table.py	/^    def below_range_color(self) -> Color | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
below_range_color	build/lib/pyvista/plotting/lookup_table.py	/^    def below_range_color(self, value: bool | ColorLike | None):$/;"	m	class:LookupTable
below_range_color	build/lib/pyvista/plotting/themes.py	/^    def below_range_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
below_range_color	build/lib/pyvista/plotting/themes.py	/^    def below_range_color(self, value: ColorLike):$/;"	m	class:Theme
below_range_color	pyvista/plotting/lookup_table.py	/^    def below_range_color(self) -> Color | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
below_range_color	pyvista/plotting/lookup_table.py	/^    def below_range_color(self, value: bool | ColorLike | None):$/;"	m	class:LookupTable
below_range_color	pyvista/plotting/themes.py	/^    def below_range_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
below_range_color	pyvista/plotting/themes.py	/^    def below_range_color(self, value: ColorLike):$/;"	m	class:Theme
below_range_opacity	build/lib/pyvista/plotting/lookup_table.py	/^    def below_range_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
below_range_opacity	build/lib/pyvista/plotting/lookup_table.py	/^    def below_range_opacity(self, value):$/;"	m	class:LookupTable
below_range_opacity	pyvista/plotting/lookup_table.py	/^    def below_range_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
below_range_opacity	pyvista/plotting/lookup_table.py	/^    def below_range_opacity(self, value):$/;"	m	class:LookupTable
beta	examples/99-advanced/sphere_eversion.py	/^beta = 1  # arbitrary > 1$/;"	v
betas	examples/02-plot/chart_basics.py	/^betas = [*reversed(alphas)]$/;"	v
billboard	examples/04-lights/attenuation.py	/^billboard = pv.Plane(direction=(1, 0, 0), i_size=6, j_size=6)$/;"	v
black	examples/02-plot/cmap.py	/^black = np.array([11 \/ 256, 11 \/ 256, 11 \/ 256, 1.0])$/;"	v
blend_mode	build/lib/pyvista/plotting/mapper.py	/^    def blend_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
blend_mode	build/lib/pyvista/plotting/mapper.py	/^    def blend_mode(self, value: str | int):$/;"	m	class:_BaseVolumeMapper
blend_mode	pyvista/plotting/mapper.py	/^    def blend_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
blend_mode	pyvista/plotting/mapper.py	/^    def blend_mode(self, value: str | int):$/;"	m	class:_BaseVolumeMapper
block	examples/00-load/load_gltf.py	/^block = pyvista.read(helmet_file)$/;"	v
block	examples/99-advanced/openfoam_tubes.py	/^block = examples.download_openfoam_tubes()$/;"	v
block_attr	build/lib/pyvista/plotting/composite_mapper.py	/^    def block_attr(self) -> CompositeAttributes:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
block_attr	pyvista/plotting/composite_mapper.py	/^    def block_attr(self) -> CompositeAttributes:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
block_attr	tests/plotting/mappers/test_composite_mapper.py	/^def block_attr(block_attributes):$/;"	f
block_attributes	tests/plotting/mappers/test_composite_mapper.py	/^def block_attributes(composite_mapper):$/;"	f
block_filter	build/lib/pyvista/core/composite.py	/^        def block_filter(block: DataSet | None) -> DataSet:$/;"	f	function:MultiBlock.as_unstructured_grid_blocks
block_filter	build/lib/pyvista/core/composite.py	/^        def block_filter(block: DataSet | None) -> PolyData:$/;"	f	function:MultiBlock.as_polydata_blocks
block_filter	pyvista/core/composite.py	/^        def block_filter(block: DataSet | None) -> DataSet:$/;"	f	function:MultiBlock.as_unstructured_grid_blocks
block_filter	pyvista/core/composite.py	/^        def block_filter(block: DataSet | None) -> PolyData:$/;"	f	function:MultiBlock.as_polydata_blocks
block_types	build/lib/pyvista/core/composite.py	/^    def block_types(self) -> set[type[_TypeMultiBlockLeaf]]:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
block_types	pyvista/core/composite.py	/^    def block_types(self) -> set[type[_TypeMultiBlockLeaf]]:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
blocks	examples/02-plot/composite_picking.py	/^blocks = pv.MultiBlock([make_poly() for _ in range(100)])$/;"	v
blue	examples/02-plot/cmap.py	/^blue = np.array([12 \/ 256, 238 \/ 256, 246 \/ 256, 1.0])$/;"	v
bnds	examples/02-plot/bounds.py	/^bnds = central_gear.bounds$/;"	v
bnds	examples/02-plot/plot_over_circular_arc.py	/^bnds = mesh.bounds$/;"	v
bnds	examples/04-lights/shadows.py	/^bnds = mesh.bounds$/;"	v
bodies	examples/01-filter/compute_volume.py	/^bodies = channels.split_bodies()$/;"	v
bodies	examples/01-filter/compute_volume.py	/^bodies = threshed.split_bodies()$/;"	v
bohemiandome	examples/00-load/create_parametric_geometric_objects.py	/^bohemiandome = pv.ParametricBohemianDome()$/;"	v
bold	build/lib/pyvista/plotting/text.py	/^    def bold(self) -> bool:$/;"	m	class:TextProperty
bold	build/lib/pyvista/plotting/text.py	/^    def bold(self, bold: bool):$/;"	m	class:TextProperty
bold	examples/02-plot/bounds.py	/^    bold=True,$/;"	v
bold	pyvista/plotting/text.py	/^    def bold(self) -> bool:$/;"	m	class:TextProperty
bold	pyvista/plotting/text.py	/^    def bold(self, bold: bool):$/;"	m	class:TextProperty
bolt_nut	examples/02-plot/volume.py	/^bolt_nut = examples.download_bolt_nut()$/;"	v
boolean_difference	build/lib/pyvista/core/filters/poly_data.py	/^    def boolean_difference(self, other_mesh, tolerance=1e-5, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
boolean_difference	pyvista/core/filters/poly_data.py	/^    def boolean_difference(self, other_mesh, tolerance=1e-5, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
boolean_intersection	build/lib/pyvista/core/filters/poly_data.py	/^    def boolean_intersection(self, other_mesh, tolerance=1e-5, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
boolean_intersection	pyvista/core/filters/poly_data.py	/^    def boolean_intersection(self, other_mesh, tolerance=1e-5, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
boolean_union	build/lib/pyvista/core/filters/poly_data.py	/^    def boolean_union(self, other_mesh, tolerance=1e-5, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
boolean_union	pyvista/core/filters/poly_data.py	/^    def boolean_union(self, other_mesh, tolerance=1e-5, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
border	build/lib/pyvista/_plot.py	/^        border=border,$/;"	v
border	pyvista/_plot.py	/^        border=border,$/;"	v
border_color	build/lib/pyvista/_plot.py	/^        border_color=border_color,$/;"	v
border_color	build/lib/pyvista/plotting/charts.py	/^    def border_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_color	build/lib/pyvista/plotting/charts.py	/^    def border_color(self, val) -> None:$/;"	m	class:_Chart
border_color	build/lib/pyvista/plotting/renderer.py	/^    def border_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
border_color	pyvista/_plot.py	/^        border_color=border_color,$/;"	v
border_color	pyvista/plotting/charts.py	/^    def border_color(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_color	pyvista/plotting/charts.py	/^    def border_color(self, val) -> None:$/;"	m	class:_Chart
border_color	pyvista/plotting/renderer.py	/^    def border_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
border_style	build/lib/pyvista/plotting/charts.py	/^    def border_style(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_style	build/lib/pyvista/plotting/charts.py	/^    def border_style(self, val) -> None:$/;"	m	class:_Chart
border_style	pyvista/plotting/charts.py	/^    def border_style(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_style	pyvista/plotting/charts.py	/^    def border_style(self, val) -> None:$/;"	m	class:_Chart
border_width	build/lib/pyvista/_plot.py	/^        border_width=border_width,$/;"	v
border_width	build/lib/pyvista/plotting/charts.py	/^    def border_width(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_width	build/lib/pyvista/plotting/charts.py	/^    def border_width(self, val) -> None:$/;"	m	class:_Chart
border_width	build/lib/pyvista/plotting/renderer.py	/^    def border_width(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
border_width	pyvista/_plot.py	/^        border_width=border_width,$/;"	v
border_width	pyvista/plotting/charts.py	/^    def border_width(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
border_width	pyvista/plotting/charts.py	/^    def border_width(self, val) -> None:$/;"	m	class:_Chart
border_width	pyvista/plotting/renderer.py	/^    def border_width(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
boring_cmap	examples/02-plot/cmap.py	/^boring_cmap = plt.get_cmap('viridis', 5)$/;"	v
bottom	examples/00-load/create_structured_surface.py	/^bottom = struct.points.copy()$/;"	v
bottom	examples_trame/basic/file_viewer.py	/^            bottom=True,$/;"	v
bound	build/lib/pyvista/core/_typing_core/_array_like.py	/^    bound=Union[np.floating, np.integer, np.bool_, float, int, bool],  # type: ignore[type-arg]$/;"	v
bound	pyvista/core/_typing_core/_array_like.py	/^    bound=Union[np.floating, np.integer, np.bool_, float, int, bool],  # type: ignore[type-arg]$/;"	v
boundaries	examples/00-load/create_sphere.py	/^boundaries = mesh.extract_feature_edges($/;"	v
boundaries	examples/03-widgets/sphere_widget.py	/^boundaries = np.array([[xmin, ymin, 0], [xmin, ymax, 0], [xmax, ymin, 0], [xmax, ymax, 0]])$/;"	v
boundaries	examples/99-advanced/openfoam_example.py	/^boundaries = mesh['boundary']$/;"	v
boundary	examples/01-filter/integrate_data.py	/^boundary = dataset.decimate_boundary().extract_all_edges()$/;"	v
boundary	examples/01-filter/streamlines.py	/^boundary = mesh.decimate_boundary().extract_all_edges()$/;"	v
boundary_edges	examples/02-plot/shading.py	/^    boundary_edges=False,$/;"	v
bounding_box	build/lib/pyvista/core/filters/data_set.py	/^    def bounding_box(  # type: ignore[misc]$/;"	m	class:DataSetFilters
bounding_box	pyvista/core/filters/data_set.py	/^    def bounding_box(  # type: ignore[misc]$/;"	m	class:DataSetFilters
bounds	build/lib/pyvista/core/cell.py	/^    def bounds(self: Self) -> BoundsTuple:$/;"	m	class:Cell
bounds	build/lib/pyvista/core/composite.py	/^    def bounds(self: MultiBlock) -> BoundsTuple:$/;"	m	class:MultiBlock
bounds	build/lib/pyvista/core/dataset.py	/^    def bounds(self: Self) -> BoundsTuple:$/;"	m	class:DataSet
bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: BoxSource) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:BoxSource
bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: BoxSource, bounds: VectorLike[float]) -> None:$/;"	m	class:BoxSource
bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: CubeSource) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:CubeSource
bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: CubeSource, bounds: VectorLike[float]) -> None:$/;"	m	class:CubeSource
bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: OrthogonalPlanesSource) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: OrthogonalPlanesSource, bounds: BoundsTuple) -> None:$/;"	m	class:OrthogonalPlanesSource
bounds	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
bounds	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def bounds(self, bounds: VectorLike[float]):$/;"	m	class:CubeAxesActor
bounds	build/lib/pyvista/plotting/mapper.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
bounds	build/lib/pyvista/plotting/plotter.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
bounds	build/lib/pyvista/plotting/prop3d.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
bounds	build/lib/pyvista/plotting/prop3d.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
bounds	build/lib/pyvista/plotting/renderer.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:Renderer
bounds	examples/01-filter/clipping.py	/^bounds = [2, 4.5, 2, 4.5, 1, 3]$/;"	v
bounds	examples/02-plot/topo_map.py	/^bounds = (1818000, 1824500, 5645000, 5652500, 0, 3000)$/;"	v
bounds	examples/99-advanced/openfoam_cooling.py	/^bounds = np.array(air.bounds) * 1.2$/;"	v
bounds	examples/99-advanced/openfoam_tubes.py	/^bounds = np.array(air.bounds) * 1.2$/;"	v
bounds	pyvista/core/cell.py	/^    def bounds(self: Self) -> BoundsTuple:$/;"	m	class:Cell
bounds	pyvista/core/composite.py	/^    def bounds(self: MultiBlock) -> BoundsTuple:$/;"	m	class:MultiBlock
bounds	pyvista/core/dataset.py	/^    def bounds(self: Self) -> BoundsTuple:$/;"	m	class:DataSet
bounds	pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: BoxSource) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:BoxSource
bounds	pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: BoxSource, bounds: VectorLike[float]) -> None:$/;"	m	class:BoxSource
bounds	pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: CubeSource) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:CubeSource
bounds	pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: CubeSource, bounds: VectorLike[float]) -> None:$/;"	m	class:CubeSource
bounds	pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: OrthogonalPlanesSource) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
bounds	pyvista/core/utilities/geometric_sources.py	/^    def bounds(self: OrthogonalPlanesSource, bounds: BoundsTuple) -> None:$/;"	m	class:OrthogonalPlanesSource
bounds	pyvista/plotting/cube_axes_actor.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
bounds	pyvista/plotting/cube_axes_actor.py	/^    def bounds(self, bounds: VectorLike[float]):$/;"	m	class:CubeAxesActor
bounds	pyvista/plotting/mapper.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
bounds	pyvista/plotting/plotter.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
bounds	pyvista/plotting/prop3d.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
bounds	pyvista/plotting/prop3d.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
bounds	pyvista/plotting/renderer.py	/^    def bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:Renderer
bour	examples/00-load/create_parametric_geometric_objects.py	/^bour = pv.ParametricBour()$/;"	v
box	build/lib/pyvista/plotting/themes.py	/^    def box(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
box	build/lib/pyvista/plotting/themes.py	/^    def box(self, box: bool):$/;"	m	class:_AxesConfig
box	examples/00-load/create_geometric_objects.py	/^box = pv.Box()$/;"	v
box	pyvista/plotting/themes.py	/^    def box(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
box	pyvista/plotting/themes.py	/^    def box(self, box: bool):$/;"	m	class:_AxesConfig
box_plot	tests/plotting/test_charts.py	/^def box_plot(chart_box):$/;"	f
boy	examples/00-load/create_parametric_geometric_objects.py	/^boy = pv.ParametricBoy()$/;"	v
bprop	examples/02-plot/backface_props.py	/^bprop = actor.backface_prop$/;"	v
bracket	examples/02-plot/lookup_table.py	/^bracket = examples.download_fea_bracket().cell_data_to_point_data()$/;"	v
brush	build/lib/pyvista/plotting/charts.py	/^    def brush(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
brush	pyvista/plotting/charts.py	/^    def brush(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
buffer_shared	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
buffer_shared	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
build_c_coverage	build/lib/pyvista/ext/coverage.py	/^    def build_c_coverage(self) -> None:$/;"	m	class:CoverageBuilder
build_c_coverage	pyvista/ext/coverage.py	/^    def build_c_coverage(self) -> None:$/;"	m	class:CoverageBuilder
build_py_coverage	build/lib/pyvista/ext/coverage.py	/^    def build_py_coverage(self) -> None:$/;"	m	class:CoverageBuilder
build_py_coverage	pyvista/ext/coverage.py	/^    def build_py_coverage(self) -> None:$/;"	m	class:CoverageBuilder
build_url	build/lib/pyvista/trame/jupyter.py	/^def build_url($/;"	f
build_url	pyvista/trame/jupyter.py	/^def build_url($/;"	f
build_url	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.jupyter import build_url$/;"	i
bunnies	examples/02-plot/depth_of_field.py	/^bunnies = grid.glyph(geom=mesh, scale=False, orient=False)$/;"	v
bunny	examples/02-plot/silhouette.py	/^bunny = examples.download_bunny()$/;"	v
bunny	tests/core/test_geometric_sources.py	/^def bunny():$/;"	f
button	build/lib/pyvista/trame/ui/vuetify2.py	/^def button(click, icon, tooltip):  # numpydoc ignore=PR01$/;"	f
button	build/lib/pyvista/trame/ui/vuetify3.py	/^def button(click, icon, tooltip):  # numpydoc ignore=PR01$/;"	f
button	examples/99-advanced/customization_trame_toolbar.py	/^from pyvista.trame.ui.vuetify3 import button$/;"	i
button	pyvista/trame/ui/vuetify2.py	/^def button(click, icon, tooltip):  # numpydoc ignore=PR01$/;"	f
button	pyvista/trame/ui/vuetify3.py	/^def button(click, icon, tooltip):  # numpydoc ignore=PR01$/;"	f
button_play	examples/99-advanced/customization_trame_toolbar.py	/^def button_play():$/;"	f
c	examples/00-load/create_kochanek_spline.py	/^c = [-1.0, -0.5, 0.0, 0.5, 1.0]$/;"	v
c	examples/01-filter/geodesic.py	/^c = land.geodesic(cape_town, rome)$/;"	v
c_res	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def c_res(self: DiscSource) -> int:$/;"	m	class:DiscSource
c_res	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def c_res(self: DiscSource, c_res: int) -> None:$/;"	m	class:DiscSource
c_res	pyvista/core/utilities/geometric_sources.py	/^    def c_res(self: DiscSource) -> int:$/;"	m	class:DiscSource
c_res	pyvista/core/utilities/geometric_sources.py	/^    def c_res(self: DiscSource, c_res: int) -> None:$/;"	m	class:DiscSource
cache	build/lib/pyvista/core/utilities/misc.py	/^from functools import cache$/;"	i
cache	pyvista/core/utilities/misc.py	/^from functools import cache$/;"	i
callback	build/lib/pyvista/plotting/widgets.py	/^        def callback(normal, loc):$/;"	f	function:WidgetHelper.add_mesh_clip_plane
callback	build/lib/pyvista/plotting/widgets.py	/^        def callback(normal, origin):  # numpydoc ignore=PR01$/;"	f	function:WidgetHelper.add_volume_clip_plane
callback	build/lib/pyvista/plotting/widgets.py	/^        def callback(normal, origin):$/;"	f	function:WidgetHelper.add_mesh_slice
callback	build/lib/pyvista/plotting/widgets.py	/^        def callback(planes):$/;"	f	function:WidgetHelper.add_mesh_clip_box
callback	build/lib/pyvista/plotting/widgets.py	/^        def callback(spline):$/;"	f	function:WidgetHelper.add_mesh_slice_spline
callback	build/lib/pyvista/plotting/widgets.py	/^        def callback(value):$/;"	f	function:WidgetHelper.add_mesh_isovalue
callback	build/lib/pyvista/plotting/widgets.py	/^        def callback(value):$/;"	f	function:WidgetHelper.add_mesh_threshold
callback	examples/02-plot/composite_picking.py	/^def callback(index, *args):$/;"	f
callback	examples/02-plot/distance_measurement.py	/^def callback(a, b, distance):$/;"	f
callback	examples/02-plot/mesh_picking.py	/^def callback(actor):$/;"	f
callback	examples/02-plot/mesh_picking.py	/^def callback(mesh):$/;"	f
callback	examples/02-plot/surface_picking.py	/^def callback(point):$/;"	f
callback	examples/03-widgets/animation.py	/^def callback(step):$/;"	f
callback	examples/03-widgets/multi_slider_widget.py	/^    callback=lambda value: engine('phi_resolution', int(value)),$/;"	v	class:MyCustomRoutine
callback	examples/03-widgets/multi_slider_widget.py	/^    callback=lambda value: engine('radius', value),$/;"	v
callback	examples/03-widgets/multi_slider_widget.py	/^    callback=lambda value: engine('theta_resolution', int(value)),$/;"	v
callback	examples/03-widgets/sphere_widget.py	/^def callback(point):$/;"	f
callback	examples/03-widgets/sphere_widget.py	/^def callback(point, i):$/;"	f
callback	pyvista/plotting/widgets.py	/^        def callback(normal, loc):$/;"	f	function:WidgetHelper.add_mesh_clip_plane
callback	pyvista/plotting/widgets.py	/^        def callback(normal, origin):  # numpydoc ignore=PR01$/;"	f	function:WidgetHelper.add_volume_clip_plane
callback	pyvista/plotting/widgets.py	/^        def callback(normal, origin):$/;"	f	function:WidgetHelper.add_mesh_slice
callback	pyvista/plotting/widgets.py	/^        def callback(planes):$/;"	f	function:WidgetHelper.add_mesh_clip_box
callback	pyvista/plotting/widgets.py	/^        def callback(spline):$/;"	f	function:WidgetHelper.add_mesh_slice_spline
callback	pyvista/plotting/widgets.py	/^        def callback(value):$/;"	f	function:WidgetHelper.add_mesh_isovalue
callback	pyvista/plotting/widgets.py	/^        def callback(value):$/;"	f	function:WidgetHelper.add_mesh_threshold
callback	tests/plotting/test_picking.py	/^        callback=callback,$/;"	v	class:test_single_cell_picking.PickCallback
callback	tests/plotting/test_picking.py	/^        callback=tracker,$/;"	v	class:test_element_picking.Tracker
callback	tests/plotting/test_picking.py	/^        callback=tracker,$/;"	v	class:test_point_picking_window.Tracker
callback	tests/plotting/test_picking.py	/^    def callback(click_point):$/;"	f	function:test_fly_to_right_click
callback	tests/plotting/test_picking.py	/^    def callback(click_point):$/;"	f	function:test_fly_to_right_click_multi_render
callback	tests/plotting/test_picking.py	/^    def callback(click_point):$/;"	f	function:test_switch_picking_type
callback	tests/plotting/test_picking.py	/^    def callback(picked):$/;"	f	function:test_switch_picking_type
callback	tests/plotting/test_picking.py	/^    def callback(picked_actor):$/;"	f	function:test_actor_picking
callback	tests/plotting/test_picking.py	/^    def callback(picked_cells):$/;"	f	function:test_cell_picking_interactive
callback	tests/plotting/test_picking.py	/^    def callback(picked_cells):$/;"	f	function:test_cell_picking_interactive_subplot
callback	tests/plotting/test_picking.py	/^    def callback(picked_mesh):$/;"	f	function:test_mesh_picking
callback	tests/plotting/test_picking.py	/^    def callback(picked_point):$/;"	f	function:test_point_picking
callback	tests/plotting/test_picking.py	/^    def callback(point):$/;"	f	function:test_surface_point_picking
callback	tests/plotting/test_plotting.py	/^    def callback(this_pl):$/;"	f	function:test_plotter_render_callback
callback	tests/plotting/test_render_window_interactor.py	/^    def callback(a, b, *, c, d=1.0):$/;"	f	function:test_observers
callback	tests/plotting/test_render_window_interactor.py	/^    def callback(mouse_point):$/;"	f	function:test_track_click_position_multi_render
callback	tests/plotting/test_render_window_interactor.py	/^    def callback(step):$/;"	f	function:test_add_timer_event
camera	build/lib/pyvista/plotting/axes_assembly.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
camera	build/lib/pyvista/plotting/axes_assembly.py	/^    def camera(self, camera):$/;"	m	class:PlanesAssembly
camera	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def camera(self) -> pyvista.Camera:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
camera	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def camera(self, camera: pyvista.Camera):$/;"	m	class:CubeAxesActor
camera	build/lib/pyvista/plotting/plotter.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera	build/lib/pyvista/plotting/plotter.py	/^    def camera(self, camera) -> None:$/;"	m	class:BasePlotter
camera	build/lib/pyvista/plotting/renderer.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera	build/lib/pyvista/plotting/renderer.py	/^    def camera(self, source) -> None:$/;"	m	class:Renderer
camera	build/lib/pyvista/plotting/themes.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
camera	build/lib/pyvista/plotting/themes.py	/^    def camera(self, camera):$/;"	m	class:Theme
camera	examples/01-filter/rotate.py	/^camera = pv.Camera()$/;"	v
camera	pyvista/plotting/axes_assembly.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
camera	pyvista/plotting/axes_assembly.py	/^    def camera(self, camera):$/;"	m	class:PlanesAssembly
camera	pyvista/plotting/cube_axes_actor.py	/^    def camera(self) -> pyvista.Camera:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
camera	pyvista/plotting/cube_axes_actor.py	/^    def camera(self, camera: pyvista.Camera):$/;"	m	class:CubeAxesActor
camera	pyvista/plotting/plotter.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera	pyvista/plotting/plotter.py	/^    def camera(self, camera) -> None:$/;"	m	class:BasePlotter
camera	pyvista/plotting/renderer.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera	pyvista/plotting/renderer.py	/^    def camera(self, source) -> None:$/;"	m	class:Renderer
camera	pyvista/plotting/themes.py	/^    def camera(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
camera	pyvista/plotting/themes.py	/^    def camera(self, camera):$/;"	m	class:Theme
camera	tests/plotting/test_camera.py	/^def camera():$/;"	f
camera_position	build/lib/pyvista/plotting/plotter.py	/^    def camera_position(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera_position	build/lib/pyvista/plotting/plotter.py	/^    def camera_position(self, camera_location) -> None:$/;"	m	class:BasePlotter
camera_position	build/lib/pyvista/plotting/renderer.py	/^    def camera_position(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera_position	build/lib/pyvista/plotting/renderer.py	/^    def camera_position(self, camera_location):$/;"	m	class:Renderer
camera_position	examples/01-filter/streamlines_2D.py	/^camera_position = [(7, 0, 20.0), (7, 0.0, 0.0), (0.0, 1.0, 0.0)]$/;"	v
camera_position	pyvista/plotting/plotter.py	/^    def camera_position(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera_position	pyvista/plotting/plotter.py	/^    def camera_position(self, camera_location) -> None:$/;"	m	class:BasePlotter
camera_position	pyvista/plotting/renderer.py	/^    def camera_position(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera_position	pyvista/plotting/renderer.py	/^    def camera_position(self, camera_location):$/;"	m	class:Renderer
camera_set	build/lib/pyvista/plotting/plotter.py	/^    def camera_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera_set	build/lib/pyvista/plotting/plotter.py	/^    def camera_set(self, is_set: bool) -> None:$/;"	m	class:BasePlotter
camera_set	build/lib/pyvista/plotting/renderer.py	/^    def camera_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera_set	build/lib/pyvista/plotting/renderer.py	/^    def camera_set(self, is_set: bool) -> None:$/;"	m	class:Renderer
camera_set	pyvista/plotting/plotter.py	/^    def camera_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
camera_set	pyvista/plotting/plotter.py	/^    def camera_set(self, is_set: bool) -> None:$/;"	m	class:BasePlotter
camera_set	pyvista/plotting/renderer.py	/^    def camera_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Renderer
camera_set	pyvista/plotting/renderer.py	/^    def camera_set(self, is_set: bool) -> None:$/;"	m	class:Renderer
cap_length	build/lib/pyvista/plotting/themes.py	/^    def cap_length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_length	build/lib/pyvista/plotting/themes.py	/^    def cap_length(self, cap_length: float):$/;"	m	class:_SliderStyleConfig
cap_length	pyvista/plotting/themes.py	/^    def cap_length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_length	pyvista/plotting/themes.py	/^    def cap_length(self, cap_length: float):$/;"	m	class:_SliderStyleConfig
cap_opacity	build/lib/pyvista/plotting/themes.py	/^    def cap_opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_opacity	build/lib/pyvista/plotting/themes.py	/^    def cap_opacity(self, cap_opacity: float):$/;"	m	class:_SliderStyleConfig
cap_opacity	pyvista/plotting/themes.py	/^    def cap_opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_opacity	pyvista/plotting/themes.py	/^    def cap_opacity(self, cap_opacity: float):$/;"	m	class:_SliderStyleConfig
cap_width	build/lib/pyvista/plotting/themes.py	/^    def cap_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_width	build/lib/pyvista/plotting/themes.py	/^    def cap_width(self, cap_width: float):$/;"	m	class:_SliderStyleConfig
cap_width	pyvista/plotting/themes.py	/^    def cap_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
cap_width	pyvista/plotting/themes.py	/^    def cap_width(self, cap_width: float):$/;"	m	class:_SliderStyleConfig
cape_town	examples/01-filter/geodesic.py	/^cape_town = land.find_closest_point((0.790801, 0.264598, -0.551942))$/;"	v
capping	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def capping(self: ConeSource) -> bool:$/;"	m	class:ConeSource
capping	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def capping(self: ConeSource, capping: bool) -> None:$/;"	m	class:ConeSource
capping	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def capping(self: CylinderSource) -> bool:$/;"	m	class:CylinderSource
capping	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def capping(self: CylinderSource, capping: bool) -> None:$/;"	m	class:CylinderSource
capping	pyvista/core/utilities/geometric_sources.py	/^    def capping(self: ConeSource) -> bool:$/;"	m	class:ConeSource
capping	pyvista/core/utilities/geometric_sources.py	/^    def capping(self: ConeSource, capping: bool) -> None:$/;"	m	class:ConeSource
capping	pyvista/core/utilities/geometric_sources.py	/^    def capping(self: CylinderSource) -> bool:$/;"	m	class:CylinderSource
capping	pyvista/core/utilities/geometric_sources.py	/^    def capping(self: CylinderSource, capping: bool) -> None:$/;"	m	class:CylinderSource
capsule_cap	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def capsule_cap(self: CylinderSource) -> bool:$/;"	m	class:CylinderSource
capsule_cap	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def capsule_cap(self: CylinderSource, capsule_cap: bool) -> None:$/;"	m	class:CylinderSource
capsule_cap	pyvista/core/utilities/geometric_sources.py	/^    def capsule_cap(self: CylinderSource) -> bool:$/;"	m	class:CylinderSource
capsule_cap	pyvista/core/utilities/geometric_sources.py	/^    def capsule_cap(self: CylinderSource, capsule_cap: bool) -> None:$/;"	m	class:CylinderSource
card_template	doc/source/make_tables.py	/^    card_template = _aligned_dedent($/;"	v	class:DatasetCard
cardio	examples/99-advanced/anatomical_groups.py	/^cardio = [$/;"	v
cartesian_to_spherical	build/lib/pyvista/core/utilities/__init__.py	/^from .features import cartesian_to_spherical as cartesian_to_spherical$/;"	i
cartesian_to_spherical	build/lib/pyvista/core/utilities/features.py	/^def cartesian_to_spherical(x, y, z):$/;"	f
cartesian_to_spherical	pyvista/core/utilities/__init__.py	/^from .features import cartesian_to_spherical as cartesian_to_spherical$/;"	i
cartesian_to_spherical	pyvista/core/utilities/features.py	/^def cartesian_to_spherical(x, y, z):$/;"	f
case_array1d_float	tests/core/test_utilities.py	/^    def case_array1d_float(self):$/;"	m	class:CasesTransformApply
case_array1d_int	tests/core/test_utilities.py	/^    def case_array1d_int(self):$/;"	m	class:CasesTransformApply
case_array2d_float	tests/core/test_utilities.py	/^    def case_array2d_float(self):$/;"	m	class:CasesTransformApply
case_array2d_int	tests/core/test_utilities.py	/^    def case_array2d_int(self):$/;"	m	class:CasesTransformApply
case_list_int	tests/core/test_utilities.py	/^    def case_list_int(self):$/;"	m	class:CasesTransformApply
case_multiblock_float	tests/core/test_utilities.py	/^    def case_multiblock_float(self):$/;"	m	class:CasesTransformApply
case_polydata_float	tests/core/test_utilities.py	/^    def case_polydata_float(self):$/;"	m	class:CasesTransformApply
case_polydata_float32	tests/core/test_utilities.py	/^    def case_polydata_float32(self):$/;"	m	class:CasesTransformApply
case_polydata_int	tests/core/test_utilities.py	/^    def case_polydata_int(self):$/;"	m	class:CasesTransformApply
case_tuple_int	tests/core/test_utilities.py	/^    def case_tuple_int(self):$/;"	m	class:CasesTransformApply
case_type	build/lib/pyvista/core/utilities/reader.py	/^    def case_type(self):$/;"	m	class:POpenFOAMReader
case_type	build/lib/pyvista/core/utilities/reader.py	/^    def case_type(self, value):$/;"	m	class:POpenFOAMReader
case_type	pyvista/core/utilities/reader.py	/^    def case_type(self):$/;"	m	class:POpenFOAMReader
case_type	pyvista/core/utilities/reader.py	/^    def case_type(self, value):$/;"	m	class:POpenFOAMReader
cases	tests/typing/mypy_plugin/test_plugin.py	/^cases = [$/;"	v
cast	build/lib/pyvista/__init__.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/_validation/check.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/cell.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/composite.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/dataobject.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/dataset.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/filters/__init__.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/filters/data_object.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/filters/data_set.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/filters/image_data.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/filters/poly_data.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/grid.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/pointset.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/pyvista_ndarray.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/utilities/arrays.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/utilities/fileio.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/utilities/geometric_objects.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/utilities/geometric_sources.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/core/utilities/helpers.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/examples/downloads.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/plotting/affine_widget.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/plotting/cube_axes_actor.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/plotting/lookup_table.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/plotting/mapper.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/plotting/plotter.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/plotting/renderer.py	/^from typing import cast$/;"	i
cast	build/lib/pyvista/plotting/utilities/regression.py	/^from typing import cast$/;"	i
cast	pyvista/__init__.py	/^from typing import cast$/;"	i
cast	pyvista/core/_validation/check.py	/^from typing import cast$/;"	i
cast	pyvista/core/cell.py	/^from typing import cast$/;"	i
cast	pyvista/core/composite.py	/^from typing import cast$/;"	i
cast	pyvista/core/dataobject.py	/^from typing import cast$/;"	i
cast	pyvista/core/dataset.py	/^from typing import cast$/;"	i
cast	pyvista/core/filters/__init__.py	/^from typing import cast$/;"	i
cast	pyvista/core/filters/data_object.py	/^from typing import cast$/;"	i
cast	pyvista/core/filters/data_set.py	/^from typing import cast$/;"	i
cast	pyvista/core/filters/image_data.py	/^from typing import cast$/;"	i
cast	pyvista/core/filters/poly_data.py	/^from typing import cast$/;"	i
cast	pyvista/core/grid.py	/^from typing import cast$/;"	i
cast	pyvista/core/pointset.py	/^from typing import cast$/;"	i
cast	pyvista/core/pyvista_ndarray.py	/^from typing import cast$/;"	i
cast	pyvista/core/utilities/arrays.py	/^from typing import cast$/;"	i
cast	pyvista/core/utilities/fileio.py	/^from typing import cast$/;"	i
cast	pyvista/core/utilities/geometric_objects.py	/^from typing import cast$/;"	i
cast	pyvista/core/utilities/geometric_sources.py	/^from typing import cast$/;"	i
cast	pyvista/core/utilities/helpers.py	/^from typing import cast$/;"	i
cast	pyvista/examples/_dataset_loader.py	/^from typing import cast$/;"	i
cast	pyvista/examples/downloads.py	/^from typing import cast$/;"	i
cast	pyvista/plotting/affine_widget.py	/^from typing import cast$/;"	i
cast	pyvista/plotting/cube_axes_actor.py	/^from typing import cast$/;"	i
cast	pyvista/plotting/lookup_table.py	/^from typing import cast$/;"	i
cast	pyvista/plotting/mapper.py	/^from typing import cast$/;"	i
cast	pyvista/plotting/plotter.py	/^from typing import cast$/;"	i
cast	pyvista/plotting/renderer.py	/^from typing import cast$/;"	i
cast	pyvista/plotting/utilities/regression.py	/^from typing import cast$/;"	i
cast_to_explicit_structured_grid	build/lib/pyvista/core/pointset.py	/^    def cast_to_explicit_structured_grid(self) -> ExplicitStructuredGrid:$/;"	m	class:StructuredGrid
cast_to_explicit_structured_grid	build/lib/pyvista/core/pointset.py	/^    def cast_to_explicit_structured_grid(self):$/;"	m	class:UnstructuredGrid
cast_to_explicit_structured_grid	pyvista/core/pointset.py	/^    def cast_to_explicit_structured_grid(self) -> ExplicitStructuredGrid:$/;"	m	class:StructuredGrid
cast_to_explicit_structured_grid	pyvista/core/pointset.py	/^    def cast_to_explicit_structured_grid(self):$/;"	m	class:UnstructuredGrid
cast_to_pointset	build/lib/pyvista/core/dataset.py	/^    def cast_to_pointset(self: Self, pass_cell_data: bool = False) -> pyvista.PointSet:$/;"	m	class:DataSet
cast_to_pointset	pyvista/core/dataset.py	/^    def cast_to_pointset(self: Self, pass_cell_data: bool = False) -> pyvista.PointSet:$/;"	m	class:DataSet
cast_to_poly_points	build/lib/pyvista/core/dataset.py	/^    def cast_to_poly_points(self: Self, pass_cell_data: bool = False) -> pyvista.PolyData:$/;"	m	class:DataSet
cast_to_poly_points	pyvista/core/dataset.py	/^    def cast_to_poly_points(self: Self, pass_cell_data: bool = False) -> pyvista.PolyData:$/;"	m	class:DataSet
cast_to_polydata	build/lib/pyvista/core/cell.py	/^    def cast_to_polydata(self: Self) -> pyvista.PolyData:$/;"	m	class:Cell
cast_to_polydata	build/lib/pyvista/core/pointset.py	/^    def cast_to_polydata(self, deep: bool = True):$/;"	m	class:PointSet
cast_to_polydata	pyvista/core/cell.py	/^    def cast_to_polydata(self: Self) -> pyvista.PolyData:$/;"	m	class:Cell
cast_to_polydata	pyvista/core/pointset.py	/^    def cast_to_polydata(self, deep: bool = True):$/;"	m	class:PointSet
cast_to_rectilinear_grid	build/lib/pyvista/core/grid.py	/^    def cast_to_rectilinear_grid(self: Self) -> RectilinearGrid:$/;"	m	class:ImageData
cast_to_rectilinear_grid	pyvista/core/grid.py	/^    def cast_to_rectilinear_grid(self: Self) -> RectilinearGrid:$/;"	m	class:ImageData
cast_to_structured_grid	build/lib/pyvista/core/grid.py	/^    def cast_to_structured_grid(self: Self) -> StructuredGrid:$/;"	m	class:ImageData
cast_to_structured_grid	build/lib/pyvista/core/grid.py	/^    def cast_to_structured_grid(self: Self) -> StructuredGrid:$/;"	m	class:RectilinearGrid
cast_to_structured_grid	pyvista/core/grid.py	/^    def cast_to_structured_grid(self: Self) -> StructuredGrid:$/;"	m	class:ImageData
cast_to_structured_grid	pyvista/core/grid.py	/^    def cast_to_structured_grid(self: Self) -> StructuredGrid:$/;"	m	class:RectilinearGrid
cast_to_unstructured_grid	build/lib/pyvista/core/cell.py	/^    def cast_to_unstructured_grid(self: Self) -> UnstructuredGrid:$/;"	m	class:Cell
cast_to_unstructured_grid	build/lib/pyvista/core/dataset.py	/^    def cast_to_unstructured_grid(self: Self) -> pyvista.UnstructuredGrid:$/;"	m	class:DataSet
cast_to_unstructured_grid	build/lib/pyvista/core/pointset.py	/^    def cast_to_unstructured_grid(self) -> UnstructuredGrid:$/;"	m	class:ExplicitStructuredGrid
cast_to_unstructured_grid	build/lib/pyvista/core/pointset.py	/^    def cast_to_unstructured_grid(self) -> pyvista.UnstructuredGrid:$/;"	m	class:PointSet
cast_to_unstructured_grid	pyvista/core/cell.py	/^    def cast_to_unstructured_grid(self: Self) -> UnstructuredGrid:$/;"	m	class:Cell
cast_to_unstructured_grid	pyvista/core/dataset.py	/^    def cast_to_unstructured_grid(self: Self) -> pyvista.UnstructuredGrid:$/;"	m	class:DataSet
cast_to_unstructured_grid	pyvista/core/pointset.py	/^    def cast_to_unstructured_grid(self) -> UnstructuredGrid:$/;"	m	class:ExplicitStructuredGrid
cast_to_unstructured_grid	pyvista/core/pointset.py	/^    def cast_to_unstructured_grid(self) -> pyvista.UnstructuredGrid:$/;"	m	class:PointSet
catalan	examples/02-plot/backface_props.py	/^catalan = pv.ParametricCatalanMinimal()$/;"	v
catalanminimal	examples/00-load/create_parametric_geometric_objects.py	/^catalanminimal = pv.ParametricCatalanMinimal()$/;"	v
categories	examples/01-filter/connectivity.py	/^    categories=True,$/;"	v
category	doc/source/conf.py	/^    category=PyVistaDeprecationWarning,$/;"	v
category	doc/source/conf.py	/^    category=UserWarning,$/;"	v
cell	build/lib/pyvista/core/dataset.py	/^    def cell(self: Self) -> Iterator[pyvista.Cell]:$/;"	m	class:DataSet
cell	examples/00-load/create_sphere.py	/^cell = mesh.get_cell(0)$/;"	v
cell	pyvista/core/dataset.py	/^    def cell(self: Self) -> Iterator[pyvista.Cell]:$/;"	m	class:DataSet
cell1	examples/00-load/create_unstructured_surface.py	/^cell1 = np.array($/;"	v
cell2	examples/00-load/create_unstructured_surface.py	/^cell2 = np.array($/;"	v
cell_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import cell_array as cell_array$/;"	i
cell_array	build/lib/pyvista/core/utilities/arrays.py	/^def cell_array(obj: DataSet | _vtk.vtkDataSet, name: str) -> pyvista_ndarray | None:$/;"	f
cell_array	pyvista/core/utilities/__init__.py	/^from .arrays import cell_array as cell_array$/;"	i
cell_array	pyvista/core/utilities/arrays.py	/^def cell_array(obj: DataSet | _vtk.vtkDataSet, name: str) -> pyvista_ndarray | None:$/;"	f
cell_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def cell_array_names(self):  # noqa: D102$/;"	m	class:Nek5000Reader
cell_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def cell_array_names(self):$/;"	m	class:ExodusIIReader
cell_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def cell_array_names(self):$/;"	m	class:PointCellDataSelection
cell_array_names	pyvista/core/utilities/reader.py	/^    def cell_array_names(self):  # noqa: D102$/;"	m	class:Nek5000Reader
cell_array_names	pyvista/core/utilities/reader.py	/^    def cell_array_names(self):$/;"	m	class:ExodusIIReader
cell_array_names	pyvista/core/utilities/reader.py	/^    def cell_array_names(self):$/;"	m	class:PointCellDataSelection
cell_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def cell_array_status(self, name):  # noqa: D102$/;"	m	class:Nek5000Reader
cell_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def cell_array_status(self, name):$/;"	m	class:ExodusIIReader
cell_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def cell_array_status(self, name):$/;"	m	class:PointCellDataSelection
cell_array_status	pyvista/core/utilities/reader.py	/^    def cell_array_status(self, name):  # noqa: D102$/;"	m	class:Nek5000Reader
cell_array_status	pyvista/core/utilities/reader.py	/^    def cell_array_status(self, name):$/;"	m	class:ExodusIIReader
cell_array_status	pyvista/core/utilities/reader.py	/^    def cell_array_status(self, name):$/;"	m	class:PointCellDataSelection
cell_centers	build/lib/pyvista/core/filters/data_object.py	/^    def cell_centers(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
cell_centers	examples/01-filter/image_representations.py	/^cell_centers = cells_image.cell_centers()$/;"	v
cell_centers	examples/01-filter/image_representations.py	/^cell_centers = cells_volume.cell_centers()$/;"	v
cell_centers	pyvista/core/filters/data_object.py	/^    def cell_centers(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticQuad,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticQuadraticHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticQuadraticWedge,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticTriangle,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkConvexPointSet,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkCubicLine,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkEmptyCell,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkHexagonalPrism,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkLine,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPentagonalPrism,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPixel,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolyLine,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolyVertex,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolygon,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolyhedron,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPyramid,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuad,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticEdge,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticLinearQuad,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticLinearWedge,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticPolygon,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticPyramid,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticQuad,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticTetra,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticTriangle,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticWedge,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTetra,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriQuadraticHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriQuadraticPyramid,$/;"	v
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriangle,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriangleStrip,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkVertex,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkVoxel,$/;"	v	class:_CellTypeTuple
cell_class	build/lib/pyvista/core/celltype.py	/^        cell_class=_vtk.vtkWedge,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticQuad,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticQuadraticHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticQuadraticWedge,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkBiQuadraticTriangle,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkConvexPointSet,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkCubicLine,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkEmptyCell,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkHexagonalPrism,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkLine,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPentagonalPrism,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPixel,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolyLine,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolyVertex,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolygon,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPolyhedron,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkPyramid,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuad,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticEdge,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticLinearQuad,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticLinearWedge,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticPolygon,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticPyramid,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticQuad,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticTetra,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticTriangle,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkQuadraticWedge,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTetra,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriQuadraticHexahedron,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriQuadraticPyramid,$/;"	v
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriangle,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkTriangleStrip,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkVertex,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkVoxel,$/;"	v	class:_CellTypeTuple
cell_class	pyvista/core/celltype.py	/^        cell_class=_vtk.vtkWedge,$/;"	v	class:_CellTypeTuple
cell_connectivity	build/lib/pyvista/core/pointset.py	/^    def cell_connectivity(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cell_connectivity	pyvista/core/pointset.py	/^    def cell_connectivity(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cell_coords	build/lib/pyvista/core/pointset.py	/^    def cell_coords($/;"	m	class:ExplicitStructuredGrid
cell_coords	pyvista/core/pointset.py	/^    def cell_coords($/;"	m	class:ExplicitStructuredGrid
cell_data	build/lib/pyvista/core/dataset.py	/^    def cell_data(self: Self) -> DataSetAttributes:$/;"	m	class:DataSet
cell_data	pyvista/core/dataset.py	/^    def cell_data(self: Self) -> DataSetAttributes:$/;"	m	class:DataSet
cell_data_to_point_data	build/lib/pyvista/core/filters/data_object.py	/^    def cell_data_to_point_data(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
cell_data_to_point_data	build/lib/pyvista/core/pointset.py	/^    def cell_data_to_point_data(self, *args, **kwargs):$/;"	m	class:PointSet
cell_data_to_point_data	pyvista/core/filters/data_object.py	/^    def cell_data_to_point_data(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
cell_data_to_point_data	pyvista/core/pointset.py	/^    def cell_data_to_point_data(self, *args, **kwargs):$/;"	m	class:PointSet
cell_data_to_point_data_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import cell_data_to_point_data_algorithm as cell_data_to_point_data_algorithm$/;"	i
cell_data_to_point_data_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def cell_data_to_point_data_algorithm(inp, pass_cell_data: bool = False):$/;"	f
cell_data_to_point_data_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import cell_data_to_point_data_algorithm as cell_data_to_point_data_algorithm$/;"	i
cell_data_to_point_data_algorithm	pyvista/plotting/utilities/algorithms.py	/^def cell_data_to_point_data_algorithm(inp, pass_cell_data: bool = False):$/;"	f
cell_edges	examples/01-filter/image_representations.py	/^cell_edges = cells_volume.extract_all_edges()$/;"	v
cell_example_functions	tests/examples/test_cell_examples.py	/^cell_example_functions = [$/;"	v
cell_id	build/lib/pyvista/core/pointset.py	/^    def cell_id(self, coords: ArrayLike[int]) -> int | NumpyArray[int] | None:$/;"	m	class:ExplicitStructuredGrid
cell_id	pyvista/core/pointset.py	/^    def cell_id(self, coords: ArrayLike[int]) -> int | NumpyArray[int] | None:$/;"	m	class:ExplicitStructuredGrid
cell_ids	tests/core/test_cells.py	/^cell_ids = list(map(repr, types))$/;"	v
cell_neighbors	build/lib/pyvista/core/dataset.py	/^    def cell_neighbors(self: Self, ind: int, connections: str = 'points') -> list[int]:$/;"	m	class:DataSet
cell_neighbors	pyvista/core/dataset.py	/^    def cell_neighbors(self: Self, ind: int, connections: str = 'points') -> list[int]:$/;"	m	class:DataSet
cell_neighbors_levels	build/lib/pyvista/core/dataset.py	/^    def cell_neighbors_levels($/;"	m	class:DataSet
cell_neighbors_levels	pyvista/core/dataset.py	/^    def cell_neighbors_levels($/;"	m	class:DataSet
cell_normals	build/lib/pyvista/core/pointset.py	/^    def cell_normals(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
cell_normals	pyvista/core/pointset.py	/^    def cell_normals(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
cell_num	build/lib/pyvista/core/utilities/cell_type_helper.py	/^            cell_num = getattr(vtkCommonDataModel, cell_num_str)$/;"	v
cell_num	pyvista/core/utilities/cell_type_helper.py	/^            cell_num = getattr(vtkCommonDataModel, cell_num_str)$/;"	v
cell_quality	build/lib/pyvista/core/filters/data_object.py	/^    def cell_quality(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
cell_quality	pyvista/core/filters/data_object.py	/^    def cell_quality(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
cell_quality_info	build/lib/pyvista/core/utilities/__init__.py	/^from .cell_quality import cell_quality_info as cell_quality_info$/;"	i
cell_quality_info	build/lib/pyvista/core/utilities/cell_quality.py	/^def cell_quality_info($/;"	f
cell_quality_info	pyvista/core/utilities/__init__.py	/^from .cell_quality import cell_quality_info as cell_quality_info$/;"	i
cell_quality_info	pyvista/core/utilities/cell_quality.py	/^def cell_quality_info($/;"	f
cell_sets	tests/test_meshio.py	/^    cell_sets={'tri1': [[0]], 'tri2': [[1]]},$/;"	v
cell_to_point_creation	build/lib/pyvista/core/utilities/reader.py	/^    def cell_to_point_creation(self):$/;"	m	class:OpenFOAMReader
cell_to_point_creation	build/lib/pyvista/core/utilities/reader.py	/^    def cell_to_point_creation(self, value) -> None:$/;"	m	class:OpenFOAMReader
cell_to_point_creation	pyvista/core/utilities/reader.py	/^    def cell_to_point_creation(self):$/;"	m	class:OpenFOAMReader
cell_to_point_creation	pyvista/core/utilities/reader.py	/^    def cell_to_point_creation(self, value) -> None:$/;"	m	class:OpenFOAMReader
cell_type	doc/source/make_tables.py	/^    cell_type = pv.CellType.HEXAHEDRON$/;"	v	class:CellQualityInfoTableHEXAHEDRON
cell_type	doc/source/make_tables.py	/^    cell_type = pv.CellType.PYRAMID$/;"	v	class:CellQualityInfoTablePYRAMID
cell_type	doc/source/make_tables.py	/^    cell_type = pv.CellType.QUAD$/;"	v	class:CellQualityInfoTableQUAD
cell_type	doc/source/make_tables.py	/^    cell_type = pv.CellType.TETRA$/;"	v	class:CellQualityInfoTableTETRA
cell_type	doc/source/make_tables.py	/^    cell_type = pv.CellType.TRIANGLE$/;"	v	class:CellQualityInfoTableTRIANGLE
cell_type	doc/source/make_tables.py	/^    cell_type = pv.CellType.WEDGE$/;"	v	class:CellQualityInfoTableWEDGE
cell_type	examples/00-load/create_unstructured_surface.py	/^cell_type = np.array([CellType.HEXAHEDRON, CellType.HEXAHEDRON])$/;"	v
cell_volumes	examples/01-filter/compute_volume.py	/^cell_volumes = sized.cell_data['Volume']$/;"	v
cells	build/lib/pyvista/core/cell.py	/^    def cells(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
cells	build/lib/pyvista/core/cell.py	/^    def cells(self: Self, cells: CellsLike) -> None:$/;"	m	class:CellArray
cells	build/lib/pyvista/core/pointset.py	/^    def cells(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cells	build/lib/pyvista/core/pointset.py	/^    def cells(self, cells) -> None:$/;"	m	class:UnstructuredGrid
cells	build/lib/pyvista/demos/logo.py	/^    cells = a_part.cells.reshape(-1, 5)$/;"	v
cells	build/lib/pyvista/demos/logo.py	/^    cells = grid.cells.reshape(-1, 5)$/;"	v
cells	doc/source/make_tables.py	/^from pyvista.examples import cells$/;"	i
cells	examples/00-load/create_polyhedron.py	/^cells = quad + polygon + hexa + polyhedron$/;"	v
cells	examples/00-load/create_unstructured_surface.py	/^cells = np.array($/;"	v
cells	examples/00-load/create_unstructured_surface.py	/^cells = np.array([8, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14, 15])$/;"	v
cells	examples/00-load/linear_cells.py	/^cells = [len(points), *list(range(len(points)))]$/;"	v
cells	examples/01-filter/extract_surface.py	/^cells = np.hstack((20, np.arange(20))).astype(np.int64, copy=False)$/;"	v
cells	pyvista/core/cell.py	/^    def cells(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
cells	pyvista/core/cell.py	/^    def cells(self: Self, cells: CellsLike) -> None:$/;"	m	class:CellArray
cells	pyvista/core/pointset.py	/^    def cells(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cells	pyvista/core/pointset.py	/^    def cells(self, cells) -> None:$/;"	m	class:UnstructuredGrid
cells	pyvista/demos/logo.py	/^    cells = a_part.cells.reshape(-1, 5)$/;"	v
cells	pyvista/demos/logo.py	/^    cells = grid.cells.reshape(-1, 5)$/;"	v
cells	tests/core/test_cells.py	/^cells = [$/;"	v
cells	tests/core/test_utilities.py	/^from pyvista.core.utilities import cells$/;"	i
cells	tests/examples/test_cell_examples.py	/^from pyvista.examples import cells$/;"	i
cells	tests/test_meshio.py	/^    cells=[$/;"	v
cells	tests/test_meshio.py	/^    cells=[('triangle', [[0, 1, 2], [1, 3, 2]])],$/;"	v
cells_dict	build/lib/pyvista/core/pointset.py	/^    def cells_dict(self) -> dict[int, NumpyArray[float]]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cells_dict	pyvista/core/pointset.py	/^    def cells_dict(self) -> dict[int, NumpyArray[float]]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
cells_hex	examples/00-load/create_unstructured_surface.py	/^cells_hex = np.arange(16).reshape([2, 8])$/;"	v
cells_image	examples/01-filter/image_representations.py	/^cells_image = points_image.points_to_cells()$/;"	v
cells_thresh	examples/01-filter/image_representations.py	/^cells_thresh = cells_volume.threshold(2)$/;"	v
cells_to_points	build/lib/pyvista/core/filters/image_data.py	/^    def cells_to_points(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
cells_to_points	pyvista/core/filters/image_data.py	/^    def cells_to_points(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
cells_volume	examples/01-filter/image_representations.py	/^cells_volume = points_volume.points_to_cells()$/;"	v
celltypes	build/lib/pyvista/core/pointset.py	/^    def celltypes(self) -> NumpyArray[np.uint8]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
celltypes	examples/00-load/create_polyhedron.py	/^celltypes = [pv.CellType.QUAD, pv.CellType.POLYGON, pv.CellType.HEXAHEDRON, pv.CellType.POLYHEDRON]$/;"	v
celltypes	examples/00-load/create_unstructured_surface.py	/^celltypes = np.full(10, fill_value=CellType.TETRA, dtype=np.uint8)$/;"	v
celltypes	examples/00-load/create_unstructured_surface.py	/^celltypes = np.full(8, CellType.HEXAHEDRON, dtype=np.uint8)$/;"	v
celltypes	examples/01-filter/extract_surface.py	/^celltypes = np.array([CellType.QUADRATIC_HEXAHEDRON])$/;"	v
celltypes	pyvista/core/pointset.py	/^    def celltypes(self) -> NumpyArray[np.uint8]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
center	build/lib/pyvista/core/cell.py	/^    def center(self: Self) -> tuple[float, float, float]:$/;"	m	class:Cell
center	build/lib/pyvista/core/composite.py	/^    def center(self: MultiBlock) -> tuple[float, float, float]:$/;"	m	class:MultiBlock
center	build/lib/pyvista/core/dataset.py	/^    def center(self: Self) -> tuple[float, float, float]:$/;"	m	class:DataSet
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def center(self: CapsuleSource) -> tuple[float, float, float]:$/;"	m	class:.CapsuleSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def center(self: CapsuleSource, center: VectorLike[float]) -> None:$/;"	m	class:.CapsuleSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: ConeSource) -> tuple[float, float, float]:$/;"	m	class:ConeSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: ConeSource, center: VectorLike[float]) -> None:$/;"	m	class:ConeSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: CubeSource) -> tuple[float, float, float]:$/;"	m	class:CubeSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: CubeSource, center: VectorLike[float]) -> None:$/;"	m	class:CubeSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: CylinderSource) -> tuple[float, float, float]:$/;"	m	class:CylinderSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: CylinderSource, center: VectorLike[float]) -> None:$/;"	m	class:CylinderSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: DiscSource) -> tuple[float, float, float]:$/;"	m	class:DiscSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: DiscSource, center: VectorLike[float]) -> None:$/;"	m	class:DiscSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: PlaneSource, center: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: PolygonSource) -> tuple[float, float, float]:$/;"	m	class:PolygonSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: PolygonSource, center: VectorLike[float]) -> None:$/;"	m	class:PolygonSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: SphereSource) -> tuple[float, float, float]:$/;"	m	class:SphereSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: SphereSource, center: VectorLike[float]) -> None:$/;"	m	class:SphereSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: SuperquadricSource) -> tuple[float, float, float]:$/;"	m	class:SuperquadricSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: SuperquadricSource, center: VectorLike[float]) -> None:$/;"	m	class:SuperquadricSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: Text3DSource) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
center	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def center(self: Text3DSource, center: VectorLike[float]) -> None:$/;"	m	class:Text3DSource
center	build/lib/pyvista/core/utilities/image_sources.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:ImageEllipsoidSource
center	build/lib/pyvista/core/utilities/image_sources.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:ImageGaussianSource
center	build/lib/pyvista/core/utilities/image_sources.py	/^    def center(self, center: Sequence[float]) -> None:$/;"	m	class:ImageEllipsoidSource
center	build/lib/pyvista/core/utilities/image_sources.py	/^    def center(self, center: Sequence[float]) -> None:$/;"	m	class:ImageGaussianSource
center	build/lib/pyvista/plotting/plotter.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:BasePlotter
center	build/lib/pyvista/plotting/prop3d.py	/^    def center(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
center	build/lib/pyvista/plotting/prop3d.py	/^    def center(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
center	build/lib/pyvista/plotting/renderer.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:Renderer
center	examples/00-load/create_parametric_geometric_objects.py	/^center = [0, 0, 0]$/;"	v
center	examples/01-filter/extrude_trim.py	/^    center=(disc.center[0], disc.center[1], -1),$/;"	v
center	examples/01-filter/extrude_trim.py	/^    center=(mesh.center[0], mesh.center[1], -5),$/;"	v
center	examples/01-filter/integrate_data.py	/^center = integrated_volume.points[0]$/;"	v
center	examples/02-plot/plot_over_circular_arc.py	/^center = [bnds.x_min, bnds.y_min, bnds.z_min]$/;"	v
center	examples/02-plot/silhouette.py	/^    center=(0, 0.04, 0),$/;"	v
center	examples/04-lights/shadows.py	/^center = np.array(mesh.center)$/;"	v
center	examples/98-common/project_points_tessellate.py	/^    center=origin,$/;"	v
center	pyvista/core/cell.py	/^    def center(self: Self) -> tuple[float, float, float]:$/;"	m	class:Cell
center	pyvista/core/composite.py	/^    def center(self: MultiBlock) -> tuple[float, float, float]:$/;"	m	class:MultiBlock
center	pyvista/core/dataset.py	/^    def center(self: Self) -> tuple[float, float, float]:$/;"	m	class:DataSet
center	pyvista/core/utilities/geometric_sources.py	/^        def center(self: CapsuleSource) -> tuple[float, float, float]:$/;"	m	class:.CapsuleSource
center	pyvista/core/utilities/geometric_sources.py	/^        def center(self: CapsuleSource, center: VectorLike[float]) -> None:$/;"	m	class:.CapsuleSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: ConeSource) -> tuple[float, float, float]:$/;"	m	class:ConeSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: ConeSource, center: VectorLike[float]) -> None:$/;"	m	class:ConeSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: CubeSource) -> tuple[float, float, float]:$/;"	m	class:CubeSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: CubeSource, center: VectorLike[float]) -> None:$/;"	m	class:CubeSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: CylinderSource) -> tuple[float, float, float]:$/;"	m	class:CylinderSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: CylinderSource, center: VectorLike[float]) -> None:$/;"	m	class:CylinderSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: DiscSource) -> tuple[float, float, float]:$/;"	m	class:DiscSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: DiscSource, center: VectorLike[float]) -> None:$/;"	m	class:DiscSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: PlaneSource, center: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: PolygonSource) -> tuple[float, float, float]:$/;"	m	class:PolygonSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: PolygonSource, center: VectorLike[float]) -> None:$/;"	m	class:PolygonSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: SphereSource) -> tuple[float, float, float]:$/;"	m	class:SphereSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: SphereSource, center: VectorLike[float]) -> None:$/;"	m	class:SphereSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: SuperquadricSource) -> tuple[float, float, float]:$/;"	m	class:SuperquadricSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: SuperquadricSource, center: VectorLike[float]) -> None:$/;"	m	class:SuperquadricSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: Text3DSource) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
center	pyvista/core/utilities/geometric_sources.py	/^    def center(self: Text3DSource, center: VectorLike[float]) -> None:$/;"	m	class:Text3DSource
center	pyvista/core/utilities/image_sources.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:ImageEllipsoidSource
center	pyvista/core/utilities/image_sources.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:ImageGaussianSource
center	pyvista/core/utilities/image_sources.py	/^    def center(self, center: Sequence[float]) -> None:$/;"	m	class:ImageEllipsoidSource
center	pyvista/core/utilities/image_sources.py	/^    def center(self, center: Sequence[float]) -> None:$/;"	m	class:ImageGaussianSource
center	pyvista/plotting/plotter.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:BasePlotter
center	pyvista/plotting/prop3d.py	/^    def center(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
center	pyvista/plotting/prop3d.py	/^    def center(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
center	pyvista/plotting/renderer.py	/^    def center(self) -> tuple[float, float, float]:$/;"	m	class:Renderer
center_of_mass	build/lib/pyvista/core/pointset.py	/^    def center_of_mass(self, scalars_weight: bool = False) -> NumpyArray[float]:$/;"	m	class:_PointSet
center_of_mass	pyvista/core/pointset.py	/^    def center_of_mass(self, scalars_weight: bool = False) -> NumpyArray[float]:$/;"	m	class:_PointSet
centers	examples/00-load/create_platonic_solids.py	/^centers = [$/;"	v
centers	examples/01-filter/cell_centers.py	/^centers = grid.cell_centers()$/;"	v
centers	examples/01-filter/cell_centers.py	/^centers = mesh.cell_centers()$/;"	v
centers	examples/02-plot/depth_peeling.py	/^centers = [(0, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, -1, 0)]$/;"	v
centers	examples/04-lights/beam_shape.py	/^centers = [(0, 0, 0), (0, 1.5, 0), (0, 1.5 * 0.5, 1.5 * 3**0.5 \/ 2)]$/;"	v
central_gear	examples/02-plot/bounds.py	/^central_gear = split_gears.pop(1)$/;"	v
cf	tests/plotting/conftest.py	/^        cf = inspect.currentframe()$/;"	v	class:check_gc.GcHandler
chain	build/lib/pyvista/plotting/themes.py	/^from itertools import chain$/;"	i
chain	pyvista/plotting/themes.py	/^from itertools import chain$/;"	i
channels	examples/01-filter/compute_volume.py	/^channels = data.threshold([0.9, 1.1])$/;"	v
channels	tests/core/test_imagedata_filters.py	/^def channels():$/;"	f
channelsfile	build/lib/pyvista/examples/examples.py	/^channelsfile = str(Path(dir_path) \/ 'channels.vti')$/;"	v
channelsfile	pyvista/examples/examples.py	/^channelsfile = str(Path(dir_path) \/ 'channels.vti')$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.Chart2D()$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.ChartBox(data)$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.ChartMPL(f)$/;"	v
chart	examples/02-plot/chart_basics.py	/^chart = pv.ChartPie(data)$/;"	v
chart_2d	tests/plotting/test_charts.py	/^def chart_2d():$/;"	f
chart_box	tests/plotting/test_charts.py	/^def chart_box():$/;"	f
chart_mpl	tests/plotting/test_charts.py	/^def chart_mpl():$/;"	f
chart_pie	tests/plotting/test_charts.py	/^def chart_pie():$/;"	f
charts	tests/plotting/test_charts.py	/^from pyvista.plotting import charts$/;"	i
check_contains	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_contains as check_contains$/;"	i
check_contains	build/lib/pyvista/core/_validation/check.py	/^def check_contains(container: Container[Any], \/, must_contain: Any, *, name: str = 'Input') -> None:$/;"	f
check_contains	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_contains$/;"	i
check_contains	pyvista/core/_validation/__init__.py	/^from .check import check_contains as check_contains$/;"	i
check_contains	pyvista/core/_validation/check.py	/^def check_contains(container: Container[Any], \/, must_contain: Any, *, name: str = 'Input') -> None:$/;"	f
check_contains	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_contains$/;"	i
check_contains	tests/core/test_validation.py	/^from pyvista.core._validation import check_contains$/;"	i
check_deprecation	tests/core/test_dataset_filters.py	/^    def check_deprecation():$/;"	f	function:test_streamlines_max_length
check_depth_peeling	build/lib/pyvista/plotting/renderer.py	/^from .utilities.gl_checks import check_depth_peeling$/;"	i
check_depth_peeling	build/lib/pyvista/plotting/utilities/__init__.py	/^from .gl_checks import check_depth_peeling as check_depth_peeling$/;"	i
check_depth_peeling	build/lib/pyvista/plotting/utilities/gl_checks.py	/^def check_depth_peeling(number_of_peels=100, occlusion_ratio=0.0):$/;"	f
check_depth_peeling	pyvista/plotting/renderer.py	/^from .utilities.gl_checks import check_depth_peeling$/;"	i
check_depth_peeling	pyvista/plotting/utilities/__init__.py	/^from .gl_checks import check_depth_peeling as check_depth_peeling$/;"	i
check_depth_peeling	pyvista/plotting/utilities/gl_checks.py	/^def check_depth_peeling(number_of_peels=100, occlusion_ratio=0.0):$/;"	f
check_doctests	tests/check_doctest_names.py	/^def check_doctests(modules=None, respect_skips=True, verbose=True):$/;"	f
check_finite	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_finite as check_finite$/;"	i
check_finite	build/lib/pyvista/core/_validation/check.py	/^def check_finite(array: _ArrayLikeOrScalar[NumberType], \/, *, name: str = 'Array') -> None:$/;"	f
check_finite	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_finite$/;"	i
check_finite	build/lib/pyvista/core/utilities/transform.py	/^    def check_finite(self: Transform) -> bool:  # numpydoc ignore: RT01$/;"	m	class:Transform
check_finite	build/lib/pyvista/core/utilities/transform.py	/^    def check_finite(self: Transform, value: bool) -> None:$/;"	m	class:Transform
check_finite	pyvista/core/_validation/__init__.py	/^from .check import check_finite as check_finite$/;"	i
check_finite	pyvista/core/_validation/check.py	/^def check_finite(array: _ArrayLikeOrScalar[NumberType], \/, *, name: str = 'Array') -> None:$/;"	f
check_finite	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_finite$/;"	i
check_finite	pyvista/core/utilities/transform.py	/^    def check_finite(self: Transform) -> bool:  # numpydoc ignore: RT01$/;"	m	class:Transform
check_finite	pyvista/core/utilities/transform.py	/^    def check_finite(self: Transform, value: bool) -> None:$/;"	m	class:Transform
check_finite	tests/core/test_validation.py	/^from pyvista.core._validation import check_finite$/;"	i
check_gc	tests/plotting/conftest.py	/^def check_gc():$/;"	f
check_greater_than	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_greater_than as check_greater_than$/;"	i
check_greater_than	build/lib/pyvista/core/_validation/check.py	/^def check_greater_than($/;"	f
check_greater_than	pyvista/core/_validation/__init__.py	/^from .check import check_greater_than as check_greater_than$/;"	i
check_greater_than	pyvista/core/_validation/check.py	/^def check_greater_than($/;"	f
check_greater_than	tests/core/test_validation.py	/^from pyvista.core._validation import check_greater_than$/;"	i
check_instance	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_instance as check_instance$/;"	i
check_instance	build/lib/pyvista/core/_validation/check.py	/^def check_instance($/;"	f
check_instance	pyvista/core/_validation/__init__.py	/^from .check import check_instance as check_instance$/;"	i
check_instance	pyvista/core/_validation/check.py	/^def check_instance($/;"	f
check_instance	tests/core/test_validation.py	/^from pyvista.core._validation import check_instance$/;"	i
check_integer	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_integer as check_integer$/;"	i
check_integer	build/lib/pyvista/core/_validation/check.py	/^def check_integer($/;"	f
check_integer	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_integer$/;"	i
check_integer	pyvista/core/_validation/__init__.py	/^from .check import check_integer as check_integer$/;"	i
check_integer	pyvista/core/_validation/check.py	/^def check_integer($/;"	f
check_integer	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_integer$/;"	i
check_integer	tests/core/test_validation.py	/^from pyvista.core._validation import check_integer$/;"	i
check_iterable	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_iterable as check_iterable$/;"	i
check_iterable	build/lib/pyvista/core/_validation/check.py	/^def check_iterable(obj: Iterable[Any], \/, *, name: str = 'Object') -> None:$/;"	f
check_iterable	pyvista/core/_validation/__init__.py	/^from .check import check_iterable as check_iterable$/;"	i
check_iterable	pyvista/core/_validation/check.py	/^def check_iterable(obj: Iterable[Any], \/, *, name: str = 'Object') -> None:$/;"	f
check_iterable	tests/core/test_validation.py	/^from pyvista.core._validation import check_iterable$/;"	i
check_iterable_items	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_iterable_items as check_iterable_items$/;"	i
check_iterable_items	build/lib/pyvista/core/_validation/check.py	/^def check_iterable_items($/;"	f
check_iterable_items	pyvista/core/_validation/__init__.py	/^from .check import check_iterable_items as check_iterable_items$/;"	i
check_iterable_items	pyvista/core/_validation/check.py	/^def check_iterable_items($/;"	f
check_iterable_items	tests/core/test_validation.py	/^from pyvista.core._validation import check_iterable_items$/;"	i
check_length	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_length as check_length$/;"	i
check_length	build/lib/pyvista/core/_validation/check.py	/^def check_length($/;"	f
check_length	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_length$/;"	i
check_length	pyvista/core/_validation/__init__.py	/^from .check import check_length as check_length$/;"	i
check_length	pyvista/core/_validation/check.py	/^def check_length($/;"	f
check_length	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_length$/;"	i
check_length	tests/core/test_validation.py	/^from pyvista.core._validation import check_length$/;"	i
check_less_than	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_less_than as check_less_than$/;"	i
check_less_than	build/lib/pyvista/core/_validation/check.py	/^def check_less_than($/;"	f
check_less_than	pyvista/core/_validation/__init__.py	/^from .check import check_less_than as check_less_than$/;"	i
check_less_than	pyvista/core/_validation/check.py	/^def check_less_than($/;"	f
check_less_than	tests/core/test_validation.py	/^from pyvista.core._validation import check_less_than$/;"	i
check_math_text_support	build/lib/pyvista/plotting/__init__.py	/^from .tools import check_math_text_support as check_math_text_support$/;"	i
check_math_text_support	build/lib/pyvista/plotting/tools.py	/^def check_math_text_support():$/;"	f
check_math_text_support	build/lib/pyvista/report.py	/^        from pyvista.plotting.tools import check_math_text_support$/;"	i
check_math_text_support	pyvista/plotting/__init__.py	/^from .tools import check_math_text_support as check_math_text_support$/;"	i
check_math_text_support	pyvista/plotting/tools.py	/^def check_math_text_support():$/;"	f
check_math_text_support	pyvista/report.py	/^        from pyvista.plotting.tools import check_math_text_support$/;"	i
check_math_text_support	tests/plotting/test_plotting.py	/^from pyvista.plotting import check_math_text_support$/;"	i
check_matplotlib_vtk_compatibility	build/lib/pyvista/plotting/__init__.py	/^from .tools import check_matplotlib_vtk_compatibility as check_matplotlib_vtk_compatibility$/;"	i
check_matplotlib_vtk_compatibility	build/lib/pyvista/plotting/tools.py	/^def check_matplotlib_vtk_compatibility():$/;"	f
check_matplotlib_vtk_compatibility	pyvista/plotting/__init__.py	/^from .tools import check_matplotlib_vtk_compatibility as check_matplotlib_vtk_compatibility$/;"	i
check_matplotlib_vtk_compatibility	pyvista/plotting/tools.py	/^def check_matplotlib_vtk_compatibility():$/;"	f
check_ndim	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_ndim as check_ndim$/;"	i
check_ndim	build/lib/pyvista/core/_validation/check.py	/^def check_ndim($/;"	f
check_ndim	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_ndim$/;"	i
check_ndim	pyvista/core/_validation/__init__.py	/^from .check import check_ndim as check_ndim$/;"	i
check_ndim	pyvista/core/_validation/check.py	/^def check_ndim($/;"	f
check_ndim	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_ndim$/;"	i
check_ndim	tests/core/test_validation.py	/^from pyvista.core._validation import check_ndim$/;"	i
check_nonnegative	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_nonnegative as check_nonnegative$/;"	i
check_nonnegative	build/lib/pyvista/core/_validation/check.py	/^def check_nonnegative(array: _ArrayLikeOrScalar[NumberType], \/, *, name: str = 'Array') -> None:$/;"	f
check_nonnegative	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_nonnegative$/;"	i
check_nonnegative	pyvista/core/_validation/__init__.py	/^from .check import check_nonnegative as check_nonnegative$/;"	i
check_nonnegative	pyvista/core/_validation/check.py	/^def check_nonnegative(array: _ArrayLikeOrScalar[NumberType], \/, *, name: str = 'Array') -> None:$/;"	f
check_nonnegative	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_nonnegative$/;"	i
check_nonnegative	tests/core/test_validation.py	/^from pyvista.core._validation import check_nonnegative$/;"	i
check_number	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_number as check_number$/;"	i
check_number	build/lib/pyvista/core/_validation/check.py	/^def check_number(num: float, \/, *, name: str = 'Object') -> None:$/;"	f
check_number	pyvista/core/_validation/__init__.py	/^from .check import check_number as check_number$/;"	i
check_number	pyvista/core/_validation/check.py	/^def check_number(num: float, \/, *, name: str = 'Object') -> None:$/;"	f
check_number	tests/core/test_validation.py	/^from pyvista.core._validation import check_number$/;"	i
check_range	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_range as check_range$/;"	i
check_range	build/lib/pyvista/core/_validation/check.py	/^def check_range($/;"	f
check_range	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_range$/;"	i
check_range	pyvista/core/_validation/__init__.py	/^from .check import check_range as check_range$/;"	i
check_range	pyvista/core/_validation/check.py	/^def check_range($/;"	f
check_range	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_range$/;"	i
check_range	tests/core/test_validation.py	/^from pyvista.core._validation import check_range$/;"	i
check_real	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_real as check_real$/;"	i
check_real	build/lib/pyvista/core/_validation/check.py	/^def check_real(array: _ArrayLikeOrScalar[NumberType], \/, *, name: str = 'Array') -> None:$/;"	f
check_real	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_real$/;"	i
check_real	pyvista/core/_validation/__init__.py	/^from .check import check_real as check_real$/;"	i
check_real	pyvista/core/_validation/check.py	/^def check_real(array: _ArrayLikeOrScalar[NumberType], \/, *, name: str = 'Array') -> None:$/;"	f
check_real	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_real$/;"	i
check_real	tests/core/test_validation.py	/^from pyvista.core._validation import check_real$/;"	i
check_sequence	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_sequence as check_sequence$/;"	i
check_sequence	build/lib/pyvista/core/_validation/check.py	/^def check_sequence(obj: Sequence[Any], \/, *, name: str = 'Object') -> None:$/;"	f
check_sequence	pyvista/core/_validation/__init__.py	/^from .check import check_sequence as check_sequence$/;"	i
check_sequence	pyvista/core/_validation/check.py	/^def check_sequence(obj: Sequence[Any], \/, *, name: str = 'Object') -> None:$/;"	f
check_sequence	tests/core/test_validation.py	/^from pyvista.core._validation import check_sequence$/;"	i
check_shape	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_shape as check_shape$/;"	i
check_shape	build/lib/pyvista/core/_validation/check.py	/^def check_shape($/;"	f
check_shape	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_shape$/;"	i
check_shape	pyvista/core/_validation/__init__.py	/^from .check import check_shape as check_shape$/;"	i
check_shape	pyvista/core/_validation/check.py	/^def check_shape($/;"	f
check_shape	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_shape$/;"	i
check_shape	tests/core/test_validation.py	/^from pyvista.core._validation import check_shape$/;"	i
check_sorted	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_sorted as check_sorted$/;"	i
check_sorted	build/lib/pyvista/core/_validation/check.py	/^def check_sorted($/;"	f
check_sorted	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_sorted$/;"	i
check_sorted	pyvista/core/_validation/__init__.py	/^from .check import check_sorted as check_sorted$/;"	i
check_sorted	pyvista/core/_validation/check.py	/^def check_sorted($/;"	f
check_sorted	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_sorted$/;"	i
check_sorted	tests/core/test_validation.py	/^from pyvista.core._validation import check_sorted$/;"	i
check_string	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_string as check_string$/;"	i
check_string	build/lib/pyvista/core/_validation/check.py	/^def check_string(obj: str, \/, *, allow_subclass: bool = True, name: str = 'Object') -> None:$/;"	f
check_string	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_string$/;"	i
check_string	pyvista/core/_validation/__init__.py	/^from .check import check_string as check_string$/;"	i
check_string	pyvista/core/_validation/check.py	/^def check_string(obj: str, \/, *, allow_subclass: bool = True, name: str = 'Object') -> None:$/;"	f
check_string	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_string$/;"	i
check_string	tests/core/test_validation.py	/^from pyvista.core._validation import check_string$/;"	i
check_subdtype	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_subdtype as check_subdtype$/;"	i
check_subdtype	build/lib/pyvista/core/_validation/check.py	/^def check_subdtype($/;"	f
check_subdtype	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_subdtype$/;"	i
check_subdtype	pyvista/core/_validation/__init__.py	/^from .check import check_subdtype as check_subdtype$/;"	i
check_subdtype	pyvista/core/_validation/check.py	/^def check_subdtype($/;"	f
check_subdtype	pyvista/core/_validation/validate.py	/^from pyvista.core._validation import check_subdtype$/;"	i
check_subdtype	tests/core/test_validation.py	/^from pyvista.core._validation import check_subdtype$/;"	i
check_type	build/lib/pyvista/core/_validation/__init__.py	/^from .check import check_type as check_type$/;"	i
check_type	build/lib/pyvista/core/_validation/check.py	/^def check_type(obj: object, \/, classinfo: type | tuple[type, ...], *, name: str = 'Object') -> None:$/;"	f
check_type	pyvista/core/_validation/__init__.py	/^from .check import check_type as check_type$/;"	i
check_type	pyvista/core/_validation/check.py	/^def check_type(obj: object, \/, classinfo: type | tuple[type, ...], *, name: str = 'Object') -> None:$/;"	f
check_type	tests/core/test_validation.py	/^from pyvista.core._validation import check_type$/;"	i
check_valid_vector	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import check_valid_vector as check_valid_vector$/;"	i
check_valid_vector	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .misc import check_valid_vector$/;"	i
check_valid_vector	build/lib/pyvista/core/utilities/misc.py	/^def check_valid_vector(point: VectorLike[float], name: str = '') -> None:$/;"	f
check_valid_vector	pyvista/core/utilities/__init__.py	/^from .misc import check_valid_vector as check_valid_vector$/;"	i
check_valid_vector	pyvista/core/utilities/geometric_objects.py	/^from .misc import check_valid_vector$/;"	i
check_valid_vector	pyvista/core/utilities/misc.py	/^def check_valid_vector(point: VectorLike[float], name: str = '') -> None:$/;"	f
check_valid_vector	tests/core/test_utilities.py	/^from pyvista.core.utilities.misc import check_valid_vector$/;"	i
checkbox	build/lib/pyvista/trame/ui/vuetify2.py	/^def checkbox(model, icons, tooltip):  # numpydoc ignore=PR01$/;"	f
checkbox	build/lib/pyvista/trame/ui/vuetify3.py	/^def checkbox(model, icons, tooltip):  # numpydoc ignore=PR01$/;"	f
checkbox	pyvista/trame/ui/vuetify2.py	/^def checkbox(model, icons, tooltip):  # numpydoc ignore=PR01$/;"	f
checkbox	pyvista/trame/ui/vuetify3.py	/^def checkbox(model, icons, tooltip):  # numpydoc ignore=PR01$/;"	f
chips	examples_trame/basic/file_viewer.py	/^            chips=True,$/;"	v
circle	tests/core/test_helpers.py	/^        circle = pv.Circle()$/;"	v	class:test_wrappers.Foo
circular	build/lib/pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
circular	build/lib/pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
circular	build/lib/pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
circular	build/lib/pyvista/plotting/composite_mapper.py	/^        from pyvista import MultiBlock  # avoid circular$/;"	i
circular	build/lib/pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
circular	build/lib/pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
circular	pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
circular	pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
circular	pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
circular	pyvista/plotting/composite_mapper.py	/^        from pyvista import MultiBlock  # avoid circular$/;"	i
circular	pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
circular	pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
clamping	tests/core/test_dataset_filters.py	/^    def clamping(self):$/;"	m	class:InterrogateVTKGlyph3D
classes	examples_trame/basic/PyVistaLocalView.py	/^            classes='pa-0 fill-height',$/;"	v
classes	examples_trame/basic/file_viewer.py	/^            classes='pa-0 fill-height',$/;"	v
classes	examples_trame/basic/multi_views.py	/^            classes='pa-0 fill-height',$/;"	v
classic	build/lib/pyvista/plotting/themes.py	/^    def classic(self) -> _SliderStyleConfig:  # numpydoc ignore=RT01$/;"	m	class:_SliderConfig
classic	build/lib/pyvista/plotting/themes.py	/^    def classic(self, config: _SliderStyleConfig):$/;"	m	class:_SliderConfig
classic	pyvista/plotting/themes.py	/^    def classic(self) -> _SliderStyleConfig:  # numpydoc ignore=RT01$/;"	m	class:_SliderConfig
classic	pyvista/plotting/themes.py	/^    def classic(self, config: _SliderStyleConfig):$/;"	m	class:_SliderConfig
classification	doc/source/make_tables.py	/^    classification = ColorClassification.BLACK$/;"	v	class:ColorTableBLACK
classification	doc/source/make_tables.py	/^    classification = ColorClassification.BLUE$/;"	v	class:ColorTableBLUE
classification	doc/source/make_tables.py	/^    classification = ColorClassification.BROWN$/;"	v	class:ColorTableBROWN
classification	doc/source/make_tables.py	/^    classification = ColorClassification.CYAN$/;"	v	class:ColorTableCYAN
classification	doc/source/make_tables.py	/^    classification = ColorClassification.GRAY$/;"	v	class:ColorTableGRAY
classification	doc/source/make_tables.py	/^    classification = ColorClassification.GREEN$/;"	v	class:ColorTableGREEN
classification	doc/source/make_tables.py	/^    classification = ColorClassification.MAGENTA$/;"	v	class:ColorTableMAGENTA
classification	doc/source/make_tables.py	/^    classification = ColorClassification.ORANGE$/;"	v	class:ColorTableORANGE
classification	doc/source/make_tables.py	/^    classification = ColorClassification.RED$/;"	v	class:ColorTableRED
classification	doc/source/make_tables.py	/^    classification = ColorClassification.VIOLET$/;"	v	class:ColorTableVIOLET
classification	doc/source/make_tables.py	/^    classification = ColorClassification.WHITE$/;"	v	class:ColorTableWHITE
classification	doc/source/make_tables.py	/^    classification = ColorClassification.YELLOW$/;"	v	class:ColorTableYELLOW
classifier	examples/01-filter/compute_volume.py	/^classifier = threshed.cell_data['Spatial Cell Data'] > cval$/;"	v
classify_color	doc/source/make_tables.py	/^def classify_color(color: Color) -> ColorClassification:$/;"	f
clean	build/lib/pyvista/core/composite.py	/^    def clean(self: MultiBlock, empty: bool = True) -> None:$/;"	m	class:MultiBlock
clean	build/lib/pyvista/core/filters/poly_data.py	/^    def clean($/;"	m	class:PolyDataFilters
clean	build/lib/pyvista/core/filters/unstructured_grid.py	/^    def clean($/;"	m	class:UnstructuredGridFilters
clean	build/lib/pyvista/core/pointset.py	/^    def clean($/;"	m	class:ExplicitStructuredGrid
clean	pyvista/core/composite.py	/^    def clean(self: MultiBlock, empty: bool = True) -> None:$/;"	m	class:MultiBlock
clean	pyvista/core/filters/poly_data.py	/^    def clean($/;"	m	class:PolyDataFilters
clean	pyvista/core/filters/unstructured_grid.py	/^    def clean($/;"	m	class:UnstructuredGridFilters
clean	pyvista/core/pointset.py	/^    def clean($/;"	m	class:ExplicitStructuredGrid
clear	build/lib/pyvista/core/datasetattributes.py	/^    def clear(self: Self) -> None:$/;"	m	class:DataSetAttributes
clear	build/lib/pyvista/core/utilities/arrays.py	/^    def clear(self: _SerializedDictArray) -> None:$/;"	m	class:_SerializedDictArray
clear	build/lib/pyvista/plotting/charts.py	/^    def clear(self, plot_type=None) -> None:$/;"	m	class:Chart2D
clear	build/lib/pyvista/plotting/plotter.py	/^    def clear(self):$/;"	m	class:BasePlotter
clear	build/lib/pyvista/plotting/renderer.py	/^    def clear(self) -> None:$/;"	m	class:Renderer
clear	build/lib/pyvista/plotting/renderers.py	/^    def clear(self):$/;"	m	class:Renderers
clear	build/lib/pyvista/plotting/scalar_bars.py	/^    def clear(self):$/;"	m	class:ScalarBars
clear	pyvista/core/datasetattributes.py	/^    def clear(self: Self) -> None:$/;"	m	class:DataSetAttributes
clear	pyvista/core/utilities/arrays.py	/^    def clear(self: _SerializedDictArray) -> None:$/;"	m	class:_SerializedDictArray
clear	pyvista/plotting/charts.py	/^    def clear(self, plot_type=None) -> None:$/;"	m	class:Chart2D
clear	pyvista/plotting/plotter.py	/^    def clear(self):$/;"	m	class:BasePlotter
clear	pyvista/plotting/renderer.py	/^    def clear(self) -> None:$/;"	m	class:Renderer
clear	pyvista/plotting/renderers.py	/^    def clear(self):$/;"	m	class:Renderers
clear	pyvista/plotting/scalar_bars.py	/^    def clear(self):$/;"	m	class:ScalarBars
clear_actors	build/lib/pyvista/plotting/plotter.py	/^    def clear_actors(self) -> None:$/;"	m	class:BasePlotter
clear_actors	build/lib/pyvista/plotting/renderer.py	/^    def clear_actors(self) -> None:$/;"	m	class:Renderer
clear_actors	build/lib/pyvista/plotting/renderers.py	/^    def clear_actors(self):$/;"	m	class:Renderers
clear_actors	pyvista/plotting/plotter.py	/^    def clear_actors(self) -> None:$/;"	m	class:BasePlotter
clear_actors	pyvista/plotting/renderer.py	/^    def clear_actors(self) -> None:$/;"	m	class:Renderer
clear_actors	pyvista/plotting/renderers.py	/^    def clear_actors(self):$/;"	m	class:Renderers
clear_all_cell_data	build/lib/pyvista/core/composite.py	/^    def clear_all_cell_data(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
clear_all_cell_data	pyvista/core/composite.py	/^    def clear_all_cell_data(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
clear_all_data	build/lib/pyvista/core/composite.py	/^    def clear_all_data(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
clear_all_data	pyvista/core/composite.py	/^    def clear_all_data(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
clear_all_point_data	build/lib/pyvista/core/composite.py	/^    def clear_all_point_data(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
clear_all_point_data	pyvista/core/composite.py	/^    def clear_all_point_data(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
clear_background_renderers	build/lib/pyvista/plotting/renderers.py	/^    def clear_background_renderers(self):$/;"	m	class:Renderers
clear_background_renderers	pyvista/plotting/renderers.py	/^    def clear_background_renderers(self):$/;"	m	class:Renderers
clear_box_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_box_widgets(self):$/;"	m	class:WidgetHelper
clear_box_widgets	pyvista/plotting/widgets.py	/^    def clear_box_widgets(self):$/;"	m	class:WidgetHelper
clear_button_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_button_widgets(self):$/;"	m	class:WidgetHelper
clear_button_widgets	pyvista/plotting/widgets.py	/^    def clear_button_widgets(self):$/;"	m	class:WidgetHelper
clear_camera3d_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_camera3d_widgets(self):$/;"	m	class:WidgetHelper
clear_camera3d_widgets	pyvista/plotting/widgets.py	/^    def clear_camera3d_widgets(self):$/;"	m	class:WidgetHelper
clear_camera_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_camera_widgets(self):$/;"	m	class:WidgetHelper
clear_camera_widgets	pyvista/plotting/widgets.py	/^    def clear_camera_widgets(self):$/;"	m	class:WidgetHelper
clear_cell_data	build/lib/pyvista/core/dataset.py	/^    def clear_cell_data(self: Self) -> None:$/;"	m	class:DataSet
clear_cell_data	pyvista/core/dataset.py	/^    def clear_cell_data(self: Self) -> None:$/;"	m	class:DataSet
clear_data	build/lib/pyvista/core/dataset.py	/^    def clear_data(self: Self) -> None:$/;"	m	class:DataSet
clear_data	pyvista/core/dataset.py	/^    def clear_data(self: Self) -> None:$/;"	m	class:DataSet
clear_dataset	build/lib/pyvista/examples/_dataset_loader.py	/^    def clear_dataset(self):$/;"	m	class:_DatasetLoader
clear_dataset	pyvista/examples/_dataset_loader.py	/^    def clear_dataset(self):$/;"	m	class:_DatasetLoader
clear_datasets	doc/source/make_tables.py	/^    def clear_datasets(cls):$/;"	m	class:DatasetCardFetcher
clear_events_for_key	build/lib/pyvista/plotting/plotter.py	/^    def clear_events_for_key(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
clear_events_for_key	build/lib/pyvista/plotting/render_window_interactor.py	/^    def clear_events_for_key(self, key, raise_on_missing=False):$/;"	m	class:RenderWindowInteractor
clear_events_for_key	pyvista/plotting/plotter.py	/^    def clear_events_for_key(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
clear_events_for_key	pyvista/plotting/render_window_interactor.py	/^    def clear_events_for_key(self, key, raise_on_missing=False):$/;"	m	class:RenderWindowInteractor
clear_field_data	build/lib/pyvista/core/dataobject.py	/^    def clear_field_data(self: Self) -> None:$/;"	m	class:DataObject
clear_field_data	pyvista/core/dataobject.py	/^    def clear_field_data(self: Self) -> None:$/;"	m	class:DataObject
clear_key_event_callbacks	build/lib/pyvista/plotting/render_window_interactor.py	/^    def clear_key_event_callbacks(self):$/;"	m	class:RenderWindowInteractor
clear_key_event_callbacks	pyvista/plotting/render_window_interactor.py	/^    def clear_key_event_callbacks(self):$/;"	m	class:RenderWindowInteractor
clear_line_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_line_widgets(self):$/;"	m	class:WidgetHelper
clear_line_widgets	pyvista/plotting/widgets.py	/^    def clear_line_widgets(self):$/;"	m	class:WidgetHelper
clear_logo_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_logo_widgets(self):$/;"	m	class:WidgetHelper
clear_logo_widgets	pyvista/plotting/widgets.py	/^    def clear_logo_widgets(self):$/;"	m	class:WidgetHelper
clear_measure_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_measure_widgets(self):$/;"	m	class:WidgetHelper
clear_measure_widgets	pyvista/plotting/widgets.py	/^    def clear_measure_widgets(self):$/;"	m	class:WidgetHelper
clear_on_render_callbacks	build/lib/pyvista/plotting/plotter.py	/^    def clear_on_render_callbacks(self) -> None:$/;"	m	class:BasePlotter
clear_on_render_callbacks	pyvista/plotting/plotter.py	/^    def clear_on_render_callbacks(self) -> None:$/;"	m	class:BasePlotter
clear_plane_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_plane_widgets(self):$/;"	m	class:WidgetHelper
clear_plane_widgets	pyvista/plotting/widgets.py	/^    def clear_plane_widgets(self):$/;"	m	class:WidgetHelper
clear_point_data	build/lib/pyvista/core/dataset.py	/^    def clear_point_data(self: Self) -> None:$/;"	m	class:DataSet
clear_point_data	pyvista/core/dataset.py	/^    def clear_point_data(self: Self) -> None:$/;"	m	class:DataSet
clear_radio_button_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_radio_button_widgets(self):$/;"	m	class:WidgetHelper
clear_radio_button_widgets	pyvista/plotting/widgets.py	/^    def clear_radio_button_widgets(self):$/;"	m	class:WidgetHelper
clear_slider_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_slider_widgets(self):$/;"	m	class:WidgetHelper
clear_slider_widgets	pyvista/plotting/widgets.py	/^    def clear_slider_widgets(self):$/;"	m	class:WidgetHelper
clear_sphere_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_sphere_widgets(self):$/;"	m	class:WidgetHelper
clear_sphere_widgets	pyvista/plotting/widgets.py	/^    def clear_sphere_widgets(self):$/;"	m	class:WidgetHelper
clear_spline_widgets	build/lib/pyvista/plotting/widgets.py	/^    def clear_spline_widgets(self):$/;"	m	class:WidgetHelper
clear_spline_widgets	pyvista/plotting/widgets.py	/^    def clear_spline_widgets(self):$/;"	m	class:WidgetHelper
clear_user_dict	tests/core/test_dataobject.py	/^    def clear_user_dict():$/;"	f	function:test_user_dict_removal
click_position	build/lib/pyvista/plotting/plotter.py	/^    click_position = None$/;"	v	class:BasePlotter
click_position	pyvista/plotting/plotter.py	/^    click_position = None$/;"	v	class:BasePlotter
clim	examples/01-filter/clipping_with_surface.py	/^    clim=[-1, 1],$/;"	v
clim	examples/01-filter/connectivity.py	/^    clim=[-0.5, 0.5],$/;"	v
clim	examples/01-filter/image_representations.py	/^    clim=[0, 255],$/;"	v
clim	examples/01-filter/mesh_quality.py	/^    clim=info.acceptable_range,$/;"	v
clim	examples/01-filter/sampling_functions_2d.py	/^    clim=clim,$/;"	v
clim	examples/01-filter/sampling_functions_2d.py	/^clim = (z.max() - rng * 1.65, z.max())$/;"	v
clim	examples/01-filter/sampling_functions_3d.py	/^    clim=clim,$/;"	v
clim	examples/01-filter/sampling_functions_3d.py	/^clim = (mn, mx * 1.8)$/;"	v
clim	examples/01-filter/streamlines.py	/^    clim=[0, 1000],$/;"	v
clim	examples/01-filter/streamlines_2D.py	/^clim = [0, 20]$/;"	v
clim	examples/02-plot/gif.py	/^    clim=[-1, 1],$/;"	v
clim	examples/02-plot/isovalue.py	/^    clim=vol.get_data_range(),$/;"	v
clim	examples/02-plot/movie_glyphs.py	/^    clim=[0, 1],$/;"	v
clim	examples/02-plot/volume.py	/^    clim=clim,$/;"	v
clim	examples/02-plot/volume.py	/^clim = [0, 100]$/;"	v
clim	examples/03-widgets/line_widget.py	/^clim = [arr.min(), arr.max()]$/;"	v
clim	examples/99-advanced/fea_hertzian_contact_pressure.py	/^    clim=[0, 1.2e9],$/;"	v
clip	build/lib/pyvista/core/filters/data_object.py	/^    def clip(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
clip	pyvista/core/filters/data_object.py	/^    def clip(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
clip_box	build/lib/pyvista/core/filters/data_object.py	/^    def clip_box(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
clip_box	pyvista/core/filters/data_object.py	/^    def clip_box(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
clip_closed_surface	build/lib/pyvista/core/filters/poly_data.py	/^    def clip_closed_surface($/;"	m	class:PolyDataFilters
clip_closed_surface	pyvista/core/filters/poly_data.py	/^    def clip_closed_surface($/;"	m	class:PolyDataFilters
clip_scalar	build/lib/pyvista/core/filters/data_set.py	/^    def clip_scalar(  # type: ignore[misc]$/;"	m	class:DataSetFilters
clip_scalar	pyvista/core/filters/data_set.py	/^    def clip_scalar(  # type: ignore[misc]$/;"	m	class:DataSetFilters
clip_surface	build/lib/pyvista/core/filters/data_set.py	/^    def clip_surface(  # type: ignore[misc]$/;"	m	class:DataSetFilters
clip_surface	pyvista/core/filters/data_set.py	/^    def clip_surface(  # type: ignore[misc]$/;"	m	class:DataSetFilters
clipped	examples/00-load/create_pointset.py	/^clipped = lidar.clip(origin=(0, 0, 1.76e3), normal=(0, 0, 1))$/;"	v
clipped	examples/01-filter/clipping.py	/^clipped = dataset.clip('y', invert=False)$/;"	v
clipped	examples/01-filter/clipping.py	/^clipped = dataset.clip_box(bounds)$/;"	v
clipped	examples/01-filter/clipping.py	/^clipped = mesh.clip(normal=normal)$/;"	v
clipped	examples/01-filter/clipping_with_surface.py	/^clipped = dataset.clip_surface(surface, invert=False)$/;"	v
clipped	examples/02-plot/backface_props.py	/^clipped = globe.clip(normal='z', value=4.37e9)$/;"	v
clipped_pset	examples/00-load/create_pointset.py	/^    clipped_pset = lidar_pset.clip(origin=(0, 0, 1.76e3), normal=(0, 0, 1))$/;"	v
clipped_sphere	examples/02-plot/backface_props.py	/^clipped_sphere = sphere.clip(normal='z', value=0.4)$/;"	v
clipping_range	build/lib/pyvista/plotting/camera.py	/^    def clipping_range(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
clipping_range	build/lib/pyvista/plotting/camera.py	/^    def clipping_range(self, points):$/;"	m	class:Camera
clipping_range	pyvista/plotting/camera.py	/^    def clipping_range(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
clipping_range	pyvista/plotting/camera.py	/^    def clipping_range(self, points):$/;"	m	class:Camera
close	build/lib/pyvista/plotting/plotter.py	/^    def close(self):$/;"	m	class:BasePlotter
close	build/lib/pyvista/plotting/render_window_interactor.py	/^    def close(self):$/;"	m	class:RenderWindowInteractor
close	build/lib/pyvista/plotting/renderer.py	/^    def close(self) -> None:$/;"	m	class:Renderer
close	build/lib/pyvista/plotting/renderers.py	/^    def close(self):$/;"	m	class:Renderers
close	build/lib/pyvista/plotting/widgets.py	/^    def close(self):$/;"	m	class:WidgetHelper
close	pyvista/plotting/plotter.py	/^    def close(self):$/;"	m	class:BasePlotter
close	pyvista/plotting/render_window_interactor.py	/^    def close(self):$/;"	m	class:RenderWindowInteractor
close	pyvista/plotting/renderer.py	/^    def close(self) -> None:$/;"	m	class:Renderer
close	pyvista/plotting/renderers.py	/^    def close(self):$/;"	m	class:Renderers
close	pyvista/plotting/widgets.py	/^    def close(self):$/;"	m	class:WidgetHelper
close_all	build/lib/pyvista/plotting/__init__.py	/^from .plotter import close_all as close_all$/;"	i
close_all	build/lib/pyvista/plotting/plotter.py	/^def close_all() -> bool:$/;"	f
close_all	pyvista/plotting/__init__.py	/^from .plotter import close_all as close_all$/;"	i
close_all	pyvista/plotting/plotter.py	/^def close_all() -> bool:$/;"	f
close_wormhole	examples/99-advanced/sphere_eversion.py	/^def close_wormhole(x0, y0, z0, eta, xi, alpha):$/;"	f
cloud	examples/00-load/create_tri_surface.py	/^cloud = pv.PolyData(points)$/;"	v
cloud	examples/00-load/wrap_trimesh.py	/^cloud = pv.wrap(points)$/;"	v
cloud	examples/02-plot/point_clouds.py	/^cloud = examples.download_cloud_dark_matter()$/;"	v
cmap	build/lib/pyvista/demos/logo.py	/^        cmap='gist_heat',$/;"	v
cmap	build/lib/pyvista/demos/logo.py	/^        cmap='winter',$/;"	v
cmap	build/lib/pyvista/plotting/lookup_table.py	/^    def cmap(self) -> colors.Colormap | colors.ListedColormap | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
cmap	build/lib/pyvista/plotting/lookup_table.py	/^    def cmap(self, value):$/;"	m	class:LookupTable
cmap	build/lib/pyvista/plotting/mapper.py	/^    def cmap(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:_DataSetMapper
cmap	build/lib/pyvista/plotting/themes.py	/^    def cmap(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
cmap	build/lib/pyvista/plotting/themes.py	/^    def cmap(self, cmap):$/;"	m	class:Theme
cmap	examples/00-load/create_truss.py	/^    cmap='jet',$/;"	v
cmap	examples/01-filter/clipping_with_surface.py	/^    cmap='bwr',$/;"	v
cmap	examples/01-filter/connectivity.py	/^    cmap='bwr',$/;"	v
cmap	examples/01-filter/connectivity.py	/^    cmap='glasbey',$/;"	v
cmap	examples/01-filter/image_representations.py	/^    cmap='gray',$/;"	v
cmap	examples/01-filter/mesh_quality.py	/^    cmap='bwr',$/;"	v
cmap	examples/01-filter/sampling_functions_2d.py	/^    cmap='gist_earth',$/;"	v
cmap	examples/01-filter/sampling_functions_3d.py	/^    cmap='gist_earth_r',$/;"	v
cmap	examples/01-filter/slicing.py	/^cmap = plt.get_cmap('viridis', 4)$/;"	v
cmap	examples/02-plot/cmap.py	/^    cmap='fire',$/;"	v
cmap	examples/02-plot/cmap.py	/^    cmap='hot',$/;"	v
cmap	examples/02-plot/depth_peeling.py	/^cmap = 'viridis_r'$/;"	v
cmap	examples/02-plot/movie_glyphs.py	/^    cmap='bwr',$/;"	v
cmap	examples/02-plot/opacity.py	/^    cmap='bwr',$/;"	v
cmap	examples/02-plot/texture.py	/^cmap = get_cmap('nipy_spectral')$/;"	v
cmap	examples/02-plot/vector_component.py	/^    cmap='jet',$/;"	v
cmap	examples/02-plot/volume.py	/^    cmap='bone',$/;"	v
cmap	examples/02-plot/volume.py	/^    cmap='gist_heat',$/;"	v
cmap	examples/02-plot/volume.py	/^    cmap='magma',$/;"	v
cmap	examples/99-advanced/atomic_orbitals.py	/^    cmap=['red', 'green'],$/;"	v
cmap	examples/99-advanced/fea_hertzian_contact_pressure.py	/^    cmap='gouldian',$/;"	v
cmap	examples/99-advanced/magnetic_fields.py	/^    cmap='bwr',$/;"	v
cmap	examples/99-advanced/magnetic_fields.py	/^    cmap='hot',$/;"	v
cmap	examples/99-advanced/openfoam_cooling.py	/^    cmap='autumn_r',$/;"	v
cmap	examples/99-advanced/openfoam_cooling.py	/^    cmap='reds',$/;"	v
cmap	pyvista/demos/logo.py	/^        cmap='gist_heat',$/;"	v
cmap	pyvista/demos/logo.py	/^        cmap='winter',$/;"	v
cmap	pyvista/plotting/lookup_table.py	/^    def cmap(self) -> colors.Colormap | colors.ListedColormap | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
cmap	pyvista/plotting/lookup_table.py	/^    def cmap(self, value):$/;"	m	class:LookupTable
cmap	pyvista/plotting/mapper.py	/^    def cmap(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:_DataSetMapper
cmap	pyvista/plotting/themes.py	/^    def cmap(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
cmap	pyvista/plotting/themes.py	/^    def cmap(self, cmap):$/;"	m	class:Theme
cmocean	build/lib/pyvista/plotting/colors.py	/^            import cmocean$/;"	i
cmocean	pyvista/plotting/colors.py	/^            import cmocean$/;"	i
cn	tests/plotting/conftest.py	/^        cn = obj.__class__.__name__$/;"	v	class:check_gc.GcHandler
coil_block	examples/99-advanced/magnetic_fields.py	/^coil_block = pv.MultiBlock(coils)$/;"	v
coils	examples/99-advanced/magnetic_fields.py	/^coils = [pv.Polygon((0, 0, z), radius=5, n_sides=100, fill=False) for z in np.linspace(-8, 8, 16)]$/;"	v
col_weights	examples/02-plot/multi_window.py	/^col_weights = [1, 1, 0.5, 2]$/;"	v
collapse_menu	build/lib/pyvista/trame/jupyter.py	/^            collapse_menu=collapse_menu,$/;"	v
collapse_menu	build/lib/pyvista/trame/jupyter.py	/^        collapse_menu=collapse_menu,$/;"	v
collapse_menu	build/lib/pyvista/trame/ui/__init__.py	/^        collapse_menu=collapse_menu,$/;"	v
collapse_menu	pyvista/trame/jupyter.py	/^            collapse_menu=collapse_menu,$/;"	v
collapse_menu	pyvista/trame/jupyter.py	/^        collapse_menu=collapse_menu,$/;"	v
collapse_menu	pyvista/trame/ui/__init__.py	/^        collapse_menu=collapse_menu,$/;"	v
collect_example_files	examples_trame/tests/test_trame.py	/^def collect_example_files():$/;"	f
collision	build/lib/pyvista/core/filters/poly_data.py	/^    def collision($/;"	m	class:PolyDataFilters
collision	pyvista/core/filters/poly_data.py	/^    def collision($/;"	m	class:PolyDataFilters
collision_mask	examples/01-filter/collisions.py	/^    collision_mask = np.zeros(sphere0.n_cells, dtype=bool)$/;"	v
color	build/lib/pyvista/demos/logo.py	/^        color='r',$/;"	v
color	build/lib/pyvista/plotting/_property.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
color	build/lib/pyvista/plotting/_property.py	/^    def color(self, value):$/;"	m	class:Property
color	build/lib/pyvista/plotting/actor_properties.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
color	build/lib/pyvista/plotting/actor_properties.py	/^    def color(self, color: tuple[float, float, float]):$/;"	m	class:ActorProperties
color	build/lib/pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
color	build/lib/pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
color	build/lib/pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
color	build/lib/pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
color	build/lib/pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:Brush
color	build/lib/pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:Pen
color	build/lib/pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:_MultiCompPlot
color	build/lib/pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:_Plot
color	build/lib/pyvista/plotting/composite_mapper.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
color	build/lib/pyvista/plotting/composite_mapper.py	/^    def color(self, new_color):$/;"	m	class:BlockAttributes
color	build/lib/pyvista/plotting/text.py	/^    def color(self) -> Color:$/;"	m	class:TextProperty
color	build/lib/pyvista/plotting/text.py	/^    def color(self, color: ColorLike):$/;"	m	class:TextProperty
color	build/lib/pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
color	build/lib/pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_Font
color	build/lib/pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
color	build/lib/pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):$/;"	m	class:Theme
color	build/lib/pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):$/;"	m	class:_Font
color	build/lib/pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):$/;"	m	class:_SilhouetteConfig
color	examples/00-load/create_kochanek_spline.py	/^        color='k',$/;"	v
color	examples/00-load/create_platonic_solids.py	/^        color='silver',$/;"	v
color	examples/01-filter/cell_centers.py	/^    color='r',$/;"	v
color	examples/01-filter/extrude_rotate.py	/^    color='red',$/;"	v
color	examples/01-filter/image_fft_perlin_noise.py	/^    color='k',$/;"	v
color	examples/01-filter/image_representations.py	/^    color='red',$/;"	v
color	examples/02-plot/point_clouds.py	/^    color='#fff7c2',$/;"	v
color	examples/02-plot/silhouette.py	/^    color='green',$/;"	v
color	examples/02-plot/silhouette.py	/^    color='lightblue',$/;"	v
color	examples/02-plot/silhouette.py	/^    color='red',$/;"	v
color	examples/02-plot/vertices.py	/^    color='magenta',$/;"	v
color	examples/04-lights/shadows.py	/^    color='cyan',$/;"	v
color	examples/04-lights/shadows.py	/^    color='orange',$/;"	v
color	examples/04-lights/shadows.py	/^    color=[1.0, 0.83921, 0.6666, 1.0],  # Color temp. 2850 K$/;"	v
color	examples/04-lights/shadows.py	/^    color=[1.0, 1.0, 0.9843, 1.0],  # Color temp. 5400 K$/;"	v
color	examples/98-common/project_points_tessellate.py	/^    color='red',$/;"	v
color	examples/99-advanced/magnetic_fields.py	/^    color='black',$/;"	v
color	examples/99-advanced/ray_trace_moeller.py	/^        color='r',$/;"	v
color	examples/99-advanced/sphere_eversion.py	/^    color='aquamarine',$/;"	v
color	examples_trame/basic/actor_color.py	/^def color(color='seagreen', **kwargs):$/;"	f
color	pyvista/demos/logo.py	/^        color='r',$/;"	v
color	pyvista/plotting/_property.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
color	pyvista/plotting/_property.py	/^    def color(self, value):$/;"	m	class:Property
color	pyvista/plotting/actor_properties.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
color	pyvista/plotting/actor_properties.py	/^    def color(self, color: tuple[float, float, float]):$/;"	m	class:ActorProperties
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
color	pyvista/plotting/charts.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
color	pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:Brush
color	pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:Pen
color	pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:_MultiCompPlot
color	pyvista/plotting/charts.py	/^    def color(self, val) -> None:$/;"	m	class:_Plot
color	pyvista/plotting/composite_mapper.py	/^    def color(self):  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
color	pyvista/plotting/composite_mapper.py	/^    def color(self, new_color):$/;"	m	class:BlockAttributes
color	pyvista/plotting/text.py	/^    def color(self) -> Color:$/;"	m	class:TextProperty
color	pyvista/plotting/text.py	/^    def color(self, color: ColorLike):$/;"	m	class:TextProperty
color	pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
color	pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_Font
color	pyvista/plotting/themes.py	/^    def color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
color	pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):$/;"	m	class:Theme
color	pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):$/;"	m	class:_Font
color	pyvista/plotting/themes.py	/^    def color(self, color: ColorLike):$/;"	m	class:_SilhouetteConfig
color_char_to_word	build/lib/pyvista/plotting/__init__.py	/^from .colors import color_char_to_word as color_char_to_word$/;"	i
color_char_to_word	build/lib/pyvista/plotting/colors.py	/^color_char_to_word = {$/;"	v
color_char_to_word	pyvista/plotting/__init__.py	/^from .colors import color_char_to_word as color_char_to_word$/;"	i
color_char_to_word	pyvista/plotting/colors.py	/^color_char_to_word = {$/;"	v
color_cycler	build/lib/pyvista/plotting/themes.py	/^    def color_cycler(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
color_cycler	build/lib/pyvista/plotting/themes.py	/^    def color_cycler(self, color_cycler):$/;"	m	class:Theme
color_cycler	pyvista/plotting/themes.py	/^    def color_cycler(self):  # numpydoc ignore=RT01$/;"	m	class:Theme
color_cycler	pyvista/plotting/themes.py	/^    def color_cycler(self, color_cycler):$/;"	m	class:Theme
color_labels	build/lib/pyvista/core/filters/data_set.py	/^    def color_labels(  # type: ignore[misc]$/;"	m	class:DataSetFilters
color_labels	pyvista/core/filters/data_set.py	/^    def color_labels(  # type: ignore[misc]$/;"	m	class:DataSetFilters
color_missing_with_nan	build/lib/pyvista/plotting/composite_mapper.py	/^    def color_missing_with_nan(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
color_missing_with_nan	build/lib/pyvista/plotting/composite_mapper.py	/^    def color_missing_with_nan(self, value: bool):$/;"	m	class:CompositePolyDataMapper
color_missing_with_nan	pyvista/plotting/composite_mapper.py	/^    def color_missing_with_nan(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
color_missing_with_nan	pyvista/plotting/composite_mapper.py	/^    def color_missing_with_nan(self, value: bool):$/;"	m	class:CompositePolyDataMapper
color_mode	build/lib/pyvista/plotting/mapper.py	/^    def color_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
color_mode	build/lib/pyvista/plotting/mapper.py	/^    def color_mode(self, value: str):$/;"	m	class:_BaseMapper
color_mode	pyvista/plotting/mapper.py	/^    def color_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
color_mode	pyvista/plotting/mapper.py	/^    def color_mode(self, value: str):$/;"	m	class:_BaseMapper
color_names	build/lib/pyvista/plotting/colors.py	/^color_names = {h: n for n, h in hexcolors.items()}$/;"	v
color_names	pyvista/plotting/colors.py	/^color_names = {h: n for n, h in hexcolors.items()}$/;"	v
color_scheme	build/lib/pyvista/plotting/charts.py	/^    def color_scheme(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
color_scheme	build/lib/pyvista/plotting/charts.py	/^    def color_scheme(self, val) -> None:$/;"	m	class:_MultiCompPlot
color_scheme	pyvista/plotting/charts.py	/^    def color_scheme(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
color_scheme	pyvista/plotting/charts.py	/^    def color_scheme(self, val) -> None:$/;"	m	class:_MultiCompPlot
color_scheme_to_cycler	build/lib/pyvista/plotting/colors.py	/^def color_scheme_to_cycler(scheme):$/;"	f
color_scheme_to_cycler	pyvista/plotting/colors.py	/^def color_scheme_to_cycler(scheme):$/;"	f
color_scheme_to_cycler	tests/plotting/test_colors.py	/^from pyvista.plotting.colors import color_scheme_to_cycler$/;"	i
color_synonyms	build/lib/pyvista/plotting/charts.py	/^from .colors import color_synonyms$/;"	i
color_synonyms	build/lib/pyvista/plotting/colors.py	/^color_synonyms = {$/;"	v
color_synonyms	pyvista/plotting/charts.py	/^from .colors import color_synonyms$/;"	i
color_synonyms	pyvista/plotting/colors.py	/^color_synonyms = {$/;"	v
colorbar_horizontal	build/lib/pyvista/plotting/themes.py	/^    def colorbar_horizontal(self) -> _ColorbarConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_horizontal	build/lib/pyvista/plotting/themes.py	/^    def colorbar_horizontal(self, config: _ColorbarConfig):$/;"	m	class:Theme
colorbar_horizontal	pyvista/plotting/themes.py	/^    def colorbar_horizontal(self) -> _ColorbarConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_horizontal	pyvista/plotting/themes.py	/^    def colorbar_horizontal(self, config: _ColorbarConfig):$/;"	m	class:Theme
colorbar_orientation	build/lib/pyvista/plotting/themes.py	/^    def colorbar_orientation(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_orientation	build/lib/pyvista/plotting/themes.py	/^    def colorbar_orientation(self, colorbar_orientation: str):$/;"	m	class:Theme
colorbar_orientation	pyvista/plotting/themes.py	/^    def colorbar_orientation(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_orientation	pyvista/plotting/themes.py	/^    def colorbar_orientation(self, colorbar_orientation: str):$/;"	m	class:Theme
colorbar_vertical	build/lib/pyvista/plotting/themes.py	/^    def colorbar_vertical(self) -> _ColorbarConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_vertical	build/lib/pyvista/plotting/themes.py	/^    def colorbar_vertical(self, config: _ColorbarConfig):$/;"	m	class:Theme
colorbar_vertical	pyvista/plotting/themes.py	/^    def colorbar_vertical(self) -> _ColorbarConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
colorbar_vertical	pyvista/plotting/themes.py	/^    def colorbar_vertical(self, config: _ColorbarConfig):$/;"	m	class:Theme
colorcet	build/lib/pyvista/plotting/colors.py	/^            import colorcet$/;"	i
colorcet	pyvista/plotting/colors.py	/^            import colorcet$/;"	i
colorful_tetrahedron	tests/plotting/conftest.py	/^def colorful_tetrahedron():$/;"	f
colormaps	build/lib/pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
colormaps	build/lib/pyvista/plotting/colors.py	/^    from matplotlib import colormaps$/;"	i
colormaps	pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
colormaps	pyvista/plotting/colors.py	/^    from matplotlib import colormaps$/;"	i
colors	build/lib/pyvista/core/filters/data_set.py	/^        import matplotlib.colors$/;"	i
colors	build/lib/pyvista/examples/downloads.py	/^            from colors import colors$/;"	i
colors	build/lib/pyvista/plotting/charts.py	/^    def colors(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
colors	build/lib/pyvista/plotting/charts.py	/^    def colors(self, val):$/;"	m	class:_MultiCompPlot
colors	build/lib/pyvista/plotting/colors.py	/^    from matplotlib import colors$/;"	i
colors	build/lib/pyvista/plotting/lookup_table.py	/^    from matplotlib import colors$/;"	i
colors	examples/00-load/create_truss.py	/^colors = range(edges.shape[0])$/;"	v
colors	examples/02-plot/color_cycler.py	/^colors = cycler('color', ['lightcoral', 'seagreen', 'aqua', 'firebrick'])()$/;"	v
colors	examples/02-plot/depth_of_field.py	/^colors = bunnies.points - bunnies.bounds[::2]$/;"	v
colors	examples/02-plot/depth_of_field.py	/^colors = colors.astype(np.uint8)$/;"	v
colors	examples/02-plot/pbr.py	/^colors = ['red', 'teal', 'black', 'orange', 'silver']$/;"	v
colors	examples/02-plot/texture.py	/^    colors = (cmap(hue)[:, 0:3] * 255.0).astype(np.uint8)$/;"	v
colors	examples/02-plot/texture.py	/^colors = (cmap(hue)[:, 0:3] * 255.0).astype(np.uint8)$/;"	v
colors	examples/03-widgets/checkbox_widget.py	/^colors = [$/;"	v
colors	examples/03-widgets/sphere_widget.py	/^colors = get_colors(len(points))$/;"	v
colors	examples/04-lights/actors.py	/^colors = ['red', 'lime', 'blue']$/;"	v
colors	pyvista/core/filters/data_set.py	/^        import matplotlib.colors$/;"	i
colors	pyvista/examples/downloads.py	/^            from colors import colors$/;"	i
colors	pyvista/plotting/charts.py	/^    def colors(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
colors	pyvista/plotting/charts.py	/^    def colors(self, val):$/;"	m	class:_MultiCompPlot
colors	pyvista/plotting/colors.py	/^    from matplotlib import colors$/;"	i
colors	pyvista/plotting/lookup_table.py	/^    from matplotlib import colors$/;"	i
colors	tests/plotting/test_theme.py	/^from pyvista import colors$/;"	i
colorsys	tests/plotting/test_colors.py	/^import colorsys$/;"	i
combine	build/lib/pyvista/core/filters/composite.py	/^    def combine(self, merge_points: bool = False, tolerance=0.0):$/;"	m	class:CompositeFilters
combine	pyvista/core/filters/composite.py	/^    def combine(self, merge_points: bool = False, tolerance=0.0):$/;"	m	class:CompositeFilters
combined	examples/00-load/linear_cells.py	/^combined = grid_b + grid_a$/;"	v
comet_fenicsx	doc/source/make_external_gallery.py	/^    comet_fenicsx=Example($/;"	v
compare_decimation	examples/01-filter/decimate.py	/^def compare_decimation(spiral, decimated):$/;"	f
compare_images	build/lib/pyvista/plotting/utilities/__init__.py	/^from .regression import compare_images as compare_images$/;"	i
compare_images	build/lib/pyvista/plotting/utilities/regression.py	/^def compare_images(im1, im2, threshold=1, use_vtk: bool = True):$/;"	f
compare_images	pyvista/plotting/utilities/__init__.py	/^from .regression import compare_images as compare_images$/;"	i
compare_images	pyvista/plotting/utilities/regression.py	/^def compare_images(im1, im2, threshold=1, use_vtk: bool = True):$/;"	f
compile_regex_list	build/lib/pyvista/ext/coverage.py	/^def compile_regex_list(name: str, exps: str) -> list[Pattern]:$/;"	f
compile_regex_list	pyvista/ext/coverage.py	/^def compile_regex_list(name: str, exps: str) -> list[Pattern]:$/;"	f
component	examples/01-filter/integrate_data.py	/^    component=2,$/;"	v
component_mode	tests/core/test_dataset_filters.py	/^        component_mode='0',$/;"	v	class:SplitComponentTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode='1',$/;"	v	class:SplitComponentTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode='all',$/;"	v	class:ComponentModeTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode='all',$/;"	v	class:SplitComponentTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode='any',$/;"	v	class:ComponentModeTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode='any',$/;"	v	class:SplitComponentTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode='multi',$/;"	v	class:ComponentModeTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode=0,$/;"	v	class:ComponentModeTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode=0,$/;"	v	class:SplitComponentTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode=1,$/;"	v	class:ComponentModeTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode=1,$/;"	v	class:SplitComponentTestCase
component_mode	tests/core/test_dataset_filters.py	/^        component_mode=2,$/;"	v	class:ComponentModeTestCase
component_mode_test_cases	tests/core/test_dataset_filters.py	/^component_mode_test_cases = [$/;"	v
component_offset	tests/core/test_dataset_filters.py	/^        component_offset=-0.5,$/;"	v	class:SplitComponentTestCase
component_offset	tests/core/test_dataset_filters.py	/^        component_offset=0,$/;"	v	class:SplitComponentTestCase
component_offset	tests/core/test_dataset_filters.py	/^        component_offset=None,$/;"	v	class:SplitComponentTestCase
compose	build/lib/pyvista/core/utilities/transform.py	/^    def compose($/;"	m	class:Transform
compose	pyvista/core/utilities/transform.py	/^    def compose($/;"	m	class:Transform
composite	tests/core/test_dataset_filters.py	/^from hypothesis.strategies import composite$/;"	i
composite_mapper	tests/plotting/mappers/test_composite_mapper.py	/^def composite_mapper(multiblock_poly):$/;"	f
compute_arc_length	build/lib/pyvista/core/filters/poly_data.py	/^    def compute_arc_length(self, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
compute_arc_length	pyvista/core/filters/poly_data.py	/^    def compute_arc_length(self, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
compute_boundary_mesh_quality	build/lib/pyvista/core/filters/data_set.py	/^    def compute_boundary_mesh_quality(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_boundary_mesh_quality	pyvista/core/filters/data_set.py	/^    def compute_boundary_mesh_quality(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_bounds	build/lib/pyvista/plotting/plotter.py	/^    def compute_bounds(self, *args, **kwargs) -> BoundsTuple:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
compute_bounds	build/lib/pyvista/plotting/renderer.py	/^    def compute_bounds($/;"	m	class:Renderer
compute_bounds	pyvista/plotting/plotter.py	/^    def compute_bounds(self, *args, **kwargs) -> BoundsTuple:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
compute_bounds	pyvista/plotting/renderer.py	/^    def compute_bounds($/;"	m	class:Renderer
compute_cell_quality	build/lib/pyvista/core/filters/data_set.py	/^    def compute_cell_quality(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_cell_quality	pyvista/core/filters/data_set.py	/^    def compute_cell_quality(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_cell_sizes	build/lib/pyvista/core/filters/data_object.py	/^    def compute_cell_sizes(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
compute_cell_sizes	pyvista/core/filters/data_object.py	/^    def compute_cell_sizes(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
compute_connections	build/lib/pyvista/core/pointset.py	/^    def compute_connections(self, inplace: bool = False):$/;"	m	class:ExplicitStructuredGrid
compute_connections	pyvista/core/pointset.py	/^    def compute_connections(self, inplace: bool = False):$/;"	m	class:ExplicitStructuredGrid
compute_connectivity	build/lib/pyvista/core/pointset.py	/^    def compute_connectivity(self, inplace: bool = False) -> ExplicitStructuredGrid:$/;"	m	class:ExplicitStructuredGrid
compute_connectivity	pyvista/core/pointset.py	/^    def compute_connectivity(self, inplace: bool = False) -> ExplicitStructuredGrid:$/;"	m	class:ExplicitStructuredGrid
compute_derivative	build/lib/pyvista/core/filters/data_set.py	/^    def compute_derivative(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_derivative	pyvista/core/filters/data_set.py	/^    def compute_derivative(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_implicit_distance	build/lib/pyvista/core/filters/data_set.py	/^    def compute_implicit_distance(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_implicit_distance	pyvista/core/filters/data_set.py	/^    def compute_implicit_distance(  # type: ignore[misc]$/;"	m	class:DataSetFilters
compute_normals	build/lib/pyvista/core/filters/poly_data.py	/^    def compute_normals($/;"	m	class:PolyDataFilters
compute_normals	pyvista/core/filters/poly_data.py	/^    def compute_normals($/;"	m	class:PolyDataFilters
compute_vectors	examples/00-load/create_point_cloud.py	/^def compute_vectors(mesh):$/;"	f
compute_vorticity	examples/01-filter/streamlines_2D.py	/^    compute_vorticity=False,  # vorticity already exists in dataset$/;"	v
concatenate	build/lib/pyvista/core/filters/structured_grid.py	/^    def concatenate(self, other, axis, tolerance=0.0):$/;"	m	class:StructuredGridFilters
concatenate	pyvista/core/filters/structured_grid.py	/^    def concatenate(self, other, axis, tolerance=0.0):$/;"	m	class:StructuredGridFilters
conditional_decorator	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import conditional_decorator as conditional_decorator$/;"	i
conditional_decorator	build/lib/pyvista/core/utilities/misc.py	/^class conditional_decorator:$/;"	c
conditional_decorator	pyvista/core/utilities/__init__.py	/^from .misc import conditional_decorator as conditional_decorator$/;"	i
conditional_decorator	pyvista/core/utilities/misc.py	/^class conditional_decorator:$/;"	c
conditional_decorator	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import conditional_decorator  # noqa: F401$/;"	i
cone	examples/00-load/create_geometric_objects.py	/^cone = pv.Cone()$/;"	v
cone_angle	build/lib/pyvista/plotting/lights.py	/^    def cone_angle(self):  # numpydoc ignore=RT01$/;"	m	class:Light
cone_angle	build/lib/pyvista/plotting/lights.py	/^    def cone_angle(self, angle):$/;"	m	class:Light
cone_angle	examples/04-lights/shadows.py	/^    cone_angle=15,$/;"	v
cone_angle	pyvista/plotting/lights.py	/^    def cone_angle(self):  # numpydoc ignore=RT01$/;"	m	class:Light
cone_angle	pyvista/plotting/lights.py	/^    def cone_angle(self, angle):$/;"	m	class:Light
cone_radius	build/lib/pyvista/plotting/axes_actor.py	/^    def cone_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cone_radius	build/lib/pyvista/plotting/axes_actor.py	/^    def cone_radius(self, rad: float):$/;"	m	class:AxesActor
cone_radius	pyvista/plotting/axes_actor.py	/^    def cone_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cone_radius	pyvista/plotting/axes_actor.py	/^    def cone_radius(self, rad: float):$/;"	m	class:AxesActor
cone_resolution	build/lib/pyvista/plotting/axes_actor.py	/^    def cone_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cone_resolution	build/lib/pyvista/plotting/axes_actor.py	/^    def cone_resolution(self, res: int):$/;"	m	class:AxesActor
cone_resolution	pyvista/plotting/axes_actor.py	/^    def cone_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cone_resolution	pyvista/plotting/axes_actor.py	/^    def cone_resolution(self, res: int):$/;"	m	class:AxesActor
configuration	tests/plotting/test_camera.py	/^configuration = [$/;"	v
configuration	tests/plotting/test_lights.py	/^configuration = [$/;"	v
conicspiral	examples/00-load/create_parametric_geometric_objects.py	/^conicspiral = pv.ParametricConicSpiral()$/;"	v
conn	examples/01-filter/connectivity.py	/^conn = mesh.connectivity('all')$/;"	v
connected_datasets	tests/core/test_dataset_filters.py	/^def connected_datasets():$/;"	f
connected_datasets_single_disconnected_cell	tests/core/test_dataset_filters.py	/^def connected_datasets_single_disconnected_cell(connected_datasets):$/;"	f
connectivity	build/lib/pyvista/core/filters/data_set.py	/^    def connectivity(  # type: ignore[misc]$/;"	m	class:DataSetFilters
connectivity	build/lib/pyvista/core/pointset.py	/^        def connectivity(ind):$/;"	f	function:ExplicitStructuredGrid.neighbors
connectivity	pyvista/core/filters/data_set.py	/^    def connectivity(  # type: ignore[misc]$/;"	m	class:DataSetFilters
connectivity	pyvista/core/pointset.py	/^        def connectivity(ind):$/;"	f	function:ExplicitStructuredGrid.neighbors
connectivity_array	build/lib/pyvista/core/cell.py	/^    def connectivity_array(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
connectivity_array	pyvista/core/cell.py	/^    def connectivity_array(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
contextlib	build/lib/pyvista/core/_vtk_core.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/core/datasetattributes.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/core/filters/data_set.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/core/pointset.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/core/utilities/__init__.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/core/utilities/geometric_objects.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/plotting/plotter.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/plotting/renderer.py	/^import contextlib$/;"	i
contextlib	build/lib/pyvista/plotting/scalar_bars.py	/^import contextlib$/;"	i
contextlib	pyvista/core/_vtk_core.py	/^import contextlib$/;"	i
contextlib	pyvista/core/datasetattributes.py	/^import contextlib$/;"	i
contextlib	pyvista/core/filters/data_set.py	/^import contextlib$/;"	i
contextlib	pyvista/core/pointset.py	/^import contextlib$/;"	i
contextlib	pyvista/core/utilities/__init__.py	/^import contextlib$/;"	i
contextlib	pyvista/core/utilities/geometric_objects.py	/^import contextlib$/;"	i
contextlib	pyvista/plotting/plotter.py	/^import contextlib$/;"	i
contextlib	pyvista/plotting/renderer.py	/^import contextlib$/;"	i
contextlib	pyvista/plotting/scalar_bars.py	/^import contextlib$/;"	i
contextmanager	build/lib/pyvista/plotting/plotter.py	/^from contextlib import contextmanager$/;"	i
contextmanager	build/lib/pyvista/plotting/render_window_interactor.py	/^from contextlib import contextmanager$/;"	i
contextmanager	pyvista/plotting/plotter.py	/^from contextlib import contextmanager$/;"	i
contextmanager	pyvista/plotting/render_window_interactor.py	/^from contextlib import contextmanager$/;"	i
contour	build/lib/pyvista/core/filters/data_set.py	/^    def contour(  # type: ignore[misc]$/;"	m	class:DataSetFilters
contour	build/lib/pyvista/core/pointset.py	/^    def contour(self, *args, **kwargs):$/;"	m	class:PointSet
contour	examples/99-advanced/plotting_algorithms.py	/^contour = vtk.vtkContourFilter()$/;"	v
contour	examples_trame/advanced/contour.py	/^contour = vtkContourFilter()$/;"	v
contour	pyvista/core/filters/data_set.py	/^    def contour(  # type: ignore[misc]$/;"	m	class:DataSetFilters
contour	pyvista/core/pointset.py	/^    def contour(self, *args, **kwargs):$/;"	m	class:PointSet
contour_banded	build/lib/pyvista/core/filters/poly_data.py	/^    def contour_banded(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
contour_banded	pyvista/core/filters/poly_data.py	/^    def contour_banded(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
contour_labeled	build/lib/pyvista/core/filters/image_data.py	/^    def contour_labeled($/;"	m	class:ImageDataFilters
contour_labeled	pyvista/core/filters/image_data.py	/^    def contour_labeled($/;"	m	class:ImageDataFilters
contour_labels	build/lib/pyvista/core/filters/image_data.py	/^    def contour_labels(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
contour_labels	pyvista/core/filters/image_data.py	/^    def contour_labels(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
contour_value	examples_trame/advanced/contour.py	/^contour_value = 0.5 * (data_range[0] + data_range[1])$/;"	v
contours	examples/01-filter/contouring.py	/^contours = mesh.contour()$/;"	v
contours	examples/01-filter/contouring.py	/^contours = mesh.contour(np.linspace(50, 200, 5))$/;"	v
contours	examples/01-filter/using_filters.py	/^contours = dataset.contour()$/;"	v
contours	examples/01-filter/voxelize.py	/^contours = voxels.contour(6, scalars='implicit_distance')$/;"	v
contours	examples/02-plot/opacity.py	/^contours = model.contour(10, scalars='Temperature')$/;"	v
contours	examples/99-advanced/atomic_orbitals.py	/^contours = contours.interpolate(grid)$/;"	v
contours	examples/99-advanced/atomic_orbitals.py	/^contours = grid.contour($/;"	v
convert_array	build/lib/pyvista/core/datasetattributes.py	/^from .utilities.arrays import convert_array$/;"	i
convert_array	build/lib/pyvista/core/grid.py	/^from .utilities.arrays import convert_array$/;"	i
convert_array	build/lib/pyvista/core/pyvista_ndarray.py	/^from .utilities.arrays import convert_array$/;"	i
convert_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import convert_array as convert_array$/;"	i
convert_array	build/lib/pyvista/core/utilities/arrays.py	/^def convert_array($/;"	f
convert_array	build/lib/pyvista/plotting/composite_mapper.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	build/lib/pyvista/plotting/lookup_table.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	pyvista/core/datasetattributes.py	/^from .utilities.arrays import convert_array$/;"	i
convert_array	pyvista/core/grid.py	/^from .utilities.arrays import convert_array$/;"	i
convert_array	pyvista/core/pyvista_ndarray.py	/^from .utilities.arrays import convert_array$/;"	i
convert_array	pyvista/core/utilities/__init__.py	/^from .arrays import convert_array as convert_array$/;"	i
convert_array	pyvista/core/utilities/arrays.py	/^def convert_array($/;"	f
convert_array	pyvista/plotting/composite_mapper.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	pyvista/plotting/lookup_table.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	tests/core/test_datasetattributes.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_array	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import convert_array$/;"	i
convert_color_channel	build/lib/pyvista/plotting/colors.py	/^    def convert_color_channel($/;"	m	class:Color
convert_color_channel	pyvista/plotting/colors.py	/^    def convert_color_channel($/;"	m	class:Color
convert_string_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import convert_string_array as convert_string_array$/;"	i
convert_string_array	build/lib/pyvista/core/utilities/arrays.py	/^def convert_string_array($/;"	f
convert_string_array	build/lib/pyvista/plotting/composite_mapper.py	/^from pyvista.core.utilities.arrays import convert_string_array$/;"	i
convert_string_array	build/lib/pyvista/plotting/cube_axes_actor.py	/^from pyvista.core.utilities.arrays import convert_string_array$/;"	i
convert_string_array	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import convert_string_array$/;"	i
convert_string_array	pyvista/core/utilities/__init__.py	/^from .arrays import convert_string_array as convert_string_array$/;"	i
convert_string_array	pyvista/core/utilities/arrays.py	/^def convert_string_array($/;"	f
convert_string_array	pyvista/plotting/composite_mapper.py	/^from pyvista.core.utilities.arrays import convert_string_array$/;"	i
convert_string_array	pyvista/plotting/cube_axes_actor.py	/^from pyvista.core.utilities.arrays import convert_string_array$/;"	i
convert_string_array	pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import convert_string_array$/;"	i
convert_string_array	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import convert_string_array  # noqa: F401$/;"	i
copy	build/lib/pyvista/core/cell.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:Cell
copy	build/lib/pyvista/core/composite.py	/^    def copy(self: MultiBlock, deep: bool = True) -> MultiBlock:$/;"	m	class:MultiBlock
copy	build/lib/pyvista/core/dataobject.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:DataObject
copy	build/lib/pyvista/core/dataset.py	/^    def copy(self: ActiveArrayInfo) -> ActiveArrayInfo:$/;"	m	class:ActiveArrayInfo
copy	build/lib/pyvista/core/dataset.py	/^    def copy(self: ActiveArrayInfoTuple) -> ActiveArrayInfoTuple:$/;"	m	class:ActiveArrayInfoTuple
copy	build/lib/pyvista/core/partitioned.py	/^    def copy(self, deep: bool = True):$/;"	m	class:PartitionedDataSet
copy	build/lib/pyvista/core/utilities/transform.py	/^    def copy(self: Transform) -> Transform:$/;"	m	class:Transform
copy	build/lib/pyvista/plotting/_property.py	/^    def copy(self) -> Property:$/;"	m	class:Property
copy	build/lib/pyvista/plotting/actor.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:Actor
copy	build/lib/pyvista/plotting/camera.py	/^    def copy(self):$/;"	m	class:Camera
copy	build/lib/pyvista/plotting/lights.py	/^    def copy(self, deep=True):$/;"	m	class:Light
copy	build/lib/pyvista/plotting/mapper.py	/^    def copy(self) -> _BaseMapper:$/;"	m	class:_BaseMapper
copy	build/lib/pyvista/plotting/prop3d.py	/^    def copy(self: Self, deep: bool = True) -> Self:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
copy	build/lib/pyvista/plotting/texture.py	/^    def copy(self):  # type: ignore[override]$/;"	m	class:Texture
copy	build/lib/pyvista/plotting/volume.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:Volume
copy	build/lib/pyvista/plotting/volume_property.py	/^    def copy(self) -> VolumeProperty:$/;"	m	class:VolumeProperty
copy	pyvista/core/cell.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:Cell
copy	pyvista/core/composite.py	/^    def copy(self: MultiBlock, deep: bool = True) -> MultiBlock:$/;"	m	class:MultiBlock
copy	pyvista/core/dataobject.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:DataObject
copy	pyvista/core/dataset.py	/^    def copy(self: ActiveArrayInfo) -> ActiveArrayInfo:$/;"	m	class:ActiveArrayInfo
copy	pyvista/core/dataset.py	/^    def copy(self: ActiveArrayInfoTuple) -> ActiveArrayInfoTuple:$/;"	m	class:ActiveArrayInfoTuple
copy	pyvista/core/partitioned.py	/^    def copy(self, deep: bool = True):$/;"	m	class:PartitionedDataSet
copy	pyvista/core/utilities/transform.py	/^    def copy(self: Transform) -> Transform:$/;"	m	class:Transform
copy	pyvista/plotting/_property.py	/^    def copy(self) -> Property:$/;"	m	class:Property
copy	pyvista/plotting/actor.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:Actor
copy	pyvista/plotting/camera.py	/^    def copy(self):$/;"	m	class:Camera
copy	pyvista/plotting/lights.py	/^    def copy(self, deep=True):$/;"	m	class:Light
copy	pyvista/plotting/mapper.py	/^    def copy(self) -> _BaseMapper:$/;"	m	class:_BaseMapper
copy	pyvista/plotting/prop3d.py	/^    def copy(self: Self, deep: bool = True) -> Self:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
copy	pyvista/plotting/texture.py	/^    def copy(self):  # type: ignore[override]$/;"	m	class:Texture
copy	pyvista/plotting/volume.py	/^    def copy(self: Self, deep: bool = True) -> Self:$/;"	m	class:Volume
copy	pyvista/plotting/volume_property.py	/^    def copy(self) -> VolumeProperty:$/;"	m	class:VolumeProperty
copy_attributes	build/lib/pyvista/core/dataobject.py	/^    def copy_attributes(self: Self, dataset: Self) -> None:$/;"	m	class:DataObject
copy_attributes	pyvista/core/dataobject.py	/^    def copy_attributes(self: Self, dataset: Self) -> None:$/;"	m	class:DataObject
copy_from	build/lib/pyvista/core/dataset.py	/^    def copy_from(self: Self, mesh: _vtk.vtkDataSet, deep: bool = True) -> None:$/;"	m	class:DataSet
copy_from	pyvista/core/dataset.py	/^    def copy_from(self: Self, mesh: _vtk.vtkDataSet, deep: bool = True) -> None:$/;"	m	class:DataSet
copy_mesh	examples/01-filter/image_fft.py	/^    copy_mesh=True,  # don't overwrite scalars when plotting$/;"	v
copy_meta_from	build/lib/pyvista/core/composite.py	/^    def copy_meta_from($/;"	m	class:MultiBlock
copy_meta_from	build/lib/pyvista/core/dataobject.py	/^    def copy_meta_from(self: Self, *args, **kwargs) -> None:  # pragma: no cover$/;"	m	class:DataObject
copy_meta_from	build/lib/pyvista/core/dataset.py	/^    def copy_meta_from(self: Self, ido: DataSet, deep: bool = True) -> None:$/;"	m	class:DataSet
copy_meta_from	build/lib/pyvista/core/partitioned.py	/^    def copy_meta_from(self, ido, deep) -> None:  # numpydoc ignore=PR01$/;"	m	class:PartitionedDataSet
copy_meta_from	pyvista/core/composite.py	/^    def copy_meta_from($/;"	m	class:MultiBlock
copy_meta_from	pyvista/core/dataobject.py	/^    def copy_meta_from(self: Self, *args, **kwargs) -> None:  # pragma: no cover$/;"	m	class:DataObject
copy_meta_from	pyvista/core/dataset.py	/^    def copy_meta_from(self: Self, ido: DataSet, deep: bool = True) -> None:$/;"	m	class:DataSet
copy_meta_from	pyvista/core/partitioned.py	/^    def copy_meta_from(self, ido, deep) -> None:  # numpydoc ignore=PR01$/;"	m	class:PartitionedDataSet
copy_structure	build/lib/pyvista/core/dataobject.py	/^    def copy_structure(self: Self, dataset: Self) -> None:$/;"	m	class:DataObject
copy_structure	pyvista/core/dataobject.py	/^    def copy_structure(self: Self, dataset: Self) -> None:$/;"	m	class:DataObject
copy_vtk_array	build/lib/pyvista/core/datasetattributes.py	/^from .utilities.arrays import copy_vtk_array$/;"	i
copy_vtk_array	build/lib/pyvista/core/utilities/arrays.py	/^def copy_vtk_array(array: _vtkArrayType, deep: bool = True) -> _vtkArrayType:$/;"	f
copy_vtk_array	pyvista/core/datasetattributes.py	/^from .utilities.arrays import copy_vtk_array$/;"	i
copy_vtk_array	pyvista/core/utilities/arrays.py	/^def copy_vtk_array(array: _vtkArrayType, deep: bool = True) -> _vtkArrayType:$/;"	f
copy_vtk_array	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import copy_vtk_array$/;"	i
copybutton_prompt_is_regexp	doc/source/conf.py	/^copybutton_prompt_is_regexp = True$/;"	v
copybutton_prompt_text	doc/source/conf.py	/^copybutton_prompt_text = r'>>> ?|\\.\\.\\. '$/;"	v
copylib	build/lib/pyvista/core/datasetattributes.py	/^import copy as copylib$/;"	i
copylib	pyvista/core/datasetattributes.py	/^import copy as copylib$/;"	i
copyright	doc/source/conf.py	/^copyright = f'2017-{year}, The PyVista Developers'  # noqa: A001$/;"	v
copyright	tests/plotting/tinypages/conf.py	/^copyright = f'2021-{year}, PyVista developers'  # noqa: A001$/;"	v
core	build/lib/pyvista/core/filters/data_set.py	/^import pyvista.core._vtk_core as _vtk$/;"	i
core	pyvista/core/filters/data_set.py	/^import pyvista.core._vtk_core as _vtk$/;"	i
corner_annotation	tests/plotting/test_text.py	/^def corner_annotation():$/;"	f
corners	examples/00-load/create_explicit_structured_grid.py	/^corners = corners.transpose()$/;"	v
corners	examples/00-load/create_explicit_structured_grid.py	/^corners = np.stack((xcorn, ycorn, zcorn))$/;"	v
count	build/lib/pyvista/core/utilities/cells.py	/^from itertools import count$/;"	i
count	pyvista/core/utilities/cells.py	/^from itertools import count$/;"	i
courier	build/lib/pyvista/plotting/tools.py	/^    courier = _vtk.VTK_COURIER$/;"	v	class:FONTS
courier	pyvista/plotting/tools.py	/^    courier = _vtk.VTK_COURIER$/;"	v	class:FONTS
covariant	build/lib/pyvista/examples/_dataset_loader.py	/^    covariant=True,$/;"	v
covariant	pyvista/examples/_dataset_loader.py	/^    covariant=True,$/;"	v
cover	build/lib/pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
cover	pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
coverage_additional_modules	doc/source/conf.py	/^coverage_additional_modules = [$/;"	v
coverage_ignore_modules	doc/source/conf.py	/^coverage_ignore_modules = [$/;"	v
cow	examples/04-lights/actors.py	/^cow = examples.download_cow()$/;"	v
cow	tests/test_meshio.py	/^cow = examples.download_cow().cast_to_unstructured_grid()$/;"	v
cp	examples/01-filter/gaussian_smoothing.py	/^cp = [(319.5, 239.5, 1053.7372980874645), (319.5, 239.5, 0.0), (0.0, 1.0, 0.0)]$/;"	v
cpos	build/lib/pyvista/_plot.py	/^        cpos = pl.get_default_cam_pos()  # type: ignore[call-arg]$/;"	v
cpos	examples/00-load/create_parametric_geometric_objects.py	/^cpos = [$/;"	v
cpos	examples/00-load/create_poly.py	/^    cpos=[-1, 1, 0.5],$/;"	v
cpos	examples/00-load/create_surface_draped.py	/^cpos = [$/;"	v
cpos	examples/00-load/linear_cells.py	/^    cpos='xy',$/;"	v
cpos	examples/00-load/read_file.py	/^cpos = [(0.2, 0.3, 0.9), (0, 0, 0), (0, 1, 0)]$/;"	v
cpos	examples/00-load/read_file.py	/^cpos = [(107.0, 68.5, 204.0), (128.0, 86.5, 223.5), (0.45, 0.36, -0.8)]$/;"	v
cpos	examples/00-load/read_file.py	/^cpos = mesh.plot()$/;"	v
cpos	examples/00-load/terrain_mesh.py	/^cpos = [$/;"	v
cpos	examples/00-load/wrap_trimesh.py	/^    cpos='xz',$/;"	v
cpos	examples/01-filter/cell_centers.py	/^cpos = [$/;"	v
cpos	examples/01-filter/compute_normals.py	/^cpos = [$/;"	v
cpos	examples/01-filter/connectivity.py	/^    cpos=cpos,$/;"	v
cpos	examples/01-filter/connectivity.py	/^cpos = [(10.5, 12.2, 18.3), (0.0, 0.0, 0.0), (0.0, 1.0, 0.0)]$/;"	v
cpos	examples/01-filter/connectivity.py	/^cpos = [(40.6018, -280.533, 47.0172), (40.6018, 37.2813, 50.1953), (0.0, 0.0, 1.0)]$/;"	v
cpos	examples/01-filter/decimate.py	/^cpos = [(0.4, -0.07, -0.31), (0.05, -0.13, -0.06), (-0.1, 1, 0.08)]$/;"	v
cpos	examples/01-filter/extract_cells_inside_surface.py	/^cpos = [(13.0, 7.6, -13.85), (0.44, -0.4, -0.37), (-0.28, 0.9, 0.3)]$/;"	v
cpos	examples/01-filter/glyphs.py	/^cpos = pl.show(return_cpos=True)$/;"	v
cpos	examples/01-filter/image_fft.py	/^    cpos='xy',$/;"	v
cpos	examples/01-filter/image_representations.py	/^    cpos='xy',$/;"	v
cpos	examples/01-filter/interpolate.py	/^cpos = [$/;"	v
cpos	examples/01-filter/mesh_quality.py	/^    cpos='xy',$/;"	v
cpos	examples/01-filter/resample.py	/^cpos = [$/;"	v
cpos	examples/01-filter/streamlines.py	/^cpos = [(1.2, 1.2, 1.2), (-0.0, -0.0, -0.0), (0.0, 0.0, 1.0)]$/;"	v
cpos	examples/01-filter/subdivide.py	/^cpos = [$/;"	v
cpos	examples/01-filter/surface_smoothing.py	/^cpos = [-2, 5, 3]$/;"	v
cpos	examples/01-filter/voxelize.py	/^cpos = [$/;"	v
cpos	examples/02-plot/depth_of_field.py	/^cpos = [(11.6159, -1.2803, 1.5338), (4.1354, 1.4796, 1.2711), (-0.0352, -0.0004, 1.0)]$/;"	v
cpos	examples/02-plot/lighting_mesh.py	/^cpos = [(575848.0, 5128459.0, 22289.0), (562835.0, 5114981.5, 2294.5), (-0.5, -0.5, 0.7)]$/;"	v
cpos	examples/02-plot/lookup_table.py	/^cpos = pl.show(return_cpos=True)$/;"	v
cpos	examples/02-plot/ortho_slices.py	/^cpos = [$/;"	v
cpos	examples/02-plot/pbr.py	/^cpos = [(-313.40, 66.09, 1000.61), (0.0, 0.0, 0.0), (0.018, 0.99, -0.06)]$/;"	v
cpos	examples/02-plot/pbr.py	/^cpos = plotter.show()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = pl.show()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = plotter.show()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = pv.Sphere().plot()$/;"	v
cpos	examples/02-plot/themes.py	/^cpos = pv.Sphere().plot(theme=my_theme)$/;"	v
cpos	examples/02-plot/vertices.py	/^cpos = [(0.036, 0.367, 0.884), (0.024, 0.033, -0.022), (-0.303, 0.895, -0.325)]$/;"	v
cpos	examples/02-plot/volume.py	/^cpos = [(-381.74, -46.02, 216.54), (74.8305, 89.2905, 100.0), (0.23, 0.072, 0.97)]$/;"	v
cpos	examples/02-plot/volume.py	/^cpos = pl.show(return_cpos=True)$/;"	v
cpos	examples/03-widgets/animation.py	/^cpos = [(0.0, 0.0, 10.0), (0.0, 0.0, 0.0), (0.0, 1.0, 0.0)]$/;"	v
cpos	examples/99-advanced/atomic_orbitals.py	/^    cpos='xz',$/;"	v
cpos	examples/99-advanced/pump_bracket.py	/^    cpos=cpos,$/;"	v
cpos	examples/99-advanced/pump_bracket.py	/^cpos = [$/;"	v
cpos	pyvista/_plot.py	/^        cpos = pl.get_default_cam_pos()  # type: ignore[call-arg]$/;"	v
cpos_final	build/lib/pyvista/demos/logo.py	/^        cpos_final = plotter.camera_position$/;"	v
cpos_final	pyvista/demos/logo.py	/^        cpos_final = plotter.camera_position$/;"	v
cpos_param	tests/plotting/test_plotting.py	/^cpos_param = [$/;"	v
create_axes_marker	build/lib/pyvista/plotting/__init__.py	/^from .tools import create_axes_marker as create_axes_marker$/;"	i
create_axes_marker	build/lib/pyvista/plotting/renderer.py	/^from .tools import create_axes_marker$/;"	i
create_axes_marker	build/lib/pyvista/plotting/tools.py	/^def create_axes_marker($/;"	f
create_axes_marker	pyvista/plotting/__init__.py	/^from .tools import create_axes_marker as create_axes_marker$/;"	i
create_axes_marker	pyvista/plotting/renderer.py	/^from .tools import create_axes_marker$/;"	i
create_axes_marker	pyvista/plotting/tools.py	/^def create_axes_marker($/;"	f
create_axes_orientation_box	build/lib/pyvista/plotting/__init__.py	/^from .tools import create_axes_orientation_box as create_axes_orientation_box$/;"	i
create_axes_orientation_box	build/lib/pyvista/plotting/renderer.py	/^from .tools import create_axes_orientation_box$/;"	i
create_axes_orientation_box	build/lib/pyvista/plotting/tools.py	/^def create_axes_orientation_box($/;"	f
create_axes_orientation_box	pyvista/plotting/__init__.py	/^from .tools import create_axes_orientation_box as create_axes_orientation_box$/;"	i
create_axes_orientation_box	pyvista/plotting/renderer.py	/^from .tools import create_axes_orientation_box$/;"	i
create_axes_orientation_box	pyvista/plotting/tools.py	/^def create_axes_orientation_box($/;"	f
create_button	build/lib/pyvista/plotting/widgets.py	/^        def create_button(color1, color2, color3, dims=(size, size, 1)):$/;"	f	function:WidgetHelper.add_checkbox_button_widget
create_button	pyvista/plotting/widgets.py	/^        def create_button(color1, color2, color3, dims=(size, size, 1)):$/;"	f	function:WidgetHelper.add_checkbox_button_widget
create_grid	build/lib/pyvista/core/utilities/__init__.py	/^from .features import create_grid as create_grid$/;"	i
create_grid	build/lib/pyvista/core/utilities/features.py	/^def create_grid(dataset, dimensions=(101, 101, 101)):$/;"	f
create_grid	pyvista/core/utilities/__init__.py	/^from .features import create_grid as create_grid$/;"	i
create_grid	pyvista/core/utilities/features.py	/^def create_grid(dataset, dimensions=(101, 101, 101)):$/;"	f
create_grid	tests/core/test_utilities.py	/^from pyvista.core.utilities.features import create_grid$/;"	i
create_hex_example	tests/core/test_grid.py	/^def create_hex_example():$/;"	f
create_mesh	examples/03-widgets/slider_bar_widget.py	/^def create_mesh(value):$/;"	f
create_mixed_cells	build/lib/pyvista/core/pointset.py	/^from .utilities.cells import create_mixed_cells$/;"	i
create_mixed_cells	build/lib/pyvista/core/utilities/__init__.py	/^from .cells import create_mixed_cells as create_mixed_cells$/;"	i
create_mixed_cells	build/lib/pyvista/core/utilities/cells.py	/^def create_mixed_cells(mixed_cell_dict, nr_points=None):$/;"	f
create_mixed_cells	pyvista/core/pointset.py	/^from .utilities.cells import create_mixed_cells$/;"	i
create_mixed_cells	pyvista/core/utilities/__init__.py	/^from .cells import create_mixed_cells as create_mixed_cells$/;"	i
create_mixed_cells	pyvista/core/utilities/cells.py	/^def create_mixed_cells(mixed_cell_dict, nr_points=None):$/;"	f
create_north_arrow	build/lib/pyvista/plotting/renderer.py	/^from .tools import create_north_arrow$/;"	i
create_north_arrow	build/lib/pyvista/plotting/tools.py	/^def create_north_arrow():$/;"	f
create_north_arrow	pyvista/plotting/renderer.py	/^from .tools import create_north_arrow$/;"	i
create_north_arrow	pyvista/plotting/tools.py	/^def create_north_arrow():$/;"	f
create_radio_button	build/lib/pyvista/plotting/widgets.py	/^        def create_radio_button(fg_color, bg_color, size=size, smooth=2):$/;"	f	function:WidgetHelper.add_radio_button_widget
create_radio_button	pyvista/plotting/widgets.py	/^        def create_radio_button(fg_color, bg_color, size=size, smooth=2):$/;"	f	function:WidgetHelper.add_radio_button_widget
create_timer	build/lib/pyvista/plotting/render_window_interactor.py	/^    def create_timer(self, duration, repeating=True):$/;"	m	class:RenderWindowInteractor
create_timer	pyvista/plotting/render_window_interactor.py	/^    def create_timer(self, duration, repeating=True):$/;"	m	class:RenderWindowInteractor
crinkle_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import crinkle_algorithm as crinkle_algorithm$/;"	i
crinkle_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def crinkle_algorithm(clip, source):$/;"	f
crinkle_algorithm	build/lib/pyvista/plotting/widgets.py	/^from .utilities.algorithms import crinkle_algorithm$/;"	i
crinkle_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import crinkle_algorithm as crinkle_algorithm$/;"	i
crinkle_algorithm	pyvista/plotting/utilities/algorithms.py	/^def crinkle_algorithm(clip, source):$/;"	f
crinkle_algorithm	pyvista/plotting/widgets.py	/^from .utilities.algorithms import crinkle_algorithm$/;"	i
crinkle_algorithm	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import crinkle_algorithm  # noqa: F401$/;"	i
crinkled	examples/01-filter/clipping.py	/^crinkled = mesh.clip(normal=normal, crinkle=True)$/;"	v
crosscap	examples/00-load/create_parametric_geometric_objects.py	/^crosscap = pv.ParametricCrossCap()$/;"	v
ct_image	examples/02-plot/volume.py	/^ct_image = dataset['ct']$/;"	v
ct_image_array	examples/02-plot/volume.py	/^ct_image_array = ct_image.active_scalars$/;"	v
ctp	build/lib/pyvista/core/filters/data_object.py	/^    def ctp(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
ctp	pyvista/core/filters/data_object.py	/^    def ctp(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
ctypes	build/lib/pyvista/plotting/plotter.py	/^import ctypes$/;"	i
ctypes	pyvista/plotting/plotter.py	/^import ctypes$/;"	i
cube	build/lib/pyvista/plotting/tools.py	/^        cube = pyvista.Cube()$/;"	v
cube	examples/01-filter/boolean_operations.py	/^cube = pv.Cube().triangulate().subdivide(3)$/;"	v
cube	examples/01-filter/boolean_operations.py	/^cube = pv.Cube().triangulate().subdivide(3).flip_faces()$/;"	v
cube	examples/02-plot/distance_measurement.py	/^cube = pv.Cube()$/;"	v
cube	examples/02-plot/mesh_picking.py	/^cube = pv.Cube()$/;"	v
cube	examples/02-plot/point_picking.py	/^cube = pv.Cube().translate([10, 10, 0])$/;"	v
cube	examples/02-plot/surface_picking.py	/^cube = pv.Cube()$/;"	v
cube	pyvista/plotting/tools.py	/^        cube = pyvista.Cube()$/;"	v
cube	tests/conftest.py	/^def cube():$/;"	f
cube2	examples/02-plot/distance_measurement.py	/^cube2 = pv.Cube([10, 10, 0])$/;"	v
cube_actor	build/lib/pyvista/plotting/tools.py	/^        cube_actor = pyvista.Actor(mapper=cube_mapper)$/;"	v
cube_actor	examples/02-plot/point_picking.py	/^cube_actor = p.add_mesh(cube, pickable=False)  # initially unpickable$/;"	v
cube_actor	pyvista/plotting/tools.py	/^        cube_actor = pyvista.Actor(mapper=cube_mapper)$/;"	v
cube_axes_actor	tests/plotting/test_cube_axes_actor.py	/^def cube_axes_actor():$/;"	f
cube_dense	tests/core/test_polydata.py	/^def cube_dense():$/;"	f
cube_faces_source	tests/core/test_geometric_sources.py	/^def cube_faces_source():$/;"	f
cube_map	build/lib/pyvista/plotting/texture.py	/^    def cube_map(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
cube_map	build/lib/pyvista/plotting/texture.py	/^    def cube_map(self, flag: bool):$/;"	m	class:Texture
cube_map	pyvista/plotting/texture.py	/^    def cube_map(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
cube_map	pyvista/plotting/texture.py	/^    def cube_map(self, flag: bool):$/;"	m	class:Texture
cube_mapper	build/lib/pyvista/plotting/tools.py	/^        cube_mapper = _vtk.vtkPolyDataMapper()$/;"	v
cube_mapper	pyvista/plotting/tools.py	/^        cube_mapper = _vtk.vtkPolyDataMapper()$/;"	v
cubemap	build/lib/pyvista/plotting/utilities/__init__.py	/^from .cubemap import cubemap as cubemap$/;"	i
cubemap	build/lib/pyvista/plotting/utilities/cubemap.py	/^def cubemap(path='', prefix='', ext='.jpg'):$/;"	f
cubemap	examples/02-plot/depth_of_field.py	/^cubemap = examples.download_sky_box_cube_map()$/;"	v
cubemap	examples/02-plot/pbr.py	/^cubemap = examples.download_sky_box_cube_map()$/;"	v
cubemap	examples/99-advanced/planets.py	/^cubemap = examples.download_cubemap_space_16k()$/;"	v
cubemap	pyvista/plotting/utilities/__init__.py	/^from .cubemap import cubemap as cubemap$/;"	i
cubemap	pyvista/plotting/utilities/cubemap.py	/^def cubemap(path='', prefix='', ext='.jpg'):$/;"	f
cubemap	tests/plotting/conftest.py	/^def cubemap(texture):$/;"	f
cubemap_from_filenames	build/lib/pyvista/plotting/utilities/__init__.py	/^from .cubemap import cubemap_from_filenames as cubemap_from_filenames$/;"	i
cubemap_from_filenames	build/lib/pyvista/plotting/utilities/cubemap.py	/^def cubemap_from_filenames(image_paths):$/;"	f
cubemap_from_filenames	pyvista/plotting/utilities/__init__.py	/^from .cubemap import cubemap_from_filenames as cubemap_from_filenames$/;"	i
cubemap_from_filenames	pyvista/plotting/utilities/cubemap.py	/^def cubemap_from_filenames(image_paths):$/;"	f
culling	build/lib/pyvista/plotting/_property.py	/^    def culling(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Property
culling	build/lib/pyvista/plotting/_property.py	/^    def culling(self, value):$/;"	m	class:Property
culling	pyvista/plotting/_property.py	/^    def culling(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Property
culling	pyvista/plotting/_property.py	/^    def culling(self, value):$/;"	m	class:Property
current_index	examples/99-advanced/warp_by_vector_eigenmodes.py	/^    current_index = 4 * i + j$/;"	v
curvature	build/lib/pyvista/core/filters/poly_data.py	/^    def curvature(self, curv_type='mean', progress_bar: bool = False):$/;"	m	class:PolyDataFilters
curvature	pyvista/core/filters/poly_data.py	/^    def curvature(self, curv_type='mean', progress_bar: bool = False):$/;"	m	class:PolyDataFilters
curvsurf	examples/02-plot/texture.py	/^curvsurf = pv.StructuredGrid(x, y, z)$/;"	v
custom_tools	examples/99-advanced/customization_trame_toolbar.py	/^def custom_tools():$/;"	f
custom_tools	tests/plotting/jupyter/test_trame.py	/^    def custom_tools():$/;"	f	function:test_trame_custom_menu_items
cval	examples/01-filter/compute_volume.py	/^cval = ((rng[1] - rng[0]) * 0.20) + rng[0]$/;"	v
cycle	build/lib/pyvista/plotting/composite_mapper.py	/^from itertools import cycle$/;"	i
cycle	build/lib/pyvista/plotting/plotter.py	/^            from itertools import cycle$/;"	i
cycle	examples/03-widgets/sphere_widget.py	/^    from itertools import cycle$/;"	i
cycle	pyvista/plotting/composite_mapper.py	/^from itertools import cycle$/;"	i
cycle	pyvista/plotting/plotter.py	/^            from itertools import cycle$/;"	i
cycler	build/lib/pyvista/plotting/colors.py	/^from cycler import cycler$/;"	i
cycler	build/lib/pyvista/plotting/composite_mapper.py	/^    import cycler$/;"	i
cycler	examples/02-plot/color_cycler.py	/^from cycler import cycler$/;"	i
cycler	pyvista/plotting/colors.py	/^from cycler import cycler$/;"	i
cycler	pyvista/plotting/composite_mapper.py	/^    import cycler$/;"	i
cyl	examples/00-load/create_geometric_objects.py	/^cyl = pv.Cylinder()$/;"	v
cyl	examples/02-plot/interpolate_before_map.py	/^cyl = pv.Cylinder(direction=(0, 0, 1), height=2).elevation()$/;"	v
cylinder	examples/02-plot/silhouette.py	/^cylinder = pyvista.Cylinder($/;"	v
cylinder_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def cylinder_length(self: CapsuleSource) -> float:$/;"	m	class:.CapsuleSource
cylinder_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def cylinder_length(self: CapsuleSource, length: float) -> None:$/;"	m	class:.CapsuleSource
cylinder_length	pyvista/core/utilities/geometric_sources.py	/^        def cylinder_length(self: CapsuleSource) -> float:$/;"	m	class:.CapsuleSource
cylinder_length	pyvista/core/utilities/geometric_sources.py	/^        def cylinder_length(self: CapsuleSource, length: float) -> None:$/;"	m	class:.CapsuleSource
cylinder_radius	build/lib/pyvista/plotting/axes_actor.py	/^    def cylinder_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cylinder_radius	build/lib/pyvista/plotting/axes_actor.py	/^    def cylinder_radius(self, rad: float):$/;"	m	class:AxesActor
cylinder_radius	pyvista/plotting/axes_actor.py	/^    def cylinder_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cylinder_radius	pyvista/plotting/axes_actor.py	/^    def cylinder_radius(self, rad: float):$/;"	m	class:AxesActor
cylinder_resolution	build/lib/pyvista/plotting/axes_actor.py	/^    def cylinder_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cylinder_resolution	build/lib/pyvista/plotting/axes_actor.py	/^    def cylinder_resolution(self, res: int):$/;"	m	class:AxesActor
cylinder_resolution	pyvista/plotting/axes_actor.py	/^    def cylinder_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
cylinder_resolution	pyvista/plotting/axes_actor.py	/^    def cylinder_resolution(self, res: int):$/;"	m	class:AxesActor
cylinder_to_wormhole	examples/99-advanced/sphere_eversion.py	/^def cylinder_to_wormhole(h, phi, t, p, q):$/;"	f
d_exact	examples/01-filter/distance_between_surfaces.py	/^d_exact = np.linalg.norm(h0.points - closest_points, axis=1)$/;"	v
damavand	doc/source/make_external_gallery.py	/^    damavand=Example($/;"	v
dargs	examples/01-filter/contouring.py	/^dargs = dict(scalars='Elevation', n_colors=n_contours - 1, cmap='Set3')$/;"	v
dargs	examples/01-filter/decimate.py	/^dargs = dict(show_edges=True, color=True)$/;"	v
dargs	examples/01-filter/extract_cells_inside_surface.py	/^dargs = dict(show_edges=True)$/;"	v
dargs	examples/01-filter/gaussian_smoothing.py	/^dargs = dict(clim=smoothed_data.get_data_range(), opacity=[0, 0, 0, 0.1, 0.3, 0.6, 1])$/;"	v
dargs	examples/01-filter/interpolate.py	/^dargs = dict(cmap='coolwarm', clim=[0, 300], scalars='temperature (C)')$/;"	v
dargs	examples/01-filter/resample.py	/^dargs = dict(clim=[0, 200], cmap='rainbow')$/;"	v
dargs	examples/02-plot/depth_peeling.py	/^dargs = dict(opacity=0.5, color='red', smooth_shading=True)$/;"	v
dargs	examples/02-plot/interpolate_before_map.py	/^dargs = dict(scalars='Elevation', cmap='rainbow', show_edges=True)$/;"	v
dargs	examples/02-plot/interpolate_before_map.py	/^dargs = dict(scalars='Elevation', cmap='rainbow', show_edges=True, style='wireframe')$/;"	v
dargs	examples/02-plot/interpolate_before_map.py	/^dargs = dict(scalars='RTData', cmap='rainbow', show_edges=True)$/;"	v
dargs	examples/02-plot/interpolate_before_map.py	/^dargs = dict(scalars='RTData', cmap='rainbow', show_edges=True, n_colors=8)$/;"	v
dargs	examples/02-plot/ortho_slices.py	/^dargs = dict(cmap='gist_ncar_r')$/;"	v
dargs	examples/02-plot/vector_component.py	/^dargs = dict($/;"	v
dark	build/lib/pyvista/plotting/themes.py	/^    dark = DarkTheme$/;"	v	class:_NATIVE_THEMES
dark	pyvista/plotting/themes.py	/^    dark = DarkTheme$/;"	v	class:_NATIVE_THEMES
data	build/lib/pyvista/core/filters/__init__.py	/^    data = cast(pyvista.DataObject, wrap(algorithm.GetOutputDataObject(oport)))$/;"	v
data	build/lib/pyvista/plotting/charts.py	/^    def data(self):  # numpydoc ignore=RT01$/;"	m	class:BoxPlot
data	build/lib/pyvista/plotting/charts.py	/^    def data(self):  # numpydoc ignore=RT01$/;"	m	class:PiePlot
data	examples/00-load/create_point_cloud.py	/^data = points[:, -1]$/;"	v
data	examples/00-load/create_surface_draped.py	/^data = examples.download_gpr_data_array()$/;"	v
data	examples/01-filter/compute_volume.py	/^data = examples.load_channels()$/;"	v
data	examples/01-filter/gaussian_smoothing.py	/^data = examples.download_brain()$/;"	v
data	examples/01-filter/gaussian_smoothing.py	/^data = examples.download_gourds()$/;"	v
data	examples/01-filter/image_fft.py	/^data = fft_image['PNGImage'].reshape(height, width)  # note: axes flipped$/;"	v
data	examples/01-filter/surface_smoothing.py	/^data = examples.load_uniform()$/;"	v
data	examples/02-plot/chart_basics.py	/^data = [rng.beta(alpha, beta, N) for alpha, beta in zip(alphas, betas)]$/;"	v
data	examples/02-plot/chart_basics.py	/^data = [rng.poisson(lam, 20) for lam in range(2, 12, 2)]$/;"	v
data	examples/02-plot/chart_basics.py	/^data = np.array([8.4, 6.1, 2.7, 2.4, 0.9])$/;"	v
data	pyvista/core/filters/__init__.py	/^    data = cast(pyvista.DataObject, wrap(algorithm.GetOutputDataObject(oport)))$/;"	v
data	pyvista/plotting/charts.py	/^    def data(self):  # numpydoc ignore=RT01$/;"	m	class:BoxPlot
data	pyvista/plotting/charts.py	/^    def data(self):  # numpydoc ignore=RT01$/;"	m	class:PiePlot
data_array	examples/01-filter/image_representations.py	/^data_array = [8, 7, 6, 5, 4, 3, 2, 1]$/;"	v
data_array	examples/01-filter/image_representations.py	/^data_array = np.linspace(0, 255, 16, dtype=np.uint8)[::-1]$/;"	v
data_range	examples_trame/advanced/contour.py	/^data_range = tuple(volume.get_data_range())$/;"	v
data_set	tests/core/test_dataset_filters.py	/^    from pyvista.core.filters import data_set$/;"	i
data_to_probe	examples/01-filter/resample.py	/^data_to_probe = examples.download_embryo()$/;"	v
data_to_probe	examples/01-filter/resample.py	/^data_to_probe = examples.load_uniform()$/;"	v
dataclass	build/lib/pyvista/core/utilities/cell_quality.py	/^from dataclasses import dataclass$/;"	i
dataclass	build/lib/pyvista/core/utilities/reader.py	/^from dataclasses import dataclass$/;"	i
dataclass	doc/source/make_tables.py	/^from dataclasses import dataclass$/;"	i
dataclass	pyvista/core/utilities/cell_quality.py	/^from dataclasses import dataclass$/;"	i
dataclass	pyvista/core/utilities/reader.py	/^from dataclasses import dataclass$/;"	i
dataclass	tests/examples/test_dataset_loader.py	/^from dataclasses import dataclass$/;"	i
dataclass	tests/plotting/test_regression.py	/^from dataclasses import dataclass$/;"	i
dataset	build/lib/pyvista/examples/_dataset_loader.py	/^    def dataset(self) -> DatasetObject | None:$/;"	m	class:_DatasetLoader
dataset	build/lib/pyvista/plotting/composite_mapper.py	/^    def dataset(self) -> pyvista.MultiBlock:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
dataset	build/lib/pyvista/plotting/composite_mapper.py	/^    def dataset(self, obj: pyvista.MultiBlock):$/;"	m	class:CompositePolyDataMapper
dataset	build/lib/pyvista/plotting/mapper.py	/^    def dataset($/;"	m	class:_BaseVolumeMapper
dataset	build/lib/pyvista/plotting/mapper.py	/^    def dataset($/;"	m	class:_DataSetMapper
dataset	build/lib/pyvista/plotting/mapper.py	/^    def dataset(self) -> pyvista.core.dataset.DataSet | None:  # numpydoc ignore=RT01$/;"	m	class:_DataSetMapper
dataset	build/lib/pyvista/plotting/mapper.py	/^    def dataset(self):  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
dataset	examples/01-filter/clipping.py	/^dataset = examples.download_bunny_coarse()$/;"	v
dataset	examples/01-filter/clipping.py	/^dataset = examples.download_office()$/;"	v
dataset	examples/01-filter/clipping_with_surface.py	/^dataset = pv.RectilinearGrid(xx, yy, zz)$/;"	v
dataset	examples/01-filter/compute_volume.py	/^dataset = examples.load_uniform()$/;"	v
dataset	examples/01-filter/integrate_data.py	/^dataset = examples.download_blood_vessels()$/;"	v
dataset	examples/01-filter/using_filters.py	/^dataset = examples.load_uniform()$/;"	v
dataset	examples/02-plot/volume.py	/^dataset = examples.download_whole_body_ct_male()$/;"	v
dataset	examples/99-advanced/add_example.py	/^dataset = examples.download_bunny()$/;"	v
dataset	examples/99-advanced/add_example.py	/^dataset = pv.Sphere()$/;"	v
dataset	examples/99-advanced/anatomical_groups.py	/^dataset = examples.download_whole_body_ct_female()$/;"	v
dataset	examples/99-advanced/pump_bracket.py	/^dataset = examples.download_pump_bracket()$/;"	v
dataset	pyvista/examples/_dataset_loader.py	/^    def dataset(self) -> DatasetObject | None:$/;"	m	class:_DatasetLoader
dataset	pyvista/plotting/composite_mapper.py	/^    def dataset(self) -> pyvista.MultiBlock:  # numpydoc ignore=RT01$/;"	m	class:CompositePolyDataMapper
dataset	pyvista/plotting/composite_mapper.py	/^    def dataset(self, obj: pyvista.MultiBlock):$/;"	m	class:CompositePolyDataMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset($/;"	m	class:_BaseVolumeMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset($/;"	m	class:_DataSetMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset(self) -> pyvista.core.dataset.DataSet | None:  # numpydoc ignore=RT01$/;"	m	class:_DataSetMapper
dataset	pyvista/plotting/mapper.py	/^    def dataset(self):  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
dataset	tests/core/test_dataset.py	/^from pyvista.core import dataset$/;"	i
dataset_info_template	doc/source/make_tables.py	/^    dataset_info_template = _aligned_dedent($/;"	v	class:DatasetCard
dataset_iterable	build/lib/pyvista/examples/_dataset_loader.py	/^    def dataset_iterable(self) -> tuple[DatasetObject, ...]:$/;"	m	class:_DatasetLoader
dataset_iterable	pyvista/examples/_dataset_loader.py	/^    def dataset_iterable(self) -> tuple[DatasetObject, ...]:$/;"	m	class:_DatasetLoader
dataset_loader_cubemap	tests/examples/test_dataset_loader.py	/^def dataset_loader_cubemap():$/;"	f
dataset_loader_dicom	tests/examples/test_dataset_loader.py	/^def dataset_loader_dicom():$/;"	f
dataset_loader_nested_multiblock	tests/examples/test_dataset_loader.py	/^def dataset_loader_nested_multiblock():$/;"	f
dataset_loader_one_file	tests/examples/test_dataset_loader.py	/^def dataset_loader_one_file():$/;"	f
dataset_loader_one_file_local	tests/examples/test_dataset_loader.py	/^def dataset_loader_one_file_local():$/;"	f
dataset_loader_two_files_both_loadable	tests/examples/test_dataset_loader.py	/^def dataset_loader_two_files_both_loadable():$/;"	f
dataset_loader_two_files_one_loadable	tests/examples/test_dataset_loader.py	/^def dataset_loader_two_files_one_loadable():$/;"	f
dataset_mapper	tests/plotting/mappers/test_mapper.py	/^def dataset_mapper(sphere):$/;"	f
dataset_title_with_ref_template	doc/source/make_tables.py	/^    dataset_title_with_ref_template = _aligned_dedent($/;"	v	class:DatasetCard
datasets	build/lib/pyvista/core/utilities/reader.py	/^    def datasets(self):$/;"	m	class:PVDReader
datasets	build/lib/pyvista/plotting/helpers.py	/^    datasets = [[data_a, data_b], [data_c, data_d]]$/;"	v
datasets	pyvista/core/utilities/reader.py	/^    def datasets(self):$/;"	m	class:PVDReader
datasets	pyvista/plotting/helpers.py	/^    datasets = [[data_a, data_b], [data_c, data_d]]$/;"	v
datasets	tests/conftest.py	/^def datasets():$/;"	f
datasets_vtk9	tests/conftest.py	/^def datasets_vtk9():$/;"	f
datetime	doc/source/conf.py	/^import datetime$/;"	i
datetime	tests/plotting/tinypages/conf.py	/^import datetime$/;"	i
decimate	build/lib/pyvista/core/filters/poly_data.py	/^    def decimate($/;"	m	class:PolyDataFilters
decimate	build/lib/pyvista/plotting/themes.py	/^    def decimate(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
decimate	build/lib/pyvista/plotting/themes.py	/^    def decimate(self, decimate: float | None):$/;"	m	class:_SilhouetteConfig
decimate	pyvista/core/filters/poly_data.py	/^    def decimate($/;"	m	class:PolyDataFilters
decimate	pyvista/plotting/themes.py	/^    def decimate(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
decimate	pyvista/plotting/themes.py	/^    def decimate(self, decimate: float | None):$/;"	m	class:_SilhouetteConfig
decimate_boundary	build/lib/pyvista/core/filters/data_set.py	/^    def decimate_boundary(  # type: ignore[misc]$/;"	m	class:DataSetFilters
decimate_boundary	build/lib/pyvista/core/pointset.py	/^    def decimate_boundary(self, *args, **kwargs):$/;"	m	class:PointSet
decimate_boundary	pyvista/core/filters/data_set.py	/^    def decimate_boundary(  # type: ignore[misc]$/;"	m	class:DataSetFilters
decimate_boundary	pyvista/core/pointset.py	/^    def decimate_boundary(self, *args, **kwargs):$/;"	m	class:PointSet
decimate_polyline	build/lib/pyvista/core/filters/poly_data.py	/^    def decimate_polyline($/;"	m	class:PolyDataFilters
decimate_polyline	pyvista/core/filters/poly_data.py	/^    def decimate_polyline($/;"	m	class:PolyDataFilters
decimate_pro	build/lib/pyvista/core/filters/poly_data.py	/^    def decimate_pro($/;"	m	class:PolyDataFilters
decimate_pro	pyvista/core/filters/poly_data.py	/^    def decimate_pro($/;"	m	class:PolyDataFilters
decimated	examples/01-filter/decimate.py	/^decimated = mesh.decimate(target_reduction)$/;"	v
decimated	examples/01-filter/decimate.py	/^decimated = spiral.decimate_polyline(0.5)$/;"	v
decimated	examples/01-filter/decimate.py	/^decimated = spiral.decimate_polyline(0.8)$/;"	v
decimated	examples/01-filter/decimate.py	/^decimated = spiral.decimate_polyline(0.8, maximum_error=0.5)$/;"	v
decimated	examples/02-plot/linked.py	/^decimated = mesh.decimate_boundary(target_reduction=0.75)$/;"	v
decimated_foo_sphere	examples/99-advanced/extending_pyvista.py	/^decimated_foo_sphere = FooData(foo_sphere.decimate(0.5))$/;"	v
decimated_foo_sphere	examples/99-advanced/extending_pyvista.py	/^decimated_foo_sphere = foo_sphere.decimate(0.5)$/;"	v
decimation_algorithm	build/lib/pyvista/plotting/plotter.py	/^from .utilities.algorithms import decimation_algorithm$/;"	i
decimation_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import decimation_algorithm as decimation_algorithm$/;"	i
decimation_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def decimation_algorithm(inp, target_reduction):$/;"	f
decimation_algorithm	pyvista/plotting/plotter.py	/^from .utilities.algorithms import decimation_algorithm$/;"	i
decimation_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import decimation_algorithm as decimation_algorithm$/;"	i
decimation_algorithm	pyvista/plotting/utilities/algorithms.py	/^def decimation_algorithm(inp, target_reduction):$/;"	f
decompose	build/lib/pyvista/core/utilities/transform.py	/^    def decompose($/;"	m	class:Transform
decompose	pyvista/core/utilities/transform.py	/^    def decompose($/;"	m	class:Transform
decompose_polyhedra	build/lib/pyvista/core/utilities/reader.py	/^    def decompose_polyhedra(self):$/;"	m	class:OpenFOAMReader
decompose_polyhedra	build/lib/pyvista/core/utilities/reader.py	/^    def decompose_polyhedra(self, value) -> None:$/;"	m	class:OpenFOAMReader
decompose_polyhedra	pyvista/core/utilities/reader.py	/^    def decompose_polyhedra(self):$/;"	m	class:OpenFOAMReader
decompose_polyhedra	pyvista/core/utilities/reader.py	/^    def decompose_polyhedra(self, value) -> None:$/;"	m	class:OpenFOAMReader
decomposition	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import decomposition$/;"	i
decomposition	build/lib/pyvista/core/utilities/transformations.py	/^def decomposition($/;"	f
decomposition	pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import decomposition$/;"	i
decomposition	pyvista/core/utilities/transformations.py	/^def decomposition($/;"	f
decorated_double	tests/typing/mypy_plugin/test_plugin.py	/^def decorated_double():$/;"	f
decorated_single	tests/typing/mypy_plugin/test_plugin.py	/^def decorated_single():$/;"	f
dedent	build/lib/pyvista/core/pointset.py	/^from textwrap import dedent$/;"	i
dedent	pyvista/core/pointset.py	/^from textwrap import dedent$/;"	i
deep_clean	build/lib/pyvista/plotting/charts.py	/^    def deep_clean(self) -> None:$/;"	m	class:Charts
deep_clean	build/lib/pyvista/plotting/plotter.py	/^    def deep_clean(self):$/;"	m	class:BasePlotter
deep_clean	build/lib/pyvista/plotting/render_passes.py	/^    def deep_clean(self):$/;"	m	class:RenderPasses
deep_clean	build/lib/pyvista/plotting/renderer.py	/^    def deep_clean(self, render=False) -> None:$/;"	m	class:Renderer
deep_clean	build/lib/pyvista/plotting/renderers.py	/^    def deep_clean(self):$/;"	m	class:Renderers
deep_clean	pyvista/plotting/charts.py	/^    def deep_clean(self) -> None:$/;"	m	class:Charts
deep_clean	pyvista/plotting/plotter.py	/^    def deep_clean(self):$/;"	m	class:BasePlotter
deep_clean	pyvista/plotting/render_passes.py	/^    def deep_clean(self):$/;"	m	class:RenderPasses
deep_clean	pyvista/plotting/renderer.py	/^    def deep_clean(self, render=False) -> None:$/;"	m	class:Renderer
deep_clean	pyvista/plotting/renderers.py	/^    def deep_clean(self):$/;"	m	class:Renderers
deep_copy	build/lib/pyvista/core/composite.py	/^    def deep_copy(self: MultiBlock, to_copy: _vtk.vtkMultiBlockDataSet) -> None:  # type: ignore[override]$/;"	m	class:MultiBlock
deep_copy	build/lib/pyvista/core/dataobject.py	/^    def deep_copy(self: Self, to_copy: Self | _vtk.vtkDataObject) -> None:$/;"	m	class:DataObject
deep_copy	pyvista/core/composite.py	/^    def deep_copy(self: MultiBlock, to_copy: _vtk.vtkMultiBlockDataSet) -> None:  # type: ignore[override]$/;"	m	class:MultiBlock
deep_copy	pyvista/core/dataobject.py	/^    def deep_copy(self: Self, to_copy: Self | _vtk.vtkDataObject) -> None:$/;"	m	class:DataObject
deepcopy	build/lib/pyvista/core/dataset.py	/^from copy import deepcopy$/;"	i
deepcopy	build/lib/pyvista/plotting/plotter.py	/^from copy import deepcopy$/;"	i
deepcopy	pyvista/core/dataset.py	/^from copy import deepcopy$/;"	i
deepcopy	pyvista/plotting/plotter.py	/^from copy import deepcopy$/;"	i
default	build/lib/pyvista/plotting/themes.py	/^    default = document$/;"	v	class:_NATIVE_THEMES
default	pyvista/plotting/themes.py	/^    default = document$/;"	v	class:_NATIVE_THEMES
default	tests/plotting/test_plotting.py	/^    default={},$/;"	v
default_mode	build/lib/pyvista/plotting/themes.py	/^    def default_mode(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
default_mode	build/lib/pyvista/plotting/themes.py	/^    def default_mode(self, mode: str):$/;"	m	class:_TrameConfig
default_mode	pyvista/plotting/themes.py	/^    def default_mode(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
default_mode	pyvista/plotting/themes.py	/^    def default_mode(self, mode: str):$/;"	m	class:_TrameConfig
default_n_faces	tests/core/test_polydata.py	/^def default_n_faces():$/;"	f
default_rng	tests/conftest.py	/^from numpy.random import default_rng$/;"	i
default_server_rendering	build/lib/pyvista/trame/jupyter.py	/^            default_server_rendering=default_server_rendering,$/;"	v
default_server_rendering	build/lib/pyvista/trame/jupyter.py	/^        default_server_rendering=default_server_rendering,$/;"	v
default_server_rendering	build/lib/pyvista/trame/ui/__init__.py	/^        default_server_rendering=default_server_rendering,$/;"	v
default_server_rendering	pyvista/trame/jupyter.py	/^            default_server_rendering=default_server_rendering,$/;"	v
default_server_rendering	pyvista/trame/jupyter.py	/^        default_server_rendering=default_server_rendering,$/;"	v
default_server_rendering	pyvista/trame/ui/__init__.py	/^        default_server_rendering=default_server_rendering,$/;"	v
default_theme	tests/plotting/test_theme.py	/^def default_theme():$/;"	f
default_user_data_path	build/lib/pyvista/examples/downloads.py	/^default_user_data_path = str(pooch.os_cache(f'pyvista_{CACHE_VERSION}'))$/;"	v
default_user_data_path	pyvista/examples/downloads.py	/^default_user_data_path = str(pooch.os_cache(f'pyvista_{CACHE_VERSION}'))$/;"	v
defaultdict	build/lib/pyvista/core/dataobject.py	/^from collections import defaultdict$/;"	i
defaultdict	build/lib/pyvista/plotting/render_window_interactor.py	/^from collections import defaultdict$/;"	i
defaultdict	pyvista/core/dataobject.py	/^from collections import defaultdict$/;"	i
defaultdict	pyvista/plotting/render_window_interactor.py	/^from collections import defaultdict$/;"	i
defined	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
defined	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
defined	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
defined	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
defined	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
defined	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
delaunay_2d	build/lib/pyvista/core/filters/poly_data.py	/^    def delaunay_2d($/;"	m	class:PolyDataFilters
delaunay_2d	build/lib/pyvista/core/filters/unstructured_grid.py	/^    def delaunay_2d(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:UnstructuredGridFilters
delaunay_2d	pyvista/core/filters/poly_data.py	/^    def delaunay_2d($/;"	m	class:PolyDataFilters
delaunay_2d	pyvista/core/filters/unstructured_grid.py	/^    def delaunay_2d(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:UnstructuredGridFilters
delaunay_3d	build/lib/pyvista/core/filters/data_set.py	/^    def delaunay_3d(  # type: ignore[misc]$/;"	m	class:DataSetFilters
delaunay_3d	build/lib/pyvista/core/pointset.py	/^    def delaunay_3d(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
delaunay_3d	pyvista/core/filters/data_set.py	/^    def delaunay_3d(  # type: ignore[misc]$/;"	m	class:DataSetFilters
delaunay_3d	pyvista/core/pointset.py	/^    def delaunay_3d(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
delete_downloads	build/lib/pyvista/examples/downloads.py	/^def delete_downloads():$/;"	f
delete_downloads	pyvista/examples/downloads.py	/^def delete_downloads():$/;"	f
delta_x	examples/01-filter/collisions.py	/^delta_x = 0.05$/;"	v
dem	examples/00-load/terrain_mesh.py	/^dem = examples.download_crater_topo()$/;"	v
demos	build/lib/pyvista/__init__.py	/^    from pyvista import demos as demos$/;"	i
demos	pyvista/__init__.py	/^    from pyvista import demos as demos$/;"	i
demos	tests/plotting/test_demos.py	/^from pyvista import demos$/;"	i
demos	tests/plotting/test_plotting.py	/^from pyvista import demos$/;"	i
density	examples_trame/basic/file_viewer.py	/^            density='compact',$/;"	v
dependency	build/lib/pyvista/ext/plot_directive.py	/^import jinja2  # Sphinx dependency.$/;"	i
dependency	pyvista/ext/plot_directive.py	/^import jinja2  # Sphinx dependency.$/;"	i
depth	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def depth(self: Text3DSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
depth	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def depth(self: Text3DSource, depth: float | None) -> None:$/;"	m	class:Text3DSource
depth	pyvista/core/utilities/geometric_sources.py	/^    def depth(self: Text3DSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
depth	pyvista/core/utilities/geometric_sources.py	/^    def depth(self: Text3DSource, depth: float | None) -> None:$/;"	m	class:Text3DSource
depth_peeling	build/lib/pyvista/plotting/themes.py	/^    def depth_peeling(self) -> _DepthPeelingConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
depth_peeling	build/lib/pyvista/plotting/themes.py	/^    def depth_peeling(self, config: _DepthPeelingConfig):$/;"	m	class:Theme
depth_peeling	pyvista/plotting/themes.py	/^    def depth_peeling(self) -> _DepthPeelingConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
depth_peeling	pyvista/plotting/themes.py	/^    def depth_peeling(self, config: _DepthPeelingConfig):$/;"	m	class:Theme
deque	build/lib/pyvista/core/utilities/cells.py	/^from collections import deque$/;"	i
deque	build/lib/pyvista/core/utilities/helpers.py	/^from collections import deque$/;"	i
deque	pyvista/core/utilities/cells.py	/^from collections import deque$/;"	i
deque	pyvista/core/utilities/helpers.py	/^from collections import deque$/;"	i
dest	tests/check_doctest_names.py	/^        dest='respect_skips',$/;"	v
destroy_timer	build/lib/pyvista/plotting/render_window_interactor.py	/^    def destroy_timer(self, timer_id):$/;"	m	class:RenderWindowInteractor
destroy_timer	pyvista/plotting/render_window_interactor.py	/^    def destroy_timer(self, timer_id):$/;"	m	class:RenderWindowInteractor
dh	build/lib/pyvista/trame/jupyter.py	/^        dh = f'{dh}px'$/;"	v
dh	pyvista/trame/jupyter.py	/^        dh = f'{dh}px'$/;"	v
diff	examples/01-filter/sampling_functions_2d.py	/^diff = z.max() - z.min()$/;"	v
diffuse	build/lib/pyvista/plotting/_property.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
diffuse	build/lib/pyvista/plotting/_property.py	/^    def diffuse(self, value: float):$/;"	m	class:Property
diffuse	build/lib/pyvista/plotting/themes.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
diffuse	build/lib/pyvista/plotting/themes.py	/^    def diffuse(self, diffuse: float):$/;"	m	class:_LightingConfig
diffuse	build/lib/pyvista/plotting/volume_property.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
diffuse	build/lib/pyvista/plotting/volume_property.py	/^    def diffuse(self, value: float):$/;"	m	class:VolumeProperty
diffuse	examples/04-lights/shadows.py	/^    diffuse=0.5,$/;"	v
diffuse	pyvista/plotting/_property.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
diffuse	pyvista/plotting/_property.py	/^    def diffuse(self, value: float):$/;"	m	class:Property
diffuse	pyvista/plotting/themes.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
diffuse	pyvista/plotting/themes.py	/^    def diffuse(self, diffuse: float):$/;"	m	class:_LightingConfig
diffuse	pyvista/plotting/volume_property.py	/^    def diffuse(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
diffuse	pyvista/plotting/volume_property.py	/^    def diffuse(self, value: float):$/;"	m	class:VolumeProperty
diffuse_color	build/lib/pyvista/plotting/_property.py	/^    def diffuse_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
diffuse_color	build/lib/pyvista/plotting/_property.py	/^    def diffuse_color(self, value):$/;"	m	class:Property
diffuse_color	build/lib/pyvista/plotting/lights.py	/^    def diffuse_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
diffuse_color	build/lib/pyvista/plotting/lights.py	/^    def diffuse_color(self, color: ColorLike):$/;"	m	class:Light
diffuse_color	pyvista/plotting/_property.py	/^    def diffuse_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
diffuse_color	pyvista/plotting/_property.py	/^    def diffuse_color(self, value):$/;"	m	class:Property
diffuse_color	pyvista/plotting/lights.py	/^    def diffuse_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
diffuse_color	pyvista/plotting/lights.py	/^    def diffuse_color(self, color: ColorLike):$/;"	m	class:Light
digits	tests/core/test_datasetattributes.py	/^from string import digits$/;"	i
dimension	build/lib/pyvista/core/cell.py	/^    def dimension(self: Self) -> int:$/;"	m	class:Cell
dimension	pyvista/core/cell.py	/^    def dimension(self: Self) -> int:$/;"	m	class:Cell
dimensionality	build/lib/pyvista/core/grid.py	/^    def dimensionality(self: Self) -> int:$/;"	m	class:Grid
dimensionality	build/lib/pyvista/core/pointset.py	/^    def dimensionality(self) -> int:$/;"	m	class:ExplicitStructuredGrid
dimensionality	build/lib/pyvista/core/pointset.py	/^    def dimensionality(self) -> int:$/;"	m	class:StructuredGrid
dimensionality	pyvista/core/grid.py	/^    def dimensionality(self: Self) -> int:$/;"	m	class:Grid
dimensionality	pyvista/core/pointset.py	/^    def dimensionality(self) -> int:$/;"	m	class:ExplicitStructuredGrid
dimensionality	pyvista/core/pointset.py	/^    def dimensionality(self) -> int:$/;"	m	class:StructuredGrid
dimensions	build/lib/pyvista/core/grid.py	/^    def dimensions(self: Self) -> tuple[int, int, int]:$/;"	m	class:Grid
dimensions	build/lib/pyvista/core/grid.py	/^    def dimensions(self: Self, _dims: VectorLike[int]) -> None:$/;"	m	class:RectilinearGrid
dimensions	build/lib/pyvista/core/grid.py	/^    def dimensions(self: Self, dims: VectorLike[int]) -> None:$/;"	m	class:Grid
dimensions	build/lib/pyvista/core/pointset.py	/^    def dimensions(self) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:ExplicitStructuredGrid
dimensions	build/lib/pyvista/core/pointset.py	/^    def dimensions(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
dimensions	build/lib/pyvista/core/pointset.py	/^    def dimensions(self, dims) -> None:$/;"	m	class:StructuredGrid
dimensions	build/lib/pyvista/plotting/texture.py	/^    def dimensions(self) -> tuple[int, int]:  # numpydoc ignore=RT01$/;"	m	class:Texture
dimensions	examples/01-filter/flying_edges.py	/^    dimensions=(n, n, n),$/;"	v
dimensions	examples/99-advanced/openfoam_cooling.py	/^dimensions = ($/;"	v
dimensions	examples/99-advanced/openfoam_tubes.py	/^dimensions = ($/;"	v
dimensions	pyvista/core/grid.py	/^    def dimensions(self: Self) -> tuple[int, int, int]:$/;"	m	class:Grid
dimensions	pyvista/core/grid.py	/^    def dimensions(self: Self, _dims: VectorLike[int]) -> None:$/;"	m	class:RectilinearGrid
dimensions	pyvista/core/grid.py	/^    def dimensions(self: Self, dims: VectorLike[int]) -> None:$/;"	m	class:Grid
dimensions	pyvista/core/pointset.py	/^    def dimensions(self) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:ExplicitStructuredGrid
dimensions	pyvista/core/pointset.py	/^    def dimensions(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
dimensions	pyvista/core/pointset.py	/^    def dimensions(self, dims) -> None:$/;"	m	class:StructuredGrid
dimensions	pyvista/plotting/texture.py	/^    def dimensions(self) -> tuple[int, int]:  # numpydoc ignore=RT01$/;"	m	class:Texture
dims	examples/00-load/create_explicit_structured_grid.py	/^dims = np.asarray((ni, nj, nk)) + 1$/;"	v
dims	tests/core/test_cells.py	/^dims = [$/;"	v
dini	examples/00-load/create_parametric_geometric_objects.py	/^dini = pv.ParametricDini()$/;"	v
dir_path	build/lib/pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.examples import dir_path$/;"	i
dir_path	build/lib/pyvista/examples/examples.py	/^dir_path = str(Path(os.path.realpath(__file__)).parent)$/;"	v
dir_path	pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.examples import dir_path$/;"	i
dir_path	pyvista/examples/examples.py	/^dir_path = str(Path(os.path.realpath(__file__)).parent)$/;"	v
direction	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def direction(self: CapsuleSource) -> tuple[float, float, float]:$/;"	m	class:.CapsuleSource
direction	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def direction(self: CapsuleSource, direction: VectorLike[float]) -> None:$/;"	m	class:.CapsuleSource
direction	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def direction(self: ConeSource) -> tuple[float, float, float]:$/;"	m	class:ConeSource
direction	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def direction(self: ConeSource, direction: VectorLike[float]) -> None:$/;"	m	class:ConeSource
direction	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def direction(self: CylinderSource) -> tuple[float, float, float]:$/;"	m	class:CylinderSource
direction	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def direction(self: CylinderSource, direction: VectorLike[float]) -> None:$/;"	m	class:CylinderSource
direction	build/lib/pyvista/core/utilities/image_sources.py	/^    def direction(self) -> Sequence[float]:$/;"	m	class:ImageSinusoidSource
direction	build/lib/pyvista/core/utilities/image_sources.py	/^    def direction(self, direction: Sequence[float]) -> None:$/;"	m	class:ImageSinusoidSource
direction	build/lib/pyvista/plotting/camera.py	/^    def direction(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
direction	examples/01-filter/extrude_trim.py	/^    direction=(0, 0, -1),$/;"	v
direction	examples/02-plot/silhouette.py	/^    direction=(0, 1, 0),$/;"	v
direction	examples/98-common/project_points_tessellate.py	/^    direction=normal,$/;"	v
direction	examples/99-advanced/ray_trace_moeller.py	/^direction = np.array([0, 0, -1])$/;"	v
direction	pyvista/core/utilities/geometric_sources.py	/^        def direction(self: CapsuleSource) -> tuple[float, float, float]:$/;"	m	class:.CapsuleSource
direction	pyvista/core/utilities/geometric_sources.py	/^        def direction(self: CapsuleSource, direction: VectorLike[float]) -> None:$/;"	m	class:.CapsuleSource
direction	pyvista/core/utilities/geometric_sources.py	/^    def direction(self: ConeSource) -> tuple[float, float, float]:$/;"	m	class:ConeSource
direction	pyvista/core/utilities/geometric_sources.py	/^    def direction(self: ConeSource, direction: VectorLike[float]) -> None:$/;"	m	class:ConeSource
direction	pyvista/core/utilities/geometric_sources.py	/^    def direction(self: CylinderSource) -> tuple[float, float, float]:$/;"	m	class:CylinderSource
direction	pyvista/core/utilities/geometric_sources.py	/^    def direction(self: CylinderSource, direction: VectorLike[float]) -> None:$/;"	m	class:CylinderSource
direction	pyvista/core/utilities/image_sources.py	/^    def direction(self) -> Sequence[float]:$/;"	m	class:ImageSinusoidSource
direction	pyvista/core/utilities/image_sources.py	/^    def direction(self, direction: Sequence[float]) -> None:$/;"	m	class:ImageSinusoidSource
direction	pyvista/plotting/camera.py	/^    def direction(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
direction_matrix	build/lib/pyvista/core/grid.py	/^    def direction_matrix(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
direction_matrix	build/lib/pyvista/core/grid.py	/^    def direction_matrix(self: Self, matrix: RotationLike) -> None:$/;"	m	class:ImageData
direction_matrix	pyvista/core/grid.py	/^    def direction_matrix(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
direction_matrix	pyvista/core/grid.py	/^    def direction_matrix(self: Self, matrix: RotationLike) -> None:$/;"	m	class:ImageData
directives	build/lib/pyvista/ext/plot_directive.py	/^from docutils.parsers.rst import directives$/;"	i
directives	pyvista/ext/plot_directive.py	/^from docutils.parsers.rst import directives$/;"	i
disable	build/lib/pyvista/core/utilities/reader.py	/^    def disable(self, name):$/;"	m	class:ExodusIIBlockSet
disable	build/lib/pyvista/plotting/affine_widget.py	/^    def disable(self):$/;"	m	class:AffineWidget3D
disable	build/lib/pyvista/plotting/plotter.py	/^    def disable(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable	build/lib/pyvista/plotting/renderer.py	/^    def disable(self) -> None:$/;"	m	class:Renderer
disable	pyvista/core/utilities/reader.py	/^    def disable(self, name):$/;"	m	class:ExodusIIBlockSet
disable	pyvista/plotting/affine_widget.py	/^    def disable(self):$/;"	m	class:AffineWidget3D
disable	pyvista/plotting/plotter.py	/^    def disable(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable	pyvista/plotting/renderer.py	/^    def disable(self) -> None:$/;"	m	class:Renderer
disable_3_lights	build/lib/pyvista/plotting/plotter.py	/^    def disable_3_lights(self) -> None:$/;"	m	class:BasePlotter
disable_3_lights	pyvista/plotting/plotter.py	/^    def disable_3_lights(self) -> None:$/;"	m	class:BasePlotter
disable_all	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all(self):$/;"	m	class:ExodusIIBlockSet
disable_all	pyvista/core/utilities/reader.py	/^    def disable_all(self):$/;"	m	class:ExodusIIBlockSet
disable_all_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_arrays(self):$/;"	m	class:ExodusIIBlockSet
disable_all_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_arrays(self):$/;"	m	class:ExodusIIBlockSet
disable_all_bases	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_bases(self) -> None:$/;"	m	class:CGNSReader
disable_all_bases	pyvista/core/utilities/reader.py	/^    def disable_all_bases(self) -> None:$/;"	m	class:CGNSReader
disable_all_cell_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_cell_arrays(self) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
disable_all_cell_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_cell_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
disable_all_cell_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_cell_arrays(self) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
disable_all_cell_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_cell_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
disable_all_families	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_families(self) -> None:$/;"	m	class:CGNSReader
disable_all_families	pyvista/core/utilities/reader.py	/^    def disable_all_families(self) -> None:$/;"	m	class:CGNSReader
disable_all_global_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_global_arrays(self) -> None:$/;"	m	class:ExodusIIReader
disable_all_global_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_global_arrays(self) -> None:$/;"	m	class:ExodusIIReader
disable_all_patch_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_patch_arrays(self) -> None:$/;"	m	class:OpenFOAMReader
disable_all_patch_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_patch_arrays(self) -> None:$/;"	m	class:OpenFOAMReader
disable_all_point_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def disable_all_point_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
disable_all_point_arrays	pyvista/core/utilities/reader.py	/^    def disable_all_point_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
disable_anti_aliasing	build/lib/pyvista/plotting/plotter.py	/^    def disable_anti_aliasing(self, all_renderers=True):$/;"	m	class:BasePlotter
disable_anti_aliasing	build/lib/pyvista/plotting/renderer.py	/^    def disable_anti_aliasing(self) -> None:$/;"	m	class:Renderer
disable_anti_aliasing	pyvista/plotting/plotter.py	/^    def disable_anti_aliasing(self, all_renderers=True):$/;"	m	class:BasePlotter
disable_anti_aliasing	pyvista/plotting/renderer.py	/^    def disable_anti_aliasing(self) -> None:$/;"	m	class:Renderer
disable_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_array(self, name):$/;"	m	class:ExodusIIBlockSet
disable_array	pyvista/core/utilities/reader.py	/^    def disable_array(self, name):$/;"	m	class:ExodusIIBlockSet
disable_cell_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_cell_array(self, name) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
disable_cell_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_cell_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
disable_cell_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_cell_array(self, name):$/;"	m	class:ExodusIIReader
disable_cell_array	pyvista/core/utilities/reader.py	/^    def disable_cell_array(self, name) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
disable_cell_array	pyvista/core/utilities/reader.py	/^    def disable_cell_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
disable_cell_array	pyvista/core/utilities/reader.py	/^    def disable_cell_array(self, name):$/;"	m	class:ExodusIIReader
disable_depth_of_field	build/lib/pyvista/plotting/plotter.py	/^    def disable_depth_of_field(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_depth_of_field	build/lib/pyvista/plotting/renderer.py	/^    def disable_depth_of_field(self) -> None:$/;"	m	class:Renderer
disable_depth_of_field	pyvista/plotting/plotter.py	/^    def disable_depth_of_field(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_depth_of_field	pyvista/plotting/renderer.py	/^    def disable_depth_of_field(self) -> None:$/;"	m	class:Renderer
disable_depth_of_field_pass	build/lib/pyvista/plotting/render_passes.py	/^    def disable_depth_of_field_pass(self):$/;"	m	class:RenderPasses
disable_depth_of_field_pass	pyvista/plotting/render_passes.py	/^    def disable_depth_of_field_pass(self):$/;"	m	class:RenderPasses
disable_depth_peeling	build/lib/pyvista/plotting/plotter.py	/^    def disable_depth_peeling(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_depth_peeling	build/lib/pyvista/plotting/renderer.py	/^    def disable_depth_peeling(self) -> None:$/;"	m	class:Renderer
disable_depth_peeling	pyvista/plotting/plotter.py	/^    def disable_depth_peeling(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_depth_peeling	pyvista/plotting/renderer.py	/^    def disable_depth_peeling(self) -> None:$/;"	m	class:Renderer
disable_displacements	build/lib/pyvista/core/utilities/reader.py	/^    def disable_displacements(self):$/;"	m	class:ExodusIIReader
disable_displacements	pyvista/core/utilities/reader.py	/^    def disable_displacements(self):$/;"	m	class:ExodusIIReader
disable_edl_pass	build/lib/pyvista/plotting/render_passes.py	/^    def disable_edl_pass(self):$/;"	m	class:RenderPasses
disable_edl_pass	pyvista/plotting/render_passes.py	/^    def disable_edl_pass(self):$/;"	m	class:RenderPasses
disable_eye_dome_lighting	build/lib/pyvista/plotting/plotter.py	/^    def disable_eye_dome_lighting(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_eye_dome_lighting	build/lib/pyvista/plotting/renderer.py	/^    def disable_eye_dome_lighting(self) -> None:$/;"	m	class:Renderer
disable_eye_dome_lighting	pyvista/plotting/plotter.py	/^    def disable_eye_dome_lighting(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_eye_dome_lighting	pyvista/plotting/renderer.py	/^    def disable_eye_dome_lighting(self) -> None:$/;"	m	class:Renderer
disable_global_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_global_array(self, name):$/;"	m	class:ExodusIIReader
disable_global_array	pyvista/core/utilities/reader.py	/^    def disable_global_array(self, name):$/;"	m	class:ExodusIIReader
disable_hidden_line_removal	build/lib/pyvista/plotting/plotter.py	/^    def disable_hidden_line_removal(self, all_renderers=True) -> None:$/;"	m	class:BasePlotter
disable_hidden_line_removal	build/lib/pyvista/plotting/renderer.py	/^    def disable_hidden_line_removal(self) -> None:$/;"	m	class:Renderer
disable_hidden_line_removal	pyvista/plotting/plotter.py	/^    def disable_hidden_line_removal(self, all_renderers=True) -> None:$/;"	m	class:BasePlotter
disable_hidden_line_removal	pyvista/plotting/renderer.py	/^    def disable_hidden_line_removal(self) -> None:$/;"	m	class:Renderer
disable_merge_points	build/lib/pyvista/core/utilities/reader.py	/^    def disable_merge_points(self):$/;"	m	class:Nek5000Reader
disable_merge_points	pyvista/core/utilities/reader.py	/^    def disable_merge_points(self):$/;"	m	class:Nek5000Reader
disable_parallel_projection	build/lib/pyvista/plotting/camera.py	/^    def disable_parallel_projection(self):$/;"	m	class:Camera
disable_parallel_projection	build/lib/pyvista/plotting/plotter.py	/^    def disable_parallel_projection(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_parallel_projection	build/lib/pyvista/plotting/renderer.py	/^    def disable_parallel_projection(self) -> None:$/;"	m	class:Renderer
disable_parallel_projection	pyvista/plotting/camera.py	/^    def disable_parallel_projection(self):$/;"	m	class:Camera
disable_parallel_projection	pyvista/plotting/plotter.py	/^    def disable_parallel_projection(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_parallel_projection	pyvista/plotting/renderer.py	/^    def disable_parallel_projection(self) -> None:$/;"	m	class:Renderer
disable_patch_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_patch_array(self, name) -> None:$/;"	m	class:OpenFOAMReader
disable_patch_array	pyvista/core/utilities/reader.py	/^    def disable_patch_array(self, name) -> None:$/;"	m	class:OpenFOAMReader
disable_picking	build/lib/pyvista/plotting/picking.py	/^    def disable_picking(self):$/;"	m	class:PickingInterface
disable_picking	build/lib/pyvista/plotting/picking.py	/^    def disable_picking(self):$/;"	m	class:PickingMethods
disable_picking	pyvista/plotting/picking.py	/^    def disable_picking(self):$/;"	m	class:PickingInterface
disable_picking	pyvista/plotting/picking.py	/^    def disable_picking(self):$/;"	m	class:PickingMethods
disable_point_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_point_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
disable_point_array	build/lib/pyvista/core/utilities/reader.py	/^    def disable_point_array(self, name):$/;"	m	class:ExodusIIReader
disable_point_array	pyvista/core/utilities/reader.py	/^    def disable_point_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
disable_point_array	pyvista/core/utilities/reader.py	/^    def disable_point_array(self, name):$/;"	m	class:ExodusIIReader
disable_shadow_pass	build/lib/pyvista/plotting/render_passes.py	/^    def disable_shadow_pass(self):$/;"	m	class:RenderPasses
disable_shadow_pass	pyvista/plotting/render_passes.py	/^    def disable_shadow_pass(self):$/;"	m	class:RenderPasses
disable_shadows	build/lib/pyvista/plotting/plotter.py	/^    def disable_shadows(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_shadows	build/lib/pyvista/plotting/renderer.py	/^    def disable_shadows(self) -> None:$/;"	m	class:Renderer
disable_shadows	pyvista/plotting/plotter.py	/^    def disable_shadows(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_shadows	pyvista/plotting/renderer.py	/^    def disable_shadows(self) -> None:$/;"	m	class:Renderer
disable_spectral_element_ids	build/lib/pyvista/core/utilities/reader.py	/^    def disable_spectral_element_ids(self):$/;"	m	class:Nek5000Reader
disable_spectral_element_ids	pyvista/core/utilities/reader.py	/^    def disable_spectral_element_ids(self):$/;"	m	class:Nek5000Reader
disable_ssaa_pass	build/lib/pyvista/plotting/render_passes.py	/^    def disable_ssaa_pass(self):$/;"	m	class:RenderPasses
disable_ssaa_pass	pyvista/plotting/render_passes.py	/^    def disable_ssaa_pass(self):$/;"	m	class:RenderPasses
disable_ssao	build/lib/pyvista/plotting/plotter.py	/^    def disable_ssao(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_ssao	build/lib/pyvista/plotting/renderer.py	/^    def disable_ssao(self) -> None:$/;"	m	class:Renderer
disable_ssao	pyvista/plotting/plotter.py	/^    def disable_ssao(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
disable_ssao	pyvista/plotting/renderer.py	/^    def disable_ssao(self) -> None:$/;"	m	class:Renderer
disable_ssao_pass	build/lib/pyvista/plotting/render_passes.py	/^    def disable_ssao_pass(self):$/;"	m	class:RenderPasses
disable_ssao_pass	pyvista/plotting/render_passes.py	/^    def disable_ssao_pass(self):$/;"	m	class:RenderPasses
disable_stereo_render	build/lib/pyvista/plotting/plotter.py	/^    def disable_stereo_render(self) -> None:$/;"	m	class:BasePlotter
disable_stereo_render	pyvista/plotting/plotter.py	/^    def disable_stereo_render(self) -> None:$/;"	m	class:BasePlotter
disc	examples/00-load/create_geometric_objects.py	/^disc = pv.Disc()$/;"	v
disc	examples/01-filter/extrude_trim.py	/^disc = pv.Disc(c_res=3, r_res=4, inner=0)$/;"	v
discover_modules	tests/check_doctest_names.py	/^def discover_modules(entry=pyvista, recurse=True):$/;"	f
discretize	doc/source/make_external_gallery.py	/^    discretize=Example($/;"	v
displacement_points	examples/99-advanced/warp_by_vector_eigenmodes.py	/^    displacement_points = np.zeros_like(vol.points)$/;"	v
display	build/lib/pyvista/plotting/plotter.py	/^                from IPython import display$/;"	i
display	pyvista/plotting/plotter.py	/^                from IPython import display$/;"	i
display_kwargs	build/lib/pyvista/plotting/helpers.py	/^        display_kwargs = {}$/;"	v
display_kwargs	pyvista/plotting/helpers.py	/^        display_kwargs = {}$/;"	v
dist	examples/01-filter/distance_between_surfaces.py	/^    dist = np.sqrt(np.sum((ip - p) ** 2))$/;"	v
dist	examples/01-filter/flying_edges.py	/^dist = np.linalg.norm(mesh.points, axis=1)$/;"	v
distance	build/lib/pyvista/plotting/camera.py	/^    def distance(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
distance	build/lib/pyvista/plotting/camera.py	/^    def distance(self, distance):$/;"	m	class:Camera
distance	examples/01-filter/geodesic.py	/^distance = land.geodesic_distance(cape_town, rome)$/;"	v
distance	pyvista/plotting/camera.py	/^    def distance(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
distance	pyvista/plotting/camera.py	/^    def distance(self, distance):$/;"	m	class:Camera
distribute_blocks	build/lib/pyvista/core/utilities/reader.py	/^    def distribute_blocks(self) -> bool:$/;"	m	class:CGNSReader
distribute_blocks	build/lib/pyvista/core/utilities/reader.py	/^    def distribute_blocks(self, value: str) -> None:$/;"	m	class:CGNSReader
distribute_blocks	pyvista/core/utilities/reader.py	/^    def distribute_blocks(self) -> bool:$/;"	m	class:CGNSReader
distribute_blocks	pyvista/core/utilities/reader.py	/^    def distribute_blocks(self, value: str) -> None:$/;"	m	class:CGNSReader
dists	examples/02-plot/distance_along_spline.py	/^dists = [0, 4, 8, 11]$/;"	v
dists	examples/02-plot/moving_cmap.py	/^dists = 2 * np.pi * (dists - dists.min()) \/ (dists.max() - dists.min())$/;"	v
dists	examples/02-plot/moving_cmap.py	/^dists = np.linalg.norm(mesh.points, axis=1)$/;"	v
divider	build/lib/pyvista/trame/ui/vuetify2.py	/^def divider(**kwargs):  # numpydoc ignore=PR01$/;"	f
divider	build/lib/pyvista/trame/ui/vuetify3.py	/^def divider(**kwargs):  # numpydoc ignore=PR01$/;"	f
divider	examples/99-advanced/customization_trame_toolbar.py	/^from pyvista.trame.ui.vuetify3 import divider$/;"	i
divider	pyvista/trame/ui/vuetify2.py	/^def divider(**kwargs):  # numpydoc ignore=PR01$/;"	f
divider	pyvista/trame/ui/vuetify3.py	/^def divider(**kwargs):  # numpydoc ignore=PR01$/;"	f
doc	doc/source/make_tables.py	/^    def doc(cls):$/;"	m	class:AllDatasetsCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.ExplicitStructuredGrid` datasets.'$/;"	v	class:ExplicitStructuredGridCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.ImageData` datasets.'$/;"	v	class:ImageDataCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.MultiBlock` datasets which contain a single mesh.'$/;"	v	class:MultiBlockSingleCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.MultiBlock` datasets with multiple blocks of different mesh types.'$/;"	v	class:MultiBlockHeteroCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.MultiBlock` datasets with multiple blocks of the same mesh type.'$/;"	v	class:MultiBlockHomoCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.MultiBlock` datasets.'$/;"	v	class:MultiBlockCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.PointSet` datasets.'$/;"	v	class:PointSetCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.PolyData` datasets.'$/;"	v	class:PolyDataCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.PolyData` surface meshes.'$/;"	v	class:SurfaceMeshCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.RectilinearGrid` datasets.'$/;"	v	class:RectilinearGridCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.StructuredGrid` datasets.'$/;"	v	class:StructuredGridCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.Texture` datasets with six images: one for each side of the cube.'$/;"	v	class:CubemapCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.Texture` datasets.'$/;"	v	class:TextureCarousel
doc	doc/source/make_tables.py	/^    doc = ':class:`~pyvista.UnstructuredGrid` datasets.'$/;"	v	class:UnstructuredGridCarousel
doc	doc/source/make_tables.py	/^    doc = 'Built-in datasets that ship with pyvista. Available through :mod:`examples <pyvista.examples.examples>` module.'$/;"	v	class:BuiltinCarousel
doc	doc/source/make_tables.py	/^    doc = 'Datasets from the :mod:`downloads <pyvista.examples.downloads>` module.'$/;"	v	class:DownloadsCarousel
doc	doc/source/make_tables.py	/^    doc = 'Datasets from the :mod:`planets <pyvista.examples.planets>` module.'$/;"	v	class:PlanetsCarousel
doc	doc/source/make_tables.py	/^    doc = 'Datasets represented as points in space. May be :class:`~pyvista.PointSet` or :class:`~pyvista.PolyData` with :any:`VERTEX<pyvista.CellType.VERTEX>` cells.'$/;"	v	class:PointCloudCarousel
doc	doc/source/make_tables.py	/^    doc = 'Datasets which have a non-standard representation.'$/;"	v	class:MiscCarousel
doc	doc/source/make_tables.py	/^    doc = 'Medical datasets.'$/;"	v	class:MedicalCarousel
doc	doc/source/make_tables.py	/^    doc = 'Three-dimensional volumetric :class:`~pyvista.ImageData` datasets.'$/;"	v	class:ImageData3DCarousel
doc	doc/source/make_tables.py	/^    doc = 'Two-dimensional :class:`~pyvista.ImageData` datasets.'$/;"	v	class:ImageData2DCarousel
doc_subs	build/lib/pyvista/plotting/charts.py	/^def doc_subs(member):  # numpydoc ignore=PR01,RT01$/;"	f
doc_subs	pyvista/plotting/charts.py	/^def doc_subs(member):  # numpydoc ignore=PR01,RT01$/;"	f
doctest	build/lib/pyvista/ext/plot_directive.py	/^import doctest$/;"	i
doctest	pyvista/ext/plot_directive.py	/^import doctest$/;"	i
document	build/lib/pyvista/plotting/themes.py	/^    document = DocumentTheme$/;"	v	class:_NATIVE_THEMES
document	pyvista/plotting/themes.py	/^    document = DocumentTheme$/;"	v	class:_NATIVE_THEMES
document_pro	build/lib/pyvista/plotting/themes.py	/^    document_pro = DocumentProTheme$/;"	v	class:_NATIVE_THEMES
document_pro	pyvista/plotting/themes.py	/^    document_pro = DocumentProTheme$/;"	v	class:_NATIVE_THEMES
dolfin	examples/00-load/read_dolfin.py	/^dolfin = pv.read(saved_file)$/;"	v
dom	build/lib/pyvista/plotting/camera.py	/^import xml.dom.minidom as md$/;"	i
dom	pyvista/plotting/camera.py	/^import xml.dom.minidom as md$/;"	i
double_click_callback	tests/plotting/test_render_window_interactor.py	/^    def double_click_callback(mouse_position):$/;"	f	function:test_track_click_position
download	build/lib/pyvista/examples/_dataset_loader.py	/^    def download(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
download	build/lib/pyvista/examples/_dataset_loader.py	/^    def download(self) -> str:$/;"	m	class:_DownloadableFile
download	build/lib/pyvista/examples/_dataset_loader.py	/^    def download(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDownloadableDatasetLoader
download	pyvista/examples/_dataset_loader.py	/^    def download(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
download	pyvista/examples/_dataset_loader.py	/^    def download(self) -> str:$/;"	m	class:_DownloadableFile
download	pyvista/examples/_dataset_loader.py	/^    def download(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDownloadableDatasetLoader
download_3ds	build/lib/pyvista/examples/__init__.py	/^from . import download_3ds as download_3ds$/;"	i
download_3ds	pyvista/examples/__init__.py	/^from . import download_3ds as download_3ds$/;"	i
download_3gqp	build/lib/pyvista/examples/downloads.py	/^def download_3gqp(load=True):  # pragma: no cover$/;"	f
download_3gqp	pyvista/examples/downloads.py	/^def download_3gqp(load=True):  # pragma: no cover$/;"	f
download_action_figure	build/lib/pyvista/examples/downloads.py	/^def download_action_figure(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_action_figure	pyvista/examples/downloads.py	/^def download_action_figure(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_aero_bracket	build/lib/pyvista/examples/downloads.py	/^def download_aero_bracket(load=True):  # pragma: no cover$/;"	f
download_aero_bracket	pyvista/examples/downloads.py	/^def download_aero_bracket(load=True):  # pragma: no cover$/;"	f
download_angular_sector	build/lib/pyvista/examples/downloads.py	/^def download_angular_sector(load=True):  # pragma: no cover$/;"	f
download_angular_sector	pyvista/examples/downloads.py	/^def download_angular_sector(load=True):  # pragma: no cover$/;"	f
download_antarctica_velocity	build/lib/pyvista/examples/downloads.py	/^def download_antarctica_velocity(load=True):  # pragma: no cover$/;"	f
download_antarctica_velocity	pyvista/examples/downloads.py	/^def download_antarctica_velocity(load=True):  # pragma: no cover$/;"	f
download_armadillo	build/lib/pyvista/examples/downloads.py	/^def download_armadillo(load=True):  # pragma: no cover$/;"	f
download_armadillo	pyvista/examples/downloads.py	/^def download_armadillo(load=True):  # pragma: no cover$/;"	f
download_avocado	build/lib/pyvista/examples/gltf.py	/^def download_avocado():  # pragma: no cover$/;"	f
download_avocado	pyvista/examples/gltf.py	/^def download_avocado():  # pragma: no cover$/;"	f
download_backward_facing_step	build/lib/pyvista/examples/downloads.py	/^def download_backward_facing_step(load=True):  # pragma: no cover$/;"	f
download_backward_facing_step	pyvista/examples/downloads.py	/^def download_backward_facing_step(load=True):  # pragma: no cover$/;"	f
download_beach	build/lib/pyvista/examples/downloads.py	/^def download_beach(load=True):  # pragma: no cover$/;"	f
download_beach	pyvista/examples/downloads.py	/^def download_beach(load=True):  # pragma: no cover$/;"	f
download_biplane	build/lib/pyvista/examples/downloads.py	/^def download_biplane(load=True):  # pragma: no cover$/;"	f
download_biplane	pyvista/examples/downloads.py	/^def download_biplane(load=True):  # pragma: no cover$/;"	f
download_bird	build/lib/pyvista/examples/downloads.py	/^def download_bird(load=True):  # pragma: no cover$/;"	f
download_bird	pyvista/examples/downloads.py	/^def download_bird(load=True):  # pragma: no cover$/;"	f
download_bird_bath	build/lib/pyvista/examples/downloads.py	/^def download_bird_bath(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_bird_bath	pyvista/examples/downloads.py	/^def download_bird_bath(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_bird_texture	build/lib/pyvista/examples/downloads.py	/^def download_bird_texture(load=True):  # pragma: no cover$/;"	f
download_bird_texture	pyvista/examples/downloads.py	/^def download_bird_texture(load=True):  # pragma: no cover$/;"	f
download_black_vase	build/lib/pyvista/examples/downloads.py	/^def download_black_vase(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_black_vase	pyvista/examples/downloads.py	/^def download_black_vase(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_blood_vessels	build/lib/pyvista/examples/downloads.py	/^def download_blood_vessels(load=True):  # pragma: no cover$/;"	f
download_blood_vessels	pyvista/examples/downloads.py	/^def download_blood_vessels(load=True):  # pragma: no cover$/;"	f
download_blow	build/lib/pyvista/examples/downloads.py	/^def download_blow(load=True):  # pragma: no cover$/;"	f
download_blow	pyvista/examples/downloads.py	/^def download_blow(load=True):  # pragma: no cover$/;"	f
download_bolt_nut	build/lib/pyvista/examples/downloads.py	/^def download_bolt_nut(load=True):  # pragma: no cover$/;"	f
download_bolt_nut	pyvista/examples/downloads.py	/^def download_bolt_nut(load=True):  # pragma: no cover$/;"	f
download_brain	build/lib/pyvista/examples/downloads.py	/^def download_brain(load=True):  # pragma: no cover$/;"	f
download_brain	pyvista/examples/downloads.py	/^def download_brain(load=True):  # pragma: no cover$/;"	f
download_brain_atlas_with_sides	build/lib/pyvista/examples/downloads.py	/^def download_brain_atlas_with_sides(load=True):  # pragma: no cover$/;"	f
download_brain_atlas_with_sides	pyvista/examples/downloads.py	/^def download_brain_atlas_with_sides(load=True):  # pragma: no cover$/;"	f
download_bunny	build/lib/pyvista/examples/downloads.py	/^def download_bunny(load=True):  # pragma: no cover$/;"	f
download_bunny	pyvista/examples/downloads.py	/^def download_bunny(load=True):  # pragma: no cover$/;"	f
download_bunny_coarse	build/lib/pyvista/examples/downloads.py	/^def download_bunny_coarse(load=True):  # pragma: no cover$/;"	f
download_bunny_coarse	pyvista/examples/downloads.py	/^def download_bunny_coarse(load=True):  # pragma: no cover$/;"	f
download_cad_model	build/lib/pyvista/examples/downloads.py	/^def download_cad_model(load=True):  # pragma: no cover$/;"	f
download_cad_model	pyvista/examples/downloads.py	/^def download_cad_model(load=True):  # pragma: no cover$/;"	f
download_cad_model_case	build/lib/pyvista/examples/downloads.py	/^def download_cad_model_case(load=True):  # pragma: no cover$/;"	f
download_cad_model_case	pyvista/examples/downloads.py	/^def download_cad_model_case(load=True):  # pragma: no cover$/;"	f
download_caffeine	build/lib/pyvista/examples/downloads.py	/^def download_caffeine(load=True):  # pragma: no cover$/;"	f
download_caffeine	pyvista/examples/downloads.py	/^def download_caffeine(load=True):  # pragma: no cover$/;"	f
download_cake_easy	build/lib/pyvista/examples/downloads.py	/^def download_cake_easy(load=True):  # pragma: no cover$/;"	f
download_cake_easy	pyvista/examples/downloads.py	/^def download_cake_easy(load=True):  # pragma: no cover$/;"	f
download_cake_easy_texture	build/lib/pyvista/examples/downloads.py	/^def download_cake_easy_texture(load=True):  # pragma: no cover$/;"	f
download_cake_easy_texture	pyvista/examples/downloads.py	/^def download_cake_easy_texture(load=True):  # pragma: no cover$/;"	f
download_can	build/lib/pyvista/examples/downloads.py	/^def download_can(partial=False, load=True):  # pragma: no cover$/;"	f
download_can	pyvista/examples/downloads.py	/^def download_can(partial=False, load=True):  # pragma: no cover$/;"	f
download_can_crushed_hdf	build/lib/pyvista/examples/downloads.py	/^def download_can_crushed_hdf(load=True):  # pragma: no cover$/;"	f
download_can_crushed_hdf	pyvista/examples/downloads.py	/^def download_can_crushed_hdf(load=True):  # pragma: no cover$/;"	f
download_can_crushed_vtu	build/lib/pyvista/examples/downloads.py	/^def download_can_crushed_vtu(load=True):  # pragma: no cover$/;"	f
download_can_crushed_vtu	pyvista/examples/downloads.py	/^def download_can_crushed_vtu(load=True):  # pragma: no cover$/;"	f
download_carburetor	build/lib/pyvista/examples/downloads.py	/^def download_carburetor(load=True):  # pragma: no cover$/;"	f
download_carburetor	pyvista/examples/downloads.py	/^def download_carburetor(load=True):  # pragma: no cover$/;"	f
download_carotid	build/lib/pyvista/examples/downloads.py	/^def download_carotid(load=True):  # pragma: no cover$/;"	f
download_carotid	pyvista/examples/downloads.py	/^def download_carotid(load=True):  # pragma: no cover$/;"	f
download_cavity	build/lib/pyvista/examples/downloads.py	/^def download_cavity(load=True):  # pragma: no cover$/;"	f
download_cavity	pyvista/examples/downloads.py	/^def download_cavity(load=True):  # pragma: no cover$/;"	f
download_cells_nd	build/lib/pyvista/examples/downloads.py	/^def download_cells_nd(load=True):  # pragma: no cover$/;"	f
download_cells_nd	pyvista/examples/downloads.py	/^def download_cells_nd(load=True):  # pragma: no cover$/;"	f
download_cgns_multi	build/lib/pyvista/examples/downloads.py	/^def download_cgns_multi(load=True):  # pragma: no cover$/;"	f
download_cgns_multi	pyvista/examples/downloads.py	/^def download_cgns_multi(load=True):  # pragma: no cover$/;"	f
download_cgns_structured	build/lib/pyvista/examples/downloads.py	/^def download_cgns_structured(load=True):  # pragma: no cover$/;"	f
download_cgns_structured	pyvista/examples/downloads.py	/^def download_cgns_structured(load=True):  # pragma: no cover$/;"	f
download_chest	build/lib/pyvista/examples/downloads.py	/^def download_chest(load=True):  # pragma: no cover$/;"	f
download_chest	pyvista/examples/downloads.py	/^def download_chest(load=True):  # pragma: no cover$/;"	f
download_cloud_dark_matter	build/lib/pyvista/examples/downloads.py	/^def download_cloud_dark_matter(load=True):  # pragma: no cover$/;"	f
download_cloud_dark_matter	pyvista/examples/downloads.py	/^def download_cloud_dark_matter(load=True):  # pragma: no cover$/;"	f
download_cloud_dark_matter_dense	build/lib/pyvista/examples/downloads.py	/^def download_cloud_dark_matter_dense(load=True):  # pragma: no cover$/;"	f
download_cloud_dark_matter_dense	pyvista/examples/downloads.py	/^def download_cloud_dark_matter_dense(load=True):  # pragma: no cover$/;"	f
download_clown	build/lib/pyvista/examples/downloads.py	/^def download_clown(load=True):  # pragma: no cover$/;"	f
download_clown	pyvista/examples/downloads.py	/^def download_clown(load=True):  # pragma: no cover$/;"	f
download_coastlines	build/lib/pyvista/examples/downloads.py	/^def download_coastlines(load=True):  # pragma: no cover$/;"	f
download_coastlines	pyvista/examples/downloads.py	/^def download_coastlines(load=True):  # pragma: no cover$/;"	f
download_coil_magnetic_field	build/lib/pyvista/examples/downloads.py	/^def download_coil_magnetic_field(load=True):  # pragma: no cover$/;"	f
download_coil_magnetic_field	pyvista/examples/downloads.py	/^def download_coil_magnetic_field(load=True):  # pragma: no cover$/;"	f
download_cow	build/lib/pyvista/examples/downloads.py	/^def download_cow(load=True):  # pragma: no cover$/;"	f
download_cow	pyvista/examples/downloads.py	/^def download_cow(load=True):  # pragma: no cover$/;"	f
download_cow_head	build/lib/pyvista/examples/downloads.py	/^def download_cow_head(load=True):  # pragma: no cover$/;"	f
download_cow_head	pyvista/examples/downloads.py	/^def download_cow_head(load=True):  # pragma: no cover$/;"	f
download_crater_imagery	build/lib/pyvista/examples/downloads.py	/^def download_crater_imagery(load=True):  # pragma: no cover$/;"	f
download_crater_imagery	pyvista/examples/downloads.py	/^def download_crater_imagery(load=True):  # pragma: no cover$/;"	f
download_crater_topo	build/lib/pyvista/examples/downloads.py	/^def download_crater_topo(load=True):  # pragma: no cover$/;"	f
download_crater_topo	pyvista/examples/downloads.py	/^def download_crater_topo(load=True):  # pragma: no cover$/;"	f
download_cubemap_park	build/lib/pyvista/examples/downloads.py	/^def download_cubemap_park(load=True):  # pragma: no cover$/;"	f
download_cubemap_park	pyvista/examples/downloads.py	/^def download_cubemap_park(load=True):  # pragma: no cover$/;"	f
download_cubemap_space_16k	build/lib/pyvista/examples/downloads.py	/^def download_cubemap_space_16k(load=True):  # pragma: no cover$/;"	f
download_cubemap_space_16k	pyvista/examples/downloads.py	/^def download_cubemap_space_16k(load=True):  # pragma: no cover$/;"	f
download_cubemap_space_4k	build/lib/pyvista/examples/downloads.py	/^def download_cubemap_space_4k(load=True):  # pragma: no cover$/;"	f
download_cubemap_space_4k	pyvista/examples/downloads.py	/^def download_cubemap_space_4k(load=True):  # pragma: no cover$/;"	f
download_cylinder_crossflow	build/lib/pyvista/examples/downloads.py	/^def download_cylinder_crossflow(load=True):  # pragma: no cover$/;"	f
download_cylinder_crossflow	pyvista/examples/downloads.py	/^def download_cylinder_crossflow(load=True):  # pragma: no cover$/;"	f
download_damaged_helmet	build/lib/pyvista/examples/gltf.py	/^def download_damaged_helmet():  # pragma: no cover$/;"	f
download_damaged_helmet	pyvista/examples/gltf.py	/^def download_damaged_helmet():  # pragma: no cover$/;"	f
download_damavand_volcano	build/lib/pyvista/examples/downloads.py	/^def download_damavand_volcano(load=True):  # pragma: no cover$/;"	f
download_damavand_volcano	pyvista/examples/downloads.py	/^def download_damavand_volcano(load=True):  # pragma: no cover$/;"	f
download_delaunay_example	build/lib/pyvista/examples/downloads.py	/^def download_delaunay_example(load=True):  # pragma: no cover$/;"	f
download_delaunay_example	pyvista/examples/downloads.py	/^def download_delaunay_example(load=True):  # pragma: no cover$/;"	f
download_dicom_stack	build/lib/pyvista/examples/downloads.py	/^def download_dicom_stack(load: bool = True) -> pyvista.ImageData | str:  # pragma: no cover$/;"	f
download_dicom_stack	pyvista/examples/downloads.py	/^def download_dicom_stack(load: bool = True) -> pyvista.ImageData | str:  # pragma: no cover$/;"	f
download_dikhololo_night	build/lib/pyvista/examples/downloads.py	/^def download_dikhololo_night(load=True):  # pragma: no cover$/;"	f
download_dikhololo_night	pyvista/examples/downloads.py	/^def download_dikhololo_night(load=True):  # pragma: no cover$/;"	f
download_disc_quads	build/lib/pyvista/examples/downloads.py	/^def download_disc_quads(load=True):  # pragma: no cover$/;"	f
download_disc_quads	pyvista/examples/downloads.py	/^def download_disc_quads(load=True):  # pragma: no cover$/;"	f
download_dolfin	build/lib/pyvista/examples/downloads.py	/^def download_dolfin(load=True):  # pragma: no cover$/;"	f
download_dolfin	pyvista/examples/downloads.py	/^def download_dolfin(load=True):  # pragma: no cover$/;"	f
download_doorman	build/lib/pyvista/examples/downloads.py	/^def download_doorman(load=True):  # pragma: no cover$/;"	f
download_doorman	pyvista/examples/downloads.py	/^def download_doorman(load=True):  # pragma: no cover$/;"	f
download_dragon	build/lib/pyvista/examples/downloads.py	/^def download_dragon(load=True):  # pragma: no cover$/;"	f
download_dragon	pyvista/examples/downloads.py	/^def download_dragon(load=True):  # pragma: no cover$/;"	f
download_drill	build/lib/pyvista/examples/downloads.py	/^def download_drill(load=True):  # pragma: no cover$/;"	f
download_drill	pyvista/examples/downloads.py	/^def download_drill(load=True):  # pragma: no cover$/;"	f
download_dual_sphere_animation	build/lib/pyvista/examples/downloads.py	/^def download_dual_sphere_animation(load=True):  # pragma: no cover$/;"	f
download_dual_sphere_animation	pyvista/examples/downloads.py	/^def download_dual_sphere_animation(load=True):  # pragma: no cover$/;"	f
download_e07733s002i009	build/lib/pyvista/examples/downloads.py	/^def download_e07733s002i009(load=True):  # paragma: no cover$/;"	f
download_e07733s002i009	pyvista/examples/downloads.py	/^def download_e07733s002i009(load=True):  # paragma: no cover$/;"	f
download_electronics_cooling	build/lib/pyvista/examples/downloads.py	/^def download_electronics_cooling(load=True):  # pragma: no cover$/;"	f
download_electronics_cooling	pyvista/examples/downloads.py	/^def download_electronics_cooling(load=True):  # pragma: no cover$/;"	f
download_embryo	build/lib/pyvista/examples/downloads.py	/^def download_embryo(load=True):  # pragma: no cover$/;"	f
download_embryo	pyvista/examples/downloads.py	/^def download_embryo(load=True):  # pragma: no cover$/;"	f
download_emoji	build/lib/pyvista/examples/downloads.py	/^def download_emoji(load=True):  # pragma: no cover$/;"	f
download_emoji	pyvista/examples/downloads.py	/^def download_emoji(load=True):  # pragma: no cover$/;"	f
download_emoji_texture	build/lib/pyvista/examples/downloads.py	/^def download_emoji_texture(load=True):  # pragma: no cover$/;"	f
download_emoji_texture	pyvista/examples/downloads.py	/^def download_emoji_texture(load=True):  # pragma: no cover$/;"	f
download_exodus	build/lib/pyvista/examples/downloads.py	/^def download_exodus(load=True):  # pragma: no cover$/;"	f
download_exodus	pyvista/examples/downloads.py	/^def download_exodus(load=True):  # pragma: no cover$/;"	f
download_face	build/lib/pyvista/examples/downloads.py	/^def download_face(load=True):  # pragma: no cover$/;"	f
download_face	pyvista/examples/downloads.py	/^def download_face(load=True):  # pragma: no cover$/;"	f
download_face2	build/lib/pyvista/examples/downloads.py	/^def download_face2(load=True):  # pragma: no cover$/;"	f
download_face2	pyvista/examples/downloads.py	/^def download_face2(load=True):  # pragma: no cover$/;"	f
download_faults	build/lib/pyvista/examples/downloads.py	/^def download_faults(load=True):  # pragma: no cover$/;"	f
download_faults	pyvista/examples/downloads.py	/^def download_faults(load=True):  # pragma: no cover$/;"	f
download_fea_bracket	build/lib/pyvista/examples/downloads.py	/^def download_fea_bracket(load=True):  # pragma: no cover$/;"	f
download_fea_bracket	pyvista/examples/downloads.py	/^def download_fea_bracket(load=True):  # pragma: no cover$/;"	f
download_fea_hertzian_contact_cylinder	build/lib/pyvista/examples/downloads.py	/^def download_fea_hertzian_contact_cylinder(load=True):  # pragma: no cover$/;"	f
download_fea_hertzian_contact_cylinder	pyvista/examples/downloads.py	/^def download_fea_hertzian_contact_cylinder(load=True):  # pragma: no cover$/;"	f
download_file	build/lib/pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import download_file$/;"	i
download_file	build/lib/pyvista/examples/download_3ds.py	/^from .downloads import download_file$/;"	i
download_file	build/lib/pyvista/examples/downloads.py	/^def download_file(filename):$/;"	f
download_file	build/lib/pyvista/examples/vrml.py	/^from pyvista.examples.downloads import download_file$/;"	i
download_file	pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import download_file$/;"	i
download_file	pyvista/examples/download_3ds.py	/^from .downloads import download_file$/;"	i
download_file	pyvista/examples/downloads.py	/^def download_file(filename):$/;"	f
download_file	pyvista/examples/vrml.py	/^from pyvista.examples.downloads import download_file$/;"	i
download_file	tests/core/test_reader.py	/^from pyvista.examples.downloads import download_file$/;"	i
download_file	tests/plotting/test_theme.py	/^from pyvista.examples.downloads import download_file$/;"	i
download_filled_contours	build/lib/pyvista/examples/downloads.py	/^def download_filled_contours(load=True):  # pragma: no cover$/;"	f
download_filled_contours	pyvista/examples/downloads.py	/^def download_filled_contours(load=True):  # pragma: no cover$/;"	f
download_foot_bones	build/lib/pyvista/examples/downloads.py	/^def download_foot_bones(load=True):  # pragma: no cover$/;"	f
download_foot_bones	pyvista/examples/downloads.py	/^def download_foot_bones(load=True):  # pragma: no cover$/;"	f
download_frog	build/lib/pyvista/examples/downloads.py	/^def download_frog(load=True):  # pragma: no cover$/;"	f
download_frog	pyvista/examples/downloads.py	/^def download_frog(load=True):  # pragma: no cover$/;"	f
download_frog_tissue	build/lib/pyvista/examples/downloads.py	/^def download_frog_tissue(load=True):  # pragma: no cover$/;"	f
download_frog_tissue	pyvista/examples/downloads.py	/^def download_frog_tissue(load=True):  # pragma: no cover$/;"	f
download_full_head	build/lib/pyvista/examples/downloads.py	/^def download_full_head(load=True):  # pragma: no cover$/;"	f
download_full_head	pyvista/examples/downloads.py	/^def download_full_head(load=True):  # pragma: no cover$/;"	f
download_gearbox	build/lib/pyvista/examples/gltf.py	/^def download_gearbox():  # pragma: no cover$/;"	f
download_gearbox	pyvista/examples/gltf.py	/^def download_gearbox():  # pragma: no cover$/;"	f
download_gears	build/lib/pyvista/examples/downloads.py	/^def download_gears(load=True):  # pragma: no cover$/;"	f
download_gears	pyvista/examples/downloads.py	/^def download_gears(load=True):  # pragma: no cover$/;"	f
download_gif_simple	build/lib/pyvista/examples/downloads.py	/^def download_gif_simple(load=True):  # pragma: no cover$/;"	f
download_gif_simple	pyvista/examples/downloads.py	/^def download_gif_simple(load=True):  # pragma: no cover$/;"	f
download_gourds	build/lib/pyvista/examples/downloads.py	/^def download_gourds(zoom=False, load=True):  # pragma: no cover$/;"	f
download_gourds	pyvista/examples/downloads.py	/^def download_gourds(zoom=False, load=True):  # pragma: no cover$/;"	f
download_gourds_pnm	build/lib/pyvista/examples/downloads.py	/^def download_gourds_pnm(load=True):  # pragma: no cover$/;"	f
download_gourds_pnm	pyvista/examples/downloads.py	/^def download_gourds_pnm(load=True):  # pragma: no cover$/;"	f
download_gourds_texture	build/lib/pyvista/examples/downloads.py	/^def download_gourds_texture(zoom=False, load=True):  # pragma: no cover$/;"	f
download_gourds_texture	pyvista/examples/downloads.py	/^def download_gourds_texture(zoom=False, load=True):  # pragma: no cover$/;"	f
download_gpr_data_array	build/lib/pyvista/examples/downloads.py	/^def download_gpr_data_array(load=True):  # pragma: no cover$/;"	f
download_gpr_data_array	pyvista/examples/downloads.py	/^def download_gpr_data_array(load=True):  # pragma: no cover$/;"	f
download_gpr_path	build/lib/pyvista/examples/downloads.py	/^def download_gpr_path(load=True):  # pragma: no cover$/;"	f
download_gpr_path	pyvista/examples/downloads.py	/^def download_gpr_path(load=True):  # pragma: no cover$/;"	f
download_grasshopper	build/lib/pyvista/examples/vrml.py	/^def download_grasshopper():  # pragma: no cover$/;"	f
download_grasshopper	pyvista/examples/vrml.py	/^def download_grasshopper():  # pragma: no cover$/;"	f
download_great_white_shark	build/lib/pyvista/examples/downloads.py	/^def download_great_white_shark(load=True):  # pragma: no cover$/;"	f
download_great_white_shark	pyvista/examples/downloads.py	/^def download_great_white_shark(load=True):  # pragma: no cover$/;"	f
download_grey_nurse_shark	build/lib/pyvista/examples/downloads.py	/^def download_grey_nurse_shark(load=True):  # pragma: no cover$/;"	f
download_grey_nurse_shark	pyvista/examples/downloads.py	/^def download_grey_nurse_shark(load=True):  # pragma: no cover$/;"	f
download_guitar	build/lib/pyvista/examples/downloads.py	/^def download_guitar(load=True):  # pragma: no cover$/;"	f
download_guitar	pyvista/examples/downloads.py	/^def download_guitar(load=True):  # pragma: no cover$/;"	f
download_head	build/lib/pyvista/examples/downloads.py	/^def download_head(load=True):  # pragma: no cover$/;"	f
download_head	pyvista/examples/downloads.py	/^def download_head(load=True):  # pragma: no cover$/;"	f
download_head_2	build/lib/pyvista/examples/downloads.py	/^def download_head_2(load=True):  # pragma: no cover$/;"	f
download_head_2	pyvista/examples/downloads.py	/^def download_head_2(load=True):  # pragma: no cover$/;"	f
download_headsq	build/lib/pyvista/examples/downloads.py	/^def download_headsq(load=True):  # pragma: no cover$/;"	f
download_headsq	pyvista/examples/downloads.py	/^def download_headsq(load=True):  # pragma: no cover$/;"	f
download_honolulu	build/lib/pyvista/examples/downloads.py	/^def download_honolulu(load=True):  # pragma: no cover$/;"	f
download_honolulu	pyvista/examples/downloads.py	/^def download_honolulu(load=True):  # pragma: no cover$/;"	f
download_horse	build/lib/pyvista/examples/downloads.py	/^def download_horse(load=True):  # pragma: no cover$/;"	f
download_horse	pyvista/examples/downloads.py	/^def download_horse(load=True):  # pragma: no cover$/;"	f
download_horse_points	build/lib/pyvista/examples/downloads.py	/^def download_horse_points(load=True):  # pragma: no cover$/;"	f
download_horse_points	pyvista/examples/downloads.py	/^def download_horse_points(load=True):  # pragma: no cover$/;"	f
download_human	build/lib/pyvista/examples/downloads.py	/^def download_human(load=True):  # pragma: no cover$/;"	f
download_human	pyvista/examples/downloads.py	/^def download_human(load=True):  # pragma: no cover$/;"	f
download_iflamigm	build/lib/pyvista/examples/download_3ds.py	/^def download_iflamigm():  # pragma: no cover$/;"	f
download_iflamigm	pyvista/examples/download_3ds.py	/^def download_iflamigm():  # pragma: no cover$/;"	f
download_iron_protein	build/lib/pyvista/examples/downloads.py	/^def download_iron_protein(load=True):  # pragma: no cover$/;"	f
download_iron_protein	pyvista/examples/downloads.py	/^def download_iron_protein(load=True):  # pragma: no cover$/;"	f
download_ivan_angel	build/lib/pyvista/examples/downloads.py	/^def download_ivan_angel(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_ivan_angel	pyvista/examples/downloads.py	/^def download_ivan_angel(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_jupiter_surface	build/lib/pyvista/examples/planets.py	/^def download_jupiter_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_jupiter_surface	pyvista/examples/planets.py	/^def download_jupiter_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_kitchen	build/lib/pyvista/examples/downloads.py	/^def download_kitchen(split=False, load=True):  # pragma: no cover$/;"	f
download_kitchen	pyvista/examples/downloads.py	/^def download_kitchen(split=False, load=True):  # pragma: no cover$/;"	f
download_knee	build/lib/pyvista/examples/downloads.py	/^def download_knee(load=True):  # pragma: no cover$/;"	f
download_knee	pyvista/examples/downloads.py	/^def download_knee(load=True):  # pragma: no cover$/;"	f
download_knee_full	build/lib/pyvista/examples/downloads.py	/^def download_knee_full(load=True):  # pragma: no cover$/;"	f
download_knee_full	pyvista/examples/downloads.py	/^def download_knee_full(load=True):  # pragma: no cover$/;"	f
download_letter_a	build/lib/pyvista/examples/downloads.py	/^def download_letter_a(load=True):  # pragma: no cover$/;"	f
download_letter_a	pyvista/examples/downloads.py	/^def download_letter_a(load=True):  # pragma: no cover$/;"	f
download_letter_k	build/lib/pyvista/examples/downloads.py	/^def download_letter_k(load=True):  # pragma: no cover$/;"	f
download_letter_k	pyvista/examples/downloads.py	/^def download_letter_k(load=True):  # pragma: no cover$/;"	f
download_lidar	build/lib/pyvista/examples/downloads.py	/^def download_lidar(load=True):  # pragma: no cover$/;"	f
download_lidar	pyvista/examples/downloads.py	/^def download_lidar(load=True):  # pragma: no cover$/;"	f
download_lobster	build/lib/pyvista/examples/downloads.py	/^def download_lobster(load=True):  # pragma: no cover$/;"	f
download_lobster	pyvista/examples/downloads.py	/^def download_lobster(load=True):  # pragma: no cover$/;"	f
download_louis_louvre	build/lib/pyvista/examples/downloads.py	/^def download_louis_louvre(load=True):  # pragma: no cover$/;"	f
download_louis_louvre	pyvista/examples/downloads.py	/^def download_louis_louvre(load=True):  # pragma: no cover$/;"	f
download_lshape	build/lib/pyvista/examples/downloads.py	/^def download_lshape(load=True):  # pragma: no cover$/;"	f
download_lshape	pyvista/examples/downloads.py	/^def download_lshape(load=True):  # pragma: no cover$/;"	f
download_lucy	build/lib/pyvista/examples/downloads.py	/^def download_lucy(load=True):  # pragma: no cover$/;"	f
download_lucy	pyvista/examples/downloads.py	/^def download_lucy(load=True):  # pragma: no cover$/;"	f
download_m4_total_density	build/lib/pyvista/examples/downloads.py	/^def download_m4_total_density(load=True):  # pragma: no cover$/;"	f
download_m4_total_density	pyvista/examples/downloads.py	/^def download_m4_total_density(load=True):  # pragma: no cover$/;"	f
download_mars_surface	build/lib/pyvista/examples/planets.py	/^def download_mars_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_mars_surface	pyvista/examples/planets.py	/^def download_mars_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_masonry_texture	build/lib/pyvista/examples/downloads.py	/^def download_masonry_texture(load=True):  # pragma: no cover$/;"	f
download_masonry_texture	pyvista/examples/downloads.py	/^def download_masonry_texture(load=True):  # pragma: no cover$/;"	f
download_mercury_surface	build/lib/pyvista/examples/planets.py	/^def download_mercury_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_mercury_surface	pyvista/examples/planets.py	/^def download_mercury_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_meshio_xdmf	build/lib/pyvista/examples/downloads.py	/^def download_meshio_xdmf(load=True):  # pragma: no cover$/;"	f
download_meshio_xdmf	pyvista/examples/downloads.py	/^def download_meshio_xdmf(load=True):  # pragma: no cover$/;"	f
download_milk_truck	build/lib/pyvista/examples/gltf.py	/^def download_milk_truck():  # pragma: no cover$/;"	f
download_milk_truck	pyvista/examples/gltf.py	/^def download_milk_truck():  # pragma: no cover$/;"	f
download_milkyway_sky_background	build/lib/pyvista/examples/planets.py	/^def download_milkyway_sky_background(texture=False, load=True):  # pragma: no cover$/;"	f
download_milkyway_sky_background	pyvista/examples/planets.py	/^def download_milkyway_sky_background(texture=False, load=True):  # pragma: no cover$/;"	f
download_model_with_variance	build/lib/pyvista/examples/downloads.py	/^def download_model_with_variance(load=True):  # pragma: no cover$/;"	f
download_model_with_variance	pyvista/examples/downloads.py	/^def download_model_with_variance(load=True):  # pragma: no cover$/;"	f
download_moon_surface	build/lib/pyvista/examples/planets.py	/^def download_moon_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_moon_surface	pyvista/examples/planets.py	/^def download_moon_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_moonlanding_image	build/lib/pyvista/examples/downloads.py	/^def download_moonlanding_image(load=True):  # pragma: no cover$/;"	f
download_moonlanding_image	pyvista/examples/downloads.py	/^def download_moonlanding_image(load=True):  # pragma: no cover$/;"	f
download_motor	build/lib/pyvista/examples/downloads.py	/^def download_motor(load=True):  # pragma: no cover$/;"	f
download_motor	pyvista/examples/downloads.py	/^def download_motor(load=True):  # pragma: no cover$/;"	f
download_mount_damavand	build/lib/pyvista/examples/downloads.py	/^def download_mount_damavand(load=True):  # pragma: no cover$/;"	f
download_mount_damavand	pyvista/examples/downloads.py	/^def download_mount_damavand(load=True):  # pragma: no cover$/;"	f
download_mug	build/lib/pyvista/examples/downloads.py	/^def download_mug(load=True):  # pragma: no cover$/;"	f
download_mug	pyvista/examples/downloads.py	/^def download_mug(load=True):  # pragma: no cover$/;"	f
download_naca	build/lib/pyvista/examples/downloads.py	/^def download_naca(load=True):  # pragma: no cover$/;"	f
download_naca	pyvista/examples/downloads.py	/^def download_naca(load=True):  # pragma: no cover$/;"	f
download_nefertiti	build/lib/pyvista/examples/downloads.py	/^def download_nefertiti(load=True):  # pragma: no cover$/;"	f
download_nefertiti	pyvista/examples/downloads.py	/^def download_nefertiti(load=True):  # pragma: no cover$/;"	f
download_nek5000	build/lib/pyvista/examples/downloads.py	/^def download_nek5000(load=True):$/;"	f
download_nek5000	pyvista/examples/downloads.py	/^def download_nek5000(load=True):$/;"	f
download_neptune_surface	build/lib/pyvista/examples/planets.py	/^def download_neptune_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_neptune_surface	pyvista/examples/planets.py	/^def download_neptune_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_notch_displacement	build/lib/pyvista/examples/downloads.py	/^def download_notch_displacement(load=True):  # pragma: no cover$/;"	f
download_notch_displacement	pyvista/examples/downloads.py	/^def download_notch_displacement(load=True):  # pragma: no cover$/;"	f
download_notch_stress	build/lib/pyvista/examples/downloads.py	/^def download_notch_stress(load=True):  # pragma: no cover$/;"	f
download_notch_stress	pyvista/examples/downloads.py	/^def download_notch_stress(load=True):  # pragma: no cover$/;"	f
download_oblique_cone	build/lib/pyvista/examples/downloads.py	/^def download_oblique_cone(load=True):  # pragma: no cover$/;"	f
download_oblique_cone	pyvista/examples/downloads.py	/^def download_oblique_cone(load=True):  # pragma: no cover$/;"	f
download_office	build/lib/pyvista/examples/downloads.py	/^def download_office(load=True):  # pragma: no cover$/;"	f
download_office	pyvista/examples/downloads.py	/^def download_office(load=True):  # pragma: no cover$/;"	f
download_openfoam_tubes	build/lib/pyvista/examples/downloads.py	/^def download_openfoam_tubes(load=True):  # pragma: no cover$/;"	f
download_openfoam_tubes	pyvista/examples/downloads.py	/^def download_openfoam_tubes(load=True):  # pragma: no cover$/;"	f
download_osmnx_graph	build/lib/pyvista/examples/downloads.py	/^def download_osmnx_graph(load=True):  # pragma: no cover$/;"	f
download_osmnx_graph	pyvista/examples/downloads.py	/^def download_osmnx_graph(load=True):  # pragma: no cover$/;"	f
download_owl	build/lib/pyvista/examples/downloads.py	/^def download_owl(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_owl	pyvista/examples/downloads.py	/^def download_owl(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_parched_canal_4k	build/lib/pyvista/examples/downloads.py	/^def download_parched_canal_4k(load=True):  # pragma: no cover$/;"	f
download_parched_canal_4k	pyvista/examples/downloads.py	/^def download_parched_canal_4k(load=True):  # pragma: no cover$/;"	f
download_particles	build/lib/pyvista/examples/downloads.py	/^def download_particles(load=True):  # pragma: no cover$/;"	f
download_particles	pyvista/examples/downloads.py	/^def download_particles(load=True):  # pragma: no cover$/;"	f
download_particles_lethe	build/lib/pyvista/examples/downloads.py	/^def download_particles_lethe(load=True):  # pragma: no cover$/;"	f
download_particles_lethe	pyvista/examples/downloads.py	/^def download_particles_lethe(load=True):  # pragma: no cover$/;"	f
download_pepper	build/lib/pyvista/examples/downloads.py	/^def download_pepper(load=True):  # pragma: no cover$/;"	f
download_pepper	pyvista/examples/downloads.py	/^def download_pepper(load=True):  # pragma: no cover$/;"	f
download_pine_roots	build/lib/pyvista/examples/downloads.py	/^def download_pine_roots(load=True):  # pragma: no cover$/;"	f
download_pine_roots	pyvista/examples/downloads.py	/^def download_pine_roots(load=True):  # pragma: no cover$/;"	f
download_plastic_vase	build/lib/pyvista/examples/downloads.py	/^def download_plastic_vase(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_plastic_vase	pyvista/examples/downloads.py	/^def download_plastic_vase(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_pluto_surface	build/lib/pyvista/examples/planets.py	/^def download_pluto_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_pluto_surface	pyvista/examples/planets.py	/^def download_pluto_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_poly_line	build/lib/pyvista/examples/downloads.py	/^def download_poly_line(load=True):  # pragma: no cover$/;"	f
download_poly_line	pyvista/examples/downloads.py	/^def download_poly_line(load=True):  # pragma: no cover$/;"	f
download_prism	build/lib/pyvista/examples/downloads.py	/^def download_prism(load=True):  # pragma: no cover$/;"	f
download_prism	pyvista/examples/downloads.py	/^def download_prism(load=True):  # pragma: no cover$/;"	f
download_prostar	build/lib/pyvista/examples/downloads.py	/^def download_prostar(load=True):  # pragma: no cover$/;"	f
download_prostar	pyvista/examples/downloads.py	/^def download_prostar(load=True):  # pragma: no cover$/;"	f
download_prostate	build/lib/pyvista/examples/downloads.py	/^def download_prostate(load=True):  # pragma: no cover$/;"	f
download_prostate	pyvista/examples/downloads.py	/^def download_prostate(load=True):  # pragma: no cover$/;"	f
download_pump_bracket	build/lib/pyvista/examples/downloads.py	/^def download_pump_bracket(load=True):  # pragma: no cover$/;"	f
download_pump_bracket	pyvista/examples/downloads.py	/^def download_pump_bracket(load=True):  # pragma: no cover$/;"	f
download_puppy	build/lib/pyvista/examples/downloads.py	/^def download_puppy(load=True):  # pragma: no cover$/;"	f
download_puppy	pyvista/examples/downloads.py	/^def download_puppy(load=True):  # pragma: no cover$/;"	f
download_puppy_texture	build/lib/pyvista/examples/downloads.py	/^def download_puppy_texture(load=True):  # pragma: no cover$/;"	f
download_puppy_texture	pyvista/examples/downloads.py	/^def download_puppy_texture(load=True):  # pragma: no cover$/;"	f
download_quadratic_pyramid	build/lib/pyvista/examples/downloads.py	/^def download_quadratic_pyramid(load=True):  # pragma: no cover$/;"	f
download_quadratic_pyramid	pyvista/examples/downloads.py	/^def download_quadratic_pyramid(load=True):  # pragma: no cover$/;"	f
download_rectilinear_grid	build/lib/pyvista/examples/downloads.py	/^def download_rectilinear_grid(load=True):  # pragma: no cover$/;"	f
download_rectilinear_grid	pyvista/examples/downloads.py	/^def download_rectilinear_grid(load=True):  # pragma: no cover$/;"	f
download_reservoir	build/lib/pyvista/examples/downloads.py	/^def download_reservoir(load=True):  # pragma: no cover$/;"	f
download_reservoir	pyvista/examples/downloads.py	/^def download_reservoir(load=True):  # pragma: no cover$/;"	f
download_rgba_texture	build/lib/pyvista/examples/downloads.py	/^def download_rgba_texture(load=True):  # pragma: no cover$/;"	f
download_rgba_texture	pyvista/examples/downloads.py	/^def download_rgba_texture(load=True):  # pragma: no cover$/;"	f
download_room_cff	build/lib/pyvista/examples/downloads.py	/^def download_room_cff(load=True):  # pragma: no cover$/;"	f
download_room_cff	pyvista/examples/downloads.py	/^def download_room_cff(load=True):  # pragma: no cover$/;"	f
download_room_surface_mesh	build/lib/pyvista/examples/downloads.py	/^def download_room_surface_mesh(load=True):  # pragma: no cover$/;"	f
download_room_surface_mesh	pyvista/examples/downloads.py	/^def download_room_surface_mesh(load=True):  # pragma: no cover$/;"	f
download_saddle_surface	build/lib/pyvista/examples/downloads.py	/^def download_saddle_surface(load=True):  # pragma: no cover$/;"	f
download_saddle_surface	pyvista/examples/downloads.py	/^def download_saddle_surface(load=True):  # pragma: no cover$/;"	f
download_saturn_rings	build/lib/pyvista/examples/planets.py	/^def download_saturn_rings(texture=False, load=True):  # pragma: no cover$/;"	f
download_saturn_rings	pyvista/examples/planets.py	/^def download_saturn_rings(texture=False, load=True):  # pragma: no cover$/;"	f
download_saturn_surface	build/lib/pyvista/examples/planets.py	/^def download_saturn_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_saturn_surface	pyvista/examples/planets.py	/^def download_saturn_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_sea_vase	build/lib/pyvista/examples/downloads.py	/^def download_sea_vase(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_sea_vase	pyvista/examples/downloads.py	/^def download_sea_vase(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_sextant	build/lib/pyvista/examples/vrml.py	/^def download_sextant():  # pragma: no cover$/;"	f
download_sextant	pyvista/examples/vrml.py	/^def download_sextant():  # pragma: no cover$/;"	f
download_shark	build/lib/pyvista/examples/downloads.py	/^def download_shark(load=True):  # pragma: no cover$/;"	f
download_shark	pyvista/examples/downloads.py	/^def download_shark(load=True):  # pragma: no cover$/;"	f
download_sheen_chair	build/lib/pyvista/examples/gltf.py	/^def download_sheen_chair():  # pragma: no cover$/;"	f
download_sheen_chair	pyvista/examples/gltf.py	/^def download_sheen_chair():  # pragma: no cover$/;"	f
download_single_sphere_animation	build/lib/pyvista/examples/downloads.py	/^def download_single_sphere_animation(load=True):  # pragma: no cover$/;"	f
download_single_sphere_animation	pyvista/examples/downloads.py	/^def download_single_sphere_animation(load=True):  # pragma: no cover$/;"	f
download_sky_box_cube_map	build/lib/pyvista/examples/downloads.py	/^def download_sky_box_cube_map(load=True):  # pragma: no cover$/;"	f
download_sky_box_cube_map	pyvista/examples/downloads.py	/^def download_sky_box_cube_map(load=True):  # pragma: no cover$/;"	f
download_sky_box_nz	build/lib/pyvista/examples/downloads.py	/^def download_sky_box_nz(load=True):  # pragma: no cover$/;"	f
download_sky_box_nz	pyvista/examples/downloads.py	/^def download_sky_box_nz(load=True):  # pragma: no cover$/;"	f
download_sky_box_nz_texture	build/lib/pyvista/examples/downloads.py	/^def download_sky_box_nz_texture(load=True):  # pragma: no cover$/;"	f
download_sky_box_nz_texture	pyvista/examples/downloads.py	/^def download_sky_box_nz_texture(load=True):  # pragma: no cover$/;"	f
download_sparse_points	build/lib/pyvista/examples/downloads.py	/^def download_sparse_points(load=True):  # pragma: no cover$/;"	f
download_sparse_points	pyvista/examples/downloads.py	/^def download_sparse_points(load=True):  # pragma: no cover$/;"	f
download_spider	build/lib/pyvista/examples/downloads.py	/^def download_spider(load=True):  # pragma: no cover$/;"	f
download_spider	pyvista/examples/downloads.py	/^def download_spider(load=True):  # pragma: no cover$/;"	f
download_st_helens	build/lib/pyvista/examples/downloads.py	/^def download_st_helens(load=True):  # pragma: no cover$/;"	f
download_st_helens	pyvista/examples/downloads.py	/^def download_st_helens(load=True):  # pragma: no cover$/;"	f
download_stars_cloud_hyg	build/lib/pyvista/examples/downloads.py	/^def download_stars_cloud_hyg(load=True):  # pragma: no cover$/;"	f
download_stars_cloud_hyg	pyvista/examples/downloads.py	/^def download_stars_cloud_hyg(load=True):  # pragma: no cover$/;"	f
download_stars_sky_background	build/lib/pyvista/examples/planets.py	/^def download_stars_sky_background(texture=False, load=True):  # pragma: no cover$/;"	f
download_stars_sky_background	pyvista/examples/planets.py	/^def download_stars_sky_background(texture=False, load=True):  # pragma: no cover$/;"	f
download_structured_grid	build/lib/pyvista/examples/downloads.py	/^def download_structured_grid(load=True):  # pragma: no cover$/;"	f
download_structured_grid	pyvista/examples/downloads.py	/^def download_structured_grid(load=True):  # pragma: no cover$/;"	f
download_structured_grid_two	build/lib/pyvista/examples/downloads.py	/^def download_structured_grid_two(load=True):  # pragma: no cover$/;"	f
download_structured_grid_two	pyvista/examples/downloads.py	/^def download_structured_grid_two(load=True):  # pragma: no cover$/;"	f
download_sun_surface	build/lib/pyvista/examples/planets.py	/^def download_sun_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_sun_surface	pyvista/examples/planets.py	/^def download_sun_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_t3_grid_0	build/lib/pyvista/examples/downloads.py	/^def download_t3_grid_0(load=True):  # pragma: no cover$/;"	f
download_t3_grid_0	pyvista/examples/downloads.py	/^def download_t3_grid_0(load=True):  # pragma: no cover$/;"	f
download_teapot	build/lib/pyvista/examples/downloads.py	/^def download_teapot(load=True):  # pragma: no cover$/;"	f
download_teapot	build/lib/pyvista/examples/vrml.py	/^def download_teapot():  # pragma: no cover$/;"	f
download_teapot	pyvista/examples/downloads.py	/^def download_teapot(load=True):  # pragma: no cover$/;"	f
download_teapot	pyvista/examples/vrml.py	/^def download_teapot():  # pragma: no cover$/;"	f
download_tecplot_ascii	build/lib/pyvista/examples/downloads.py	/^def download_tecplot_ascii(load=True):  # pragma: no cover$/;"	f
download_tecplot_ascii	pyvista/examples/downloads.py	/^def download_tecplot_ascii(load=True):  # pragma: no cover$/;"	f
download_tensors	build/lib/pyvista/examples/downloads.py	/^def download_tensors(load=True):  # pragma: no cover$/;"	f
download_tensors	pyvista/examples/downloads.py	/^def download_tensors(load=True):  # pragma: no cover$/;"	f
download_tetra_dc_mesh	build/lib/pyvista/examples/downloads.py	/^def download_tetra_dc_mesh(load=True):  # pragma: no cover$/;"	f
download_tetra_dc_mesh	pyvista/examples/downloads.py	/^def download_tetra_dc_mesh(load=True):  # pragma: no cover$/;"	f
download_tetrahedron	build/lib/pyvista/examples/downloads.py	/^def download_tetrahedron(load=True):  # pragma: no cover$/;"	f
download_tetrahedron	pyvista/examples/downloads.py	/^def download_tetrahedron(load=True):  # pragma: no cover$/;"	f
download_thermal_probes	build/lib/pyvista/examples/downloads.py	/^def download_thermal_probes(load=True):  # pragma: no cover$/;"	f
download_thermal_probes	pyvista/examples/downloads.py	/^def download_thermal_probes(load=True):  # pragma: no cover$/;"	f
download_topo_global	build/lib/pyvista/examples/downloads.py	/^def download_topo_global(load=True):  # pragma: no cover$/;"	f
download_topo_global	pyvista/examples/downloads.py	/^def download_topo_global(load=True):  # pragma: no cover$/;"	f
download_topo_land	build/lib/pyvista/examples/downloads.py	/^def download_topo_land(load=True):  # pragma: no cover$/;"	f
download_topo_land	pyvista/examples/downloads.py	/^def download_topo_land(load=True):  # pragma: no cover$/;"	f
download_torso	build/lib/pyvista/examples/downloads.py	/^def download_torso(load=True):  # pragma: no cover$/;"	f
download_torso	pyvista/examples/downloads.py	/^def download_torso(load=True):  # pragma: no cover$/;"	f
download_tri_quadratic_hexahedron	build/lib/pyvista/examples/downloads.py	/^def download_tri_quadratic_hexahedron(load=True):  # pragma: no cover$/;"	f
download_tri_quadratic_hexahedron	pyvista/examples/downloads.py	/^def download_tri_quadratic_hexahedron(load=True):  # pragma: no cover$/;"	f
download_trumpet	build/lib/pyvista/examples/downloads.py	/^def download_trumpet(load=True):  # pragma: no cover$/;"	f
download_trumpet	pyvista/examples/downloads.py	/^def download_trumpet(load=True):  # pragma: no cover$/;"	f
download_turbine_blade	build/lib/pyvista/examples/downloads.py	/^def download_turbine_blade(load=True):  # pragma: no cover$/;"	f
download_turbine_blade	pyvista/examples/downloads.py	/^def download_turbine_blade(load=True):  # pragma: no cover$/;"	f
download_unstructured_grid	build/lib/pyvista/examples/downloads.py	/^def download_unstructured_grid(load=True):  # pragma: no cover$/;"	f
download_unstructured_grid	pyvista/examples/downloads.py	/^def download_unstructured_grid(load=True):  # pragma: no cover$/;"	f
download_uranus_surface	build/lib/pyvista/examples/planets.py	/^def download_uranus_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_uranus_surface	pyvista/examples/planets.py	/^def download_uranus_surface(texture=False, load=True):  # pragma: no cover$/;"	f
download_urn	build/lib/pyvista/examples/downloads.py	/^def download_urn(load=True):  # pragma: no cover$/;"	f
download_urn	pyvista/examples/downloads.py	/^def download_urn(load=True):  # pragma: no cover$/;"	f
download_usa	build/lib/pyvista/examples/downloads.py	/^def download_usa(load=True):  # pragma: no cover$/;"	f
download_usa	pyvista/examples/downloads.py	/^def download_usa(load=True):  # pragma: no cover$/;"	f
download_usa_texture	build/lib/pyvista/examples/downloads.py	/^def download_usa_texture(load=True):  # pragma: no cover$/;"	f
download_usa_texture	pyvista/examples/downloads.py	/^def download_usa_texture(load=True):  # pragma: no cover$/;"	f
download_venus_surface	build/lib/pyvista/examples/planets.py	/^def download_venus_surface(atmosphere=True, texture=False, load=True):  # pragma: no cover$/;"	f
download_venus_surface	pyvista/examples/planets.py	/^def download_venus_surface(atmosphere=True, texture=False, load=True):  # pragma: no cover$/;"	f
download_victorian_goblet_face_illusion	build/lib/pyvista/examples/downloads.py	/^def download_victorian_goblet_face_illusion(load=True):  # pragma: no cover$/;"	f
download_victorian_goblet_face_illusion	pyvista/examples/downloads.py	/^def download_victorian_goblet_face_illusion(load=True):  # pragma: no cover$/;"	f
download_vtk	build/lib/pyvista/examples/downloads.py	/^def download_vtk(load=True):  # pragma: no cover$/;"	f
download_vtk	pyvista/examples/downloads.py	/^def download_vtk(load=True):  # pragma: no cover$/;"	f
download_vtk_logo	build/lib/pyvista/examples/downloads.py	/^def download_vtk_logo(load=True):  # pragma: no cover$/;"	f
download_vtk_logo	pyvista/examples/downloads.py	/^def download_vtk_logo(load=True):  # pragma: no cover$/;"	f
download_wavy	build/lib/pyvista/examples/downloads.py	/^def download_wavy(load=True):  # pragma: no cover$/;"	f
download_wavy	pyvista/examples/downloads.py	/^def download_wavy(load=True):  # pragma: no cover$/;"	f
download_whole_body_ct_female	build/lib/pyvista/examples/downloads.py	/^def download_whole_body_ct_female(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_whole_body_ct_female	pyvista/examples/downloads.py	/^def download_whole_body_ct_female(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_whole_body_ct_male	build/lib/pyvista/examples/downloads.py	/^def download_whole_body_ct_male(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_whole_body_ct_male	pyvista/examples/downloads.py	/^def download_whole_body_ct_male(load=True, *, high_resolution=False):  # pragma: no cover$/;"	f
download_woman	build/lib/pyvista/examples/downloads.py	/^def download_woman(load=True):  # pragma: no cover$/;"	f
download_woman	pyvista/examples/downloads.py	/^def download_woman(load=True):  # pragma: no cover$/;"	f
downloads	tests/examples/test_dataset_loader.py	/^from pyvista.examples import downloads$/;"	i
downloads	tests/examples/test_downloads.py	/^from pyvista.examples import downloads$/;"	i
dplot	examples/99-advanced/atomic_orbitals.py	/^dplot = point_cloud.glyph($/;"	v
dragon	examples/02-plot/silhouette.py	/^dragon = examples.download_dragon()$/;"	v
draw_pixels	examples/00-load/create_pixel_art.py	/^def draw_pixels(plotter, pixels, center, color):$/;"	f
drilldown	doc/source/make_external_gallery.py	/^    drilldown=Example($/;"	v
ds	examples/99-advanced/pump_bracket.py	/^ds = dataset.copy()$/;"	v
dubai	examples/01-filter/geodesic.py	/^dubai = land.find_closest_point((0.512642, 0.745898, 0.425255))$/;"	v
dummy_actor	tests/plotting/test_actor.py	/^def dummy_actor(actor):$/;"	f
dw	build/lib/pyvista/trame/jupyter.py	/^        dw = f'{dw}px'$/;"	v
dw	pyvista/trame/jupyter.py	/^        dw = f'{dw}px'$/;"	v
earth	examples/99-advanced/planets.py	/^earth = examples.planets.load_earth(radius=6378.1)$/;"	v
earth_alt	examples/02-plot/background_image.py	/^earth_alt = examples.download_topo_global()$/;"	v
earth_texture	examples/99-advanced/planets.py	/^earth_texture = examples.load_globe_texture()$/;"	v
edge_blocks	build/lib/pyvista/core/utilities/reader.py	/^    def edge_blocks(self):$/;"	m	class:ExodusIIReader
edge_blocks	pyvista/core/utilities/reader.py	/^    def edge_blocks(self):$/;"	m	class:ExodusIIReader
edge_centers	examples/01-filter/cell_centers.py	/^edge_centers = mesh.extract_all_edges().cell_centers().points$/;"	v
edge_color	build/lib/pyvista/plotting/_property.py	/^    def edge_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
edge_color	build/lib/pyvista/plotting/_property.py	/^    def edge_color(self, value):$/;"	m	class:Property
edge_color	build/lib/pyvista/plotting/themes.py	/^    def edge_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
edge_color	build/lib/pyvista/plotting/themes.py	/^    def edge_color(self, edge_color: ColorLike):$/;"	m	class:Theme
edge_color	build/lib/pyvista/plotting/tools.py	/^    edge_color = Color(edge_color, default_color=pyvista.global_theme.edge_color)$/;"	v
edge_color	pyvista/plotting/_property.py	/^    def edge_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
edge_color	pyvista/plotting/_property.py	/^    def edge_color(self, value):$/;"	m	class:Property
edge_color	pyvista/plotting/themes.py	/^    def edge_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
edge_color	pyvista/plotting/themes.py	/^    def edge_color(self, edge_color: ColorLike):$/;"	m	class:Theme
edge_color	pyvista/plotting/tools.py	/^    edge_color = Color(edge_color, default_color=pyvista.global_theme.edge_color)$/;"	v
edge_mask	build/lib/pyvista/core/filters/poly_data.py	/^    def edge_mask(self, angle, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
edge_mask	pyvista/core/filters/poly_data.py	/^    def edge_mask(self, angle, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
edge_opacity	build/lib/pyvista/plotting/_property.py	/^    def edge_opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
edge_opacity	build/lib/pyvista/plotting/_property.py	/^    def edge_opacity(self, value: float):$/;"	m	class:Property
edge_opacity	build/lib/pyvista/plotting/themes.py	/^    def edge_opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
edge_opacity	build/lib/pyvista/plotting/themes.py	/^    def edge_opacity(self, edge_opacity: float):$/;"	m	class:Theme
edge_opacity	pyvista/plotting/_property.py	/^    def edge_opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
edge_opacity	pyvista/plotting/_property.py	/^    def edge_opacity(self, value: float):$/;"	m	class:Property
edge_opacity	pyvista/plotting/themes.py	/^    def edge_opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
edge_opacity	pyvista/plotting/themes.py	/^    def edge_opacity(self, edge_opacity: float):$/;"	m	class:Theme
edges	build/lib/pyvista/core/cell.py	/^    def edges(self: Self) -> list[Cell]:$/;"	m	class:Cell
edges	examples/00-load/create_truss.py	/^edges = np.array($/;"	v
edges	examples/01-filter/extract_edges.py	/^edges = mesh.extract_feature_edges(20)$/;"	v
edges	examples/01-filter/extract_edges.py	/^edges = mesh.extract_feature_edges(45)$/;"	v
edges	examples/01-filter/extract_edges.py	/^edges = mesh.extract_feature_edges(boundary_edges=True, feature_edges=False, manifold_edges=False)$/;"	v
edges	examples/02-plot/shading.py	/^edges = mesh.extract_feature_edges($/;"	v
edges	pyvista/core/cell.py	/^    def edges(self: Self) -> list[Cell]:$/;"	m	class:Cell
edges_override	build/lib/pyvista/core/celltype.py	/^        edges_override='variable',$/;"	v	class:_CellTypeTuple
edges_override	pyvista/core/celltype.py	/^        edges_override='variable',$/;"	v	class:_CellTypeTuple
edges_w_padding	examples/00-load/create_truss.py	/^edges_w_padding = np.vstack((padding, edges.T)).T$/;"	v
eigenvector	examples/99-advanced/warp_by_vector_eigenmodes.py	/^    eigenvector = vr[:, mode_index]$/;"	v
eigh	examples/99-advanced/warp_by_vector_eigenmodes.py	/^from scipy.linalg import eigh$/;"	i
elegantly_launch	build/lib/pyvista/plotting/plotter.py	/^            from pyvista.trame.jupyter import elegantly_launch$/;"	i
elegantly_launch	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.jupyter import elegantly_launch$/;"	i
elegantly_launch	build/lib/pyvista/trame/jupyter.py	/^def elegantly_launch(*args, **kwargs):  # numpydoc ignore=PR01$/;"	f
elegantly_launch	pyvista/plotting/plotter.py	/^            from pyvista.trame.jupyter import elegantly_launch$/;"	i
elegantly_launch	pyvista/trame/__init__.py	/^from pyvista.trame.jupyter import elegantly_launch$/;"	i
elegantly_launch	pyvista/trame/jupyter.py	/^def elegantly_launch(*args, **kwargs):  # numpydoc ignore=PR01$/;"	f
elegantly_launch	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.jupyter import elegantly_launch$/;"	i
element_blocks	build/lib/pyvista/core/utilities/reader.py	/^    def element_blocks(self):$/;"	m	class:ExodusIIReader
element_blocks	pyvista/core/utilities/reader.py	/^    def element_blocks(self):$/;"	m	class:ExodusIIReader
element_sets	build/lib/pyvista/core/utilities/reader.py	/^    def element_sets(self):$/;"	m	class:ExodusIIReader
element_sets	pyvista/core/utilities/reader.py	/^    def element_sets(self):$/;"	m	class:ExodusIIReader
elevated	examples/02-plot/texture.py	/^elevated = curvsurf.elevation()$/;"	v
elevation	build/lib/pyvista/core/filters/data_object.py	/^    def elevation(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
elevation	build/lib/pyvista/plotting/camera.py	/^    def elevation(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
elevation	build/lib/pyvista/plotting/camera.py	/^    def elevation(self, angle):$/;"	m	class:Camera
elevation	examples/02-plot/topo_map.py	/^elevation = examples.download_crater_topo().warp_by_scalar()$/;"	v
elevation	pyvista/core/filters/data_object.py	/^    def elevation(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
elevation	pyvista/plotting/camera.py	/^    def elevation(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
elevation	pyvista/plotting/camera.py	/^    def elevation(self, angle):$/;"	m	class:Camera
ellipsoid	examples/00-load/create_parametric_geometric_objects.py	/^ellipsoid = pv.ParametricEllipsoid(10, 5, 5)$/;"	v
emissive	build/lib/pyvista/plotting/mapper.py	/^    def emissive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
emissive	build/lib/pyvista/plotting/mapper.py	/^    def emissive(self, value: bool) -> None:$/;"	m	class:PointGaussianMapper
emissive	build/lib/pyvista/plotting/themes.py	/^    def emissive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
emissive	build/lib/pyvista/plotting/themes.py	/^    def emissive(self, emissive: bool):$/;"	m	class:_LightingConfig
emissive	examples/02-plot/point_clouds.py	/^    emissive=False,$/;"	v
emissive	examples/02-plot/point_clouds.py	/^    emissive=True,$/;"	v
emissive	examples/02-plot/points_gaussian_scale.py	/^    emissive=False,$/;"	v
emissive	examples/02-plot/points_gaussian_scale.py	/^    emissive=True,$/;"	v
emissive	examples/99-advanced/atomic_orbitals.py	/^    emissive=True,$/;"	v
emissive	pyvista/plotting/mapper.py	/^    def emissive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
emissive	pyvista/plotting/mapper.py	/^    def emissive(self, value: bool) -> None:$/;"	m	class:PointGaussianMapper
emissive	pyvista/plotting/themes.py	/^    def emissive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
emissive	pyvista/plotting/themes.py	/^    def emissive(self, emissive: bool):$/;"	m	class:_LightingConfig
empty	tests/test_meshio.py	/^empty = pv.UnstructuredGrid()$/;"	v
empty_callback	tests/plotting/test_render_window_interactor.py	/^def empty_callback():$/;"	f
empty_poly_cast_to_ugrid	tests/core/test_grid.py	/^def empty_poly_cast_to_ugrid():$/;"	f
enable	build/lib/pyvista/core/utilities/reader.py	/^    def enable(self, name):$/;"	m	class:ExodusIIBlockSet
enable	build/lib/pyvista/plotting/affine_widget.py	/^    def enable(self):$/;"	m	class:AffineWidget3D
enable	build/lib/pyvista/plotting/plotter.py	/^    def enable(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable	build/lib/pyvista/plotting/renderer.py	/^    def enable(self) -> None:$/;"	m	class:Renderer
enable	pyvista/core/utilities/reader.py	/^    def enable(self, name):$/;"	m	class:ExodusIIBlockSet
enable	pyvista/plotting/affine_widget.py	/^    def enable(self):$/;"	m	class:AffineWidget3D
enable	pyvista/plotting/plotter.py	/^    def enable(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable	pyvista/plotting/renderer.py	/^    def enable(self) -> None:$/;"	m	class:Renderer
enable_2d_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_2d_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_2d_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_2d_style(self):$/;"	m	class:RenderWindowInteractor
enable_2d_style	pyvista/plotting/plotter.py	/^    def enable_2d_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_2d_style	pyvista/plotting/render_window_interactor.py	/^    def enable_2d_style(self):$/;"	m	class:RenderWindowInteractor
enable_3_lights	build/lib/pyvista/plotting/plotter.py	/^    def enable_3_lights(self, only_active=False) -> None:$/;"	m	class:BasePlotter
enable_3_lights	pyvista/plotting/plotter.py	/^    def enable_3_lights(self, only_active=False) -> None:$/;"	m	class:BasePlotter
enable_all	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all(self):$/;"	m	class:ExodusIIBlockSet
enable_all	pyvista/core/utilities/reader.py	/^    def enable_all(self):$/;"	m	class:ExodusIIBlockSet
enable_all_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_arrays(self):$/;"	m	class:ExodusIIBlockSet
enable_all_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_arrays(self):$/;"	m	class:ExodusIIBlockSet
enable_all_bases	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_bases(self) -> None:$/;"	m	class:CGNSReader
enable_all_bases	pyvista/core/utilities/reader.py	/^    def enable_all_bases(self) -> None:$/;"	m	class:CGNSReader
enable_all_cell_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_cell_arrays(self) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
enable_all_cell_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_cell_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
enable_all_cell_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_cell_arrays(self) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
enable_all_cell_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_cell_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
enable_all_families	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_families(self) -> None:$/;"	m	class:CGNSReader
enable_all_families	pyvista/core/utilities/reader.py	/^    def enable_all_families(self) -> None:$/;"	m	class:CGNSReader
enable_all_global_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_global_arrays(self) -> None:$/;"	m	class:ExodusIIReader
enable_all_global_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_global_arrays(self) -> None:$/;"	m	class:ExodusIIReader
enable_all_patch_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_patch_arrays(self) -> None:$/;"	m	class:OpenFOAMReader
enable_all_patch_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_patch_arrays(self) -> None:$/;"	m	class:OpenFOAMReader
enable_all_point_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def enable_all_point_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
enable_all_point_arrays	pyvista/core/utilities/reader.py	/^    def enable_all_point_arrays(self) -> None:$/;"	m	class:PointCellDataSelection
enable_anti_aliasing	build/lib/pyvista/plotting/plotter.py	/^    def enable_anti_aliasing(self, aa_type='ssaa', multi_samples=None, all_renderers=True):$/;"	m	class:BasePlotter
enable_anti_aliasing	build/lib/pyvista/plotting/renderer.py	/^    def enable_anti_aliasing(self, aa_type='ssaa'):$/;"	m	class:Renderer
enable_anti_aliasing	pyvista/plotting/plotter.py	/^    def enable_anti_aliasing(self, aa_type='ssaa', multi_samples=None, all_renderers=True):$/;"	m	class:BasePlotter
enable_anti_aliasing	pyvista/plotting/renderer.py	/^    def enable_anti_aliasing(self, aa_type='ssaa'):$/;"	m	class:Renderer
enable_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_array(self, name):$/;"	m	class:ExodusIIBlockSet
enable_array	pyvista/core/utilities/reader.py	/^    def enable_array(self, name):$/;"	m	class:ExodusIIBlockSet
enable_block_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_block_picking(self, callback=None, side='left'):$/;"	m	class:PickingMethods
enable_block_picking	pyvista/plotting/picking.py	/^    def enable_block_picking(self, callback=None, side='left'):$/;"	m	class:PickingMethods
enable_camera_orientation_widget	build/lib/pyvista/plotting/themes.py	/^    def enable_camera_orientation_widget(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
enable_camera_orientation_widget	build/lib/pyvista/plotting/themes.py	/^    def enable_camera_orientation_widget(self, value: bool):$/;"	m	class:Theme
enable_camera_orientation_widget	pyvista/plotting/themes.py	/^    def enable_camera_orientation_widget(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
enable_camera_orientation_widget	pyvista/plotting/themes.py	/^    def enable_camera_orientation_widget(self, value: bool):$/;"	m	class:Theme
enable_cell_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_cell_array(self, name) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
enable_cell_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_cell_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
enable_cell_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_cell_array(self, name):$/;"	m	class:ExodusIIReader
enable_cell_array	pyvista/core/utilities/reader.py	/^    def enable_cell_array(self, name) -> None:  # noqa: D102$/;"	m	class:Nek5000Reader
enable_cell_array	pyvista/core/utilities/reader.py	/^    def enable_cell_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
enable_cell_array	pyvista/core/utilities/reader.py	/^    def enable_cell_array(self, name):$/;"	m	class:ExodusIIReader
enable_cell_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_cell_picking($/;"	m	class:PickingMethods
enable_cell_picking	pyvista/plotting/picking.py	/^    def enable_cell_picking($/;"	m	class:PickingMethods
enable_custom_trackball_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_custom_trackball_style(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_custom_trackball_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_custom_trackball_style($/;"	m	class:RenderWindowInteractor
enable_custom_trackball_style	pyvista/plotting/plotter.py	/^    def enable_custom_trackball_style(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_custom_trackball_style	pyvista/plotting/render_window_interactor.py	/^    def enable_custom_trackball_style($/;"	m	class:RenderWindowInteractor
enable_depth_of_field	build/lib/pyvista/plotting/plotter.py	/^    def enable_depth_of_field(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_depth_of_field	build/lib/pyvista/plotting/renderer.py	/^    def enable_depth_of_field(self, automatic_focal_distance=True) -> None:$/;"	m	class:Renderer
enable_depth_of_field	pyvista/plotting/plotter.py	/^    def enable_depth_of_field(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_depth_of_field	pyvista/plotting/renderer.py	/^    def enable_depth_of_field(self, automatic_focal_distance=True) -> None:$/;"	m	class:Renderer
enable_depth_of_field_pass	build/lib/pyvista/plotting/render_passes.py	/^    def enable_depth_of_field_pass(self, automatic_focal_distance: bool = True):$/;"	m	class:RenderPasses
enable_depth_of_field_pass	pyvista/plotting/render_passes.py	/^    def enable_depth_of_field_pass(self, automatic_focal_distance: bool = True):$/;"	m	class:RenderPasses
enable_depth_peeling	build/lib/pyvista/plotting/plotter.py	/^    def enable_depth_peeling(self, *args, **kwargs) -> bool | None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_depth_peeling	build/lib/pyvista/plotting/renderer.py	/^    def enable_depth_peeling(self, number_of_peels=None, occlusion_ratio=None):$/;"	m	class:Renderer
enable_depth_peeling	pyvista/plotting/plotter.py	/^    def enable_depth_peeling(self, *args, **kwargs) -> bool | None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_depth_peeling	pyvista/plotting/renderer.py	/^    def enable_depth_peeling(self, number_of_peels=None, occlusion_ratio=None):$/;"	m	class:Renderer
enable_displacements	build/lib/pyvista/core/utilities/reader.py	/^    def enable_displacements(self, displacement_magnitude=1.0):$/;"	m	class:ExodusIIReader
enable_displacements	pyvista/core/utilities/reader.py	/^    def enable_displacements(self, displacement_magnitude=1.0):$/;"	m	class:ExodusIIReader
enable_edl_pass	build/lib/pyvista/plotting/render_passes.py	/^    def enable_edl_pass(self):$/;"	m	class:RenderPasses
enable_edl_pass	pyvista/plotting/render_passes.py	/^    def enable_edl_pass(self):$/;"	m	class:RenderPasses
enable_element_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_element_picking($/;"	m	class:PickingMethods
enable_element_picking	pyvista/plotting/picking.py	/^    def enable_element_picking($/;"	m	class:PickingMethods
enable_eye_dome_lighting	build/lib/pyvista/plotting/plotter.py	/^    def enable_eye_dome_lighting(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_eye_dome_lighting	build/lib/pyvista/plotting/renderer.py	/^    def enable_eye_dome_lighting(self) -> None:$/;"	m	class:Renderer
enable_eye_dome_lighting	pyvista/plotting/plotter.py	/^    def enable_eye_dome_lighting(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_eye_dome_lighting	pyvista/plotting/renderer.py	/^    def enable_eye_dome_lighting(self) -> None:$/;"	m	class:Renderer
enable_fly_to_right_click	build/lib/pyvista/plotting/picking.py	/^    def enable_fly_to_right_click(self, callback=None):$/;"	m	class:PickingHelper
enable_fly_to_right_click	pyvista/plotting/picking.py	/^    def enable_fly_to_right_click(self, callback=None):$/;"	m	class:PickingHelper
enable_geodesic_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_geodesic_picking($/;"	m	class:PickingHelper
enable_geodesic_picking	pyvista/plotting/picking.py	/^    def enable_geodesic_picking($/;"	m	class:PickingHelper
enable_global_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_global_array(self, name):$/;"	m	class:ExodusIIReader
enable_global_array	pyvista/core/utilities/reader.py	/^    def enable_global_array(self, name):$/;"	m	class:ExodusIIReader
enable_hidden_line_removal	build/lib/pyvista/plotting/plotter.py	/^    def enable_hidden_line_removal(self, all_renderers=True) -> None:$/;"	m	class:BasePlotter
enable_hidden_line_removal	build/lib/pyvista/plotting/renderer.py	/^    def enable_hidden_line_removal(self) -> None:$/;"	m	class:Renderer
enable_hidden_line_removal	pyvista/plotting/plotter.py	/^    def enable_hidden_line_removal(self, all_renderers=True) -> None:$/;"	m	class:BasePlotter
enable_hidden_line_removal	pyvista/plotting/renderer.py	/^    def enable_hidden_line_removal(self) -> None:$/;"	m	class:Renderer
enable_horizon_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_horizon_picking($/;"	m	class:PickingHelper
enable_horizon_picking	pyvista/plotting/picking.py	/^    def enable_horizon_picking($/;"	m	class:PickingHelper
enable_image_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_image_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_image_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_image_style(self):$/;"	m	class:RenderWindowInteractor
enable_image_style	pyvista/plotting/plotter.py	/^    def enable_image_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_image_style	pyvista/plotting/render_window_interactor.py	/^    def enable_image_style(self):$/;"	m	class:RenderWindowInteractor
enable_joystick_actor_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_joystick_actor_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_joystick_actor_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_joystick_actor_style(self):$/;"	m	class:RenderWindowInteractor
enable_joystick_actor_style	pyvista/plotting/plotter.py	/^    def enable_joystick_actor_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_joystick_actor_style	pyvista/plotting/render_window_interactor.py	/^    def enable_joystick_actor_style(self):$/;"	m	class:RenderWindowInteractor
enable_joystick_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_joystick_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_joystick_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_joystick_style(self):$/;"	m	class:RenderWindowInteractor
enable_joystick_style	pyvista/plotting/plotter.py	/^    def enable_joystick_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_joystick_style	pyvista/plotting/render_window_interactor.py	/^    def enable_joystick_style(self):$/;"	m	class:RenderWindowInteractor
enable_lightkit	build/lib/pyvista/plotting/plotter.py	/^    def enable_lightkit(self, only_active=False) -> None:$/;"	m	class:BasePlotter
enable_lightkit	pyvista/plotting/plotter.py	/^    def enable_lightkit(self, only_active=False) -> None:$/;"	m	class:BasePlotter
enable_merge_points	build/lib/pyvista/core/utilities/reader.py	/^    def enable_merge_points(self):$/;"	m	class:Nek5000Reader
enable_merge_points	pyvista/core/utilities/reader.py	/^    def enable_merge_points(self):$/;"	m	class:Nek5000Reader
enable_mesh_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_mesh_picking($/;"	m	class:PickingMethods
enable_mesh_picking	pyvista/plotting/picking.py	/^    def enable_mesh_picking($/;"	m	class:PickingMethods
enable_parallel_projection	build/lib/pyvista/plotting/camera.py	/^    def enable_parallel_projection(self):$/;"	m	class:Camera
enable_parallel_projection	build/lib/pyvista/plotting/plotter.py	/^    def enable_parallel_projection(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_parallel_projection	build/lib/pyvista/plotting/renderer.py	/^    def enable_parallel_projection(self) -> None:$/;"	m	class:Renderer
enable_parallel_projection	pyvista/plotting/camera.py	/^    def enable_parallel_projection(self):$/;"	m	class:Camera
enable_parallel_projection	pyvista/plotting/plotter.py	/^    def enable_parallel_projection(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_parallel_projection	pyvista/plotting/renderer.py	/^    def enable_parallel_projection(self) -> None:$/;"	m	class:Renderer
enable_patch_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_patch_array(self, name) -> None:$/;"	m	class:OpenFOAMReader
enable_patch_array	pyvista/core/utilities/reader.py	/^    def enable_patch_array(self, name) -> None:$/;"	m	class:OpenFOAMReader
enable_path_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_path_picking($/;"	m	class:PickingHelper
enable_path_picking	pyvista/plotting/picking.py	/^    def enable_path_picking($/;"	m	class:PickingHelper
enable_point_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_point_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
enable_point_array	build/lib/pyvista/core/utilities/reader.py	/^    def enable_point_array(self, name):$/;"	m	class:ExodusIIReader
enable_point_array	pyvista/core/utilities/reader.py	/^    def enable_point_array(self, name) -> None:$/;"	m	class:PointCellDataSelection
enable_point_array	pyvista/core/utilities/reader.py	/^    def enable_point_array(self, name):$/;"	m	class:ExodusIIReader
enable_point_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_point_picking($/;"	m	class:PickingInterface
enable_point_picking	pyvista/plotting/picking.py	/^    def enable_point_picking($/;"	m	class:PickingInterface
enable_rectangle_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_rectangle_picking($/;"	m	class:PickingInterface
enable_rectangle_picking	pyvista/plotting/picking.py	/^    def enable_rectangle_picking($/;"	m	class:PickingInterface
enable_rectangle_through_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_rectangle_through_picking($/;"	m	class:PickingMethods
enable_rectangle_through_picking	pyvista/plotting/picking.py	/^    def enable_rectangle_through_picking($/;"	m	class:PickingMethods
enable_rectangle_visible_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_rectangle_visible_picking($/;"	m	class:PickingMethods
enable_rectangle_visible_picking	pyvista/plotting/picking.py	/^    def enable_rectangle_visible_picking($/;"	m	class:PickingMethods
enable_rubber_band_2d_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_rubber_band_2d_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_rubber_band_2d_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_rubber_band_2d_style(self):$/;"	m	class:RenderWindowInteractor
enable_rubber_band_2d_style	pyvista/plotting/plotter.py	/^    def enable_rubber_band_2d_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_rubber_band_2d_style	pyvista/plotting/render_window_interactor.py	/^    def enable_rubber_band_2d_style(self):$/;"	m	class:RenderWindowInteractor
enable_rubber_band_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_rubber_band_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_rubber_band_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_rubber_band_style(self):$/;"	m	class:RenderWindowInteractor
enable_rubber_band_style	pyvista/plotting/plotter.py	/^    def enable_rubber_band_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_rubber_band_style	pyvista/plotting/render_window_interactor.py	/^    def enable_rubber_band_style(self):$/;"	m	class:RenderWindowInteractor
enable_shadow	build/lib/pyvista/plotting/text.py	/^    def enable_shadow(self) -> None:$/;"	m	class:TextProperty
enable_shadow	pyvista/plotting/text.py	/^    def enable_shadow(self) -> None:$/;"	m	class:TextProperty
enable_shadow_pass	build/lib/pyvista/plotting/render_passes.py	/^    def enable_shadow_pass(self):$/;"	m	class:RenderPasses
enable_shadow_pass	pyvista/plotting/render_passes.py	/^    def enable_shadow_pass(self):$/;"	m	class:RenderPasses
enable_shadows	build/lib/pyvista/plotting/plotter.py	/^    def enable_shadows(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_shadows	build/lib/pyvista/plotting/renderer.py	/^    def enable_shadows(self) -> None:$/;"	m	class:Renderer
enable_shadows	pyvista/plotting/plotter.py	/^    def enable_shadows(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_shadows	pyvista/plotting/renderer.py	/^    def enable_shadows(self) -> None:$/;"	m	class:Renderer
enable_spectral_element_ids	build/lib/pyvista/core/utilities/reader.py	/^    def enable_spectral_element_ids(self):$/;"	m	class:Nek5000Reader
enable_spectral_element_ids	pyvista/core/utilities/reader.py	/^    def enable_spectral_element_ids(self):$/;"	m	class:Nek5000Reader
enable_ssaa_pass	build/lib/pyvista/plotting/render_passes.py	/^    def enable_ssaa_pass(self):$/;"	m	class:RenderPasses
enable_ssaa_pass	pyvista/plotting/render_passes.py	/^    def enable_ssaa_pass(self):$/;"	m	class:RenderPasses
enable_ssao	build/lib/pyvista/plotting/plotter.py	/^    def enable_ssao(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_ssao	build/lib/pyvista/plotting/renderer.py	/^    def enable_ssao(self, radius=0.5, bias=0.005, kernel_size=256, blur=True) -> None:$/;"	m	class:Renderer
enable_ssao	pyvista/plotting/plotter.py	/^    def enable_ssao(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_ssao	pyvista/plotting/renderer.py	/^    def enable_ssao(self, radius=0.5, bias=0.005, kernel_size=256, blur=True) -> None:$/;"	m	class:Renderer
enable_ssao_pass	build/lib/pyvista/plotting/render_passes.py	/^    def enable_ssao_pass(self, radius, bias, kernel_size, blur):$/;"	m	class:RenderPasses
enable_ssao_pass	pyvista/plotting/render_passes.py	/^    def enable_ssao_pass(self, radius, bias, kernel_size, blur):$/;"	m	class:RenderPasses
enable_stereo_render	build/lib/pyvista/plotting/plotter.py	/^    def enable_stereo_render(self) -> None:$/;"	m	class:BasePlotter
enable_stereo_render	pyvista/plotting/plotter.py	/^    def enable_stereo_render(self) -> None:$/;"	m	class:BasePlotter
enable_surface_point_picking	build/lib/pyvista/plotting/picking.py	/^    def enable_surface_point_picking($/;"	m	class:PickingMethods
enable_surface_point_picking	pyvista/plotting/picking.py	/^    def enable_surface_point_picking($/;"	m	class:PickingMethods
enable_terrain_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_terrain_style(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_terrain_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_terrain_style(self, mouse_wheel_zooms: bool | float = True, shift_pans: bool = True):$/;"	m	class:RenderWindowInteractor
enable_terrain_style	pyvista/plotting/plotter.py	/^    def enable_terrain_style(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_terrain_style	pyvista/plotting/render_window_interactor.py	/^    def enable_terrain_style(self, mouse_wheel_zooms: bool | float = True, shift_pans: bool = True):$/;"	m	class:RenderWindowInteractor
enable_trackball_actor_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_trackball_actor_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_trackball_actor_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_trackball_actor_style(self):$/;"	m	class:RenderWindowInteractor
enable_trackball_actor_style	pyvista/plotting/plotter.py	/^    def enable_trackball_actor_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_trackball_actor_style	pyvista/plotting/render_window_interactor.py	/^    def enable_trackball_actor_style(self):$/;"	m	class:RenderWindowInteractor
enable_trackball_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_trackball_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_trackball_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_trackball_style(self):$/;"	m	class:RenderWindowInteractor
enable_trackball_style	pyvista/plotting/plotter.py	/^    def enable_trackball_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_trackball_style	pyvista/plotting/render_window_interactor.py	/^    def enable_trackball_style(self):$/;"	m	class:RenderWindowInteractor
enable_zoom_style	build/lib/pyvista/plotting/plotter.py	/^    def enable_zoom_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_zoom_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def enable_zoom_style(self):$/;"	m	class:RenderWindowInteractor
enable_zoom_style	pyvista/plotting/plotter.py	/^    def enable_zoom_style(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
enable_zoom_style	pyvista/plotting/render_window_interactor.py	/^    def enable_zoom_style(self):$/;"	m	class:RenderWindowInteractor
enabled	build/lib/pyvista/plotting/themes.py	/^    def enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
enabled	build/lib/pyvista/plotting/themes.py	/^    def enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
enabled	build/lib/pyvista/plotting/themes.py	/^    def enabled(self, enabled: bool):$/;"	m	class:_DepthPeelingConfig
enabled	build/lib/pyvista/plotting/themes.py	/^    def enabled(self, enabled: bool):$/;"	m	class:_SilhouetteConfig
enabled	pyvista/plotting/themes.py	/^    def enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
enabled	pyvista/plotting/themes.py	/^    def enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
enabled	pyvista/plotting/themes.py	/^    def enabled(self, enabled: bool):$/;"	m	class:_DepthPeelingConfig
enabled	pyvista/plotting/themes.py	/^    def enabled(self, enabled: bool):$/;"	m	class:_SilhouetteConfig
end_phi	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def end_phi(self: SphereSource) -> float:$/;"	m	class:SphereSource
end_phi	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def end_phi(self: SphereSource, end_phi: float) -> None:$/;"	m	class:SphereSource
end_phi	pyvista/core/utilities/geometric_sources.py	/^    def end_phi(self: SphereSource) -> float:$/;"	m	class:SphereSource
end_phi	pyvista/core/utilities/geometric_sources.py	/^    def end_phi(self: SphereSource, end_phi: float) -> None:$/;"	m	class:SphereSource
end_pick_call_back	build/lib/pyvista/plotting/picking.py	/^        def end_pick_call_back(*args):$/;"	f	function:PickingMethods.enable_mesh_picking
end_pick_call_back	pyvista/plotting/picking.py	/^        def end_pick_call_back(*args):$/;"	f	function:PickingMethods.enable_mesh_picking
end_theta	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def end_theta(self: SphereSource) -> float:$/;"	m	class:SphereSource
end_theta	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def end_theta(self: SphereSource, end_theta: float) -> None:$/;"	m	class:SphereSource
end_theta	examples/02-plot/texture.py	/^    end_theta=270,$/;"	v
end_theta	pyvista/core/utilities/geometric_sources.py	/^    def end_theta(self: SphereSource) -> float:$/;"	m	class:SphereSource
end_theta	pyvista/core/utilities/geometric_sources.py	/^    def end_theta(self: SphereSource, end_theta: float) -> None:$/;"	m	class:SphereSource
endian	build/lib/pyvista/core/utilities/reader.py	/^    def endian(self) -> str:$/;"	m	class:ParticleReader
endian	build/lib/pyvista/core/utilities/reader.py	/^    def endian(self, endian: str):$/;"	m	class:ParticleReader
endian	pyvista/core/utilities/reader.py	/^    def endian(self) -> str:$/;"	m	class:ParticleReader
endian	pyvista/core/utilities/reader.py	/^    def endian(self, endian: str):$/;"	m	class:ParticleReader
engine	examples/03-widgets/multi_slider_widget.py	/^engine = MyCustomRoutine(starting_mesh)$/;"	v
enneper	examples/00-load/create_parametric_geometric_objects.py	/^enneper = pv.ParametricEnneper()$/;"	v
entry	doc/source/make_external_gallery.py	/^    entry=Example($/;"	v
enum	build/lib/pyvista/core/utilities/arrays.py	/^import enum$/;"	i
enum	build/lib/pyvista/core/utilities/misc.py	/^import enum$/;"	i
enum	build/lib/pyvista/core/utilities/reader.py	/^import enum$/;"	i
enum	pyvista/core/utilities/arrays.py	/^import enum$/;"	i
enum	pyvista/core/utilities/misc.py	/^import enum$/;"	i
enum	pyvista/core/utilities/reader.py	/^import enum$/;"	i
enum_cell_type_nr_points_map	build/lib/pyvista/core/utilities/cell_type_helper.py	/^enum_cell_type_nr_points_map = {}$/;"	v
enum_cell_type_nr_points_map	build/lib/pyvista/core/utilities/cells.py	/^    from .cell_type_helper import enum_cell_type_nr_points_map$/;"	i
enum_cell_type_nr_points_map	pyvista/core/utilities/cell_type_helper.py	/^enum_cell_type_nr_points_map = {}$/;"	v
enum_cell_type_nr_points_map	pyvista/core/utilities/cells.py	/^    from .cell_type_helper import enum_cell_type_nr_points_map$/;"	i
epilog	build/lib/pyvista/ext/coverage.py	/^    epilog = __($/;"	v	class:CoverageBuilder
epilog	pyvista/ext/coverage.py	/^    epilog = __($/;"	v	class:CoverageBuilder
error	examples/99-advanced/warp_by_vector_eigenmodes.py	/^    error = np.abs(freq2 - freq1) \/ freq1 * 100.0$/;"	v
error	tests/test_conftest.py	/^    error = _ReportDescriptor()$/;"	v	class:RunResultsReport
errors	tests/namespace/test_errors_namespace.py	/^        import pyvista.errors as errors  # noqa: PLR0402$/;"	i
escape	tests/core/test_validation.py	/^from re import escape$/;"	i
eta	examples/99-advanced/sphere_eversion.py	/^eta = 1$/;"	v
eta	examples/99-advanced/sphere_eversion.py	/^eta = eta_final$/;"	v
eta_final	examples/99-advanced/sphere_eversion.py	/^eta_final = 2  # arbitrary > 1$/;"	v
etas	examples/99-advanced/sphere_eversion.py	/^etas = np.linspace(1, eta_final, n_steps)$/;"	v
etas	examples/99-advanced/sphere_eversion.py	/^etas = np.linspace(eta_final, 1, n_steps + 1)[1:]$/;"	v
eval_at	examples/99-advanced/atomic_orbitals.py	/^eval_at = grid['real_wf'].max() * 0.1$/;"	v
ex	tests/core/test_composite.py	/^from pyvista import examples as ex$/;"	i
ex	tests/core/test_utilities.py	/^from pyvista import examples as ex$/;"	i
example	build/lib/pyvista/core/celltype.py	/^        example='BiQuadraticQuadraticHexahedron',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='BiQuadraticQuadraticWedge',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='BiQuadraticQuadrilateral',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='BiQuadraticTriangle',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='CubicLine',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='HexagonalPrism',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Hexahedron',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Line',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='PentagonalPrism',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Pixel',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='PolyLine',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='PolyVertex',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Polygon',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Polyhedron',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Pyramid',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticEdge',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticHexahedron',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticLinearQuadrilateral',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticLinearWedge',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticPolygon',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticPyramid',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticQuadrilateral',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticTetrahedron',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticTriangle',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='QuadraticWedge',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Quadrilateral',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Tetrahedron',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='TriQuadraticHexahedron',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='TriQuadraticPyramid',$/;"	v
example	build/lib/pyvista/core/celltype.py	/^        example='Triangle',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='TriangleStrip',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Vertex',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Voxel',$/;"	v	class:_CellTypeTuple
example	build/lib/pyvista/core/celltype.py	/^        example='Wedge',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='BiQuadraticQuadraticHexahedron',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='BiQuadraticQuadraticWedge',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='BiQuadraticQuadrilateral',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='BiQuadraticTriangle',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='CubicLine',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='HexagonalPrism',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Hexahedron',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Line',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='PentagonalPrism',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Pixel',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='PolyLine',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='PolyVertex',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Polygon',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Polyhedron',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Pyramid',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticEdge',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticHexahedron',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticLinearQuadrilateral',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticLinearWedge',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticPolygon',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticPyramid',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticQuadrilateral',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticTetrahedron',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticTriangle',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='QuadraticWedge',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Quadrilateral',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Tetrahedron',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='TriQuadraticHexahedron',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='TriQuadraticPyramid',$/;"	v
example	pyvista/core/celltype.py	/^        example='Triangle',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='TriangleStrip',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Vertex',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Voxel',$/;"	v	class:_CellTypeTuple
example	pyvista/core/celltype.py	/^        example='Wedge',$/;"	v	class:_CellTypeTuple
example_cells	examples/00-load/linear_cells.py	/^from pyvista.examples import cells as example_cells$/;"	i
example_cells	tests/core/test_cells.py	/^from pyvista.examples import cells as example_cells$/;"	i
example_with_closed_plotter	tests/plotting/tinypages/samples.py	/^def example_with_closed_plotter():$/;"	f
example_with_empty_plotter	tests/plotting/tinypages/samples.py	/^def example_with_empty_plotter():$/;"	f
examples	build/lib/pyvista/__init__.py	/^    from pyvista import examples as examples$/;"	i
examples	build/lib/pyvista/demos/demos.py	/^from pyvista import examples$/;"	i
examples	build/lib/pyvista/demos/logo.py	/^from pyvista import examples$/;"	i
examples	build/lib/pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
examples	build/lib/pyvista/plotting/widgets.py	/^            from pyvista import examples$/;"	i
examples	examples/00-load/create_platonic_solids.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/create_point_cloud.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/create_pointset.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/create_structured_surface.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/create_surface_draped.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/load_gltf.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/load_vrml.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/read_dolfin.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/read_file.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/read_image.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/read_parallel.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/reader.py	/^from pyvista import examples$/;"	i
examples	examples/00-load/terrain_mesh.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/cell_centers.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/clipping.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/clipping_with_surface.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/compute_normals.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/compute_volume.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/connectivity.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/contouring.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/decimate.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/extract_cells_inside_surface.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/extract_edges.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/gaussian_smoothing.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/geodesic.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/glyphs.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/gradients.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/image_fft.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/integrate_data.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/interpolate.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/mesh_quality.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/project_plane.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/reflect.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/resample.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/rotate.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/slicing.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/streamlines.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/streamlines_2D.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/subdivide.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/surface_smoothing.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/using_filters.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/voxelize.py	/^from pyvista import examples$/;"	i
examples	examples/01-filter/warp_by_vector.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/backface_props.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/background_image.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/bounds.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/cmap.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/depth_of_field.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/depth_peeling.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/edges.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/edl.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/floors.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/ghost_cells.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/image_depth.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/isovalue.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/labels.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/legend.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/lighting_mesh.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/linked.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/lookup_table.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/multi_window.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/opacity.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/orbit.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/ortho_slices.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/pbr.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/plot_over_circular_arc.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/plot_over_line.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/point_cell_scalars.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/point_clouds.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/scalar_bars.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/screenshot.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/shading.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/silhouette.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/ssao.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/texture.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/themes.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/topo_map.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/vector_component.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/vertices.py	/^from pyvista import examples$/;"	i
examples	examples/02-plot/volume.py	/^from pyvista import examples$/;"	i
examples	examples/03-widgets/box_widget.py	/^from pyvista import examples$/;"	i
examples	examples/03-widgets/line_widget.py	/^from pyvista import examples$/;"	i
examples	examples/03-widgets/plane_widget.py	/^from pyvista import examples$/;"	i
examples	examples/03-widgets/slider_bar_widget.py	/^from pyvista import examples$/;"	i
examples	examples/04-lights/actors.py	/^from pyvista import examples$/;"	i
examples	examples/04-lights/light_types.py	/^from pyvista import examples$/;"	i
examples	examples/04-lights/mesh_lighting.py	/^from pyvista import examples$/;"	i
examples	examples/04-lights/plotter_builtins.py	/^from pyvista import examples$/;"	i
examples	examples/04-lights/shadows.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/add_example.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/anatomical_groups.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/antarctica_compare.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/atomic_orbitals.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/fea_hertzian_contact_pressure.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/magnetic_fields.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/openfoam_cooling.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/openfoam_example.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/openfoam_tubes.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/planets.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/plotting_algorithms.py	/^from pyvista import examples$/;"	i
examples	examples/99-advanced/pump_bracket.py	/^from pyvista import examples$/;"	i
examples	examples_trame/advanced/contour.py	/^from pyvista import examples$/;"	i
examples	examples_trame/advanced/custom_ui.py	/^from pyvista import examples$/;"	i
examples	examples_trame/basic/PyVistaLocalView.py	/^from pyvista import examples$/;"	i
examples	examples_trame/basic/PyVistaRemoteLocalView.py	/^from pyvista import examples$/;"	i
examples	examples_trame/basic/PyVistaRemoteView.py	/^from pyvista import examples$/;"	i
examples	examples_trame/basic/mesh_scalars.py	/^from pyvista import examples$/;"	i
examples	examples_trame/basic/multi_views.py	/^from pyvista import examples$/;"	i
examples	examples_trame/basic/ui_template.py	/^from pyvista import examples$/;"	i
examples	pyvista/__init__.py	/^    from pyvista import examples as examples$/;"	i
examples	pyvista/demos/demos.py	/^from pyvista import examples$/;"	i
examples	pyvista/demos/logo.py	/^from pyvista import examples$/;"	i
examples	pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
examples	pyvista/plotting/widgets.py	/^            from pyvista import examples$/;"	i
examples	tests/conftest.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_dataobject.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_dataobject_filters.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_dataset.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_dataset_filters.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_geometric_sources.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_grid.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_imagedata_filters.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_objects.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_polydata.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_polydata_filters.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_pyvista_ndarray.py	/^from pyvista import examples$/;"	i
examples	tests/core/test_reader.py	/^from pyvista import examples$/;"	i
examples	tests/examples/test_dataset_loader.py	/^from pyvista.examples import examples$/;"	i
examples	tests/examples/test_download_files.py	/^from pyvista import examples$/;"	i
examples	tests/examples/test_downloads.py	/^from pyvista import examples$/;"	i
examples	tests/examples/test_examples.py	/^from pyvista import examples$/;"	i
examples	tests/plotting/jupyter/test_trame.py	/^from pyvista import examples$/;"	i
examples	tests/plotting/test_actor.py	/^from pyvista import examples$/;"	i
examples	tests/plotting/test_charts.py	/^from pyvista import examples$/;"	i
examples	tests/plotting/test_plotting.py	/^from pyvista import examples$/;"	i
examples	tests/plotting/test_plotting_utilities.py	/^from pyvista import examples$/;"	i
examples	tests/plotting/test_texture.py	/^from pyvista import examples$/;"	i
examples	tests/plotting/test_widgets.py	/^from pyvista import examples$/;"	i
examples	tests/test_meshio.py	/^from pyvista import examples$/;"	i
examples_local_repository_tmp_dir	tests/examples/test_dataset_loader.py	/^def examples_local_repository_tmp_dir(tmp_path):$/;"	f
exclude_patterns	doc/source/conf.py	/^exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store', '**.ipynb_checkpoints', '_templates*']$/;"	v
exclude_patterns	tests/plotting/tinypages/conf.py	/^exclude_patterns = ['_build']$/;"	v
execute	build/lib/pyvista/plotting/render_window_interactor.py	/^    def execute(self, obj, _event):  # pragma: no cover # numpydoc ignore=PR01,RT01$/;"	m	class:Timer
execute	pyvista/plotting/render_window_interactor.py	/^    def execute(self, obj, _event):  # pragma: no cover # numpydoc ignore=PR01,RT01$/;"	m	class:Timer
existing	doc/source/make_external_gallery.py	/^            existing = existing_fid.read()$/;"	v
existing	doc/source/make_external_gallery.py	/^    existing = ''$/;"	v
expand	examples/04-lights/shadows.py	/^expand = 1.0$/;"	v
expected	tests/core/test_dataset_filters.py	/^        expected=[BLACK, GREEN, BLUE],$/;"	v	class:ComponentModeTestCase
expected	tests/core/test_dataset_filters.py	/^        expected=[BLACK, RED, BLUE],$/;"	v	class:ComponentModeTestCase
expected	tests/core/test_dataset_filters.py	/^        expected=[BLACK, RED, GREEN, BLUE],$/;"	v	class:ComponentModeTestCase
expected	tests/core/test_dataset_filters.py	/^        expected=[BLACK, RED, GREEN],$/;"	v	class:ComponentModeTestCase
expected	tests/core/test_dataset_filters.py	/^        expected=[BLACK],$/;"	v	class:ComponentModeTestCase
expected	tests/core/test_dataset_filters.py	/^        expected=[WHITE, RED, GREEN, BLUE],$/;"	v	class:ComponentModeTestCase
expected	tests/core/test_dataset_filters.py	/^        expected=[WHITE, RED],$/;"	v	class:ComponentModeTestCase
expected	tests/core/test_dataset_filters.py	/^        expected=[WHITE],$/;"	v	class:ComponentModeTestCase
expected_freqs_kHz	examples/99-advanced/warp_by_vector_eigenmodes.py	/^expected_freqs_kHz = np.array([704.8, 949.0, 965.2, 1096.3, 1128.4, 1182.8, 1338.9, 1360.9])$/;"	v
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[BLACK, GREEN, BLUE],$/;"	v	class:ComponentModeTestCase
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[BLACK, RED, GREEN, BLUE],$/;"	v	class:ComponentModeTestCase
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[BLACK],$/;"	v	class:ComponentModeTestCase
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[WHITE, BLUE],$/;"	v	class:ComponentModeTestCase
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[WHITE, GREEN],$/;"	v	class:ComponentModeTestCase
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[WHITE, RED, GREEN, BLUE],$/;"	v	class:ComponentModeTestCase
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[WHITE, RED],$/;"	v	class:ComponentModeTestCase
expected_invert	tests/core/test_dataset_filters.py	/^        expected_invert=[WHITE],$/;"	v	class:ComponentModeTestCase
expected_n_blocks	tests/core/test_dataset_filters.py	/^        expected_n_blocks=2,$/;"	v	class:SplitComponentTestCase
expected_n_blocks	tests/core/test_dataset_filters.py	/^        expected_n_blocks=4,$/;"	v	class:SplitComponentTestCase
expected_output	tests/typing/mypy_plugin/test_plugin.py	/^        expected_output='py:9: error: Argument 1 to "foo" has incompatible type "DuckType"; expected "float"  [arg-type]',$/;"	v
expected_output	tests/typing/mypy_plugin/test_plugin.py	/^        expected_output='py:9: error: Argument 1 to "foo" has incompatible type "DuckType"; expected "int"  [arg-type]',$/;"	v
expected_volume	tests/core/test_dataset_filters.py	/^        expected_volume=[0, 0, 0, 0],$/;"	v	class:SplitComponentTestCase
expected_volume	tests/core/test_dataset_filters.py	/^        expected_volume=[SMALL_VOLUME, BIG_VOLUME],$/;"	v	class:SplitComponentTestCase
expected_volume	tests/core/test_dataset_filters.py	/^        expected_volume=[SMALL_VOLUME, SMALL_VOLUME, BIG_VOLUME, BIG_VOLUME],$/;"	v	class:SplitComponentTestCase
explode	build/lib/pyvista/core/filters/data_set.py	/^    def explode(  # type: ignore[misc]$/;"	m	class:DataSetFilters
explode	build/lib/pyvista/core/pointset.py	/^    def explode(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
explode	pyvista/core/filters/data_set.py	/^    def explode(  # type: ignore[misc]$/;"	m	class:DataSetFilters
explode	pyvista/core/pointset.py	/^    def explode(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
explode_factor	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def explode_factor(self: CubeFacesSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
explode_factor	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def explode_factor(self: CubeFacesSource, factor: float | None) -> None:$/;"	m	class:CubeFacesSource
explode_factor	pyvista/core/utilities/geometric_sources.py	/^    def explode_factor(self: CubeFacesSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
explode_factor	pyvista/core/utilities/geometric_sources.py	/^    def explode_factor(self: CubeFacesSource, factor: float | None) -> None:$/;"	m	class:CubeFacesSource
exploded	examples/99-advanced/add_example.py	/^    exploded = sphere.explode(factor=i \/ (n_frames * 2)).extract_surface()$/;"	v
exponent	build/lib/pyvista/plotting/lights.py	/^    def exponent(self):  # numpydoc ignore=RT01$/;"	m	class:Light
exponent	build/lib/pyvista/plotting/lights.py	/^    def exponent(self, exp):$/;"	m	class:Light
exponent	pyvista/plotting/lights.py	/^    def exponent(self):  # numpydoc ignore=RT01$/;"	m	class:Light
exponent	pyvista/plotting/lights.py	/^    def exponent(self, exp):$/;"	m	class:Light
exponents	examples/04-lights/beam_shape.py	/^exponents = [1, 0.3, 5]$/;"	v
export	build/lib/pyvista/trame/ui/base_viewer.py	/^    def export(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
export	pyvista/trame/ui/base_viewer.py	/^    def export(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
export_gltf	build/lib/pyvista/plotting/plotter.py	/^    def export_gltf(self, filename, inline_data=True, rotate_scene=True, save_normals=True) -> None:$/;"	m	class:BasePlotter
export_gltf	pyvista/plotting/plotter.py	/^    def export_gltf(self, filename, inline_data=True, rotate_scene=True, save_normals=True) -> None:$/;"	m	class:BasePlotter
export_html	build/lib/pyvista/plotting/plotter.py	/^    def export_html(self, filename) -> io.StringIO | None:$/;"	m	class:BasePlotter
export_html	build/lib/pyvista/trame/views.py	/^    def export_html(self):$/;"	m	class:_BasePyVistaView
export_html	pyvista/plotting/plotter.py	/^    def export_html(self, filename) -> io.StringIO | None:$/;"	m	class:BasePlotter
export_html	pyvista/trame/views.py	/^    def export_html(self):$/;"	m	class:_BasePyVistaView
export_obj	build/lib/pyvista/plotting/plotter.py	/^    def export_obj(self, filename) -> None:$/;"	m	class:BasePlotter
export_obj	pyvista/plotting/plotter.py	/^    def export_obj(self, filename) -> None:$/;"	m	class:BasePlotter
export_vrml	build/lib/pyvista/plotting/plotter.py	/^    def export_vrml(self, filename) -> None:$/;"	m	class:BasePlotter
export_vrml	pyvista/plotting/plotter.py	/^    def export_vrml(self, filename) -> None:$/;"	m	class:BasePlotter
export_vtksz	build/lib/pyvista/plotting/plotter.py	/^    def export_vtksz(self, filename='scene-export.vtksz', format='zip') -> str:  # noqa: A002$/;"	m	class:BasePlotter
export_vtksz	pyvista/plotting/plotter.py	/^    def export_vtksz(self, filename='scene-export.vtksz', format='zip') -> str:  # noqa: A002$/;"	m	class:BasePlotter
ext	build/lib/pyvista/__init__.py	/^    from pyvista import ext as ext$/;"	i
ext	pyvista/__init__.py	/^    from pyvista import ext as ext$/;"	i
extend	build/lib/pyvista/core/composite.py	/^    def extend(self: MultiBlock, datasets: Iterable[_TypeMultiBlockLeaf]) -> None:$/;"	m	class:MultiBlock
extend	pyvista/core/composite.py	/^    def extend(self: MultiBlock, datasets: Iterable[_TypeMultiBlockLeaf]) -> None:$/;"	m	class:MultiBlock
extensions	doc/source/conf.py	/^extensions = [$/;"	v
extensions	tests/plotting/tinypages/conf.py	/^extensions = [$/;"	v
extent	build/lib/pyvista/core/grid.py	/^    def extent(self: Self) -> tuple[int, int, int, int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
extent	build/lib/pyvista/core/grid.py	/^    def extent(self: Self, new_extent: VectorLike[int]) -> None:$/;"	m	class:ImageData
extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def extent(self) -> Sequence[int]:$/;"	m	class:ImageGridSource
extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def extent(self, extent: Sequence[int]) -> None:$/;"	m	class:ImageGridSource
extent	pyvista/core/grid.py	/^    def extent(self: Self) -> tuple[int, int, int, int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
extent	pyvista/core/grid.py	/^    def extent(self: Self, new_extent: VectorLike[int]) -> None:$/;"	m	class:ImageData
extent	pyvista/core/utilities/image_sources.py	/^    def extent(self) -> Sequence[int]:$/;"	m	class:ImageGridSource
extent	pyvista/core/utilities/image_sources.py	/^    def extent(self, extent: Sequence[int]) -> None:$/;"	m	class:ImageGridSource
extract_all_edges	build/lib/pyvista/core/filters/data_object.py	/^    def extract_all_edges(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
extract_all_edges	pyvista/core/filters/data_object.py	/^    def extract_all_edges(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
extract_cells	build/lib/pyvista/core/filters/data_object.py	/^            def extract_cells(dataset, ids, active_scalars_info_):$/;"	f	function:DataObjectFilters._clip_with_function
extract_cells	build/lib/pyvista/core/filters/data_set.py	/^    def extract_cells(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_cells	pyvista/core/filters/data_object.py	/^            def extract_cells(dataset, ids, active_scalars_info_):$/;"	f	function:DataObjectFilters._clip_with_function
extract_cells	pyvista/core/filters/data_set.py	/^    def extract_cells(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_cells_by_type	build/lib/pyvista/core/filters/data_set.py	/^    def extract_cells_by_type(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_cells_by_type	pyvista/core/filters/data_set.py	/^    def extract_cells_by_type(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_cells_from_block	build/lib/pyvista/core/filters/data_object.py	/^                    def extract_cells_from_block($/;"	f	function:DataObjectFilters._clip_with_function.extract_crinkle_cells
extract_cells_from_block	pyvista/core/filters/data_object.py	/^                    def extract_cells_from_block($/;"	f	function:DataObjectFilters._clip_with_function.extract_crinkle_cells
extract_cells_from_multiblock	build/lib/pyvista/core/filters/data_object.py	/^                def extract_cells_from_multiblock(multi_in, multi_a, multi_b, active_scalars_info_):$/;"	f	function:DataObjectFilters._clip_with_function.extract_crinkle_cells
extract_cells_from_multiblock	pyvista/core/filters/data_object.py	/^                def extract_cells_from_multiblock(multi_in, multi_a, multi_b, active_scalars_info_):$/;"	f	function:DataObjectFilters._clip_with_function.extract_crinkle_cells
extract_crinkle_cells	build/lib/pyvista/core/filters/data_object.py	/^            def extract_crinkle_cells(dataset, a_, b_, active_scalars_info_):$/;"	f	function:DataObjectFilters._clip_with_function
extract_crinkle_cells	pyvista/core/filters/data_object.py	/^            def extract_crinkle_cells(dataset, a_, b_, active_scalars_info_):$/;"	f	function:DataObjectFilters._clip_with_function
extract_feature_edges	build/lib/pyvista/core/filters/data_set.py	/^    def extract_feature_edges(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_feature_edges	pyvista/core/filters/data_set.py	/^    def extract_feature_edges(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_geometry	build/lib/pyvista/core/filters/composite.py	/^    def extract_geometry(self):$/;"	m	class:CompositeFilters
extract_geometry	build/lib/pyvista/core/filters/data_set.py	/^    def extract_geometry(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_geometry	build/lib/pyvista/core/pointset.py	/^    def extract_geometry(self, *args, **kwargs):$/;"	m	class:PointSet
extract_geometry	pyvista/core/filters/composite.py	/^    def extract_geometry(self):$/;"	m	class:CompositeFilters
extract_geometry	pyvista/core/filters/data_set.py	/^    def extract_geometry(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_geometry	pyvista/core/pointset.py	/^    def extract_geometry(self, *args, **kwargs):$/;"	m	class:PointSet
extract_largest	build/lib/pyvista/core/filters/data_set.py	/^    def extract_largest(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_largest	pyvista/core/filters/data_set.py	/^    def extract_largest(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_node	examples/99-advanced/antarctica_compare.py	/^def extract_node(node):$/;"	f
extract_points	build/lib/pyvista/core/filters/data_set.py	/^    def extract_points(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_points	pyvista/core/filters/data_set.py	/^    def extract_points(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_points_invalid	tests/core/test_dataset_filters.py	/^def extract_points_invalid(sphere):$/;"	f
extract_subset	build/lib/pyvista/core/filters/image_data.py	/^    def extract_subset($/;"	m	class:ImageDataFilters
extract_subset	build/lib/pyvista/core/filters/structured_grid.py	/^    def extract_subset(self, voi, rate=(1, 1, 1), boundary: bool = False):$/;"	m	class:StructuredGridFilters
extract_subset	pyvista/core/filters/image_data.py	/^    def extract_subset($/;"	m	class:ImageDataFilters
extract_subset	pyvista/core/filters/structured_grid.py	/^    def extract_subset(self, voi, rate=(1, 1, 1), boundary: bool = False):$/;"	m	class:StructuredGridFilters
extract_surface	build/lib/pyvista/core/filters/data_set.py	/^    def extract_surface(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_surface	build/lib/pyvista/core/pointset.py	/^    def extract_surface(self, *args, **kwargs):$/;"	m	class:PointSet
extract_surface	pyvista/core/filters/data_set.py	/^    def extract_surface(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_surface	pyvista/core/pointset.py	/^    def extract_surface(self, *args, **kwargs):$/;"	m	class:PointSet
extract_surface_algorithm	build/lib/pyvista/plotting/plotter.py	/^from .utilities.algorithms import extract_surface_algorithm$/;"	i
extract_surface_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import extract_surface_algorithm as extract_surface_algorithm$/;"	i
extract_surface_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def extract_surface_algorithm($/;"	f
extract_surface_algorithm	pyvista/plotting/plotter.py	/^from .utilities.algorithms import extract_surface_algorithm$/;"	i
extract_surface_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import extract_surface_algorithm as extract_surface_algorithm$/;"	i
extract_surface_algorithm	pyvista/plotting/utilities/algorithms.py	/^def extract_surface_algorithm($/;"	f
extract_values	build/lib/pyvista/core/filters/data_set.py	/^    def extract_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_values	pyvista/core/filters/data_set.py	/^    def extract_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
extract_values_values	tests/core/test_dataset_filters.py	/^def extract_values_values():$/;"	f
extracted	examples/01-filter/clipping.py	/^extracted = mesh.clip_box(roi, invert=False)$/;"	v
extracted_with_adjacent_False	tests/core/test_dataset_filters.py	/^def extracted_with_adjacent_False(grid4x4):$/;"	f
extracted_with_adjacent_True	tests/core/test_dataset_filters.py	/^def extracted_with_adjacent_True(grid4x4):$/;"	f
extracted_with_include_cells_False	tests/core/test_dataset_filters.py	/^def extracted_with_include_cells_False(grid4x4):$/;"	f
extrude	build/lib/pyvista/core/filters/poly_data.py	/^    def extrude(self, vector, capping=None, inplace: bool = False, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
extrude	pyvista/core/filters/poly_data.py	/^    def extrude(self, vector, capping=None, inplace: bool = False, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
extrude_rotate	build/lib/pyvista/core/filters/poly_data.py	/^    def extrude_rotate($/;"	m	class:PolyDataFilters
extrude_rotate	pyvista/core/filters/poly_data.py	/^    def extrude_rotate($/;"	m	class:PolyDataFilters
extrude_trim	build/lib/pyvista/core/filters/poly_data.py	/^    def extrude_trim($/;"	m	class:PolyDataFilters
extrude_trim	pyvista/core/filters/poly_data.py	/^    def extrude_trim($/;"	m	class:PolyDataFilters
extruded_disc	examples/01-filter/extrude_trim.py	/^extruded_disc = disc.extrude_trim((0, 0, -1.0), plane)$/;"	v
extruded_disc_all	examples/01-filter/extrude_trim.py	/^extruded_disc_all = disc.extrude_trim((0, 0, -1.0), plane, extrusion='all_edges')$/;"	v
extruded_hills	examples/01-filter/extrude_trim.py	/^extruded_hills = mesh.extrude_trim((0, 0, -1.0), plane)$/;"	v
extruded_line	examples/01-filter/extrude_trim.py	/^extruded_line = line.extrude_trim((0, 0, 1), plane)$/;"	v
eye_dome_lighting	build/lib/pyvista/_plot.py	/^    eye_dome_lighting = kwargs.pop('edl', eye_dome_lighting)$/;"	v
eye_dome_lighting	pyvista/_plot.py	/^    eye_dome_lighting = kwargs.pop('edl', eye_dome_lighting)$/;"	v
face_a	examples/00-load/create_poly.py	/^face_a = [6, 0, 1, 2, 3, 4, 5]$/;"	v
face_b	examples/00-load/create_poly.py	/^face_b = [6, 6, 7, 8, 1, 0, 9]$/;"	v
face_blocks	build/lib/pyvista/core/utilities/reader.py	/^    def face_blocks(self):$/;"	m	class:ExodusIIReader
face_blocks	pyvista/core/utilities/reader.py	/^    def face_blocks(self):$/;"	m	class:ExodusIIReader
face_c	examples/00-load/create_poly.py	/^face_c = [6, 10, 11, 12, 7, 6, 13]$/;"	v
face_colors	build/lib/pyvista/plotting/tools.py	/^        face_colors = np.array($/;"	v
face_colors	pyvista/plotting/tools.py	/^        face_colors = np.array($/;"	v
face_normals	build/lib/pyvista/core/pointset.py	/^    def face_normals(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
face_normals	pyvista/core/pointset.py	/^    def face_normals(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
face_sets	build/lib/pyvista/core/utilities/reader.py	/^    def face_sets(self):$/;"	m	class:ExodusIIReader
face_sets	pyvista/core/utilities/reader.py	/^    def face_sets(self):$/;"	m	class:ExodusIIReader
face_view	examples/02-plot/edges.py	/^face_view = [$/;"	v
faces	build/lib/pyvista/core/cell.py	/^    def faces(self: Self) -> list[Cell]:$/;"	m	class:Cell
faces	build/lib/pyvista/core/pointset.py	/^    def faces(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
faces	build/lib/pyvista/core/pointset.py	/^    def faces(self, faces: CellArrayLike) -> None:$/;"	m	class:PolyData
faces	build/lib/pyvista/demos/logo.py	/^    faces = v_grid_atom_surf.faces.reshape(-1, 5).copy()$/;"	v
faces	examples/00-load/create_poly.py	/^faces = np.concatenate((face_a, face_b, face_c))$/;"	v
faces	examples/00-load/create_poly.py	/^faces = np.hstack($/;"	v
faces	examples/00-load/create_polydata_strips.py	/^faces = trimesh.faces.reshape(-1, 4)$/;"	v
faces	examples/00-load/create_sphere.py	/^faces = []$/;"	v
faces	examples/00-load/wrap_trimesh.py	/^faces = [[0, 1, 2]]$/;"	v
faces	examples/01-filter/extrude_rotate.py	/^faces = np.hstack([[8, 0, 1, 2, 3, 4, 5, 6, 7]])$/;"	v
faces	examples/99-advanced/ray_trace_moeller.py	/^faces = np.array([3, 0, 1, 2])$/;"	v
faces	pyvista/core/cell.py	/^    def faces(self: Self) -> list[Cell]:$/;"	m	class:Cell
faces	pyvista/core/pointset.py	/^    def faces(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
faces	pyvista/core/pointset.py	/^    def faces(self, faces: CellArrayLike) -> None:$/;"	m	class:PolyData
faces	pyvista/demos/logo.py	/^    faces = v_grid_atom_surf.faces.reshape(-1, 5).copy()$/;"	v
faces_override	build/lib/pyvista/core/celltype.py	/^        faces_override='variable',$/;"	v	class:_CellTypeTuple
faces_override	pyvista/core/celltype.py	/^        faces_override='variable',$/;"	v	class:_CellTypeTuple
factor	examples/00-load/create_point_cloud.py	/^    factor=0.15,$/;"	v
failed	tests/test_conftest.py	/^    failed = _ReportDescriptor()$/;"	v	class:RunResultsReport
failures	tests/check_doctest_names.py	/^    failures = check_doctests(verbose=args.verbose, respect_skips=args.respect_skips)$/;"	v
family	build/lib/pyvista/plotting/themes.py	/^    def family(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_Font
family	build/lib/pyvista/plotting/themes.py	/^    def family(self, family: str):$/;"	m	class:_Font
family	pyvista/plotting/themes.py	/^    def family(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_Font
family	pyvista/plotting/themes.py	/^    def family(self, family: str):$/;"	m	class:_Font
family_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def family_array_names(self) -> list[str]:$/;"	m	class:CGNSReader
family_array_names	pyvista/core/utilities/reader.py	/^    def family_array_names(self) -> list[str]:$/;"	m	class:CGNSReader
family_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def family_array_status(self, name) -> bool:$/;"	m	class:CGNSReader
family_array_status	pyvista/core/utilities/reader.py	/^    def family_array_status(self, name) -> bool:$/;"	m	class:CGNSReader
faulthandler	doc/source/conf.py	/^import faulthandler$/;"	i
feature_angle	build/lib/pyvista/plotting/themes.py	/^    def feature_angle(self) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
feature_angle	build/lib/pyvista/plotting/themes.py	/^    def feature_angle(self, feature_angle: float | None):$/;"	m	class:_SilhouetteConfig
feature_angle	examples/02-plot/shading.py	/^    feature_angle=30,$/;"	v
feature_angle	pyvista/plotting/themes.py	/^    def feature_angle(self) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
feature_angle	pyvista/plotting/themes.py	/^    def feature_angle(self, feature_angle: float | None):$/;"	m	class:_SilhouetteConfig
felupe	doc/source/make_external_gallery.py	/^    felupe=Example($/;"	v
fetch_all_dataset_loaders	doc/source/make_tables.py	/^    def fetch_all_dataset_loaders(cls) -> Iterator[tuple[str, _DatasetLoader]]:$/;"	m	class:DatasetCardFetcher
fetch_all_dataset_objects	doc/source/make_tables.py	/^    def fetch_all_dataset_objects(cls) -> Iterator[tuple[str, Iterable[DatasetObject]]]:$/;"	m	class:DatasetCardFetcher
fetch_and_filter	doc/source/make_tables.py	/^    def fetch_and_filter(cls, filter_func: Callable[..., bool]) -> list[str]:$/;"	m	class:DatasetCardFetcher
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:CellQualityInfoTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:CellQualityMeasuresTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:ColorClassificationTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:ColorSchemeTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:ColorTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:DatasetGalleryCarousel
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:DocTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:LineStyleTable
fetch_data	doc/source/make_tables.py	/^    def fetch_data(cls):$/;"	m	class:MarkerStyleTable
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls) -> list[str]:$/;"	m	class:DatasetGalleryCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:AllDatasetsCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:BuiltinCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:CubemapCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:DownloadsCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:ExplicitStructuredGridCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:ImageData2DCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:ImageData3DCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:ImageDataCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:MedicalCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:MiscCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:MultiBlockCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:MultiBlockHeteroCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:MultiBlockHomoCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:MultiBlockSingleCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:PlanetsCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:PointCloudCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:PointSetCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:PolyDataCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:RectilinearGridCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:StructuredGridCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:SurfaceMeshCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:TextureCarousel
fetch_dataset_names	doc/source/make_tables.py	/^    def fetch_dataset_names(cls):$/;"	m	class:UnstructuredGridCarousel
fetch_dataset_names_by_datatype	doc/source/make_tables.py	/^    def fetch_dataset_names_by_datatype(cls, datatype) -> Iterator[str]:$/;"	m	class:DatasetCardFetcher
fetch_dataset_names_by_module	doc/source/make_tables.py	/^    def fetch_dataset_names_by_module(cls, module) -> Iterator[str]:$/;"	m	class:DatasetCardFetcher
fetch_multiblock	doc/source/make_tables.py	/^    def fetch_multiblock(cls, kind: Literal['hetero', 'homo', 'single']):$/;"	m	class:DatasetCardFetcher
ffmpeg_failed	tests/plotting/test_plotting.py	/^    ffmpeg_failed = True$/;"	v
ffmpeg_failed	tests/plotting/test_plotting.py	/^ffmpeg_failed = False$/;"	v
fft	build/lib/pyvista/core/filters/image_data.py	/^    def fft(self, output_scalars_name=None, progress_bar: bool = False):$/;"	m	class:ImageDataFilters
fft	pyvista/core/filters/image_data.py	/^    def fft(self, output_scalars_name=None, progress_bar: bool = False):$/;"	m	class:ImageDataFilters
fft_image	examples/01-filter/image_fft.py	/^fft_image = image.fft()$/;"	v
field_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import field_array as field_array$/;"	i
field_array	build/lib/pyvista/core/utilities/arrays.py	/^def field_array(obj: DataSet | _vtk.vtkDataSet, name: str) -> pyvista_ndarray | None:$/;"	f
field_array	pyvista/core/utilities/__init__.py	/^from .arrays import field_array as field_array$/;"	i
field_array	pyvista/core/utilities/arrays.py	/^def field_array(obj: DataSet | _vtk.vtkDataSet, name: str) -> pyvista_ndarray | None:$/;"	f
field_data	build/lib/pyvista/core/dataobject.py	/^    def field_data(self: Self) -> DataSetAttributes:$/;"	m	class:DataObject
field_data	pyvista/core/dataobject.py	/^    def field_data(self: Self) -> DataSetAttributes:$/;"	m	class:DataObject
field_grid_extra_values_grid_template	doc/source/make_tables.py	/^    field_grid_extra_values_grid_template = _aligned_dedent($/;"	v	class:DatasetCard
field_grid_extra_values_item_template	doc/source/make_tables.py	/^    field_grid_extra_values_item_template = _aligned_dedent($/;"	v	class:DatasetCard
field_grid_template	doc/source/make_tables.py	/^    field_grid_template = _aligned_dedent($/;"	v	class:DatasetCard
figsize	examples/02-plot/plot_over_line.py	/^    figsize=(10, 5),$/;"	v
figure	build/lib/pyvista/plotting/charts.py	/^    def figure(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
figure	pyvista/plotting/charts.py	/^    def figure(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
figure8klein	examples/00-load/create_parametric_geometric_objects.py	/^figure8klein = pv.ParametricFigure8Klein()$/;"	v
figure_rst	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^        from sphinx_gallery.scrapers import figure_rst$/;"	i
figure_rst	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    from sphinx_gallery.scrapers import figure_rst$/;"	i
figure_rst	pyvista/plotting/utilities/sphinx_gallery.py	/^        from sphinx_gallery.scrapers import figure_rst$/;"	i
figure_rst	pyvista/plotting/utilities/sphinx_gallery.py	/^    from sphinx_gallery.scrapers import figure_rst$/;"	i
file_from_files	build/lib/pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import file_from_files$/;"	i
file_from_files	build/lib/pyvista/examples/downloads.py	/^def file_from_files(target_path, fnames):$/;"	f
file_from_files	pyvista/examples/_dataset_loader.py	/^        from pyvista.examples.downloads import file_from_files$/;"	i
file_from_files	pyvista/examples/downloads.py	/^def file_from_files(target_path, fnames):$/;"	f
fileio	tests/core/test_reader.py	/^    from pyvista.core.utilities import fileio$/;"	i
fileio	tests/core/test_utilities.py	/^from pyvista.core.utilities import fileio$/;"	i
filename	build/lib/pyvista/ext/plot_directive.py	/^    def filename(self):$/;"	m	class:ImageFile
filename	examples/00-load/read_file.py	/^filename = examples.planefile$/;"	v
filename	examples/00-load/read_parallel.py	/^filename = examples.download_blood_vessels(load=False)$/;"	v
filename	examples/00-load/reader.py	/^filename = examples.download_naca(load=False)$/;"	v
filename	examples/00-load/reader.py	/^filename = examples.download_wavy(load=False)$/;"	v
filename	examples/02-plot/isovalue.py	/^filename = 'isovalue.gif'$/;"	v
filename	examples/02-plot/movie.py	/^filename = 'sphere-shrinking.mp4'$/;"	v
filename	examples/02-plot/screenshot.py	/^filename = examples.planefile$/;"	v
filename	examples/99-advanced/add_example.py	/^filename = examples.download_file('bunny.ply')$/;"	v
filename	examples/99-advanced/openfoam_example.py	/^filename = examples.download_cavity(load=False)$/;"	v
filename	pyvista/ext/plot_directive.py	/^    def filename(self):$/;"	m	class:ImageFile
files_func	build/lib/pyvista/examples/downloads.py	/^    def files_func(name):  # pragma: no cover$/;"	m	class:_WholeBodyCTUtilities
files_func	build/lib/pyvista/examples/downloads.py	/^    files_func=_cylinder_crossflow_files_func,$/;"	v
files_func	build/lib/pyvista/examples/downloads.py	/^    files_func=_dataset_can_files_func,$/;"	v
files_func	build/lib/pyvista/examples/downloads.py	/^    files_func=_doorman_files_func,$/;"	v
files_func	build/lib/pyvista/examples/downloads.py	/^    files_func=_sky_box_cube_map_files_func,$/;"	v
files_func	pyvista/examples/downloads.py	/^    def files_func(name):  # pragma: no cover$/;"	m	class:_WholeBodyCTUtilities
files_func	pyvista/examples/downloads.py	/^    files_func=_cylinder_crossflow_files_func,$/;"	v
files_func	pyvista/examples/downloads.py	/^    files_func=_dataset_can_files_func,$/;"	v
files_func	pyvista/examples/downloads.py	/^    files_func=_doorman_files_func,$/;"	v
files_func	pyvista/examples/downloads.py	/^    files_func=_sky_box_cube_map_files_func,$/;"	v
files_func	tests/examples/test_dataset_loader.py	/^    def files_func():$/;"	f	function:test_dataset_loader_from_nested_files_and_directory
files_func	tests/examples/test_dataset_loader.py	/^    def files_func():$/;"	f	function:test_multi_file_loader
fill	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def fill(self: PolygonSource) -> bool:$/;"	m	class:PolygonSource
fill	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def fill(self: PolygonSource, fill: bool) -> None:$/;"	m	class:PolygonSource
fill	pyvista/core/utilities/geometric_sources.py	/^    def fill(self: PolygonSource) -> bool:$/;"	m	class:PolygonSource
fill	pyvista/core/utilities/geometric_sources.py	/^    def fill(self: PolygonSource, fill: bool) -> None:$/;"	m	class:PolygonSource
fill_holes	build/lib/pyvista/core/filters/poly_data.py	/^    def fill_holes($/;"	m	class:PolyDataFilters
fill_holes	pyvista/core/filters/poly_data.py	/^    def fill_holes($/;"	m	class:PolyDataFilters
fill_shape	examples/00-load/create_sphere.py	/^    fill_shape=False,$/;"	v
filter_labels	examples/99-advanced/anatomical_groups.py	/^def filter_labels(label_names: list[str], search_terms: list[str]):$/;"	f
final	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import final$/;"	i
final	doc/source/make_tables.py	/^from typing import final$/;"	i
final	pyvista/examples/_dataset_loader.py	/^from typing import final$/;"	i
final_argument_whitespace	build/lib/pyvista/ext/plot_directive.py	/^    final_argument_whitespace = False$/;"	v	class:PlotDirective
final_argument_whitespace	build/lib/pyvista/ext/viewer_directive.py	/^    final_argument_whitespace = True$/;"	v	class:OfflineViewerDirective
final_argument_whitespace	pyvista/ext/plot_directive.py	/^    final_argument_whitespace = False$/;"	v	class:PlotDirective
final_argument_whitespace	pyvista/ext/viewer_directive.py	/^    final_argument_whitespace = True$/;"	v	class:OfflineViewerDirective
finalize	build/lib/pyvista/plotting/picking.py	/^        def finalize(picked):$/;"	f	function:PickingMethods.enable_rectangle_through_picking
finalize	build/lib/pyvista/plotting/picking.py	/^        def finalize(picked):$/;"	f	function:PickingMethods.enable_rectangle_visible_picking
finalize	pyvista/plotting/picking.py	/^        def finalize(picked):$/;"	f	function:PickingMethods.enable_rectangle_through_picking
finalize	pyvista/plotting/picking.py	/^        def finalize(picked):$/;"	f	function:PickingMethods.enable_rectangle_visible_picking
find_cells_along_line	build/lib/pyvista/core/dataset.py	/^    def find_cells_along_line($/;"	m	class:DataSet
find_cells_along_line	build/lib/pyvista/core/pointset.py	/^    def find_cells_along_line(self, *args, **kwargs):$/;"	m	class:PointSet
find_cells_along_line	pyvista/core/dataset.py	/^    def find_cells_along_line($/;"	m	class:DataSet
find_cells_along_line	pyvista/core/pointset.py	/^    def find_cells_along_line(self, *args, **kwargs):$/;"	m	class:PointSet
find_cells_intersecting_line	build/lib/pyvista/core/dataset.py	/^    def find_cells_intersecting_line($/;"	m	class:DataSet
find_cells_intersecting_line	pyvista/core/dataset.py	/^    def find_cells_intersecting_line($/;"	m	class:DataSet
find_cells_within_bounds	build/lib/pyvista/core/dataset.py	/^    def find_cells_within_bounds(self: Self, bounds: BoundsTuple) -> NumpyArray[int]:$/;"	m	class:DataSet
find_cells_within_bounds	pyvista/core/dataset.py	/^    def find_cells_within_bounds(self: Self, bounds: BoundsTuple) -> NumpyArray[int]:$/;"	m	class:DataSet
find_closest_cell	build/lib/pyvista/core/dataset.py	/^    def find_closest_cell($/;"	m	class:DataSet
find_closest_cell	pyvista/core/dataset.py	/^    def find_closest_cell($/;"	m	class:DataSet
find_closest_point	build/lib/pyvista/core/dataset.py	/^    def find_closest_point(self: Self, point: Iterable[float], n: Literal[1] = 1) -> int: ...$/;"	m	class:DataSet
find_closest_point	build/lib/pyvista/core/dataset.py	/^    def find_closest_point(self: Self, point: Iterable[float], n: int = ...) -> VectorLike[int]: ...$/;"	m	class:DataSet
find_closest_point	build/lib/pyvista/core/dataset.py	/^    def find_closest_point(self: Self, point: Iterable[float], n: int = 1) -> int | VectorLike[int]:$/;"	m	class:DataSet
find_closest_point	pyvista/core/dataset.py	/^    def find_closest_point(self: Self, point: Iterable[float], n: Literal[1] = 1) -> int: ...$/;"	m	class:DataSet
find_closest_point	pyvista/core/dataset.py	/^    def find_closest_point(self: Self, point: Iterable[float], n: int = ...) -> VectorLike[int]: ...$/;"	m	class:DataSet
find_closest_point	pyvista/core/dataset.py	/^    def find_closest_point(self: Self, point: Iterable[float], n: int = 1) -> int | VectorLike[int]:$/;"	m	class:DataSet
find_containing_cell	build/lib/pyvista/core/dataset.py	/^    def find_containing_cell($/;"	m	class:DataSet
find_containing_cell	pyvista/core/dataset.py	/^    def find_containing_cell($/;"	m	class:DataSet
find_seealso_refs	doc/source/make_tables.py	/^        def find_seealso_refs(func: FunctionType) -> list[str]:$/;"	f	function:DatasetCard._generate_cross_references
finish	build/lib/pyvista/ext/coverage.py	/^    def finish(self) -> None:$/;"	m	class:CoverageBuilder
finish	pyvista/ext/coverage.py	/^    def finish(self) -> None:$/;"	m	class:CoverageBuilder
first_line	doc/source/make_tables.py	/^        first_line = lines.pop(0) if omit_first_line else None$/;"	v
fit_line_to_points	build/lib/pyvista/core/utilities/__init__.py	/^from .points import fit_line_to_points as fit_line_to_points$/;"	i
fit_line_to_points	build/lib/pyvista/core/utilities/points.py	/^def fit_line_to_points($/;"	f
fit_line_to_points	pyvista/core/utilities/__init__.py	/^from .points import fit_line_to_points as fit_line_to_points$/;"	i
fit_line_to_points	pyvista/core/utilities/points.py	/^def fit_line_to_points($/;"	f
fit_line_to_points	tests/core/test_utilities.py	/^from pyvista.core.utilities import fit_line_to_points$/;"	i
fit_plane_to_points	build/lib/pyvista/core/utilities/__init__.py	/^from .points import fit_plane_to_points as fit_plane_to_points$/;"	i
fit_plane_to_points	build/lib/pyvista/core/utilities/points.py	/^def fit_plane_to_points($/;"	f
fit_plane_to_points	pyvista/core/utilities/__init__.py	/^from .points import fit_plane_to_points as fit_plane_to_points$/;"	i
fit_plane_to_points	pyvista/core/utilities/points.py	/^def fit_plane_to_points($/;"	f
fit_plane_to_points	tests/core/test_utilities.py	/^from pyvista.core.utilities import fit_plane_to_points$/;"	i
fix_edit_link_button	build/lib/pyvista/core/utilities/docs.py	/^    def fix_edit_link_button(link: str) -> str | None:$/;"	f	function:pv_html_page_context
fix_edit_link_button	pyvista/core/utilities/docs.py	/^    def fix_edit_link_button(link: str) -> str | None:$/;"	f	function:pv_html_page_context
flaky_test	tests/conftest.py	/^def flaky_test($/;"	f
flaky_test	tests/core/test_dataset_filters.py	/^from tests.conftest import flaky_test$/;"	i
flaky_test	tests/examples/test_downloads.py	/^from tests.conftest import flaky_test$/;"	i
flaky_test	tests/plotting/test_tinypages.py	/^from tests.conftest import flaky_test$/;"	i
flaky_test	tests/plotting/test_widgets.py	/^from tests.conftest import flaky_test$/;"	i
flatten	build/lib/pyvista/core/composite.py	/^    def flatten($/;"	m	class:MultiBlock
flatten	pyvista/core/composite.py	/^    def flatten($/;"	m	class:MultiBlock
flem	doc/source/make_external_gallery.py	/^    flem=Example($/;"	v
flip_faces	build/lib/pyvista/core/filters/poly_data.py	/^    def flip_faces(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
flip_faces	pyvista/core/filters/poly_data.py	/^    def flip_faces(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
flip_normal	build/lib/pyvista/core/filters/data_object.py	/^    def flip_normal(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_normal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def flip_normal(self: PlaneSource) -> None:$/;"	m	class:PlaneSource
flip_normal	pyvista/core/filters/data_object.py	/^    def flip_normal(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_normal	pyvista/core/utilities/geometric_sources.py	/^    def flip_normal(self: PlaneSource) -> None:$/;"	m	class:PlaneSource
flip_normal_vectors	build/lib/pyvista/core/filters/poly_data.py	/^    def flip_normal_vectors(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
flip_normal_vectors	pyvista/core/filters/poly_data.py	/^    def flip_normal_vectors(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
flip_normals	build/lib/pyvista/core/filters/poly_data.py	/^    def flip_normals(self):$/;"	m	class:PolyDataFilters
flip_normals	pyvista/core/filters/poly_data.py	/^    def flip_normals(self):$/;"	m	class:PolyDataFilters
flip_x	build/lib/pyvista/core/filters/data_object.py	/^    def flip_x(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_x	build/lib/pyvista/core/utilities/transform.py	/^    def flip_x($/;"	m	class:Transform
flip_x	build/lib/pyvista/plotting/texture.py	/^    def flip_x(self) -> Texture:$/;"	m	class:Texture
flip_x	pyvista/core/filters/data_object.py	/^    def flip_x(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_x	pyvista/core/utilities/transform.py	/^    def flip_x($/;"	m	class:Transform
flip_x	pyvista/plotting/texture.py	/^    def flip_x(self) -> Texture:$/;"	m	class:Texture
flip_y	build/lib/pyvista/core/filters/data_object.py	/^    def flip_y(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_y	build/lib/pyvista/core/utilities/transform.py	/^    def flip_y($/;"	m	class:Transform
flip_y	build/lib/pyvista/plotting/texture.py	/^    def flip_y(self) -> Texture:$/;"	m	class:Texture
flip_y	pyvista/core/filters/data_object.py	/^    def flip_y(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_y	pyvista/core/utilities/transform.py	/^    def flip_y($/;"	m	class:Transform
flip_y	pyvista/plotting/texture.py	/^    def flip_y(self) -> Texture:$/;"	m	class:Texture
flip_z	build/lib/pyvista/core/filters/data_object.py	/^    def flip_z(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_z	build/lib/pyvista/core/utilities/transform.py	/^    def flip_z($/;"	m	class:Transform
flip_z	pyvista/core/filters/data_object.py	/^    def flip_z(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
flip_z	pyvista/core/utilities/transform.py	/^    def flip_z($/;"	m	class:Transform
float_rgb	build/lib/pyvista/plotting/colors.py	/^    def float_rgb(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Color
float_rgb	pyvista/plotting/colors.py	/^    def float_rgb(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Color
float_rgba	build/lib/pyvista/plotting/colors.py	/^    def float_rgba(self) -> tuple[float, float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Color
float_rgba	pyvista/plotting/colors.py	/^    def float_rgba(self) -> tuple[float, float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Color
floats	tests/core/test_dataobject_filters.py	/^from hypothesis.strategies import floats$/;"	i
floats	tests/core/test_dataset_filters.py	/^from hypothesis.strategies import floats$/;"	i
floor	examples/04-lights/actors.py	/^floor = pv.Plane(center=(*cow.center[:2], cow.bounds[-2]), i_size=30, j_size=25)$/;"	v
floor_color	build/lib/pyvista/plotting/themes.py	/^    def floor_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
floor_color	build/lib/pyvista/plotting/themes.py	/^    def floor_color(self, floor_color: ColorLike):$/;"	m	class:Theme
floor_color	pyvista/plotting/themes.py	/^    def floor_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
floor_color	pyvista/plotting/themes.py	/^    def floor_color(self, floor_color: ColorLike):$/;"	m	class:Theme
flow_a	examples/99-advanced/antarctica_compare.py	/^flow_a = a.point_data['ssavelocity'].copy()$/;"	v
flow_b	examples/99-advanced/antarctica_compare.py	/^flow_b = b.point_data['ssavelocity'].copy()$/;"	v
fluid	examples_trame/basic/PyVistaLocalView.py	/^            fluid=True,$/;"	v
fluid	examples_trame/basic/file_viewer.py	/^            fluid=True,$/;"	v
fluid	examples_trame/basic/multi_views.py	/^            fluid=True,$/;"	v
fluid_mesh	examples/01-filter/streamlines_2D.py	/^fluid_mesh = mesh[0]$/;"	v
fly_to	build/lib/pyvista/plotting/plotter.py	/^    def fly_to(self, point):$/;"	m	class:BasePlotter
fly_to	build/lib/pyvista/plotting/render_window_interactor.py	/^    def fly_to(self, renderer, point):$/;"	m	class:RenderWindowInteractor
fly_to	pyvista/plotting/plotter.py	/^    def fly_to(self, point):$/;"	m	class:BasePlotter
fly_to	pyvista/plotting/render_window_interactor.py	/^    def fly_to(self, renderer, point):$/;"	m	class:RenderWindowInteractor
fly_to_mouse_position	build/lib/pyvista/plotting/picking.py	/^    def fly_to_mouse_position(self, focus=False):$/;"	m	class:PickingHelper
fly_to_mouse_position	pyvista/plotting/picking.py	/^    def fly_to_mouse_position(self, focus=False):$/;"	m	class:PickingHelper
fmt	build/lib/pyvista/plotting/themes.py	/^    def fmt(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_Font
fmt	build/lib/pyvista/plotting/themes.py	/^    def fmt(self, fmt: str):$/;"	m	class:_Font
fmt	examples/01-filter/connectivity.py	/^    fmt='%.f',$/;"	v
fmt	examples/02-plot/scalar_bars.py	/^    fmt='%.1f',$/;"	v
fmt	pyvista/plotting/themes.py	/^    def fmt(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_Font
fmt	pyvista/plotting/themes.py	/^    def fmt(self, fmt: str):$/;"	m	class:_Font
focal_point	build/lib/pyvista/plotting/camera.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
focal_point	build/lib/pyvista/plotting/camera.py	/^    def focal_point(self, point):$/;"	m	class:Camera
focal_point	build/lib/pyvista/plotting/lights.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Light
focal_point	build/lib/pyvista/plotting/lights.py	/^    def focal_point(self, pos):$/;"	m	class:Light
focal_point	build/lib/pyvista/plotting/renderer.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
focal_point	build/lib/pyvista/plotting/renderer.py	/^    def focal_point(self, value) -> None:$/;"	m	class:CameraPosition
focal_point	examples/04-lights/beam_shape.py	/^    focal_point = center[0] - 1, center[1], center[2]$/;"	v
focal_point	examples/04-lights/shadows.py	/^    focal_point=(0, 0, 0),$/;"	v
focal_point	examples/04-lights/shadows.py	/^    focal_point=(0, 1, 0),$/;"	v
focal_point	pyvista/plotting/camera.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
focal_point	pyvista/plotting/camera.py	/^    def focal_point(self, point):$/;"	m	class:Camera
focal_point	pyvista/plotting/lights.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Light
focal_point	pyvista/plotting/lights.py	/^    def focal_point(self, pos):$/;"	m	class:Light
focal_point	pyvista/plotting/renderer.py	/^    def focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
focal_point	pyvista/plotting/renderer.py	/^    def focal_point(self, value) -> None:$/;"	m	class:CameraPosition
focus	examples/04-lights/actors.py	/^    focus = rot120 @ focus$/;"	v
focus	examples/04-lights/actors.py	/^focus = (-0.5, -0.5, 0)$/;"	v
font	build/lib/pyvista/plotting/themes.py	/^    def font(self) -> _Font:  # numpydoc ignore=RT01$/;"	m	class:Theme
font	build/lib/pyvista/plotting/themes.py	/^    def font(self, config: _Font):$/;"	m	class:Theme
font	pyvista/plotting/themes.py	/^    def font(self) -> _Font:  # numpydoc ignore=RT01$/;"	m	class:Theme
font	pyvista/plotting/themes.py	/^    def font(self, config: _Font):$/;"	m	class:Theme
font_family	build/lib/pyvista/plotting/text.py	/^    def font_family(self) -> str | None:$/;"	m	class:TextProperty
font_family	build/lib/pyvista/plotting/text.py	/^    def font_family(self, font_family: str | None):$/;"	m	class:TextProperty
font_family	examples/02-plot/scalar_bars.py	/^    font_family='arial',$/;"	v
font_family	pyvista/plotting/text.py	/^    def font_family(self) -> str | None:$/;"	m	class:TextProperty
font_family	pyvista/plotting/text.py	/^    def font_family(self, font_family: str | None):$/;"	m	class:TextProperty
font_size	build/lib/pyvista/plotting/text.py	/^    def font_size(self) -> int:$/;"	m	class:TextProperty
font_size	build/lib/pyvista/plotting/text.py	/^    def font_size(self, font_size: int):$/;"	m	class:TextProperty
font_size	examples/00-load/create_polyhedron.py	/^    font_size=20,$/;"	v
font_size	examples/00-load/create_sphere.py	/^    font_size=30,$/;"	v
font_size	examples/01-filter/image_fft_perlin_noise.py	/^    font_size=26,$/;"	v
font_size	examples/99-advanced/warp_by_vector_eigenmodes.py	/^        font_size=10,$/;"	v
font_size	pyvista/plotting/text.py	/^    def font_size(self) -> int:$/;"	m	class:TextProperty
font_size	pyvista/plotting/text.py	/^    def font_size(self, font_size: int):$/;"	m	class:TextProperty
foo	tests/plotting/test_regression.py	/^    class foo:$/;"	c	function:test_commpare_images_raises
foo_sphere	examples/99-advanced/extending_pyvista.py	/^foo_sphere = FooData(pyvista.Sphere(theta_resolution=100, phi_resolution=100))$/;"	v
foo_sphere	examples/99-advanced/extending_pyvista.py	/^foo_sphere = pyvista.Sphere(theta_resolution=100, phi_resolution=100)$/;"	v
foot_bones	tests/core/test_dataset_filters.py	/^def foot_bones():$/;"	f
footer_template	doc/source/make_tables.py	/^    footer_template = _aligned_dedent($/;"	v	class:DatasetCard
forge	doc/source/make_external_gallery.py	/^    forge=Example($/;"	v
format	doc/source/make_external_gallery.py	/^    def format(self):  # noqa: D102$/;"	m	class:Example
format_array	build/lib/pyvista/core/dataset.py	/^            def format_array($/;"	f	function:DataSet._repr_html_
format_array	build/lib/pyvista/core/objects.py	/^            def format_array(key):$/;"	f	function:Table._repr_html_
format_array	pyvista/core/dataset.py	/^            def format_array($/;"	f	function:DataSet._repr_html_
format_array	pyvista/core/objects.py	/^            def format_array(key):$/;"	f	function:Table._repr_html_
format_icon	doc/source/make_external_gallery.py	/^def format_icon(title, link, image):  # noqa: D103$/;"	f
format_list	doc/source/make_tables.py	/^        def format_list(obj):$/;"	f	function:CellQualityInfoTable.get_row
format_number	doc/source/make_tables.py	/^        def format_number(num):$/;"	f	function:CellQualityInfoTable.get_row
frame_color	build/lib/pyvista/plotting/text.py	/^    def frame_color(self) -> Color:$/;"	m	class:TextProperty
frame_color	build/lib/pyvista/plotting/text.py	/^    def frame_color(self, color):$/;"	m	class:TextProperty
frame_color	pyvista/plotting/text.py	/^    def frame_color(self) -> Color:$/;"	m	class:TextProperty
frame_color	pyvista/plotting/text.py	/^    def frame_color(self, color):$/;"	m	class:TextProperty
frame_width	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def frame_width(self: CubeFacesSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
frame_width	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def frame_width(self: CubeFacesSource, width: float | None) -> None:$/;"	m	class:CubeFacesSource
frame_width	build/lib/pyvista/plotting/text.py	/^    def frame_width(self) -> int:$/;"	m	class:TextProperty
frame_width	build/lib/pyvista/plotting/text.py	/^    def frame_width(self, width: int):$/;"	m	class:TextProperty
frame_width	pyvista/core/utilities/geometric_sources.py	/^    def frame_width(self: CubeFacesSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
frame_width	pyvista/core/utilities/geometric_sources.py	/^    def frame_width(self: CubeFacesSource, width: float | None) -> None:$/;"	m	class:CubeFacesSource
frame_width	pyvista/plotting/text.py	/^    def frame_width(self) -> int:$/;"	m	class:TextProperty
frame_width	pyvista/plotting/text.py	/^    def frame_width(self, width: int):$/;"	m	class:TextProperty
freq	examples/01-filter/image_fft_perlin_noise.py	/^freq = [10, 5, 0]$/;"	v
freq	examples/01-filter/image_fft_perlin_noise.py	/^freq = np.fft.fftfreq(sampled.dimensions[0], sampled.spacing[0])$/;"	v
freq	examples/01-filter/sampling_functions_2d.py	/^freq = [0.689, 0.562, 0.683]$/;"	v
freq	examples/01-filter/sampling_functions_3d.py	/^freq = (1, 1, 1)$/;"	v
freqs	examples/99-advanced/warp_by_vector_eigenmodes.py	/^freqs = omegas \/ (2 * np.pi)$/;"	v
frog	examples/02-plot/volume.py	/^frog = examples.download_frog()$/;"	v
frog_tissues	tests/core/test_imagedata_filters.py	/^def frog_tissues():$/;"	f
frog_tissues_contour	tests/core/test_dataset_filters.py	/^def frog_tissues_contour(frog_tissues_image):$/;"	f
frog_tissues_image	tests/core/test_dataset_filters.py	/^def frog_tissues_image():$/;"	f
frogtissuesfile	build/lib/pyvista/examples/examples.py	/^frogtissuesfile = str(Path(dir_path) \/ 'frog_tissues.vti')$/;"	v
frogtissuesfile	pyvista/examples/examples.py	/^frogtissuesfile = str(Path(dir_path) \/ 'frog_tissues.vti')$/;"	v
from	doc/source/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
from	doc/source/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
from	tests/plotting/tinypages/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
from	tests/plotting/tinypages/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
from_any	build/lib/pyvista/core/utilities/misc.py	/^    def from_any(cls: type[T], value: AnnotatedIntEnum | int | str) -> T:$/;"	m	class:AnnotatedIntEnum
from_any	pyvista/core/utilities/misc.py	/^    def from_any(cls: type[T], value: AnnotatedIntEnum | int | str) -> T:$/;"	m	class:AnnotatedIntEnum
from_arrays	build/lib/pyvista/core/cell.py	/^    def from_arrays($/;"	m	class:CellArray
from_arrays	pyvista/core/cell.py	/^    def from_arrays($/;"	m	class:CellArray
from_dict	build/lib/pyvista/plotting/colors.py	/^    def from_dict(cls, dict_):  # numpydoc ignore=RT01$/;"	m	class:Color
from_dict	build/lib/pyvista/plotting/themes.py	/^    def from_dict(cls, dict_):$/;"	m	class:_ThemeConfig
from_dict	pyvista/plotting/colors.py	/^    def from_dict(cls, dict_):  # numpydoc ignore=RT01$/;"	m	class:Color
from_dict	pyvista/plotting/themes.py	/^    def from_dict(cls, dict_):$/;"	m	class:_ThemeConfig
from_irregular_cells	build/lib/pyvista/core/cell.py	/^    def from_irregular_cells($/;"	m	class:CellArray
from_irregular_cells	pyvista/core/cell.py	/^    def from_irregular_cells($/;"	m	class:CellArray
from_irregular_faces	build/lib/pyvista/core/pointset.py	/^    def from_irregular_faces(cls, points: MatrixLike[float], faces: Sequence[VectorLike[int]]):$/;"	m	class:PolyData
from_irregular_faces	pyvista/core/pointset.py	/^    def from_irregular_faces(cls, points: MatrixLike[float], faces: Sequence[VectorLike[int]]):$/;"	m	class:PolyData
from_meshio	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import from_meshio as from_meshio$/;"	i
from_meshio	build/lib/pyvista/core/utilities/fileio.py	/^def from_meshio(mesh: meshio.Mesh) -> UnstructuredGrid:$/;"	f
from_meshio	build/lib/pyvista/core/utilities/helpers.py	/^from .fileio import from_meshio$/;"	i
from_meshio	pyvista/core/utilities/__init__.py	/^from .fileio import from_meshio as from_meshio$/;"	i
from_meshio	pyvista/core/utilities/fileio.py	/^def from_meshio(mesh: meshio.Mesh) -> UnstructuredGrid:$/;"	f
from_meshio	pyvista/core/utilities/helpers.py	/^from .fileio import from_meshio$/;"	i
from_paraview_pvcc	build/lib/pyvista/plotting/camera.py	/^    def from_paraview_pvcc(cls, filename: str | Path) -> Camera:$/;"	m	class:Camera
from_paraview_pvcc	pyvista/plotting/camera.py	/^    def from_paraview_pvcc(cls, filename: str | Path) -> Camera:$/;"	m	class:Camera
from_regular_cells	build/lib/pyvista/core/cell.py	/^    def from_regular_cells($/;"	m	class:CellArray
from_regular_cells	pyvista/core/cell.py	/^    def from_regular_cells($/;"	m	class:CellArray
from_regular_faces	build/lib/pyvista/core/pointset.py	/^    def from_regular_faces($/;"	m	class:PolyData
from_regular_faces	pyvista/core/pointset.py	/^    def from_regular_faces($/;"	m	class:PolyData
from_str	build/lib/pyvista/core/utilities/misc.py	/^    def from_str(cls: type[T], input_str: str) -> T:$/;"	m	class:AnnotatedIntEnum
from_str	build/lib/pyvista/plotting/opts.py	/^    def from_str(cls, input_str):$/;"	m	class:InterpolationType
from_str	pyvista/core/utilities/misc.py	/^    def from_str(cls: type[T], input_str: str) -> T:$/;"	m	class:AnnotatedIntEnum
from_str	pyvista/plotting/opts.py	/^    def from_str(cls, input_str):$/;"	m	class:InterpolationType
from_vtk	build/lib/pyvista/plotting/lights.py	/^    def from_vtk(cls, vtk_light):$/;"	m	class:Light
from_vtk	pyvista/plotting/lights.py	/^    def from_vtk(cls, vtk_light):$/;"	m	class:Light
frustum	build/lib/pyvista/plotting/picking.py	/^    def frustum(self) -> _vtk.vtkPlanes:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
frustum	pyvista/plotting/picking.py	/^    def frustum(self) -> _vtk.vtkPlanes:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
frustum_mesh	build/lib/pyvista/plotting/picking.py	/^    def frustum_mesh(self) -> pyvista.PolyData:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
frustum_mesh	pyvista/plotting/picking.py	/^    def frustum_mesh(self) -> pyvista.PolyData:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
full_screen	build/lib/pyvista/_plot.py	/^        full_screen=full_screen,$/;"	v
full_screen	build/lib/pyvista/plotting/themes.py	/^    def full_screen(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
full_screen	build/lib/pyvista/plotting/themes.py	/^    def full_screen(self, value: bool):$/;"	m	class:Theme
full_screen	pyvista/_plot.py	/^        full_screen=full_screen,$/;"	v
full_screen	pyvista/plotting/themes.py	/^    def full_screen(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
full_screen	pyvista/plotting/themes.py	/^    def full_screen(self, value: bool):$/;"	m	class:Theme
fun	tests/plotting/test_theme.py	/^    def fun(plotter):$/;"	f	function:test_save_before_close_callback
func	build/lib/pyvista/examples/downloads.py	/^        def func():$/;"	f	function:_WholeBodyCTUtilities.files_func
func	pyvista/examples/downloads.py	/^        def func():$/;"	f	function:_WholeBodyCTUtilities.files_func
functools	build/lib/pyvista/core/filters/composite.py	/^import functools$/;"	i
functools	build/lib/pyvista/core/filters/data_object.py	/^import functools$/;"	i
functools	build/lib/pyvista/core/filters/data_set.py	/^import functools$/;"	i
functools	build/lib/pyvista/examples/_dataset_loader.py	/^import functools$/;"	i
functools	build/lib/pyvista/examples/downloads.py	/^import functools$/;"	i
functools	pyvista/core/filters/composite.py	/^import functools$/;"	i
functools	pyvista/core/filters/data_object.py	/^import functools$/;"	i
functools	pyvista/core/filters/data_set.py	/^import functools$/;"	i
functools	pyvista/examples/_dataset_loader.py	/^import functools$/;"	i
functools	pyvista/examples/downloads.py	/^import functools$/;"	i
functools	tests/conftest.py	/^import functools$/;"	i
functools	tests/core/test_dataset_filters.py	/^import functools$/;"	i
furniture	examples/03-widgets/line_widget.py	/^furniture = examples.download_kitchen(split=True)$/;"	v
gamma	build/lib/pyvista/core/utilities/reader.py	/^    def gamma(self):$/;"	m	class:MultiBlockPlot3DReader
gamma	build/lib/pyvista/core/utilities/reader.py	/^    def gamma(self, val) -> None:$/;"	m	class:MultiBlockPlot3DReader
gamma	pyvista/core/utilities/reader.py	/^    def gamma(self):$/;"	m	class:MultiBlockPlot3DReader
gamma	pyvista/core/utilities/reader.py	/^    def gamma(self, val) -> None:$/;"	m	class:MultiBlockPlot3DReader
gastro	examples/99-advanced/anatomical_groups.py	/^gastro = [$/;"	v
gaussian_smooth	build/lib/pyvista/core/filters/image_data.py	/^    def gaussian_smooth($/;"	m	class:ImageDataFilters
gaussian_smooth	pyvista/core/filters/image_data.py	/^    def gaussian_smooth($/;"	m	class:ImageDataFilters
gc	tests/plotting/conftest.py	/^import gc$/;"	i
gc	tests/plotting/test_collection.py	/^import gc$/;"	i
gears	examples/02-plot/bounds.py	/^gears = examples.download_gears()$/;"	v
geemap	doc/source/make_external_gallery.py	/^    geemap=Example($/;"	v
gemgis	doc/source/make_external_gallery.py	/^    gemgis=Example($/;"	v
generate	doc/source/make_tables.py	/^    def generate(cls):$/;"	m	class:DocTable
generate	doc/source/make_tables.py	/^    def generate(self):$/;"	m	class:DatasetCard
generate	doc/source/make_tables.py	/^    def generate(self):$/;"	m	class:_BaseDatasetBadge
generate_alphabet_index	doc/source/make_tables.py	/^    def generate_alphabet_index(cls, dataset_names):$/;"	m	class:DatasetCardFetcher
generate_dataset_type	doc/source/make_tables.py	/^    def generate_dataset_type(loader: _DatasetLoader):$/;"	m	class:DatasetPropsGenerator
generate_datasource_links	doc/source/make_tables.py	/^    def generate_datasource_links(loader: _DatasetLoader) -> str | None:$/;"	m	class:DatasetPropsGenerator
generate_dimensions	doc/source/make_tables.py	/^    def generate_dimensions(loader):$/;"	m	class:DatasetPropsGenerator
generate_file_ext	doc/source/make_tables.py	/^    def generate_file_ext(loader: _SingleFilePropsProtocol | _MultiFilePropsProtocol):$/;"	m	class:DatasetPropsGenerator
generate_file_size	doc/source/make_tables.py	/^    def generate_file_size(loader: _DatasetLoader):$/;"	m	class:DatasetPropsGenerator
generate_ids	build/lib/pyvista/core/dataset.py	/^        def generate_ids(i: int, connections: str) -> _vtk.vtkIdList | None:$/;"	f	function:DataSet.cell_neighbors
generate_ids	pyvista/core/dataset.py	/^        def generate_ids(i: int, connections: str) -> _vtk.vtkIdList | None:$/;"	f	function:DataSet.cell_neighbors
generate_images	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^def generate_images(image_path_iterator: Iterator[str], dynamic: bool = False) -> list[str]:$/;"	f
generate_images	pyvista/plotting/utilities/sphinx_gallery.py	/^def generate_images(image_path_iterator: Iterator[str], dynamic: bool = False) -> list[str]:$/;"	f
generate_img	doc/source/make_tables.py	/^    def generate_img(color_scheme, img_path):$/;"	m	class:ColorSchemeTable
generate_img	doc/source/make_tables.py	/^    def generate_img(line_style, img_path):$/;"	m	class:LineStyleTable
generate_img	doc/source/make_tables.py	/^    def generate_img(marker_style, img_path):$/;"	m	class:MarkerStyleTable
generate_length	doc/source/make_tables.py	/^    def generate_length(loader):$/;"	m	class:DatasetPropsGenerator
generate_n_arrays	doc/source/make_tables.py	/^    def generate_n_arrays(loader):$/;"	m	class:DatasetPropsGenerator
generate_n_cells	doc/source/make_tables.py	/^    def generate_n_cells(loader):$/;"	m	class:DatasetPropsGenerator
generate_n_points	doc/source/make_tables.py	/^    def generate_n_points(loader):$/;"	m	class:DatasetPropsGenerator
generate_num_files	doc/source/make_tables.py	/^    def generate_num_files(loader: _DatasetLoader):$/;"	m	class:DatasetPropsGenerator
generate_orbital_path	build/lib/pyvista/plotting/plotter.py	/^    def generate_orbital_path($/;"	m	class:BasePlotter
generate_orbital_path	pyvista/plotting/plotter.py	/^    def generate_orbital_path($/;"	m	class:BasePlotter
generate_plane	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.helpers import generate_plane$/;"	i
generate_plane	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.helpers import generate_plane$/;"	i
generate_plane	build/lib/pyvista/core/utilities/__init__.py	/^from .helpers import generate_plane as generate_plane$/;"	i
generate_plane	build/lib/pyvista/core/utilities/helpers.py	/^def generate_plane(normal: VectorLike[float], origin: VectorLike[float]):$/;"	f
generate_plane	build/lib/pyvista/plotting/widgets.py	/^from pyvista.core.utilities.helpers import generate_plane$/;"	i
generate_plane	pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.helpers import generate_plane$/;"	i
generate_plane	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.helpers import generate_plane$/;"	i
generate_plane	pyvista/core/utilities/__init__.py	/^from .helpers import generate_plane as generate_plane$/;"	i
generate_plane	pyvista/core/utilities/helpers.py	/^def generate_plane(normal: VectorLike[float], origin: VectorLike[float]):$/;"	f
generate_plane	pyvista/plotting/widgets.py	/^from pyvista.core.utilities.helpers import generate_plane$/;"	i
generate_plane	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import generate_plane  # noqa: F401$/;"	i
generate_points	examples/00-load/create_point_cloud.py	/^def generate_points(subset=0.02):$/;"	f
generate_reader_type	doc/source/make_tables.py	/^    def generate_reader_type(loader: _SingleFilePropsProtocol | _MultiFilePropsProtocol):$/;"	m	class:DatasetPropsGenerator
generate_rst_all_cards	doc/source/make_tables.py	/^    def generate_rst_all_cards(cls):$/;"	m	class:DatasetCardFetcher
generate_spacing	doc/source/make_tables.py	/^    def generate_spacing(loader):$/;"	m	class:DatasetPropsGenerator
generic_filter	build/lib/pyvista/core/filters/composite.py	/^    def generic_filter(  # type:ignore[misc]$/;"	m	class:CompositeFilters
generic_filter	pyvista/core/filters/composite.py	/^    def generic_filter(  # type:ignore[misc]$/;"	m	class:CompositeFilters
geodesic	build/lib/pyvista/core/filters/poly_data.py	/^    def geodesic($/;"	m	class:PolyDataFilters
geodesic	pyvista/core/filters/poly_data.py	/^    def geodesic($/;"	m	class:PolyDataFilters
geodesic_distance	build/lib/pyvista/core/filters/poly_data.py	/^    def geodesic_distance($/;"	m	class:PolyDataFilters
geodesic_distance	pyvista/core/filters/poly_data.py	/^    def geodesic_distance($/;"	m	class:PolyDataFilters
geom	examples/01-filter/glyphs.py	/^geom = pv.Arrow()  # This could be any dataset$/;"	v
geom	examples/99-advanced/atomic_orbitals.py	/^    geom=pv.Sphere(theta_resolution=8, phi_resolution=8),$/;"	v
geometric	build/lib/pyvista/core/pointset.py	/^        def geometric(ind):$/;"	f	function:ExplicitStructuredGrid.neighbors
geometric	pyvista/core/pointset.py	/^        def geometric(ind):$/;"	f	function:ExplicitStructuredGrid.neighbors
geometry_parameters	examples/99-advanced/warp_by_vector_eigenmodes.py	/^geometry_parameters = {'a': l1 \/ 2.0, 'b': l2 \/ 2.0, 'c': l3 \/ 2.0}$/;"	v
geoms	examples/01-filter/glyphs_table.py	/^geoms = [pv.ParametricSuperToroid(n1=n1, n2=n2) for n1, n2 in params]$/;"	v
geovista	doc/source/make_external_gallery.py	/^    geovista=Example($/;"	v
get	build/lib/pyvista/core/composite.py	/^    def get($/;"	m	class:MultiBlock
get	build/lib/pyvista/core/datasetattributes.py	/^    def get(self: Self, key: str, value: Any | None = None) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
get	build/lib/pyvista/core/objects.py	/^    def get(self, index):$/;"	m	class:Table
get	pyvista/core/composite.py	/^    def get($/;"	m	class:MultiBlock
get	pyvista/core/datasetattributes.py	/^    def get(self: Self, key: str, value: Any | None = None) -> pyvista_ndarray | None:$/;"	m	class:DataSetAttributes
get	pyvista/core/objects.py	/^    def get(self, index):$/;"	m	class:Table
get_actor_prop	build/lib/pyvista/plotting/axes_assembly.py	/^    def get_actor_prop(self, name: str):$/;"	m	class:AxesAssembly
get_actor_prop	pyvista/plotting/axes_assembly.py	/^    def get_actor_prop(self, name: str):$/;"	m	class:AxesAssembly
get_angle	build/lib/pyvista/plotting/affine_widget.py	/^def get_angle(v1, v2):$/;"	f
get_angle	pyvista/plotting/affine_widget.py	/^def get_angle(v1, v2):$/;"	f
get_angle	tests/plotting/test_widgets.py	/^from pyvista.plotting.affine_widget import get_angle$/;"	i
get_args	build/lib/pyvista/core/_validation/check.py	/^from typing import get_args$/;"	i
get_args	build/lib/pyvista/core/utilities/geometric_sources.py	/^from typing import get_args$/;"	i
get_args	doc/source/make_tables.py	/^from typing import get_args$/;"	i
get_args	pyvista/core/_validation/check.py	/^from typing import get_args$/;"	i
get_args	pyvista/core/utilities/geometric_sources.py	/^from typing import get_args$/;"	i
get_args	tests/core/test_dataobject_filters.py	/^from typing import get_args$/;"	i
get_args	tests/core/test_validation.py	/^from typing import get_args$/;"	i
get_array	build/lib/pyvista/core/dataset.py	/^    def get_array($/;"	m	class:DataSet
get_array	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import get_array$/;"	i
get_array	build/lib/pyvista/core/datasetattributes.py	/^    def get_array(self: Self, key: str | int) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes
get_array	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	build/lib/pyvista/core/objects.py	/^from .utilities.arrays import get_array$/;"	i
get_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import get_array as get_array$/;"	i
get_array	build/lib/pyvista/core/utilities/arrays.py	/^def get_array($/;"	f
get_array	build/lib/pyvista/plotting/_plotting.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	build/lib/pyvista/plotting/widgets.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	pyvista/core/dataset.py	/^    def get_array($/;"	m	class:DataSet
get_array	pyvista/core/dataset.py	/^from .utilities.arrays import get_array$/;"	i
get_array	pyvista/core/datasetattributes.py	/^    def get_array(self: Self, key: str | int) -> pyvista_ndarray:$/;"	m	class:DataSetAttributes
get_array	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	pyvista/core/objects.py	/^from .utilities.arrays import get_array$/;"	i
get_array	pyvista/core/utilities/__init__.py	/^from .arrays import get_array as get_array$/;"	i
get_array	pyvista/core/utilities/arrays.py	/^def get_array($/;"	f
get_array	pyvista/plotting/_plotting.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	pyvista/plotting/widgets.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import get_array$/;"	i
get_array	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_array  # noqa: F401$/;"	i
get_array_association	build/lib/pyvista/core/dataset.py	/^    def get_array_association($/;"	m	class:DataSet
get_array_association	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import get_array_association$/;"	i
get_array_association	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import get_array_association as get_array_association$/;"	i
get_array_association	build/lib/pyvista/core/utilities/arrays.py	/^def get_array_association($/;"	f
get_array_association	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	build/lib/pyvista/plotting/widgets.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	pyvista/core/dataset.py	/^    def get_array_association($/;"	m	class:DataSet
get_array_association	pyvista/core/dataset.py	/^from .utilities.arrays import get_array_association$/;"	i
get_array_association	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	pyvista/core/utilities/__init__.py	/^from .arrays import get_array_association as get_array_association$/;"	i
get_array_association	pyvista/core/utilities/arrays.py	/^def get_array_association($/;"	f
get_array_association	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	pyvista/plotting/widgets.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import get_array_association$/;"	i
get_array_association	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_array_association  # noqa: F401$/;"	i
get_array_vtk	tests/core/test_utilities.py	/^def get_array_vtk(hexbeam):$/;"	f
get_block	build/lib/pyvista/core/composite.py	/^    def get_block($/;"	m	class:MultiBlock
get_block	build/lib/pyvista/plotting/composite_mapper.py	/^    def get_block(self, index):$/;"	m	class:CompositeAttributes
get_block	pyvista/core/composite.py	/^    def get_block($/;"	m	class:MultiBlock
get_block	pyvista/plotting/composite_mapper.py	/^    def get_block(self, index):$/;"	m	class:CompositeAttributes
get_block_name	build/lib/pyvista/core/composite.py	/^    def get_block_name(self: MultiBlock, index: int) -> str:$/;"	m	class:MultiBlock
get_block_name	pyvista/core/composite.py	/^    def get_block_name(self: MultiBlock, index: int) -> str:$/;"	m	class:MultiBlock
get_cavity_reader	tests/core/test_reader.py	/^def get_cavity_reader():$/;"	f
get_cell	build/lib/pyvista/core/dataset.py	/^    def get_cell(self: Self, index: int) -> pyvista.Cell:$/;"	m	class:DataSet
get_cell	build/lib/pyvista/plotting/picking.py	/^    def get_cell(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_cell	pyvista/core/dataset.py	/^    def get_cell(self: Self, index: int) -> pyvista.Cell:$/;"	m	class:DataSet
get_cell	pyvista/plotting/picking.py	/^    def get_cell(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_charts	build/lib/pyvista/plotting/renderer.py	/^    def get_charts(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
get_charts	pyvista/plotting/renderer.py	/^    def get_charts(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
get_charts_by_pos	build/lib/pyvista/plotting/charts.py	/^    def get_charts_by_pos(self, pos):$/;"	m	class:Charts
get_charts_by_pos	pyvista/plotting/charts.py	/^    def get_charts_by_pos(self, pos):$/;"	m	class:Charts
get_class_decorator_hook	build/lib/pyvista/typing/mypy_plugin.py	/^        def get_class_decorator_hook($/;"	m	class:promote_type._PyVistaPlugin
get_class_decorator_hook	pyvista/typing/mypy_plugin.py	/^        def get_class_decorator_hook($/;"	m	class:promote_type._PyVistaPlugin
get_classes_with_attribute	tests/typing/test_return_type.py	/^def get_classes_with_attribute(attr: str) -> tuple[tuple[str], tuple[type]]:$/;"	f
get_cmap	examples/02-plot/texture.py	/^from matplotlib.pyplot import get_cmap$/;"	i
get_cmap_safe	build/lib/pyvista/core/filters/data_set.py	/^        from pyvista.plotting.colors import get_cmap_safe$/;"	i
get_cmap_safe	build/lib/pyvista/plotting/__init__.py	/^from .colors import get_cmap_safe as get_cmap_safe$/;"	i
get_cmap_safe	build/lib/pyvista/plotting/colors.py	/^def get_cmap_safe(cmap):$/;"	f
get_cmap_safe	build/lib/pyvista/plotting/lookup_table.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	build/lib/pyvista/plotting/mapper.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	build/lib/pyvista/plotting/plotter.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	build/lib/pyvista/plotting/themes.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	pyvista/core/filters/data_set.py	/^        from pyvista.plotting.colors import get_cmap_safe$/;"	i
get_cmap_safe	pyvista/plotting/__init__.py	/^from .colors import get_cmap_safe as get_cmap_safe$/;"	i
get_cmap_safe	pyvista/plotting/colors.py	/^def get_cmap_safe(cmap):$/;"	f
get_cmap_safe	pyvista/plotting/lookup_table.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	pyvista/plotting/mapper.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	pyvista/plotting/plotter.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	pyvista/plotting/themes.py	/^from .colors import get_cmap_safe$/;"	i
get_cmap_safe	tests/plotting/test_colors.py	/^from pyvista.plotting.colors import get_cmap_safe$/;"	i
get_colors	examples/03-widgets/sphere_widget.py	/^def get_colors(n):$/;"	f
get_cycler	build/lib/pyvista/plotting/colors.py	/^def get_cycler(color_cycler):$/;"	f
get_cycler	build/lib/pyvista/plotting/composite_mapper.py	/^from .colors import get_cycler$/;"	i
get_cycler	build/lib/pyvista/plotting/renderer.py	/^from .colors import get_cycler$/;"	i
get_cycler	build/lib/pyvista/plotting/themes.py	/^from .colors import get_cycler$/;"	i
get_cycler	pyvista/plotting/colors.py	/^def get_cycler(color_cycler):$/;"	f
get_cycler	pyvista/plotting/composite_mapper.py	/^from .colors import get_cycler$/;"	i
get_cycler	pyvista/plotting/renderer.py	/^from .colors import get_cycler$/;"	i
get_cycler	pyvista/plotting/themes.py	/^from .colors import get_cycler$/;"	i
get_data_range	build/lib/pyvista/core/composite.py	/^    def get_data_range(  # type: ignore[override]$/;"	m	class:MultiBlock
get_data_range	build/lib/pyvista/core/dataobject.py	/^    def get_data_range($/;"	m	class:DataObject
get_data_range	build/lib/pyvista/core/dataset.py	/^    def get_data_range(  # type: ignore[override]$/;"	m	class:DataSet
get_data_range	build/lib/pyvista/core/objects.py	/^    def get_data_range(  # type: ignore[override]$/;"	m	class:Table
get_data_range	pyvista/core/composite.py	/^    def get_data_range(  # type: ignore[override]$/;"	m	class:MultiBlock
get_data_range	pyvista/core/dataobject.py	/^    def get_data_range($/;"	m	class:DataObject
get_data_range	pyvista/core/dataset.py	/^    def get_data_range(  # type: ignore[override]$/;"	m	class:DataSet
get_data_range	pyvista/core/objects.py	/^    def get_data_range(  # type: ignore[override]$/;"	m	class:Table
get_default_cam_pos	build/lib/pyvista/plotting/plotter.py	/^    def get_default_cam_pos(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
get_default_cam_pos	build/lib/pyvista/plotting/renderer.py	/^    def get_default_cam_pos(self, negative=False):$/;"	m	class:Renderer
get_default_cam_pos	pyvista/plotting/plotter.py	/^    def get_default_cam_pos(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
get_default_cam_pos	pyvista/plotting/renderer.py	/^    def get_default_cam_pos(self, negative=False):$/;"	m	class:Renderer
get_default_cycler	build/lib/pyvista/plotting/colors.py	/^def get_default_cycler():$/;"	f
get_default_cycler	pyvista/plotting/colors.py	/^def get_default_cycler():$/;"	f
get_desired_update_rate	build/lib/pyvista/plotting/render_window_interactor.py	/^    def get_desired_update_rate(self):$/;"	m	class:RenderWindowInteractor
get_desired_update_rate	pyvista/plotting/render_window_interactor.py	/^    def get_desired_update_rate(self):$/;"	m	class:RenderWindowInteractor
get_edge	build/lib/pyvista/core/cell.py	/^    def get_edge(self: Self, index: int) -> Cell:$/;"	m	class:Cell
get_edge	build/lib/pyvista/plotting/picking.py	/^    def get_edge(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_edge	pyvista/core/cell.py	/^    def get_edge(self: Self, index: int) -> Cell:$/;"	m	class:Cell
get_edge	pyvista/plotting/picking.py	/^    def get_edge(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_event_position	build/lib/pyvista/plotting/render_window_interactor.py	/^    def get_event_position(self):$/;"	m	class:RenderWindowInteractor
get_event_position	pyvista/plotting/render_window_interactor.py	/^    def get_event_position(self):$/;"	m	class:RenderWindowInteractor
get_event_subplot_loc	build/lib/pyvista/plotting/render_window_interactor.py	/^    def get_event_subplot_loc(self):$/;"	m	class:RenderWindowInteractor
get_event_subplot_loc	pyvista/plotting/render_window_interactor.py	/^    def get_event_subplot_loc(self):$/;"	m	class:RenderWindowInteractor
get_ext	build/lib/pyvista/core/pointset.py	/^from .utilities.fileio import get_ext$/;"	i
get_ext	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import get_ext as get_ext$/;"	i
get_ext	build/lib/pyvista/core/utilities/fileio.py	/^def get_ext(filename: str | Path) -> str:$/;"	f
get_ext	build/lib/pyvista/examples/_dataset_loader.py	/^from pyvista.core.utilities.fileio import get_ext$/;"	i
get_ext	build/lib/pyvista/examples/downloads.py	/^from pyvista.core.utilities.fileio import get_ext$/;"	i
get_ext	pyvista/core/pointset.py	/^from .utilities.fileio import get_ext$/;"	i
get_ext	pyvista/core/utilities/__init__.py	/^from .fileio import get_ext as get_ext$/;"	i
get_ext	pyvista/core/utilities/fileio.py	/^def get_ext(filename: str | Path) -> str:$/;"	f
get_ext	pyvista/examples/_dataset_loader.py	/^from pyvista.core.utilities.fileio import get_ext$/;"	i
get_ext	pyvista/examples/downloads.py	/^from pyvista.core.utilities.fileio import get_ext$/;"	i
get_ext	tests/core/test_utilities.py	/^from pyvista.core.utilities.fileio import get_ext$/;"	i
get_face	build/lib/pyvista/core/cell.py	/^    def get_face(self: Self, index: int) -> Cell:$/;"	m	class:Cell
get_face	build/lib/pyvista/plotting/picking.py	/^    def get_face(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_face	pyvista/core/cell.py	/^    def get_face(self: Self, index: int) -> Cell:$/;"	m	class:Cell
get_face	pyvista/plotting/picking.py	/^    def get_face(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_first_N_above_thresh	examples/99-advanced/warp_by_vector_eigenmodes.py	/^def get_first_N_above_thresh(N, freqs, thresh, decimals=3):$/;"	f
get_gpu_info	build/lib/pyvista/__init__.py	/^from pyvista.report import get_gpu_info as get_gpu_info$/;"	i
get_gpu_info	build/lib/pyvista/report.py	/^def get_gpu_info():  # numpydoc ignore=RT01$/;"	f
get_gpu_info	pyvista/__init__.py	/^from pyvista.report import get_gpu_info as get_gpu_info$/;"	i
get_gpu_info	pyvista/report.py	/^def get_gpu_info():  # numpydoc ignore=RT01$/;"	f
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:CellQualityInfoTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:CellQualityMeasuresTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:ColorSchemeTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:ColorTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:DatasetGalleryCarousel
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:DocTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:LineStyleTable
get_header	doc/source/make_tables.py	/^    def get_header(cls, data):$/;"	m	class:MarkerStyleTable
get_hexcolors_cycler	build/lib/pyvista/plotting/colors.py	/^def get_hexcolors_cycler():$/;"	f
get_hexcolors_cycler	pyvista/plotting/colors.py	/^def get_hexcolors_cycler():$/;"	f
get_image_depth	build/lib/pyvista/plotting/plotter.py	/^    def get_image_depth($/;"	m	class:BasePlotter
get_image_depth	pyvista/plotting/plotter.py	/^    def get_image_depth($/;"	m	class:BasePlotter
get_index_by_name	build/lib/pyvista/core/composite.py	/^    def get_index_by_name(self: MultiBlock, name: str) -> int:$/;"	m	class:MultiBlock
get_index_by_name	pyvista/core/composite.py	/^    def get_index_by_name(self: MultiBlock, name: str) -> int:$/;"	m	class:MultiBlock
get_info	build/lib/pyvista/report.py	/^    def get_info(self):$/;"	m	class:GPUInfo
get_info	pyvista/report.py	/^    def get_info(self):$/;"	m	class:GPUInfo
get_interactor_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def get_interactor_style(self):$/;"	m	class:RenderWindowInteractor
get_interactor_style	pyvista/plotting/render_window_interactor.py	/^    def get_interactor_style(self):$/;"	m	class:RenderWindowInteractor
get_iterator	build/lib/pyvista/core/filters/composite.py	/^        def get_iterator(multi, skip_none_, skip_empty_):$/;"	f	function:CompositeFilters.generic_filter
get_iterator	pyvista/core/filters/composite.py	/^        def get_iterator(multi, skip_none_, skip_empty_):$/;"	f	function:CompositeFilters.generic_filter
get_iterator_kwargs	build/lib/pyvista/core/filters/composite.py	/^        def get_iterator_kwargs(kwargs_) -> tuple[bool, bool]:$/;"	f	function:CompositeFilters.generic_filter
get_iterator_kwargs	pyvista/core/filters/composite.py	/^        def get_iterator_kwargs(kwargs_) -> tuple[bool, bool]:$/;"	f	function:CompositeFilters.generic_filter
get_logger	build/lib/pyvista/examples/downloads.py	/^from pooch.utils import get_logger$/;"	i
get_logger	pyvista/examples/downloads.py	/^from pooch.utils import get_logger$/;"	i
get_matplotlib_theme_cycler	build/lib/pyvista/plotting/colors.py	/^def get_matplotlib_theme_cycler():$/;"	f
get_matplotlib_theme_cycler	pyvista/plotting/colors.py	/^def get_matplotlib_theme_cycler():$/;"	f
get_mesh	build/lib/pyvista/plotting/picking.py	/^    def get_mesh(self):$/;"	m	class:PointPickingElementHandler
get_mesh	pyvista/plotting/picking.py	/^    def get_mesh(self):$/;"	m	class:PointPickingElementHandler
get_message	build/lib/pyvista/core/utilities/observers.py	/^    def get_message(self, etc: bool = False):$/;"	m	class:Observer
get_message	pyvista/core/utilities/observers.py	/^    def get_message(self, etc: bool = False):$/;"	m	class:Observer
get_mixed_cells	build/lib/pyvista/core/pointset.py	/^from .utilities.cells import get_mixed_cells$/;"	i
get_mixed_cells	build/lib/pyvista/core/utilities/__init__.py	/^from .cells import get_mixed_cells as get_mixed_cells$/;"	i
get_mixed_cells	build/lib/pyvista/core/utilities/cells.py	/^def get_mixed_cells(vtkobj):$/;"	f
get_mixed_cells	pyvista/core/pointset.py	/^from .utilities.cells import get_mixed_cells$/;"	i
get_mixed_cells	pyvista/core/utilities/__init__.py	/^from .cells import get_mixed_cells as get_mixed_cells$/;"	i
get_mixed_cells	pyvista/core/utilities/cells.py	/^def get_mixed_cells(vtkobj):$/;"	f
get_origin	build/lib/pyvista/core/_validation/check.py	/^from typing import get_origin$/;"	i
get_origin	pyvista/core/_validation/check.py	/^from typing import get_origin$/;"	i
get_origin	tests/core/test_validation.py	/^from typing import get_origin$/;"	i
get_outdated_docs	build/lib/pyvista/ext/coverage.py	/^    def get_outdated_docs(self) -> str:$/;"	m	class:CoverageBuilder
get_outdated_docs	pyvista/ext/coverage.py	/^    def get_outdated_docs(self) -> str:$/;"	m	class:CoverageBuilder
get_pick_position	build/lib/pyvista/plotting/picking.py	/^    def get_pick_position(self):$/;"	m	class:PickingInterface
get_pick_position	build/lib/pyvista/plotting/renderer.py	/^    def get_pick_position(self):$/;"	m	class:Renderer
get_pick_position	pyvista/plotting/picking.py	/^    def get_pick_position(self):$/;"	m	class:PickingInterface
get_pick_position	pyvista/plotting/renderer.py	/^    def get_pick_position(self):$/;"	m	class:Renderer
get_picked_block	build/lib/pyvista/plotting/picking.py	/^        def get_picked_block(*args, **kwargs):  # numpydoc ignore=PR01$/;"	f	function:PickingMethods.enable_block_picking
get_picked_block	pyvista/plotting/picking.py	/^        def get_picked_block(*args, **kwargs):  # numpydoc ignore=PR01$/;"	f	function:PickingMethods.enable_block_picking
get_point	build/lib/pyvista/plotting/picking.py	/^    def get_point(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_point	pyvista/plotting/picking.py	/^    def get_point(self, picked_point):$/;"	m	class:PointPickingElementHandler
get_point_along_spline	examples/02-plot/distance_along_spline.py	/^def get_point_along_spline(distance):$/;"	f
get_poked_renderer	build/lib/pyvista/plotting/render_window_interactor.py	/^    def get_poked_renderer(self, x=None, y=None):$/;"	m	class:RenderWindowInteractor
get_poked_renderer	pyvista/plotting/render_window_interactor.py	/^    def get_poked_renderer(self, x=None, y=None):$/;"	m	class:RenderWindowInteractor
get_property_return_type	tests/typing/test_return_type.py	/^def get_property_return_type(prop: property):$/;"	f
get_reader	build/lib/pyvista/core/utilities/__init__.py	/^from .reader import get_reader as get_reader$/;"	i
get_reader	build/lib/pyvista/core/utilities/reader.py	/^def get_reader(filename, force_ext=None):$/;"	f
get_reader	pyvista/core/utilities/__init__.py	/^from .reader import get_reader as get_reader$/;"	i
get_reader	pyvista/core/utilities/reader.py	/^def get_reader(filename, force_ext=None):$/;"	f
get_row	doc/source/make_tables.py	/^    def get_row(cls, _, dataset_name):$/;"	m	class:AllDatasetsCarousel
get_row	doc/source/make_tables.py	/^    def get_row(cls, _, dataset_name: str):$/;"	m	class:DatasetGalleryCarousel
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:CellQualityInfoTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:CellQualityMeasuresTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:ColorSchemeTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:ColorTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:DocTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:LineStyleTable
get_row	doc/source/make_tables.py	/^    def get_row(cls, i, row_data):$/;"	m	class:MarkerStyleTable
get_server	build/lib/pyvista/plotting/plotter.py	/^            from pyvista.trame.views import get_server$/;"	i
get_server	build/lib/pyvista/trame/jupyter.py	/^from pyvista.trame.views import get_server$/;"	i
get_server	build/lib/pyvista/trame/ui/__init__.py	/^from trame.app import get_server$/;"	i
get_server	build/lib/pyvista/trame/ui/base_viewer.py	/^from trame.app import get_server$/;"	i
get_server	build/lib/pyvista/trame/views.py	/^def get_server(*args, **kwargs):  # numpydoc ignore=RT01$/;"	f
get_server	examples_trame/advanced/contour.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/advanced/custom_ui.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/PyVistaLocalView.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/PyVistaRemoteLocalView.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/PyVistaRemoteView.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/actor_color.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/algorithm.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/file_viewer.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/mesh_scalars.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/multi_views.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/basic/ui_template.py	/^from trame.app import get_server$/;"	i
get_server	examples_trame/validation/many_actors.py	/^from trame.app import get_server$/;"	i
get_server	pyvista/plotting/plotter.py	/^            from pyvista.trame.views import get_server$/;"	i
get_server	pyvista/trame/jupyter.py	/^from pyvista.trame.views import get_server$/;"	i
get_server	pyvista/trame/ui/__init__.py	/^from trame.app import get_server$/;"	i
get_server	pyvista/trame/ui/base_viewer.py	/^from trame.app import get_server$/;"	i
get_server	pyvista/trame/views.py	/^def get_server(*args, **kwargs):  # numpydoc ignore=RT01$/;"	f
get_server	tests/plotting/jupyter/test_trame.py	/^    from trame.app import get_server$/;"	i
get_text	build/lib/pyvista/plotting/text.py	/^    def get_text(self, position):$/;"	m	class:CornerAnnotation
get_text	pyvista/plotting/text.py	/^    def get_text(self, position):$/;"	m	class:CornerAnnotation
get_version_match	doc/source/conf.py	/^def get_version_match(semver):$/;"	f
get_viewer	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.ui import get_viewer$/;"	i
get_viewer	build/lib/pyvista/trame/jupyter.py	/^from pyvista.trame.ui import get_viewer$/;"	i
get_viewer	build/lib/pyvista/trame/ui/__init__.py	/^def get_viewer(plotter, server=None, suppress_rendering=False):$/;"	f
get_viewer	examples_trame/advanced/custom_ui.py	/^from pyvista.trame.ui import get_viewer$/;"	i
get_viewer	pyvista/trame/__init__.py	/^from pyvista.trame.ui import get_viewer$/;"	i
get_viewer	pyvista/trame/jupyter.py	/^from pyvista.trame.ui import get_viewer$/;"	i
get_viewer	pyvista/trame/ui/__init__.py	/^def get_viewer(plotter, server=None, suppress_rendering=False):$/;"	f
get_viewer	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui import get_viewer$/;"	i
get_vtk_array_type	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import get_vtk_array_type as get_vtk_array_type$/;"	i
get_vtk_array_type	pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import get_vtk_array_type as get_vtk_array_type$/;"	i
get_vtk_type	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import get_vtk_type as get_vtk_type$/;"	i
get_vtk_type	build/lib/pyvista/core/utilities/arrays.py	/^def get_vtk_type(typ: npt.DTypeLike) -> int:$/;"	f
get_vtk_type	pyvista/core/utilities/__init__.py	/^from .arrays import get_vtk_type as get_vtk_type$/;"	i
get_vtk_type	pyvista/core/utilities/arrays.py	/^def get_vtk_type(typ: npt.DTypeLike) -> int:$/;"	f
get_vtk_type	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_vtk_type  # noqa: F401$/;"	i
get_writer	build/lib/pyvista/plotting/plotter.py	/^            from imageio import get_writer$/;"	i
get_writer	pyvista/plotting/plotter.py	/^            from imageio import get_writer$/;"	i
gettext_additional_targets	doc/source/conf.py	/^gettext_additional_targets = ['raw']$/;"	v
ghosts	examples/02-plot/ghost_cells.py	/^ghosts = np.argwhere(mesh['facies'] < 1.0)$/;"	v
gif_file	tests/plotting/test_plotting_utilities.py	/^def gif_file(tmpdir):$/;"	f
given	tests/core/test_dataobject_filters.py	/^from hypothesis import given$/;"	i
given	tests/core/test_dataset_filters.py	/^from hypothesis import given$/;"	i
given	tests/core/test_datasetattributes.py	/^from hypothesis import given$/;"	i
given	tests/core/test_geometric_objects.py	/^from hypothesis import given$/;"	i
given	tests/core/test_geometric_sources.py	/^from hypothesis import given$/;"	i
given	tests/core/test_grid.py	/^from hypothesis import given$/;"	i
given	tests/core/test_reader.py	/^from hypothesis import given$/;"	i
given	tests/core/test_utilities.py	/^from hypothesis import given$/;"	i
given	tests/plotting/test_regression.py	/^from hypothesis import given$/;"	i
given	tests/plotting/test_renderer.py	/^from hypothesis import given$/;"	i
given	tests/plotting/test_theme.py	/^from hypothesis import given$/;"	i
gl_checks	tests/test_conftest.py	/^    from pyvista.plotting.utilities import gl_checks$/;"	i
glob	build/lib/pyvista/ext/coverage.py	/^import glob$/;"	i
glob	pyvista/ext/coverage.py	/^import glob$/;"	i
glob	tests/doc/tst_doc_images.py	/^import glob$/;"	i
global_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def global_array_names(self):$/;"	m	class:ExodusIIReader
global_array_names	pyvista/core/utilities/reader.py	/^    def global_array_names(self):$/;"	m	class:ExodusIIReader
global_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def global_array_status(self, name):$/;"	m	class:ExodusIIReader
global_array_status	pyvista/core/utilities/reader.py	/^    def global_array_status(self, name):$/;"	m	class:ExodusIIReader
global_theme	build/lib/pyvista/plotting/utilities/xvfb.py	/^    from pyvista import global_theme$/;"	i
global_theme	pyvista/plotting/utilities/xvfb.py	/^    from pyvista import global_theme$/;"	i
global_variables_reset	tests/conftest.py	/^def global_variables_reset():$/;"	f
globe	examples/02-plot/backface_props.py	/^globe = examples.load_globe()$/;"	v
globe	examples/02-plot/background_image.py	/^globe = examples.load_globe()$/;"	v
globe	examples/02-plot/multi_window.py	/^globe = examples.load_globe()$/;"	v
globe	tests/conftest.py	/^def globe():$/;"	f
globefile	build/lib/pyvista/examples/examples.py	/^globefile = str(Path(dir_path) \/ 'globe.vtk')$/;"	v
globefile	pyvista/examples/examples.py	/^globefile = str(Path(dir_path) \/ 'globe.vtk')$/;"	v
gltf	build/lib/pyvista/examples/__init__.py	/^from . import gltf as gltf$/;"	i
gltf	pyvista/examples/__init__.py	/^from . import gltf as gltf$/;"	i
glyph	build/lib/pyvista/core/filters/data_set.py	/^    def glyph(  # type: ignore[misc]$/;"	m	class:DataSetFilters
glyph	pyvista/core/filters/data_set.py	/^    def glyph(  # type: ignore[misc]$/;"	m	class:DataSetFilters
glyphs	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import glyphs as glyphs$/;"	i
glyphs	build/lib/pyvista/demos/demos.py	/^def glyphs(grid_sz=3):$/;"	f
glyphs	examples/01-filter/glyphs.py	/^glyphs = mesh.glyph(orient='vectors', scale='scalars', factor=0.003, geom=geom)$/;"	v
glyphs	examples/01-filter/glyphs_table.py	/^glyphs = mesh.glyph(geom=geoms, indices=values, scale=False, factor=0.3, rng=(0, N - 1))$/;"	v
glyphs	examples/01-filter/using_filters.py	/^glyphs = dataset.glyph(factor=1e-3, geom=pv.Sphere())$/;"	v
glyphs	pyvista/demos/__init__.py	/^from pyvista.demos.demos import glyphs as glyphs$/;"	i
glyphs	pyvista/demos/demos.py	/^def glyphs(grid_sz=3):$/;"	f
gmshmodel	doc/source/make_external_gallery.py	/^    gmshmodel=Example($/;"	v
grad_descent_visualizer	doc/source/make_external_gallery.py	/^    grad_descent_visualizer=Example($/;"	v
gradients	examples/01-filter/gradients.py	/^gradients = gradients_to_dict(mesh_g['gradient'])$/;"	v
gradients_to_dict	examples/01-filter/gradients.py	/^def gradients_to_dict(arr):$/;"	f
grey	examples/02-plot/cmap.py	/^grey = np.array([189 \/ 256, 189 \/ 256, 189 \/ 256, 1.0])$/;"	v
grey_theme	examples/01-filter/image_fft.py	/^grey_theme = pv.themes.DocumentTheme()$/;"	v
grid	build/lib/pyvista/demos/logo.py	/^    grid = examples.download_letter_a()$/;"	v
grid	build/lib/pyvista/plotting/charts.py	/^    def grid(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
grid	build/lib/pyvista/plotting/charts.py	/^    def grid(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
grid	build/lib/pyvista/plotting/charts.py	/^    def grid(self, val) -> None:$/;"	m	class:Axis
grid	build/lib/pyvista/plotting/charts.py	/^    def grid(self, val) -> None:$/;"	m	class:Chart2D
grid	examples/00-load/create_explicit_structured_grid.py	/^grid = grid.compute_connectivity()$/;"	v
grid	examples/00-load/create_explicit_structured_grid.py	/^grid = pv.ExplicitStructuredGrid(dims, corners)$/;"	v
grid	examples/00-load/create_polyhedron.py	/^grid = pv.UnstructuredGrid(cells, celltypes, points)$/;"	v
grid	examples/00-load/create_structured_surface.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/00-load/create_surface_draped.py	/^grid = pv.StructuredGrid()$/;"	v
grid	examples/00-load/create_uniform_grid.py	/^grid = pv.ImageData()$/;"	v
grid	examples/00-load/create_unstructured_surface.py	/^grid = pv.UnstructuredGrid($/;"	v
grid	examples/00-load/create_unstructured_surface.py	/^grid = pv.UnstructuredGrid(cells, cell_type, points)$/;"	v
grid	examples/00-load/create_unstructured_surface.py	/^grid = pv.UnstructuredGrid(cells, celltypes, points)$/;"	v
grid	examples/00-load/create_unstructured_surface.py	/^grid = pv.UnstructuredGrid({CellType.HEXAHEDRON: cells.reshape([-1, 9])[:, 1:]}, points)$/;"	v
grid	examples/00-load/create_unstructured_surface.py	/^grid = pv.UnstructuredGrid({CellType.HEXAHEDRON: cells_hex}, points)$/;"	v
grid	examples/00-load/linear_cells.py	/^grid = example_cells.Wedge()$/;"	v
grid	examples/01-filter/cell_centers.py	/^grid = examples.download_letter_a()$/;"	v
grid	examples/01-filter/cell_centers.py	/^grid = pv.ImageData(dimensions=(10, 10, 1))$/;"	v
grid	examples/01-filter/clipping_with_surface.py	/^grid = pv.create_grid(surface)$/;"	v
grid	examples/01-filter/extract_surface.py	/^grid = pv.UnstructuredGrid(cells, celltypes, pts)$/;"	v
grid	examples/01-filter/flying_edges.py	/^grid = pv.ImageData($/;"	v
grid	examples/01-filter/image_fft_perlin_noise.py	/^grid = pv.ImageData(dimensions=sampled.dimensions, spacing=sampled.spacing)$/;"	v
grid	examples/01-filter/interpolate.py	/^grid = pv.ImageData()$/;"	v
grid	examples/01-filter/interpolate_sample.py	/^grid = pv.ImageData(dimensions=(11, 11, 1), spacing=[3 \/ 10, 1 \/ 10, 1])$/;"	v
grid	examples/01-filter/sampling_functions_3d.py	/^grid = pv.sample_function(noise, [0, 3.0, -0, 1.0, 0, 1.0], dim=(120, 40, 40))$/;"	v
grid	examples/02-plot/blurring.py	/^grid = pv.ImageData(dimensions=(4, 4, 4), spacing=(1, 1, 1))$/;"	v
grid	examples/02-plot/bounds.py	/^    grid=False,$/;"	v
grid	examples/02-plot/depth_of_field.py	/^grid = pv.ImageData(dimensions=(4, 3, 3), spacing=(3, 1, 1))$/;"	v
grid	examples/02-plot/gif.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/labels.py	/^grid = pv.UnstructuredGrid(examples.hexbeamfile)$/;"	v
grid	examples/02-plot/movie_glyphs.py	/^    grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/movie_glyphs.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/moving_cmap.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	examples/02-plot/point_cell_scalars.py	/^grid = examples.load_hexbeam().extract_cells(range(4))$/;"	v
grid	examples/02-plot/ssao.py	/^grid = pv.ImageData(dimensions=(5, 5, 5)).explode(0.2)$/;"	v
grid	examples/03-widgets/clip_volume.py	/^grid = pv.ImageData(dimensions=(200, 200, 200))$/;"	v
grid	examples/99-advanced/atomic_orbitals.py	/^grid = examples.load_hydrogen_orbital(3, 2, -2)$/;"	v
grid	examples/99-advanced/magnetic_fields.py	/^grid = examples.download_coil_magnetic_field()$/;"	v
grid	examples/99-advanced/openfoam_cooling.py	/^grid = grid.sample(air)$/;"	v
grid	examples/99-advanced/openfoam_cooling.py	/^grid = pv.ImageData(dimensions=dimensions, spacing=spacing, origin=origin)$/;"	v
grid	examples/99-advanced/openfoam_tubes.py	/^grid = grid.sample(air)$/;"	v
grid	examples/99-advanced/openfoam_tubes.py	/^grid = pv.ImageData(dimensions=dimensions, spacing=spacing, origin=origin)$/;"	v
grid	examples/99-advanced/warp_by_vector_eigenmodes.py	/^grid = pv.StructuredGrid(x, y, z)$/;"	v
grid	pyvista/demos/logo.py	/^    grid = examples.download_letter_a()$/;"	v
grid	pyvista/plotting/charts.py	/^    def grid(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
grid	pyvista/plotting/charts.py	/^    def grid(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
grid	pyvista/plotting/charts.py	/^    def grid(self, val) -> None:$/;"	m	class:Axis
grid	pyvista/plotting/charts.py	/^    def grid(self, val) -> None:$/;"	m	class:Chart2D
grid	tests/conftest.py	/^def grid():$/;"	f
grid4x4	tests/core/test_dataset_filters.py	/^def grid4x4():$/;"	f
grid_a	examples/00-load/linear_cells.py	/^grid_a = example_cells.Hexahedron()$/;"	v
grid_b	examples/00-load/linear_cells.py	/^grid_b = example_cells.HexagonalPrism()$/;"	v
grid_from_sph_coords	build/lib/pyvista/core/utilities/__init__.py	/^from .features import grid_from_sph_coords as grid_from_sph_coords$/;"	i
grid_from_sph_coords	build/lib/pyvista/core/utilities/features.py	/^def grid_from_sph_coords(theta, phi, r):$/;"	f
grid_from_sph_coords	pyvista/core/utilities/__init__.py	/^from .features import grid_from_sph_coords as grid_from_sph_coords$/;"	i
grid_from_sph_coords	pyvista/core/utilities/features.py	/^def grid_from_sph_coords(theta, phi, r):$/;"	f
grid_scalar	examples/02-plot/spherical.py	/^grid_scalar = pv.grid_from_sph_coords(xx_bounds, yy_bounds, levels)$/;"	v
grid_scalar_3d	examples/02-plot/spherical.py	/^grid_scalar_3d = pv.grid_from_sph_coords(xx_bounds, yy_bounds, levels)$/;"	v
grid_winds	examples/02-plot/spherical.py	/^grid_winds = pv.grid_from_sph_coords(x, y_polar, wind_level)$/;"	v
griddata	examples/03-widgets/sphere_widget.py	/^from scipy.interpolate import griddata$/;"	i
grids	tests/core/test_cells.py	/^grids = [$/;"	v
grids	tests/core/test_dataset.py	/^grids = [$/;"	v
grids_cells	tests/core/test_dataset.py	/^grids_cells = grids[:-1]$/;"	v
groups	examples/02-plot/multi_window.py	/^groups = [$/;"	v
h	examples/02-plot/chart_overlays.py	/^h = np.sin(t)$/;"	v
h0	examples/01-filter/distance_between_surfaces.py	/^h0 = hill(1).elevation()$/;"	v
h0n	examples/01-filter/distance_between_surfaces.py	/^h0n = h0.compute_normals(point_normals=True, cell_normals=False, auto_orient_normals=True)$/;"	v
h1	examples/01-filter/distance_between_surfaces.py	/^h1 = h1.elevation()$/;"	v
h1	examples/01-filter/distance_between_surfaces.py	/^h1 = hill(10)$/;"	v
h_chart	examples/02-plot/chart_overlays.py	/^h_chart = pv.ChartMPL(f, size=(0.46, 0.25), loc=(0.02, 0.06))$/;"	v
h_line	examples/02-plot/chart_overlays.py	/^h_line = ax.plot(t[:1], h[:1])[0]$/;"	v
h_pressure	examples/99-advanced/fea_hertzian_contact_pressure.py	/^h_pressure = np.array($/;"	v
handle	examples_trame/basic/file_viewer.py	/^def handle(file_exchange, **kwargs):$/;"	f
handle_plotter	build/lib/pyvista/jupyter/notebook.py	/^def handle_plotter(plotter, backend=None, screenshot=None, **kwargs):$/;"	f
handle_plotter	build/lib/pyvista/plotting/plotter.py	/^            from pyvista.jupyter.notebook import handle_plotter$/;"	i
handle_plotter	pyvista/jupyter/notebook.py	/^def handle_plotter(plotter, backend=None, screenshot=None, **kwargs):$/;"	f
handle_plotter	pyvista/plotting/plotter.py	/^            from pyvista.jupyter.notebook import handle_plotter$/;"	i
handler	build/lib/pyvista/core/utilities/observers.py	/^    def handler(self, sig, frame) -> None:$/;"	m	class:ProgressMonitor
handler	pyvista/core/utilities/observers.py	/^    def handler(self, sig, frame) -> None:$/;"	m	class:ProgressMonitor
handler	tests/plotting/jupyter/test_trame.py	/^    def handler(viewer, src, **kwargs):$/;"	f	function:test_trame_jupyter_custom_handler
has_active_background_renderer	build/lib/pyvista/plotting/renderers.py	/^    def has_active_background_renderer(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Renderers
has_active_background_renderer	pyvista/plotting/renderers.py	/^    def has_active_background_renderer(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Renderers
has_border	build/lib/pyvista/plotting/renderer.py	/^    def has_border(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Renderer
has_border	pyvista/plotting/renderer.py	/^    def has_border(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Renderer
has_charts	build/lib/pyvista/plotting/renderer.py	/^    def has_charts(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
has_charts	pyvista/plotting/renderer.py	/^    def has_charts(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
has_content	build/lib/pyvista/ext/plot_directive.py	/^    has_content = True$/;"	v	class:PlotDirective
has_content	build/lib/pyvista/ext/viewer_directive.py	/^    has_content = True$/;"	v	class:OfflineViewerDirective
has_content	pyvista/ext/plot_directive.py	/^    has_content = True$/;"	v	class:PlotDirective
has_content	pyvista/ext/viewer_directive.py	/^    has_content = True$/;"	v	class:OfflineViewerDirective
has_duplicates	build/lib/pyvista/core/utilities/arrays.py	/^def has_duplicates(arr: NumpyArray[Any]) -> bool:$/;"	f
has_duplicates	pyvista/core/utilities/arrays.py	/^def has_duplicates(arr: NumpyArray[Any]) -> bool:$/;"	f
has_duplicates	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import has_duplicates$/;"	i
has_event_occurred	build/lib/pyvista/core/utilities/observers.py	/^    def has_event_occurred(self):  # numpydoc ignore=RT01$/;"	m	class:Observer
has_event_occurred	pyvista/core/utilities/observers.py	/^    def has_event_occurred(self):  # numpydoc ignore=RT01$/;"	m	class:Observer
has_ipython	tests/plotting/jupyter/test_static.py	/^has_ipython = bool(importlib.util.find_spec('IPython'))$/;"	v
has_module	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import has_module as has_module$/;"	i
has_module	build/lib/pyvista/core/utilities/misc.py	/^def has_module(module_name: str) -> bool:$/;"	f
has_module	build/lib/pyvista/plotting/colors.py	/^from pyvista.core.utilities.misc import has_module$/;"	i
has_module	pyvista/core/utilities/__init__.py	/^from .misc import has_module as has_module$/;"	i
has_module	pyvista/core/utilities/misc.py	/^def has_module(module_name: str) -> bool:$/;"	f
has_module	pyvista/plotting/colors.py	/^from pyvista.core.utilities.misc import has_module$/;"	i
has_module	tests/core/test_utilities.py	/^from pyvista.core.utilities.misc import has_module$/;"	i
has_osmnx	doc/source/conf.py	/^has_osmnx = importlib.util.find_spec('fiona') and importlib.util.find_spec('osmnx')$/;"	v
has_trame	tests/plotting/jupyter/test_trame.py	/^    has_trame = False$/;"	v
has_trame	tests/plotting/jupyter/test_trame.py	/^has_trame = True$/;"	v
hb_scale	build/lib/pyvista/core/utilities/reader.py	/^    def hb_scale(self) -> float:$/;"	m	class:GaussianCubeReader
hb_scale	build/lib/pyvista/core/utilities/reader.py	/^    def hb_scale(self, hb_scale: float) -> None:$/;"	m	class:GaussianCubeReader
hb_scale	pyvista/core/utilities/reader.py	/^    def hb_scale(self) -> float:$/;"	m	class:GaussianCubeReader
hb_scale	pyvista/core/utilities/reader.py	/^    def hb_scale(self, hb_scale: float) -> None:$/;"	m	class:GaussianCubeReader
head	build/lib/pyvista/core/dataobject.py	/^    def head(self: Self, display: bool = True, html: bool | None = None) -> str:$/;"	m	class:DataObject
head	examples/02-plot/volume.py	/^head = examples.download_head()$/;"	v
head	pyvista/core/dataobject.py	/^    def head(self: Self, display: bool = True, html: bool | None = None) -> str:$/;"	m	class:DataObject
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:CellQualityInfoTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:CellQualityMeasuresTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:ColorSchemeTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:ColorTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:LineStyleTable
header	doc/source/make_tables.py	/^    header = _aligned_dedent($/;"	v	class:MarkerStyleTable
header_template	doc/source/make_tables.py	/^    header_template = _aligned_dedent($/;"	v	class:DatasetCard
header_template	doc/source/make_tables.py	/^    header_template = _aligned_dedent($/;"	v	class:DatasetGalleryCarousel
heart_array	examples/02-plot/volume.py	/^heart_array = np.full_like(ct_image.active_scalars, -1000)$/;"	v
heart_mask	examples/02-plot/volume.py	/^heart_mask = dataset['segmentations']['heart']$/;"	v
heart_mask_array	examples/02-plot/volume.py	/^heart_mask_array = heart_mask.active_scalars$/;"	v
height	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def height(self: ConeSource) -> float:$/;"	m	class:ConeSource
height	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def height(self: ConeSource, height: float) -> None:$/;"	m	class:ConeSource
height	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def height(self: CylinderSource) -> float:$/;"	m	class:CylinderSource
height	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def height(self: CylinderSource, height: float) -> None:$/;"	m	class:CylinderSource
height	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def height(self: Text3DSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
height	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def height(self: Text3DSource, height: float | None) -> None:$/;"	m	class:Text3DSource
height	build/lib/pyvista/plotting/renderer.py	/^    def height(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
height	build/lib/pyvista/plotting/themes.py	/^    def height(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
height	build/lib/pyvista/plotting/themes.py	/^    def height(self, height: float):$/;"	m	class:_ColorbarConfig
height	examples/02-plot/silhouette.py	/^    height=0.03,$/;"	v
height	examples/04-lights/shadows.py	/^height = rnge[2] * 0.05$/;"	v
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self: ConeSource) -> float:$/;"	m	class:ConeSource
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self: ConeSource, height: float) -> None:$/;"	m	class:ConeSource
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self: CylinderSource) -> float:$/;"	m	class:CylinderSource
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self: CylinderSource, height: float) -> None:$/;"	m	class:CylinderSource
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self: Text3DSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
height	pyvista/core/utilities/geometric_sources.py	/^    def height(self: Text3DSource, height: float | None) -> None:$/;"	m	class:Text3DSource
height	pyvista/plotting/renderer.py	/^    def height(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
height	pyvista/plotting/themes.py	/^    def height(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
height	pyvista/plotting/themes.py	/^    def height(self, height: float):$/;"	m	class:_ColorbarConfig
helmet_file	examples/00-load/load_gltf.py	/^helmet_file = examples.gltf.download_damaged_helmet()$/;"	v
help	tests/check_doctest_names.py	/^        help='ignore doctest SKIP directives',$/;"	v
help	tests/check_doctest_names.py	/^        help='print passes and failures as tests progress',$/;"	v
hemi	examples/04-lights/beam_shape.py	/^    hemi = hemi_template.copy()$/;"	v
hemi	examples/04-lights/beam_shape.py	/^hemi = hemi.rotate_z(180, inplace=False)$/;"	v
hemi	examples/04-lights/beam_shape.py	/^hemi = hemi.translate((0, offset, 0), inplace=False)$/;"	v
hemi	examples/04-lights/beam_shape.py	/^hemi = pv.Sphere().clip()$/;"	v
hemi_template	examples/04-lights/beam_shape.py	/^hemi_template = pv.Sphere().clip()$/;"	v
henneberg	examples/00-load/create_parametric_geometric_objects.py	/^henneberg = pv.ParametricHenneberg()$/;"	v
henneberg	examples/02-plot/backface_props.py	/^henneberg = pv.ParametricHenneberg().scale(0.25, inplace=False)$/;"	v
hex_grid	examples/00-load/linear_cells.py	/^hex_grid = example_cells.Hexahedron()$/;"	v
hex_rgb	build/lib/pyvista/plotting/colors.py	/^    def hex_rgb(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Color
hex_rgb	pyvista/plotting/colors.py	/^    def hex_rgb(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Color
hex_rgba	build/lib/pyvista/plotting/colors.py	/^    def hex_rgba(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Color
hex_rgba	pyvista/plotting/colors.py	/^    def hex_rgba(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Color
hexa	examples/00-load/create_polyhedron.py	/^hexa = [8, 9, 10, 11, 12, 13, 14, 15, 16]$/;"	v
hexa_points	examples/00-load/create_polyhedron.py	/^hexa_points = [$/;"	v
hexbeam	tests/conftest.py	/^def hexbeam():$/;"	f
hexbeam_field_attributes	tests/core/test_datasetattributes.py	/^def hexbeam_field_attributes(hexbeam):$/;"	f
hexbeam_point_attributes	tests/core/test_datasetattributes.py	/^def hexbeam_point_attributes(hexbeam):$/;"	f
hexbeamfile	build/lib/pyvista/examples/examples.py	/^hexbeamfile = str(Path(dir_path) \/ 'hexbeam.vtk')$/;"	v
hexbeamfile	pyvista/examples/examples.py	/^hexbeamfile = str(Path(dir_path) \/ 'hexbeam.vtk')$/;"	v
hexcolors	build/lib/pyvista/plotting/__init__.py	/^from .colors import hexcolors as hexcolors$/;"	i
hexcolors	build/lib/pyvista/plotting/charts.py	/^from .colors import hexcolors$/;"	i
hexcolors	build/lib/pyvista/plotting/colors.py	/^hexcolors = _format_color_dict(_CSS_COLORS | _PARAVIEW_COLORS | _TABLEAU_COLORS | _VTK_COLORS)$/;"	v
hexcolors	examples_trame/basic/actor_color.py	/^from pyvista.plotting.colors import hexcolors$/;"	i
hexcolors	pyvista/plotting/__init__.py	/^from .colors import hexcolors as hexcolors$/;"	i
hexcolors	pyvista/plotting/charts.py	/^from .colors import hexcolors$/;"	i
hexcolors	pyvista/plotting/colors.py	/^hexcolors = _format_color_dict(_CSS_COLORS | _PARAVIEW_COLORS | _TABLEAU_COLORS | _VTK_COLORS)$/;"	v
hidden_line_removal	build/lib/pyvista/plotting/themes.py	/^    def hidden_line_removal(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
hidden_line_removal	build/lib/pyvista/plotting/themes.py	/^    def hidden_line_removal(self, value: bool):$/;"	m	class:Theme
hidden_line_removal	pyvista/plotting/themes.py	/^    def hidden_line_removal(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
hidden_line_removal	pyvista/plotting/themes.py	/^    def hidden_line_removal(self, value: bool):$/;"	m	class:Theme
hide_actor	build/lib/pyvista/plotting/axes.py	/^    def hide_actor(self):$/;"	m	class:Axes
hide_actor	build/lib/pyvista/plotting/lights.py	/^    def hide_actor(self):$/;"	m	class:Light
hide_actor	pyvista/plotting/axes.py	/^    def hide_actor(self):$/;"	m	class:Axes
hide_actor	pyvista/plotting/lights.py	/^    def hide_actor(self):$/;"	m	class:Light
hide_axes	build/lib/pyvista/plotting/charts.py	/^    def hide_axes(self) -> None:$/;"	m	class:Chart2D
hide_axes	build/lib/pyvista/plotting/plotter.py	/^    def hide_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
hide_axes	build/lib/pyvista/plotting/renderer.py	/^    def hide_axes(self) -> None:$/;"	m	class:Renderer
hide_axes	pyvista/plotting/charts.py	/^    def hide_axes(self) -> None:$/;"	m	class:Chart2D
hide_axes	pyvista/plotting/plotter.py	/^    def hide_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
hide_axes	pyvista/plotting/renderer.py	/^    def hide_axes(self) -> None:$/;"	m	class:Renderer
hide_axes_all	build/lib/pyvista/plotting/plotter.py	/^    def hide_axes_all(self) -> None:$/;"	m	class:BasePlotter
hide_axes_all	pyvista/plotting/plotter.py	/^    def hide_axes_all(self) -> None:$/;"	m	class:BasePlotter
hide_cells	build/lib/pyvista/core/pointset.py	/^    def hide_cells(self, ind, inplace: bool = False):$/;"	m	class:StructuredGrid
hide_cells	build/lib/pyvista/core/pointset.py	/^    def hide_cells(self, ind: VectorLike[int], inplace: bool = False) -> ExplicitStructuredGrid:$/;"	m	class:ExplicitStructuredGrid
hide_cells	pyvista/core/pointset.py	/^    def hide_cells(self, ind, inplace: bool = False):$/;"	m	class:StructuredGrid
hide_cells	pyvista/core/pointset.py	/^    def hide_cells(self, ind: VectorLike[int], inplace: bool = False) -> ExplicitStructuredGrid:$/;"	m	class:ExplicitStructuredGrid
hide_details	examples_trame/basic/file_viewer.py	/^            hide_details=True,$/;"	v
hide_points	build/lib/pyvista/core/pointset.py	/^    def hide_points(self, ind: VectorLike[bool] | VectorLike[int]) -> None:$/;"	m	class:StructuredGrid
hide_points	pyvista/core/pointset.py	/^    def hide_points(self, ind: VectorLike[bool] | VectorLike[int]) -> None:$/;"	m	class:StructuredGrid
hide_progress	build/lib/pyvista/core/utilities/reader.py	/^    def hide_progress(self) -> None:$/;"	m	class:BaseReader
hide_progress	pyvista/core/utilities/reader.py	/^    def hide_progress(self) -> None:$/;"	m	class:BaseReader
hide_symmetric	build/lib/pyvista/plotting/axes.py	/^    def hide_symmetric(self):$/;"	m	class:Axes
hide_symmetric	pyvista/plotting/axes.py	/^    def hide_symmetric(self):$/;"	m	class:Axes
high_pass	build/lib/pyvista/core/filters/image_data.py	/^    def high_pass($/;"	m	class:ImageDataFilters
high_pass	examples/01-filter/image_fft_perlin_noise.py	/^high_pass = sampled_fft.high_pass(1.0, 1.0, 1.0).rfft()$/;"	v
high_pass	pyvista/core/filters/image_data.py	/^    def high_pass($/;"	m	class:ImageDataFilters
hill	examples/01-filter/distance_between_surfaces.py	/^def hill(seed):$/;"	f
hopf_fiber	examples/02-plot/moving_cmap.py	/^def hopf_fiber(p, phi):$/;"	f
hopf_torus	examples/02-plot/moving_cmap.py	/^def hopf_torus(t, phi):$/;"	f
horse	examples/04-lights/mesh_lighting.py	/^horse = examples.download_horse().decimate(0.9)$/;"	v
host	build/lib/pyvista/trame/jupyter.py	/^            host=kwargs.get('host', 'localhost'),$/;"	v
host	pyvista/trame/jupyter.py	/^            host=kwargs.get('host', 'localhost'),$/;"	v
html	build/lib/pyvista/trame/ui/vuetify2.py	/^from trame.widgets import html$/;"	i
html	build/lib/pyvista/trame/ui/vuetify3.py	/^from trame.widgets import html$/;"	i
html	pyvista/trame/ui/vuetify2.py	/^from trame.widgets import html$/;"	i
html	pyvista/trame/ui/vuetify3.py	/^from trame.widgets import html$/;"	i
html_baseurl	doc/source/conf.py	/^html_baseurl = 'https:\/\/docs.pyvista.org\/'$/;"	v
html_context	doc/source/conf.py	/^html_context = {$/;"	v
html_copy_source	doc/source/conf.py	/^html_copy_source = False$/;"	v
html_css_files	doc/source/conf.py	/^html_css_files = [$/;"	v
html_extra_path	doc/source/conf.py	/^html_extra_path = ['_extra']$/;"	v
html_favicon	doc/source/conf.py	/^html_favicon = '.\/_static\/pyvista_logo.svg'$/;"	v
html_logo	doc/source/conf.py	/^html_logo = '.\/_static\/pyvista_logo.svg'$/;"	v
html_rst	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^def html_rst($/;"	f
html_rst	pyvista/plotting/utilities/sphinx_gallery.py	/^def html_rst($/;"	f
html_show_sourcelink	doc/source/conf.py	/^html_show_sourcelink = False$/;"	v
html_show_sphinx	doc/source/conf.py	/^html_show_sphinx = False$/;"	v
html_static_path	doc/source/conf.py	/^html_static_path = ['_static']$/;"	v
html_static_path	tests/plotting/tinypages/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	doc/source/conf.py	/^html_theme = 'sphinx_book_theme'$/;"	v
html_theme	tests/plotting/tinypages/conf.py	/^html_theme = 'sphinx_book_theme'$/;"	v
html_theme_options	doc/source/conf.py	/^html_theme_options = {$/;"	v
html_widgets	build/lib/pyvista/trame/jupyter.py	/^from trame.widgets import html as html_widgets$/;"	i
html_widgets	pyvista/trame/jupyter.py	/^from trame.widgets import html as html_widgets$/;"	i
htmlhelp_basename	doc/source/conf.py	/^htmlhelp_basename = 'pyvistadoc'$/;"	v
hue	examples/02-plot/texture.py	/^    hue = norm(zz.ravel()) * 0.5 * (1.0 + np.sin(phase))$/;"	v
hue	examples/02-plot/texture.py	/^hue = norm(zz.ravel())$/;"	v
hue_range	build/lib/pyvista/plotting/lookup_table.py	/^    def hue_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
hue_range	build/lib/pyvista/plotting/lookup_table.py	/^    def hue_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
hue_range	pyvista/plotting/lookup_table.py	/^    def hue_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
hue_range	pyvista/plotting/lookup_table.py	/^    def hue_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
hvol	examples/01-filter/compute_volume.py	/^hvol = np.sum(volumes[idx])$/;"	v
hydro_orbital	examples/99-advanced/atomic_orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(3, 1, 0)$/;"	v
hydro_orbital	examples/99-advanced/atomic_orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(4, 2, -1)$/;"	v
hydro_orbital	examples/99-advanced/atomic_orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(4, 2, 0)$/;"	v
hydro_orbital	examples/99-advanced/atomic_orbitals.py	/^hydro_orbital = examples.load_hydrogen_orbital(4, 2, 0, zoom_fac=0.5)$/;"	v
i0s	tests/core/test_dataset.py	/^i0s = [0, 1]$/;"	v
i_grid	build/lib/pyvista/demos/logo.py	/^    i_grid = pyvista.voxelize(mesh_letters['i'], density=0.1)$/;"	v
i_grid	pyvista/demos/logo.py	/^    i_grid = pyvista.voxelize(mesh_letters['i'], density=0.1)$/;"	v
i_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def i_resolution(self: PlaneSource) -> int:$/;"	m	class:PlaneSource
i_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def i_resolution(self: PlaneSource, i_resolution: int) -> None:$/;"	m	class:PlaneSource
i_resolution	examples/98-common/project_points_tessellate.py	/^    i_resolution=10,$/;"	v
i_resolution	pyvista/core/utilities/geometric_sources.py	/^    def i_resolution(self: PlaneSource) -> int:$/;"	m	class:PlaneSource
i_resolution	pyvista/core/utilities/geometric_sources.py	/^    def i_resolution(self: PlaneSource, i_resolution: int) -> None:$/;"	m	class:PlaneSource
i_size	examples/01-filter/extrude_trim.py	/^    i_size=1,$/;"	v
i_size	examples/01-filter/extrude_trim.py	/^    i_size=30,$/;"	v
i_size	examples/98-common/project_points_tessellate.py	/^    i_size=2,$/;"	v
identity	build/lib/pyvista/core/utilities/transform.py	/^    def identity(self: Transform) -> Transform:  # numpydoc ignore: RT01$/;"	m	class:Transform
identity	pyvista/core/utilities/transform.py	/^    def identity(self: Transform) -> Transform:  # numpydoc ignore: RT01$/;"	m	class:Transform
ido	build/lib/pyvista/core/filters/__init__.py	/^    ido = cast(pyvista.DataObject, wrap(algorithm.GetInputDataObject(iport, iconnection)))$/;"	v
ido	pyvista/core/filters/__init__.py	/^    ido = cast(pyvista.DataObject, wrap(algorithm.GetInputDataObject(iport, iconnection)))$/;"	v
ids	examples/00-load/create_tri_surface.py	/^ids = [22, 23, 24, 25, 35, 45, 44, 43, 42, 32]$/;"	v
ids	examples/01-filter/compute_normals.py	/^ids = np.arange(mesh.n_cells)[mesh['Normals'][:, 2] > 0.0]$/;"	v
ids	tests/core/test_cells.py	/^ids = [str(type(grid)) for grid in grids]$/;"	v
ids	tests/core/test_dataset.py	/^ids = list(map(type, grids))$/;"	v
ids	tests/core/test_dataset_filters.py	/^    ids=['cmap', 'dict', 'sequence', 'named_color'],$/;"	v
ids	tests/core/test_imagedata_filters.py	/^    ids=['in_None', 'in_2', 'in_5', 'in_2_5'],$/;"	v
ids	tests/core/test_imagedata_filters.py	/^    ids=['out_None', 'out_2', 'out_5', 'out_2_5'],$/;"	v
ids	tests/core/test_polydata_filters.py	/^    ids=['ugrid', 'image', 'structured'],$/;"	v
ids	tests/core/test_utilities.py	/^    ids=['case0', 'case1', 'case2', 'case3'],$/;"	v
ids	tests/plotting/test_plotting.py	/^    ids=XYZ_ASSEMBLY_TEST_CASES.keys(),$/;"	v
ids	tests/plotting/test_plotting.py	/^    ids=['Axes', 'AxesSymmetric', 'Planes'],$/;"	v
ids	tests/plotting/test_plotting.py	/^    ids=['dist_0-scale_None', 'dist_None-scale_0', 'dist_5-scale_0.5', 'dist_5-scale_1'],$/;"	v
ids	tests/plotting/test_plotting.py	/^    ids=['in_None-out_None', 'in_None-out_2', 'in_2-out_2'],$/;"	v
ids	tests/plotting/test_plotting.py	/^    ids=['x_resolution', 'y_resolution', 'z_resolution'],$/;"	v
ids_cells	tests/core/test_dataset.py	/^ids_cells = list(map(type, grids_cells))$/;"	v
ids_to_colors	examples/99-advanced/anatomical_groups.py	/^ids_to_colors = dataset.user_dict['ids_to_colors']$/;"	v
idx	examples/01-filter/compute_volume.py	/^idx = np.argwhere(classifier)$/;"	v
idx	examples/01-filter/compute_volume.py	/^idx = np.argwhere(~classifier)$/;"	v
idx	examples/01-filter/warp_by_vector.py	/^    idx = 2 * i + j$/;"	v
iframe_attrs	build/lib/pyvista/trame/jupyter.py	/^        iframe_attrs = iframe_url_builder_jupyter_extension(viewer.layout)$/;"	v
iframe_attrs	build/lib/pyvista/trame/jupyter.py	/^        iframe_attrs = {}$/;"	v
iframe_attrs	pyvista/trame/jupyter.py	/^        iframe_attrs = iframe_url_builder_jupyter_extension(viewer.layout)$/;"	v
iframe_attrs	pyvista/trame/jupyter.py	/^        iframe_attrs = {}$/;"	v
iframe_url_builder_jupyter_extension	build/lib/pyvista/trame/jupyter.py	/^        from trame_client.ui.core import iframe_url_builder_jupyter_extension$/;"	i
iframe_url_builder_jupyter_extension	pyvista/trame/jupyter.py	/^        from trame_client.ui.core import iframe_url_builder_jupyter_extension$/;"	i
ignore	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
ignore	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
ignore	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
ignore	build/lib/pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
ignore	build/lib/pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
ignore	build/lib/pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
ignore	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
ignore	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
ignore	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
ignore	build/lib/pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
ignore	build/lib/pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
ignore	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
ignore	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
ignore	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
ignore	pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
ignore	pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
ignore	pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
ignore	pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
ignore	pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
ignore	pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
ignore	pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
ignore	pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
ignore_pyobj	build/lib/pyvista/ext/coverage.py	/^    def ignore_pyobj(self, full_name: str) -> bool:$/;"	m	class:CoverageBuilder
ignore_pyobj	pyvista/ext/coverage.py	/^    def ignore_pyobj(self, full_name: str) -> bool:$/;"	m	class:CoverageBuilder
image	build/lib/pyvista/plotting/plotter.py	/^    def image(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image	examples/00-load/read_image.py	/^image = examples.download_puppy()$/;"	v
image	examples/01-filter/image_fft.py	/^image = examples.download_moonlanding_image()$/;"	v
image	examples/02-plot/opacity.py	/^image = examples.download_st_helens()$/;"	v
image	examples/02-plot/texture.py	/^    image = colors.reshape((xx.shape[0], xx.shape[1], 3), order='F')$/;"	v
image	examples/02-plot/texture.py	/^image = colors.reshape((xx.shape[0], xx.shape[1], 3), order='F')$/;"	v
image	pyvista/plotting/plotter.py	/^    def image(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image	tests/conftest.py	/^def image(texture):$/;"	f
image	tests/core/test_helpers.py	/^        image = pv.ImageData()$/;"	v	class:test_wrappers.Foo
image_depth	build/lib/pyvista/plotting/plotter.py	/^    def image_depth(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image_depth	pyvista/plotting/plotter.py	/^    def image_depth(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image_dilate_erode	build/lib/pyvista/core/filters/image_data.py	/^    def image_dilate_erode($/;"	m	class:ImageDataFilters
image_dilate_erode	pyvista/core/filters/image_data.py	/^    def image_dilate_erode($/;"	m	class:ImageDataFilters
image_file	examples/02-plot/texture.py	/^image_file = examples.mapfile$/;"	v
image_from_window	build/lib/pyvista/plotting/plotter.py	/^from .utilities.regression import image_from_window$/;"	i
image_from_window	build/lib/pyvista/plotting/utilities/__init__.py	/^from .regression import image_from_window as image_from_window$/;"	i
image_from_window	build/lib/pyvista/plotting/utilities/regression.py	/^def image_from_window(render_window, as_vtk: bool = False, ignore_alpha: bool = False, scale=1):$/;"	f
image_from_window	pyvista/plotting/plotter.py	/^from .utilities.regression import image_from_window$/;"	i
image_from_window	pyvista/plotting/utilities/__init__.py	/^from .regression import image_from_window as image_from_window$/;"	i
image_from_window	pyvista/plotting/utilities/regression.py	/^def image_from_window(render_window, as_vtk: bool = False, ignore_alpha: bool = False, scale=1):$/;"	f
image_scale	build/lib/pyvista/plotting/plotter.py	/^    def image_scale(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image_scale	build/lib/pyvista/plotting/plotter.py	/^    def image_scale(self, value: int) -> None:$/;"	m	class:BasePlotter
image_scale	build/lib/pyvista/plotting/themes.py	/^    def image_scale(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Theme
image_scale	build/lib/pyvista/plotting/themes.py	/^    def image_scale(self, value: int):$/;"	m	class:Theme
image_scale	pyvista/plotting/plotter.py	/^    def image_scale(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
image_scale	pyvista/plotting/plotter.py	/^    def image_scale(self, value: int) -> None:$/;"	m	class:BasePlotter
image_scale	pyvista/plotting/themes.py	/^    def image_scale(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Theme
image_scale	pyvista/plotting/themes.py	/^    def image_scale(self, value: int):$/;"	m	class:Theme
image_scale_context	build/lib/pyvista/plotting/plotter.py	/^    def image_scale_context(self, scale: int | None = None) -> Iterator[BasePlotter]:$/;"	m	class:BasePlotter
image_scale_context	pyvista/plotting/plotter.py	/^    def image_scale_context(self, scale: int | None = None) -> Iterator[BasePlotter]:$/;"	m	class:BasePlotter
image_template	doc/source/make_tables.py	/^    image_template = _aligned_dedent($/;"	v	class:DatasetCard
image_threshold	build/lib/pyvista/core/filters/image_data.py	/^    def image_threshold($/;"	m	class:ImageDataFilters
image_threshold	pyvista/core/filters/image_data.py	/^    def image_threshold($/;"	m	class:ImageDataFilters
image_to_texture	build/lib/pyvista/plotting/__init__.py	/^from .texture import image_to_texture as image_to_texture$/;"	i
image_to_texture	build/lib/pyvista/plotting/texture.py	/^def image_to_texture(image):$/;"	f
image_to_texture	pyvista/plotting/__init__.py	/^from .texture import image_to_texture as image_to_texture$/;"	i
image_to_texture	pyvista/plotting/texture.py	/^def image_to_texture(image):$/;"	f
imageio	build/lib/pyvista/core/utilities/fileio.py	/^    import imageio$/;"	i
imageio	pyvista/core/utilities/fileio.py	/^    import imageio$/;"	i
imageio	tests/core/test_reader.py	/^    import imageio$/;"	i
imageio	tests/plotting/test_plotting.py	/^    import imageio$/;"	i
imageio_ffmpeg	tests/plotting/test_plotting.py	/^        import imageio_ffmpeg$/;"	i
images_rst	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^    images_rst = ''$/;"	v
images_rst	pyvista/plotting/utilities/sphinx_gallery.py	/^    images_rst = ''$/;"	v
import	build/lib/pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
import	build/lib/pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
import	build/lib/pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
import	build/lib/pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
import	build/lib/pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
import	doc/source/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
import	doc/source/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
import	pyvista/core/utilities/helpers.py	/^        from pyvista import DataObject  # avoid circular import$/;"	i
import	pyvista/core/utilities/reader.py	/^        from pyvista.core.filters import _update_alg  # avoid circular import$/;"	i
import	pyvista/plotting/_property.py	/^        from pyvista import examples  # avoid circular import$/;"	i
import	pyvista/plotting/prop3d.py	/^        from pyvista import Actor  # Avoid circular import$/;"	i
import	pyvista/plotting/widgets.py	/^        from pyvista.core.filters import _get_output  # avoids circular import$/;"	i
import	tests/plotting/tinypages/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
import	tests/plotting/tinypages/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
import_3ds	build/lib/pyvista/plotting/plotter.py	/^    def import_3ds(self, filename) -> None:$/;"	m	class:BasePlotter
import_3ds	pyvista/plotting/plotter.py	/^    def import_3ds(self, filename) -> None:$/;"	m	class:BasePlotter
import_colors_dict	build/lib/pyvista/examples/downloads.py	/^    def import_colors_dict(module_path):$/;"	m	class:_WholeBodyCTUtilities
import_colors_dict	pyvista/examples/downloads.py	/^    def import_colors_dict(module_path):$/;"	m	class:_WholeBodyCTUtilities
import_gltf	build/lib/pyvista/plotting/plotter.py	/^    def import_gltf(self, filename, set_camera=True):$/;"	m	class:BasePlotter
import_gltf	pyvista/plotting/plotter.py	/^    def import_gltf(self, filename, set_camera=True):$/;"	m	class:BasePlotter
import_obj	build/lib/pyvista/plotting/plotter.py	/^    def import_obj(self, filename, filename_mtl=None) -> None:$/;"	m	class:BasePlotter
import_obj	pyvista/plotting/plotter.py	/^    def import_obj(self, filename, filename_mtl=None) -> None:$/;"	m	class:BasePlotter
import_vrml	build/lib/pyvista/plotting/plotter.py	/^    def import_vrml(self, filename) -> None:$/;"	m	class:BasePlotter
import_vrml	pyvista/plotting/plotter.py	/^    def import_vrml(self, filename) -> None:$/;"	m	class:BasePlotter
importlib	build/lib/pyvista/__init__.py	/^    import importlib$/;"	i
importlib	build/lib/pyvista/core/utilities/misc.py	/^import importlib$/;"	i
importlib	build/lib/pyvista/core/utilities/observers.py	/^import importlib.util$/;"	i
importlib	build/lib/pyvista/core/utilities/reader.py	/^import importlib$/;"	i
importlib	build/lib/pyvista/errors.py	/^import importlib$/;"	i
importlib	build/lib/pyvista/examples/downloads.py	/^import importlib$/;"	i
importlib	build/lib/pyvista/examples/downloads.py	/^import importlib.util$/;"	i
importlib	build/lib/pyvista/jupyter/__init__.py	/^import importlib.util$/;"	i
importlib	build/lib/pyvista/plotting/plotting/__init__.py	/^import importlib$/;"	i
importlib	build/lib/pyvista/typing/mypy_plugin.py	/^import importlib.util$/;"	i
importlib	build/lib/pyvista/utilities/__init__.py	/^import importlib$/;"	i
importlib	doc/source/conf.py	/^import importlib.util$/;"	i
importlib	pyvista/__init__.py	/^    import importlib$/;"	i
importlib	pyvista/core/utilities/misc.py	/^import importlib$/;"	i
importlib	pyvista/core/utilities/observers.py	/^import importlib.util$/;"	i
importlib	pyvista/core/utilities/reader.py	/^import importlib$/;"	i
importlib	pyvista/errors.py	/^import importlib$/;"	i
importlib	pyvista/examples/downloads.py	/^import importlib$/;"	i
importlib	pyvista/examples/downloads.py	/^import importlib.util$/;"	i
importlib	pyvista/jupyter/__init__.py	/^import importlib.util$/;"	i
importlib	pyvista/plotting/plotting/__init__.py	/^import importlib$/;"	i
importlib	pyvista/typing/mypy_plugin.py	/^import importlib.util$/;"	i
importlib	pyvista/utilities/__init__.py	/^import importlib$/;"	i
importlib	tests/namespace/test_plotting_namespace.py	/^import importlib$/;"	i
importlib	tests/namespace/test_utilities_namespace.py	/^import importlib$/;"	i
importlib	tests/plotting/jupyter/test_static.py	/^import importlib.util$/;"	i
importlib	tests/plotting/test_colors.py	/^import importlib.util$/;"	i
importlib	tests/plotting/test_plotting_utilities.py	/^import importlib.util$/;"	i
imread	build/lib/pyvista/core/utilities/fileio.py	/^        from imageio.v2 import imread$/;"	i
imread	pyvista/core/utilities/fileio.py	/^        from imageio.v2 import imread$/;"	i
imread	tests/plotting/test_scraper.py	/^from matplotlib.pyplot import imread$/;"	i
include_label	examples/99-advanced/anatomical_groups.py	/^    def include_label(label_name: str):$/;"	f	function:filter_labels
increment	examples/01-filter/slicing.py	/^increment = np.pi \/ 6.0$/;"	v
increment_point_size_and_line_width	build/lib/pyvista/plotting/plotter.py	/^    def increment_point_size_and_line_width(self, increment) -> None:$/;"	m	class:BasePlotter
increment_point_size_and_line_width	pyvista/plotting/plotter.py	/^    def increment_point_size_and_line_width(self, increment) -> None:$/;"	m	class:BasePlotter
indent	tests/check_doctest_names.py	/^from textwrap import indent$/;"	i
indentation	doc/source/make_tables.py	/^        indentation = _repeat_string(' ', num_repeat=indent_size * indent_level)$/;"	v
indented_firgure_rst	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^            indented_firgure_rst = '\\n'.join($/;"	v
indented_firgure_rst	pyvista/plotting/utilities/sphinx_gallery.py	/^            indented_firgure_rst = '\\n'.join($/;"	v
independent_components	build/lib/pyvista/plotting/volume_property.py	/^    def independent_components(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
independent_components	build/lib/pyvista/plotting/volume_property.py	/^    def independent_components(self, value: bool):$/;"	m	class:VolumeProperty
independent_components	pyvista/plotting/volume_property.py	/^    def independent_components(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
independent_components	pyvista/plotting/volume_property.py	/^    def independent_components(self, value: bool):$/;"	m	class:VolumeProperty
indeterminate	examples_trame/basic/file_viewer.py	/^            indeterminate=True,$/;"	v
index_of_refraction	build/lib/pyvista/plotting/actor_properties.py	/^    def index_of_refraction(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
index_of_refraction	build/lib/pyvista/plotting/actor_properties.py	/^    def index_of_refraction(self, value: float):$/;"	m	class:ActorProperties
index_of_refraction	pyvista/plotting/actor_properties.py	/^    def index_of_refraction(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
index_of_refraction	pyvista/plotting/actor_properties.py	/^    def index_of_refraction(self, value: float):$/;"	m	class:ActorProperties
index_to_loc	build/lib/pyvista/plotting/renderers.py	/^    def index_to_loc(self, index):$/;"	m	class:Renderers
index_to_loc	pyvista/plotting/renderers.py	/^    def index_to_loc(self, index):$/;"	m	class:Renderers
index_to_physical_matrix	build/lib/pyvista/core/grid.py	/^    def index_to_physical_matrix(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
index_to_physical_matrix	build/lib/pyvista/core/grid.py	/^    def index_to_physical_matrix(self: Self, matrix: TransformLike) -> None:  # numpydoc ignore=GL08$/;"	m	class:ImageData
index_to_physical_matrix	pyvista/core/grid.py	/^    def index_to_physical_matrix(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
index_to_physical_matrix	pyvista/core/grid.py	/^    def index_to_physical_matrix(self: Self, matrix: TransformLike) -> None:  # numpydoc ignore=GL08$/;"	m	class:ImageData
indices	examples/99-advanced/atomic_orbitals.py	/^indices = rng.choice(hydro_orbital.n_points, 10000, p=prob)$/;"	v
info	examples/01-filter/mesh_quality.py	/^info = pv.cell_quality_info('TRIANGLE', 'shape')$/;"	v
init	build/lib/pyvista/ext/coverage.py	/^    def init(self) -> None:$/;"	m	class:CoverageBuilder
init	pyvista/ext/coverage.py	/^    def init(self) -> None:$/;"	m	class:CoverageBuilder
init_cards	doc/source/make_tables.py	/^    def init_cards(cls):$/;"	m	class:DatasetCardFetcher
init_dataset_names	doc/source/make_tables.py	/^    def init_dataset_names(cls):$/;"	m	class:DatasetGalleryCarousel
init_mesh	examples/01-filter/image_fft_perlin_noise.py	/^init_mesh = warp_low_pass_noise(1e-2)$/;"	v
initial_step_length	examples/01-filter/streamlines.py	/^    initial_step_length=2.0,$/;"	v
initial_step_length	examples/99-advanced/magnetic_fields.py	/^    initial_step_length=0.1,$/;"	v
initialize	build/lib/pyvista/plotting/render_window_interactor.py	/^    def initialize(self):$/;"	m	class:RenderWindowInteractor
initialize	build/lib/pyvista/trame/jupyter.py	/^def initialize($/;"	f
initialize	pyvista/plotting/render_window_interactor.py	/^    def initialize(self):$/;"	m	class:RenderWindowInteractor
initialize	pyvista/trame/jupyter.py	/^def initialize($/;"	f
initialized	build/lib/pyvista/plotting/render_window_interactor.py	/^    def initialized(self):  # numpydoc ignore=RT01$/;"	m	class:RenderWindowInteractor
initialized	pyvista/plotting/render_window_interactor.py	/^    def initialized(self):  # numpydoc ignore=RT01$/;"	m	class:RenderWindowInteractor
inlet	examples/99-advanced/openfoam_tubes.py	/^inlet = block[1][2]$/;"	v
inlet_surface	examples/01-filter/integrate_data.py	/^inlet_surface = dataset.slice('z', origin=(0, 0, 182))$/;"	v
inner	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def inner(self: DiscSource) -> float:$/;"	m	class:DiscSource
inner	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def inner(self: DiscSource, inner: float) -> None:$/;"	m	class:DiscSource
inner	examples/01-filter/clipping_with_surface.py	/^inner = dataset.threshold(0.0, scalars='implicit_distance', invert=True)$/;"	v
inner	examples/99-advanced/planets.py	/^inner = 60268.0 + 7000.0$/;"	v
inner	pyvista/core/utilities/geometric_sources.py	/^    def inner(self: DiscSource) -> float:$/;"	m	class:DiscSource
inner	pyvista/core/utilities/geometric_sources.py	/^    def inner(self: DiscSource, inner: float) -> None:$/;"	m	class:DiscSource
input	build/lib/pyvista/plotting/text.py	/^    def input(self):$/;"	m	class:Text
input	build/lib/pyvista/plotting/text.py	/^    def input(self, text: str):$/;"	m	class:Text
input	pyvista/plotting/text.py	/^    def input(self):$/;"	m	class:Text
input	pyvista/plotting/text.py	/^    def input(self, text: str):$/;"	m	class:Text
input_active_scalars_info	tests/core/test_dataset_filters.py	/^    def input_active_scalars_info(self):$/;"	m	class:InterrogateVTKGlyph3D
input_active_vectors_info	tests/core/test_dataset_filters.py	/^    def input_active_vectors_info(self):$/;"	m	class:InterrogateVTKGlyph3D
input_data_object	tests/core/test_dataset_filters.py	/^    def input_data_object(self):$/;"	m	class:InterrogateVTKGlyph3D
insert	build/lib/pyvista/core/composite.py	/^    def insert($/;"	m	class:MultiBlock
insert	build/lib/pyvista/core/partitioned.py	/^    def insert(self, index: int, dataset: DataSet) -> None:  # numpydoc ignore=PR01$/;"	m	class:PartitionedDataSet
insert	build/lib/pyvista/plotting/prop_collection.py	/^    def insert(self, index, value) -> None:$/;"	m	class:_PropCollection
insert	pyvista/core/composite.py	/^    def insert($/;"	m	class:MultiBlock
insert	pyvista/core/partitioned.py	/^    def insert(self, index: int, dataset: DataSet) -> None:  # numpydoc ignore=PR01$/;"	m	class:PartitionedDataSet
insert	pyvista/plotting/prop_collection.py	/^    def insert(self, index, value) -> None:$/;"	m	class:_PropCollection
insert_arange_narray	tests/core/test_datasetattributes.py	/^def insert_arange_narray(hexbeam_point_attributes):$/;"	f
insert_bool_array	tests/core/test_datasetattributes.py	/^def insert_bool_array(hexbeam_point_attributes):$/;"	f
insert_string_array	tests/core/test_datasetattributes.py	/^def insert_string_array(hexbeam_point_attributes):$/;"	f
inside	examples/01-filter/extract_cells_inside_surface.py	/^inside = select.threshold(0.5)$/;"	v
inspect	build/lib/pyvista/__init__.py	/^    import inspect$/;"	i
inspect	build/lib/pyvista/core/_validation/validate.py	/^import inspect$/;"	i
inspect	build/lib/pyvista/core/utilities/docs.py	/^import inspect$/;"	i
inspect	build/lib/pyvista/errors.py	/^import inspect$/;"	i
inspect	build/lib/pyvista/ext/coverage.py	/^import inspect$/;"	i
inspect	build/lib/pyvista/plotting/charts.py	/^import inspect$/;"	i
inspect	build/lib/pyvista/plotting/colors.py	/^import inspect$/;"	i
inspect	build/lib/pyvista/plotting/plotting/__init__.py	/^import inspect$/;"	i
inspect	build/lib/pyvista/utilities/__init__.py	/^import inspect$/;"	i
inspect	doc/source/make_tables.py	/^import inspect$/;"	i
inspect	pyvista/__init__.py	/^    import inspect$/;"	i
inspect	pyvista/core/_validation/validate.py	/^import inspect$/;"	i
inspect	pyvista/core/utilities/docs.py	/^import inspect$/;"	i
inspect	pyvista/errors.py	/^import inspect$/;"	i
inspect	pyvista/ext/coverage.py	/^import inspect$/;"	i
inspect	pyvista/plotting/charts.py	/^import inspect$/;"	i
inspect	pyvista/plotting/colors.py	/^import inspect$/;"	i
inspect	pyvista/plotting/plotting/__init__.py	/^import inspect$/;"	i
inspect	pyvista/utilities/__init__.py	/^import inspect$/;"	i
inspect	tests/examples/test_cell_examples.py	/^import inspect$/;"	i
inspect	tests/examples/test_dataset_loader.py	/^import inspect$/;"	i
inspect	tests/plotting/conftest.py	/^import inspect$/;"	i
inspect	tests/plotting/test_plotting.py	/^import inspect$/;"	i
inspect	tests/typing/test_return_type.py	/^import inspect$/;"	i
int_rgb	build/lib/pyvista/plotting/colors.py	/^    def int_rgb(self) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:Color
int_rgb	pyvista/plotting/colors.py	/^    def int_rgb(self) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:Color
int_rgba	build/lib/pyvista/plotting/colors.py	/^    def int_rgba(self) -> tuple[int, int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:Color
int_rgba	pyvista/plotting/colors.py	/^    def int_rgba(self) -> tuple[int, int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:Color
integers	tests/core/test_dataobject_filters.py	/^from hypothesis.strategies import integers$/;"	i
integers	tests/core/test_dataset_filters.py	/^from hypothesis.strategies import integers$/;"	i
integers	tests/core/test_datasetattributes.py	/^from hypothesis.strategies import integers$/;"	i
integers	tests/core/test_geometric_sources.py	/^from hypothesis.strategies import integers$/;"	i
integrate_data	build/lib/pyvista/core/filters/data_set.py	/^    def integrate_data(  # type: ignore[misc]$/;"	m	class:DataSetFilters
integrate_data	pyvista/core/filters/data_set.py	/^    def integrate_data(  # type: ignore[misc]$/;"	m	class:DataSetFilters
integrated_data	examples/01-filter/integrate_data.py	/^integrated_data = inlet_surface.integrate_data()$/;"	v
integrated_volume	examples/01-filter/integrate_data.py	/^integrated_volume = dataset.integrate_data()$/;"	v
integration_direction	examples/99-advanced/magnetic_fields.py	/^    integration_direction='both',$/;"	v
intensity	build/lib/pyvista/plotting/lights.py	/^    def intensity(self):  # numpydoc ignore=RT01$/;"	m	class:Light
intensity	build/lib/pyvista/plotting/lights.py	/^    def intensity(self, intensity):$/;"	m	class:Light
intensity	examples/04-lights/shadows.py	/^    intensity=0.3,$/;"	v
intensity	examples/04-lights/shadows.py	/^    intensity=1,$/;"	v
intensity	examples/04-lights/shadows.py	/^    intensity=15,$/;"	v
intensity	pyvista/plotting/lights.py	/^    def intensity(self):  # numpydoc ignore=RT01$/;"	m	class:Light
intensity	pyvista/plotting/lights.py	/^    def intensity(self, intensity):$/;"	m	class:Light
interact_callback	tests/plotting/test_widgets.py	/^    def interact_callback(transform):$/;"	f	function:test_affine_widget
interaction_event	examples/02-plot/chart_overlays.py	/^    interaction_event='always',$/;"	v
interaction_event	examples/02-plot/lookup_table.py	/^    interaction_event='always',$/;"	v
interaction_event	examples/03-widgets/clip_volume.py	/^    interaction_event='always',$/;"	v
interactive	build/lib/pyvista/_plot.py	/^        interactive=interactive,$/;"	v
interactive	build/lib/pyvista/plotting/themes.py	/^    def interactive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
interactive	build/lib/pyvista/plotting/themes.py	/^    def interactive(self, interactive: bool):$/;"	m	class:Theme
interactive	pyvista/_plot.py	/^        interactive=interactive,$/;"	v
interactive	pyvista/plotting/themes.py	/^    def interactive(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
interactive	pyvista/plotting/themes.py	/^    def interactive(self, interactive: bool):$/;"	m	class:Theme
interactive_ratio	build/lib/pyvista/plotting/themes.py	/^    def interactive_ratio(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
interactive_ratio	build/lib/pyvista/plotting/themes.py	/^    def interactive_ratio(self, interactive_ratio: float):$/;"	m	class:_TrameConfig
interactive_ratio	pyvista/plotting/themes.py	/^    def interactive_ratio(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
interactive_ratio	pyvista/plotting/themes.py	/^    def interactive_ratio(self, interactive_ratio: float):$/;"	m	class:_TrameConfig
internal_mesh	examples/99-advanced/openfoam_example.py	/^internal_mesh = mesh['internalMesh']  # or internal_mesh = mesh[0]$/;"	v
internal_mesh	examples/99-advanced/openfoam_example.py	/^internal_mesh = mesh['internalMesh']$/;"	v
internal_mesh	examples/99-advanced/openfoam_example.py	/^internal_mesh = reader.read()['internalMesh']$/;"	v
interp	examples/01-filter/interpolate.py	/^interp = grid.interpolate(probes, radius=15000, sharpness=10, strategy='mask_points')$/;"	v
interp1d	build/lib/pyvista/plotting/tools.py	/^                from scipy.interpolate import interp1d$/;"	i
interp1d	pyvista/plotting/tools.py	/^                from scipy.interpolate import interp1d$/;"	i
interpolate	build/lib/pyvista/core/filters/data_set.py	/^    def interpolate(  # type: ignore[misc]$/;"	m	class:DataSetFilters
interpolate	build/lib/pyvista/plotting/texture.py	/^    def interpolate(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
interpolate	build/lib/pyvista/plotting/texture.py	/^    def interpolate(self, value: bool):$/;"	m	class:Texture
interpolate	pyvista/core/filters/data_set.py	/^    def interpolate(  # type: ignore[misc]$/;"	m	class:DataSetFilters
interpolate	pyvista/plotting/texture.py	/^    def interpolate(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
interpolate	pyvista/plotting/texture.py	/^    def interpolate(self, value: bool):$/;"	m	class:Texture
interpolate_before_map	build/lib/pyvista/plotting/mapper.py	/^    def interpolate_before_map(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
interpolate_before_map	build/lib/pyvista/plotting/mapper.py	/^    def interpolate_before_map(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
interpolate_before_map	build/lib/pyvista/plotting/mapper.py	/^    def interpolate_before_map(self, *args) -> None:$/;"	m	class:_BaseVolumeMapper
interpolate_before_map	build/lib/pyvista/plotting/mapper.py	/^    def interpolate_before_map(self, value: bool) -> None:$/;"	m	class:_BaseMapper
interpolate_before_map	build/lib/pyvista/plotting/themes.py	/^    def interpolate_before_map(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
interpolate_before_map	build/lib/pyvista/plotting/themes.py	/^    def interpolate_before_map(self, value: bool):$/;"	m	class:Theme
interpolate_before_map	examples/02-plot/interpolate_before_map.py	/^    interpolate_before_map=False,$/;"	v
interpolate_before_map	examples/02-plot/interpolate_before_map.py	/^    interpolate_before_map=True,$/;"	v
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self, *args) -> None:$/;"	m	class:_BaseVolumeMapper
interpolate_before_map	pyvista/plotting/mapper.py	/^    def interpolate_before_map(self, value: bool) -> None:$/;"	m	class:_BaseMapper
interpolate_before_map	pyvista/plotting/themes.py	/^    def interpolate_before_map(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
interpolate_before_map	pyvista/plotting/themes.py	/^    def interpolate_before_map(self, value: bool):$/;"	m	class:Theme
interpolated	examples/01-filter/interpolate.py	/^interpolated = surface.interpolate(points, radius=12.0)$/;"	v
interpolation	build/lib/pyvista/plotting/_property.py	/^    def interpolation(self) -> InterpolationType:  # numpydoc ignore=RT01$/;"	m	class:Property
interpolation	build/lib/pyvista/plotting/_property.py	/^    def interpolation(self, value: str | int | InterpolationType):$/;"	m	class:Property
interpolation	build/lib/pyvista/plotting/themes.py	/^    def interpolation($/;"	m	class:_LightingConfig
interpolation	build/lib/pyvista/plotting/themes.py	/^    def interpolation(self) -> InterpolationType:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
interpolation	pyvista/plotting/_property.py	/^    def interpolation(self) -> InterpolationType:  # numpydoc ignore=RT01$/;"	m	class:Property
interpolation	pyvista/plotting/_property.py	/^    def interpolation(self, value: str | int | InterpolationType):$/;"	m	class:Property
interpolation	pyvista/plotting/themes.py	/^    def interpolation($/;"	m	class:_LightingConfig
interpolation	pyvista/plotting/themes.py	/^    def interpolation(self) -> InterpolationType:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
interpolation_model	build/lib/pyvista/plotting/actor_properties.py	/^    def interpolation_model(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
interpolation_model	build/lib/pyvista/plotting/actor_properties.py	/^    def interpolation_model(self, model: InterpolationType):$/;"	m	class:ActorProperties
interpolation_model	pyvista/plotting/actor_properties.py	/^    def interpolation_model(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
interpolation_model	pyvista/plotting/actor_properties.py	/^    def interpolation_model(self, model: InterpolationType):$/;"	m	class:ActorProperties
interpolation_type	build/lib/pyvista/plotting/volume_property.py	/^    def interpolation_type(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
interpolation_type	build/lib/pyvista/plotting/volume_property.py	/^    def interpolation_type(self, value: str):$/;"	m	class:VolumeProperty
interpolation_type	pyvista/plotting/volume_property.py	/^    def interpolation_type(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
interpolation_type	pyvista/plotting/volume_property.py	/^    def interpolation_type(self, value: str):$/;"	m	class:VolumeProperty
intersection	build/lib/pyvista/core/filters/poly_data.py	/^    def intersection($/;"	m	class:PolyDataFilters
intersection	examples/01-filter/poly_ray_trace.py	/^intersection = pv.PolyData(points)$/;"	v
intersection	pyvista/core/filters/poly_data.py	/^    def intersection($/;"	m	class:PolyDataFilters
intersphinx_mapping	doc/source/conf.py	/^intersphinx_mapping = {$/;"	v
intersphinx_timeout	doc/source/conf.py	/^intersphinx_timeout = 10$/;"	v
inv_axes	examples/02-plot/spherical.py	/^inv_axes = [*range(u_vec.ndim)[::-1]]$/;"	v
inverse_matrix	build/lib/pyvista/core/utilities/transform.py	/^    def inverse_matrix(self: Transform) -> NumpyArray[float]:$/;"	m	class:Transform
inverse_matrix	pyvista/core/utilities/transform.py	/^    def inverse_matrix(self: Transform) -> NumpyArray[float]:$/;"	m	class:Transform
inverse_matrix_list	build/lib/pyvista/core/utilities/transform.py	/^    def inverse_matrix_list(self: Transform) -> list[NumpyArray[float]]:$/;"	m	class:Transform
inverse_matrix_list	pyvista/core/utilities/transform.py	/^    def inverse_matrix_list(self: Transform) -> list[NumpyArray[float]]:$/;"	m	class:Transform
invert	build/lib/pyvista/core/utilities/transform.py	/^    def invert(self: Transform) -> Transform:  # numpydoc ignore: RT01$/;"	m	class:Transform
invert	pyvista/core/utilities/transform.py	/^    def invert(self: Transform) -> Transform:  # numpydoc ignore: RT01$/;"	m	class:Transform
io	build/lib/pyvista/plotting/plotter.py	/^import io$/;"	i
io	build/lib/pyvista/trame/ui/base_viewer.py	/^import io$/;"	i
io	build/lib/pyvista/trame/views.py	/^import io$/;"	i
io	doc/source/make_tables.py	/^import io$/;"	i
io	pyvista/plotting/plotter.py	/^import io$/;"	i
io	pyvista/trame/ui/base_viewer.py	/^import io$/;"	i
io	pyvista/trame/views.py	/^import io$/;"	i
io	tests/plotting/test_camera.py	/^import io$/;"	i
io	tests/plotting/test_plotting.py	/^import io$/;"	i
irregular_faces	build/lib/pyvista/core/pointset.py	/^    def irregular_faces(self) -> tuple[NumpyArray[int], ...]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
irregular_faces	build/lib/pyvista/core/pointset.py	/^    def irregular_faces(self, faces: Sequence[VectorLike[int]]) -> None:  # numpydoc ignore=PR01$/;"	m	class:PolyData
irregular_faces	pyvista/core/pointset.py	/^    def irregular_faces(self) -> tuple[NumpyArray[int], ...]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
irregular_faces	pyvista/core/pointset.py	/^    def irregular_faces(self, faces: Sequence[VectorLike[int]]) -> None:  # numpydoc ignore=PR01$/;"	m	class:PolyData
is_all_floats	tests/typing/test_return_type.py	/^def is_all_floats(iterable: Iterable):$/;"	f
is_all_polydata	build/lib/pyvista/core/composite.py	/^    def is_all_polydata(self: MultiBlock) -> bool:$/;"	m	class:MultiBlock
is_all_polydata	pyvista/core/composite.py	/^    def is_all_polydata(self: MultiBlock) -> bool:$/;"	m	class:MultiBlock
is_all_triangles	build/lib/pyvista/core/pointset.py	/^    def is_all_triangles(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PolyData
is_all_triangles	pyvista/core/pointset.py	/^    def is_all_triangles(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PolyData
is_arm_mac	tests/core/test_utilities.py	/^is_arm_mac = platform.system() == 'Darwin' and platform.machine() == 'arm64'$/;"	v
is_binary	tests/core/test_polydata.py	/^def is_binary(filename):$/;"	f
is_camera_light	build/lib/pyvista/plotting/lights.py	/^    def is_camera_light(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_camera_light	pyvista/plotting/lights.py	/^    def is_camera_light(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_empty	build/lib/pyvista/core/composite.py	/^    def is_empty(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_empty	build/lib/pyvista/core/dataobject.py	/^    def is_empty(self) -> bool:$/;"	m	class:DataObject
is_empty	build/lib/pyvista/core/dataset.py	/^    def is_empty(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:DataSet
is_empty	build/lib/pyvista/core/objects.py	/^    def is_empty(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Table
is_empty	pyvista/core/composite.py	/^    def is_empty(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_empty	pyvista/core/dataobject.py	/^    def is_empty(self) -> bool:$/;"	m	class:DataObject
is_empty	pyvista/core/dataset.py	/^    def is_empty(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:DataSet
is_empty	pyvista/core/objects.py	/^    def is_empty(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Table
is_headlight	build/lib/pyvista/plotting/lights.py	/^    def is_headlight(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_headlight	pyvista/plotting/lights.py	/^    def is_headlight(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_heterogeneous	build/lib/pyvista/core/composite.py	/^    def is_heterogeneous(self: MultiBlock) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_heterogeneous	pyvista/core/composite.py	/^    def is_heterogeneous(self: MultiBlock) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_homogeneous	build/lib/pyvista/core/composite.py	/^    def is_homogeneous(self: MultiBlock) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_homogeneous	pyvista/core/composite.py	/^    def is_homogeneous(self: MultiBlock) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_inside_bounds	build/lib/pyvista/core/utilities/__init__.py	/^from .helpers import is_inside_bounds as is_inside_bounds$/;"	i
is_inside_bounds	build/lib/pyvista/core/utilities/helpers.py	/^def is_inside_bounds(point, bounds):$/;"	f
is_inside_bounds	pyvista/core/utilities/__init__.py	/^from .helpers import is_inside_bounds as is_inside_bounds$/;"	i
is_inside_bounds	pyvista/core/utilities/helpers.py	/^def is_inside_bounds(point, bounds):$/;"	f
is_inside_bounds	tests/core/test_utilities.py	/^from pyvista.core.utilities.helpers import is_inside_bounds$/;"	i
is_inverted	build/lib/pyvista/core/utilities/transform.py	/^    def is_inverted(self: Transform) -> bool:  # numpydoc ignore: RT01$/;"	m	class:Transform
is_inverted	pyvista/core/utilities/transform.py	/^    def is_inverted(self: Transform) -> bool:  # numpydoc ignore: RT01$/;"	m	class:Transform
is_linear	build/lib/pyvista/core/cell.py	/^    def is_linear(self: Self) -> bool:$/;"	m	class:Cell
is_linear	pyvista/core/cell.py	/^    def is_linear(self: Self) -> bool:$/;"	m	class:Cell
is_local	tests/plotting/test_plotting.py	/^    def is_local(obj):$/;"	f	function:_get_module_members
is_manifold	build/lib/pyvista/core/pointset.py	/^    def is_manifold(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PolyData
is_manifold	pyvista/core/pointset.py	/^    def is_manifold(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:PolyData
is_meshio_mesh	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import is_meshio_mesh as is_meshio_mesh$/;"	i
is_meshio_mesh	build/lib/pyvista/core/utilities/fileio.py	/^def is_meshio_mesh(obj: object) -> bool:$/;"	f
is_meshio_mesh	build/lib/pyvista/core/utilities/helpers.py	/^from .fileio import is_meshio_mesh$/;"	i
is_meshio_mesh	pyvista/core/utilities/__init__.py	/^from .fileio import is_meshio_mesh as is_meshio_mesh$/;"	i
is_meshio_mesh	pyvista/core/utilities/fileio.py	/^def is_meshio_mesh(obj: object) -> bool:$/;"	f
is_meshio_mesh	pyvista/core/utilities/helpers.py	/^from .fileio import is_meshio_mesh$/;"	i
is_nested	build/lib/pyvista/core/composite.py	/^    def is_nested(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_nested	pyvista/core/composite.py	/^    def is_nested(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
is_path_relative_to	build/lib/pyvista/ext/viewer_directive.py	/^def is_path_relative_to(path, other):$/;"	f
is_path_relative_to	pyvista/ext/viewer_directive.py	/^def is_path_relative_to(path, other):$/;"	f
is_pyvista_dataset	build/lib/pyvista/core/composite.py	/^from .utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	build/lib/pyvista/core/dataset.py	/^from .utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	build/lib/pyvista/core/partitioned.py	/^from .utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	build/lib/pyvista/core/utilities/__init__.py	/^from .helpers import is_pyvista_dataset as is_pyvista_dataset$/;"	i
is_pyvista_dataset	build/lib/pyvista/core/utilities/helpers.py	/^def is_pyvista_dataset($/;"	f
is_pyvista_dataset	build/lib/pyvista/core/utilities/helpers.py	/^def is_pyvista_dataset(obj: Any) -> bool:$/;"	f
is_pyvista_dataset	build/lib/pyvista/plotting/helpers.py	/^from pyvista.core.utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	pyvista/core/composite.py	/^from .utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	pyvista/core/dataset.py	/^from .utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	pyvista/core/partitioned.py	/^from .utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	pyvista/core/utilities/__init__.py	/^from .helpers import is_pyvista_dataset as is_pyvista_dataset$/;"	i
is_pyvista_dataset	pyvista/core/utilities/helpers.py	/^def is_pyvista_dataset($/;"	f
is_pyvista_dataset	pyvista/core/utilities/helpers.py	/^def is_pyvista_dataset(obj: Any) -> bool:$/;"	f
is_pyvista_dataset	pyvista/plotting/helpers.py	/^from pyvista.core.utilities.helpers import is_pyvista_dataset$/;"	i
is_pyvista_dataset	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.helpers import is_pyvista_dataset$/;"	i
is_scene_light	build/lib/pyvista/plotting/lights.py	/^    def is_scene_light(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_scene_light	pyvista/plotting/lights.py	/^    def is_scene_light(self):  # numpydoc ignore=RT01$/;"	m	class:Light
is_set	build/lib/pyvista/plotting/camera.py	/^    def is_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Camera
is_set	build/lib/pyvista/plotting/camera.py	/^    def is_set(self, value: bool):$/;"	m	class:Camera
is_set	pyvista/plotting/camera.py	/^    def is_set(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Camera
is_set	pyvista/plotting/camera.py	/^    def is_set(self, value: bool):$/;"	m	class:Camera
isarr_0	build/lib/pyvista/_plot.py	/^            isarr_0 = isinstance(var_item[0], np.ndarray)$/;"	v
isarr_0	pyvista/_plot.py	/^            isarr_0 = isinstance(var_item[0], np.ndarray)$/;"	v
isarr_1	build/lib/pyvista/_plot.py	/^            isarr_1 = isinstance(var_item[1], np.ndarray)$/;"	v
isarr_1	pyvista/_plot.py	/^            isarr_1 = isinstance(var_item[1], np.ndarray)$/;"	v
islice	build/lib/pyvista/core/utilities/cells.py	/^from itertools import islice$/;"	i
islice	pyvista/core/utilities/cells.py	/^from itertools import islice$/;"	i
isometric_view	build/lib/pyvista/plotting/plotter.py	/^    def isometric_view(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
isometric_view	build/lib/pyvista/plotting/renderer.py	/^    def isometric_view(self) -> None:$/;"	m	class:Renderer
isometric_view	pyvista/plotting/plotter.py	/^    def isometric_view(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
isometric_view	pyvista/plotting/renderer.py	/^    def isometric_view(self) -> None:$/;"	m	class:Renderer
isometric_view_interactive	build/lib/pyvista/plotting/plotter.py	/^    def isometric_view_interactive(self) -> None:$/;"	m	class:BasePlotter
isometric_view_interactive	pyvista/plotting/plotter.py	/^    def isometric_view_interactive(self) -> None:$/;"	m	class:BasePlotter
italic	build/lib/pyvista/plotting/text.py	/^    def italic(self) -> bool:$/;"	m	class:TextProperty
italic	build/lib/pyvista/plotting/text.py	/^    def italic(self, italic: bool):$/;"	m	class:TextProperty
italic	examples/02-plot/scalar_bars.py	/^    italic=True,$/;"	v
italic	pyvista/plotting/text.py	/^    def italic(self) -> bool:$/;"	m	class:TextProperty
italic	pyvista/plotting/text.py	/^    def italic(self, italic: bool):$/;"	m	class:TextProperty
items	build/lib/pyvista/core/datasetattributes.py	/^    def items(self: Self) -> list[tuple[str, pyvista_ndarray]]:$/;"	m	class:DataSetAttributes
items	build/lib/pyvista/core/objects.py	/^    def items(self):$/;"	m	class:Table
items	build/lib/pyvista/plotting/prop_collection.py	/^    def items(self) -> Iterable[tuple[str, _vtk.vtkProp]]:$/;"	m	class:_PropCollection
items	build/lib/pyvista/plotting/scalar_bars.py	/^    def items(self):  # numpydoc ignore=RT01$/;"	m	class:ScalarBars
items	pyvista/core/datasetattributes.py	/^    def items(self: Self) -> list[tuple[str, pyvista_ndarray]]:$/;"	m	class:DataSetAttributes
items	pyvista/core/objects.py	/^    def items(self):$/;"	m	class:Table
items	pyvista/plotting/prop_collection.py	/^    def items(self) -> Iterable[tuple[str, _vtk.vtkProp]]:$/;"	m	class:_PropCollection
items	pyvista/plotting/scalar_bars.py	/^    def items(self):  # numpydoc ignore=RT01$/;"	m	class:ScalarBars
itertools	build/lib/pyvista/core/composite.py	/^import itertools$/;"	i
itertools	build/lib/pyvista/core/filters/data_object.py	/^import itertools$/;"	i
itertools	build/lib/pyvista/core/filters/data_set.py	/^import itertools$/;"	i
itertools	build/lib/pyvista/core/utilities/fileio.py	/^import itertools$/;"	i
itertools	build/lib/pyvista/core/utilities/geometric_sources.py	/^import itertools$/;"	i
itertools	build/lib/pyvista/plotting/axes_assembly.py	/^import itertools$/;"	i
itertools	build/lib/pyvista/plotting/charts.py	/^import itertools$/;"	i
itertools	pyvista/core/composite.py	/^import itertools$/;"	i
itertools	pyvista/core/filters/data_object.py	/^import itertools$/;"	i
itertools	pyvista/core/filters/data_set.py	/^import itertools$/;"	i
itertools	pyvista/core/utilities/fileio.py	/^import itertools$/;"	i
itertools	pyvista/core/utilities/geometric_sources.py	/^import itertools$/;"	i
itertools	pyvista/plotting/axes_assembly.py	/^import itertools$/;"	i
itertools	pyvista/plotting/charts.py	/^import itertools$/;"	i
itertools	tests/core/test_composite.py	/^import itertools$/;"	i
itertools	tests/core/test_dataobject_filters.py	/^import itertools$/;"	i
itertools	tests/core/test_dataset_filters.py	/^import itertools$/;"	i
itertools	tests/core/test_validation.py	/^import itertools$/;"	i
itertools	tests/plotting/test_charts.py	/^import itertools$/;"	i
itertools	tests/plotting/test_colors.py	/^import itertools$/;"	i
j_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def j_resolution(self: PlaneSource) -> int:$/;"	m	class:PlaneSource
j_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def j_resolution(self: PlaneSource, j_resolution: int) -> None:$/;"	m	class:PlaneSource
j_resolution	examples/98-common/project_points_tessellate.py	/^    j_resolution=10,$/;"	v
j_resolution	pyvista/core/utilities/geometric_sources.py	/^    def j_resolution(self: PlaneSource) -> int:$/;"	m	class:PlaneSource
j_resolution	pyvista/core/utilities/geometric_sources.py	/^    def j_resolution(self: PlaneSource, j_resolution: int) -> None:$/;"	m	class:PlaneSource
j_size	examples/01-filter/extrude_trim.py	/^    j_size=1,$/;"	v
j_size	examples/01-filter/extrude_trim.py	/^    j_size=30,$/;"	v
j_size	examples/98-common/project_points_tessellate.py	/^    j_size=2,$/;"	v
jinja2	build/lib/pyvista/ext/plot_directive.py	/^import jinja2  # Sphinx dependency.$/;"	i
jinja2	pyvista/ext/plot_directive.py	/^import jinja2  # Sphinx dependency.$/;"	i
json	build/lib/pyvista/core/utilities/arrays.py	/^import json$/;"	i
json	build/lib/pyvista/plotting/themes.py	/^import json$/;"	i
json	pyvista/core/utilities/arrays.py	/^import json$/;"	i
json	pyvista/plotting/themes.py	/^import json$/;"	i
json	tests/core/test_dataobject.py	/^import json$/;"	i
json	tests/core/test_utilities.py	/^import json$/;"	i
jupiter	examples/99-advanced/planets.py	/^jupiter = examples.planets.load_jupiter(radius=71492.0)$/;"	v
jupiter_texture	examples/99-advanced/planets.py	/^jupiter_texture = examples.planets.download_jupiter_surface(texture=True)$/;"	v
jupyter	tests/plotting/jupyter/test_static.py	/^    from pyvista import jupyter$/;"	i
jupyter	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame import jupyter$/;"	i
jupyter_backend	build/lib/pyvista/_plot.py	/^        jupyter_backend=jupyter_backend,$/;"	v
jupyter_backend	build/lib/pyvista/plotting/themes.py	/^    def jupyter_backend(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
jupyter_backend	build/lib/pyvista/plotting/themes.py	/^    def jupyter_backend(self, backend: str):$/;"	m	class:Theme
jupyter_backend	pyvista/_plot.py	/^        jupyter_backend=jupyter_backend,$/;"	v
jupyter_backend	pyvista/plotting/themes.py	/^    def jupyter_backend(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
jupyter_backend	pyvista/plotting/themes.py	/^    def jupyter_backend(self, backend: str):$/;"	m	class:Theme
jupyter_extension_available	build/lib/pyvista/plotting/themes.py	/^    def jupyter_extension_available(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_extension_available	build/lib/pyvista/plotting/themes.py	/^    def jupyter_extension_available(self, _available: bool):$/;"	m	class:_TrameConfig
jupyter_extension_available	pyvista/plotting/themes.py	/^    def jupyter_extension_available(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_extension_available	pyvista/plotting/themes.py	/^    def jupyter_extension_available(self, _available: bool):$/;"	m	class:_TrameConfig
jupyter_extension_enabled	build/lib/pyvista/plotting/themes.py	/^    def jupyter_extension_enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_extension_enabled	build/lib/pyvista/plotting/themes.py	/^    def jupyter_extension_enabled(self, enabled: bool):$/;"	m	class:_TrameConfig
jupyter_extension_enabled	build/lib/pyvista/trame/jupyter.py	/^        jupyter_extension_enabled = pyvista.global_theme.trame.jupyter_extension_enabled$/;"	v
jupyter_extension_enabled	pyvista/plotting/themes.py	/^    def jupyter_extension_enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_extension_enabled	pyvista/plotting/themes.py	/^    def jupyter_extension_enabled(self, enabled: bool):$/;"	m	class:_TrameConfig
jupyter_extension_enabled	pyvista/trame/jupyter.py	/^        jupyter_extension_enabled = pyvista.global_theme.trame.jupyter_extension_enabled$/;"	v
jupyter_kwargs	build/lib/pyvista/_plot.py	/^        jupyter_kwargs = {}$/;"	v
jupyter_kwargs	build/lib/pyvista/_plot.py	/^        jupyter_kwargs=jupyter_kwargs,$/;"	v
jupyter_kwargs	pyvista/_plot.py	/^        jupyter_kwargs = {}$/;"	v
jupyter_kwargs	pyvista/_plot.py	/^        jupyter_kwargs=jupyter_kwargs,$/;"	v
jupyter_server_name	build/lib/pyvista/plotting/themes.py	/^    def jupyter_server_name(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_server_name	build/lib/pyvista/plotting/themes.py	/^    def jupyter_server_name(self, name: str):$/;"	m	class:_TrameConfig
jupyter_server_name	pyvista/plotting/themes.py	/^    def jupyter_server_name(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_server_name	pyvista/plotting/themes.py	/^    def jupyter_server_name(self, name: str):$/;"	m	class:_TrameConfig
jupyter_server_port	build/lib/pyvista/plotting/themes.py	/^    def jupyter_server_port(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_server_port	build/lib/pyvista/plotting/themes.py	/^    def jupyter_server_port(self, port: int):$/;"	m	class:_TrameConfig
jupyter_server_port	pyvista/plotting/themes.py	/^    def jupyter_server_port(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
jupyter_server_port	pyvista/plotting/themes.py	/^    def jupyter_server_port(self, port: int):$/;"	m	class:_TrameConfig
justification_horizontal	build/lib/pyvista/plotting/text.py	/^    def justification_horizontal(self) -> str:$/;"	m	class:TextProperty
justification_horizontal	build/lib/pyvista/plotting/text.py	/^    def justification_horizontal(self, justification: str):$/;"	m	class:TextProperty
justification_horizontal	pyvista/plotting/text.py	/^    def justification_horizontal(self) -> str:$/;"	m	class:TextProperty
justification_horizontal	pyvista/plotting/text.py	/^    def justification_horizontal(self, justification: str):$/;"	m	class:TextProperty
justification_vertical	build/lib/pyvista/plotting/text.py	/^    def justification_vertical(self) -> str:$/;"	m	class:TextProperty
justification_vertical	build/lib/pyvista/plotting/text.py	/^    def justification_vertical(self, justification: str):$/;"	m	class:TextProperty
justification_vertical	pyvista/plotting/text.py	/^    def justification_vertical(self) -> str:$/;"	m	class:TextProperty
justification_vertical	pyvista/plotting/text.py	/^    def justification_vertical(self, justification: str):$/;"	m	class:TextProperty
k	examples/01-filter/flying_edges.py	/^k = 2.0$/;"	v
kappa	examples/99-advanced/sphere_eversion.py	/^kappa = (n - 1) \/ (2 * n)$/;"	v
key_press_event	build/lib/pyvista/plotting/plotter.py	/^    def key_press_event(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
key_press_event	build/lib/pyvista/plotting/render_window_interactor.py	/^    def key_press_event(self, *args):$/;"	m	class:RenderWindowInteractor
key_press_event	pyvista/plotting/plotter.py	/^    def key_press_event(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
key_press_event	pyvista/plotting/render_window_interactor.py	/^    def key_press_event(self, *args):$/;"	m	class:RenderWindowInteractor
keys	build/lib/pyvista/core/composite.py	/^    def keys(self: MultiBlock) -> list[str]:$/;"	m	class:MultiBlock
keys	build/lib/pyvista/core/datasetattributes.py	/^    def keys(self: Self) -> list[str]:$/;"	m	class:DataSetAttributes
keys	build/lib/pyvista/core/objects.py	/^    def keys(self):$/;"	m	class:Table
keys	build/lib/pyvista/plotting/prop_collection.py	/^    def keys(self) -> list[str]:$/;"	m	class:_PropCollection
keys	build/lib/pyvista/plotting/scalar_bars.py	/^    def keys(self):  # numpydoc ignore=RT01$/;"	m	class:ScalarBars
keys	examples/01-filter/gradients.py	/^keys = np.array(list(gradients.keys())).reshape(1, 3)$/;"	v
keys	examples/01-filter/gradients.py	/^keys = np.array(list(gradients.keys())).reshape(3, 3)$/;"	v
keys	pyvista/core/composite.py	/^    def keys(self: MultiBlock) -> list[str]:$/;"	m	class:MultiBlock
keys	pyvista/core/datasetattributes.py	/^    def keys(self: Self) -> list[str]:$/;"	m	class:DataSetAttributes
keys	pyvista/core/objects.py	/^    def keys(self):$/;"	m	class:Table
keys	pyvista/plotting/prop_collection.py	/^    def keys(self) -> list[str]:$/;"	m	class:_PropCollection
keys	pyvista/plotting/scalar_bars.py	/^    def keys(self):  # numpydoc ignore=RT01$/;"	m	class:ScalarBars
kind	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def kind(self: PlatonicSolidSource) -> str:$/;"	m	class:PlatonicSolidSource
kind	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def kind(self: PlatonicSolidSource, kind: str | int) -> None:$/;"	m	class:PlatonicSolidSource
kind	pyvista/core/utilities/geometric_sources.py	/^    def kind(self: PlatonicSolidSource) -> str:$/;"	m	class:PlatonicSolidSource
kind	pyvista/core/utilities/geometric_sources.py	/^    def kind(self: PlatonicSolidSource, kind: str | int) -> None:$/;"	m	class:PlatonicSolidSource
kinds	examples/00-load/create_platonic_solids.py	/^kinds = [$/;"	v
kitchen	examples/01-filter/streamlines.py	/^kitchen = examples.download_kitchen(split=True)$/;"	v
klein	examples/00-load/create_parametric_geometric_objects.py	/^klein = pv.ParametricKlein()$/;"	v
klein	examples/02-plot/backface_props.py	/^klein = pv.ParametricKlein().rotate_z(150, inplace=False).translate((6, 0, 0), inplace=False)$/;"	v
knee	examples/02-plot/opacity.py	/^knee = examples.download_knee()$/;"	v
kochanek_spline	examples/00-load/create_kochanek_spline.py	/^    kochanek_spline = pv.KochanekSpline(points, bias=[b[i], b[i], b[i]], n_points=1000)$/;"	v
kochanek_spline	examples/00-load/create_kochanek_spline.py	/^    kochanek_spline = pv.KochanekSpline(points, continuity=[c[i], c[i], c[i]], n_points=1000)$/;"	v
kochanek_spline	examples/00-load/create_kochanek_spline.py	/^    kochanek_spline = pv.KochanekSpline(points, tension=[t[i], t[i], t[i]], n_points=1000)$/;"	v
kpos	examples/01-filter/streamlines.py	/^kpos = [(-6.68, 11.9, 11.6), (3.5, 2.5, 1.26), (0.45, -0.4, 0.8)]$/;"	v
kuen	examples/00-load/create_parametric_geometric_objects.py	/^kuen = pv.ParametricKuen()$/;"	v
label	build/lib/pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label	build/lib/pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
label	build/lib/pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
label	build/lib/pyvista/plotting/charts.py	/^    def label(self, val) -> None:$/;"	m	class:Axis
label	build/lib/pyvista/plotting/charts.py	/^    def label(self, val) -> None:$/;"	m	class:_MultiCompPlot
label	build/lib/pyvista/plotting/charts.py	/^    def label(self, val) -> None:$/;"	m	class:_Plot
label	examples/01-filter/clipping_with_surface.py	/^    label='Inner region',$/;"	v
label	examples/01-filter/clipping_with_surface.py	/^    label='Outer region',$/;"	v
label	examples/98-common/project_points_tessellate.py	/^    label='Points to project',$/;"	v
label	pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label	pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
label	pyvista/plotting/charts.py	/^    def label(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
label	pyvista/plotting/charts.py	/^    def label(self, val) -> None:$/;"	m	class:Axis
label	pyvista/plotting/charts.py	/^    def label(self, val) -> None:$/;"	m	class:_MultiCompPlot
label	pyvista/plotting/charts.py	/^    def label(self, val) -> None:$/;"	m	class:_Plot
label_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
label_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_color(self, color: ColorLike):$/;"	m	class:_XYZAssembly
label_color	pyvista/plotting/axes_assembly.py	/^    def label_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
label_color	pyvista/plotting/axes_assembly.py	/^    def label_color(self, color: ColorLike):$/;"	m	class:_XYZAssembly
label_connectivity	build/lib/pyvista/core/filters/image_data.py	/^    def label_connectivity($/;"	m	class:ImageDataFilters
label_connectivity	pyvista/core/filters/image_data.py	/^    def label_connectivity($/;"	m	class:ImageDataFilters
label_edge	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_edge(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_edge	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_edge(self, edge: Literal['top', 'bottom', 'right', 'left'] | Sequence[str]):$/;"	m	class:PlanesAssembly
label_edge	pyvista/plotting/axes_assembly.py	/^    def label_edge(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_edge	pyvista/plotting/axes_assembly.py	/^    def label_edge(self, edge: Literal['top', 'bottom', 'right', 'left'] | Sequence[str]):$/;"	m	class:PlanesAssembly
label_font_size	examples/02-plot/scalar_bars.py	/^    label_font_size=16,$/;"	v
label_map	examples/01-filter/contouring.py	/^    label_map = pv.examples.load_frog_tissues()$/;"	v
label_map	examples/99-advanced/anatomical_groups.py	/^label_map = dataset['label_map']$/;"	v
label_map_from_masks	build/lib/pyvista/examples/downloads.py	/^    def label_map_from_masks(masks: pyvista.MultiBlock):$/;"	m	class:_WholeBodyCTUtilities
label_map_from_masks	pyvista/examples/downloads.py	/^    def label_map_from_masks(masks: pyvista.MultiBlock):$/;"	m	class:_WholeBodyCTUtilities
label_mode	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_mode(self) -> Literal['2D', '3D']:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_mode	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_mode(self, mode: Literal['2D', '3D']):$/;"	m	class:PlanesAssembly
label_mode	pyvista/plotting/axes_assembly.py	/^    def label_mode(self) -> Literal['2D', '3D']:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_mode	pyvista/plotting/axes_assembly.py	/^    def label_mode(self, mode: Literal['2D', '3D']):$/;"	m	class:PlanesAssembly
label_names	examples/99-advanced/anatomical_groups.py	/^label_names = dataset['segmentations'].keys()$/;"	v
label_offset	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_offset(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_offset	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_offset(self, offset: int):$/;"	m	class:PlanesAssembly
label_offset	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def label_offset(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
label_offset	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def label_offset(self, offset: float):$/;"	m	class:CubeAxesActor
label_offset	pyvista/plotting/axes_assembly.py	/^    def label_offset(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_offset	pyvista/plotting/axes_assembly.py	/^    def label_offset(self, offset: int):$/;"	m	class:PlanesAssembly
label_offset	pyvista/plotting/cube_axes_actor.py	/^    def label_offset(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
label_offset	pyvista/plotting/cube_axes_actor.py	/^    def label_offset(self, offset: float):$/;"	m	class:CubeAxesActor
label_points	examples/02-plot/distance_along_spline.py	/^label_points = []$/;"	v
label_position	build/lib/pyvista/plotting/axes_actor.py	/^    def label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
label_position	build/lib/pyvista/plotting/axes_actor.py	/^    def label_position(self, length):$/;"	m	class:AxesActor
label_position	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
label_position	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_position	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_position(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
label_position	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_position(self, position):$/;"	m	class:_XYZAssembly
label_position	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_position(self, position: float | VectorLike[float] | None):$/;"	m	class:AxesAssembly
label_position	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_position(self, position: int | VectorLike[int]):$/;"	m	class:PlanesAssembly
label_position	pyvista/plotting/axes_actor.py	/^    def label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
label_position	pyvista/plotting/axes_actor.py	/^    def label_position(self, length):$/;"	m	class:AxesActor
label_position	pyvista/plotting/axes_assembly.py	/^    def label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
label_position	pyvista/plotting/axes_assembly.py	/^    def label_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_position	pyvista/plotting/axes_assembly.py	/^    def label_position(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
label_position	pyvista/plotting/axes_assembly.py	/^    def label_position(self, position):$/;"	m	class:_XYZAssembly
label_position	pyvista/plotting/axes_assembly.py	/^    def label_position(self, position: float | VectorLike[float] | None):$/;"	m	class:AxesAssembly
label_position	pyvista/plotting/axes_assembly.py	/^    def label_position(self, position: int | VectorLike[int]):$/;"	m	class:PlanesAssembly
label_size	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
label_size	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_size	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_size(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
label_size	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_size(self, size):$/;"	m	class:_XYZAssembly
label_size	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_size(self, size: int):$/;"	m	class:AxesAssembly
label_size	build/lib/pyvista/plotting/axes_assembly.py	/^    def label_size(self, size: int):$/;"	m	class:PlanesAssembly
label_size	build/lib/pyvista/plotting/charts.py	/^    def label_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label_size	build/lib/pyvista/plotting/charts.py	/^    def label_size(self, size) -> None:$/;"	m	class:Axis
label_size	build/lib/pyvista/plotting/themes.py	/^    def label_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
label_size	build/lib/pyvista/plotting/themes.py	/^    def label_size(self, label_size: int | None):$/;"	m	class:_Font
label_size	pyvista/plotting/axes_assembly.py	/^    def label_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
label_size	pyvista/plotting/axes_assembly.py	/^    def label_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
label_size	pyvista/plotting/axes_assembly.py	/^    def label_size(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
label_size	pyvista/plotting/axes_assembly.py	/^    def label_size(self, size):$/;"	m	class:_XYZAssembly
label_size	pyvista/plotting/axes_assembly.py	/^    def label_size(self, size: int):$/;"	m	class:AxesAssembly
label_size	pyvista/plotting/axes_assembly.py	/^    def label_size(self, size: int):$/;"	m	class:PlanesAssembly
label_size	pyvista/plotting/charts.py	/^    def label_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label_size	pyvista/plotting/charts.py	/^    def label_size(self, size) -> None:$/;"	m	class:Axis
label_size	pyvista/plotting/themes.py	/^    def label_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
label_size	pyvista/plotting/themes.py	/^    def label_size(self, label_size: int | None):$/;"	m	class:_Font
label_visible	build/lib/pyvista/plotting/charts.py	/^    def label_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label_visible	build/lib/pyvista/plotting/charts.py	/^    def label_visible(self, val) -> None:$/;"	m	class:Axis
label_visible	pyvista/plotting/charts.py	/^    def label_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
label_visible	pyvista/plotting/charts.py	/^    def label_visible(self, val) -> None:$/;"	m	class:Axis
labeled_data	tests/core/test_dataset_filters.py	/^def labeled_data():$/;"	f
labeled_image	tests/core/test_dataset_filters.py	/^def labeled_image():$/;"	f
labeled_image	tests/core/test_imagedata_filters.py	/^def labeled_image():$/;"	f
labeled_image	tests/plotting/test_plotting.py	/^from tests.core.test_imagedata_filters import labeled_image  # noqa: F401$/;"	i
labels	build/lib/pyvista/plotting/axes_actor.py	/^    def labels(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
labels	build/lib/pyvista/plotting/axes_actor.py	/^    def labels(self, labels: list[str] | tuple[str]):$/;"	m	class:AxesActor
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels($/;"	m	class:AxesAssemblySymmetric
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels(self) -> tuple[str, str, str, str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels(self, labels):$/;"	m	class:_XYZAssembly
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels(self, labels: list[str] | tuple[str, str, str]):$/;"	m	class:AxesAssembly
labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def labels(self, labels: list[str] | tuple[str, str, str]):$/;"	m	class:PlanesAssembly
labels	build/lib/pyvista/plotting/charts.py	/^    def labels(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
labels	build/lib/pyvista/plotting/charts.py	/^    def labels(self, val):$/;"	m	class:_MultiCompPlot
labels	build/lib/pyvista/plotting/helpers.py	/^    labels = [labels[0:2], labels[2:4]]$/;"	v
labels	examples/02-plot/chart_basics.py	/^labels = [f'Machine {i}' for i in range(5)]$/;"	v
labels	examples/02-plot/chart_basics.py	/^labels = [f'Segment {i}' for i in range(5)]$/;"	v
labels	examples/02-plot/distance_along_spline.py	/^labels = []$/;"	v
labels	pyvista/plotting/axes_actor.py	/^    def labels(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
labels	pyvista/plotting/axes_actor.py	/^    def labels(self, labels: list[str] | tuple[str]):$/;"	m	class:AxesActor
labels	pyvista/plotting/axes_assembly.py	/^    def labels($/;"	m	class:AxesAssemblySymmetric
labels	pyvista/plotting/axes_assembly.py	/^    def labels(self) -> tuple[str, str, str, str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
labels	pyvista/plotting/axes_assembly.py	/^    def labels(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
labels	pyvista/plotting/axes_assembly.py	/^    def labels(self) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
labels	pyvista/plotting/axes_assembly.py	/^    def labels(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
labels	pyvista/plotting/axes_assembly.py	/^    def labels(self, labels):$/;"	m	class:_XYZAssembly
labels	pyvista/plotting/axes_assembly.py	/^    def labels(self, labels: list[str] | tuple[str, str, str]):$/;"	m	class:AxesAssembly
labels	pyvista/plotting/axes_assembly.py	/^    def labels(self, labels: list[str] | tuple[str, str, str]):$/;"	m	class:PlanesAssembly
labels	pyvista/plotting/charts.py	/^    def labels(self):  # numpydoc ignore=RT01$/;"	m	class:_MultiCompPlot
labels	pyvista/plotting/charts.py	/^    def labels(self, val):$/;"	m	class:_MultiCompPlot
labels	pyvista/plotting/helpers.py	/^    labels = [labels[0:2], labels[2:4]]$/;"	v
lactor	tests/plotting/test_theme.py	/^        lactor = pl.add_mesh(lines)$/;"	v	class:test_user_theme.MyTheme
lambdify	build/lib/pyvista/examples/examples.py	/^        from sympy import lambdify$/;"	i
lambdify	pyvista/examples/examples.py	/^        from sympy import lambdify$/;"	i
land	examples/01-filter/geodesic.py	/^land = examples.download_topo_land().triangulate().decimate(0.98)$/;"	v
language	doc/source/conf.py	/^language = 'en'$/;"	v
large_vol	examples/02-plot/volume.py	/^large_vol = examples.download_damavand_volcano()$/;"	v
large_volume	examples/01-filter/compute_volume.py	/^large_volume = largest.volume$/;"	v
largest	examples/01-filter/compute_volume.py	/^largest = threshed.connectivity('largest', scalar_range=scalar_range)$/;"	v
largest	examples/01-filter/connectivity.py	/^largest = pine_roots.connectivity('largest')$/;"	v
last_update_time	build/lib/pyvista/plotting/plotter.py	/^    last_update_time = 0.0$/;"	v	class:Plotter
last_update_time	pyvista/plotting/plotter.py	/^    last_update_time = 0.0$/;"	v	class:Plotter
latest_algorithm	tests/core/test_dataset_filters.py	/^    def latest_algorithm(self):$/;"	m	class:GetOutput
latex_documents	doc/source/conf.py	/^latex_documents = [$/;"	v
launch_it	build/lib/pyvista/trame/jupyter.py	/^    async def launch_it():$/;"	f	function:elegantly_launch
launch_it	pyvista/trame/jupyter.py	/^    async def launch_it():$/;"	f	function:elegantly_launch
launch_server	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.jupyter import launch_server$/;"	i
launch_server	build/lib/pyvista/trame/jupyter.py	/^def launch_server(server=None, port=None, host=None, wslink_backend=None, **kwargs):$/;"	f
launch_server	pyvista/trame/__init__.py	/^from pyvista.trame.jupyter import launch_server$/;"	i
launch_server	pyvista/trame/jupyter.py	/^def launch_server(server=None, port=None, host=None, wslink_backend=None, **kwargs):$/;"	f
layer	build/lib/pyvista/plotting/renderer.py	/^    def layer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
layer	build/lib/pyvista/plotting/renderer.py	/^    def layer(self, layer) -> None:$/;"	m	class:Renderer
layer	pyvista/plotting/renderer.py	/^    def layer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
layer	pyvista/plotting/renderer.py	/^    def layer(self, layer) -> None:$/;"	m	class:Renderer
lazy_vtkPOpenFOAMReader	build/lib/pyvista/core/utilities/reader.py	/^def lazy_vtkPOpenFOAMReader():$/;"	f
lazy_vtkPOpenFOAMReader	pyvista/core/utilities/reader.py	/^def lazy_vtkPOpenFOAMReader():$/;"	f
left_button_down	build/lib/pyvista/plotting/plotter.py	/^    def left_button_down(self, *args):$/;"	m	class:BasePlotter
left_button_down	pyvista/plotting/plotter.py	/^    def left_button_down(self, *args):$/;"	m	class:BasePlotter
left_clicking	tests/plotting/test_picking.py	/^        left_clicking=True,$/;"	v	class:test_element_picking.Tracker
legend	build/lib/pyvista/plotting/plotter.py	/^    def legend(self) -> _vtk.vtkLegendBoxActor | None:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
legend	build/lib/pyvista/plotting/renderer.py	/^    def legend(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
legend	examples/02-plot/legend.py	/^legend = [$/;"	v
legend	examples/02-plot/legend.py	/^legend = ['New top pressure', 'New lower pressure']$/;"	v
legend	pyvista/plotting/plotter.py	/^    def legend(self) -> _vtk.vtkLegendBoxActor | None:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
legend	pyvista/plotting/renderer.py	/^    def legend(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
legend_visible	build/lib/pyvista/plotting/charts.py	/^    def legend_visible(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
legend_visible	build/lib/pyvista/plotting/charts.py	/^    def legend_visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
legend_visible	build/lib/pyvista/plotting/charts.py	/^    def legend_visible(self, val) -> None:$/;"	m	class:ChartMPL
legend_visible	build/lib/pyvista/plotting/charts.py	/^    def legend_visible(self, val) -> None:$/;"	m	class:_Chart
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self, val) -> None:$/;"	m	class:ChartMPL
legend_visible	pyvista/plotting/charts.py	/^    def legend_visible(self, val) -> None:$/;"	m	class:_Chart
length	build/lib/pyvista/core/composite.py	/^    def length(self: MultiBlock) -> float:$/;"	m	class:MultiBlock
length	build/lib/pyvista/core/dataset.py	/^    def length(self: Self) -> float:$/;"	m	class:DataSet
length	build/lib/pyvista/plotting/plotter.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
length	build/lib/pyvista/plotting/prop3d.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
length	build/lib/pyvista/plotting/prop3d.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
length	build/lib/pyvista/plotting/renderer.py	/^    def length(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
length	examples/04-lights/shadows.py	/^length = rnge[1] * (1 + expand)$/;"	v
length	pyvista/core/composite.py	/^    def length(self: MultiBlock) -> float:$/;"	m	class:MultiBlock
length	pyvista/core/dataset.py	/^    def length(self: Self) -> float:$/;"	m	class:DataSet
length	pyvista/plotting/plotter.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
length	pyvista/plotting/prop3d.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
length	pyvista/plotting/prop3d.py	/^    def length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
length	pyvista/plotting/renderer.py	/^    def length(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
level	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def level(self: BoxSource) -> int:$/;"	m	class:BoxSource
level	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def level(self: BoxSource, level: int) -> None:$/;"	m	class:BoxSource
level	pyvista/core/utilities/geometric_sources.py	/^    def level(self: BoxSource) -> int:$/;"	m	class:BoxSource
level	pyvista/core/utilities/geometric_sources.py	/^    def level(self: BoxSource, level: int) -> None:$/;"	m	class:BoxSource
levels	examples/02-plot/spherical.py	/^levels = [RADIUS * 1.01]$/;"	v
levels	examples/02-plot/spherical.py	/^levels = z_scale * (np.arange(scalar_3d.shape[0] + 1)) ** 2 + z_offset$/;"	v
lidar	examples/00-load/create_pointset.py	/^lidar = examples.download_lidar()$/;"	v
lidar_pset	examples/00-load/create_pointset.py	/^    lidar_pset = lidar.cast_to_pointset()$/;"	v
light	examples/02-plot/pbr.py	/^light = pv.Light((-2, 2, 0), (0, 0, 0), 'white')$/;"	v
light	examples/02-plot/pbr.py	/^light = pv.Light((0, 0, 10), (0, 0, 0), 'white')$/;"	v
light	examples/02-plot/pbr.py	/^light = pv.Light((2, 0, 0), (0, 0, 0), (0.7, 0.0862, 0.0549))$/;"	v
light	examples/04-lights/actors.py	/^    light = pv.Light(position=position, focal_point=focus, color=color)$/;"	v
light	examples/04-lights/attenuation.py	/^    light = pv.Light(position=(0.1, offset, 2), focal_point=(0.1, offset, 1), color='cyan')$/;"	v
light	examples/04-lights/attenuation.py	/^    light = pv.Light(position=(0.5, offset, 3), focal_point=(0.5, offset, 1), color='cyan')$/;"	v
light	examples/04-lights/attenuation.py	/^    light = pv.Light(position=(light_x, 0, 0), focal_point=(light_x, 1, 0), color='cyan')$/;"	v
light	examples/04-lights/beam_shape.py	/^    light = pv.Light(position=center, focal_point=focal_point)$/;"	v
light	examples/04-lights/beam_shape.py	/^light = pv.Light(position=(0, 0, 0), focal_point=(-1, 0, 0))$/;"	v
light	examples/04-lights/beam_shape.py	/^light = pv.Light(position=(0, offset, 0), focal_point=(-1, offset, 0))$/;"	v
light	examples/04-lights/light_types.py	/^light = pv.Light(light_type='headlight')$/;"	v
light	examples/04-lights/light_types.py	/^light = pv.Light(position=(0, 1, 0), light_type='scene light')$/;"	v
light	examples/04-lights/light_types.py	/^light = pv.Light(position=(1, 0, 0), light_type='camera light')$/;"	v
light	examples/04-lights/plotter_builtins.py	/^light = pv.Light()$/;"	v
light	examples/04-lights/shadows.py	/^light = pyvista.Light($/;"	v
light	examples/99-advanced/planets.py	/^light = pyvista.Light()$/;"	v
light1	examples/04-lights/shadows.py	/^light1 = pyvista.Light($/;"	v
light2	examples/04-lights/shadows.py	/^light2 = pyvista.Light($/;"	v
light_offsets	examples/04-lights/attenuation.py	/^light_offsets = [-6, 0, 6]$/;"	v
light_type	build/lib/pyvista/plotting/lights.py	/^    def light_type(self):  # numpydoc ignore=RT01$/;"	m	class:Light
light_type	build/lib/pyvista/plotting/lights.py	/^    def light_type(self, ltype):$/;"	m	class:Light
light_type	pyvista/plotting/lights.py	/^    def light_type(self):  # numpydoc ignore=RT01$/;"	m	class:Light
light_type	pyvista/plotting/lights.py	/^    def light_type(self, ltype):$/;"	m	class:Light
light_types	examples/04-lights/plotter_builtins.py	/^light_types = [light.light_type for light in plotter.renderer.lights]$/;"	v
lighting	build/lib/pyvista/plotting/_property.py	/^    def lighting(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
lighting	build/lib/pyvista/plotting/_property.py	/^    def lighting(self, value: bool | None):$/;"	m	class:Property
lighting	build/lib/pyvista/plotting/actor_properties.py	/^    def lighting(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
lighting	build/lib/pyvista/plotting/actor_properties.py	/^    def lighting(self, flag: bool):$/;"	m	class:ActorProperties
lighting	build/lib/pyvista/plotting/themes.py	/^    def lighting(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
lighting	build/lib/pyvista/plotting/themes.py	/^    def lighting(self, lighting: bool):$/;"	m	class:Theme
lighting	examples/01-filter/integrate_data.py	/^    lighting=False,$/;"	v
lighting	examples/01-filter/sampling_functions_3d.py	/^    lighting=True,$/;"	v
lighting	examples/01-filter/streamlines.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/backface_props.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/cmap.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/cmap.py	/^    lighting=True,$/;"	v
lighting	examples/02-plot/gif.py	/^    lighting=False,$/;"	v
lighting	examples/02-plot/vertices.py	/^    lighting=False,$/;"	v
lighting	examples/99-advanced/fea_hertzian_contact_pressure.py	/^    lighting=True,$/;"	v
lighting	examples/99-advanced/openfoam_cooling.py	/^    lighting=False,$/;"	v
lighting	examples/99-advanced/openfoam_tubes.py	/^    lighting=False,$/;"	v
lighting	pyvista/plotting/_property.py	/^    def lighting(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
lighting	pyvista/plotting/_property.py	/^    def lighting(self, value: bool | None):$/;"	m	class:Property
lighting	pyvista/plotting/actor_properties.py	/^    def lighting(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
lighting	pyvista/plotting/actor_properties.py	/^    def lighting(self, flag: bool):$/;"	m	class:ActorProperties
lighting	pyvista/plotting/themes.py	/^    def lighting(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
lighting	pyvista/plotting/themes.py	/^    def lighting(self, lighting: bool):$/;"	m	class:Theme
lighting_params	build/lib/pyvista/plotting/themes.py	/^    def lighting_params(self) -> _LightingConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
lighting_params	build/lib/pyvista/plotting/themes.py	/^    def lighting_params(self, config: _LightingConfig):$/;"	m	class:Theme
lighting_params	pyvista/plotting/themes.py	/^    def lighting_params(self) -> _LightingConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
lighting_params	pyvista/plotting/themes.py	/^    def lighting_params(self, config: _LightingConfig):$/;"	m	class:Theme
lights	build/lib/pyvista/plotting/renderer.py	/^    def lights(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
lights	pyvista/plotting/renderer.py	/^    def lights(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
lin_pts	examples/01-filter/extract_surface.py	/^lin_pts = np.array($/;"	v
line	build/lib/pyvista/plotting/charts.py	/^    def line(self, x, y, color='b', width=1.0, style='-', label=''):$/;"	m	class:Chart2D
line	examples/00-load/create_geometric_objects.py	/^line = pv.Line()$/;"	v
line	examples/00-load/create_spline.py	/^line = lines_from_points(points)$/;"	v
line	examples/01-filter/extrude_rotate.py	/^line = pyvista.Line(pointa=(0, 0, 0), pointb=(1, 0, 0), resolution=2)$/;"	v
line	examples/01-filter/extrude_trim.py	/^line = pv.Line()$/;"	v
line	examples/01-filter/slicing.py	/^line = pv.Line(a, b, n_slices)$/;"	v
line	examples/02-plot/plot_over_line.py	/^line = pv.Line(a, b)$/;"	v
line	examples/99-advanced/fea_hertzian_contact_pressure.py	/^line = pv.Line(a, b, resolution=100)$/;"	v
line	pyvista/plotting/charts.py	/^    def line(self, x, y, color='b', width=1.0, style='-', label=''):$/;"	m	class:Chart2D
line_plot_2d	tests/plotting/test_charts.py	/^def line_plot_2d(chart_2d):$/;"	f
line_segments_from_points	build/lib/pyvista/core/utilities/__init__.py	/^from .points import line_segments_from_points as line_segments_from_points$/;"	i
line_segments_from_points	build/lib/pyvista/core/utilities/points.py	/^def line_segments_from_points(points: VectorLike[float] | MatrixLike[float]) -> PolyData:$/;"	f
line_segments_from_points	pyvista/core/utilities/__init__.py	/^from .points import line_segments_from_points as line_segments_from_points$/;"	i
line_segments_from_points	pyvista/core/utilities/points.py	/^def line_segments_from_points(points: VectorLike[float] | MatrixLike[float]) -> PolyData:$/;"	f
line_segments_from_points	tests/core/test_utilities.py	/^from pyvista.core.utilities import line_segments_from_points$/;"	i
line_streamlines	examples/01-filter/streamlines_2D.py	/^line_streamlines = fluid_mesh.streamlines($/;"	v
line_streamlines	examples/01-filter/streamlines_2D.py	/^line_streamlines = fluid_mesh.streamlines_evenly_spaced_2D($/;"	v
line_style	build/lib/pyvista/plotting/charts.py	/^    def line_style(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
line_style	build/lib/pyvista/plotting/charts.py	/^    def line_style(self, val) -> None:$/;"	m	class:_Plot
line_style	pyvista/plotting/charts.py	/^    def line_style(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
line_style	pyvista/plotting/charts.py	/^    def line_style(self, val) -> None:$/;"	m	class:_Plot
line_width	build/lib/pyvista/demos/logo.py	/^        line_width=2,$/;"	v
line_width	build/lib/pyvista/plotting/_property.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
line_width	build/lib/pyvista/plotting/_property.py	/^    def line_width(self, value: float):$/;"	m	class:Property
line_width	build/lib/pyvista/plotting/charts.py	/^    def line_width(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
line_width	build/lib/pyvista/plotting/charts.py	/^    def line_width(self, val) -> None:$/;"	m	class:_Plot
line_width	build/lib/pyvista/plotting/themes.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
line_width	build/lib/pyvista/plotting/themes.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
line_width	build/lib/pyvista/plotting/themes.py	/^    def line_width(self, line_width: float):$/;"	m	class:Theme
line_width	build/lib/pyvista/plotting/themes.py	/^    def line_width(self, line_width: float):$/;"	m	class:_SilhouetteConfig
line_width	examples/00-load/create_poly.py	/^    line_width=5,$/;"	v
line_width	examples/00-load/create_truss.py	/^    line_width=10,$/;"	v
line_width	examples/02-plot/opacity.py	/^    line_width=5,$/;"	v
line_width	examples/02-plot/silhouette.py	/^    line_width=8.0,$/;"	v
line_width	examples/99-advanced/openfoam_tubes.py	/^    line_width=3,$/;"	v
line_width	pyvista/demos/logo.py	/^        line_width=2,$/;"	v
line_width	pyvista/plotting/_property.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
line_width	pyvista/plotting/_property.py	/^    def line_width(self, value: float):$/;"	m	class:Property
line_width	pyvista/plotting/charts.py	/^    def line_width(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
line_width	pyvista/plotting/charts.py	/^    def line_width(self, val) -> None:$/;"	m	class:_Plot
line_width	pyvista/plotting/themes.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
line_width	pyvista/plotting/themes.py	/^    def line_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
line_width	pyvista/plotting/themes.py	/^    def line_width(self, line_width: float):$/;"	m	class:Theme
line_width	pyvista/plotting/themes.py	/^    def line_width(self, line_width: float):$/;"	m	class:_SilhouetteConfig
linear_copy	build/lib/pyvista/core/pointset.py	/^    def linear_copy(self, deep: bool = False):$/;"	m	class:UnstructuredGrid
linear_copy	pyvista/core/pointset.py	/^    def linear_copy(self, deep: bool = False):$/;"	m	class:UnstructuredGrid
linear_font_scale_factor	build/lib/pyvista/plotting/text.py	/^    def linear_font_scale_factor(self) -> float:$/;"	m	class:CornerAnnotation
linear_font_scale_factor	build/lib/pyvista/plotting/text.py	/^    def linear_font_scale_factor(self, factor: float):$/;"	m	class:CornerAnnotation
linear_font_scale_factor	pyvista/plotting/text.py	/^    def linear_font_scale_factor(self) -> float:$/;"	m	class:CornerAnnotation
linear_font_scale_factor	pyvista/plotting/text.py	/^    def linear_font_scale_factor(self, factor: float):$/;"	m	class:CornerAnnotation
linear_to_srgb	build/lib/pyvista/plotting/colors.py	/^    def linear_to_srgb(self):$/;"	m	class:Color
linear_to_srgb	pyvista/plotting/colors.py	/^    def linear_to_srgb(self):$/;"	m	class:Color
lines	build/lib/pyvista/core/pointset.py	/^    def lines(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
lines	build/lib/pyvista/core/pointset.py	/^    def lines(self, lines: CellArrayLike) -> None:$/;"	m	class:PolyData
lines	doc/source/make_tables.py	/^        lines = '\\n'.join(lines) if is_str else lines$/;"	v
lines	doc/source/make_tables.py	/^        lines = _pad_lines(lines, pad_left=indentation) if len(lines) > 0 else lines$/;"	v
lines	doc/source/make_tables.py	/^        lines = lines.splitlines()$/;"	v
lines	doc/source/make_tables.py	/^    lines = [pad_left + line + pad_right for line in lines]$/;"	v
lines	doc/source/make_tables.py	/^    lines = _ljust_lines(lines) if ljust else lines$/;"	v
lines	doc/source/make_tables.py	/^    lines = string.splitlines()$/;"	v
lines	examples/99-advanced/openfoam_cooling.py	/^lines = air.streamlines_from_source(points, max_length=2.0)$/;"	v
lines	examples/99-advanced/openfoam_tubes.py	/^lines = air.streamlines_from_source($/;"	v
lines	pyvista/core/pointset.py	/^    def lines(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
lines	pyvista/core/pointset.py	/^    def lines(self, lines: CellArrayLike) -> None:$/;"	m	class:PolyData
lines_from_points	build/lib/pyvista/core/utilities/__init__.py	/^from .points import lines_from_points as lines_from_points$/;"	i
lines_from_points	build/lib/pyvista/core/utilities/points.py	/^def lines_from_points($/;"	f
lines_from_points	examples/00-load/create_spline.py	/^def lines_from_points(points):$/;"	f
lines_from_points	pyvista/core/utilities/__init__.py	/^from .points import lines_from_points as lines_from_points$/;"	i
lines_from_points	pyvista/core/utilities/points.py	/^def lines_from_points($/;"	f
link_views	build/lib/pyvista/plotting/plotter.py	/^    def link_views(self, views=0) -> None:$/;"	m	class:BasePlotter
link_views	pyvista/plotting/plotter.py	/^    def link_views(self, views=0) -> None:$/;"	m	class:BasePlotter
linkcheck_ignore	doc/source/conf.py	/^linkcheck_ignore = [$/;"	v
linkcheck_retries	doc/source/conf.py	/^linkcheck_retries = 3$/;"	v
linkcheck_timeout	doc/source/conf.py	/^linkcheck_timeout = 500$/;"	v
linkcode_resolve	build/lib/pyvista/core/utilities/docs.py	/^def linkcode_resolve(domain: str, info: dict[str, str], edit: bool = False) -> str | None:$/;"	f
linkcode_resolve	doc/source/conf.py	/^from pyvista.core.utilities.docs import linkcode_resolve  # noqa: F401$/;"	i
linkcode_resolve	pyvista/core/utilities/docs.py	/^def linkcode_resolve(domain: str, info: dict[str, str], edit: bool = False) -> str | None:$/;"	f
linkcode_resolve	tests/core/test_utilities.py	/^from pyvista.core.utilities.docs import linkcode_resolve$/;"	i
lists	tests/core/test_datasetattributes.py	/^from hypothesis.strategies import lists$/;"	i
lists	tests/core/test_geometric_sources.py	/^from hypothesis.strategies import lists$/;"	i
load	build/lib/pyvista/examples/_dataset_loader.py	/^    def load(self):$/;"	m	class:_MultiFileDatasetLoader
load	build/lib/pyvista/examples/_dataset_loader.py	/^    def load(self):$/;"	m	class:_SingleFileDatasetLoader
load	build/lib/pyvista/examples/_dataset_loader.py	/^    def load(self, *args, **kwargs) -> DatasetObject:$/;"	m	class:_DatasetLoader
load	pyvista/examples/_dataset_loader.py	/^    def load(self):$/;"	m	class:_MultiFileDatasetLoader
load	pyvista/examples/_dataset_loader.py	/^    def load(self):$/;"	m	class:_SingleFileDatasetLoader
load	pyvista/examples/_dataset_loader.py	/^    def load(self, *args, **kwargs) -> DatasetObject:$/;"	m	class:_DatasetLoader
load_airplane	build/lib/pyvista/examples/examples.py	/^def load_airplane():$/;"	f
load_airplane	pyvista/examples/examples.py	/^def load_airplane():$/;"	f
load_airplane	tests/core/test_cells.py	/^from pyvista.examples import load_airplane$/;"	i
load_airplane	tests/core/test_dataset.py	/^from pyvista.examples import load_airplane$/;"	i
load_and_store_dataset	build/lib/pyvista/examples/_dataset_loader.py	/^    def load_and_store_dataset(self) -> DatasetObject:$/;"	m	class:_DatasetLoader
load_and_store_dataset	pyvista/examples/_dataset_loader.py	/^    def load_and_store_dataset(self) -> DatasetObject:$/;"	m	class:_DatasetLoader
load_ant	build/lib/pyvista/examples/examples.py	/^def load_ant():$/;"	f
load_ant	pyvista/examples/examples.py	/^def load_ant():$/;"	f
load_boundary_patch	build/lib/pyvista/core/utilities/reader.py	/^    def load_boundary_patch(self) -> bool:$/;"	m	class:CGNSReader
load_boundary_patch	build/lib/pyvista/core/utilities/reader.py	/^    def load_boundary_patch(self, enabled: bool) -> None:$/;"	m	class:CGNSReader
load_boundary_patch	pyvista/core/utilities/reader.py	/^    def load_boundary_patch(self) -> bool:$/;"	m	class:CGNSReader
load_boundary_patch	pyvista/core/utilities/reader.py	/^    def load_boundary_patch(self, enabled: bool) -> None:$/;"	m	class:CGNSReader
load_channels	build/lib/pyvista/examples/examples.py	/^def load_channels():$/;"	f
load_channels	pyvista/examples/examples.py	/^def load_channels():$/;"	f
load_earth	build/lib/pyvista/examples/planets.py	/^def load_earth(radius=1.0, lat_resolution=50, lon_resolution=100):$/;"	f
load_earth	pyvista/examples/planets.py	/^def load_earth(radius=1.0, lat_resolution=50, lon_resolution=100):$/;"	f
load_explicit_structured	build/lib/pyvista/examples/examples.py	/^def load_explicit_structured(dimensions=(5, 6, 7), spacing=(20, 10, 1)):$/;"	f
load_explicit_structured	pyvista/examples/examples.py	/^def load_explicit_structured(dimensions=(5, 6, 7), spacing=(20, 10, 1)):$/;"	f
load_explicit_structured	tests/core/test_cells.py	/^from pyvista.examples import load_explicit_structured$/;"	i
load_explicit_structured	tests/core/test_dataset.py	/^from pyvista.examples import load_explicit_structured$/;"	i
load_frog_tissues	build/lib/pyvista/examples/examples.py	/^def load_frog_tissues():$/;"	f
load_frog_tissues	pyvista/examples/examples.py	/^def load_frog_tissues():$/;"	f
load_func	build/lib/pyvista/examples/downloads.py	/^    def load_func(files):  # pragma: no cover$/;"	m	class:_WholeBodyCTUtilities
load_func	build/lib/pyvista/examples/downloads.py	/^    load_func=_kitchen_split_load_func,$/;"	v
load_func	build/lib/pyvista/examples/downloads.py	/^    load_func=_load_and_merge,$/;"	v
load_func	build/lib/pyvista/examples/downloads.py	/^    load_func=_load_as_cubemap,$/;"	v
load_func	build/lib/pyvista/examples/downloads.py	/^    load_func=_load_as_multiblock,$/;"	v
load_func	pyvista/examples/downloads.py	/^    def load_func(files):  # pragma: no cover$/;"	m	class:_WholeBodyCTUtilities
load_func	pyvista/examples/downloads.py	/^    load_func=_kitchen_split_load_func,$/;"	v
load_func	pyvista/examples/downloads.py	/^    load_func=_load_and_merge,$/;"	v
load_func	pyvista/examples/downloads.py	/^    load_func=_load_as_cubemap,$/;"	v
load_func	pyvista/examples/downloads.py	/^    load_func=_load_as_multiblock,$/;"	v
load_globe	build/lib/pyvista/examples/examples.py	/^def load_globe():$/;"	f
load_globe	pyvista/examples/examples.py	/^def load_globe():$/;"	f
load_globe_texture	build/lib/pyvista/examples/examples.py	/^def load_globe_texture():$/;"	f
load_globe_texture	pyvista/examples/examples.py	/^def load_globe_texture():$/;"	f
load_hexbeam	build/lib/pyvista/examples/examples.py	/^def load_hexbeam():$/;"	f
load_hexbeam	pyvista/examples/examples.py	/^def load_hexbeam():$/;"	f
load_hexbeam	tests/core/test_cells.py	/^from pyvista.examples import load_hexbeam$/;"	i
load_hexbeam	tests/core/test_dataset.py	/^from pyvista.examples import load_hexbeam$/;"	i
load_hydrogen_orbital	build/lib/pyvista/examples/examples.py	/^def load_hydrogen_orbital(n=1, l=0, m=0, zoom_fac=1.0):$/;"	f
load_hydrogen_orbital	pyvista/examples/examples.py	/^def load_hydrogen_orbital(n=1, l=0, m=0, zoom_fac=1.0):$/;"	f
load_jupiter	build/lib/pyvista/examples/planets.py	/^def load_jupiter(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_jupiter	pyvista/examples/planets.py	/^def load_jupiter(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_logo	build/lib/pyvista/examples/examples.py	/^def load_logo():$/;"	f
load_logo	pyvista/examples/examples.py	/^def load_logo():$/;"	f
load_mars	build/lib/pyvista/examples/planets.py	/^def load_mars(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_mars	pyvista/examples/planets.py	/^def load_mars(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_mercury	build/lib/pyvista/examples/planets.py	/^def load_mercury(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_mercury	pyvista/examples/planets.py	/^def load_mercury(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_moon	build/lib/pyvista/examples/planets.py	/^def load_moon(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_moon	pyvista/examples/planets.py	/^def load_moon(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_neptune	build/lib/pyvista/examples/planets.py	/^def load_neptune(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_neptune	pyvista/examples/planets.py	/^def load_neptune(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_nut	build/lib/pyvista/examples/examples.py	/^def load_nut():$/;"	f
load_nut	pyvista/examples/examples.py	/^def load_nut():$/;"	f
load_pluto	build/lib/pyvista/examples/planets.py	/^def load_pluto(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_pluto	pyvista/examples/planets.py	/^def load_pluto(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_random_hills	build/lib/pyvista/examples/examples.py	/^def load_random_hills():$/;"	f
load_random_hills	pyvista/examples/examples.py	/^def load_random_hills():$/;"	f
load_rectilinear	build/lib/pyvista/examples/examples.py	/^def load_rectilinear():$/;"	f
load_rectilinear	pyvista/examples/examples.py	/^def load_rectilinear():$/;"	f
load_rectilinear	tests/core/test_cells.py	/^from pyvista.examples import load_rectilinear$/;"	i
load_rectilinear	tests/core/test_dataset.py	/^from pyvista.examples import load_rectilinear$/;"	i
load_saturn	build/lib/pyvista/examples/planets.py	/^def load_saturn(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_saturn	pyvista/examples/planets.py	/^def load_saturn(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_saturn_rings	build/lib/pyvista/examples/planets.py	/^def load_saturn_rings(inner=0.25, outer=0.5, c_res=6):  # pragma: no cover$/;"	f
load_saturn_rings	pyvista/examples/planets.py	/^def load_saturn_rings(inner=0.25, outer=0.5, c_res=6):  # pragma: no cover$/;"	f
load_sphere	build/lib/pyvista/examples/examples.py	/^def load_sphere():$/;"	f
load_sphere	pyvista/examples/examples.py	/^def load_sphere():$/;"	f
load_sphere_vectors	build/lib/pyvista/examples/examples.py	/^def load_sphere_vectors():$/;"	f
load_sphere_vectors	pyvista/examples/examples.py	/^def load_sphere_vectors():$/;"	f
load_spline	build/lib/pyvista/examples/examples.py	/^def load_spline():$/;"	f
load_spline	pyvista/examples/examples.py	/^def load_spline():$/;"	f
load_structured	build/lib/pyvista/examples/examples.py	/^def load_structured():$/;"	f
load_structured	pyvista/examples/examples.py	/^def load_structured():$/;"	f
load_structured	tests/core/test_cells.py	/^from pyvista.examples import load_structured$/;"	i
load_structured	tests/core/test_dataset.py	/^from pyvista.examples import load_structured$/;"	i
load_sun	build/lib/pyvista/examples/planets.py	/^def load_sun(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_sun	pyvista/examples/planets.py	/^def load_sun(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_tetbeam	build/lib/pyvista/examples/examples.py	/^def load_tetbeam():$/;"	f
load_tetbeam	pyvista/examples/examples.py	/^def load_tetbeam():$/;"	f
load_tetbeam	tests/core/test_cells.py	/^from pyvista.examples import load_tetbeam$/;"	i
load_tetbeam	tests/core/test_dataset.py	/^from pyvista.examples import load_tetbeam$/;"	i
load_theme	build/lib/pyvista/plotting/__init__.py	/^from .themes import load_theme as load_theme$/;"	i
load_theme	build/lib/pyvista/plotting/themes.py	/^    def load_theme(self, theme: str | Theme) -> None:$/;"	m	class:Theme
load_theme	build/lib/pyvista/plotting/themes.py	/^def load_theme(filename):$/;"	f
load_theme	pyvista/plotting/__init__.py	/^from .themes import load_theme as load_theme$/;"	i
load_theme	pyvista/plotting/themes.py	/^    def load_theme(self, theme: str | Theme) -> None:$/;"	m	class:Theme
load_theme	pyvista/plotting/themes.py	/^def load_theme(filename):$/;"	f
load_uniform	build/lib/pyvista/examples/examples.py	/^def load_uniform():$/;"	f
load_uniform	pyvista/examples/examples.py	/^def load_uniform():$/;"	f
load_uniform	tests/core/test_cells.py	/^from pyvista.examples import load_uniform$/;"	i
load_uniform	tests/core/test_dataset.py	/^from pyvista.examples import load_uniform$/;"	i
load_uranus	build/lib/pyvista/examples/planets.py	/^def load_uranus(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_uranus	pyvista/examples/planets.py	/^def load_uranus(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_venus	build/lib/pyvista/examples/planets.py	/^def load_venus(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
load_venus	pyvista/examples/planets.py	/^def load_venus(radius=1.0, lat_resolution=50, lon_resolution=100):  # pragma: no cover$/;"	f
loc	build/lib/pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
loc	build/lib/pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
loc	build/lib/pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
loc	build/lib/pyvista/plotting/charts.py	/^    def loc(self, val):$/;"	m	class:ChartBox
loc	build/lib/pyvista/plotting/charts.py	/^    def loc(self, val):$/;"	m	class:ChartPie
loc	build/lib/pyvista/plotting/charts.py	/^    def loc(self, val):$/;"	m	class:_Chart
loc	examples/02-plot/chart_overlays.py	/^    loc=(0.52, 0.06),$/;"	v
loc	pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
loc	pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
loc	pyvista/plotting/charts.py	/^    def loc(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
loc	pyvista/plotting/charts.py	/^    def loc(self, val):$/;"	m	class:ChartBox
loc	pyvista/plotting/charts.py	/^    def loc(self, val):$/;"	m	class:ChartPie
loc	pyvista/plotting/charts.py	/^    def loc(self, val):$/;"	m	class:_Chart
loc_to_group	build/lib/pyvista/plotting/renderers.py	/^    def loc_to_group(self, loc):$/;"	m	class:Renderers
loc_to_group	pyvista/plotting/renderers.py	/^    def loc_to_group(self, loc):$/;"	m	class:Renderers
loc_to_index	build/lib/pyvista/plotting/renderers.py	/^    def loc_to_index(self, loc):$/;"	m	class:Renderers
loc_to_index	pyvista/plotting/renderers.py	/^    def loc_to_index(self, loc):$/;"	m	class:Renderers
local	examples/02-plot/topo_map.py	/^local = elevation.clip_box(bounds, invert=False)$/;"	v
locale	doc/source/conf.py	/^import locale$/;"	i
log	build/lib/pyvista/plotting/plotter.py	/^log = logging.getLogger(__name__)$/;"	v
log	build/lib/pyvista/plotting/render_window_interactor.py	/^log = logging.getLogger(__name__)$/;"	v
log	pyvista/plotting/plotter.py	/^log = logging.getLogger(__name__)$/;"	v
log	pyvista/plotting/render_window_interactor.py	/^log = logging.getLogger(__name__)$/;"	v
log_message	build/lib/pyvista/core/utilities/observers.py	/^    def log_message(self, kind, alert) -> None:$/;"	m	class:Observer
log_message	pyvista/core/utilities/observers.py	/^    def log_message(self, kind, alert) -> None:$/;"	m	class:Observer
log_scale	build/lib/pyvista/plotting/charts.py	/^    def log_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
log_scale	build/lib/pyvista/plotting/charts.py	/^    def log_scale(self, val) -> None:$/;"	m	class:Axis
log_scale	build/lib/pyvista/plotting/lookup_table.py	/^    def log_scale(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
log_scale	build/lib/pyvista/plotting/lookup_table.py	/^    def log_scale(self, value: bool):$/;"	m	class:LookupTable
log_scale	examples/01-filter/image_fft.py	/^    log_scale=True,$/;"	v
log_scale	pyvista/plotting/charts.py	/^    def log_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
log_scale	pyvista/plotting/charts.py	/^    def log_scale(self, val) -> None:$/;"	m	class:Axis
log_scale	pyvista/plotting/lookup_table.py	/^    def log_scale(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
log_scale	pyvista/plotting/lookup_table.py	/^    def log_scale(self, value: bool):$/;"	m	class:LookupTable
logger	build/lib/pyvista/ext/coverage.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	build/lib/pyvista/ext/viewer_directive.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	build/lib/pyvista/trame/jupyter.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	pyvista/ext/coverage.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	pyvista/ext/viewer_directive.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	pyvista/trame/jupyter.py	/^logger = logging.getLogger(__name__)$/;"	v
logging	build/lib/pyvista/core/utilities/observers.py	/^import logging$/;"	i
logging	build/lib/pyvista/examples/downloads.py	/^import logging$/;"	i
logging	build/lib/pyvista/ext/coverage.py	/^from sphinx.util import logging$/;"	i
logging	build/lib/pyvista/ext/viewer_directive.py	/^from sphinx.util import logging$/;"	i
logging	build/lib/pyvista/plotting/plotter.py	/^import logging$/;"	i
logging	build/lib/pyvista/plotting/render_window_interactor.py	/^import logging$/;"	i
logging	build/lib/pyvista/trame/__init__.py	/^import logging$/;"	i
logging	build/lib/pyvista/trame/jupyter.py	/^import logging$/;"	i
logging	pyvista/core/utilities/observers.py	/^import logging$/;"	i
logging	pyvista/examples/downloads.py	/^import logging$/;"	i
logging	pyvista/ext/coverage.py	/^from sphinx.util import logging$/;"	i
logging	pyvista/ext/viewer_directive.py	/^from sphinx.util import logging$/;"	i
logging	pyvista/plotting/plotter.py	/^import logging$/;"	i
logging	pyvista/plotting/render_window_interactor.py	/^import logging$/;"	i
logging	pyvista/trame/__init__.py	/^import logging$/;"	i
logging	pyvista/trame/jupyter.py	/^import logging$/;"	i
logo	examples/00-load/create_pixel_art.py	/^from pyvista.demos import logo$/;"	i
logo_atomized	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_atomized as logo_atomized$/;"	i
logo_atomized	build/lib/pyvista/demos/logo.py	/^def logo_atomized(density=0.05, scale=0.6, depth=0.05):$/;"	f
logo_atomized	pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_atomized as logo_atomized$/;"	i
logo_atomized	pyvista/demos/logo.py	/^def logo_atomized(density=0.05, scale=0.6, depth=0.05):$/;"	f
logo_basic	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_basic as logo_basic$/;"	i
logo_basic	build/lib/pyvista/demos/logo.py	/^def logo_basic():$/;"	f
logo_basic	pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_basic as logo_basic$/;"	i
logo_basic	pyvista/demos/logo.py	/^def logo_basic():$/;"	f
logo_file	build/lib/pyvista/plotting/themes.py	/^    def logo_file(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:Theme
logo_file	build/lib/pyvista/plotting/themes.py	/^    def logo_file(self, logo_file: str | pathlib.Path | None):$/;"	m	class:Theme
logo_file	pyvista/plotting/themes.py	/^    def logo_file(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:Theme
logo_file	pyvista/plotting/themes.py	/^    def logo_file(self, logo_file: str | pathlib.Path | None):$/;"	m	class:Theme
logo_letters	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_letters as logo_letters$/;"	i
logo_letters	build/lib/pyvista/demos/logo.py	/^def logo_letters(merge=False, depth=0.3):$/;"	f
logo_letters	pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_letters as logo_letters$/;"	i
logo_letters	pyvista/demos/logo.py	/^def logo_letters(merge=False, depth=0.3):$/;"	f
logo_voxel	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_voxel as logo_voxel$/;"	i
logo_voxel	build/lib/pyvista/demos/logo.py	/^def logo_voxel(density=0.03):$/;"	f
logo_voxel	pyvista/demos/__init__.py	/^from pyvista.demos.logo import logo_voxel as logo_voxel$/;"	i
logo_voxel	pyvista/demos/logo.py	/^def logo_voxel(density=0.03):$/;"	f
logofile	build/lib/pyvista/examples/examples.py	/^logofile = str(Path(dir_path) \/ 'pyvista_logo.png')$/;"	v
logofile	pyvista/examples/examples.py	/^logofile = str(Path(dir_path) \/ 'pyvista_logo.png')$/;"	v
lookup_table	build/lib/pyvista/plotting/mapper.py	/^    def lookup_table(self) -> pyvista.LookupTable:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
lookup_table	build/lib/pyvista/plotting/mapper.py	/^    def lookup_table(self):  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
lookup_table	build/lib/pyvista/plotting/mapper.py	/^    def lookup_table(self, lut) -> None:$/;"	m	class:_BaseVolumeMapper
lookup_table	build/lib/pyvista/plotting/mapper.py	/^    def lookup_table(self, table) -> None:$/;"	m	class:_BaseMapper
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self) -> pyvista.LookupTable:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self):  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self, lut) -> None:$/;"	m	class:_BaseVolumeMapper
lookup_table	pyvista/plotting/mapper.py	/^    def lookup_table(self, table) -> None:$/;"	m	class:_BaseMapper
lookup_table	tests/plotting/test_lookup_table.py	/^    from pyvista.plotting import lookup_table$/;"	i
lookup_table_ndarray	build/lib/pyvista/plotting/lookup_table.py	/^class lookup_table_ndarray(np.ndarray):  # type: ignore[type-arg]$/;"	c
lookup_table_ndarray	pyvista/plotting/lookup_table.py	/^class lookup_table_ndarray(np.ndarray):  # type: ignore[type-arg]$/;"	c
low_pass	build/lib/pyvista/core/filters/image_data.py	/^    def low_pass($/;"	m	class:ImageDataFilters
low_pass	examples/01-filter/image_fft_perlin_noise.py	/^low_pass = sampled_fft.low_pass(1.0, 1.0, 1.0).rfft()$/;"	v
low_pass	pyvista/core/filters/image_data.py	/^    def low_pass($/;"	m	class:ImageDataFilters
lut	examples/02-plot/lookup_table.py	/^lut = pv.LookupTable()$/;"	v
lut	examples/02-plot/lookup_table.py	/^lut = pv.LookupTable(cmap='magma')$/;"	v
lut	tests/plotting/test_lookup_table.py	/^def lut():$/;"	f
lut_w_cmap	tests/plotting/test_lookup_table.py	/^def lut_w_cmap():$/;"	f
lvol	examples/01-filter/compute_volume.py	/^lvol = np.sum(volumes[idx])$/;"	v
magpylib	doc/source/make_external_gallery.py	/^    magpylib=Example($/;"	v
major	tests/conftest.py	/^    major=int(np.__version__.split('.')[0]),$/;"	v
make_all_carousels	doc/source/make_tables.py	/^def make_all_carousels(carousels: list[DatasetGalleryCarousel]):  # noqa: D103$/;"	f
make_all_tables	doc/source/make_tables.py	/^def make_all_tables():  # noqa: D103$/;"	f
make_axis_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^def make_axis_labels(vmin, vmax, n, fmt):$/;"	f
make_axis_labels	pyvista/plotting/cube_axes_actor.py	/^def make_axis_labels(vmin, vmax, n, fmt):$/;"	f
make_cijkl_E_nu	examples/99-advanced/warp_by_vector_eigenmodes.py	/^def make_cijkl_E_nu(E=200, nu=0.3):$/;"	f
make_double_slider	examples/02-plot/lookup_table.py	/^def make_double_slider(attr, idx):$/;"	f
make_example_gallery	doc/source/make_external_gallery.py	/^def make_example_gallery():$/;"	f
make_external_gallery	doc/source/conf.py	/^import make_external_gallery$/;"	i
make_layout	build/lib/pyvista/trame/ui/base_viewer.py	/^    def make_layout(self, *args, **kwargs) -> AbstractLayout:  # pragma: no cover$/;"	m	class:BaseViewer
make_layout	build/lib/pyvista/trame/ui/vuetify2.py	/^    def make_layout(self, *args, **kwargs) -> AbstractLayout:$/;"	m	class:Viewer
make_layout	build/lib/pyvista/trame/ui/vuetify3.py	/^    def make_layout(self, *args, **kwargs) -> AbstractLayout:$/;"	m	class:Viewer
make_layout	pyvista/trame/ui/base_viewer.py	/^    def make_layout(self, *args, **kwargs) -> AbstractLayout:  # pragma: no cover$/;"	m	class:BaseViewer
make_layout	pyvista/trame/ui/vuetify2.py	/^    def make_layout(self, *args, **kwargs) -> AbstractLayout:$/;"	m	class:Viewer
make_layout	pyvista/trame/ui/vuetify3.py	/^    def make_layout(self, *args, **kwargs) -> AbstractLayout:$/;"	m	class:Viewer
make_legend_face	build/lib/pyvista/plotting/renderer.py	/^def make_legend_face(face) -> PolyData:$/;"	f
make_legend_face	pyvista/plotting/renderer.py	/^def make_legend_face(face) -> PolyData:$/;"	f
make_line_cells	build/lib/pyvista/plotting/picking.py	/^        def make_line_cells(n_points):$/;"	f	function:PickingHelper.enable_path_picking
make_line_cells	pyvista/plotting/picking.py	/^        def make_line_cells(n_points):$/;"	f	function:PickingHelper.enable_path_picking
make_mesh	tests/core/test_dataset.py	/^    def make_mesh():$/;"	f	function:test_rename_array_doesnt_delete
make_passes	tests/plotting/test_render_pass.py	/^def make_passes():$/;"	f
make_point_set	examples/00-load/create_structured_surface.py	/^def make_point_set():$/;"	f
make_points	examples/00-load/create_kochanek_spline.py	/^def make_points():$/;"	f
make_points	examples/00-load/create_spline.py	/^def make_points():$/;"	f
make_poly	examples/02-plot/composite_picking.py	/^def make_poly():$/;"	f
make_sphere	tests/plotting/tinypages/samples.py	/^def make_sphere():$/;"	f
make_sphere_second	tests/plotting/tinypages/samples.py	/^def make_sphere_second():$/;"	f
make_tables	doc/source/conf.py	/^import make_tables$/;"	i
make_tri_mesh	build/lib/pyvista/core/utilities/__init__.py	/^from .points import make_tri_mesh as make_tri_mesh$/;"	i
make_tri_mesh	build/lib/pyvista/core/utilities/points.py	/^def make_tri_mesh(points: NumpyArray[float], faces: NumpyArray[int]) -> PolyData:$/;"	f
make_tri_mesh	pyvista/core/utilities/__init__.py	/^from .points import make_tri_mesh as make_tri_mesh$/;"	i
make_tri_mesh	pyvista/core/utilities/points.py	/^def make_tri_mesh(points: NumpyArray[float], faces: NumpyArray[int]) -> PolyData:$/;"	f
make_tri_mesh	tests/core/test_helpers.py	/^from pyvista.core.utilities.points import make_tri_mesh$/;"	i
make_two_char_img	tests/plotting/conftest.py	/^def make_two_char_img(text):$/;"	f
man_pages	doc/source/conf.py	/^man_pages = [(root_doc, 'pyvista', 'pyvista Documentation', [author], 1)]$/;"	v
manifold_edges	examples/02-plot/shading.py	/^    manifold_edges=False,$/;"	v
map_loc_to_pos	build/lib/pyvista/plotting/renderer.py	/^def map_loc_to_pos(loc, size, border=0.05):$/;"	f
map_loc_to_pos	pyvista/plotting/renderer.py	/^def map_loc_to_pos(loc, size, border=0.05):$/;"	f
map_value	build/lib/pyvista/plotting/lookup_table.py	/^    def map_value($/;"	m	class:LookupTable
map_value	pyvista/plotting/lookup_table.py	/^    def map_value($/;"	m	class:LookupTable
mapfile	build/lib/pyvista/examples/examples.py	/^mapfile = str(Path(dir_path) \/ '2k_earth_daymap.jpg')$/;"	v
mapfile	pyvista/examples/examples.py	/^mapfile = str(Path(dir_path) \/ '2k_earth_daymap.jpg')$/;"	v
mapper	build/lib/pyvista/plotting/actor.py	/^    def mapper(self) -> _BaseMapper:  # numpydoc ignore=RT01$/;"	m	class:Actor
mapper	build/lib/pyvista/plotting/actor.py	/^    def mapper(self, obj) -> None:$/;"	m	class:Actor
mapper	build/lib/pyvista/plotting/volume.py	/^    def mapper(self) -> _BaseMapper:  # numpydoc ignore=RT01$/;"	m	class:Volume
mapper	build/lib/pyvista/plotting/volume.py	/^    def mapper(self, obj):$/;"	m	class:Volume
mapper	pyvista/plotting/actor.py	/^    def mapper(self) -> _BaseMapper:  # numpydoc ignore=RT01$/;"	m	class:Actor
mapper	pyvista/plotting/actor.py	/^    def mapper(self, obj) -> None:$/;"	m	class:Actor
mapper	pyvista/plotting/volume.py	/^    def mapper(self) -> _BaseMapper:  # numpydoc ignore=RT01$/;"	m	class:Volume
mapper	pyvista/plotting/volume.py	/^    def mapper(self, obj):$/;"	m	class:Volume
mapper	tests/plotting/mappers/test_gaussian_mapper.py	/^def mapper(sphere):$/;"	f
mapping	examples/02-plot/cmap.py	/^mapping = np.linspace(mesh['values'].min(), mesh['values'].max(), 256)$/;"	v
margin	build/lib/pyvista/plotting/charts.py	/^    def margin(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
margin	build/lib/pyvista/plotting/charts.py	/^    def margin(self, val) -> None:$/;"	m	class:Axis
margin	pyvista/plotting/charts.py	/^    def margin(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
margin	pyvista/plotting/charts.py	/^    def margin(self, val) -> None:$/;"	m	class:Axis
marker_names	tests/conftest.py	/^def marker_names(item: pytest.Item):$/;"	f
marker_size	build/lib/pyvista/plotting/charts.py	/^    def marker_size(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
marker_size	build/lib/pyvista/plotting/charts.py	/^    def marker_size(self, val) -> None:$/;"	m	class:ScatterPlot2D
marker_size	pyvista/plotting/charts.py	/^    def marker_size(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
marker_size	pyvista/plotting/charts.py	/^    def marker_size(self, val) -> None:$/;"	m	class:ScatterPlot2D
marker_style	build/lib/pyvista/plotting/charts.py	/^    def marker_style(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
marker_style	build/lib/pyvista/plotting/charts.py	/^    def marker_style(self, val):$/;"	m	class:ScatterPlot2D
marker_style	pyvista/plotting/charts.py	/^    def marker_style(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
marker_style	pyvista/plotting/charts.py	/^    def marker_style(self, val):$/;"	m	class:ScatterPlot2D
marks	tests/plotting/test_charts.py	/^            marks=pytest.mark.filterwarnings($/;"	v
mars	examples/99-advanced/planets.py	/^mars = examples.planets.load_mars(radius=3397.2)$/;"	v
mars_texture	examples/99-advanced/planets.py	/^mars_texture = examples.planets.download_mars_surface(texture=True)$/;"	v
mask	build/lib/pyvista/demos/logo.py	/^    mask = grid.points[cells[:, 1:], 2] < 0.2$/;"	v
mask	build/lib/pyvista/demos/logo.py	/^    mask = mask.all(1)$/;"	v
mask	examples/01-filter/glyphs.py	/^mask = mesh['scalars'] < 210$/;"	v
mask	pyvista/demos/logo.py	/^    mask = grid.points[cells[:, 1:], 2] < 0.2$/;"	v
mask	pyvista/demos/logo.py	/^    mask = mask.all(1)$/;"	v
match	tests/core/test_utilities.py	/^        match=re.escape(f'{Foo.__name__} has no value matching {value}'),$/;"	v	class:test_annotated_int_enum_from_any_raises.Foo
matching_point_data	tests/core/test_polydata.py	/^    def matching_point_data(this, that, scalars_name):$/;"	f	function:test_merge_main_has_priority
matplotlib	build/lib/pyvista/core/filters/data_set.py	/^        import matplotlib.colors$/;"	i
matplotlib	build/lib/pyvista/plotting/charts.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	build/lib/pyvista/plotting/colors.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	doc/source/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
matplotlib	examples/00-load/create_structured_surface.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/00-load/create_surface_draped.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/01-filter/slicing.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/02-plot/chart_basics.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/02-plot/chart_overlays.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/02-plot/cmap.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/02-plot/image_depth.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/02-plot/opacity.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/02-plot/screenshot.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/02-plot/topo_map.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples/99-advanced/fea_hertzian_contact_pressure.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples_trame/advanced/custom_ui.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples_trame/basic/PyVistaRemoteLocalView.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples_trame/basic/PyVistaRemoteView.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	examples_trame/basic/ui_template.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pyvista/core/filters/data_set.py	/^        import matplotlib.colors$/;"	i
matplotlib	pyvista/plotting/charts.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pyvista/plotting/colors.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	tests/plotting/test_charts.py	/^    import matplotlib.pyplot as plt$/;"	i
matplotlib	tests/plotting/test_plotting.py	/^    import matplotlib.pyplot as plt$/;"	i
matplotlib	tests/plotting/tinypages/conf.py	/^IMPORT_MATPLOTLIB_RE = r'\\b(import +matplotlib|from +matplotlib +import)\\b'$/;"	i
matplotlib_default_colors	build/lib/pyvista/plotting/colors.py	/^matplotlib_default_colors = [$/;"	v
matplotlib_default_colors	pyvista/plotting/colors.py	/^matplotlib_default_colors = [$/;"	v
matplotlib_default_colors	tests/plotting/test_plotting.py	/^from pyvista.plotting.colors import matplotlib_default_colors$/;"	i
matrix	build/lib/pyvista/core/utilities/transform.py	/^    def matrix(self: Transform) -> NumpyArray[float]:$/;"	m	class:Transform
matrix	build/lib/pyvista/core/utilities/transform.py	/^    def matrix(self: Transform, trans: TransformLike) -> None:$/;"	m	class:Transform
matrix	pyvista/core/utilities/transform.py	/^    def matrix(self: Transform) -> NumpyArray[float]:$/;"	m	class:Transform
matrix	pyvista/core/utilities/transform.py	/^    def matrix(self: Transform, trans: TransformLike) -> None:$/;"	m	class:Transform
matrix_list	build/lib/pyvista/core/utilities/transform.py	/^    def matrix_list(self: Transform) -> list[NumpyArray[float]]:$/;"	m	class:Transform
matrix_list	pyvista/core/utilities/transform.py	/^    def matrix_list(self: Transform) -> list[NumpyArray[float]]:$/;"	m	class:Transform
max_examples	tests/core/test_dataobject_filters.py	/^    max_examples=HYPOTHESIS_MAX_EXAMPLES,$/;"	v
max_freq	examples/01-filter/image_fft_perlin_noise.py	/^max_freq = freq.max()$/;"	v
max_length	examples/01-filter/streamlines.py	/^    max_length=100.0,$/;"	v
max_length	examples/01-filter/streamlines_2D.py	/^    max_length=100.0,$/;"	v
max_length	examples/99-advanced/magnetic_fields.py	/^    max_length=180,$/;"	v
max_length	examples/99-advanced/openfoam_tubes.py	/^    max_length=1.0,$/;"	v
max_point	examples/99-advanced/extending_pyvista.py	/^    def max_point(self):$/;"	m	class:FooData
maximum	build/lib/pyvista/core/utilities/image_sources.py	/^    def maximum(self) -> float:$/;"	m	class:ImageGaussianSource
maximum	build/lib/pyvista/core/utilities/image_sources.py	/^    def maximum(self) -> float:$/;"	m	class:ImageNoiseSource
maximum	build/lib/pyvista/core/utilities/image_sources.py	/^    def maximum(self, maximum: float) -> None:$/;"	m	class:ImageGaussianSource
maximum	build/lib/pyvista/core/utilities/image_sources.py	/^    def maximum(self, maximum: float) -> None:$/;"	m	class:ImageNoiseSource
maximum	pyvista/core/utilities/image_sources.py	/^    def maximum(self) -> float:$/;"	m	class:ImageGaussianSource
maximum	pyvista/core/utilities/image_sources.py	/^    def maximum(self) -> float:$/;"	m	class:ImageNoiseSource
maximum	pyvista/core/utilities/image_sources.py	/^    def maximum(self, maximum: float) -> None:$/;"	m	class:ImageGaussianSource
maximum	pyvista/core/utilities/image_sources.py	/^    def maximum(self, maximum: float) -> None:$/;"	m	class:ImageNoiseSource
maximum_signature_line_length	doc/source/conf.py	/^maximum_signature_line_length = 88$/;"	v
maxiter	build/lib/pyvista/core/utilities/image_sources.py	/^    def maxiter(self) -> int:$/;"	m	class:ImageMandelbrotSource
maxiter	build/lib/pyvista/core/utilities/image_sources.py	/^    def maxiter(self, maxiter: int) -> None:$/;"	m	class:ImageMandelbrotSource
maxiter	pyvista/core/utilities/image_sources.py	/^    def maxiter(self) -> int:$/;"	m	class:ImageMandelbrotSource
maxiter	pyvista/core/utilities/image_sources.py	/^    def maxiter(self, maxiter: int) -> None:$/;"	m	class:ImageMandelbrotSource
md	build/lib/pyvista/plotting/camera.py	/^import xml.dom.minidom as md$/;"	i
md	pyvista/plotting/camera.py	/^import xml.dom.minidom as md$/;"	i
mean_density	examples/01-filter/integrate_data.py	/^mean_density = integrated_volume['density'][0] \/ volume$/;"	v
mean_velocity	examples/01-filter/integrate_data.py	/^mean_velocity = integrated_volume['velocity'][0] \/ volume$/;"	v
measures	examples/01-filter/mesh_quality.py	/^measures = ['area', 'shape', 'min_angle', 'max_angle']$/;"	v
measures	examples/01-filter/mesh_quality.py	/^measures = ['volume', 'collapse_ratio', 'jacobian', 'scaled_jacobian']$/;"	v
median_smooth	build/lib/pyvista/core/filters/image_data.py	/^    def median_smooth($/;"	m	class:ImageDataFilters
median_smooth	pyvista/core/filters/image_data.py	/^    def median_smooth($/;"	m	class:ImageDataFilters
mem_sub	build/lib/pyvista/plotting/charts.py	/^            def mem_sub(*args, **kwargs):$/;"	f	function:DocSubs._wrap_member
mem_sub	pyvista/plotting/charts.py	/^            def mem_sub(*args, **kwargs):$/;"	f	function:DocSubs._wrap_member
memory_address	build/lib/pyvista/core/dataobject.py	/^    def memory_address(self: Self) -> str:$/;"	m	class:DataObject
memory_address	build/lib/pyvista/plotting/actor.py	/^    def memory_address(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
memory_address	pyvista/core/dataobject.py	/^    def memory_address(self: Self) -> str:$/;"	m	class:DataObject
memory_address	pyvista/plotting/actor.py	/^    def memory_address(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
mercury	examples/99-advanced/planets.py	/^mercury = examples.planets.load_mercury(radius=2439.0)$/;"	v
mercury_texture	examples/99-advanced/planets.py	/^mercury_texture = examples.planets.download_mercury_surface(texture=True)$/;"	v
merge	build/lib/pyvista/core/filters/data_set.py	/^    def merge(  # type: ignore[misc]$/;"	m	class:DataSetFilters
merge	build/lib/pyvista/core/filters/poly_data.py	/^    def merge(  # type: ignore[override, misc]$/;"	m	class:PolyDataFilters
merge	build/lib/pyvista/core/utilities/__init__.py	/^from .features import merge as merge$/;"	i
merge	build/lib/pyvista/core/utilities/features.py	/^def merge($/;"	f
merge	pyvista/core/filters/data_set.py	/^    def merge(  # type: ignore[misc]$/;"	m	class:DataSetFilters
merge	pyvista/core/filters/poly_data.py	/^    def merge(  # type: ignore[override, misc]$/;"	m	class:PolyDataFilters
merge	pyvista/core/utilities/__init__.py	/^from .features import merge as merge$/;"	i
merge	pyvista/core/utilities/features.py	/^def merge($/;"	f
merge_points	build/lib/pyvista/core/filters/data_set.py	/^    def merge_points(  # type: ignore[misc]$/;"	m	class:DataSetFilters
merge_points	pyvista/core/filters/data_set.py	/^    def merge_points(  # type: ignore[misc]$/;"	m	class:DataSetFilters
mesh	build/lib/pyvista/demos/logo.py	/^    mesh = mesh_letters['s']$/;"	v
mesh	build/lib/pyvista/demos/logo.py	/^    mesh = mesh_letters['t'].clean().compute_normals()$/;"	v
mesh	examples/00-load/create_poly.py	/^mesh = pv.PolyData(points, faces)$/;"	v
mesh	examples/00-load/create_polydata_strips.py	/^mesh = pv.PolyData(points, strips=strips)$/;"	v
mesh	examples/00-load/create_sphere.py	/^mesh = pv.PolyData(points, faces=faces)$/;"	v
mesh	examples/00-load/create_sphere.py	/^mesh = pv.Sphere()$/;"	v
mesh	examples/00-load/create_sphere.py	/^mesh = pv.StructuredGrid(x, y, z)$/;"	v
mesh	examples/00-load/create_structured_surface.py	/^mesh = pv.StructuredGrid()$/;"	v
mesh	examples/00-load/create_truss.py	/^mesh = pyvista.PolyData(nodes, edges_w_padding)$/;"	v
mesh	examples/00-load/load_gltf.py	/^mesh = block[0][0][0]$/;"	v
mesh	examples/00-load/read_file.py	/^mesh = examples.download_bunny_coarse()$/;"	v
mesh	examples/00-load/read_file.py	/^mesh = examples.download_cad_model()$/;"	v
mesh	examples/00-load/read_file.py	/^mesh = examples.download_doorman()$/;"	v
mesh	examples/00-load/read_file.py	/^mesh = examples.download_teapot()$/;"	v
mesh	examples/00-load/read_file.py	/^mesh = pv.read(filename)$/;"	v
mesh	examples/00-load/read_parallel.py	/^mesh = pv.read(filename)$/;"	v
mesh	examples/00-load/reader.py	/^    mesh = reader.read()[0]  # This dataset only has 1 block$/;"	v
mesh	examples/00-load/reader.py	/^mesh = pyvista.Sphere()$/;"	v
mesh	examples/00-load/terrain_mesh.py	/^mesh = pv.StructuredGrid(xx, yy, zz)$/;"	v
mesh	examples/00-load/wrap_trimesh.py	/^mesh = pv.wrap(point)$/;"	v
mesh	examples/00-load/wrap_trimesh.py	/^mesh = pv.wrap(tmesh)$/;"	v
mesh	examples/01-filter/cell_centers.py	/^mesh = examples.download_teapot()$/;"	v
mesh	examples/01-filter/cell_centers.py	/^mesh = pv.Cube()$/;"	v
mesh	examples/01-filter/clipping.py	/^mesh = examples.load_airplane()$/;"	v
mesh	examples/01-filter/clipping.py	/^mesh = pv.Wavelet()$/;"	v
mesh	examples/01-filter/compute_normals.py	/^mesh = examples.download_nefertiti()$/;"	v
mesh	examples/01-filter/compute_normals.py	/^mesh = examples.download_topo_global()$/;"	v
mesh	examples/01-filter/connectivity.py	/^mesh = examples.download_foot_bones()$/;"	v
mesh	examples/01-filter/connectivity.py	/^mesh = pv.ParametricRandomHills()$/;"	v
mesh	examples/01-filter/contouring.py	/^    mesh = label_map.contour_labels()$/;"	v
mesh	examples/01-filter/contouring.py	/^mesh = examples.download_embryo()$/;"	v
mesh	examples/01-filter/contouring.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples/01-filter/decimate.py	/^mesh = examples.download_face()$/;"	v
mesh	examples/01-filter/extract_cells_inside_surface.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/01-filter/extract_edges.py	/^mesh = examples.download_bunny()$/;"	v
mesh	examples/01-filter/extract_edges.py	/^mesh = examples.download_cad_model()$/;"	v
mesh	examples/01-filter/extract_edges.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/01-filter/extrude_trim.py	/^mesh = pv.ParametricRandomHills(random_seed=2)$/;"	v
mesh	examples/01-filter/flying_edges.py	/^mesh = grid.contour([0], values, method='flying_edges')$/;"	v
mesh	examples/01-filter/flying_edges.py	/^mesh = grid.contour([1], values, method='marching_cubes')$/;"	v
mesh	examples/01-filter/glyphs.py	/^mesh = examples.download_carotid().threshold(145, scalars='scalars')$/;"	v
mesh	examples/01-filter/glyphs.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples/01-filter/glyphs_table.py	/^mesh = pv.StructuredGrid(x, y, z)$/;"	v
mesh	examples/01-filter/gradients.py	/^mesh = examples.download_carotid()$/;"	v
mesh	examples/01-filter/image_fft_perlin_noise.py	/^    mesh = warp_low_pass_noise(freq)$/;"	v
mesh	examples/01-filter/mesh_quality.py	/^mesh = examples.download_cow().triangulate().decimate(0.7)$/;"	v
mesh	examples/01-filter/mesh_quality.py	/^mesh = examples.download_letter_a()$/;"	v
mesh	examples/01-filter/resample.py	/^mesh = pv.Sphere(center=(4.5, 4.5, 4.5), radius=4.5)$/;"	v
mesh	examples/01-filter/resample.py	/^mesh = pv.create_grid(data_to_probe, dimensions=(75, 75, 75))$/;"	v
mesh	examples/01-filter/rotate.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/01-filter/sampling_functions_2d.py	/^mesh = mesh.extract_surface()$/;"	v
mesh	examples/01-filter/sampling_functions_2d.py	/^mesh = mesh.smooth(n_iter=100, inplace=False, relaxation_factor=1)$/;"	v
mesh	examples/01-filter/sampling_functions_2d.py	/^mesh = sampled.warp_by_scalar('scalars')$/;"	v
mesh	examples/01-filter/slicing.py	/^mesh = examples.download_brain()$/;"	v
mesh	examples/01-filter/slicing.py	/^mesh = examples.load_channels()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = examples.download_blood_vessels().cell_data_to_point_data()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = examples.download_carotid()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = examples.download_kitchen()$/;"	v
mesh	examples/01-filter/streamlines.py	/^mesh = pv.ImageData(dimensions=(nx, ny, nz), spacing=(0.1, 0.1, 0.1), origin=origin)$/;"	v
mesh	examples/01-filter/streamlines_2D.py	/^mesh = examples.download_cylinder_crossflow()$/;"	v
mesh	examples/01-filter/subdivide.py	/^mesh = examples.download_bunny_coarse().triangulate()$/;"	v
mesh	examples/02-plot/anti_aliasing.py	/^mesh = pv.Icosphere()$/;"	v
mesh	examples/02-plot/backface_props.py	/^mesh = pv.ParametricEllipsoid(min_v=np.pi \/ 2 - 0.2, max_v=np.pi \/ 2 + 0.2)$/;"	v
mesh	examples/02-plot/bounds.py	/^    mesh=central_gear,$/;"	v
mesh	examples/02-plot/cmap.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/depth_of_field.py	/^mesh = examples.download_bunny()$/;"	v
mesh	examples/02-plot/depth_of_field.py	/^mesh = mesh.rotate_x(90, inplace=False).rotate_z(90, inplace=False).scale(4, 4, 4)$/;"	v
mesh	examples/02-plot/depth_peeling.py	/^mesh = examples.download_brain().contour(5)$/;"	v
mesh	examples/02-plot/element_picking.py	/^mesh = pv.Wavelet()$/;"	v
mesh	examples/02-plot/floors.py	/^mesh = examples.download_dragon()$/;"	v
mesh	examples/02-plot/ghost_cells.py	/^mesh = vol.cast_to_unstructured_grid()$/;"	v
mesh	examples/02-plot/image_depth.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples/02-plot/labels.py	/^mesh = examples.load_uniform().slice()$/;"	v
mesh	examples/02-plot/legend.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples/02-plot/lighting_mesh.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/linked.py	/^mesh = examples.download_cow()$/;"	v
mesh	examples/02-plot/movie.py	/^mesh = pv.Sphere()$/;"	v
mesh	examples/02-plot/moving_cmap.py	/^mesh = grid.extract_geometry().clean(tolerance=1e-6)$/;"	v
mesh	examples/02-plot/opacity.py	/^mesh = image.warp_by_scalar()$/;"	v
mesh	examples/02-plot/orbit.py	/^mesh = examples.download_dragon()$/;"	v
mesh	examples/02-plot/orbit.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/ortho_slices.py	/^mesh = examples.download_embryo()$/;"	v
mesh	examples/02-plot/pbr.py	/^mesh = examples.download_louis_louvre()$/;"	v
mesh	examples/02-plot/pbr.py	/^mesh = examples.download_nefertiti()$/;"	v
mesh	examples/02-plot/plot_over_circular_arc.py	/^mesh = examples.load_uniform()$/;"	v
mesh	examples/02-plot/plot_over_line.py	/^mesh = examples.download_kitchen()$/;"	v
mesh	examples/02-plot/plot_over_line.py	/^mesh = examples.download_st_helens()$/;"	v
mesh	examples/02-plot/scalar_bars.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/screenshot.py	/^mesh = pv.read(filename)$/;"	v
mesh	examples/02-plot/shading.py	/^mesh = examples.load_nut()$/;"	v
mesh	examples/02-plot/ssao.py	/^mesh = examples.download_cad_model_case()$/;"	v
mesh	examples/02-plot/texture.py	/^mesh = curvsurf.extract_surface()$/;"	v
mesh	examples/02-plot/texture.py	/^mesh = pv.Sphere()$/;"	v
mesh	examples/02-plot/themes.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/02-plot/vector_component.py	/^mesh = examples.download_notch_displacement()$/;"	v
mesh	examples/02-plot/vertices.py	/^mesh = examples.download_bunny_coarse()$/;"	v
mesh	examples/03-widgets/box_widget.py	/^mesh = examples.download_nefertiti()$/;"	v
mesh	examples/03-widgets/checkbox_widget.py	/^mesh = pv.Sphere()$/;"	v
mesh	examples/03-widgets/line_widget.py	/^mesh = examples.download_kitchen()$/;"	v
mesh	examples/03-widgets/plane_widget.py	/^mesh = examples.download_carotid()$/;"	v
mesh	examples/03-widgets/slider_bar_widget.py	/^mesh = examples.download_knee_full()$/;"	v
mesh	examples/03-widgets/spline_widget.py	/^mesh = pv.Wavelet()$/;"	v
mesh	examples/04-lights/light_types.py	/^mesh = examples.download_bunny()$/;"	v
mesh	examples/04-lights/plotter_builtins.py	/^mesh = examples.download_st_helens().warp_by_scalar()$/;"	v
mesh	examples/04-lights/shadows.py	/^mesh = examples.download_dragon()$/;"	v
mesh	examples/98-common/project_points_tessellate.py	/^mesh = polydata.delaunay_2d()$/;"	v
mesh	examples/99-advanced/antarctica_compare.py	/^mesh = examples.download_antarctica_velocity()$/;"	v
mesh	examples/99-advanced/fea_hertzian_contact_pressure.py	/^mesh = examples.download_fea_hertzian_contact_cylinder()$/;"	v
mesh	examples/99-advanced/openfoam_example.py	/^mesh = reader.read()$/;"	v
mesh	examples/99-advanced/plotting_algorithms.py	/^mesh = examples.download_bunny_coarse()$/;"	v
mesh	examples_trame/advanced/custom_ui.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/PyVistaLocalView.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/PyVistaRemoteLocalView.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/PyVistaRemoteView.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/actor_color.py	/^mesh = pv.Cone()$/;"	v
mesh	examples_trame/basic/mesh_scalars.py	/^mesh = examples.download_antarctica_velocity()$/;"	v
mesh	examples_trame/basic/multi_views.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	examples_trame/basic/ui_template.py	/^mesh = examples.load_random_hills()$/;"	v
mesh	pyvista/demos/logo.py	/^    mesh = mesh_letters['s']$/;"	v
mesh	pyvista/demos/logo.py	/^    mesh = mesh_letters['t'].clean().compute_normals()$/;"	v
mesh	tests/core/test_dataset.py	/^def mesh():$/;"	f
mesh2d	tests/test_meshio.py	/^mesh2d = meshio.Mesh($/;"	v
mesh_0	examples/00-load/reader.py	/^mesh_0 = reader.read()$/;"	v
mesh_1	examples/00-load/reader.py	/^mesh_1 = reader.read()$/;"	v
mesh_2D_velocity	tests/core/test_dataset_filters.py	/^def mesh_2D_velocity():$/;"	f
mesh_actor	examples/99-advanced/customization_trame_toolbar.py	/^mesh_actor = pl.add_mesh(algo)$/;"	v
mesh_fix	doc/source/make_external_gallery.py	/^    mesh_fix=Example($/;"	v
mesh_g	examples/01-filter/gradients.py	/^mesh_g = mesh.compute_derivative(scalars='scalars')$/;"	v
mesh_g	examples/01-filter/gradients.py	/^mesh_g = mesh.compute_derivative(scalars='vectors')$/;"	v
mesh_inside_out	examples/02-plot/backface_props.py	/^mesh_inside_out = mesh.translate((0, 0, 1), inplace=False)$/;"	v
mesh_letters	build/lib/pyvista/demos/logo.py	/^    mesh_letters = logo_letters()$/;"	v
mesh_letters	pyvista/demos/logo.py	/^    mesh_letters = logo_letters()$/;"	v
meshes	build/lib/pyvista/plotting/plotter.py	/^    def meshes(self) -> list[pyvista.DataSet | pyvista.MultiBlock]:  # numpydoc ignore=RT01$/;"	m	class:Plotter
meshes	examples/02-plot/backface_props.py	/^meshes = henneberg + klein$/;"	v
meshes	examples/02-plot/backface_props.py	/^meshes = mesh + mesh_inside_out$/;"	v
meshes	pyvista/plotting/plotter.py	/^    def meshes(self) -> list[pyvista.DataSet | pyvista.MultiBlock]:  # numpydoc ignore=RT01$/;"	m	class:Plotter
meshgrid	build/lib/pyvista/core/grid.py	/^    def meshgrid($/;"	m	class:RectilinearGrid
meshgrid	pyvista/core/grid.py	/^    def meshgrid($/;"	m	class:RectilinearGrid
meshio	build/lib/pyvista/core/utilities/fileio.py	/^        import meshio$/;"	i
meshio	build/lib/pyvista/core/utilities/fileio.py	/^    import meshio$/;"	i
meshio	pyvista/core/utilities/fileio.py	/^        import meshio$/;"	i
meshio	pyvista/core/utilities/fileio.py	/^    import meshio$/;"	i
meshio	tests/test_meshio.py	/^import meshio$/;"	i
meshio_to_vtk_type	build/lib/pyvista/core/utilities/fileio.py	/^        from meshio._vtk_common import meshio_to_vtk_type$/;"	i
meshio_to_vtk_type	build/lib/pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk import meshio_to_vtk_type$/;"	i
meshio_to_vtk_type	pyvista/core/utilities/fileio.py	/^        from meshio._vtk_common import meshio_to_vtk_type$/;"	i
meshio_to_vtk_type	pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk import meshio_to_vtk_type$/;"	i
message	doc/source/conf.py	/^    message='Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.',$/;"	v
metallic	build/lib/pyvista/plotting/_property.py	/^    def metallic(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
metallic	build/lib/pyvista/plotting/_property.py	/^    def metallic(self, value: float):$/;"	m	class:Property
metallic	build/lib/pyvista/plotting/actor_properties.py	/^    def metallic(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
metallic	build/lib/pyvista/plotting/actor_properties.py	/^    def metallic(self, value: float):$/;"	m	class:ActorProperties
metallic	build/lib/pyvista/plotting/themes.py	/^    def metallic(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
metallic	build/lib/pyvista/plotting/themes.py	/^    def metallic(self, metallic: float):$/;"	m	class:_LightingConfig
metallic	examples/02-plot/backface_props.py	/^    metallic=1.0,$/;"	v
metallic	pyvista/plotting/_property.py	/^    def metallic(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
metallic	pyvista/plotting/_property.py	/^    def metallic(self, value: float):$/;"	m	class:Property
metallic	pyvista/plotting/actor_properties.py	/^    def metallic(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
metallic	pyvista/plotting/actor_properties.py	/^    def metallic(self, value: float):$/;"	m	class:ActorProperties
metallic	pyvista/plotting/themes.py	/^    def metallic(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
metallic	pyvista/plotting/themes.py	/^    def metallic(self, metallic: float):$/;"	m	class:_LightingConfig
method	examples/99-advanced/atomic_orbitals.py	/^    method='marching_cubes',$/;"	v
method_from_obj	build/lib/pyvista/ext/coverage.py	/^def method_from_obj(obj_name):$/;"	f
method_from_obj	pyvista/ext/coverage.py	/^def method_from_obj(obj_name):$/;"	f
micro	tests/conftest.py	/^    micro=int(np.__version__.split('.')[2]),$/;"	v
minimum	build/lib/pyvista/core/utilities/image_sources.py	/^    def minimum(self) -> float:$/;"	m	class:ImageNoiseSource
minimum	build/lib/pyvista/core/utilities/image_sources.py	/^    def minimum(self, minimum: float) -> None:$/;"	m	class:ImageNoiseSource
minimum	pyvista/core/utilities/image_sources.py	/^    def minimum(self) -> float:$/;"	m	class:ImageNoiseSource
minimum	pyvista/core/utilities/image_sources.py	/^    def minimum(self, minimum: float) -> None:$/;"	m	class:ImageNoiseSource
minor	tests/conftest.py	/^    minor=int(np.__version__.split('.')[1]),$/;"	v
mipmap	build/lib/pyvista/plotting/texture.py	/^    def mipmap(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
mipmap	build/lib/pyvista/plotting/texture.py	/^    def mipmap(self, value: bool):$/;"	m	class:Texture
mipmap	pyvista/plotting/texture.py	/^    def mipmap(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
mipmap	pyvista/plotting/texture.py	/^    def mipmap(self, value: bool):$/;"	m	class:Texture
mixed_quad_pixel_voxel	tests/test_meshio.py	/^mixed_quad_pixel_voxel = ($/;"	v
mobius	examples/00-load/create_parametric_geometric_objects.py	/^mobius = pv.ParametricMobius()$/;"	v
mobius	examples/02-plot/backface_props.py	/^mobius = pv.ParametricMobius().rotate_z(-90, inplace=False)$/;"	v
mock	tests/core/test_pyvista_ndarray.py	/^from unittest import mock$/;"	i
mock	tests/core/test_utilities.py	/^from unittest import mock$/;"	i
mode	build/lib/pyvista/trame/jupyter.py	/^            mode=mode,$/;"	v
mode	build/lib/pyvista/trame/jupyter.py	/^        mode=mode,$/;"	v
mode	build/lib/pyvista/trame/ui/__init__.py	/^        mode=mode,$/;"	v
mode	pyvista/trame/jupyter.py	/^            mode=mode,$/;"	v
mode	pyvista/trame/jupyter.py	/^        mode=mode,$/;"	v
mode	pyvista/trame/ui/__init__.py	/^        mode=mode,$/;"	v
mode	tests/plotting/test_picking.py	/^        mode=mode,$/;"	v	class:test_element_picking.Tracker
mode_shape	examples/99-advanced/pump_bracket.py	/^mode_shape = 'disp_6'$/;"	v
model	examples/01-filter/clipping_with_surface.py	/^model = grid.clip_surface(surface)$/;"	v
model	examples/01-filter/slicing.py	/^model = examples.load_channels()$/;"	v
model	examples/02-plot/opacity.py	/^model = examples.download_model_with_variance()$/;"	v
model_transform_matrix	build/lib/pyvista/plotting/camera.py	/^    def model_transform_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
model_transform_matrix	build/lib/pyvista/plotting/camera.py	/^    def model_transform_matrix(self, matrix):$/;"	m	class:Camera
model_transform_matrix	pyvista/plotting/camera.py	/^    def model_transform_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
model_transform_matrix	pyvista/plotting/camera.py	/^    def model_transform_matrix(self, matrix):$/;"	m	class:Camera
modern	build/lib/pyvista/plotting/themes.py	/^    def modern(self) -> _SliderStyleConfig:  # numpydoc ignore=RT01$/;"	m	class:_SliderConfig
modern	build/lib/pyvista/plotting/themes.py	/^    def modern(self, config: _SliderStyleConfig):$/;"	m	class:_SliderConfig
modern	pyvista/plotting/themes.py	/^    def modern(self) -> _SliderStyleConfig:  # numpydoc ignore=RT01$/;"	m	class:_SliderConfig
modern	pyvista/plotting/themes.py	/^    def modern(self, config: _SliderStyleConfig):$/;"	m	class:_SliderConfig
modifies_verbosity	tests/core/test_utilities.py	/^def modifies_verbosity():$/;"	f
mouse_position	build/lib/pyvista/plotting/plotter.py	/^    mouse_position = None$/;"	v	class:BasePlotter
mouse_position	pyvista/plotting/plotter.py	/^    mouse_position = None$/;"	v	class:BasePlotter
move_nested_field_data_to_root	build/lib/pyvista/core/composite.py	/^    def move_nested_field_data_to_root($/;"	m	class:MultiBlock
move_nested_field_data_to_root	pyvista/core/composite.py	/^    def move_nested_field_data_to_root($/;"	m	class:MultiBlock
mpl	build/lib/pyvista/plotting/plotter.py	/^import matplotlib as mpl$/;"	i
mpl	build/lib/pyvista/plotting/tools.py	/^    import matplotlib as mpl$/;"	i
mpl	examples/02-plot/topo_map.py	/^import matplotlib as mpl$/;"	i
mpl	examples/03-widgets/sphere_widget.py	/^    import matplotlib as mpl$/;"	i
mpl	pyvista/plotting/plotter.py	/^import matplotlib as mpl$/;"	i
mpl	pyvista/plotting/tools.py	/^    import matplotlib as mpl$/;"	i
mpl	tests/conftest.py	/^        import matplotlib as mpl$/;"	i
mpl	tests/plotting/test_colors.py	/^import matplotlib as mpl$/;"	i
mpl	tests/test_meta.py	/^        import matplotlib as mpl$/;"	i
msg	build/lib/pyvista/__init__.py	/^    msg = 'VTK version must be 9.0.0 or greater.'$/;"	v
msg	build/lib/pyvista/_plot.py	/^            msg = f'Background must be color-like or a file path. Got {background} instead.'$/;"	v
msg	pyvista/__init__.py	/^    msg = 'VTK version must be 9.0.0 or greater.'$/;"	v
msg	pyvista/_plot.py	/^            msg = f'Background must be color-like or a file path. Got {background} instead.'$/;"	v
multi_ray_trace	build/lib/pyvista/core/filters/poly_data.py	/^    def multi_ray_trace($/;"	m	class:PolyDataFilters
multi_ray_trace	pyvista/core/filters/poly_data.py	/^    def multi_ray_trace($/;"	m	class:PolyDataFilters
multi_rendering_splitting_position	build/lib/pyvista/plotting/themes.py	/^    def multi_rendering_splitting_position($/;"	m	class:Theme
multi_rendering_splitting_position	build/lib/pyvista/plotting/themes.py	/^    def multi_rendering_splitting_position(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
multi_rendering_splitting_position	pyvista/plotting/themes.py	/^    def multi_rendering_splitting_position($/;"	m	class:Theme
multi_rendering_splitting_position	pyvista/plotting/themes.py	/^    def multi_rendering_splitting_position(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
multi_samples	build/lib/pyvista/plotting/themes.py	/^    def multi_samples(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Theme
multi_samples	build/lib/pyvista/plotting/themes.py	/^    def multi_samples(self, multi_samples: int):$/;"	m	class:Theme
multi_samples	pyvista/plotting/themes.py	/^    def multi_samples(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Theme
multi_samples	pyvista/plotting/themes.py	/^    def multi_samples(self, multi_samples: int):$/;"	m	class:Theme
multiblock_all	tests/conftest.py	/^def multiblock_all(datasets):$/;"	f
multiblock_all_with_nested_and_none	tests/conftest.py	/^def multiblock_all_with_nested_and_none(datasets, multiblock_all):$/;"	f
multiblock_poly	tests/conftest.py	/^def multiblock_poly():$/;"	f
multicomp_poly	tests/plotting/test_plotting.py	/^def multicomp_poly():$/;"	f
multiply_mode	build/lib/pyvista/core/utilities/transform.py	/^    def multiply_mode(self: Transform) -> Literal['pre', 'post']:  # numpydoc ignore=RT01$/;"	m	class:Transform
multiply_mode	build/lib/pyvista/core/utilities/transform.py	/^    def multiply_mode(self: Transform, multiply_mode: Literal['pre', 'post']) -> None:$/;"	m	class:Transform
multiply_mode	pyvista/core/utilities/transform.py	/^    def multiply_mode(self: Transform) -> Literal['pre', 'post']:  # numpydoc ignore=RT01$/;"	m	class:Transform
multiply_mode	pyvista/core/utilities/transform.py	/^    def multiply_mode(self: Transform, multiply_mode: Literal['pre', 'post']) -> None:$/;"	m	class:Transform
multiprocessing	tests/core/test_dataobject.py	/^import multiprocessing$/;"	i
muscles	examples/99-advanced/anatomical_groups.py	/^muscles = [$/;"	v
mutable	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import mutable as mutable$/;"	i
mutable	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import mutable as mutable$/;"	i
muted	doc/source/make_tables.py	/^        muted = auto()$/;"	v	class:_BaseDatasetBadge.SemanticColorEnum
my_colormap	examples/02-plot/cmap.py	/^my_colormap = ListedColormap(newcolors)$/;"	v
my_plane_func	examples/03-widgets/plane_widget.py	/^def my_plane_func(normal, origin):$/;"	f
my_theme	examples/02-plot/themes.py	/^my_theme = themes.DarkTheme()$/;"	v
my_theme	examples/02-plot/themes.py	/^my_theme = themes.DocumentTheme()$/;"	v
n	examples/00-load/create_tri_surface.py	/^n = 20$/;"	v
n	examples/01-filter/clipping_with_surface.py	/^n = 51$/;"	v
n	examples/01-filter/flying_edges.py	/^n = 100$/;"	v
n	examples/01-filter/gaussian_smoothing.py	/^n = [100, 150, 200, 245, 255]$/;"	v
n	examples/99-advanced/plotting_algorithms.py	/^n = 200$/;"	v
n	examples/99-advanced/sphere_eversion.py	/^n = 2  # arbitrary integer > 1, the number of "lobes"$/;"	v
n_arrays	build/lib/pyvista/core/dataset.py	/^    def n_arrays(self: Self) -> int:$/;"	m	class:DataSet
n_arrays	build/lib/pyvista/core/objects.py	/^    def n_arrays(self):$/;"	m	class:Table
n_arrays	pyvista/core/dataset.py	/^    def n_arrays(self: Self) -> int:$/;"	m	class:DataSet
n_arrays	pyvista/core/objects.py	/^    def n_arrays(self):$/;"	m	class:Table
n_blocks	build/lib/pyvista/core/composite.py	/^    def n_blocks(self: MultiBlock) -> int:$/;"	m	class:MultiBlock
n_blocks	build/lib/pyvista/core/composite.py	/^    def n_blocks(self: MultiBlock, n: int) -> None:$/;"	m	class:MultiBlock
n_blocks	pyvista/core/composite.py	/^    def n_blocks(self: MultiBlock) -> int:$/;"	m	class:MultiBlock
n_blocks	pyvista/core/composite.py	/^    def n_blocks(self: MultiBlock, n: int) -> None:$/;"	m	class:MultiBlock
n_cells	build/lib/pyvista/core/cell.py	/^    def n_cells(self: Self) -> int:$/;"	m	class:CellArray
n_cells	build/lib/pyvista/core/dataset.py	/^    def n_cells(self: Self) -> int:$/;"	m	class:DataSet
n_cells	pyvista/core/cell.py	/^    def n_cells(self: Self) -> int:$/;"	m	class:CellArray
n_cells	pyvista/core/dataset.py	/^    def n_cells(self: Self) -> int:$/;"	m	class:DataSet
n_colors	examples/01-filter/sampling_functions_2d.py	/^    n_colors=10,$/;"	v
n_columns	build/lib/pyvista/core/objects.py	/^    def n_columns(self):$/;"	m	class:Table
n_columns	pyvista/core/objects.py	/^    def n_columns(self):$/;"	m	class:Table
n_components	build/lib/pyvista/plotting/texture.py	/^    def n_components(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Texture
n_components	pyvista/plotting/texture.py	/^    def n_components(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Texture
n_contours	examples/01-filter/contouring.py	/^n_contours = 8$/;"	v
n_edges	build/lib/pyvista/core/cell.py	/^    def n_edges(self: Self) -> int:$/;"	m	class:Cell
n_edges	pyvista/core/cell.py	/^    def n_edges(self: Self) -> int:$/;"	m	class:Cell
n_faces	build/lib/pyvista/core/cell.py	/^    def n_faces(self: Self) -> int:$/;"	m	class:Cell
n_faces	build/lib/pyvista/core/pointset.py	/^    def n_faces(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_faces	pyvista/core/cell.py	/^    def n_faces(self: Self) -> int:$/;"	m	class:Cell
n_faces	pyvista/core/pointset.py	/^    def n_faces(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_faces_strict	build/lib/pyvista/core/pointset.py	/^    def n_faces_strict(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_faces_strict	pyvista/core/pointset.py	/^    def n_faces_strict(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_frames	examples/99-advanced/add_example.py	/^n_frames = 20$/;"	v
n_frames	examples/99-advanced/pump_bracket.py	/^n_frames = 16$/;"	v
n_labels	examples/02-plot/scalar_bars.py	/^    n_labels=3,$/;"	v
n_lines	build/lib/pyvista/core/pointset.py	/^    def n_lines(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_lines	pyvista/core/pointset.py	/^    def n_lines(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_numbers	tests/core/test_dataobject_filters.py	/^from tests.core.test_dataset_filters import n_numbers$/;"	i
n_numbers	tests/core/test_dataset_filters.py	/^def n_numbers(draw, n):$/;"	f
n_open_edges	build/lib/pyvista/core/pointset.py	/^    def n_open_edges(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_open_edges	pyvista/core/pointset.py	/^    def n_open_edges(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_partitions	build/lib/pyvista/core/partitioned.py	/^    def n_partitions(self) -> int:$/;"	m	class:PartitionedDataSet
n_partitions	build/lib/pyvista/core/partitioned.py	/^    def n_partitions(self, n) -> None:$/;"	m	class:PartitionedDataSet
n_partitions	pyvista/core/partitioned.py	/^    def n_partitions(self) -> int:$/;"	m	class:PartitionedDataSet
n_partitions	pyvista/core/partitioned.py	/^    def n_partitions(self, n) -> None:$/;"	m	class:PartitionedDataSet
n_points	build/lib/pyvista/core/cell.py	/^    def n_points(self: Self) -> int:$/;"	m	class:Cell
n_points	build/lib/pyvista/core/dataset.py	/^    def n_points(self: Self) -> int:$/;"	m	class:DataSet
n_points	build/lib/pyvista/core/utilities/cell_type_helper.py	/^            n_points = getattr(vtkCommonDataModel, cell_str)().GetNumberOfPoints()$/;"	v
n_points	examples/01-filter/decimate.py	/^n_points = 100$/;"	v
n_points	examples/01-filter/streamlines.py	/^    n_points=200,$/;"	v
n_points	examples/01-filter/streamlines.py	/^    n_points=25,$/;"	v
n_points	examples/01-filter/streamlines_2D.py	/^    n_points=25,$/;"	v
n_points	pyvista/core/cell.py	/^    def n_points(self: Self) -> int:$/;"	m	class:Cell
n_points	pyvista/core/dataset.py	/^    def n_points(self: Self) -> int:$/;"	m	class:DataSet
n_points	pyvista/core/utilities/cell_type_helper.py	/^            n_points = getattr(vtkCommonDataModel, cell_str)().GetNumberOfPoints()$/;"	v
n_points	tests/core/test_dataobject.py	/^def n_points(dataset):$/;"	f
n_rotations	examples/01-filter/decimate.py	/^n_rotations = 5$/;"	v
n_rows	build/lib/pyvista/core/objects.py	/^    def n_rows(self):$/;"	m	class:Table
n_rows	build/lib/pyvista/core/objects.py	/^    def n_rows(self, n) -> None:$/;"	m	class:Table
n_rows	pyvista/core/objects.py	/^    def n_rows(self):$/;"	m	class:Table
n_rows	pyvista/core/objects.py	/^    def n_rows(self, n) -> None:$/;"	m	class:Table
n_sides	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def n_sides(self: PolygonSource) -> int:$/;"	m	class:PolygonSource
n_sides	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def n_sides(self: PolygonSource, n_sides: int) -> None:$/;"	m	class:PolygonSource
n_sides	pyvista/core/utilities/geometric_sources.py	/^    def n_sides(self: PolygonSource) -> int:$/;"	m	class:PolygonSource
n_sides	pyvista/core/utilities/geometric_sources.py	/^    def n_sides(self: PolygonSource, n_sides: int) -> None:$/;"	m	class:PolygonSource
n_slices	examples/01-filter/slicing.py	/^n_slices = 5$/;"	v
n_steps	examples/99-advanced/sphere_eversion.py	/^n_steps = 30  # number of steps for a given stage of the animation$/;"	v
n_strips	build/lib/pyvista/core/pointset.py	/^    def n_strips(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_strips	pyvista/core/pointset.py	/^    def n_strips(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_transformations	build/lib/pyvista/core/utilities/transform.py	/^    def n_transformations(self: Transform) -> int:  # numpydoc ignore: RT01$/;"	m	class:Transform
n_transformations	pyvista/core/utilities/transform.py	/^    def n_transformations(self: Transform) -> int:  # numpydoc ignore: RT01$/;"	m	class:Transform
n_values	build/lib/pyvista/plotting/lookup_table.py	/^    def n_values(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
n_values	build/lib/pyvista/plotting/lookup_table.py	/^    def n_values(self, value: int):$/;"	m	class:LookupTable
n_values	pyvista/plotting/lookup_table.py	/^    def n_values(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
n_values	pyvista/plotting/lookup_table.py	/^    def n_values(self, value: int):$/;"	m	class:LookupTable
n_verts	build/lib/pyvista/core/pointset.py	/^    def n_verts(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_verts	pyvista/core/pointset.py	/^    def n_verts(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:PolyData
n_xlabels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def n_xlabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_xlabels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def n_xlabels(self, value: int):$/;"	m	class:CubeAxesActor
n_xlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_xlabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_xlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_xlabels(self, value: int):$/;"	m	class:CubeAxesActor
n_ylabels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def n_ylabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_ylabels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def n_ylabels(self, value: int):$/;"	m	class:CubeAxesActor
n_ylabels	pyvista/plotting/cube_axes_actor.py	/^    def n_ylabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_ylabels	pyvista/plotting/cube_axes_actor.py	/^    def n_ylabels(self, value: int):$/;"	m	class:CubeAxesActor
n_zlabels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def n_zlabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_zlabels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def n_zlabels(self, value: int):$/;"	m	class:CubeAxesActor
n_zlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_zlabels(self):  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
n_zlabels	pyvista/plotting/cube_axes_actor.py	/^    def n_zlabels(self, value: int):$/;"	m	class:CubeAxesActor
name	build/lib/pyvista/core/utilities/misc.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_NameMixin
name	build/lib/pyvista/core/utilities/misc.py	/^    def name(self, value: str) -> None:$/;"	m	class:_NameMixin
name	build/lib/pyvista/ext/coverage.py	/^    name = 'coverage'$/;"	v	class:CoverageBuilder
name	build/lib/pyvista/plotting/colors.py	/^    def name(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:Color
name	build/lib/pyvista/plotting/themes.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
name	build/lib/pyvista/plotting/themes.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
name	build/lib/pyvista/plotting/themes.py	/^    def name(self, name: str):$/;"	m	class:Theme
name	build/lib/pyvista/plotting/themes.py	/^    def name(self, name: str):$/;"	m	class:_SliderStyleConfig
name	doc/source/make_tables.py	/^    name = 'all_datasets_carousel'$/;"	v	class:AllDatasetsCarousel
name	doc/source/make_tables.py	/^    name = 'builtin_carousel'$/;"	v	class:BuiltinCarousel
name	doc/source/make_tables.py	/^    name = 'cubemap_carousel'$/;"	v	class:CubemapCarousel
name	doc/source/make_tables.py	/^    name = 'downloads_carousel'$/;"	v	class:DownloadsCarousel
name	doc/source/make_tables.py	/^    name = 'explicitstructuredgrid_carousel'$/;"	v	class:ExplicitStructuredGridCarousel
name	doc/source/make_tables.py	/^    name = 'imagedata_2d_carousel'$/;"	v	class:ImageData2DCarousel
name	doc/source/make_tables.py	/^    name = 'imagedata_3d_carousel'$/;"	v	class:ImageData3DCarousel
name	doc/source/make_tables.py	/^    name = 'imagedata_carousel'$/;"	v	class:ImageDataCarousel
name	doc/source/make_tables.py	/^    name = 'medical_carousel'$/;"	v	class:MedicalCarousel
name	doc/source/make_tables.py	/^    name = 'misc_carousel'$/;"	v	class:MiscCarousel
name	doc/source/make_tables.py	/^    name = 'multiblock_carousel'$/;"	v	class:MultiBlockCarousel
name	doc/source/make_tables.py	/^    name = 'multiblock_hetero_carousel'$/;"	v	class:MultiBlockHeteroCarousel
name	doc/source/make_tables.py	/^    name = 'multiblock_homo_carousel'$/;"	v	class:MultiBlockHomoCarousel
name	doc/source/make_tables.py	/^    name = 'multiblock_single_carousel'$/;"	v	class:MultiBlockSingleCarousel
name	doc/source/make_tables.py	/^    name = 'planets_carousel'$/;"	v	class:PlanetsCarousel
name	doc/source/make_tables.py	/^    name = 'pointcloud_carousel'$/;"	v	class:PointCloudCarousel
name	doc/source/make_tables.py	/^    name = 'pointset_carousel'$/;"	v	class:PointSetCarousel
name	doc/source/make_tables.py	/^    name = 'polydata_carousel'$/;"	v	class:PolyDataCarousel
name	doc/source/make_tables.py	/^    name = 'rectilineargrid_carousel'$/;"	v	class:RectilinearGridCarousel
name	doc/source/make_tables.py	/^    name = 'structuredgrid_carousel'$/;"	v	class:StructuredGridCarousel
name	doc/source/make_tables.py	/^    name = 'surfacemesh_carousel'$/;"	v	class:SurfaceMeshCarousel
name	doc/source/make_tables.py	/^    name = 'texture_carousel'$/;"	v	class:TextureCarousel
name	doc/source/make_tables.py	/^    name = 'unstructuredgrid_carousel'$/;"	v	class:UnstructuredGridCarousel
name	examples/01-filter/gradients.py	/^    name = keys[i, j]$/;"	v
name	examples/01-filter/resample.py	/^name = 'Spatial Point Data'$/;"	v
name	examples/01-filter/slicing.py	/^    name = f'Bearing: {np.rad2deg(theta):.2f}'$/;"	v
name	pyvista/core/utilities/misc.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_NameMixin
name	pyvista/core/utilities/misc.py	/^    def name(self, value: str) -> None:$/;"	m	class:_NameMixin
name	pyvista/ext/coverage.py	/^    name = 'coverage'$/;"	v	class:CoverageBuilder
name	pyvista/plotting/colors.py	/^    def name(self) -> str | None:  # numpydoc ignore=RT01$/;"	m	class:Color
name	pyvista/plotting/themes.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
name	pyvista/plotting/themes.py	/^    def name(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
name	pyvista/plotting/themes.py	/^    def name(self, name: str):$/;"	m	class:Theme
name	pyvista/plotting/themes.py	/^    def name(self, name: str):$/;"	m	class:_SliderStyleConfig
names	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def names($/;"	m	class:CubeFacesSource
names	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def names(self: CubeFacesSource) -> tuple[str, str, str, str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
names	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def names(self: OrthogonalPlanesSource) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
names	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def names(self: OrthogonalPlanesSource, names: Sequence[str]) -> None:$/;"	m	class:OrthogonalPlanesSource
names	build/lib/pyvista/core/utilities/reader.py	/^    def names(self):$/;"	m	class:ExodusIIBlockSet
names	pyvista/core/utilities/geometric_sources.py	/^    def names($/;"	m	class:CubeFacesSource
names	pyvista/core/utilities/geometric_sources.py	/^    def names(self: CubeFacesSource) -> tuple[str, str, str, str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
names	pyvista/core/utilities/geometric_sources.py	/^    def names(self: OrthogonalPlanesSource) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
names	pyvista/core/utilities/geometric_sources.py	/^    def names(self: OrthogonalPlanesSource, names: Sequence[str]) -> None:$/;"	m	class:OrthogonalPlanesSource
names	pyvista/core/utilities/reader.py	/^    def names(self):$/;"	m	class:ExodusIIBlockSet
names_to_colors	examples/99-advanced/anatomical_groups.py	/^names_to_colors = dataset.user_dict['names_to_colors']$/;"	v
names_to_ids	examples/99-advanced/anatomical_groups.py	/^names_to_ids = dataset.user_dict['names_to_ids']$/;"	v
namespace	tests/namespace/test_plotting_namespace.py	/^    namespace = [n.split(', ')[0] for n in namespace if not n.startswith('#')]$/;"	v
namespace	tests/namespace/test_plotting_namespace.py	/^    namespace = f.read().splitlines()$/;"	v
namespace	tests/namespace/test_public_namespace.py	/^    namespace = [n.split(', ')[0] for n in namespace if not n.startswith('#')]$/;"	v
namespace	tests/namespace/test_public_namespace.py	/^    namespace = f.read().splitlines()$/;"	v
namespace	tests/namespace/test_utilities_namespace.py	/^    namespace = [n.split(', ')[0] for n in namespace if not n.startswith('#')]$/;"	v
namespace	tests/namespace/test_utilities_namespace.py	/^    namespace = f.read().splitlines()$/;"	v
namespace_data	tests/namespace/test_plotting_namespace.py	/^namespace_data = Path(__file__).parent \/ 'namespace-plotting.txt'$/;"	v
namespace_data	tests/namespace/test_public_namespace.py	/^namespace_data = Path(__file__).parent \/ 'namespace-top.txt'$/;"	v
namespace_data	tests/namespace/test_utilities_namespace.py	/^namespace_data = Path(__file__).parent \/ 'namespace-utilities.txt'$/;"	v
nan_color	build/lib/pyvista/plotting/lookup_table.py	/^    def nan_color(self) -> Color | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
nan_color	build/lib/pyvista/plotting/lookup_table.py	/^    def nan_color(self, value):$/;"	m	class:LookupTable
nan_color	build/lib/pyvista/plotting/themes.py	/^    def nan_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
nan_color	build/lib/pyvista/plotting/themes.py	/^    def nan_color(self, nan_color: ColorLike):$/;"	m	class:Theme
nan_color	pyvista/plotting/lookup_table.py	/^    def nan_color(self) -> Color | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
nan_color	pyvista/plotting/lookup_table.py	/^    def nan_color(self, value):$/;"	m	class:LookupTable
nan_color	pyvista/plotting/themes.py	/^    def nan_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
nan_color	pyvista/plotting/themes.py	/^    def nan_color(self, nan_color: ColorLike):$/;"	m	class:Theme
nan_opacity	build/lib/pyvista/plotting/lookup_table.py	/^    def nan_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
nan_opacity	build/lib/pyvista/plotting/lookup_table.py	/^    def nan_opacity(self, value):$/;"	m	class:LookupTable
nan_opacity	pyvista/plotting/lookup_table.py	/^    def nan_opacity(self):  # numpydoc ignore=RT01$/;"	m	class:LookupTable
nan_opacity	pyvista/plotting/lookup_table.py	/^    def nan_opacity(self, value):$/;"	m	class:LookupTable
ncells_from_cells	build/lib/pyvista/core/utilities/__init__.py	/^from .cells import ncells_from_cells as ncells_from_cells$/;"	i
ncells_from_cells	build/lib/pyvista/core/utilities/cells.py	/^def ncells_from_cells(cells: NumpyArray[int]) -> int:$/;"	f
ncells_from_cells	pyvista/core/utilities/__init__.py	/^from .cells import ncells_from_cells as ncells_from_cells$/;"	i
ncells_from_cells	pyvista/core/utilities/cells.py	/^def ncells_from_cells(cells: NumpyArray[int]) -> int:$/;"	f
nedges	tests/core/test_cells.py	/^nedges = [$/;"	v
nefertiti	examples/02-plot/edges.py	/^nefertiti = examples.download_nefertiti()$/;"	v
nefertiti	examples/02-plot/edl.py	/^nefertiti = examples.download_nefertiti()$/;"	v
neighbors	build/lib/pyvista/core/pointset.py	/^    def neighbors(self, ind: int | VectorLike[int], rel: str = 'connectivity') -> list[int]:$/;"	m	class:ExplicitStructuredGrid
neighbors	pyvista/core/pointset.py	/^    def neighbors(self, ind: int | VectorLike[int], rel: str = 'connectivity') -> list[int]:$/;"	m	class:ExplicitStructuredGrid
neptune	examples/99-advanced/planets.py	/^neptune = examples.planets.load_neptune(radius=24764.0)$/;"	v
neptune_texture	examples/99-advanced/planets.py	/^neptune_texture = examples.planets.download_neptune_surface(texture=True)$/;"	v
nest_asyncio	build/lib/pyvista/trame/jupyter.py	/^        import nest_asyncio$/;"	i
nest_asyncio	pyvista/trame/jupyter.py	/^        import nest_asyncio$/;"	i
nested1	tests/core/test_composite.py	/^    nested1 = pv.MultiBlock([nested2])$/;"	v
nested2	tests/core/test_composite.py	/^    nested2 = pv.MultiBlock()$/;"	v
nested_block_types	build/lib/pyvista/core/composite.py	/^    def nested_block_types(self) -> set[type[DataSet | None]]:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
nested_block_types	pyvista/core/composite.py	/^    def nested_block_types(self) -> set[type[DataSet | None]]:  # numpydoc ignore=RT01$/;"	m	class:MultiBlock
nested_fixture	tests/core/test_composite.py	/^def nested_fixture():$/;"	f
new_arrays	examples/01-filter/integrate_data.py	/^new_arrays = [name for name in integrated_data.array_names if name not in inlet_surface.array_names]$/;"	v
new_mesh	examples/00-load/reader.py	/^new_mesh = pyvista.read(temp_file.name)$/;"	v
new_spheres	examples/02-plot/movie_glyphs.py	/^    new_spheres = grid.glyph(scale='size', geom=sphere, orient=False)$/;"	v
new_text	doc/source/make_external_gallery.py	/^        new_text = new_fid.read()$/;"	v
newcolors	examples/02-plot/cmap.py	/^newcolors = np.empty((256, 4))$/;"	v
next_color	build/lib/pyvista/plotting/renderer.py	/^    def next_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
next_color	pyvista/plotting/renderer.py	/^    def next_color(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
nfaces	tests/core/test_cells.py	/^nfaces = [$/;"	v
nframe	examples/02-plot/gif.py	/^nframe = 15$/;"	v
nframe	examples/02-plot/linked.py	/^nframe = 15$/;"	v
nframe	examples/02-plot/movie_glyphs.py	/^nframe = 30$/;"	v
nframe	examples/02-plot/texture.py	/^nframe = 15$/;"	v
nikolov1	doc/source/make_external_gallery.py	/^    nikolov1=Example($/;"	v
nikolov2	doc/source/make_external_gallery.py	/^    nikolov2=Example($/;"	v
nikolov3	doc/source/make_external_gallery.py	/^    nikolov3=Example($/;"	v
nitpick_ignore_regex	doc/source/conf.py	/^nitpick_ignore_regex = [$/;"	v
nitpicky	doc/source/conf.py	/^nitpicky = True$/;"	v
nlev	examples/02-plot/spherical.py	/^nlev = 10$/;"	v
no	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
no	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
no	build/lib/pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
no	build/lib/pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
no	build/lib/pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
no	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
no	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
no	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
no	build/lib/pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
no	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
no	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
no	pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
no	pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
no	pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
no	pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
no	pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
no	pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
no	pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
no_new_attr	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	build/lib/pyvista/core/utilities/image_sources.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	build/lib/pyvista/core/utilities/misc.py	/^def no_new_attr(cls):  # noqa: ANN001, ANN201 # numpydoc ignore=RT01$/;"	f
no_new_attr	build/lib/pyvista/plotting/_property.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	build/lib/pyvista/plotting/actor.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	build/lib/pyvista/plotting/lookup_table.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	build/lib/pyvista/plotting/text.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	build/lib/pyvista/plotting/volume_property.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/core/utilities/image_sources.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/core/utilities/misc.py	/^def no_new_attr(cls):  # noqa: ANN001, ANN201 # numpydoc ignore=RT01$/;"	f
no_new_attr	pyvista/plotting/_property.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/plotting/actor.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/plotting/lookup_table.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/plotting/mapper.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/plotting/text.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	pyvista/plotting/volume_property.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr	tests/core/test_utilities.py	/^from pyvista.core.utilities.misc import no_new_attr$/;"	i
no_new_attr_subclass	tests/core/test_utilities.py	/^def no_new_attr_subclass():$/;"	f
node_sets	build/lib/pyvista/core/utilities/reader.py	/^    def node_sets(self):$/;"	m	class:ExodusIIReader
node_sets	pyvista/core/utilities/reader.py	/^    def node_sets(self):$/;"	m	class:ExodusIIReader
nodes	build/lib/pyvista/ext/viewer_directive.py	/^from docutils import nodes$/;"	i
nodes	examples/00-load/create_truss.py	/^nodes = [$/;"	v
nodes	pyvista/ext/viewer_directive.py	/^from docutils import nodes$/;"	i
noise	examples/01-filter/connectivity.py	/^noise = pine_roots.connectivity('specified', noise_region_ids)$/;"	v
noise	examples/01-filter/image_fft_perlin_noise.py	/^noise = pv.perlin_noise(1, freq, (0, 0, 0))$/;"	v
noise	examples/01-filter/sampling_functions_2d.py	/^noise = pv.perlin_noise(1, freq, (0, 0, 0))$/;"	v
noise	examples/01-filter/sampling_functions_3d.py	/^noise = pv.perlin_noise(1, freq, (0, 0, 0))$/;"	v
noise_2d	tests/conftest.py	/^def noise_2d():$/;"	f
noise_region_ids	examples/01-filter/connectivity.py	/^noise_region_ids = region_ids[1::]  # All region ids except '0'$/;"	v
non_manifold_edges	examples/02-plot/shading.py	/^    non_manifold_edges=False,$/;"	v
noqa	build/lib/pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
noqa	build/lib/pyvista/plotting/themes.py	/^import pyvista  # noqa: TC001$/;"	i
noqa	doc/source/conf.py	/^from pyvista.core.utilities.docs import linkcode_resolve  # noqa: F401$/;"	i
noqa	doc/source/conf.py	/^import sphinx_book_theme  # noqa: F401$/;"	i
noqa	pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
noqa	pyvista/plotting/themes.py	/^import pyvista  # noqa: TC001$/;"	i
noqa	tests/namespace/test_errors_namespace.py	/^        import pyvista.errors as errors  # noqa: PLR0402$/;"	i
noqa	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import BasePlotter  # noqa: F401$/;"	i
noqa	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import Plotter  # noqa: F401$/;"	i
noqa	tests/namespace/test_plotting_namespace.py	/^        from pyvista.plotting.plotting import _ALL_PLOTTERS  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import NORMALS  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import abstract_class  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import assert_empty_kwargs  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import conditional_decorator  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import convert_string_array  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import generate_plane  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_array  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_array_association  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import get_vtk_type  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import threaded  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import try_callback  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import xvfb  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import add_ids_algorithm  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import algorithm_to_mesh_handler  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import crinkle_algorithm  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import outline_algorithm  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import pointset_to_polydata_algorithm  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import set_algorithm_input  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.errors import GPUInfo  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import Arrow  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import Cylinder  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.geometric_objects import PlatonicSolid  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.helpers import vtk_id_list_to_array  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.sphinx_gallery import _get_sg_image_scraper  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.xvfb import start_xvfb  # noqa: F401$/;"	i
noqa	tests/namespace/test_utilities_namespace.py	/^        import pyvista.utilities as utilities  # noqa: PLR0402$/;"	i
noqa	tests/plotting/test_conftest.py	/^from tests.test_conftest import results_parser  # noqa: F401$/;"	i
noqa	tests/plotting/test_plotting.py	/^from tests.core.test_imagedata_filters import labeled_image  # noqa: F401$/;"	i
norm	examples/02-plot/texture.py	/^norm = lambda x: (x - np.nanmin(x)) \/ (np.nanmax(x) - np.nanmin(x))$/;"	v
normal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def normal(self: PlaneSource) -> tuple[float, float, float]:  # numpydoc ignore: RT01$/;"	m	class:PlaneSource
normal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def normal(self: PolygonSource) -> tuple[float, float, float]:$/;"	m	class:PolygonSource
normal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def normal(self: PolygonSource, normal: VectorLike[float]) -> None:$/;"	m	class:PolygonSource
normal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def normal(self: Text3DSource) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
normal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def normal(self: Text3DSource, normal: VectorLike[float]) -> None:$/;"	m	class:Text3DSource
normal	examples/01-filter/clipping.py	/^normal = (1, 1, 1)$/;"	v
normal	examples/01-filter/slicing.py	/^    normal = np.array([np.cos(theta), np.sin(theta), 0.0]).dot(np.pi \/ 2.0)$/;"	v
normal	examples/01-filter/slicing.py	/^normal = vec \/ np.linalg.norm(vec)$/;"	v
normal	examples/02-plot/plot_over_circular_arc.py	/^normal = [0, 1, 0]$/;"	v
normal	examples/03-widgets/clip_volume.py	/^    normal='-x',$/;"	v
normal	examples/03-widgets/clip_volume.py	/^    normal='-y',$/;"	v
normal	examples/98-common/project_points_tessellate.py	/^normal = [0, 0, 1]$/;"	v
normal	pyvista/core/utilities/geometric_sources.py	/^    def normal(self: PlaneSource) -> tuple[float, float, float]:  # numpydoc ignore: RT01$/;"	m	class:PlaneSource
normal	pyvista/core/utilities/geometric_sources.py	/^    def normal(self: PolygonSource) -> tuple[float, float, float]:$/;"	m	class:PolygonSource
normal	pyvista/core/utilities/geometric_sources.py	/^    def normal(self: PolygonSource, normal: VectorLike[float]) -> None:$/;"	m	class:PolygonSource
normal	pyvista/core/utilities/geometric_sources.py	/^    def normal(self: Text3DSource) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
normal	pyvista/core/utilities/geometric_sources.py	/^    def normal(self: Text3DSource, normal: VectorLike[float]) -> None:$/;"	m	class:Text3DSource
normal_rotation	examples/03-widgets/clip_volume.py	/^    normal_rotation=False,$/;"	v
normal_sign	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def normal_sign($/;"	m	class:OrthogonalPlanesSource
normal_sign	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def normal_sign(self: OrthogonalPlanesSource) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
normal_sign	pyvista/core/utilities/geometric_sources.py	/^    def normal_sign($/;"	m	class:OrthogonalPlanesSource
normal_sign	pyvista/core/utilities/geometric_sources.py	/^    def normal_sign(self: OrthogonalPlanesSource) -> tuple[str, str, str]:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
normalize	build/lib/pyvista/plotting/__init__.py	/^from .tools import normalize as normalize$/;"	i
normalize	build/lib/pyvista/plotting/mapper.py	/^from .tools import normalize$/;"	i
normalize	build/lib/pyvista/plotting/tools.py	/^def normalize(x, minimum=None, maximum=None):$/;"	f
normalize	build/lib/pyvista/plotting/widgets.py	/^        def normalize(point, viewport):$/;"	f	function:WidgetHelper.add_slider_widget
normalize	pyvista/plotting/__init__.py	/^from .tools import normalize as normalize$/;"	i
normalize	pyvista/plotting/mapper.py	/^from .tools import normalize$/;"	i
normalize	pyvista/plotting/tools.py	/^def normalize(x, minimum=None, maximum=None):$/;"	f
normalize	pyvista/plotting/widgets.py	/^        def normalize(point, viewport):$/;"	f	function:WidgetHelper.add_slider_widget
normals	tests/core/test_dataobject_filters.py	/^from tests.core.test_dataset_filters import normals$/;"	i
normals	tests/core/test_dataset_filters.py	/^normals = ['x', 'y', '-z', (1, 1, 1), (3.3, 5.4, 0.8)]$/;"	v
not_called	tests/plotting/tinypages/plot_polygon.py	/^def not_called():$/;"	f
notebook	build/lib/pyvista/_plot.py	/^        notebook=notebook,$/;"	v
notebook	build/lib/pyvista/plotting/themes.py	/^    def notebook(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:Theme
notebook	build/lib/pyvista/plotting/themes.py	/^    def notebook(self, value: bool | None):$/;"	m	class:Theme
notebook	pyvista/_plot.py	/^        notebook=notebook,$/;"	v
notebook	pyvista/plotting/themes.py	/^    def notebook(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:Theme
notebook	pyvista/plotting/themes.py	/^    def notebook(self, value: bool | None):$/;"	m	class:Theme
notfound_context	doc/source/conf.py	/^notfound_context = {$/;"	v
notfound_urls_prefix	doc/source/conf.py	/^notfound_urls_prefix = None$/;"	v
np	build/lib/pyvista/_plot.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/_typing_core/_array_like.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/_validation/_cast_array.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/_validation/check.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/_validation/validate.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/cell.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/composite.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/dataobject.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/dataset.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/datasetattributes.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/filters/composite.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/filters/data_object.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/filters/data_set.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/filters/image_data.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/filters/poly_data.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/filters/rectilinear_grid.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/filters/structured_grid.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/grid.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/objects.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/pointset.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/pyvista_ndarray.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/arrays.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/cell_quality.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/cells.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/features.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/fileio.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/geometric_objects.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/geometric_sources.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/helpers.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/misc.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/parametric_objects.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/points.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/reader.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/transform.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/core/utilities/transformations.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/demos/demos.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/demos/logo.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/examples/cells.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/examples/downloads.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/examples/examples.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/examples/planets.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/_plotting.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/actor.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/affine_widget.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/axes_assembly.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/background_renderer.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/camera.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/charts.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/colors.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/composite_mapper.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/cube_axes_actor.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/helpers.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/lights.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/lookup_table.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/mapper.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/picking.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/plotter.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/prop3d.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/prop_collection.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/render_window_interactor.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/renderer.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/renderers.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/scalar_bars.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/texture.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/tools.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/utilities/algorithms.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/utilities/regression.py	/^import numpy as np$/;"	i
np	build/lib/pyvista/plotting/widgets.py	/^import numpy as np$/;"	i
np	doc/source/make_tables.py	/^import numpy as np$/;"	i
np	examples/00-load/create_explicit_structured_grid.py	/^import numpy as np$/;"	i
np	examples/00-load/create_kochanek_spline.py	/^import numpy as np$/;"	i
np	examples/00-load/create_platonic_solids.py	/^import numpy as np$/;"	i
np	examples/00-load/create_point_cloud.py	/^import numpy as np$/;"	i
np	examples/00-load/create_poly.py	/^import numpy as np$/;"	i
np	examples/00-load/create_polydata_strips.py	/^import numpy as np$/;"	i
np	examples/00-load/create_sphere.py	/^import numpy as np$/;"	i
np	examples/00-load/create_spline.py	/^import numpy as np$/;"	i
np	examples/00-load/create_structured_surface.py	/^import numpy as np$/;"	i
np	examples/00-load/create_surface_draped.py	/^import numpy as np$/;"	i
np	examples/00-load/create_tri_surface.py	/^import numpy as np$/;"	i
np	examples/00-load/create_truss.py	/^import numpy as np$/;"	i
np	examples/00-load/create_uniform_grid.py	/^import numpy as np$/;"	i
np	examples/00-load/create_unstructured_surface.py	/^import numpy as np$/;"	i
np	examples/00-load/linear_cells.py	/^import numpy as np$/;"	i
np	examples/00-load/reader.py	/^import numpy as np$/;"	i
np	examples/00-load/terrain_mesh.py	/^import numpy as np$/;"	i
np	examples/00-load/wrap_trimesh.py	/^import numpy as np$/;"	i
np	examples/01-filter/clipping_with_surface.py	/^import numpy as np$/;"	i
np	examples/01-filter/collisions.py	/^import numpy as np$/;"	i
np	examples/01-filter/compute_normals.py	/^import numpy as np$/;"	i
np	examples/01-filter/compute_volume.py	/^import numpy as np$/;"	i
np	examples/01-filter/connectivity.py	/^import numpy as np$/;"	i
np	examples/01-filter/contouring.py	/^import numpy as np$/;"	i
np	examples/01-filter/decimate.py	/^import numpy as np$/;"	i
np	examples/01-filter/distance_between_surfaces.py	/^import numpy as np$/;"	i
np	examples/01-filter/extract_surface.py	/^import numpy as np$/;"	i
np	examples/01-filter/extrude_rotate.py	/^import numpy as np$/;"	i
np	examples/01-filter/flying_edges.py	/^import numpy as np$/;"	i
np	examples/01-filter/glyphs.py	/^import numpy as np$/;"	i
np	examples/01-filter/glyphs_table.py	/^import numpy as np$/;"	i
np	examples/01-filter/gradients.py	/^import numpy as np$/;"	i
np	examples/01-filter/image_fft.py	/^import numpy as np$/;"	i
np	examples/01-filter/image_fft_perlin_noise.py	/^import numpy as np$/;"	i
np	examples/01-filter/image_representations.py	/^import numpy as np$/;"	i
np	examples/01-filter/interpolate_sample.py	/^import numpy as np$/;"	i
np	examples/01-filter/slicing.py	/^import numpy as np$/;"	i
np	examples/01-filter/streamlines.py	/^import numpy as np$/;"	i
np	examples/01-filter/voxelize.py	/^import numpy as np$/;"	i
np	examples/02-plot/backface_props.py	/^import numpy as np$/;"	i
np	examples/02-plot/chart_basics.py	/^import numpy as np$/;"	i
np	examples/02-plot/chart_overlays.py	/^import numpy as np$/;"	i
np	examples/02-plot/cmap.py	/^import numpy as np$/;"	i
np	examples/02-plot/composite_picking.py	/^import numpy as np$/;"	i
np	examples/02-plot/depth_of_field.py	/^import numpy as np$/;"	i
np	examples/02-plot/distance_along_spline.py	/^import numpy as np$/;"	i
np	examples/02-plot/ghost_cells.py	/^import numpy as np$/;"	i
np	examples/02-plot/gif.py	/^import numpy as np$/;"	i
np	examples/02-plot/isovalue.py	/^import numpy as np$/;"	i
np	examples/02-plot/labels.py	/^import numpy as np$/;"	i
np	examples/02-plot/linked.py	/^import numpy as np$/;"	i
np	examples/02-plot/movie.py	/^import numpy as np$/;"	i
np	examples/02-plot/movie_glyphs.py	/^import numpy as np$/;"	i
np	examples/02-plot/moving_cmap.py	/^import numpy as np$/;"	i
np	examples/02-plot/multi_window.py	/^import numpy as np$/;"	i
np	examples/02-plot/point_cell_scalars.py	/^import numpy as np$/;"	i
np	examples/02-plot/point_clouds.py	/^import numpy as np$/;"	i
np	examples/02-plot/points_gaussian_scale.py	/^import numpy as np$/;"	i
np	examples/02-plot/spherical.py	/^import numpy as np$/;"	i
np	examples/02-plot/texture.py	/^import numpy as np$/;"	i
np	examples/02-plot/volume.py	/^import numpy as np$/;"	i
np	examples/03-widgets/clip_volume.py	/^import numpy as np$/;"	i
np	examples/03-widgets/line_widget.py	/^import numpy as np$/;"	i
np	examples/03-widgets/sphere_widget.py	/^import numpy as np$/;"	i
np	examples/03-widgets/spline_widget.py	/^import numpy as np$/;"	i
np	examples/04-lights/actors.py	/^import numpy as np$/;"	i
np	examples/04-lights/shadows.py	/^import numpy as np$/;"	i
np	examples/98-common/project_points_tessellate.py	/^import numpy as np$/;"	i
np	examples/99-advanced/antarctica_compare.py	/^import numpy as np$/;"	i
np	examples/99-advanced/atomic_orbitals.py	/^import numpy as np$/;"	i
np	examples/99-advanced/extending_pyvista.py	/^import numpy as np$/;"	i
np	examples/99-advanced/fea_hertzian_contact_pressure.py	/^import numpy as np$/;"	i
np	examples/99-advanced/magnetic_fields.py	/^import numpy as np$/;"	i
np	examples/99-advanced/openfoam_cooling.py	/^import numpy as np$/;"	i
np	examples/99-advanced/openfoam_tubes.py	/^import numpy as np$/;"	i
np	examples/99-advanced/pump_bracket.py	/^import numpy as np$/;"	i
np	examples/99-advanced/ray_trace_moeller.py	/^import numpy as np$/;"	i
np	examples/99-advanced/sphere_eversion.py	/^import numpy as np$/;"	i
np	examples/99-advanced/warp_by_vector_eigenmodes.py	/^import numpy as np$/;"	i
np	pyvista/_plot.py	/^import numpy as np$/;"	i
np	pyvista/core/_typing_core/_array_like.py	/^import numpy as np$/;"	i
np	pyvista/core/_validation/_cast_array.py	/^import numpy as np$/;"	i
np	pyvista/core/_validation/check.py	/^import numpy as np$/;"	i
np	pyvista/core/_validation/validate.py	/^import numpy as np$/;"	i
np	pyvista/core/cell.py	/^import numpy as np$/;"	i
np	pyvista/core/composite.py	/^import numpy as np$/;"	i
np	pyvista/core/dataobject.py	/^import numpy as np$/;"	i
np	pyvista/core/dataset.py	/^import numpy as np$/;"	i
np	pyvista/core/datasetattributes.py	/^import numpy as np$/;"	i
np	pyvista/core/filters/composite.py	/^import numpy as np$/;"	i
np	pyvista/core/filters/data_object.py	/^import numpy as np$/;"	i
np	pyvista/core/filters/data_set.py	/^import numpy as np$/;"	i
np	pyvista/core/filters/image_data.py	/^import numpy as np$/;"	i
np	pyvista/core/filters/poly_data.py	/^import numpy as np$/;"	i
np	pyvista/core/filters/rectilinear_grid.py	/^import numpy as np$/;"	i
np	pyvista/core/filters/structured_grid.py	/^import numpy as np$/;"	i
np	pyvista/core/grid.py	/^import numpy as np$/;"	i
np	pyvista/core/objects.py	/^import numpy as np$/;"	i
np	pyvista/core/pointset.py	/^import numpy as np$/;"	i
np	pyvista/core/pyvista_ndarray.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/arrays.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/cell_quality.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/cells.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/features.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/fileio.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/geometric_objects.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/geometric_sources.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/helpers.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/misc.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/parametric_objects.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/points.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/reader.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/transform.py	/^import numpy as np$/;"	i
np	pyvista/core/utilities/transformations.py	/^import numpy as np$/;"	i
np	pyvista/demos/demos.py	/^import numpy as np$/;"	i
np	pyvista/demos/logo.py	/^import numpy as np$/;"	i
np	pyvista/examples/cells.py	/^import numpy as np$/;"	i
np	pyvista/examples/downloads.py	/^import numpy as np$/;"	i
np	pyvista/examples/examples.py	/^import numpy as np$/;"	i
np	pyvista/examples/planets.py	/^import numpy as np$/;"	i
np	pyvista/plotting/_plotting.py	/^import numpy as np$/;"	i
np	pyvista/plotting/actor.py	/^import numpy as np$/;"	i
np	pyvista/plotting/affine_widget.py	/^import numpy as np$/;"	i
np	pyvista/plotting/axes_assembly.py	/^import numpy as np$/;"	i
np	pyvista/plotting/background_renderer.py	/^import numpy as np$/;"	i
np	pyvista/plotting/camera.py	/^import numpy as np$/;"	i
np	pyvista/plotting/charts.py	/^import numpy as np$/;"	i
np	pyvista/plotting/colors.py	/^import numpy as np$/;"	i
np	pyvista/plotting/composite_mapper.py	/^import numpy as np$/;"	i
np	pyvista/plotting/cube_axes_actor.py	/^import numpy as np$/;"	i
np	pyvista/plotting/helpers.py	/^import numpy as np$/;"	i
np	pyvista/plotting/lights.py	/^import numpy as np$/;"	i
np	pyvista/plotting/lookup_table.py	/^import numpy as np$/;"	i
np	pyvista/plotting/mapper.py	/^import numpy as np$/;"	i
np	pyvista/plotting/picking.py	/^import numpy as np$/;"	i
np	pyvista/plotting/plotter.py	/^import numpy as np$/;"	i
np	pyvista/plotting/prop3d.py	/^import numpy as np$/;"	i
np	pyvista/plotting/prop_collection.py	/^import numpy as np$/;"	i
np	pyvista/plotting/render_window_interactor.py	/^import numpy as np$/;"	i
np	pyvista/plotting/renderer.py	/^import numpy as np$/;"	i
np	pyvista/plotting/renderers.py	/^import numpy as np$/;"	i
np	pyvista/plotting/scalar_bars.py	/^import numpy as np$/;"	i
np	pyvista/plotting/texture.py	/^import numpy as np$/;"	i
np	pyvista/plotting/tools.py	/^import numpy as np$/;"	i
np	pyvista/plotting/utilities/algorithms.py	/^import numpy as np$/;"	i
np	pyvista/plotting/utilities/regression.py	/^import numpy as np$/;"	i
np	pyvista/plotting/widgets.py	/^import numpy as np$/;"	i
np	tests/conftest.py	/^import numpy as np$/;"	i
np	tests/core/test_cells.py	/^import numpy as np$/;"	i
np	tests/core/test_composite.py	/^import numpy as np$/;"	i
np	tests/core/test_dataobject.py	/^import numpy as np$/;"	i
np	tests/core/test_dataobject_filters.py	/^import numpy as np$/;"	i
np	tests/core/test_dataset.py	/^import numpy as np$/;"	i
np	tests/core/test_dataset_filters.py	/^import numpy as np$/;"	i
np	tests/core/test_datasetattributes.py	/^import numpy as np$/;"	i
np	tests/core/test_geometric_objects.py	/^import numpy as np$/;"	i
np	tests/core/test_geometric_sources.py	/^import numpy as np$/;"	i
np	tests/core/test_grid.py	/^import numpy as np$/;"	i
np	tests/core/test_helpers.py	/^import numpy as np$/;"	i
np	tests/core/test_image_sources.py	/^import numpy as np$/;"	i
np	tests/core/test_imagedata_filters.py	/^import numpy as np$/;"	i
np	tests/core/test_imaging.py	/^import numpy as np$/;"	i
np	tests/core/test_objects.py	/^import numpy as np$/;"	i
np	tests/core/test_parametric_geometry.py	/^import numpy as np$/;"	i
np	tests/core/test_pointset.py	/^import numpy as np$/;"	i
np	tests/core/test_polydata.py	/^import numpy as np$/;"	i
np	tests/core/test_pyvista_ndarray.py	/^import numpy as np$/;"	i
np	tests/core/test_reader.py	/^import numpy as np$/;"	i
np	tests/core/test_rectilinear_grid_filters.py	/^import numpy as np$/;"	i
np	tests/core/test_unstructured_grid_filters.py	/^import numpy as np$/;"	i
np	tests/core/test_utilities.py	/^import numpy as np$/;"	i
np	tests/core/test_validation.py	/^import numpy as np$/;"	i
np	tests/examples/test_cell_examples.py	/^import numpy as np$/;"	i
np	tests/examples/test_dataset_loader.py	/^import numpy as np$/;"	i
np	tests/examples/test_download_files.py	/^import numpy as np$/;"	i
np	tests/examples/test_examples.py	/^import numpy as np$/;"	i
np	tests/plotting/jupyter/test_static.py	/^import numpy as np$/;"	i
np	tests/plotting/jupyter/test_trame.py	/^import numpy as np$/;"	i
np	tests/plotting/test_actor.py	/^import numpy as np$/;"	i
np	tests/plotting/test_axes.py	/^import numpy as np$/;"	i
np	tests/plotting/test_axes_assembly.py	/^import numpy as np$/;"	i
np	tests/plotting/test_camera.py	/^import numpy as np$/;"	i
np	tests/plotting/test_charts.py	/^import numpy as np$/;"	i
np	tests/plotting/test_collection.py	/^import numpy as np$/;"	i
np	tests/plotting/test_colors.py	/^import numpy as np$/;"	i
np	tests/plotting/test_cube_axes_actor.py	/^import numpy as np$/;"	i
np	tests/plotting/test_demos.py	/^import numpy as np$/;"	i
np	tests/plotting/test_lights.py	/^import numpy as np$/;"	i
np	tests/plotting/test_lookup_table.py	/^import numpy as np$/;"	i
np	tests/plotting/test_picking.py	/^import numpy as np$/;"	i
np	tests/plotting/test_plotter.py	/^import numpy as np$/;"	i
np	tests/plotting/test_plotting.py	/^import numpy as np$/;"	i
np	tests/plotting/test_plotting_utilities.py	/^import numpy as np$/;"	i
np	tests/plotting/test_renderer.py	/^import numpy as np$/;"	i
np	tests/plotting/test_text.py	/^import numpy as np$/;"	i
np	tests/plotting/test_texture.py	/^import numpy as np$/;"	i
np	tests/plotting/test_widgets.py	/^import numpy as np$/;"	i
np	tests/test_meshio.py	/^import numpy as np$/;"	i
np	tests/typing/test_return_type.py	/^import numpy as np$/;"	i
nphi	examples/00-load/create_sphere.py	/^nphi = 12$/;"	v
npoints	tests/core/test_cells.py	/^npoints = [$/;"	v
npt	build/lib/pyvista/core/_typing_core/_array_like.py	/^import numpy.typing as npt$/;"	i
npt	build/lib/pyvista/core/_validation/_cast_array.py	/^import numpy.typing as npt$/;"	i
npt	build/lib/pyvista/core/_validation/check.py	/^import numpy.typing as npt$/;"	i
npt	build/lib/pyvista/core/_validation/validate.py	/^    import numpy.typing as npt$/;"	i
npt	build/lib/pyvista/core/datasetattributes.py	/^import numpy.typing as npt$/;"	i
npt	build/lib/pyvista/core/pyvista_ndarray.py	/^    import numpy.typing as npt$/;"	i
npt	build/lib/pyvista/core/utilities/arrays.py	/^import numpy.typing as npt$/;"	i
npt	pyvista/core/_typing_core/_array_like.py	/^import numpy.typing as npt$/;"	i
npt	pyvista/core/_validation/_cast_array.py	/^import numpy.typing as npt$/;"	i
npt	pyvista/core/_validation/check.py	/^import numpy.typing as npt$/;"	i
npt	pyvista/core/_validation/validate.py	/^    import numpy.typing as npt$/;"	i
npt	pyvista/core/datasetattributes.py	/^import numpy.typing as npt$/;"	i
npt	pyvista/core/pyvista_ndarray.py	/^    import numpy.typing as npt$/;"	i
npt	pyvista/core/utilities/arrays.py	/^import numpy.typing as npt$/;"	i
ntheta	examples/00-load/create_sphere.py	/^ntheta = 9$/;"	v
num_files	build/lib/pyvista/examples/_dataset_loader.py	/^    def num_files(self) -> int:$/;"	m	class:_BaseFilePropsProtocol
num_files	pyvista/examples/_dataset_loader.py	/^    def num_files(self) -> int:$/;"	m	class:_BaseFilePropsProtocol
num_points	examples/98-common/project_points_tessellate.py	/^num_points = 100$/;"	v
number	build/lib/pyvista/core/utilities/reader.py	/^    def number(self):$/;"	m	class:ExodusIIBlockSet
number	pyvista/core/utilities/reader.py	/^    def number(self):$/;"	m	class:ExodusIIBlockSet
number_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_arrays(self):$/;"	m	class:ExodusIIBlockSet
number_arrays	pyvista/core/utilities/reader.py	/^    def number_arrays(self):$/;"	m	class:ExodusIIBlockSet
number_base_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_base_arrays(self) -> int:$/;"	m	class:CGNSReader
number_base_arrays	pyvista/core/utilities/reader.py	/^    def number_base_arrays(self) -> int:$/;"	m	class:CGNSReader
number_cell_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_cell_arrays(self):  # noqa: D102$/;"	m	class:Nek5000Reader
number_cell_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_cell_arrays(self):$/;"	m	class:ExodusIIReader
number_cell_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_cell_arrays(self):$/;"	m	class:PointCellDataSelection
number_cell_arrays	pyvista/core/utilities/reader.py	/^    def number_cell_arrays(self):  # noqa: D102$/;"	m	class:Nek5000Reader
number_cell_arrays	pyvista/core/utilities/reader.py	/^    def number_cell_arrays(self):$/;"	m	class:ExodusIIReader
number_cell_arrays	pyvista/core/utilities/reader.py	/^    def number_cell_arrays(self):$/;"	m	class:PointCellDataSelection
number_family_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_family_arrays(self) -> int:$/;"	m	class:CGNSReader
number_family_arrays	pyvista/core/utilities/reader.py	/^    def number_family_arrays(self) -> int:$/;"	m	class:CGNSReader
number_global_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_global_arrays(self):$/;"	m	class:ExodusIIReader
number_global_arrays	pyvista/core/utilities/reader.py	/^    def number_global_arrays(self):$/;"	m	class:ExodusIIReader
number_grids	build/lib/pyvista/core/utilities/reader.py	/^    def number_grids(self):$/;"	m	class:XdmfReader
number_grids	pyvista/core/utilities/reader.py	/^    def number_grids(self):$/;"	m	class:XdmfReader
number_of_cells	build/lib/pyvista/core/dataset.py	/^    def number_of_cells(self: Self) -> int:  # pragma: no cover$/;"	m	class:DataSet
number_of_cells	pyvista/core/dataset.py	/^    def number_of_cells(self: Self) -> int:  # pragma: no cover$/;"	m	class:DataSet
number_of_peels	build/lib/pyvista/plotting/themes.py	/^    def number_of_peels(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
number_of_peels	build/lib/pyvista/plotting/themes.py	/^    def number_of_peels(self, number_of_peels: int):$/;"	m	class:_DepthPeelingConfig
number_of_peels	pyvista/plotting/themes.py	/^    def number_of_peels(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
number_of_peels	pyvista/plotting/themes.py	/^    def number_of_peels(self, number_of_peels: int):$/;"	m	class:_DepthPeelingConfig
number_of_points	build/lib/pyvista/core/dataset.py	/^    def number_of_points(self: Self) -> int:  # pragma: no cover$/;"	m	class:DataSet
number_of_points	pyvista/core/dataset.py	/^    def number_of_points(self: Self) -> int:  # pragma: no cover$/;"	m	class:DataSet
number_patch_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_patch_arrays(self):$/;"	m	class:OpenFOAMReader
number_patch_arrays	pyvista/core/utilities/reader.py	/^    def number_patch_arrays(self):$/;"	m	class:OpenFOAMReader
number_point_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_point_arrays(self):$/;"	m	class:ExodusIIReader
number_point_arrays	build/lib/pyvista/core/utilities/reader.py	/^    def number_point_arrays(self):$/;"	m	class:PointCellDataSelection
number_point_arrays	pyvista/core/utilities/reader.py	/^    def number_point_arrays(self):$/;"	m	class:ExodusIIReader
number_point_arrays	pyvista/core/utilities/reader.py	/^    def number_point_arrays(self):$/;"	m	class:PointCellDataSelection
number_time_points	build/lib/pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:EnSightReader
number_time_points	build/lib/pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:OpenFOAMReader
number_time_points	build/lib/pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:PVDReader
number_time_points	build/lib/pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:XdmfReader
number_time_points	build/lib/pyvista/core/utilities/reader.py	/^    def number_time_points(self):$/;"	m	class:ExodusIIReader
number_time_points	build/lib/pyvista/core/utilities/reader.py	/^    def number_time_points(self):$/;"	m	class:Nek5000Reader
number_time_points	build/lib/pyvista/core/utilities/reader.py	/^    def number_time_points(self):$/;"	m	class:TimeReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:EnSightReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:OpenFOAMReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:PVDReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):  # noqa: D102$/;"	m	class:XdmfReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):$/;"	m	class:ExodusIIReader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):$/;"	m	class:Nek5000Reader
number_time_points	pyvista/core/utilities/reader.py	/^    def number_time_points(self):$/;"	m	class:TimeReader
numbers	build/lib/pyvista/core/pointset.py	/^import numbers$/;"	i
numbers	pyvista/core/pointset.py	/^import numbers$/;"	i
numeric_array_test_cases	tests/core/test_validation.py	/^def numeric_array_test_cases():$/;"	f
numfig	doc/source/conf.py	/^numfig = False$/;"	v
numpy	build/lib/pyvista/core/_typing_core/_array_like.py	/^import numpy.typing as npt$/;"	i
numpy	build/lib/pyvista/core/_validation/_cast_array.py	/^import numpy.typing as npt$/;"	i
numpy	build/lib/pyvista/core/_validation/check.py	/^import numpy.typing as npt$/;"	i
numpy	build/lib/pyvista/core/_validation/validate.py	/^    import numpy.typing as npt$/;"	i
numpy	build/lib/pyvista/core/datasetattributes.py	/^import numpy.typing as npt$/;"	i
numpy	build/lib/pyvista/core/pyvista_ndarray.py	/^    import numpy.typing as npt$/;"	i
numpy	build/lib/pyvista/core/utilities/arrays.py	/^import numpy.typing as npt$/;"	i
numpy	pyvista/core/_typing_core/_array_like.py	/^import numpy.typing as npt$/;"	i
numpy	pyvista/core/_validation/_cast_array.py	/^import numpy.typing as npt$/;"	i
numpy	pyvista/core/_validation/check.py	/^import numpy.typing as npt$/;"	i
numpy	pyvista/core/_validation/validate.py	/^    import numpy.typing as npt$/;"	i
numpy	pyvista/core/datasetattributes.py	/^import numpy.typing as npt$/;"	i
numpy	pyvista/core/pyvista_ndarray.py	/^    import numpy.typing as npt$/;"	i
numpy	pyvista/core/utilities/arrays.py	/^import numpy.typing as npt$/;"	i
numpyTovtkDataArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.numpy_interface.dataset_adapter import numpyTovtkDataArray as numpyTovtkDataArray$/;"	i
numpyTovtkDataArray	pyvista/core/_vtk_core.py	/^from vtkmodules.numpy_interface.dataset_adapter import numpyTovtkDataArray as numpyTovtkDataArray$/;"	i
numpy_support	tests/core/test_helpers.py	/^from vtk.util import numpy_support$/;"	i
numpy_to_idarr	build/lib/pyvista/core/cell.py	/^from .utilities.cells import numpy_to_idarr$/;"	i
numpy_to_idarr	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.cells import numpy_to_idarr$/;"	i
numpy_to_idarr	build/lib/pyvista/core/pointset.py	/^from .utilities.cells import numpy_to_idarr$/;"	i
numpy_to_idarr	build/lib/pyvista/core/utilities/__init__.py	/^from .cells import numpy_to_idarr as numpy_to_idarr$/;"	i
numpy_to_idarr	build/lib/pyvista/core/utilities/cells.py	/^def numpy_to_idarr($/;"	f
numpy_to_idarr	pyvista/core/cell.py	/^from .utilities.cells import numpy_to_idarr$/;"	i
numpy_to_idarr	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.cells import numpy_to_idarr$/;"	i
numpy_to_idarr	pyvista/core/pointset.py	/^from .utilities.cells import numpy_to_idarr$/;"	i
numpy_to_idarr	pyvista/core/utilities/__init__.py	/^from .cells import numpy_to_idarr as numpy_to_idarr$/;"	i
numpy_to_idarr	pyvista/core/utilities/cells.py	/^def numpy_to_idarr($/;"	f
numpy_to_idarr	tests/core/test_cells.py	/^from pyvista.core.utilities.cells import numpy_to_idarr$/;"	i
numpy_to_texture	build/lib/pyvista/plotting/__init__.py	/^from .texture import numpy_to_texture as numpy_to_texture$/;"	i
numpy_to_texture	build/lib/pyvista/plotting/plotter.py	/^from .texture import numpy_to_texture$/;"	i
numpy_to_texture	build/lib/pyvista/plotting/texture.py	/^def numpy_to_texture(image):$/;"	f
numpy_to_texture	pyvista/plotting/__init__.py	/^from .texture import numpy_to_texture as numpy_to_texture$/;"	i
numpy_to_texture	pyvista/plotting/plotter.py	/^from .texture import numpy_to_texture$/;"	i
numpy_to_texture	pyvista/plotting/texture.py	/^def numpy_to_texture(image):$/;"	f
numpy_to_texture	tests/plotting/test_plotting.py	/^from pyvista.plotting.texture import numpy_to_texture$/;"	i
numpy_to_texture	tests/plotting/test_texture.py	/^from pyvista.plotting.texture import numpy_to_texture$/;"	i
numpy_to_vtk	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import numpy_to_vtk as numpy_to_vtk$/;"	i
numpy_to_vtk	pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import numpy_to_vtk as numpy_to_vtk$/;"	i
numpy_to_vtkIdTypeArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import numpy_to_vtkIdTypeArray as numpy_to_vtkIdTypeArray$/;"	i
numpy_to_vtkIdTypeArray	pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import numpy_to_vtkIdTypeArray as numpy_to_vtkIdTypeArray$/;"	i
numpydoc_show_class_members	doc/source/conf.py	/^numpydoc_show_class_members = False$/;"	v
numpydoc_use_plots	doc/source/conf.py	/^numpydoc_use_plots = True$/;"	v
numpydoc_xref_param_type	doc/source/conf.py	/^numpydoc_xref_param_type = True$/;"	v
nutfile	build/lib/pyvista/examples/examples.py	/^nutfile = str(Path(dir_path) \/ 'nut.ply')$/;"	v
nutfile	pyvista/examples/examples.py	/^nutfile = str(Path(dir_path) \/ 'nut.ply')$/;"	v
nx	examples/01-filter/streamlines.py	/^nx = 20$/;"	v
ny	examples/01-filter/streamlines.py	/^ny = 15$/;"	v
nz	examples/01-filter/streamlines.py	/^nz = 5$/;"	v
obbTree	build/lib/pyvista/core/pointset.py	/^    def obbTree(self):  # numpydoc ignore=RT01$/;"	m	class:PolyData
obbTree	pyvista/core/pointset.py	/^    def obbTree(self):  # numpydoc ignore=RT01$/;"	m	class:PolyData
oblique_cone	tests/plotting/test_plotting.py	/^def oblique_cone():$/;"	f
observe	build/lib/pyvista/core/utilities/observers.py	/^    def observe(self, algorithm):$/;"	m	class:Observer
observe	pyvista/core/utilities/observers.py	/^    def observe(self, algorithm):$/;"	m	class:Observer
observers	tests/core/test_utilities.py	/^    from pyvista.core.utilities import observers$/;"	i
occlusion_ratio	build/lib/pyvista/plotting/themes.py	/^    def occlusion_ratio(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
occlusion_ratio	build/lib/pyvista/plotting/themes.py	/^    def occlusion_ratio(self, occlusion_ratio: float):$/;"	m	class:_DepthPeelingConfig
occlusion_ratio	pyvista/plotting/themes.py	/^    def occlusion_ratio(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_DepthPeelingConfig
occlusion_ratio	pyvista/plotting/themes.py	/^    def occlusion_ratio(self, occlusion_ratio: float):$/;"	m	class:_DepthPeelingConfig
off_screen	build/lib/pyvista/_plot.py	/^        off_screen=off_screen,$/;"	v
off_screen	pyvista/_plot.py	/^        off_screen=off_screen,$/;"	v
offset	build/lib/pyvista/core/grid.py	/^    def offset(self: Self) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
offset	build/lib/pyvista/core/grid.py	/^    def offset(self: Self, offset: int | VectorLike[int]) -> None:$/;"	m	class:ImageData
offset	build/lib/pyvista/core/pointset.py	/^    def offset(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
offset	examples/04-lights/beam_shape.py	/^offset = 1.5$/;"	v
offset	pyvista/core/grid.py	/^    def offset(self: Self) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
offset	pyvista/core/grid.py	/^    def offset(self: Self, offset: int | VectorLike[int]) -> None:$/;"	m	class:ImageData
offset	pyvista/core/pointset.py	/^    def offset(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:UnstructuredGrid
offset_array	build/lib/pyvista/core/cell.py	/^    def offset_array(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
offset_array	pyvista/core/cell.py	/^    def offset_array(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
offsets	examples/04-lights/attenuation.py	/^offsets = [-2, 0, 2]$/;"	v
ogp_image	doc/source/conf.py	/^ogp_image = 'https:\/\/docs.pyvista.org\/_static\/pyvista_banner_small.png'$/;"	v
ogp_site_url	doc/source/conf.py	/^ogp_site_url = 'https:\/\/docs.pyvista.org\/'$/;"	v
omegas	examples/99-advanced/warp_by_vector_eigenmodes.py	/^omegas = np.sqrt(np.abs(w) \/ rho) * 1e5  # convert back to Hz$/;"	v
omf	doc/source/make_external_gallery.py	/^    omf=Example($/;"	v
on	build/lib/pyvista/plotting/lights.py	/^    def on(self):  # numpydoc ignore=RT01$/;"	m	class:Light
on	build/lib/pyvista/plotting/lights.py	/^    def on(self, state):$/;"	m	class:Light
on	pyvista/plotting/lights.py	/^    def on(self):  # numpydoc ignore=RT01$/;"	m	class:Light
on	pyvista/plotting/lights.py	/^    def on(self, state):$/;"	m	class:Light
on_axis_visibility_change	build/lib/pyvista/trame/ui/base_viewer.py	/^    def on_axis_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_axis_visibility_change	pyvista/trame/ui/base_viewer.py	/^    def on_axis_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_delete	tests/core/test_dataset.py	/^    def on_delete(*_):$/;"	f	function:test_rename_array_doesnt_delete
on_edge_visibility_change	build/lib/pyvista/trame/ui/base_viewer.py	/^    def on_edge_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_edge_visibility_change	pyvista/trame/ui/base_viewer.py	/^    def on_edge_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_grid_visibility_change	build/lib/pyvista/trame/ui/base_viewer.py	/^    def on_grid_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_grid_visibility_change	pyvista/trame/ui/base_viewer.py	/^    def on_grid_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_outline_visibility_change	build/lib/pyvista/trame/ui/base_viewer.py	/^    def on_outline_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_outline_visibility_change	pyvista/trame/ui/base_viewer.py	/^    def on_outline_visibility_change(self, **kwargs):$/;"	m	class:BaseViewer
on_parallel_projection_change	build/lib/pyvista/trame/ui/base_viewer.py	/^    def on_parallel_projection_change(self, **kwargs):$/;"	m	class:BaseViewer
on_parallel_projection_change	pyvista/trame/ui/base_viewer.py	/^    def on_parallel_projection_change(self, **kwargs):$/;"	m	class:BaseViewer
on_plotter_render	build/lib/pyvista/plotting/renderer.py	/^    def on_plotter_render(self) -> None:$/;"	m	class:Renderer
on_plotter_render	build/lib/pyvista/plotting/renderers.py	/^    def on_plotter_render(self):$/;"	m	class:Renderers
on_plotter_render	pyvista/plotting/renderer.py	/^    def on_plotter_render(self) -> None:$/;"	m	class:Renderer
on_plotter_render	pyvista/plotting/renderers.py	/^    def on_plotter_render(self):$/;"	m	class:Renderers
on_ready	build/lib/pyvista/trame/jupyter.py	/^    def on_ready(**_):$/;"	f	function:launch_server
on_ready	pyvista/trame/jupyter.py	/^    def on_ready(**_):$/;"	f	function:launch_server
on_rendering_mode_change	build/lib/pyvista/trame/ui/base_viewer.py	/^    def on_rendering_mode_change(self, **kwargs):$/;"	m	class:BaseViewer
on_rendering_mode_change	pyvista/trame/ui/base_viewer.py	/^    def on_rendering_mode_change(self, **kwargs):$/;"	m	class:BaseViewer
on_timer	tests/plotting/test_render_window_interactor.py	/^    def on_timer(obj, event):$/;"	f	function:test_timer
one_dimensionality_image	tests/core/test_imagedata_filters.py	/^def one_dimensionality_image():$/;"	f
one_million_points	tests/core/test_utilities.py	/^def one_million_points():$/;"	f
one_of	tests/core/test_dataobject_filters.py	/^from hypothesis.strategies import one_of$/;"	i
one_of	tests/core/test_dataset_filters.py	/^from hypothesis.strategies import one_of$/;"	i
one_streamline	examples/01-filter/streamlines_2D.py	/^one_streamline = fluid_mesh.streamlines($/;"	v
op	build/lib/pyvista/core/utilities/docs.py	/^import os.path as op$/;"	i
op	pyvista/core/utilities/docs.py	/^import os.path as op$/;"	i
opac	examples/99-advanced/openfoam_cooling.py	/^opac = np.zeros(20)$/;"	v
opacity	build/lib/pyvista/plotting/_property.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
opacity	build/lib/pyvista/plotting/_property.py	/^    def opacity(self, value: float):$/;"	m	class:Property
opacity	build/lib/pyvista/plotting/actor_properties.py	/^    def opacity(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
opacity	build/lib/pyvista/plotting/actor_properties.py	/^    def opacity(self, value: float):$/;"	m	class:ActorProperties
opacity	build/lib/pyvista/plotting/axes_assembly.py	/^    def opacity(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
opacity	build/lib/pyvista/plotting/axes_assembly.py	/^    def opacity(self, opacity: float):$/;"	m	class:PlanesAssembly
opacity	build/lib/pyvista/plotting/colors.py	/^    def opacity(self):  # numpydoc ignore=RT01$/;"	m	class:Color
opacity	build/lib/pyvista/plotting/composite_mapper.py	/^    def opacity(self) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
opacity	build/lib/pyvista/plotting/composite_mapper.py	/^    def opacity(self, new_opacity: float | None):$/;"	m	class:BlockAttributes
opacity	build/lib/pyvista/plotting/text.py	/^    def opacity(self) -> float:$/;"	m	class:TextProperty
opacity	build/lib/pyvista/plotting/text.py	/^    def opacity(self, opacity: float):$/;"	m	class:TextProperty
opacity	build/lib/pyvista/plotting/themes.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
opacity	build/lib/pyvista/plotting/themes.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
opacity	build/lib/pyvista/plotting/themes.py	/^    def opacity(self, opacity: float):$/;"	m	class:Theme
opacity	build/lib/pyvista/plotting/themes.py	/^    def opacity(self, opacity: float):$/;"	m	class:_SilhouetteConfig
opacity	examples/00-load/wrap_trimesh.py	/^    opacity=points[:, 0],$/;"	v
opacity	examples/01-filter/clipping_with_surface.py	/^    opacity=0.75,$/;"	v
opacity	examples/02-plot/isovalue.py	/^    opacity=0.5,$/;"	v
opacity	examples/02-plot/opacity.py	/^    opacity='Temperature_var',$/;"	v
opacity	examples/02-plot/opacity.py	/^opacity = [0, 0.2, 0.9, 0.6, 0.3]$/;"	v
opacity	examples/02-plot/point_clouds.py	/^    opacity=0.25,$/;"	v
opacity	examples/02-plot/point_clouds.py	/^    opacity=0.99,$/;"	v
opacity	examples/02-plot/volume.py	/^    opacity='linear',$/;"	v
opacity	examples/02-plot/volume.py	/^    opacity='sigmoid_15',$/;"	v
opacity	examples/02-plot/volume.py	/^    opacity=opacity,$/;"	v
opacity	examples/02-plot/volume.py	/^opacity = [0, 0, 0, 0.1, 0.3, 0.6, 1]$/;"	v
opacity	examples/02-plot/volume.py	/^opacity = [0, 0.75, 0, 0.75, 1.0]$/;"	v
opacity	examples/03-widgets/clip_volume.py	/^opacity = np.zeros(100)$/;"	v
opacity	examples/99-advanced/magnetic_fields.py	/^    opacity=opacity,$/;"	v
opacity	examples/99-advanced/magnetic_fields.py	/^opacity = 1 - np.geomspace(1.0, 0.05, 10)$/;"	v
opacity	examples/99-advanced/openfoam_cooling.py	/^    opacity=opac,$/;"	v
opacity	examples/99-advanced/openfoam_tubes.py	/^    opacity='linear',$/;"	v
opacity	pyvista/plotting/_property.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
opacity	pyvista/plotting/_property.py	/^    def opacity(self, value: float):$/;"	m	class:Property
opacity	pyvista/plotting/actor_properties.py	/^    def opacity(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
opacity	pyvista/plotting/actor_properties.py	/^    def opacity(self, value: float):$/;"	m	class:ActorProperties
opacity	pyvista/plotting/axes_assembly.py	/^    def opacity(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
opacity	pyvista/plotting/axes_assembly.py	/^    def opacity(self, opacity: float):$/;"	m	class:PlanesAssembly
opacity	pyvista/plotting/colors.py	/^    def opacity(self):  # numpydoc ignore=RT01$/;"	m	class:Color
opacity	pyvista/plotting/composite_mapper.py	/^    def opacity(self) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
opacity	pyvista/plotting/composite_mapper.py	/^    def opacity(self, new_opacity: float | None):$/;"	m	class:BlockAttributes
opacity	pyvista/plotting/text.py	/^    def opacity(self) -> float:$/;"	m	class:TextProperty
opacity	pyvista/plotting/text.py	/^    def opacity(self, opacity: float):$/;"	m	class:TextProperty
opacity	pyvista/plotting/themes.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
opacity	pyvista/plotting/themes.py	/^    def opacity(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SilhouetteConfig
opacity	pyvista/plotting/themes.py	/^    def opacity(self, opacity: float):$/;"	m	class:Theme
opacity	pyvista/plotting/themes.py	/^    def opacity(self, opacity: float):$/;"	m	class:_SilhouetteConfig
opacity_transfer_function	build/lib/pyvista/plotting/__init__.py	/^from .tools import opacity_transfer_function as opacity_transfer_function$/;"	i
opacity_transfer_function	build/lib/pyvista/plotting/_plotting.py	/^from .tools import opacity_transfer_function$/;"	i
opacity_transfer_function	build/lib/pyvista/plotting/lookup_table.py	/^from .tools import opacity_transfer_function$/;"	i
opacity_transfer_function	build/lib/pyvista/plotting/tools.py	/^def opacity_transfer_function(mapping, n_colors, interpolate: bool = True, kind='quadratic'):$/;"	f
opacity_transfer_function	pyvista/plotting/__init__.py	/^from .tools import opacity_transfer_function as opacity_transfer_function$/;"	i
opacity_transfer_function	pyvista/plotting/_plotting.py	/^from .tools import opacity_transfer_function$/;"	i
opacity_transfer_function	pyvista/plotting/lookup_table.py	/^from .tools import opacity_transfer_function$/;"	i
opacity_transfer_function	pyvista/plotting/tools.py	/^def opacity_transfer_function(mapping, n_colors, interpolate: bool = True, kind='quadratic'):$/;"	f
opacity_unit_distance	build/lib/pyvista/plotting/volume_property.py	/^    def opacity_unit_distance(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
opacity_unit_distance	build/lib/pyvista/plotting/volume_property.py	/^    def opacity_unit_distance(self, value: float):$/;"	m	class:VolumeProperty
opacity_unit_distance	examples/02-plot/volume.py	/^    opacity_unit_distance=6000,$/;"	v
opacity_unit_distance	examples/02-plot/volume.py	/^    opacity_unit_distance=np.mean(ct_image.spacing),$/;"	v
opacity_unit_distance	pyvista/plotting/volume_property.py	/^    def opacity_unit_distance(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
opacity_unit_distance	pyvista/plotting/volume_property.py	/^    def opacity_unit_distance(self, value: float):$/;"	m	class:VolumeProperty
open_foam	doc/source/make_external_gallery.py	/^    open_foam=Example($/;"	v
open_gif	build/lib/pyvista/plotting/plotter.py	/^    def open_gif($/;"	m	class:BasePlotter
open_gif	pyvista/plotting/plotter.py	/^    def open_gif($/;"	m	class:BasePlotter
open_movie	build/lib/pyvista/plotting/plotter.py	/^    def open_movie(self, filename, framerate=24, quality=5, **kwargs) -> None:$/;"	m	class:BasePlotter
open_movie	pyvista/plotting/plotter.py	/^    def open_movie(self, filename, framerate=24, quality=5, **kwargs) -> None:$/;"	m	class:BasePlotter
operator	build/lib/pyvista/core/filters/image_data.py	/^import operator$/;"	i
operator	pyvista/core/filters/image_data.py	/^import operator$/;"	i
operator	tests/core/test_imagedata_filters.py	/^import operator$/;"	i
optimization	doc/source/make_external_gallery.py	/^    optimization=Example($/;"	v
optional_arguments	build/lib/pyvista/ext/plot_directive.py	/^    optional_arguments = 2$/;"	v	class:PlotDirective
optional_arguments	build/lib/pyvista/ext/viewer_directive.py	/^    optional_arguments = 0$/;"	v	class:OfflineViewerDirective
optional_arguments	pyvista/ext/plot_directive.py	/^    optional_arguments = 2$/;"	v	class:PlotDirective
optional_arguments	pyvista/ext/viewer_directive.py	/^    optional_arguments = 0$/;"	v	class:OfflineViewerDirective
opts	examples/99-advanced/sphere_eversion.py	/^opts = dict($/;"	v
orbit	build/lib/pyvista/plotting/plotter.py	/^        def orbit() -> None:$/;"	f	function:BasePlotter.orbit_on_path
orbit	examples/02-plot/backface_props.py	/^orbit = plotter.generate_orbital_path(n_points=24, shift=0.0, viewup=viewup)$/;"	v
orbit	pyvista/plotting/plotter.py	/^        def orbit() -> None:$/;"	f	function:BasePlotter.orbit_on_path
orbit_on_path	build/lib/pyvista/plotting/plotter.py	/^    def orbit_on_path($/;"	m	class:BasePlotter
orbit_on_path	pyvista/plotting/plotter.py	/^    def orbit_on_path($/;"	m	class:BasePlotter
orient	examples/00-load/create_point_cloud.py	/^    orient='vectors',$/;"	v
orient	examples/99-advanced/atomic_orbitals.py	/^    orient=False,$/;"	v
orientation	build/lib/pyvista/plotting/charts.py	/^    def orientation(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
orientation	build/lib/pyvista/plotting/charts.py	/^    def orientation(self, val):$/;"	m	class:BarPlot
orientation	build/lib/pyvista/plotting/prop3d.py	/^    def orientation(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
orientation	build/lib/pyvista/plotting/prop3d.py	/^    def orientation(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
orientation	build/lib/pyvista/plotting/prop3d.py	/^    def orientation(self, orientation: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
orientation	build/lib/pyvista/plotting/prop3d.py	/^    def orientation(self, value: VectorLike[float]) -> None:$/;"	m	class:Prop3D
orientation	build/lib/pyvista/plotting/text.py	/^    def orientation(self) -> float:$/;"	m	class:TextProperty
orientation	build/lib/pyvista/plotting/text.py	/^    def orientation(self, orientation: float):$/;"	m	class:TextProperty
orientation	pyvista/plotting/charts.py	/^    def orientation(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
orientation	pyvista/plotting/charts.py	/^    def orientation(self, val):$/;"	m	class:BarPlot
orientation	pyvista/plotting/prop3d.py	/^    def orientation(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
orientation	pyvista/plotting/prop3d.py	/^    def orientation(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
orientation	pyvista/plotting/prop3d.py	/^    def orientation(self, orientation: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
orientation	pyvista/plotting/prop3d.py	/^    def orientation(self, value: VectorLike[float]) -> None:$/;"	m	class:Prop3D
orientation	pyvista/plotting/text.py	/^    def orientation(self) -> float:$/;"	m	class:TextProperty
orientation	pyvista/plotting/text.py	/^    def orientation(self, orientation: float):$/;"	m	class:TextProperty
orientation	tests/plotting/test_plotting.py	/^    orientation=dict(orientation=ORIENTATION),$/;"	v
orientation_cube	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import orientation_cube as orientation_cube$/;"	i
orientation_cube	build/lib/pyvista/demos/demos.py	/^def orientation_cube():$/;"	f
orientation_cube	pyvista/demos/__init__.py	/^from pyvista.demos.demos import orientation_cube as orientation_cube$/;"	i
orientation_cube	pyvista/demos/demos.py	/^def orientation_cube():$/;"	f
orientation_plotter	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import orientation_plotter as orientation_plotter$/;"	i
orientation_plotter	build/lib/pyvista/demos/demos.py	/^def orientation_plotter():$/;"	f
orientation_plotter	pyvista/demos/__init__.py	/^from pyvista.demos.demos import orientation_plotter as orientation_plotter$/;"	i
orientation_plotter	pyvista/demos/demos.py	/^def orientation_plotter():$/;"	f
oriented_bounding_box	build/lib/pyvista/core/filters/data_set.py	/^    def oriented_bounding_box(  # type: ignore[misc]$/;"	m	class:DataSetFilters
oriented_bounding_box	pyvista/core/filters/data_set.py	/^    def oriented_bounding_box(  # type: ignore[misc]$/;"	m	class:DataSetFilters
oriented_image	tests/core/test_dataset_filters.py	/^def oriented_image():$/;"	f
oriented_polydata	tests/core/test_dataset_filters.py	/^def oriented_polydata(oriented_image):$/;"	f
orig_edges	examples/01-filter/surface_smoothing.py	/^orig_edges = surf.extract_feature_edges()$/;"	v
origin	build/lib/pyvista/core/grid.py	/^    def origin(self: Self) -> tuple[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
origin	build/lib/pyvista/core/grid.py	/^    def origin(self: Self, origin: VectorLike[float]) -> None:$/;"	m	class:ImageData
origin	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def origin(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
origin	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def origin(self: PlaneSource, origin: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
origin	build/lib/pyvista/core/utilities/image_sources.py	/^    def origin(self) -> Sequence[float]:$/;"	m	class:ImageGridSource
origin	build/lib/pyvista/core/utilities/image_sources.py	/^    def origin(self, origin: Sequence[float]) -> None:$/;"	m	class:ImageGridSource
origin	build/lib/pyvista/plotting/affine_widget.py	/^    def origin(self) -> tuple[float, float, float]:$/;"	m	class:AffineWidget3D
origin	build/lib/pyvista/plotting/affine_widget.py	/^    def origin(self, value):$/;"	m	class:AffineWidget3D
origin	build/lib/pyvista/plotting/axes.py	/^    def origin(self):  # numpydoc ignore=RT01$/;"	m	class:Axes
origin	build/lib/pyvista/plotting/axes.py	/^    def origin(self, value):$/;"	m	class:Axes
origin	build/lib/pyvista/plotting/prop3d.py	/^    def origin(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
origin	build/lib/pyvista/plotting/prop3d.py	/^    def origin(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
origin	build/lib/pyvista/plotting/prop3d.py	/^    def origin(self, origin: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
origin	build/lib/pyvista/plotting/prop3d.py	/^    def origin(self, value: VectorLike[float]) -> None:$/;"	m	class:Prop3D
origin	examples/01-filter/flying_edges.py	/^    origin=(x_min, y_min, z_min),$/;"	v
origin	examples/01-filter/project_plane.py	/^origin = list(poly.center)$/;"	v
origin	examples/01-filter/streamlines.py	/^origin = (-(nx - 1) * 0.1 \/ 2, -(ny - 1) * 0.1 \/ 2, -(nz - 1) * 0.1 \/ 2)$/;"	v
origin	examples/98-common/project_points_tessellate.py	/^origin = [0, 0, 0]$/;"	v
origin	examples/99-advanced/openfoam_cooling.py	/^origin = (bounds[0], bounds[2], bounds[4])$/;"	v
origin	examples/99-advanced/openfoam_tubes.py	/^origin = (bounds[0], bounds[2], bounds[4])$/;"	v
origin	pyvista/core/grid.py	/^    def origin(self: Self) -> tuple[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
origin	pyvista/core/grid.py	/^    def origin(self: Self, origin: VectorLike[float]) -> None:$/;"	m	class:ImageData
origin	pyvista/core/utilities/geometric_sources.py	/^    def origin(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
origin	pyvista/core/utilities/geometric_sources.py	/^    def origin(self: PlaneSource, origin: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
origin	pyvista/core/utilities/image_sources.py	/^    def origin(self) -> Sequence[float]:$/;"	m	class:ImageGridSource
origin	pyvista/core/utilities/image_sources.py	/^    def origin(self, origin: Sequence[float]) -> None:$/;"	m	class:ImageGridSource
origin	pyvista/plotting/affine_widget.py	/^    def origin(self) -> tuple[float, float, float]:$/;"	m	class:AffineWidget3D
origin	pyvista/plotting/affine_widget.py	/^    def origin(self, value):$/;"	m	class:AffineWidget3D
origin	pyvista/plotting/axes.py	/^    def origin(self):  # numpydoc ignore=RT01$/;"	m	class:Axes
origin	pyvista/plotting/axes.py	/^    def origin(self, value):$/;"	m	class:Axes
origin	pyvista/plotting/prop3d.py	/^    def origin(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
origin	pyvista/plotting/prop3d.py	/^    def origin(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
origin	pyvista/plotting/prop3d.py	/^    def origin(self, origin: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
origin	pyvista/plotting/prop3d.py	/^    def origin(self, value: VectorLike[float]) -> None:$/;"	m	class:Prop3D
origin	tests/plotting/test_plotting.py	/^    origin=dict(origin=ORIGIN, orientation=ORIENTATION),$/;"	v
orvisu	doc/source/make_external_gallery.py	/^    orvisu=Example($/;"	v
os	build/lib/pyvista/__init__.py	/^import os$/;"	i
os	build/lib/pyvista/core/_typing_core/_aliases.py	/^import os$/;"	i
os	build/lib/pyvista/core/utilities/docs.py	/^import os$/;"	i
os	build/lib/pyvista/core/utilities/docs.py	/^import os.path as op$/;"	i
os	build/lib/pyvista/core/utilities/features.py	/^import os$/;"	i
os	build/lib/pyvista/core/utilities/reader.py	/^import os$/;"	i
os	build/lib/pyvista/demos/logo.py	/^import os$/;"	i
os	build/lib/pyvista/examples/_dataset_loader.py	/^import os$/;"	i
os	build/lib/pyvista/examples/downloads.py	/^import os$/;"	i
os	build/lib/pyvista/examples/examples.py	/^import os$/;"	i
os	build/lib/pyvista/ext/plot_directive.py	/^import os$/;"	i
os	build/lib/pyvista/ext/viewer_directive.py	/^import os$/;"	i
os	build/lib/pyvista/plotting/plotter.py	/^import os$/;"	i
os	build/lib/pyvista/plotting/themes.py	/^import os$/;"	i
os	build/lib/pyvista/plotting/tools.py	/^import os$/;"	i
os	build/lib/pyvista/plotting/utilities/xvfb.py	/^import os$/;"	i
os	build/lib/pyvista/trame/jupyter.py	/^import os$/;"	i
os	doc/source/conf.py	/^import os$/;"	i
os	doc/source/make_tables.py	/^import os$/;"	i
os	examples/00-load/read_parallel.py	/^import os$/;"	i
os	examples_trame/tests/test_trame.py	/^import os$/;"	i
os	pyvista/__init__.py	/^import os$/;"	i
os	pyvista/core/_typing_core/_aliases.py	/^import os$/;"	i
os	pyvista/core/utilities/docs.py	/^import os$/;"	i
os	pyvista/core/utilities/docs.py	/^import os.path as op$/;"	i
os	pyvista/core/utilities/features.py	/^import os$/;"	i
os	pyvista/core/utilities/reader.py	/^import os$/;"	i
os	pyvista/demos/logo.py	/^import os$/;"	i
os	pyvista/examples/_dataset_loader.py	/^import os$/;"	i
os	pyvista/examples/downloads.py	/^import os$/;"	i
os	pyvista/examples/examples.py	/^import os$/;"	i
os	pyvista/ext/plot_directive.py	/^import os$/;"	i
os	pyvista/ext/viewer_directive.py	/^import os$/;"	i
os	pyvista/plotting/plotter.py	/^import os$/;"	i
os	pyvista/plotting/themes.py	/^import os$/;"	i
os	pyvista/plotting/tools.py	/^import os$/;"	i
os	pyvista/plotting/utilities/xvfb.py	/^import os$/;"	i
os	pyvista/trame/jupyter.py	/^import os$/;"	i
os	tests/conftest.py	/^import os$/;"	i
os	tests/core/test_imaging.py	/^import os$/;"	i
os	tests/core/test_utilities.py	/^import os$/;"	i
os	tests/doc/tst_doc_images.py	/^import os$/;"	i
os	tests/examples/test_dataset_loader.py	/^import os$/;"	i
os	tests/examples/test_download_files.py	/^import os$/;"	i
os	tests/examples/test_downloads.py	/^import os$/;"	i
os	tests/plotting/test_plotter.py	/^import os$/;"	i
os	tests/plotting/test_plotting.py	/^import os$/;"	i
os	tests/plotting/test_theme.py	/^import os$/;"	i
os	tests/plotting/test_tinypages.py	/^import os$/;"	i
os	tests/plotting/test_utilities.py	/^import os$/;"	i
os	tests/plotting/tinypages/conf.py	/^import os$/;"	i
os	tests/test_conftest.py	/^import os$/;"	i
os	tests/test_init.py	/^import os$/;"	i
os	tests/typing/mypy_plugin/test_plugin.py	/^import os$/;"	i
other_organs	examples/99-advanced/anatomical_groups.py	/^other_organs = [$/;"	v
out	examples/01-filter/sampling_functions_3d.py	/^out = grid.threshold(0.02)$/;"	v
outer	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def outer(self: DiscSource) -> float:$/;"	m	class:DiscSource
outer	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def outer(self: DiscSource, outer: float) -> None:$/;"	m	class:DiscSource
outer	examples/01-filter/clipping_with_surface.py	/^outer = dataset.threshold(0.0, scalars='implicit_distance', invert=False)$/;"	v
outer	examples/99-advanced/planets.py	/^outer = 60268.0 + 80000.0$/;"	v
outer	pyvista/core/utilities/geometric_sources.py	/^    def outer(self: DiscSource) -> float:$/;"	m	class:DiscSource
outer	pyvista/core/utilities/geometric_sources.py	/^    def outer(self: DiscSource, outer: float) -> None:$/;"	m	class:DiscSource
outline	build/lib/pyvista/core/filters/composite.py	/^    def outline(  # type: ignore[misc]$/;"	m	class:CompositeFilters
outline	build/lib/pyvista/core/filters/data_set.py	/^    def outline(  # type: ignore[misc]$/;"	m	class:DataSetFilters
outline	examples/01-filter/using_filters.py	/^outline = dataset.outline()$/;"	v
outline	pyvista/core/filters/composite.py	/^    def outline(  # type: ignore[misc]$/;"	m	class:CompositeFilters
outline	pyvista/core/filters/data_set.py	/^    def outline(  # type: ignore[misc]$/;"	m	class:DataSetFilters
outline_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import outline_algorithm as outline_algorithm$/;"	i
outline_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def outline_algorithm(inp, generate_faces: bool = False):$/;"	f
outline_algorithm	build/lib/pyvista/plotting/widgets.py	/^from .utilities.algorithms import outline_algorithm$/;"	i
outline_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import outline_algorithm as outline_algorithm$/;"	i
outline_algorithm	pyvista/plotting/utilities/algorithms.py	/^def outline_algorithm(inp, generate_faces: bool = False):$/;"	f
outline_algorithm	pyvista/plotting/widgets.py	/^from .utilities.algorithms import outline_algorithm$/;"	i
outline_algorithm	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import outline_algorithm  # noqa: F401$/;"	i
outline_color	build/lib/pyvista/plotting/themes.py	/^    def outline_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
outline_color	build/lib/pyvista/plotting/themes.py	/^    def outline_color(self, outline_color: ColorLike):$/;"	m	class:Theme
outline_color	pyvista/plotting/themes.py	/^    def outline_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Theme
outline_color	pyvista/plotting/themes.py	/^    def outline_color(self, outline_color: ColorLike):$/;"	m	class:Theme
outline_corners	build/lib/pyvista/core/filters/composite.py	/^    def outline_corners(  # type: ignore[misc]$/;"	m	class:CompositeFilters
outline_corners	build/lib/pyvista/core/filters/data_set.py	/^    def outline_corners(  # type: ignore[misc]$/;"	m	class:DataSetFilters
outline_corners	pyvista/core/filters/composite.py	/^    def outline_corners(  # type: ignore[misc]$/;"	m	class:CompositeFilters
outline_corners	pyvista/core/filters/data_set.py	/^    def outline_corners(  # type: ignore[misc]$/;"	m	class:DataSetFilters
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def output(self: CapsuleSource) -> PolyData:$/;"	m	class:.CapsuleSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: ArrowSource) -> PolyData:$/;"	m	class:ArrowSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: AxesGeometrySource) -> pyvista.MultiBlock:$/;"	m	class:AxesGeometrySource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: BoxSource) -> PolyData:$/;"	m	class:BoxSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: ConeSource) -> PolyData:$/;"	m	class:ConeSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: CubeFacesSource) -> pyvista.MultiBlock:  # type: ignore[override]$/;"	m	class:CubeFacesSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: CubeSource) -> PolyData:$/;"	m	class:CubeSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: CylinderSource) -> PolyData:$/;"	m	class:CylinderSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: DiscSource) -> PolyData:$/;"	m	class:DiscSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: LineSource) -> PolyData:$/;"	m	class:LineSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: MultipleLinesSource) -> PolyData:$/;"	m	class:MultipleLinesSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: OrthogonalPlanesSource) -> pyvista.MultiBlock:$/;"	m	class:OrthogonalPlanesSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: PlaneSource) -> PolyData:$/;"	m	class:PlaneSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: PlatonicSolidSource) -> PolyData:$/;"	m	class:PlatonicSolidSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: PolygonSource) -> PolyData:$/;"	m	class:PolygonSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: SphereSource) -> PolyData:$/;"	m	class:SphereSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: SuperquadricSource) -> PolyData:$/;"	m	class:SuperquadricSource
output	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def output(self: Text3DSource) -> PolyData:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
output	build/lib/pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageEllipsoidSource
output	build/lib/pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageGaussianSource
output	build/lib/pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageGridSource
output	build/lib/pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageMandelbrotSource
output	build/lib/pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageNoiseSource
output	build/lib/pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageSinusoidSource
output	examples/01-filter/interpolate_sample.py	/^output = grid.interpolate(point_mesh, radius=0.1, null_value=-1)$/;"	v
output	examples/01-filter/interpolate_sample.py	/^output = grid.interpolate(point_mesh, radius=0.25, null_value=-1)$/;"	v
output	examples/01-filter/interpolate_sample.py	/^output = grid.interpolate(sphere, radius=0.1)$/;"	v
output	examples/01-filter/interpolate_sample.py	/^output = grid.sample(point_mesh)$/;"	v
output	examples/01-filter/interpolate_sample.py	/^output = grid.sample(sphere)$/;"	v
output	examples/01-filter/interpolate_sample.py	/^output = point_mesh.sample(grid)$/;"	v
output	examples/01-filter/interpolate_sample.py	/^output = rotated_subset.sample(grid)$/;"	v
output	pyvista/core/utilities/geometric_sources.py	/^        def output(self: CapsuleSource) -> PolyData:$/;"	m	class:.CapsuleSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: ArrowSource) -> PolyData:$/;"	m	class:ArrowSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: AxesGeometrySource) -> pyvista.MultiBlock:$/;"	m	class:AxesGeometrySource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: BoxSource) -> PolyData:$/;"	m	class:BoxSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: ConeSource) -> PolyData:$/;"	m	class:ConeSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: CubeFacesSource) -> pyvista.MultiBlock:  # type: ignore[override]$/;"	m	class:CubeFacesSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: CubeSource) -> PolyData:$/;"	m	class:CubeSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: CylinderSource) -> PolyData:$/;"	m	class:CylinderSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: DiscSource) -> PolyData:$/;"	m	class:DiscSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: LineSource) -> PolyData:$/;"	m	class:LineSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: MultipleLinesSource) -> PolyData:$/;"	m	class:MultipleLinesSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: OrthogonalPlanesSource) -> pyvista.MultiBlock:$/;"	m	class:OrthogonalPlanesSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: PlaneSource) -> PolyData:$/;"	m	class:PlaneSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: PlatonicSolidSource) -> PolyData:$/;"	m	class:PlatonicSolidSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: PolygonSource) -> PolyData:$/;"	m	class:PolygonSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: SphereSource) -> PolyData:$/;"	m	class:SphereSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: SuperquadricSource) -> PolyData:$/;"	m	class:SuperquadricSource
output	pyvista/core/utilities/geometric_sources.py	/^    def output(self: Text3DSource) -> PolyData:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
output	pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageEllipsoidSource
output	pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageGaussianSource
output	pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageGridSource
output	pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageMandelbrotSource
output	pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageNoiseSource
output	pyvista/core/utilities/image_sources.py	/^    def output(self):$/;"	m	class:ImageSinusoidSource
outside	examples/01-filter/extract_cells_inside_surface.py	/^outside = select.threshold(0.5, invert=True)$/;"	v
overload	build/lib/pyvista/core/composite.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/dataset.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/filters/data_object.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/partitioned.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/utilities/arrays.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/utilities/cells.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/utilities/fileio.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/utilities/helpers.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/utilities/points.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/utilities/transform.py	/^from typing import overload$/;"	i
overload	build/lib/pyvista/core/utilities/transformations.py	/^from typing import overload$/;"	i
overload	pyvista/core/composite.py	/^from typing import overload$/;"	i
overload	pyvista/core/dataset.py	/^from typing import overload$/;"	i
overload	pyvista/core/filters/data_object.py	/^from typing import overload$/;"	i
overload	pyvista/core/partitioned.py	/^from typing import overload$/;"	i
overload	pyvista/core/utilities/arrays.py	/^from typing import overload$/;"	i
overload	pyvista/core/utilities/cells.py	/^from typing import overload$/;"	i
overload	pyvista/core/utilities/fileio.py	/^from typing import overload$/;"	i
overload	pyvista/core/utilities/helpers.py	/^from typing import overload$/;"	i
overload	pyvista/core/utilities/points.py	/^from typing import overload$/;"	i
overload	pyvista/core/utilities/transform.py	/^from typing import overload$/;"	i
overload	pyvista/core/utilities/transformations.py	/^from typing import overload$/;"	i
overloads_location	doc/source/conf.py	/^overloads_location = ['bottom']$/;"	v
p	examples/00-load/create_geometric_objects.py	/^p = pv.Plotter(shape=(3, 3))$/;"	v
p	examples/00-load/create_kochanek_spline.py	/^p = pv.Plotter(shape=(3, 5))$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [-22.0, -22.0], 'red')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [-22.0, 0.0], 'blue')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [-22.0, 22.0], 'green')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [0.0, -22.0], 'red')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [0.0, 0.0], 'blue')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [0.0, 22.0], 'green')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [22.0, -22.0], 'red')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [22.0, 0.0], 'blue')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = draw_pixels(p, alien, [22.0, 22.0], 'green')$/;"	v
p	examples/00-load/create_pixel_art.py	/^p = pv.Plotter()$/;"	v
p	examples/00-load/create_platonic_solids.py	/^p = pv.Plotter(window_size=[1000, 1000])$/;"	v
p	examples/00-load/create_surface_draped.py	/^p = pv.Plotter()$/;"	v
p	examples/00-load/create_tri_surface.py	/^p = pv.Plotter()$/;"	v
p	examples/00-load/wrap_trimesh.py	/^p = [1.0, 2.0, 3.0]$/;"	v
p	examples/01-filter/clipping.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/clipping.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/clipping_with_surface.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/connectivity.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/distance_between_surfaces.py	/^    p = h0n.points[i]$/;"	v
p	examples/01-filter/distance_between_surfaces.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/extract_cells_inside_surface.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/extract_edges.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/gaussian_smoothing.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/gaussian_smoothing.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/01-filter/geodesic.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/glyphs.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/gradients.py	/^p = pv.Plotter(shape=keys.shape)$/;"	v
p	examples/01-filter/interpolate.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/interpolate.py	/^p = pv.Plotter(shape=(1, 2), window_size=[1024 * 3, 768 * 2])$/;"	v
p	examples/01-filter/poly_ray_trace.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/project_plane.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/reflect.py	/^p = pyvista.Plotter()$/;"	v
p	examples/01-filter/resample.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/resample.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/rotate.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/slicing.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/streamlines.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/streamlines_2D.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/using_filters.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/using_filters.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/01-filter/voxelize.py	/^p = pv.Plotter()$/;"	v
p	examples/01-filter/warp_by_vector.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/01-filter/warp_by_vector.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/02-plot/chart_basics.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/chart_overlays.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/cmap.py	/^p = pv.Plotter(shape=(2, 2), border=False)$/;"	v
p	examples/02-plot/depth_peeling.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/02-plot/edl.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/edl.py	/^p = pv.Plotter(shape=(1, 2), border=False)$/;"	v
p	examples/02-plot/image_depth.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/interpolate_before_map.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/02-plot/labels.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/lighting_mesh.py	/^p = pv.Plotter(shape=(1, 2), window_size=[1500, 500])$/;"	v
p	examples/02-plot/linked.py	/^p = pv.Plotter(shape=(1, 2), border=False)$/;"	v
p	examples/02-plot/opacity.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/opacity.py	/^p = pv.Plotter(shape=(1, 2))$/;"	v
p	examples/02-plot/opacity.py	/^p = pv.Plotter(shape=(2, 2), border=False)$/;"	v
p	examples/02-plot/orbit.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/ortho_slices.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/ortho_slices.py	/^p = pv.Plotter(shape=(2, 2))$/;"	v
p	examples/02-plot/pbr.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/plot_over_circular_arc.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/plot_over_line.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/point_picking.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/scalar_bars.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/scalar_bars.py	/^p = pv.Plotter(notebook=False)  # If in IPython, be sure to show the scene$/;"	v
p	examples/02-plot/spherical.py	/^p = pv.Plotter()$/;"	v
p	examples/02-plot/topo_map.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/box_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/checkbox_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/line_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/multi_slider_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/plane_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/slider_bar_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/sphere_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/03-widgets/spline_widget.py	/^p = pv.Plotter()$/;"	v
p	examples/99-advanced/antarctica_compare.py	/^p = pv.Plotter()$/;"	v
p	examples/99-advanced/plotting_algorithms.py	/^p = pv.Plotter()$/;"	v
p	examples/99-advanced/plotting_algorithms.py	/^p = pv.Plotter(notebook=0)$/;"	v
p	examples/99-advanced/sphere_eversion.py	/^    p = 1 - abs(q * t)$/;"	v
p0	examples/01-filter/distance_between_surfaces.py	/^    p0 = p - vec$/;"	v
p1	examples/01-filter/distance_between_surfaces.py	/^    p1 = p + vec$/;"	v
p_mesh	build/lib/pyvista/demos/logo.py	/^    p_mesh = mesh_letters['P'].compute_normals(split_vertices=True)$/;"	v
p_mesh	pyvista/demos/logo.py	/^    p_mesh = mesh_letters['P'].compute_normals(split_vertices=True)$/;"	v
pack_labels	build/lib/pyvista/core/filters/data_set.py	/^    def pack_labels(  # type: ignore[misc]$/;"	m	class:DataSetFilters
pack_labels	pyvista/core/filters/data_set.py	/^    def pack_labels(  # type: ignore[misc]$/;"	m	class:DataSetFilters
pactor	tests/plotting/test_theme.py	/^        pactor = pl.add_mesh(points)$/;"	v	class:test_user_theme.MyTheme
pad_image	build/lib/pyvista/core/filters/image_data.py	/^    def pad_image($/;"	m	class:ImageDataFilters
pad_image	pyvista/core/filters/image_data.py	/^    def pad_image($/;"	m	class:ImageDataFilters
padding	examples/00-load/create_truss.py	/^padding = np.empty(edges.shape[0], int) * 2$/;"	v
paint	build/lib/pyvista/plotting/charts.py	/^    def paint(self, painter) -> bool:$/;"	m	class:_ChartBackground
paint	build/lib/pyvista/plotting/charts.py	/^    def paint(self, painter) -> bool:$/;"	m	class:_CustomContextItem
paint	pyvista/plotting/charts.py	/^    def paint(self, painter) -> bool:$/;"	m	class:_ChartBackground
paint	pyvista/plotting/charts.py	/^    def paint(self, painter) -> bool:$/;"	m	class:_CustomContextItem
pan_on_shift_callback	build/lib/pyvista/plotting/render_window_interactor.py	/^            def pan_on_shift_callback(_obj, event):  # pragma: no cover$/;"	f	function:RenderWindowInteractor.enable_terrain_style
pan_on_shift_callback	pyvista/plotting/render_window_interactor.py	/^            def pan_on_shift_callback(_obj, event):  # pragma: no cover$/;"	f	function:RenderWindowInteractor.enable_terrain_style
panels_add_bootstrap_css	doc/source/conf.py	/^panels_add_bootstrap_css = False$/;"	v
parallel_projection	build/lib/pyvista/plotting/camera.py	/^    def parallel_projection(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
parallel_projection	build/lib/pyvista/plotting/camera.py	/^    def parallel_projection(self, state):$/;"	m	class:Camera
parallel_projection	build/lib/pyvista/plotting/plotter.py	/^    def parallel_projection(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
parallel_projection	build/lib/pyvista/plotting/plotter.py	/^    def parallel_projection(self, state: bool) -> None:$/;"	m	class:BasePlotter
parallel_projection	build/lib/pyvista/plotting/renderer.py	/^    def parallel_projection(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
parallel_projection	build/lib/pyvista/plotting/renderer.py	/^    def parallel_projection(self, state) -> None:$/;"	m	class:Renderer
parallel_projection	build/lib/pyvista/plotting/themes.py	/^    def parallel_projection(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
parallel_projection	build/lib/pyvista/plotting/themes.py	/^    def parallel_projection(self, value: bool) -> None:$/;"	m	class:_CameraConfig
parallel_projection	pyvista/plotting/camera.py	/^    def parallel_projection(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
parallel_projection	pyvista/plotting/camera.py	/^    def parallel_projection(self, state):$/;"	m	class:Camera
parallel_projection	pyvista/plotting/plotter.py	/^    def parallel_projection(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
parallel_projection	pyvista/plotting/plotter.py	/^    def parallel_projection(self, state: bool) -> None:$/;"	m	class:BasePlotter
parallel_projection	pyvista/plotting/renderer.py	/^    def parallel_projection(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
parallel_projection	pyvista/plotting/renderer.py	/^    def parallel_projection(self, state) -> None:$/;"	m	class:Renderer
parallel_projection	pyvista/plotting/themes.py	/^    def parallel_projection(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
parallel_projection	pyvista/plotting/themes.py	/^    def parallel_projection(self, value: bool) -> None:$/;"	m	class:_CameraConfig
parallel_scale	build/lib/pyvista/plotting/camera.py	/^    def parallel_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
parallel_scale	build/lib/pyvista/plotting/camera.py	/^    def parallel_scale(self, scale):$/;"	m	class:Camera
parallel_scale	build/lib/pyvista/plotting/plotter.py	/^    def parallel_scale(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
parallel_scale	build/lib/pyvista/plotting/plotter.py	/^    def parallel_scale(self, value: float) -> None:$/;"	m	class:BasePlotter
parallel_scale	build/lib/pyvista/plotting/renderer.py	/^    def parallel_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
parallel_scale	build/lib/pyvista/plotting/renderer.py	/^    def parallel_scale(self, value) -> None:$/;"	m	class:Renderer
parallel_scale	build/lib/pyvista/plotting/themes.py	/^    def parallel_scale(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
parallel_scale	build/lib/pyvista/plotting/themes.py	/^    def parallel_scale(self, value: bool) -> None:$/;"	m	class:_CameraConfig
parallel_scale	pyvista/plotting/camera.py	/^    def parallel_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
parallel_scale	pyvista/plotting/camera.py	/^    def parallel_scale(self, scale):$/;"	m	class:Camera
parallel_scale	pyvista/plotting/plotter.py	/^    def parallel_scale(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
parallel_scale	pyvista/plotting/plotter.py	/^    def parallel_scale(self, value: float) -> None:$/;"	m	class:BasePlotter
parallel_scale	pyvista/plotting/renderer.py	/^    def parallel_scale(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
parallel_scale	pyvista/plotting/renderer.py	/^    def parallel_scale(self, value) -> None:$/;"	m	class:Renderer
parallel_scale	pyvista/plotting/themes.py	/^    def parallel_scale(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
parallel_scale	pyvista/plotting/themes.py	/^    def parallel_scale(self, value: bool) -> None:$/;"	m	class:_CameraConfig
parameter	doc/source/conf.py	/^    r'\\.plot_directive$',  # Issue with class parameter documentation$/;"	c
parametric_keywords	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import parametric_keywords as parametric_keywords$/;"	i
parametric_keywords	build/lib/pyvista/core/utilities/parametric_objects.py	/^def parametric_keywords($/;"	f
parametric_keywords	pyvista/core/utilities/__init__.py	/^from .parametric_objects import parametric_keywords as parametric_keywords$/;"	i
parametric_keywords	pyvista/core/utilities/parametric_objects.py	/^def parametric_keywords($/;"	f
parametrize	tests/core/test_utilities.py	/^from pytest_cases import parametrize$/;"	i
parametrize	tests/examples/test_cell_examples.py	/^from pytest_cases import parametrize$/;"	i
parametrize	tests/test_conftest.py	/^from pytest_cases import parametrize$/;"	i
parametrize_with_cases	tests/core/test_utilities.py	/^from pytest_cases import parametrize_with_cases$/;"	i
params	examples/01-filter/glyphs_table.py	/^params = np.array($/;"	v
paraview	build/lib/pyvista/plotting/themes.py	/^    paraview = ParaViewTheme$/;"	v	class:_NATIVE_THEMES
paraview	pyvista/plotting/themes.py	/^    paraview = ParaViewTheme$/;"	v	class:_NATIVE_THEMES
paraview_pvcc	tests/plotting/test_camera.py	/^def paraview_pvcc():$/;"	f
parse	tests/test_conftest.py	/^    def parse(self, results: pytest.RunResult):$/;"	m	class:PytesterStdoutParser
parse_field_choice	build/lib/pyvista/core/composite.py	/^from .utilities.arrays import parse_field_choice$/;"	i
parse_field_choice	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import parse_field_choice as parse_field_choice$/;"	i
parse_field_choice	build/lib/pyvista/core/utilities/arrays.py	/^def parse_field_choice($/;"	f
parse_field_choice	build/lib/pyvista/core/utilities/arrays.py	/^def parse_field_choice(field: FieldAssociation) -> FieldAssociation: ...$/;"	f
parse_field_choice	build/lib/pyvista/core/utilities/arrays.py	/^def parse_field_choice(field: RowLiteral | Literal['r']) -> Literal[FieldAssociation.ROW]: ...$/;"	f
parse_field_choice	pyvista/core/composite.py	/^from .utilities.arrays import parse_field_choice$/;"	i
parse_field_choice	pyvista/core/utilities/__init__.py	/^from .arrays import parse_field_choice as parse_field_choice$/;"	i
parse_field_choice	pyvista/core/utilities/arrays.py	/^def parse_field_choice($/;"	f
parse_field_choice	pyvista/core/utilities/arrays.py	/^def parse_field_choice(field: FieldAssociation) -> FieldAssociation: ...$/;"	f
parse_field_choice	pyvista/core/utilities/arrays.py	/^def parse_field_choice(field: RowLiteral | Literal['r']) -> Literal[FieldAssociation.ROW]: ...$/;"	f
parse_field_choice	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import parse_field_choice$/;"	i
parse_font_family	build/lib/pyvista/plotting/__init__.py	/^from .tools import parse_font_family as parse_font_family$/;"	i
parse_font_family	build/lib/pyvista/plotting/renderer.py	/^from .tools import parse_font_family$/;"	i
parse_font_family	build/lib/pyvista/plotting/scalar_bars.py	/^from .tools import parse_font_family$/;"	i
parse_font_family	build/lib/pyvista/plotting/themes.py	/^from .tools import parse_font_family$/;"	i
parse_font_family	build/lib/pyvista/plotting/tools.py	/^def parse_font_family(font_family: str) -> int:$/;"	f
parse_font_family	pyvista/plotting/__init__.py	/^from .tools import parse_font_family as parse_font_family$/;"	i
parse_font_family	pyvista/plotting/renderer.py	/^from .tools import parse_font_family$/;"	i
parse_font_family	pyvista/plotting/scalar_bars.py	/^from .tools import parse_font_family$/;"	i
parse_font_family	pyvista/plotting/themes.py	/^from .tools import parse_font_family$/;"	i
parse_font_family	pyvista/plotting/tools.py	/^def parse_font_family(font_family: str) -> int:$/;"	f
parse_message	build/lib/pyvista/core/utilities/observers.py	/^    def parse_message(message):  # numpydoc ignore=RT01$/;"	m	class:Observer
parse_message	pyvista/core/utilities/observers.py	/^    def parse_message(message):  # numpydoc ignore=RT01$/;"	m	class:Observer
parser	tests/check_doctest_names.py	/^    parser = ArgumentParser(description='Look for name errors in doctests.')$/;"	v
part_ellipsoid	examples/00-load/create_parametric_geometric_objects.py	/^part_ellipsoid = pv.ParametricEllipsoid(10, 5, 5, max_v=pi \/ 2)$/;"	v
partial	build/lib/pyvista/core/dataset.py	/^from functools import partial$/;"	i
partial	build/lib/pyvista/plotting/picking.py	/^from functools import partial$/;"	i
partial	build/lib/pyvista/plotting/render_window_interactor.py	/^from functools import partial$/;"	i
partial	build/lib/pyvista/plotting/renderer.py	/^from functools import partial$/;"	i
partial	pyvista/core/dataset.py	/^from functools import partial$/;"	i
partial	pyvista/plotting/picking.py	/^from functools import partial$/;"	i
partial	pyvista/plotting/render_window_interactor.py	/^from functools import partial$/;"	i
partial	pyvista/plotting/renderer.py	/^from functools import partial$/;"	i
partition	build/lib/pyvista/core/filters/data_set.py	/^    def partition(  # type: ignore[misc]$/;"	m	class:DataSetFilters
partition	pyvista/core/filters/data_set.py	/^    def partition(  # type: ignore[misc]$/;"	m	class:DataSetFilters
partitions_from_datasets	tests/core/test_partitioned.py	/^def partitions_from_datasets(*datasets):$/;"	f
parts	build/lib/pyvista/plotting/axes_assembly.py	/^    def parts(self):$/;"	m	class:_XYZAssembly
parts	pyvista/plotting/axes_assembly.py	/^    def parts(self):$/;"	m	class:_XYZAssembly
passed	tests/test_conftest.py	/^    passed = _ReportDescriptor()$/;"	v	class:RunResultsReport
patch	tests/core/test_dataset_filters.py	/^from unittest.mock import patch$/;"	i
patch	tests/core/test_polydata.py	/^from unittest.mock import patch$/;"	i
patch_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def patch_array_names(self):$/;"	m	class:OpenFOAMReader
patch_array_names	pyvista/core/utilities/reader.py	/^    def patch_array_names(self):$/;"	m	class:OpenFOAMReader
patch_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def patch_array_status(self, name):$/;"	m	class:OpenFOAMReader
patch_array_status	pyvista/core/utilities/reader.py	/^    def patch_array_status(self, name):$/;"	m	class:OpenFOAMReader
path	build/lib/pyvista/_plot.py	/^            path = Path(background)$/;"	v
path	build/lib/pyvista/core/utilities/reader.py	/^    def path(self) -> str:$/;"	m	class:BaseReader
path	build/lib/pyvista/core/utilities/reader.py	/^    def path(self, path: str | Path):$/;"	m	class:BaseReader
path	build/lib/pyvista/examples/_dataset_loader.py	/^    def path(self) -> _FilePropStrType_co:$/;"	m	class:_BaseFilePropsProtocol
path	build/lib/pyvista/examples/_dataset_loader.py	/^    def path(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
path	build/lib/pyvista/examples/_dataset_loader.py	/^    def path(self) -> str:$/;"	m	class:_SingleFile
path	build/lib/pyvista/examples/_dataset_loader.py	/^    def path(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDatasetLoader
path	build/lib/pyvista/examples/downloads.py	/^    path=USER_DATA_PATH,$/;"	v
path	build/lib/pyvista/examples/gltf.py	/^    path=USER_DATA_PATH,$/;"	v
path	build/lib/pyvista/ext/coverage.py	/^from os import path$/;"	i
path	doc/source/make_tables.py	/^    def path(cls):$/;"	m	class:CellQualityInfoTable
path	doc/source/make_tables.py	/^    def path(cls):$/;"	m	class:ColorClassificationTable
path	doc/source/make_tables.py	/^    def path(cls):$/;"	m	class:DatasetGalleryCarousel
path	doc/source/make_tables.py	/^    path = f'{CELL_QUALITY_DIR}\/cell_quality_measures_table.rst'$/;"	v	class:CellQualityMeasuresTable
path	doc/source/make_tables.py	/^    path = f'{CHARTS_TABLE_DIR}\/pen_line_styles.rst'$/;"	v	class:LineStyleTable
path	doc/source/make_tables.py	/^    path = f'{CHARTS_TABLE_DIR}\/plot_color_schemes.rst'$/;"	v	class:ColorSchemeTable
path	doc/source/make_tables.py	/^    path = f'{CHARTS_TABLE_DIR}\/scatter_marker_styles.rst'$/;"	v	class:MarkerStyleTable
path	doc/source/make_tables.py	/^    path = f'{COLORS_TABLE_DIR}\/color_table.rst'$/;"	v	class:ColorTable
path	examples/00-load/create_surface_draped.py	/^path = examples.download_gpr_path().points$/;"	v
path	examples/00-load/read_parallel.py	/^path = str(Path(filename).parent)$/;"	v
path	examples/01-filter/slicing.py	/^def path(y):$/;"	f
path	examples/02-plot/orbit.py	/^path = p.generate_orbital_path(factor=2.0, n_points=36, viewup=viewup, shift=0.2)$/;"	v
path	examples/02-plot/orbit.py	/^path = p.generate_orbital_path(factor=2.0, shift=10000, viewup=viewup, n_points=36)$/;"	v
path	examples/02-plot/orbit.py	/^path = p.generate_orbital_path(n_points=36, shift=mesh.length)$/;"	v
path	examples/02-plot/point_clouds.py	/^path = pl.generate_orbital_path(n_points=36, shift=cloud.length, factor=3.0)$/;"	v
path	pyvista/_plot.py	/^            path = Path(background)$/;"	v
path	pyvista/core/utilities/reader.py	/^    def path(self) -> str:$/;"	m	class:BaseReader
path	pyvista/core/utilities/reader.py	/^    def path(self, path: str | Path):$/;"	m	class:BaseReader
path	pyvista/examples/_dataset_loader.py	/^    def path(self) -> _FilePropStrType_co:$/;"	m	class:_BaseFilePropsProtocol
path	pyvista/examples/_dataset_loader.py	/^    def path(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
path	pyvista/examples/_dataset_loader.py	/^    def path(self) -> str:$/;"	m	class:_SingleFile
path	pyvista/examples/_dataset_loader.py	/^    def path(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDatasetLoader
path	pyvista/examples/downloads.py	/^    path=USER_DATA_PATH,$/;"	v
path	pyvista/examples/gltf.py	/^    path=USER_DATA_PATH,$/;"	v
path	pyvista/ext/coverage.py	/^from os import path$/;"	i
path_loadable	build/lib/pyvista/examples/_dataset_loader.py	/^    def path_loadable(self) -> str:$/;"	m	class:_SingleFileDatasetLoader
path_loadable	build/lib/pyvista/examples/_dataset_loader.py	/^    def path_loadable(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDatasetLoader
path_loadable	pyvista/examples/_dataset_loader.py	/^    def path_loadable(self) -> str:$/;"	m	class:_SingleFileDatasetLoader
path_loadable	pyvista/examples/_dataset_loader.py	/^    def path_loadable(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDatasetLoader
pathlib	build/lib/pyvista/core/composite.py	/^import pathlib$/;"	i
pathlib	build/lib/pyvista/plotting/text.py	/^import pathlib$/;"	i
pathlib	build/lib/pyvista/plotting/themes.py	/^import pathlib$/;"	i
pathlib	build/lib/pyvista/plotting/widgets.py	/^import pathlib$/;"	i
pathlib	pyvista/core/composite.py	/^import pathlib$/;"	i
pathlib	pyvista/plotting/text.py	/^import pathlib$/;"	i
pathlib	pyvista/plotting/themes.py	/^import pathlib$/;"	i
pathlib	pyvista/plotting/widgets.py	/^import pathlib$/;"	i
pathlib	tests/core/test_composite.py	/^import pathlib$/;"	i
pathlib	tests/core/test_grid.py	/^import pathlib$/;"	i
pathlib	tests/core/test_polydata.py	/^import pathlib$/;"	i
pathlib	tests/plotting/test_plotting.py	/^import pathlib$/;"	i
pathlib	tests/test_meshio.py	/^import pathlib$/;"	i
pbr	examples/02-plot/backface_props.py	/^    pbr=True,$/;"	v
pd	build/lib/pyvista/core/objects.py	/^            import pandas as pd$/;"	i
pd	pyvista/core/objects.py	/^            import pandas as pd$/;"	i
pd	tests/core/test_objects.py	/^    import pandas as pd$/;"	i
pd	tests/core/test_objects.py	/^    pd = None$/;"	v
pdata	examples/02-plot/points_gaussian_scale.py	/^pdata = pv.PolyData(pos)$/;"	v
peak_mesh	examples/01-filter/connectivity.py	/^peak_mesh = mesh.connectivity('point_seed', peak_point_id, scalar_range=peak_range)$/;"	v
peak_point	examples/01-filter/connectivity.py	/^peak_point = mesh.points[peak_point_id]$/;"	v
peak_point_id	examples/01-filter/connectivity.py	/^peak_point_id = np.argmax(mesh['Curvature'])$/;"	v
peak_range	examples/01-filter/connectivity.py	/^peak_range = [0.2, data_max]  # Peak if curvature > 0.2$/;"	v
pen	build/lib/pyvista/plotting/charts.py	/^    def pen(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
pen	pyvista/plotting/charts.py	/^    def pen(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
period	build/lib/pyvista/core/utilities/image_sources.py	/^    def period(self) -> float:$/;"	m	class:ImageSinusoidSource
period	build/lib/pyvista/core/utilities/image_sources.py	/^    def period(self, period: float) -> None:$/;"	m	class:ImageSinusoidSource
period	pyvista/core/utilities/image_sources.py	/^    def period(self) -> float:$/;"	m	class:ImageSinusoidSource
period	pyvista/core/utilities/image_sources.py	/^    def period(self, period: float) -> None:$/;"	m	class:ImageSinusoidSource
perlin_noise	build/lib/pyvista/core/utilities/__init__.py	/^from .features import perlin_noise as perlin_noise$/;"	i
perlin_noise	build/lib/pyvista/core/utilities/features.py	/^def perlin_noise(amplitude, freq: Sequence[float], phase: Sequence[float]):$/;"	f
perlin_noise	pyvista/core/utilities/__init__.py	/^from .features import perlin_noise as perlin_noise$/;"	i
perlin_noise	pyvista/core/utilities/features.py	/^def perlin_noise(amplitude, freq: Sequence[float], phase: Sequence[float]):$/;"	f
permutations	tests/core/test_geometric_objects.py	/^from itertools import permutations$/;"	i
phase	build/lib/pyvista/core/utilities/image_sources.py	/^    def phase(self) -> Sequence[float]:$/;"	m	class:ImageSinusoidSource
phase	build/lib/pyvista/core/utilities/image_sources.py	/^    def phase(self, phase: Sequence[float]) -> None:$/;"	m	class:ImageSinusoidSource
phase	pyvista/core/utilities/image_sources.py	/^    def phase(self) -> Sequence[float]:$/;"	m	class:ImageSinusoidSource
phase	pyvista/core/utilities/image_sources.py	/^    def phase(self, phase: Sequence[float]) -> None:$/;"	m	class:ImageSinusoidSource
phi	build/lib/pyvista/examples/examples.py	/^        from sympy.abc import phi$/;"	i
phi	examples/00-load/create_sphere.py	/^phi = np.linspace(0, np.pi, nphi)$/;"	v
phi	examples/00-load/create_sphere.py	/^phi = phi[1:-1]$/;"	v
phi	examples/01-filter/decimate.py	/^phi = np.linspace(0, 2 * np.pi * n_rotations, n_points)$/;"	v
phi	examples/01-filter/flying_edges.py	/^phi = (1 + np.sqrt(5)) \/ 2$/;"	v
phi	examples/02-plot/points_gaussian_scale.py	/^phi = rng.uniform(0, 2 * np.pi, N_SPHERES)$/;"	v
phi	pyvista/examples/examples.py	/^        from sympy.abc import phi$/;"	i
phi2	examples/01-filter/flying_edges.py	/^phi2 = phi * phi$/;"	v
phi_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def phi_resolution(self: CapsuleSource) -> int:$/;"	m	class:.CapsuleSource
phi_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def phi_resolution(self: CapsuleSource, phi_resolution: int) -> None:$/;"	m	class:.CapsuleSource
phi_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SphereSource) -> int:$/;"	m	class:SphereSource
phi_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SphereSource, phi_resolution: int) -> None:$/;"	m	class:SphereSource
phi_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
phi_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SuperquadricSource, phi_resolution: float) -> None:$/;"	m	class:SuperquadricSource
phi_resolution	examples/02-plot/texture.py	/^    phi_resolution=120,$/;"	v
phi_resolution	pyvista/core/utilities/geometric_sources.py	/^        def phi_resolution(self: CapsuleSource) -> int:$/;"	m	class:.CapsuleSource
phi_resolution	pyvista/core/utilities/geometric_sources.py	/^        def phi_resolution(self: CapsuleSource, phi_resolution: int) -> None:$/;"	m	class:.CapsuleSource
phi_resolution	pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SphereSource) -> int:$/;"	m	class:SphereSource
phi_resolution	pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SphereSource, phi_resolution: int) -> None:$/;"	m	class:SphereSource
phi_resolution	pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
phi_resolution	pyvista/core/utilities/geometric_sources.py	/^    def phi_resolution(self: SuperquadricSource, phi_resolution: float) -> None:$/;"	m	class:SuperquadricSource
phi_roundness	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def phi_roundness(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
phi_roundness	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def phi_roundness(self: SuperquadricSource, phi_roundness: float) -> None:$/;"	m	class:SuperquadricSource
phi_roundness	pyvista/core/utilities/geometric_sources.py	/^    def phi_roundness(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
phi_roundness	pyvista/core/utilities/geometric_sources.py	/^    def phi_roundness(self: SuperquadricSource, phi_roundness: float) -> None:$/;"	m	class:SuperquadricSource
physical_to_index_matrix	build/lib/pyvista/core/grid.py	/^    def physical_to_index_matrix(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
physical_to_index_matrix	build/lib/pyvista/core/grid.py	/^    def physical_to_index_matrix(self: Self, matrix: TransformLike) -> None:  # numpydoc ignore=GL08$/;"	m	class:ImageData
physical_to_index_matrix	pyvista/core/grid.py	/^    def physical_to_index_matrix(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
physical_to_index_matrix	pyvista/core/grid.py	/^    def physical_to_index_matrix(self: Self, matrix: TransformLike) -> None:  # numpydoc ignore=GL08$/;"	m	class:ImageData
pi	build/lib/pyvista/core/utilities/parametric_objects.py	/^from math import pi$/;"	i
pi	examples/00-load/create_parametric_geometric_objects.py	/^from math import pi$/;"	i
pi	pyvista/core/utilities/parametric_objects.py	/^from math import pi$/;"	i
pi	tests/core/test_polydata.py	/^from math import pi$/;"	i
pick_click_position	build/lib/pyvista/plotting/picking.py	/^    def pick_click_position(self):$/;"	m	class:PickingInterface
pick_click_position	pyvista/plotting/picking.py	/^    def pick_click_position(self):$/;"	m	class:PickingInterface
pick_mouse_position	build/lib/pyvista/plotting/picking.py	/^    def pick_mouse_position(self):$/;"	m	class:PickingInterface
pick_mouse_position	pyvista/plotting/picking.py	/^    def pick_mouse_position(self):$/;"	m	class:PickingInterface
pickable	build/lib/pyvista/plotting/actor.py	/^    def pickable(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
pickable	build/lib/pyvista/plotting/actor.py	/^    def pickable(self, value) -> None:$/;"	m	class:Actor
pickable	build/lib/pyvista/plotting/composite_mapper.py	/^    def pickable(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
pickable	build/lib/pyvista/plotting/composite_mapper.py	/^    def pickable(self, new_pickable: bool | None):$/;"	m	class:BlockAttributes
pickable	pyvista/plotting/actor.py	/^    def pickable(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
pickable	pyvista/plotting/actor.py	/^    def pickable(self, value) -> None:$/;"	m	class:Actor
pickable	pyvista/plotting/composite_mapper.py	/^    def pickable(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
pickable	pyvista/plotting/composite_mapper.py	/^    def pickable(self, new_pickable: bool | None):$/;"	m	class:BlockAttributes
pickable_actors	build/lib/pyvista/plotting/plotter.py	/^    def pickable_actors(self) -> list[_vtk.vtkActor]:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
pickable_actors	build/lib/pyvista/plotting/plotter.py	/^    def pickable_actors(self, actors=None) -> None:$/;"	m	class:BasePlotter
pickable_actors	pyvista/plotting/plotter.py	/^    def pickable_actors(self) -> list[_vtk.vtkActor]:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
pickable_actors	pyvista/plotting/plotter.py	/^    def pickable_actors(self, actors=None) -> None:$/;"	m	class:BasePlotter
pickable_window	tests/plotting/test_picking.py	/^        pickable_window=pickable_window,$/;"	v	class:test_point_picking_window.Tracker
picked_actor	build/lib/pyvista/plotting/picking.py	/^    def picked_actor(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_actor	pyvista/plotting/picking.py	/^    def picked_actor(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_block_index	build/lib/pyvista/plotting/picking.py	/^    def picked_block_index(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_block_index	pyvista/plotting/picking.py	/^    def picked_block_index(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_cell	build/lib/pyvista/plotting/picking.py	/^    def picked_cell(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_cell	pyvista/plotting/picking.py	/^    def picked_cell(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_cells	build/lib/pyvista/plotting/picking.py	/^    def picked_cells(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_cells	pyvista/plotting/picking.py	/^    def picked_cells(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_mesh	build/lib/pyvista/plotting/picking.py	/^    def picked_mesh(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_mesh	pyvista/plotting/picking.py	/^    def picked_mesh(self):  # numpydoc ignore=RT01$/;"	m	class:PickingMethods
picked_point	build/lib/pyvista/plotting/picking.py	/^    def picked_point(self):  # numpydoc ignore=RT01$/;"	m	class:PickingInterface
picked_point	pyvista/plotting/picking.py	/^    def picked_point(self):  # numpydoc ignore=RT01$/;"	m	class:PickingInterface
picker	build/lib/pyvista/plotting/picking.py	/^    def picker(self):  # numpydoc ignore=RT01$/;"	m	class:PointPickingElementHandler
picker	build/lib/pyvista/plotting/picking.py	/^    def picker(self, picker):$/;"	m	class:PointPickingElementHandler
picker	build/lib/pyvista/plotting/render_window_interactor.py	/^    def picker(self):  # numpydoc ignore=RT01$/;"	m	class:RenderWindowInteractor
picker	build/lib/pyvista/plotting/render_window_interactor.py	/^    def picker(self, picker):$/;"	m	class:RenderWindowInteractor
picker	pyvista/plotting/picking.py	/^    def picker(self):  # numpydoc ignore=RT01$/;"	m	class:PointPickingElementHandler
picker	pyvista/plotting/picking.py	/^    def picker(self, picker):$/;"	m	class:PointPickingElementHandler
picker	pyvista/plotting/render_window_interactor.py	/^    def picker(self):  # numpydoc ignore=RT01$/;"	m	class:RenderWindowInteractor
picker	pyvista/plotting/render_window_interactor.py	/^    def picker(self, picker):$/;"	m	class:RenderWindowInteractor
picker	tests/plotting/test_picking.py	/^        picker='hardware',  # picker allows picking in the window$/;"	v	class:test_point_picking_window.Tracker
picking	tests/plotting/test_picking.py	/^    from pyvista.plotting import picking$/;"	i
pickle	build/lib/pyvista/core/utilities/fileio.py	/^import pickle$/;"	i
pickle	build/lib/pyvista/examples/downloads.py	/^    import pickle$/;"	i
pickle	build/lib/pyvista/ext/coverage.py	/^import pickle$/;"	i
pickle	pyvista/core/utilities/fileio.py	/^import pickle$/;"	i
pickle	pyvista/examples/downloads.py	/^    import pickle$/;"	i
pickle	pyvista/ext/coverage.py	/^import pickle$/;"	i
pickle	tests/core/test_dataobject.py	/^import pickle$/;"	i
pickle	tests/core/test_reader.py	/^import pickle$/;"	i
pickle	tests/core/test_utilities.py	/^import pickle$/;"	i
pid	examples/00-load/wrap_trimesh.py	/^pid = points.InsertNextPoint(p)$/;"	v
pie_plot	tests/plotting/test_charts.py	/^def pie_plot(chart_pie):$/;"	f
pine_roots	examples/01-filter/connectivity.py	/^pine_roots = examples.download_pine_roots()$/;"	v
pl	build/lib/pyvista/_plot.py	/^    pl = pyvista.Plotter($/;"	v
pl	build/lib/pyvista/plotting/helpers.py	/^    pl = pyvista.Plotter(shape=(2, 2), **plotter_kwargs)$/;"	v
pl	examples/00-load/create_parametric_geometric_objects.py	/^pl = pv.Plotter()$/;"	v
pl	examples/00-load/create_polydata_strips.py	/^pl = pv.Plotter()$/;"	v
pl	examples/00-load/create_polyhedron.py	/^pl = pv.Plotter()$/;"	v
pl	examples/00-load/create_sphere.py	/^pl = pv.Plotter()$/;"	v
pl	examples/00-load/linear_cells.py	/^pl = pv.Plotter(shape=(4, 4))$/;"	v
pl	examples/00-load/load_gltf.py	/^pl = pyvista.Plotter()$/;"	v
pl	examples/00-load/load_vrml.py	/^pl = pyvista.Plotter()$/;"	v
pl	examples/01-filter/boolean_operations.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/cell_centers.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/collisions.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/contouring.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/decimate.py	/^pl = pv.Plotter(shape=(1, 3))$/;"	v
pl	examples/01-filter/extrude_trim.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/extrude_trim.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/01-filter/flying_edges.py	/^pl = pv.Plotter(window_size=[800, 800], off_screen=True)$/;"	v
pl	examples/01-filter/glyphs.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/image_fft_perlin_noise.py	/^pl = pv.Plotter(lighting='three lights')$/;"	v
pl	examples/01-filter/image_fft_perlin_noise.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/01-filter/interpolate_sample.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/mesh_quality.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/mesh_quality.py	/^pl = pv.Plotter(shape=(2, 2))$/;"	v
pl	examples/01-filter/sampling_functions_2d.py	/^pl = pv.Plotter()$/;"	v
pl	examples/01-filter/sampling_functions_2d.py	/^pl = pv.Plotter(lighting=None)$/;"	v
pl	examples/01-filter/surface_reconstruction.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/01-filter/surface_smoothing.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/anti_aliasing.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/backface_props.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/background_image.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/background_image.py	/^pl = pv.Plotter(shape=(2, 2))$/;"	v
pl	examples/02-plot/blurring.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/color_cycler.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/color_cycler.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/02-plot/composite_picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/depth_of_field.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/distance_along_spline.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/distance_measurement.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/element_picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/legend.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/lookup_table.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/mesh_picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/point_clouds.py	/^pl = pv.Plotter(off_screen=True)$/;"	v
pl	examples/02-plot/point_clouds.py	/^pl = pv.Plotter(shape=(2, 2))$/;"	v
pl	examples/02-plot/points_gaussian_scale.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/shading.py	/^pl = pyvista.Plotter()$/;"	v
pl	examples/02-plot/ssao.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/surface_picking.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/themes.py	/^pl = pv.Plotter(theme=my_theme)$/;"	v
pl	examples/02-plot/vector_component.py	/^pl = pv.Plotter(shape=(2, 2))$/;"	v
pl	examples/02-plot/vertices.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/volume.py	/^pl = pv.Plotter()$/;"	v
pl	examples/02-plot/volume.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	examples/03-widgets/animation.py	/^pl = pv.Plotter()$/;"	v
pl	examples/03-widgets/clip_volume.py	/^pl = pv.Plotter()$/;"	v
pl	examples/04-lights/shadows.py	/^pl = pyvista.Plotter(lighting=None, window_size=(800, 800))$/;"	v
pl	examples/98-common/project_points_tessellate.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/add_example.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/add_example.py	/^pl = pv.Plotter(off_screen=True)$/;"	v
pl	examples/99-advanced/antarctica_compare.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/atomic_orbitals.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/customization_trame_toolbar.py	/^pl = pv.Plotter(notebook=True)$/;"	v
pl	examples/99-advanced/fea_hertzian_contact_pressure.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/magnetic_fields.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/openfoam_cooling.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/openfoam_tubes.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/planets.py	/^pl = pyvista.Plotter(lighting='none')$/;"	v
pl	examples/99-advanced/planets.py	/^pl = pyvista.Plotter(shape=(1, 2))$/;"	v
pl	examples/99-advanced/planets.py	/^pl = pyvista.Plotter(shape=(3, 2))$/;"	v
pl	examples/99-advanced/pump_bracket.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/pump_bracket.py	/^pl = pv.Plotter(off_screen=True)$/;"	v
pl	examples/99-advanced/ray_trace_moeller.py	/^    pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/warp_by_vector_eigenmodes.py	/^pl = pv.Plotter()$/;"	v
pl	examples/99-advanced/warp_by_vector_eigenmodes.py	/^pl = pv.Plotter(shape=(2, 4))$/;"	v
pl	examples_trame/advanced/contour.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/actor_color.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/algorithm.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/file_viewer.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/mesh_scalars.py	/^pl = pv.Plotter()$/;"	v
pl	examples_trame/basic/multi_views.py	/^pl = pv.Plotter(shape=(1, 2))$/;"	v
pl	pyvista/_plot.py	/^    pl = pyvista.Plotter($/;"	v
pl	pyvista/plotting/helpers.py	/^    pl = pyvista.Plotter(shape=(2, 2), **plotter_kwargs)$/;"	v
pl	tests/plotting/test_charts.py	/^def pl():$/;"	f
pl	tests/plotting/test_theme.py	/^        pl = pv.Plotter()$/;"	v	class:test_user_theme.MyTheme
place_point	build/lib/pyvista/plotting/widgets.py	/^        def place_point(*_):$/;"	f	function:WidgetHelper.add_measurement_widget
place_point	pyvista/plotting/widgets.py	/^        def place_point(*_):$/;"	f	function:WidgetHelper.add_measurement_widget
planar_mesh	tests/core/test_dataset_filters.py	/^def planar_mesh():$/;"	f
plane	examples/00-load/create_geometric_objects.py	/^plane = pv.Plane()$/;"	v
plane	examples/01-filter/clipping.py	/^plane = pv.Plane(i_size=30, j_size=30, direction=normal)$/;"	v
plane	examples/01-filter/extrude_trim.py	/^plane = pv.Plane($/;"	v
plane	examples/01-filter/extrude_trim.py	/^plane = pv.Plane(center=(0, 0, 1), i_size=2, j_size=0.2, direction=[1, 1, 1], j_resolution=1)$/;"	v
plane	examples/04-lights/actors.py	/^plane = pv.Plane(i_size=4, j_size=4)$/;"	v
plane	examples/98-common/project_points_tessellate.py	/^plane = pv.Plane(center=origin, direction=normal)$/;"	v
plane	tests/conftest.py	/^def plane():$/;"	f
plane_vis	examples/98-common/project_points_tessellate.py	/^plane_vis = pv.Plane($/;"	v
planefile	build/lib/pyvista/examples/examples.py	/^planefile = str(Path(dir_path) \/ 'airplane.ply')$/;"	v
planefile	pyvista/examples/examples.py	/^planefile = str(Path(dir_path) \/ 'airplane.ply')$/;"	v
planes	build/lib/pyvista/plotting/axes_assembly.py	/^    def planes(self):$/;"	m	class:PlanesAssembly
planes	pyvista/plotting/axes_assembly.py	/^    def planes(self):$/;"	m	class:PlanesAssembly
planes_assembly	tests/plotting/test_axes_assembly.py	/^def planes_assembly():$/;"	f
planets	build/lib/pyvista/examples/__init__.py	/^from . import planets as planets$/;"	i
planets	pyvista/examples/__init__.py	/^from . import planets as planets$/;"	i
platform	build/lib/pyvista/plotting/plotter.py	/^import platform$/;"	i
platform	build/lib/pyvista/plotting/tools.py	/^import platform$/;"	i
platform	pyvista/plotting/plotter.py	/^import platform$/;"	i
platform	pyvista/plotting/tools.py	/^import platform$/;"	i
platform	tests/conftest.py	/^import platform$/;"	i
platform	tests/core/test_utilities.py	/^import platform$/;"	i
platform	tests/test_conftest.py	/^    import platform$/;"	i
plot	build/lib/pyvista/__init__.py	/^from pyvista._plot import plot as plot$/;"	i
plot	build/lib/pyvista/_plot.py	/^def plot($/;"	f
plot	build/lib/pyvista/core/cell.py	/^    def plot(self: Self, **kwargs) -> None:$/;"	m	class:Cell
plot	build/lib/pyvista/core/composite.py	/^    plot = pyvista._plot.plot$/;"	v	class:MultiBlock
plot	build/lib/pyvista/core/dataset.py	/^    plot = pyvista._plot.plot$/;"	v	class:DataSet
plot	build/lib/pyvista/core/pointset.py	/^    def plot(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
plot	build/lib/pyvista/plotting/__init__.py	/^from pyvista._plot import plot as plot$/;"	i
plot	build/lib/pyvista/plotting/_property.py	/^    def plot(self, **kwargs) -> None:$/;"	m	class:Property
plot	build/lib/pyvista/plotting/actor.py	/^    def plot(self, **kwargs) -> None:$/;"	m	class:Actor
plot	build/lib/pyvista/plotting/charts.py	/^    def plot(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
plot	build/lib/pyvista/plotting/charts.py	/^    def plot(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
plot	build/lib/pyvista/plotting/charts.py	/^    def plot(self, x, y=None, fmt='-'):$/;"	m	class:Chart2D
plot	build/lib/pyvista/plotting/lookup_table.py	/^    def plot(self, **kwargs):$/;"	m	class:LookupTable
plot	build/lib/pyvista/plotting/texture.py	/^    def plot(self, **kwargs):$/;"	m	class:Texture
plot	examples/01-filter/image_representations.py	/^plot = pv.Plotter()$/;"	v
plot	pyvista/__init__.py	/^from pyvista._plot import plot as plot$/;"	i
plot	pyvista/_plot.py	/^def plot($/;"	f
plot	pyvista/core/cell.py	/^    def plot(self: Self, **kwargs) -> None:$/;"	m	class:Cell
plot	pyvista/core/composite.py	/^    plot = pyvista._plot.plot$/;"	v	class:MultiBlock
plot	pyvista/core/dataset.py	/^    plot = pyvista._plot.plot$/;"	v	class:DataSet
plot	pyvista/core/pointset.py	/^    def plot(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
plot	pyvista/plotting/__init__.py	/^from pyvista._plot import plot as plot$/;"	i
plot	pyvista/plotting/_property.py	/^    def plot(self, **kwargs) -> None:$/;"	m	class:Property
plot	pyvista/plotting/actor.py	/^    def plot(self, **kwargs) -> None:$/;"	m	class:Actor
plot	pyvista/plotting/charts.py	/^    def plot(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
plot	pyvista/plotting/charts.py	/^    def plot(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
plot	pyvista/plotting/charts.py	/^    def plot(self, x, y=None, fmt='-'):$/;"	m	class:Chart2D
plot	pyvista/plotting/lookup_table.py	/^    def plot(self, **kwargs):$/;"	m	class:LookupTable
plot	pyvista/plotting/texture.py	/^    def plot(self, **kwargs):$/;"	m	class:Texture
plot_anatomy	examples/99-advanced/anatomical_groups.py	/^def plot_anatomy(search_terms: list[str]):$/;"	f
plot_ants_plane	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_ants_plane as plot_ants_plane$/;"	i
plot_ants_plane	build/lib/pyvista/demos/demos.py	/^def plot_ants_plane(notebook=None):$/;"	f
plot_ants_plane	pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_ants_plane as plot_ants_plane$/;"	i
plot_ants_plane	pyvista/demos/demos.py	/^def plot_ants_plane(notebook=None):$/;"	f
plot_arrows	build/lib/pyvista/plotting/__init__.py	/^from .helpers import plot_arrows as plot_arrows$/;"	i
plot_arrows	build/lib/pyvista/plotting/helpers.py	/^def plot_arrows(cent, direction, **kwargs):$/;"	f
plot_arrows	pyvista/plotting/__init__.py	/^from .helpers import plot_arrows as plot_arrows$/;"	i
plot_arrows	pyvista/plotting/helpers.py	/^def plot_arrows(cent, direction, **kwargs):$/;"	f
plot_beam	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_beam as plot_beam$/;"	i
plot_beam	build/lib/pyvista/demos/demos.py	/^def plot_beam(notebook=None):$/;"	f
plot_beam	pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_beam as plot_beam$/;"	i
plot_beam	pyvista/demos/demos.py	/^def plot_beam(notebook=None):$/;"	f
plot_boundaries	build/lib/pyvista/core/filters/poly_data.py	/^    def plot_boundaries(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
plot_boundaries	pyvista/core/filters/poly_data.py	/^    def plot_boundaries(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
plot_boundary_labels	tests/plotting/test_plotting.py	/^    def plot_boundary_labels(mesh_):$/;"	f	function:test_contour_labels_boundary_style
plot_cell	build/lib/pyvista/examples/__init__.py	/^from .cells import plot_cell as plot_cell$/;"	i
plot_cell	build/lib/pyvista/examples/cells.py	/^def plot_cell(grid, cpos=None, **kwargs):$/;"	f
plot_cell	examples/00-load/linear_cells.py	/^from pyvista.examples import plot_cell$/;"	i
plot_cell	pyvista/examples/__init__.py	/^from .cells import plot_cell as plot_cell$/;"	i
plot_cell	pyvista/examples/cells.py	/^def plot_cell(grid, cpos=None, **kwargs):$/;"	f
plot_cleanup	tests/plotting/tinypages/conf.py	/^plot_cleanup = plot_setup$/;"	v
plot_compare_four	build/lib/pyvista/plotting/__init__.py	/^from .helpers import plot_compare_four as plot_compare_four$/;"	i
plot_compare_four	build/lib/pyvista/plotting/helpers.py	/^def plot_compare_four($/;"	f
plot_compare_four	pyvista/plotting/__init__.py	/^from .helpers import plot_compare_four as plot_compare_four$/;"	i
plot_compare_four	pyvista/plotting/helpers.py	/^def plot_compare_four($/;"	f
plot_context	build/lib/pyvista/ext/plot_directive.py	/^plot_context = {}$/;"	v
plot_context	pyvista/ext/plot_directive.py	/^plot_context = {}$/;"	v
plot_curvature	build/lib/pyvista/core/filters/poly_data.py	/^    def plot_curvature(self, curv_type='mean', **kwargs):$/;"	m	class:PolyDataFilters
plot_curvature	build/lib/pyvista/core/pointset.py	/^    def plot_curvature(self: Self, curv_type='mean', **kwargs):$/;"	m	class:PointGrid
plot_curvature	pyvista/core/filters/poly_data.py	/^    def plot_curvature(self, curv_type='mean', **kwargs):$/;"	m	class:PolyDataFilters
plot_curvature	pyvista/core/pointset.py	/^    def plot_curvature(self: Self, curv_type='mean', **kwargs):$/;"	m	class:PointGrid
plot_datasets	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_datasets as plot_datasets$/;"	i
plot_datasets	build/lib/pyvista/demos/demos.py	/^def plot_datasets(dataset_type=None):$/;"	f
plot_datasets	pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_datasets as plot_datasets$/;"	i
plot_datasets	pyvista/demos/demos.py	/^def plot_datasets(dataset_type=None):$/;"	f
plot_example	examples/02-plot/themes.py	/^def plot_example():$/;"	f
plot_file	tests/plotting/test_tinypages.py	/^    def plot_file(plt, num, subnum, extension='vtksz'):$/;"	f	function:test_tinypages
plot_glyphs	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_glyphs as plot_glyphs$/;"	i
plot_glyphs	build/lib/pyvista/demos/demos.py	/^def plot_glyphs(grid_sz=3, **kwargs):$/;"	f
plot_glyphs	pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_glyphs as plot_glyphs$/;"	i
plot_glyphs	pyvista/demos/demos.py	/^def plot_glyphs(grid_sz=3, **kwargs):$/;"	f
plot_kwargs	examples/01-filter/image_representations.py	/^plot_kwargs = dict($/;"	v
plot_logo	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.logo import plot_logo as plot_logo$/;"	i
plot_logo	build/lib/pyvista/demos/logo.py	/^def plot_logo($/;"	f
plot_logo	pyvista/demos/__init__.py	/^from pyvista.demos.logo import plot_logo as plot_logo$/;"	i
plot_logo	pyvista/demos/logo.py	/^def plot_logo($/;"	f
plot_normals	build/lib/pyvista/core/filters/poly_data.py	/^    def plot_normals(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
plot_normals	pyvista/core/filters/poly_data.py	/^    def plot_normals(  # type: ignore[misc]$/;"	m	class:PolyDataFilters
plot_orbital	examples/99-advanced/atomic_orbitals.py	/^def plot_orbital(orbital, cpos='iso', clip_plane='x'):$/;"	f
plot_over_circular_arc	build/lib/pyvista/core/filters/data_set.py	/^    def plot_over_circular_arc(  # type: ignore[misc]$/;"	m	class:DataSetFilters
plot_over_circular_arc	pyvista/core/filters/data_set.py	/^    def plot_over_circular_arc(  # type: ignore[misc]$/;"	m	class:DataSetFilters
plot_over_circular_arc_normal	build/lib/pyvista/core/filters/data_set.py	/^    def plot_over_circular_arc_normal(  # type: ignore[misc]$/;"	m	class:DataSetFilters
plot_over_circular_arc_normal	pyvista/core/filters/data_set.py	/^    def plot_over_circular_arc_normal(  # type: ignore[misc]$/;"	m	class:DataSetFilters
plot_over_line	build/lib/pyvista/core/filters/data_set.py	/^    def plot_over_line(  # type: ignore[misc]$/;"	m	class:DataSetFilters
plot_over_line	pyvista/core/filters/data_set.py	/^    def plot_over_line(  # type: ignore[misc]$/;"	m	class:DataSetFilters
plot_poly	tests/plotting/tinypages/plot_polygon.py	/^def plot_poly():$/;"	f
plot_skip	tests/plotting/tinypages/conf.py	/^    plot_skip = value.lower() == 'true'$/;"	v
plot_skip_optional	tests/plotting/tinypages/conf.py	/^    plot_skip_optional = value.lower() == 'true'$/;"	v
plot_subdivisions	examples/01-filter/subdivide.py	/^def plot_subdivisions(mesh, a, b):$/;"	f
plot_wave	build/lib/pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_wave as plot_wave$/;"	i
plot_wave	build/lib/pyvista/demos/demos.py	/^def plot_wave(fps=30, frequency=1, wavetime=3, notebook=None):$/;"	f
plot_wave	pyvista/demos/__init__.py	/^from pyvista.demos.demos import plot_wave as plot_wave$/;"	i
plot_wave	pyvista/demos/demos.py	/^def plot_wave(fps=30, frequency=1, wavetime=3, notebook=None):$/;"	f
plots	build/lib/pyvista/plotting/charts.py	/^    def plots(self, plot_type=None):$/;"	m	class:Chart2D
plots	pyvista/plotting/charts.py	/^    def plots(self, plot_type=None):$/;"	m	class:Chart2D
plotter	build/lib/pyvista/demos/logo.py	/^    plotter = pyvista.Plotter(window_size=window_size, off_screen=off_screen)$/;"	v
plotter	examples/00-load/create_point_cloud.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/00-load/read_file.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples/00-load/reader.py	/^plotter = pyvista.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/00-load/reader.py	/^plotter = pyvista.Plotter(shape='2|1')$/;"	v
plotter	examples/01-filter/extrude_rotate.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/01-filter/extrude_rotate.py	/^plotter = pyvista.Plotter(shape=(2, 1))$/;"	v
plotter	examples/01-filter/glyphs_table.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/01-filter/image_fft_perlin_noise.py	/^plotter = pv.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/01-filter/integrate_data.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/01-filter/subdivide.py	/^plotter = plot_subdivisions(mesh, 1, 3)$/;"	v
plotter	examples/02-plot/backface_props.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/bounds.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/clear.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/floors.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/gif.py	/^plotter = pv.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/02-plot/isovalue.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples/02-plot/labels.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/movie.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/02-plot/movie_glyphs.py	/^plotter = pv.Plotter(notebook=False)$/;"	v
plotter	examples/02-plot/multi_window.py	/^plotter = pv.Plotter(shape='3|1', window_size=(1000, 1200))$/;"	v
plotter	examples/02-plot/multi_window.py	/^plotter = pv.Plotter(shape=(1, 2))$/;"	v
plotter	examples/02-plot/multi_window.py	/^plotter = pv.Plotter(shape=(2, 2))$/;"	v
plotter	examples/02-plot/multi_window.py	/^plotter = pv.Plotter(shape=shape, row_weights=row_weights, col_weights=col_weights, groups=groups)$/;"	v
plotter	examples/02-plot/pbr.py	/^plotter = pv.Plotter(lighting=None)$/;"	v
plotter	examples/02-plot/screenshot.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples/02-plot/silhouette.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/02-plot/silhouette.py	/^plotter = pyvista.Plotter(shape=(1, 2))$/;"	v
plotter	examples/02-plot/silhouette.py	/^plotter = pyvista.Plotter(shape=(1, 3))$/;"	v
plotter	examples/02-plot/texture.py	/^plotter = pv.Plotter(notebook=False, off_screen=True)$/;"	v
plotter	examples/02-plot/themes.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/actors.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/actors.py	/^plotter = pv.Plotter(lighting='none', window_size=(1000, 1000))$/;"	v
plotter	examples/04-lights/attenuation.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/beam_shape.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/beam_shape.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/light_types.py	/^plotter = pv.Plotter(lighting='none')$/;"	v
plotter	examples/04-lights/mesh_lighting.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/plotter_builtins.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples/04-lights/plotter_builtins.py	/^plotter = pv.Plotter(lighting='none', window_size=(1000, 1000))$/;"	v
plotter	examples/04-lights/plotter_builtins.py	/^plotter = pv.Plotter(lighting='three lights')$/;"	v
plotter	examples/04-lights/shadows.py	/^plotter = pyvista.Plotter(lighting=None, window_size=(800, 800))$/;"	v
plotter	examples/99-advanced/openfoam_example.py	/^plotter = pyvista.Plotter()$/;"	v
plotter	examples/99-advanced/sphere_eversion.py	/^plotter = pv.Plotter(window_size=(300, 300))$/;"	v
plotter	examples/99-advanced/sphere_eversion.py	/^plotter = pv.Plotter(window_size=(512, 512))$/;"	v
plotter	examples_trame/advanced/custom_ui.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/basic/PyVistaLocalView.py	/^plotter = pv.Plotter(off_screen=True)$/;"	v
plotter	examples_trame/basic/PyVistaRemoteLocalView.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/basic/PyVistaRemoteView.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/basic/ui_template.py	/^plotter = pv.Plotter()$/;"	v
plotter	examples_trame/validation/many_actors.py	/^plotter = pv.Plotter()$/;"	v
plotter	pyvista/demos/logo.py	/^    plotter = pyvista.Plotter(window_size=window_size, off_screen=off_screen)$/;"	v
plotter	tests/plotting/test_plotter.py	/^    from pyvista.plotting import plotter$/;"	i
plotter	tests/plotting/test_widgets.py	/^    def plotter(self):$/;"	m	class:Test_event_parser
plotter_kwargs	build/lib/pyvista/plotting/helpers.py	/^        plotter_kwargs = {}$/;"	v
plotter_kwargs	pyvista/plotting/helpers.py	/^        plotter_kwargs = {}$/;"	v
plotter_ui	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	build/lib/pyvista/trame/ui/__init__.py	/^def plotter_ui($/;"	f
plotter_ui	examples_trame/advanced/contour.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	examples_trame/basic/actor_color.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	examples_trame/basic/algorithm.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	examples_trame/basic/file_viewer.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	examples_trame/basic/mesh_scalars.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	examples_trame/basic/multi_views.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	examples_trame/basic/ui_template.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	examples_trame/validation/many_actors.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	pyvista/trame/__init__.py	/^from pyvista.trame.ui import plotter_ui$/;"	i
plotter_ui	pyvista/trame/ui/__init__.py	/^def plotter_ui($/;"	f
plotter_ui	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui import plotter_ui$/;"	i
plotting	build/lib/pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
plotting	pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
plotting	tests/plotting/test_plotting.py	/^    from pyvista.plotting import plotting$/;"	i
plotting	tests/plotting/test_plotting.py	/^import pyvista.plotting.text$/;"	i
plotting	tests/plotting/test_theme.py	/^import pyvista.plotting$/;"	i
plt	build/lib/pyvista/core/filters/data_set.py	/^        from matplotlib import pyplot as plt$/;"	i
plt	build/lib/pyvista/plotting/charts.py	/^import matplotlib.pyplot as plt$/;"	i
plt	build/lib/pyvista/plotting/colors.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/00-load/create_structured_surface.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/00-load/create_surface_draped.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/01-filter/slicing.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/02-plot/chart_basics.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/02-plot/chart_overlays.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/02-plot/cmap.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/02-plot/image_depth.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/02-plot/opacity.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/02-plot/screenshot.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/02-plot/topo_map.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples/99-advanced/fea_hertzian_contact_pressure.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples_trame/advanced/custom_ui.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples_trame/basic/PyVistaRemoteLocalView.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples_trame/basic/PyVistaRemoteView.py	/^import matplotlib.pyplot as plt$/;"	i
plt	examples_trame/basic/ui_template.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pyvista/core/filters/data_set.py	/^        from matplotlib import pyplot as plt$/;"	i
plt	pyvista/plotting/charts.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pyvista/plotting/colors.py	/^import matplotlib.pyplot as plt$/;"	i
plt	tests/plotting/test_charts.py	/^    import matplotlib.pyplot as plt$/;"	i
plt	tests/plotting/test_plotting.py	/^    import matplotlib.pyplot as plt$/;"	i
pltr	examples/02-plot/moving_cmap.py	/^pltr = pv.Plotter(window_size=[512, 512])$/;"	v
pluckerconoid	examples/00-load/create_parametric_geometric_objects.py	/^pluckerconoid = pv.ParametricPluckerConoid()$/;"	v
plugin	build/lib/pyvista/typing/mypy_plugin.py	/^    def plugin(version: str) -> type[_PyVistaPlugin]:  # numpydoc ignore: RT01$/;"	f	function:promote_type
plugin	pyvista/typing/mypy_plugin.py	/^    def plugin(version: str) -> type[_PyVistaPlugin]:  # numpydoc ignore: RT01$/;"	f	function:promote_type
pluto	examples/99-advanced/planets.py	/^pluto = examples.planets.load_pluto(radius=1151.0)$/;"	v
pluto_texture	examples/99-advanced/planets.py	/^pluto_texture = examples.planets.download_pluto_surface(texture=True)$/;"	v
png_file	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^            png_file = figure_list[i][:-5] + 'png'$/;"	v
png_file	pyvista/plotting/utilities/sphinx_gallery.py	/^            png_file = figure_list[i][:-5] + 'png'$/;"	v
point	build/lib/pyvista/core/utilities/transform.py	/^    def point(self: Transform) -> tuple[float, float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:Transform
point	build/lib/pyvista/core/utilities/transform.py	/^    def point(self: Transform, point: VectorLike[float] | None) -> None:$/;"	m	class:Transform
point	examples/00-load/wrap_trimesh.py	/^point = vtk.vtkPolyData()$/;"	v
point	examples/01-filter/slicing.py	/^point = np.array(model.center) - ranges * 0.25$/;"	v
point	examples/02-plot/distance_along_spline.py	/^    point = get_point_along_spline(dist)$/;"	v
point	examples/99-advanced/ray_trace_moeller.py	/^    point = tri.points[0] * a + tri.points[1] * b + tri.points[2] * c$/;"	v
point	pyvista/core/utilities/transform.py	/^    def point(self: Transform) -> tuple[float, float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:Transform
point	pyvista/core/utilities/transform.py	/^    def point(self: Transform, point: VectorLike[float] | None) -> None:$/;"	m	class:Transform
point_a	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def point_a(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
point_a	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def point_a(self: PlaneSource, point_a: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
point_a	pyvista/core/utilities/geometric_sources.py	/^    def point_a(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
point_a	pyvista/core/utilities/geometric_sources.py	/^    def point_a(self: PlaneSource, point_a: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
point_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import point_array as point_array$/;"	i
point_array	build/lib/pyvista/core/utilities/arrays.py	/^def point_array(obj: DataSet | _vtk.vtkDataSet, name: str) -> pyvista_ndarray | None:$/;"	f
point_array	build/lib/pyvista/plotting/utilities/regression.py	/^from pyvista.core.utilities.arrays import point_array$/;"	i
point_array	pyvista/core/utilities/__init__.py	/^from .arrays import point_array as point_array$/;"	i
point_array	pyvista/core/utilities/arrays.py	/^def point_array(obj: DataSet | _vtk.vtkDataSet, name: str) -> pyvista_ndarray | None:$/;"	f
point_array	pyvista/plotting/utilities/regression.py	/^from pyvista.core.utilities.arrays import point_array$/;"	i
point_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def point_array_names(self):$/;"	m	class:ExodusIIReader
point_array_names	build/lib/pyvista/core/utilities/reader.py	/^    def point_array_names(self):$/;"	m	class:PointCellDataSelection
point_array_names	pyvista/core/utilities/reader.py	/^    def point_array_names(self):$/;"	m	class:ExodusIIReader
point_array_names	pyvista/core/utilities/reader.py	/^    def point_array_names(self):$/;"	m	class:PointCellDataSelection
point_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def point_array_status(self, name):$/;"	m	class:ExodusIIReader
point_array_status	build/lib/pyvista/core/utilities/reader.py	/^    def point_array_status(self, name):$/;"	m	class:PointCellDataSelection
point_array_status	pyvista/core/utilities/reader.py	/^    def point_array_status(self, name):$/;"	m	class:ExodusIIReader
point_array_status	pyvista/core/utilities/reader.py	/^    def point_array_status(self, name):$/;"	m	class:PointCellDataSelection
point_b	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def point_b(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
point_b	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def point_b(self: PlaneSource, point_b: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
point_b	pyvista/core/utilities/geometric_sources.py	/^    def point_b(self: PlaneSource) -> tuple[float, float, float]:$/;"	m	class:PlaneSource
point_b	pyvista/core/utilities/geometric_sources.py	/^    def point_b(self: PlaneSource, point_b: VectorLike[float]) -> None:$/;"	m	class:PlaneSource
point_cell_ids	build/lib/pyvista/core/dataset.py	/^    def point_cell_ids(self: Self, ind: int) -> list[int]:$/;"	m	class:DataSet
point_cell_ids	pyvista/core/dataset.py	/^    def point_cell_ids(self: Self, ind: int) -> list[int]:$/;"	m	class:DataSet
point_cloud	examples/00-load/create_point_cloud.py	/^point_cloud = pv.PolyData(points)$/;"	v
point_cloud	examples/02-plot/edl.py	/^point_cloud = examples.download_lidar()$/;"	v
point_cloud	examples/98-common/project_points_tessellate.py	/^point_cloud = rng.random((num_points, 3))$/;"	v
point_cloud	examples/99-advanced/atomic_orbitals.py	/^point_cloud = pv.PolyData(points)$/;"	v
point_cloud_colors	tests/core/test_dataset_filters.py	/^def point_cloud_colors():$/;"	f
point_cloud_colors_duplicates	tests/core/test_dataset_filters.py	/^def point_cloud_colors_duplicates(point_cloud_colors):$/;"	f
point_data	build/lib/pyvista/core/dataset.py	/^    def point_data(self: Self) -> DataSetAttributes:$/;"	m	class:DataSet
point_data	pyvista/core/dataset.py	/^    def point_data(self: Self) -> DataSetAttributes:$/;"	m	class:DataSet
point_data_to_cell_data	build/lib/pyvista/core/filters/data_object.py	/^    def point_data_to_cell_data(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
point_data_to_cell_data	build/lib/pyvista/core/pointset.py	/^    def point_data_to_cell_data(self, *args, **kwargs):$/;"	m	class:PointSet
point_data_to_cell_data	pyvista/core/filters/data_object.py	/^    def point_data_to_cell_data(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
point_data_to_cell_data	pyvista/core/pointset.py	/^    def point_data_to_cell_data(self, *args, **kwargs):$/;"	m	class:PointSet
point_data_to_cell_data_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import point_data_to_cell_data_algorithm as point_data_to_cell_data_algorithm$/;"	i
point_data_to_cell_data_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def point_data_to_cell_data_algorithm(inp, pass_point_data: bool = False):$/;"	f
point_data_to_cell_data_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import point_data_to_cell_data_algorithm as point_data_to_cell_data_algorithm$/;"	i
point_data_to_cell_data_algorithm	pyvista/plotting/utilities/algorithms.py	/^def point_data_to_cell_data_algorithm(inp, pass_point_data: bool = False):$/;"	f
point_dtype	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def point_dtype(self: CubeSource) -> str:$/;"	m	class:CubeSource
point_dtype	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def point_dtype(self: CubeSource, point_dtype: str) -> None:$/;"	m	class:CubeSource
point_dtype	pyvista/core/utilities/geometric_sources.py	/^    def point_dtype(self: CubeSource) -> str:$/;"	m	class:CubeSource
point_dtype	pyvista/core/utilities/geometric_sources.py	/^    def point_dtype(self: CubeSource, point_dtype: str) -> None:$/;"	m	class:CubeSource
point_ids	build/lib/pyvista/core/cell.py	/^    def point_ids(self: Self) -> list[int]:$/;"	m	class:Cell
point_ids	pyvista/core/cell.py	/^    def point_ids(self: Self) -> list[int]:$/;"	m	class:Cell
point_is_inside_cell	build/lib/pyvista/core/dataset.py	/^    def point_is_inside_cell($/;"	m	class:DataSet
point_is_inside_cell	build/lib/pyvista/core/pointset.py	/^    def point_is_inside_cell(self, *args, **kwargs):$/;"	m	class:PointSet
point_is_inside_cell	pyvista/core/dataset.py	/^    def point_is_inside_cell($/;"	m	class:DataSet
point_is_inside_cell	pyvista/core/pointset.py	/^    def point_is_inside_cell(self, *args, **kwargs):$/;"	m	class:PointSet
point_mesh	examples/01-filter/interpolate_sample.py	/^point_mesh = pv.PolyData(points)$/;"	v
point_neighbors	build/lib/pyvista/core/dataset.py	/^    def point_neighbors(self: Self, ind: int) -> list[int]:$/;"	m	class:DataSet
point_neighbors	pyvista/core/dataset.py	/^    def point_neighbors(self: Self, ind: int) -> list[int]:$/;"	m	class:DataSet
point_neighbors_levels	build/lib/pyvista/core/dataset.py	/^    def point_neighbors_levels($/;"	m	class:DataSet
point_neighbors_levels	pyvista/core/dataset.py	/^    def point_neighbors_levels($/;"	m	class:DataSet
point_normals	build/lib/pyvista/core/pointset.py	/^    def point_normals(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
point_normals	pyvista/core/pointset.py	/^    def point_normals(self) -> pyvista.pyvista_ndarray:  # numpydoc ignore=RT01$/;"	m	class:PolyData
point_size	build/lib/pyvista/demos/logo.py	/^        point_size=14,$/;"	v
point_size	build/lib/pyvista/plotting/_property.py	/^    def point_size(self):  # numpydoc ignore=RT01$/;"	m	class:Property
point_size	build/lib/pyvista/plotting/_property.py	/^    def point_size(self, new_size):$/;"	m	class:Property
point_size	build/lib/pyvista/plotting/themes.py	/^    def point_size(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
point_size	build/lib/pyvista/plotting/themes.py	/^    def point_size(self, point_size: float):$/;"	m	class:Theme
point_size	examples/00-load/create_kochanek_spline.py	/^        point_size=10,$/;"	v
point_size	examples/00-load/wrap_trimesh.py	/^    point_size=50,$/;"	v
point_size	examples/01-filter/cell_centers.py	/^    point_size=20,$/;"	v
point_size	examples/01-filter/extrude_rotate.py	/^    point_size=10,$/;"	v
point_size	examples/01-filter/image_representations.py	/^    point_size=20,$/;"	v
point_size	examples/02-plot/distance_along_spline.py	/^    point_size=20,$/;"	v
point_size	examples/02-plot/point_clouds.py	/^    point_size=10,$/;"	v
point_size	examples/02-plot/point_clouds.py	/^    point_size=20,$/;"	v
point_size	examples/02-plot/point_clouds.py	/^    point_size=4.0,$/;"	v
point_size	examples/02-plot/vertices.py	/^    point_size=10,$/;"	v
point_size	examples/98-common/project_points_tessellate.py	/^    point_size=10,$/;"	v
point_size	examples/99-advanced/atomic_orbitals.py	/^    point_size=3,$/;"	v
point_size	pyvista/demos/logo.py	/^        point_size=14,$/;"	v
point_size	pyvista/plotting/_property.py	/^    def point_size(self):  # numpydoc ignore=RT01$/;"	m	class:Property
point_size	pyvista/plotting/_property.py	/^    def point_size(self, new_size):$/;"	m	class:Property
point_size	pyvista/plotting/themes.py	/^    def point_size(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
point_size	pyvista/plotting/themes.py	/^    def point_size(self, point_size: float):$/;"	m	class:Theme
pointa	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def pointa(self: LineSource) -> tuple[float, float, float]:$/;"	m	class:LineSource
pointa	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def pointa(self: LineSource, pointa: VectorLike[float]) -> None:$/;"	m	class:LineSource
pointa	examples/00-load/create_parametric_geometric_objects.py	/^pointa = [-1, 0, 0]$/;"	v
pointa	examples/01-filter/streamlines_2D.py	/^    pointa=(0, -5, 0),$/;"	v
pointa	examples/03-widgets/multi_slider_widget.py	/^    pointa=(0.025, 0.1),$/;"	v	class:MyCustomRoutine
pointa	examples/03-widgets/multi_slider_widget.py	/^    pointa=(0.35, 0.1),$/;"	v
pointa	examples/03-widgets/multi_slider_widget.py	/^    pointa=(0.67, 0.1),$/;"	v
pointa	pyvista/core/utilities/geometric_sources.py	/^    def pointa(self: LineSource) -> tuple[float, float, float]:$/;"	m	class:LineSource
pointa	pyvista/core/utilities/geometric_sources.py	/^    def pointa(self: LineSource, pointa: VectorLike[float]) -> None:$/;"	m	class:LineSource
pointb	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def pointb(self: LineSource) -> tuple[float, float, float]:$/;"	m	class:LineSource
pointb	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def pointb(self: LineSource, pointb: VectorLike[float]) -> None:$/;"	m	class:LineSource
pointb	examples/00-load/create_parametric_geometric_objects.py	/^pointb = [0, 1, 0]$/;"	v
pointb	examples/00-load/create_parametric_geometric_objects.py	/^pointb = [1, 0, 0]$/;"	v
pointb	examples/01-filter/streamlines_2D.py	/^    pointb=(0, 5, 0),$/;"	v
pointb	examples/03-widgets/multi_slider_widget.py	/^    pointb=(0.31, 0.1),$/;"	v	class:MyCustomRoutine
pointb	examples/03-widgets/multi_slider_widget.py	/^    pointb=(0.64, 0.1),$/;"	v
pointb	examples/03-widgets/multi_slider_widget.py	/^    pointb=(0.98, 0.1),$/;"	v
pointb	pyvista/core/utilities/geometric_sources.py	/^    def pointb(self: LineSource) -> tuple[float, float, float]:$/;"	m	class:LineSource
pointb	pyvista/core/utilities/geometric_sources.py	/^    def pointb(self: LineSource, pointb: VectorLike[float]) -> None:$/;"	m	class:LineSource
points	build/lib/pyvista/core/cell.py	/^    def points(self: Self) -> NumpyArray[float]:$/;"	m	class:Cell
points	build/lib/pyvista/core/dataset.py	/^    def points(self: Self) -> pyvista_ndarray:$/;"	m	class:DataSet
points	build/lib/pyvista/core/dataset.py	/^    def points(self: Self, points: MatrixLike[float] | _vtk.vtkPoints) -> None:$/;"	m	class:DataSet
points	build/lib/pyvista/core/grid.py	/^    def points($/;"	m	class:ImageData
points	build/lib/pyvista/core/grid.py	/^    def points($/;"	m	class:RectilinearGrid
points	build/lib/pyvista/core/grid.py	/^    def points(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
points	build/lib/pyvista/core/grid.py	/^    def points(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
points	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def points(self: MultipleLinesSource) -> NumpyArray[float]:$/;"	m	class:MultipleLinesSource
points	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def points(self: MultipleLinesSource, points: MatrixLike[float] | VectorLike[float]) -> None:$/;"	m	class:MultipleLinesSource
points	examples/00-load/create_kochanek_spline.py	/^points = make_points()$/;"	v
points	examples/00-load/create_point_cloud.py	/^points = generate_points()$/;"	v
points	examples/00-load/create_point_cloud.py	/^points = rng.random((100, 3))$/;"	v
points	examples/00-load/create_poly.py	/^points = np.array($/;"	v
points	examples/00-load/create_polydata_strips.py	/^points = np.array($/;"	v
points	examples/00-load/create_polyhedron.py	/^points = quad_points + polygon_points + hexa_points + polyhedron_points$/;"	v
points	examples/00-load/create_sphere.py	/^points = np.append(points, [[0.0, 0.0, -radius]], axis=0)$/;"	v
points	examples/00-load/create_sphere.py	/^points = np.insert(points, 0, [0.0, 0.0, radius], axis=0)$/;"	v
points	examples/00-load/create_sphere.py	/^points = np.vstack((x.ravel(), y.ravel(), z.ravel())).transpose()$/;"	v
points	examples/00-load/create_spline.py	/^points = make_points()$/;"	v
points	examples/00-load/create_structured_surface.py	/^points = make_point_set()$/;"	v
points	examples/00-load/create_surface_draped.py	/^points = np.repeat(path, nsamples, axis=0)$/;"	v
points	examples/00-load/create_tri_surface.py	/^points = np.c_[xx.reshape(-1), yy.reshape(-1), zz.reshape(-1)]$/;"	v
points	examples/00-load/create_tri_surface.py	/^points = np.column_stack((xx.ravel(order='F'), yy.ravel(order='F'), zz.ravel(order='F')))$/;"	v
points	examples/00-load/create_unstructured_surface.py	/^points = np.array($/;"	v
points	examples/00-load/create_unstructured_surface.py	/^points = np.vstack((cell1, cell2)).astype(float)$/;"	v
points	examples/00-load/linear_cells.py	/^points = [$/;"	v
points	examples/00-load/wrap_trimesh.py	/^points = [[0, 0, 0], [0, 0, 1], [0, 1, 0]]$/;"	v
points	examples/00-load/wrap_trimesh.py	/^points = rng.random((30, 3))$/;"	v
points	examples/00-load/wrap_trimesh.py	/^points = vtk.vtkPoints()$/;"	v
points	examples/01-filter/cell_centers.py	/^points = grid.cell_centers().points$/;"	v
points	examples/01-filter/decimate.py	/^points = np.zeros((n_points, 3))$/;"	v
points	examples/01-filter/interpolate.py	/^points = examples.download_sparse_points()$/;"	v
points	examples/01-filter/interpolate_sample.py	/^points = np.hstack((points, np.zeros((250, 1))))$/;"	v
points	examples/01-filter/interpolate_sample.py	/^points = rng.uniform(low=[0, 0], high=[3, 1], size=(250, 2))$/;"	v
points	examples/01-filter/slicing.py	/^points = np.c_[x, y, zo]$/;"	v
points	examples/01-filter/surface_reconstruction.py	/^points = pv.wrap(pv.Sphere().points)$/;"	v
points	examples/02-plot/distance_along_spline.py	/^points = np.column_stack((x, y, z))$/;"	v
points	examples/02-plot/labels.py	/^points = grid.points$/;"	v
points	examples/02-plot/point_clouds.py	/^points = rng.random((1000, 3))$/;"	v
points	examples/03-widgets/sphere_widget.py	/^points = np.array([[33, 25, 45], [70, 80, 13], [51, 57, 10], [25, 69, 20]])$/;"	v
points	examples/03-widgets/spline_widget.py	/^points = np.array($/;"	v
points	examples/99-advanced/atomic_orbitals.py	/^points = hydro_orbital.points[indices]$/;"	v
points	examples/99-advanced/openfoam_cooling.py	/^points = []$/;"	v
points	examples/99-advanced/openfoam_cooling.py	/^points = pv.PointSet(points)$/;"	v
points	examples/99-advanced/ray_trace_moeller.py	/^points = np.array([[0, 0, 0], [0, 1, 0], [1, 0, 0]])$/;"	v
points	pyvista/core/cell.py	/^    def points(self: Self) -> NumpyArray[float]:$/;"	m	class:Cell
points	pyvista/core/dataset.py	/^    def points(self: Self) -> pyvista_ndarray:$/;"	m	class:DataSet
points	pyvista/core/dataset.py	/^    def points(self: Self, points: MatrixLike[float] | _vtk.vtkPoints) -> None:$/;"	m	class:DataSet
points	pyvista/core/grid.py	/^    def points($/;"	m	class:ImageData
points	pyvista/core/grid.py	/^    def points($/;"	m	class:RectilinearGrid
points	pyvista/core/grid.py	/^    def points(self: Self) -> NumpyArray[float]:$/;"	m	class:ImageData
points	pyvista/core/grid.py	/^    def points(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
points	pyvista/core/utilities/geometric_sources.py	/^    def points(self: MultipleLinesSource) -> NumpyArray[float]:$/;"	m	class:MultipleLinesSource
points	pyvista/core/utilities/geometric_sources.py	/^    def points(self: MultipleLinesSource, points: MatrixLike[float] | VectorLike[float]) -> None:$/;"	m	class:MultipleLinesSource
points	tests/test_meshio.py	/^    points=[$/;"	v
points	tests/test_meshio.py	/^    points=[[0.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 1.0]],$/;"	v
points_image	examples/01-filter/image_representations.py	/^points_image = pv.ImageData(dimensions=(4, 4, 1))$/;"	v
points_ithresh	examples/01-filter/image_representations.py	/^points_ithresh = points_volume.image_threshold(2)$/;"	v
points_ithresh_as_cells	examples/01-filter/image_representations.py	/^points_ithresh_as_cells = points_ithresh.points_to_cells()$/;"	v
points_matrix	build/lib/pyvista/core/pointset.py	/^    def points_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
points_matrix	pyvista/core/pointset.py	/^    def points_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
points_only	tests/test_meshio.py	/^points_only = cow.copy()$/;"	v
points_override	build/lib/pyvista/core/celltype.py	/^        points_override='variable',$/;"	v	class:_CellTypeTuple
points_override	pyvista/core/celltype.py	/^        points_override='variable',$/;"	v	class:_CellTypeTuple
points_thresh	examples/01-filter/image_representations.py	/^points_thresh = points_volume.threshold(2)$/;"	v
points_to_cells	build/lib/pyvista/core/filters/image_data.py	/^    def points_to_cells(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
points_to_cells	pyvista/core/filters/image_data.py	/^    def points_to_cells(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
points_to_double	build/lib/pyvista/core/pointset.py	/^    def points_to_double(self) -> _PointSet:$/;"	m	class:_PointSet
points_to_double	pyvista/core/pointset.py	/^    def points_to_double(self) -> _PointSet:$/;"	m	class:_PointSet
points_to_label	examples/00-load/create_sphere.py	/^points_to_label = tuple(range(ntheta * 2 + 1))$/;"	v
points_to_label	examples/00-load/create_sphere.py	/^points_to_label = tuple(range(ntheta + 1))$/;"	v
points_volume	examples/01-filter/image_representations.py	/^points_volume = pv.ImageData(dimensions=(2, 2, 2))$/;"	v
pointset	tests/conftest.py	/^def pointset():$/;"	f
pointset_to_polydata_algorithm	build/lib/pyvista/plotting/plotter.py	/^from .utilities.algorithms import pointset_to_polydata_algorithm$/;"	i
pointset_to_polydata_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import pointset_to_polydata_algorithm as pointset_to_polydata_algorithm$/;"	i
pointset_to_polydata_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def pointset_to_polydata_algorithm(inp):$/;"	f
pointset_to_polydata_algorithm	build/lib/pyvista/plotting/widgets.py	/^from .utilities.algorithms import pointset_to_polydata_algorithm$/;"	i
pointset_to_polydata_algorithm	pyvista/plotting/plotter.py	/^from .utilities.algorithms import pointset_to_polydata_algorithm$/;"	i
pointset_to_polydata_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import pointset_to_polydata_algorithm as pointset_to_polydata_algorithm$/;"	i
pointset_to_polydata_algorithm	pyvista/plotting/utilities/algorithms.py	/^def pointset_to_polydata_algorithm(inp):$/;"	f
pointset_to_polydata_algorithm	pyvista/plotting/widgets.py	/^from .utilities.algorithms import pointset_to_polydata_algorithm$/;"	i
pointset_to_polydata_algorithm	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import pointset_to_polydata_algorithm  # noqa: F401$/;"	i
pointsetmark	tests/core/test_grid.py	/^pointsetmark = pytest.mark.skipif($/;"	v
poked_subplot	build/lib/pyvista/plotting/render_window_interactor.py	/^    def poked_subplot(self):$/;"	m	class:RenderWindowInteractor
poked_subplot	pyvista/plotting/render_window_interactor.py	/^    def poked_subplot(self):$/;"	m	class:RenderWindowInteractor
polar	examples/02-plot/plot_over_circular_arc.py	/^polar = [bnds.x_min, bnds.y_min, bnds.z_max]$/;"	v
polar2cart	tests/core/test_utilities.py	/^    def polar2cart(r, phi, theta):$/;"	f	function:test_cartesian_to_spherical
poly	examples/00-load/create_geometric_objects.py	/^poly = pv.Polygon()$/;"	v
poly	examples/00-load/create_parametric_geometric_objects.py	/^poly = arc.extrude([0, 0, 1])$/;"	v
poly	examples/01-filter/extrude_rotate.py	/^poly = line.extrude_rotate(resolution=resolution)$/;"	v
poly	examples/01-filter/project_plane.py	/^poly = examples.load_random_hills()$/;"	v
poly	examples/02-plot/labels.py	/^poly = pv.PolyData(rng.random((10, 3)))$/;"	v
poly_circle	tests/core/test_polydata_filters.py	/^def poly_circle():$/;"	f
poly_data	tests/core/test_polydata_filters.py	/^    from pyvista.core.filters import poly_data$/;"	i
poly_object	examples/99-advanced/extending_pyvista.py	/^poly_object = pyvista.PolyData(vtk.vtkPolyData())$/;"	v
poly_source	examples/99-advanced/plotting_algorithms.py	/^poly_source = vtk.vtkRegularPolygonSource()$/;"	v
polydata	examples/98-common/project_points_tessellate.py	/^polydata = pv.PolyData(projected_points)$/;"	v
polygon	examples/00-load/create_polyhedron.py	/^polygon = [5, 4, 5, 6, 7, 8]$/;"	v
polygon	examples/00-load/create_tri_surface.py	/^polygon = pv.PolyData()$/;"	v
polygon_points	examples/00-load/create_polyhedron.py	/^polygon_points = [$/;"	v
polyhedron	examples/00-load/create_polyhedron.py	/^polyhedron = [len(polyhedron_connectivity), *polyhedron_connectivity]$/;"	v
polyhedron	tests/test_meshio.py	/^polyhedron = meshio.Mesh($/;"	v
polyhedron_connectivity	examples/00-load/create_polyhedron.py	/^polyhedron_connectivity = [$/;"	v
polyhedron_points	examples/00-load/create_polyhedron.py	/^polyhedron_points = [$/;"	v
polyline	examples/00-load/create_spline.py	/^polyline = polyline_from_points(points)$/;"	v
polyline_from_points	examples/00-load/create_spline.py	/^def polyline_from_points(points):$/;"	f
pooch	build/lib/pyvista/examples/downloads.py	/^import pooch$/;"	i
pooch	build/lib/pyvista/examples/gltf.py	/^import pooch$/;"	i
pooch	pyvista/examples/downloads.py	/^import pooch$/;"	i
pooch	pyvista/examples/gltf.py	/^import pooch$/;"	i
pop	build/lib/pyvista/core/composite.py	/^    def pop(self: MultiBlock, index: int | str = -1) -> _TypeMultiBlockLeaf:$/;"	m	class:MultiBlock
pop	build/lib/pyvista/core/datasetattributes.py	/^    def pop(self: Self, key: str, default: pyvista_ndarray | T = _SENTINEL) -> pyvista_ndarray | T:$/;"	m	class:DataSetAttributes
pop	build/lib/pyvista/core/objects.py	/^    def pop(self, name):$/;"	m	class:Table
pop	build/lib/pyvista/core/partitioned.py	/^    def pop(self, index: int = -1) -> None:  # numpydoc ignore=PR01$/;"	m	class:PartitionedDataSet
pop	build/lib/pyvista/core/utilities/arrays.py	/^    def pop(self: _SerializedDictArray, __key: Any) -> Any:  # type: ignore[override]  # noqa: PYI063$/;"	m	class:_SerializedDictArray
pop	pyvista/core/composite.py	/^    def pop(self: MultiBlock, index: int | str = -1) -> _TypeMultiBlockLeaf:$/;"	m	class:MultiBlock
pop	pyvista/core/datasetattributes.py	/^    def pop(self: Self, key: str, default: pyvista_ndarray | T = _SENTINEL) -> pyvista_ndarray | T:$/;"	m	class:DataSetAttributes
pop	pyvista/core/objects.py	/^    def pop(self, name):$/;"	m	class:Table
pop	pyvista/core/partitioned.py	/^    def pop(self, index: int = -1) -> None:  # numpydoc ignore=PR01$/;"	m	class:PartitionedDataSet
pop	pyvista/core/utilities/arrays.py	/^    def pop(self: _SerializedDictArray, __key: Any) -> Any:  # type: ignore[override]  # noqa: PYI063$/;"	m	class:_SerializedDictArray
popitem	build/lib/pyvista/core/utilities/arrays.py	/^    def popitem(self: _SerializedDictArray) -> Any:$/;"	m	class:_SerializedDictArray
popitem	pyvista/core/utilities/arrays.py	/^    def popitem(self: _SerializedDictArray) -> Any:$/;"	m	class:_SerializedDictArray
pos	examples/02-plot/points_gaussian_scale.py	/^pos = np.zeros((N_SPHERES, 3))$/;"	v
position	build/lib/pyvista/plotting/camera.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
position	build/lib/pyvista/plotting/camera.py	/^    def position(self, value):$/;"	m	class:Camera
position	build/lib/pyvista/plotting/charts.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
position	build/lib/pyvista/plotting/charts.py	/^    def position(self, val):$/;"	m	class:ChartMPL
position	build/lib/pyvista/plotting/lights.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:Light
position	build/lib/pyvista/plotting/lights.py	/^    def position(self, pos):$/;"	m	class:Light
position	build/lib/pyvista/plotting/prop3d.py	/^    def position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
position	build/lib/pyvista/plotting/prop3d.py	/^    def position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
position	build/lib/pyvista/plotting/prop3d.py	/^    def position(self, position: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
position	build/lib/pyvista/plotting/prop3d.py	/^    def position(self, value: VectorLike[float]) -> None:$/;"	m	class:Prop3D
position	build/lib/pyvista/plotting/renderer.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
position	build/lib/pyvista/plotting/renderer.py	/^    def position(self, value) -> None:$/;"	m	class:CameraPosition
position	build/lib/pyvista/plotting/text.py	/^    def position(self):$/;"	m	class:Text
position	build/lib/pyvista/plotting/text.py	/^    def position(self, position: Sequence[float]):$/;"	m	class:Text
position	build/lib/pyvista/plotting/themes.py	/^    def position(self) -> VectorLike[float]:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
position	build/lib/pyvista/plotting/themes.py	/^    def position(self, position: VectorLike[float]):$/;"	m	class:_CameraConfig
position	examples/04-lights/actors.py	/^    position = rot120 @ position$/;"	v
position	examples/04-lights/actors.py	/^position = (-1.5, -1.5, 3)$/;"	v
position	examples/04-lights/shadows.py	/^    position=(0, 0, 0),$/;"	v
position	examples/04-lights/shadows.py	/^    position=(0, 0.2, 1.0),$/;"	v
position	examples/04-lights/shadows.py	/^    position=(0, 1.0, 1.0),$/;"	v
position	pyvista/plotting/camera.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
position	pyvista/plotting/camera.py	/^    def position(self, value):$/;"	m	class:Camera
position	pyvista/plotting/charts.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
position	pyvista/plotting/charts.py	/^    def position(self, val):$/;"	m	class:ChartMPL
position	pyvista/plotting/lights.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:Light
position	pyvista/plotting/lights.py	/^    def position(self, pos):$/;"	m	class:Light
position	pyvista/plotting/prop3d.py	/^    def position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
position	pyvista/plotting/prop3d.py	/^    def position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
position	pyvista/plotting/prop3d.py	/^    def position(self, position: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
position	pyvista/plotting/prop3d.py	/^    def position(self, value: VectorLike[float]) -> None:$/;"	m	class:Prop3D
position	pyvista/plotting/renderer.py	/^    def position(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
position	pyvista/plotting/renderer.py	/^    def position(self, value) -> None:$/;"	m	class:CameraPosition
position	pyvista/plotting/text.py	/^    def position(self):$/;"	m	class:Text
position	pyvista/plotting/text.py	/^    def position(self, position: Sequence[float]):$/;"	m	class:Text
position	pyvista/plotting/themes.py	/^    def position(self) -> VectorLike[float]:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
position	pyvista/plotting/themes.py	/^    def position(self, position: VectorLike[float]):$/;"	m	class:_CameraConfig
position	tests/plotting/test_plotting.py	/^    position=dict(position=POSITION),$/;"	v
position_x	build/lib/pyvista/plotting/themes.py	/^    def position_x(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
position_x	build/lib/pyvista/plotting/themes.py	/^    def position_x(self, position_x: float):$/;"	m	class:_ColorbarConfig
position_x	pyvista/plotting/themes.py	/^    def position_x(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
position_x	pyvista/plotting/themes.py	/^    def position_x(self, position_x: float):$/;"	m	class:_ColorbarConfig
position_y	build/lib/pyvista/plotting/themes.py	/^    def position_y(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
position_y	build/lib/pyvista/plotting/themes.py	/^    def position_y(self, position_y: float):$/;"	m	class:_ColorbarConfig
position_y	pyvista/plotting/themes.py	/^    def position_y(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
position_y	pyvista/plotting/themes.py	/^    def position_y(self, position_y: float):$/;"	m	class:_ColorbarConfig
positional	build/lib/pyvista/plotting/lights.py	/^    def positional(self):  # numpydoc ignore=RT01$/;"	m	class:Light
positional	build/lib/pyvista/plotting/lights.py	/^    def positional(self, state):$/;"	m	class:Light
positional	examples/04-lights/shadows.py	/^    positional=True,$/;"	v
positional	pyvista/plotting/lights.py	/^    def positional(self):  # numpydoc ignore=RT01$/;"	m	class:Light
positional	pyvista/plotting/lights.py	/^    def positional(self, state):$/;"	m	class:Light
post_multiply	build/lib/pyvista/core/utilities/transform.py	/^    def post_multiply(self: Transform) -> Transform:  # numpydoc ignore=RT01$/;"	m	class:Transform
post_multiply	pyvista/core/utilities/transform.py	/^    def post_multiply(self: Transform) -> Transform:  # numpydoc ignore=RT01$/;"	m	class:Transform
pragma	build/lib/pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
pragma	pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
pre_multiply	build/lib/pyvista/core/utilities/transform.py	/^    def pre_multiply(self: Transform) -> Transform:  # numpydoc ignore=RT01$/;"	m	class:Transform
pre_multiply	pyvista/core/utilities/transform.py	/^    def pre_multiply(self: Transform) -> Transform:  # numpydoc ignore=RT01$/;"	m	class:Transform
prepare_smooth_shading	build/lib/pyvista/plotting/_plotting.py	/^def prepare_smooth_shading(mesh, scalars, texture, split_sharp_edges, feature_angle, preference):$/;"	f
prepare_smooth_shading	build/lib/pyvista/plotting/plotter.py	/^from ._plotting import prepare_smooth_shading$/;"	i
prepare_smooth_shading	pyvista/plotting/_plotting.py	/^def prepare_smooth_shading(mesh, scalars, texture, split_sharp_edges, feature_angle, preference):$/;"	f
prepare_smooth_shading	pyvista/plotting/plotter.py	/^from ._plotting import prepare_smooth_shading$/;"	i
preserve_intermediate_functions	build/lib/pyvista/core/utilities/reader.py	/^    def preserve_intermediate_functions(self):$/;"	m	class:MultiBlockPlot3DReader
preserve_intermediate_functions	build/lib/pyvista/core/utilities/reader.py	/^    def preserve_intermediate_functions(self, val) -> None:$/;"	m	class:MultiBlockPlot3DReader
preserve_intermediate_functions	pyvista/core/utilities/reader.py	/^    def preserve_intermediate_functions(self):$/;"	m	class:MultiBlockPlot3DReader
preserve_intermediate_functions	pyvista/core/utilities/reader.py	/^    def preserve_intermediate_functions(self, val) -> None:$/;"	m	class:MultiBlockPlot3DReader
primary	doc/source/make_tables.py	/^        primary = auto()$/;"	v	class:_BaseDatasetBadge.SemanticColorEnum
principal_axes	build/lib/pyvista/core/utilities/__init__.py	/^from .points import principal_axes as principal_axes$/;"	i
principal_axes	build/lib/pyvista/core/utilities/points.py	/^def principal_axes($/;"	f
principal_axes	build/lib/pyvista/core/utilities/points.py	/^def principal_axes(points: MatrixLike[float]) -> NumpyArray[float]: ...$/;"	f
principal_axes	pyvista/core/utilities/__init__.py	/^from .points import principal_axes as principal_axes$/;"	i
principal_axes	pyvista/core/utilities/points.py	/^def principal_axes($/;"	f
principal_axes	pyvista/core/utilities/points.py	/^def principal_axes(points: MatrixLike[float]) -> NumpyArray[float]: ...$/;"	f
principal_axes	tests/core/test_utilities.py	/^from pyvista.core.utilities import principal_axes$/;"	i
pro_decimated	examples/01-filter/decimate.py	/^pro_decimated = mesh.decimate_pro(target_reduction, preserve_topology=True)$/;"	v
prob	examples/99-advanced/atomic_orbitals.py	/^prob = np.abs(hydro_orbital['real_wf']) ** 2$/;"	v
probes	examples/01-filter/interpolate.py	/^probes = examples.download_thermal_probes()$/;"	v
processEvents	tests/plotting/test_scraper.py	/^    def processEvents(self):$/;"	m	class:QApplication
process_empty_string	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def process_empty_string(self: Text3DSource) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
process_empty_string	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def process_empty_string(self: Text3DSource, value: bool) -> None:$/;"	m	class:Text3DSource
process_empty_string	pyvista/core/utilities/geometric_sources.py	/^    def process_empty_string(self: Text3DSource) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
process_empty_string	pyvista/core/utilities/geometric_sources.py	/^    def process_empty_string(self: Text3DSource, value: bool) -> None:$/;"	m	class:Text3DSource
process_events	build/lib/pyvista/plotting/render_window_interactor.py	/^    def process_events(self):$/;"	m	class:RenderWindowInteractor
process_events	pyvista/plotting/render_window_interactor.py	/^    def process_events(self):$/;"	m	class:RenderWindowInteractor
process_events	tests/plotting/test_render_window_interactor.py	/^    def process_events(iren, duration):$/;"	f	function:test_timer
process_opacity	build/lib/pyvista/plotting/_plotting.py	/^def process_opacity(mesh, opacity, preference, n_colors, scalars, use_transparency):$/;"	f
process_opacity	build/lib/pyvista/plotting/plotter.py	/^from ._plotting import process_opacity$/;"	i
process_opacity	pyvista/plotting/_plotting.py	/^def process_opacity(mesh, opacity, preference, n_colors, scalars, use_transparency):$/;"	f
process_opacity	pyvista/plotting/plotter.py	/^from ._plotting import process_opacity$/;"	i
product	build/lib/pyvista/core/_validation/validate.py	/^from itertools import product$/;"	i
product	build/lib/pyvista/core/utilities/arrays.py	/^from itertools import product$/;"	i
product	build/lib/pyvista/core/utilities/geometric_objects.py	/^from itertools import product$/;"	i
product	build/lib/pyvista/plotting/renderers.py	/^from itertools import product$/;"	i
product	build/lib/pyvista/plotting/widgets.py	/^from itertools import product$/;"	i
product	examples/01-filter/warp_by_vector.py	/^from itertools import product$/;"	i
product	examples/02-plot/pbr.py	/^from itertools import product$/;"	i
product	examples/99-advanced/warp_by_vector_eigenmodes.py	/^from itertools import product$/;"	i
product	pyvista/core/_validation/validate.py	/^from itertools import product$/;"	i
product	pyvista/core/utilities/arrays.py	/^from itertools import product$/;"	i
product	pyvista/core/utilities/geometric_objects.py	/^from itertools import product$/;"	i
product	pyvista/plotting/renderers.py	/^from itertools import product$/;"	i
product	pyvista/plotting/widgets.py	/^from itertools import product$/;"	i
profile	examples/01-filter/extrude_rotate.py	/^profile = pyvista.PolyData(vertices, faces)$/;"	v
project	doc/source/conf.py	/^project = 'PyVista'$/;"	v
project	tests/plotting/tinypages/conf.py	/^project = 'tinypages'$/;"	v
project_points_to_plane	build/lib/pyvista/core/filters/poly_data.py	/^    def project_points_to_plane(self, origin=None, normal=(0.0, 0.0, 1.0), inplace: bool = False):$/;"	m	class:PolyDataFilters
project_points_to_plane	examples/98-common/project_points_tessellate.py	/^def project_points_to_plane(points, plane_origin, plane_normal):$/;"	f
project_points_to_plane	pyvista/core/filters/poly_data.py	/^    def project_points_to_plane(self, origin=None, normal=(0.0, 0.0, 1.0), inplace: bool = False):$/;"	m	class:PolyDataFilters
projected	examples/01-filter/project_plane.py	/^projected = poly.project_points_to_plane(origin=origin)$/;"	v
projected_points	examples/98-common/project_points_tessellate.py	/^projected_points = project_points_to_plane(point_cloud, origin, normal)$/;"	v
promote_type	build/lib/pyvista/core/dataobject.py	/^from pyvista.typing.mypy_plugin import promote_type$/;"	i
promote_type	build/lib/pyvista/core/dataset.py	/^from pyvista.typing.mypy_plugin import promote_type$/;"	i
promote_type	build/lib/pyvista/typing/mypy_plugin.py	/^def promote_type(*types: type) -> Callable[[Any], Any]:$/;"	f
promote_type	pyvista/core/dataobject.py	/^from pyvista.typing.mypy_plugin import promote_type$/;"	i
promote_type	pyvista/core/dataset.py	/^from pyvista.typing.mypy_plugin import promote_type$/;"	i
promote_type	pyvista/typing/mypy_plugin.py	/^def promote_type(*types: type) -> Callable[[Any], Any]:$/;"	f
promote_type	tests/typing/mypy_plugin/test_plugin.py	/^        promote_type=float,$/;"	v
promote_type	tests/typing/mypy_plugin/test_plugin.py	/^from pyvista.typing.mypy_plugin import promote_type$/;"	i
prop	build/lib/pyvista/plotting/actor.py	/^    def prop(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
prop	build/lib/pyvista/plotting/actor.py	/^    def prop(self, obj: Property) -> None:$/;"	m	class:Actor
prop	build/lib/pyvista/plotting/axes_assembly.py	/^    def prop(self) -> TextProperty:$/;"	m	class:_AxisActor
prop	build/lib/pyvista/plotting/text.py	/^    def prop(self) -> TextProperty:$/;"	m	class:CornerAnnotation
prop	build/lib/pyvista/plotting/text.py	/^    def prop(self):$/;"	m	class:Text
prop	build/lib/pyvista/plotting/text.py	/^    def prop(self, prop: TextProperty):$/;"	m	class:CornerAnnotation
prop	build/lib/pyvista/plotting/text.py	/^    def prop(self, prop: TextProperty):$/;"	m	class:Text
prop	build/lib/pyvista/plotting/volume.py	/^    def prop(self):  # numpydoc ignore=RT01$/;"	m	class:Volume
prop	build/lib/pyvista/plotting/volume.py	/^    def prop(self, obj: Property):$/;"	m	class:Volume
prop	pyvista/plotting/actor.py	/^    def prop(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
prop	pyvista/plotting/actor.py	/^    def prop(self, obj: Property) -> None:$/;"	m	class:Actor
prop	pyvista/plotting/axes_assembly.py	/^    def prop(self) -> TextProperty:$/;"	m	class:_AxisActor
prop	pyvista/plotting/text.py	/^    def prop(self) -> TextProperty:$/;"	m	class:CornerAnnotation
prop	pyvista/plotting/text.py	/^    def prop(self):$/;"	m	class:Text
prop	pyvista/plotting/text.py	/^    def prop(self, prop: TextProperty):$/;"	m	class:CornerAnnotation
prop	pyvista/plotting/text.py	/^    def prop(self, prop: TextProperty):$/;"	m	class:Text
prop	pyvista/plotting/volume.py	/^    def prop(self):  # numpydoc ignore=RT01$/;"	m	class:Volume
prop	pyvista/plotting/volume.py	/^    def prop(self, obj: Property):$/;"	m	class:Volume
prop	tests/core/test_utilities.py	/^        def prop(cls):$/;"	m	class:test_classproperty.Foo
prop	tests/plotting/test_property.py	/^def prop():$/;"	f
prop	tests/plotting/test_text.py	/^def prop():$/;"	f
prop_assembly	build/lib/pyvista/plotting/tools.py	/^        prop_assembly = _vtk.vtkPropAssembly()$/;"	v
prop_assembly	pyvista/plotting/tools.py	/^        prop_assembly = _vtk.vtkPropAssembly()$/;"	v
prop_collection	tests/plotting/test_renderer.py	/^def prop_collection():$/;"	f
protein_ribbon	build/lib/pyvista/core/filters/poly_data.py	/^    def protein_ribbon(self, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
protein_ribbon	pyvista/core/filters/poly_data.py	/^    def protein_ribbon(self, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
protocol	build/lib/pyvista/trame/jupyter.py	/^            protocol=kwargs.get('protocol', 'http'),$/;"	v
protocol	pyvista/trame/jupyter.py	/^            protocol=kwargs.get('protocol', 'http'),$/;"	v
proxy	build/lib/pyvista/plotting/camera.py	/^from weakref import proxy$/;"	i
proxy	build/lib/pyvista/plotting/renderers.py	/^from weakref import proxy$/;"	i
proxy	pyvista/plotting/camera.py	/^from weakref import proxy$/;"	i
proxy	pyvista/plotting/renderers.py	/^from weakref import proxy$/;"	i
pset	examples/99-advanced/openfoam_tubes.py	/^pset = pv.PointSet(inlet.points[::5])$/;"	v
pseudosphere	examples/00-load/create_parametric_geometric_objects.py	/^pseudosphere = pv.ParametricPseudosphere()$/;"	v
ptc	build/lib/pyvista/core/filters/data_object.py	/^    def ptc(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
ptc	pyvista/core/filters/data_object.py	/^    def ptc(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
ptera_software	doc/source/make_external_gallery.py	/^    ptera_software=Example($/;"	v
pts	examples/01-filter/extract_surface.py	/^pts = np.vstack((lin_pts, quad_pts))$/;"	v
puppy_coords	examples/02-plot/texture.py	/^puppy_coords = np.c_[yyc.ravel(), xxc.ravel()]$/;"	v
push	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def push($/;"	m	class:OrthogonalPlanesSource
push	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def push(self: PlaneSource, distance: float) -> None:  # numpydoc ignore: PR01$/;"	m	class:PlaneSource
push	pyvista/core/utilities/geometric_sources.py	/^    def push($/;"	m	class:OrthogonalPlanesSource
push	pyvista/core/utilities/geometric_sources.py	/^    def push(self: PlaneSource, distance: float) -> None:  # numpydoc ignore: PR01$/;"	m	class:PlaneSource
push_camera	build/lib/pyvista/trame/ui/base_viewer.py	/^    def push_camera(self, **kwargs):$/;"	m	class:BaseViewer
push_camera	build/lib/pyvista/trame/views.py	/^    def push_camera(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:PyVistaRemoteView
push_camera	pyvista/trame/ui/base_viewer.py	/^    def push_camera(self, **kwargs):$/;"	m	class:BaseViewer
push_camera	pyvista/trame/views.py	/^    def push_camera(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:PyVistaRemoteView
pv	build/lib/pyvista/examples/_dataset_loader.py	/^import pyvista as pv$/;"	i
pv	build/lib/pyvista/plotting/axes_assembly.py	/^import pyvista as pv$/;"	i
pv	doc/source/make_tables.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_explicit_structured_grid.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_geometric_objects.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_kochanek_spline.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_parametric_geometric_objects.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_pixel_art.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_platonic_solids.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_point_cloud.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_pointset.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_poly.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_polydata_strips.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_polyhedron.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_sphere.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_spline.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_structured_surface.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_surface_draped.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_tri_surface.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_uniform_grid.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/create_unstructured_surface.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/linear_cells.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/read_dolfin.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/read_file.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/read_parallel.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/terrain_mesh.py	/^import pyvista as pv$/;"	i
pv	examples/00-load/wrap_trimesh.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/boolean_operations.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/cell_centers.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/clipping.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/clipping_with_surface.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/collisions.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/connectivity.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/contouring.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/decimate.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/distance_between_surfaces.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/extract_cells_inside_surface.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/extract_edges.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/extract_surface.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/extrude_trim.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/flying_edges.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/gaussian_smoothing.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/geodesic.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/glyphs.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/glyphs_table.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/gradients.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/image_fft.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/image_fft_perlin_noise.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/image_representations.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/interpolate.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/interpolate_sample.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/mesh_quality.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/poly_ray_trace.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/project_plane.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/resample.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/rotate.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/sampling_functions_2d.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/sampling_functions_3d.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/slicing.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/streamlines.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/streamlines_2D.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/subdivide.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/surface_reconstruction.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/surface_smoothing.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/using_filters.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/voxelize.py	/^import pyvista as pv$/;"	i
pv	examples/01-filter/warp_by_vector.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/anti_aliasing.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/backface_props.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/background_image.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/blurring.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/bounds.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/chart_basics.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/chart_overlays.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/clear.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/cmap.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/color_cycler.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/composite_picking.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/depth_of_field.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/depth_peeling.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/distance_along_spline.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/distance_measurement.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/edl.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/element_picking.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/floors.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/gif.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/image_depth.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/interpolate_before_map.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/isovalue.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/labels.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/legend.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/lighting_mesh.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/linked.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/lookup_table.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/mesh_picking.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/movie.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/movie_glyphs.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/moving_cmap.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/multi_window.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/opacity.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/orbit.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/ortho_slices.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/pbr.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/plot_over_circular_arc.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/plot_over_line.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/point_clouds.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/point_picking.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/points_gaussian_scale.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/scalar_bars.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/screenshot.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/spherical.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/ssao.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/surface_picking.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/texture.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/themes.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/topo_map.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/vector_component.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/vertices.py	/^import pyvista as pv$/;"	i
pv	examples/02-plot/volume.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/animation.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/box_widget.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/checkbox_widget.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/clip_volume.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/line_widget.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/multi_slider_widget.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/plane_widget.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/slider_bar_widget.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/sphere_widget.py	/^import pyvista as pv$/;"	i
pv	examples/03-widgets/spline_widget.py	/^import pyvista as pv$/;"	i
pv	examples/04-lights/actors.py	/^import pyvista as pv$/;"	i
pv	examples/04-lights/attenuation.py	/^import pyvista as pv$/;"	i
pv	examples/04-lights/beam_shape.py	/^import pyvista as pv$/;"	i
pv	examples/04-lights/light_types.py	/^import pyvista as pv$/;"	i
pv	examples/04-lights/mesh_lighting.py	/^import pyvista as pv$/;"	i
pv	examples/04-lights/plotter_builtins.py	/^import pyvista as pv$/;"	i
pv	examples/98-common/project_points_tessellate.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/add_example.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/anatomical_groups.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/antarctica_compare.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/atomic_orbitals.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/customization_trame_toolbar.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/fea_hertzian_contact_pressure.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/magnetic_fields.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/openfoam_cooling.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/openfoam_tubes.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/plotting_algorithms.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/pump_bracket.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/ray_trace_moeller.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/sphere_eversion.py	/^import pyvista as pv$/;"	i
pv	examples/99-advanced/warp_by_vector_eigenmodes.py	/^import pyvista as pv$/;"	i
pv	examples_trame/advanced/contour.py	/^import pyvista as pv$/;"	i
pv	examples_trame/advanced/custom_ui.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/PyVistaLocalView.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/PyVistaRemoteLocalView.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/PyVistaRemoteView.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/actor_color.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/algorithm.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/file_viewer.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/mesh_scalars.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/multi_views.py	/^import pyvista as pv$/;"	i
pv	examples_trame/basic/ui_template.py	/^import pyvista as pv$/;"	i
pv	examples_trame/validation/many_actors.py	/^import pyvista as pv$/;"	i
pv	pyvista/examples/_dataset_loader.py	/^import pyvista as pv$/;"	i
pv	pyvista/plotting/axes_assembly.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_cells.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_composite.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_dataobject.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_dataobject_filters.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_dataset.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_dataset_filters.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_datasetattributes.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_geometric_objects.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_geometric_sources.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_grid.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_helpers.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_image_sources.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_imagedata_filters.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_imaging.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_objects.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_parametric_geometry.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_partitioned.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_pointset.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_polydata.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_polydata_filters.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_reader.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_rectilinear_grid_filters.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_unstructured_grid_filters.py	/^import pyvista as pv$/;"	i
pv	tests/core/test_utilities.py	/^import pyvista as pv$/;"	i
pv	tests/doc/tst_doc_images.py	/^import pyvista as pv$/;"	i
pv	tests/examples/test_dataset_loader.py	/^import pyvista as pv$/;"	i
pv	tests/examples/test_download_files.py	/^import pyvista as pv$/;"	i
pv	tests/examples/test_downloads.py	/^import pyvista as pv$/;"	i
pv	tests/examples/test_examples.py	/^import pyvista as pv$/;"	i
pv	tests/namespace/test_public_namespace.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/conftest.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/jupyter/test_static.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/jupyter/test_trame.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/mappers/test_composite_mapper.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/mappers/test_gaussian_mapper.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/mappers/test_mapper.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/mappers/test_volume_mapper.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_actor.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_axes.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_axes_assembly.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_camera.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_charts.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_collection.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_colors.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_cube_axes_actor.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_demos.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_lights.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_lookup_table.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_picking.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_plotter.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_plotting.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_plotting_utilities.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_property.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_regression.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_render_window_interactor.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_renderer.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_scalar_bars.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_scraper.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_text.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_texture.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_theme.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_utilities.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_volume_property.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/test_widgets.py	/^import pyvista as pv$/;"	i
pv	tests/plotting/tinypages/samples.py	/^import pyvista as pv$/;"	i
pv	tests/test_meshio.py	/^import pyvista as pv$/;"	i
pv	tests/typing/test_return_type.py	/^import pyvista as pv$/;"	i
pv_data	tests/core/test_helpers.py	/^        pv_data = pv.wrap(vtk_data)$/;"	v	class:test_wrappers.Foo
pv_html_page_context	build/lib/pyvista/core/utilities/docs.py	/^def pv_html_page_context($/;"	f
pv_html_page_context	doc/source/conf.py	/^from pyvista.core.utilities.docs import pv_html_page_context$/;"	i
pv_html_page_context	pyvista/core/utilities/docs.py	/^def pv_html_page_context($/;"	f
pvgeo	doc/source/make_external_gallery.py	/^    pvgeo=Example($/;"	v
pyelastica	doc/source/make_external_gallery.py	/^    pyelastica=Example($/;"	v
pyfbs	doc/source/make_external_gallery.py	/^    pyfbs=Example($/;"	v
pygments_style	doc/source/conf.py	/^pygments_style = 'friendly'$/;"	v
pygments_style	tests/plotting/tinypages/conf.py	/^pygments_style = 'sphinx'$/;"	v
pyrmaid	examples/00-load/linear_cells.py	/^pyrmaid = pv.UnstructuredGrid(cells, [pv.CellType.PYRAMID], points)$/;"	v
pytest	build/lib/pyvista/conftest.py	/^import pytest$/;"	i
pytest	examples_trame/tests/test_trame.py	/^import pytest$/;"	i
pytest	pyvista/conftest.py	/^import pytest$/;"	i
pytest	tests/conftest.py	/^import pytest$/;"	i
pytest	tests/core/test_cells.py	/^import pytest$/;"	i
pytest	tests/core/test_composite.py	/^import pytest$/;"	i
pytest	tests/core/test_dataobject.py	/^import pytest$/;"	i
pytest	tests/core/test_dataobject_filters.py	/^import pytest$/;"	i
pytest	tests/core/test_dataset.py	/^import pytest$/;"	i
pytest	tests/core/test_dataset_filters.py	/^import pytest$/;"	i
pytest	tests/core/test_datasetattributes.py	/^import pytest$/;"	i
pytest	tests/core/test_geometric_objects.py	/^import pytest$/;"	i
pytest	tests/core/test_geometric_sources.py	/^import pytest$/;"	i
pytest	tests/core/test_grid.py	/^import pytest$/;"	i
pytest	tests/core/test_helpers.py	/^import pytest$/;"	i
pytest	tests/core/test_imagedata_filters.py	/^import pytest$/;"	i
pytest	tests/core/test_imaging.py	/^import pytest$/;"	i
pytest	tests/core/test_objects.py	/^import pytest$/;"	i
pytest	tests/core/test_parametric_geometry.py	/^import pytest$/;"	i
pytest	tests/core/test_partitioned.py	/^import pytest$/;"	i
pytest	tests/core/test_pointset.py	/^import pytest$/;"	i
pytest	tests/core/test_polydata.py	/^import pytest$/;"	i
pytest	tests/core/test_polydata_filters.py	/^import pytest$/;"	i
pytest	tests/core/test_pyvista_ndarray.py	/^import pytest$/;"	i
pytest	tests/core/test_reader.py	/^import pytest$/;"	i
pytest	tests/core/test_rectilinear_grid_filters.py	/^import pytest$/;"	i
pytest	tests/core/test_unstructured_grid_filters.py	/^import pytest$/;"	i
pytest	tests/core/test_utilities.py	/^import pytest$/;"	i
pytest	tests/core/test_validation.py	/^import pytest$/;"	i
pytest	tests/doc/tst_doc_images.py	/^import pytest$/;"	i
pytest	tests/examples/test_cell_examples.py	/^import pytest$/;"	i
pytest	tests/examples/test_dataset_loader.py	/^import pytest$/;"	i
pytest	tests/examples/test_download_files.py	/^import pytest$/;"	i
pytest	tests/examples/test_downloads.py	/^import pytest$/;"	i
pytest	tests/examples/test_examples.py	/^import pytest$/;"	i
pytest	tests/namespace/test_errors_namespace.py	/^import pytest$/;"	i
pytest	tests/namespace/test_plotting_namespace.py	/^import pytest$/;"	i
pytest	tests/namespace/test_public_namespace.py	/^import pytest$/;"	i
pytest	tests/namespace/test_utilities_namespace.py	/^import pytest$/;"	i
pytest	tests/plotting/conftest.py	/^import pytest$/;"	i
pytest	tests/plotting/jupyter/conftest.py	/^import pytest$/;"	i
pytest	tests/plotting/jupyter/test_static.py	/^import pytest$/;"	i
pytest	tests/plotting/jupyter/test_trame.py	/^import pytest$/;"	i
pytest	tests/plotting/mappers/test_composite_mapper.py	/^import pytest$/;"	i
pytest	tests/plotting/mappers/test_gaussian_mapper.py	/^import pytest$/;"	i
pytest	tests/plotting/mappers/test_mapper.py	/^import pytest$/;"	i
pytest	tests/plotting/mappers/test_volume_mapper.py	/^import pytest$/;"	i
pytest	tests/plotting/test_actor.py	/^import pytest$/;"	i
pytest	tests/plotting/test_axes.py	/^import pytest$/;"	i
pytest	tests/plotting/test_axes_assembly.py	/^import pytest$/;"	i
pytest	tests/plotting/test_camera.py	/^import pytest$/;"	i
pytest	tests/plotting/test_charts.py	/^import pytest$/;"	i
pytest	tests/plotting/test_colors.py	/^import pytest$/;"	i
pytest	tests/plotting/test_conftest.py	/^import pytest$/;"	i
pytest	tests/plotting/test_cube_axes_actor.py	/^import pytest$/;"	i
pytest	tests/plotting/test_demos.py	/^import pytest$/;"	i
pytest	tests/plotting/test_lights.py	/^import pytest$/;"	i
pytest	tests/plotting/test_lookup_table.py	/^import pytest$/;"	i
pytest	tests/plotting/test_picking.py	/^import pytest$/;"	i
pytest	tests/plotting/test_plotter.py	/^import pytest$/;"	i
pytest	tests/plotting/test_plotting.py	/^import pytest$/;"	i
pytest	tests/plotting/test_plotting_utilities.py	/^import pytest$/;"	i
pytest	tests/plotting/test_property.py	/^import pytest$/;"	i
pytest	tests/plotting/test_regression.py	/^import pytest$/;"	i
pytest	tests/plotting/test_render_pass.py	/^import pytest$/;"	i
pytest	tests/plotting/test_render_window_interactor.py	/^import pytest$/;"	i
pytest	tests/plotting/test_renderer.py	/^import pytest$/;"	i
pytest	tests/plotting/test_scalar_bars.py	/^import pytest$/;"	i
pytest	tests/plotting/test_scraper.py	/^import pytest$/;"	i
pytest	tests/plotting/test_text.py	/^import pytest$/;"	i
pytest	tests/plotting/test_texture.py	/^import pytest$/;"	i
pytest	tests/plotting/test_theme.py	/^import pytest$/;"	i
pytest	tests/plotting/test_tinypages.py	/^import pytest$/;"	i
pytest	tests/plotting/test_utilities.py	/^import pytest$/;"	i
pytest	tests/plotting/test_volume_property.py	/^import pytest$/;"	i
pytest	tests/plotting/test_widgets.py	/^import pytest$/;"	i
pytest	tests/test_conftest.py	/^import pytest$/;"	i
pytest	tests/test_init.py	/^import pytest$/;"	i
pytest	tests/test_meshio.py	/^import pytest$/;"	i
pytest	tests/typing/mypy_plugin/test_plugin.py	/^import pytest$/;"	i
pytest	tests/typing/test_return_type.py	/^import pytest$/;"	i
pytest_addoption	tests/conftest.py	/^def pytest_addoption(parser):$/;"	f
pytest_collection_modifyitems	tests/conftest.py	/^def pytest_collection_modifyitems(config: pytest.Config, items: list[pytest.Item]):$/;"	f
pytest_configure	tests/conftest.py	/^def pytest_configure(config: pytest.Config):$/;"	f
pytest_configure	tests/plotting/conftest.py	/^def pytest_configure(config):$/;"	f
pytest_generate_tests	tests/doc/tst_doc_images.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_generate_tests	tests/examples/test_downloads.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_generate_tests	tests/examples/test_examples.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_generate_tests	tests/plotting/test_colors.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_generate_tests	tests/plotting/test_plotting.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_generate_tests	tests/typing/test_return_type.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_plugins	tests/plotting/test_conftest.py	/^pytest_plugins = 'pytester'$/;"	v
pytest_plugins	tests/test_conftest.py	/^pytest_plugins = 'pytester'$/;"	v
pytest_report_header	tests/conftest.py	/^def pytest_report_header(config):$/;"	f
pytest_runtest_setup	tests/conftest.py	/^def pytest_runtest_setup(item: pytest.Item):$/;"	f
pytest_runtest_setup	tests/plotting/conftest.py	/^def pytest_runtest_setup(item):$/;"	f
pytestmark	tests/core/test_pointset.py	/^pytestmark = pytest.mark.skipif($/;"	v
pytestmark	tests/doc/tst_doc_images.py	/^pytestmark = [pytest.mark.filterwarnings(r'always:.*\\n.*THIS IS A FLAKY TEST.*:UserWarning')]$/;"	v
pytestmark	tests/examples/test_download_files.py	/^pytestmark = pytest.mark.needs_download$/;"	v
pytestmark	tests/plotting/jupyter/test_trame.py	/^    pytestmark = [$/;"	v
pytestmark	tests/plotting/jupyter/test_trame.py	/^    pytestmark = pytest.mark.skip$/;"	v
pytestmark	tests/plotting/test_picking.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_plotting.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_regression.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_scraper.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pytestmark	tests/plotting/test_tinypages.py	/^    pytestmark = pytest.mark.skip(reason='Requires system to support plotting')$/;"	v
pytestmark	tests/plotting/test_widgets.py	/^pytestmark = pytest.mark.skip_plotting$/;"	v
pyvista	build/lib/pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
pyvista	build/lib/pyvista/_plot.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/conftest.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/cell.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/composite.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/dataobject.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/dataset.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/filters/__init__.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/filters/composite.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/filters/data_object.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/filters/data_set.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/filters/data_set.py	/^import pyvista.core._vtk_core as _vtk$/;"	i
pyvista	build/lib/pyvista/core/filters/image_data.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/filters/poly_data.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/filters/structured_grid.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/grid.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/objects.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/pointset.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/arrays.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/cells.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/docs.py	/^    import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/features.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/fileio.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/geometric_objects.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/geometric_sources.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/helpers.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/observers.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/parametric_objects.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/points.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/reader.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/core/utilities/transform.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/demos/demos.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/demos/logo.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/examples/cells.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/examples/downloads.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/examples/examples.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/examples/planets.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/ext/plot_directive.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/jupyter/__init__.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/_plotting.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/_property.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/actor.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/affine_widget.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/axes_actor.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/background_renderer.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/camera.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/charts.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/colors.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/composite_mapper.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/cube_axes_actor.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/helpers.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/lookup_table.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/mapper.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/picking.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/plotter.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/renderer.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/renderers.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/scalar_bars.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/text.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/texture.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/themes.py	/^    import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/themes.py	/^import pyvista  # noqa: TC001$/;"	i
pyvista	build/lib/pyvista/plotting/tools.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/utilities/algorithms.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/utilities/cubemap.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/utilities/regression.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/volume_property.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/plotting/widgets.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/trame/jupyter.py	/^import pyvista$/;"	i
pyvista	build/lib/pyvista/trame/ui/base_viewer.py	/^import pyvista$/;"	i
pyvista	doc/source/conf.py	/^        import pyvista$/;"	i
pyvista	doc/source/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
pyvista	doc/source/conf.py	/^import pyvista$/;"	i
pyvista	doc/source/make_tables.py	/^import pyvista$/;"	i
pyvista	examples/00-load/create_truss.py	/^import pyvista$/;"	i
pyvista	examples/00-load/load_gltf.py	/^import pyvista$/;"	i
pyvista	examples/00-load/load_vrml.py	/^import pyvista$/;"	i
pyvista	examples/00-load/reader.py	/^import pyvista$/;"	i
pyvista	examples/01-filter/extrude_rotate.py	/^import pyvista$/;"	i
pyvista	examples/01-filter/integrate_data.py	/^import pyvista$/;"	i
pyvista	examples/01-filter/reflect.py	/^import pyvista$/;"	i
pyvista	examples/02-plot/shading.py	/^import pyvista$/;"	i
pyvista	examples/02-plot/silhouette.py	/^import pyvista$/;"	i
pyvista	examples/04-lights/shadows.py	/^import pyvista$/;"	i
pyvista	examples/99-advanced/extending_pyvista.py	/^import pyvista$/;"	i
pyvista	examples/99-advanced/openfoam_example.py	/^import pyvista$/;"	i
pyvista	examples/99-advanced/planets.py	/^import pyvista$/;"	i
pyvista	pyvista/__init__.py	/^        import pyvista.plotting  # noqa: F401$/;"	i
pyvista	pyvista/_plot.py	/^import pyvista$/;"	i
pyvista	pyvista/conftest.py	/^import pyvista$/;"	i
pyvista	pyvista/core/cell.py	/^import pyvista$/;"	i
pyvista	pyvista/core/composite.py	/^import pyvista$/;"	i
pyvista	pyvista/core/dataobject.py	/^import pyvista$/;"	i
pyvista	pyvista/core/dataset.py	/^import pyvista$/;"	i
pyvista	pyvista/core/filters/__init__.py	/^import pyvista$/;"	i
pyvista	pyvista/core/filters/composite.py	/^import pyvista$/;"	i
pyvista	pyvista/core/filters/data_object.py	/^import pyvista$/;"	i
pyvista	pyvista/core/filters/data_set.py	/^import pyvista$/;"	i
pyvista	pyvista/core/filters/data_set.py	/^import pyvista.core._vtk_core as _vtk$/;"	i
pyvista	pyvista/core/filters/image_data.py	/^import pyvista$/;"	i
pyvista	pyvista/core/filters/poly_data.py	/^import pyvista$/;"	i
pyvista	pyvista/core/filters/structured_grid.py	/^import pyvista$/;"	i
pyvista	pyvista/core/grid.py	/^import pyvista$/;"	i
pyvista	pyvista/core/objects.py	/^import pyvista$/;"	i
pyvista	pyvista/core/pointset.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/arrays.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/cells.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/docs.py	/^    import pyvista$/;"	i
pyvista	pyvista/core/utilities/features.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/fileio.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/geometric_objects.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/geometric_sources.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/helpers.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/observers.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/parametric_objects.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/points.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/reader.py	/^import pyvista$/;"	i
pyvista	pyvista/core/utilities/transform.py	/^import pyvista$/;"	i
pyvista	pyvista/demos/demos.py	/^import pyvista$/;"	i
pyvista	pyvista/demos/logo.py	/^import pyvista$/;"	i
pyvista	pyvista/examples/cells.py	/^import pyvista$/;"	i
pyvista	pyvista/examples/downloads.py	/^import pyvista$/;"	i
pyvista	pyvista/examples/examples.py	/^import pyvista$/;"	i
pyvista	pyvista/examples/planets.py	/^import pyvista$/;"	i
pyvista	pyvista/ext/plot_directive.py	/^import pyvista$/;"	i
pyvista	pyvista/jupyter/__init__.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/_plotting.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/_property.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/actor.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/affine_widget.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/axes_actor.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/background_renderer.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/camera.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/charts.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/colors.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/composite_mapper.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/cube_axes_actor.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/helpers.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/lookup_table.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/mapper.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/picking.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/plotter.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/renderer.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/renderers.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/scalar_bars.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/text.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/texture.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/themes.py	/^    import pyvista$/;"	i
pyvista	pyvista/plotting/themes.py	/^import pyvista  # noqa: TC001$/;"	i
pyvista	pyvista/plotting/tools.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/utilities/algorithms.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/utilities/cubemap.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/utilities/regression.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/utilities/sphinx_gallery.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/volume_property.py	/^import pyvista$/;"	i
pyvista	pyvista/plotting/widgets.py	/^import pyvista$/;"	i
pyvista	pyvista/trame/jupyter.py	/^import pyvista$/;"	i
pyvista	pyvista/trame/ui/base_viewer.py	/^import pyvista$/;"	i
pyvista	tests/check_doctest_names.py	/^import pyvista$/;"	i
pyvista	tests/conftest.py	/^import pyvista$/;"	i
pyvista	tests/examples/test_cell_examples.py	/^import pyvista$/;"	i
pyvista	tests/namespace/test_errors_namespace.py	/^        import pyvista.errors as errors  # noqa: PLR0402$/;"	i
pyvista	tests/namespace/test_utilities_namespace.py	/^        import pyvista.utilities as utilities  # noqa: PLR0402$/;"	i
pyvista	tests/plotting/test_conftest.py	/^import pyvista$/;"	i
pyvista	tests/plotting/test_plotting.py	/^import pyvista.plotting.text$/;"	i
pyvista	tests/plotting/test_theme.py	/^import pyvista.plotting$/;"	i
pyvista	tests/plotting/tinypages/conf.py	/^IMPORT_PYVISTA_RE = r'\\b(import +pyvista|from +pyvista +import)\\b'$/;"	i
pyvista	tests/plotting/tinypages/conf.py	/^import pyvista$/;"	i
pyvista	tests/plotting/tinypages/conf.py	/^plot_setup = plot_cleanup = 'import pyvista'$/;"	i
pyvista	tests/plotting/tinypages/plot_cone.py	/^import pyvista$/;"	i
pyvista	tests/plotting/tinypages/plot_polygon.py	/^import pyvista$/;"	i
pyvista	tests/test_conftest.py	/^import pyvista$/;"	i
pyvista_artworks	doc/source/make_external_gallery.py	/^    pyvista_artworks=Example($/;"	v
pyvista_initialize	build/lib/pyvista/trame/views.py	/^    def pyvista_initialize(self):$/;"	m	class:_BasePyVistaView
pyvista_initialize	pyvista/trame/views.py	/^    def pyvista_initialize(self):$/;"	m	class:_BasePyVistaView
pyvista_ndarray	build/lib/pyvista/core/__init__.py	/^from .pyvista_ndarray import pyvista_ndarray as pyvista_ndarray$/;"	i
pyvista_ndarray	build/lib/pyvista/core/composite.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	build/lib/pyvista/core/dataobject.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	build/lib/pyvista/core/dataset.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	build/lib/pyvista/core/datasetattributes.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	build/lib/pyvista/core/filters/image_data.py	/^    from pyvista import pyvista_ndarray$/;"	i
pyvista_ndarray	build/lib/pyvista/core/pyvista_ndarray.py	/^class pyvista_ndarray(np.ndarray):  # type: ignore[type-arg]  # numpydoc ignore=PR02$/;"	c
pyvista_ndarray	build/lib/pyvista/core/utilities/arrays.py	/^    from pyvista import pyvista_ndarray$/;"	i
pyvista_ndarray	build/lib/pyvista/core/utilities/helpers.py	/^    from pyvista import pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/__init__.py	/^from .pyvista_ndarray import pyvista_ndarray as pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/composite.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/dataobject.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/dataset.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/datasetattributes.py	/^from .pyvista_ndarray import pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/filters/image_data.py	/^    from pyvista import pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/pyvista_ndarray.py	/^class pyvista_ndarray(np.ndarray):  # type: ignore[type-arg]  # numpydoc ignore=PR02$/;"	c
pyvista_ndarray	pyvista/core/utilities/arrays.py	/^    from pyvista import pyvista_ndarray$/;"	i
pyvista_ndarray	pyvista/core/utilities/helpers.py	/^    from pyvista import pyvista_ndarray$/;"	i
pyvista_ndarray	tests/core/test_pyvista_ndarray.py	/^from pyvista import pyvista_ndarray$/;"	i
pyvista_ndarray	tests/core/test_validation.py	/^from pyvista.core import pyvista_ndarray$/;"	i
pyvista_ndarray_1d	tests/core/test_pyvista_ndarray.py	/^def pyvista_ndarray_1d():$/;"	f
pyvista_plot_cleanup	doc/source/conf.py	/^pyvista_plot_cleanup = pyvista_plot_setup$/;"	v
q	examples/99-advanced/sphere_eversion.py	/^q = Q$/;"	v
quad	examples/00-load/create_polyhedron.py	/^quad = [4, 0, 1, 2, 3]$/;"	v
quad_grid	examples/00-load/linear_cells.py	/^quad_grid = example_cells.Quadrilateral()$/;"	v
quad_points	examples/00-load/create_polyhedron.py	/^quad_points = [$/;"	v
quad_pts	examples/01-filter/extract_surface.py	/^quad_pts = np.array($/;"	v
quads	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def quads(self: BoxSource) -> bool:$/;"	m	class:BoxSource
quads	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def quads(self: BoxSource, quads: bool) -> None:$/;"	m	class:BoxSource
quads	pyvista/core/utilities/geometric_sources.py	/^    def quads(self: BoxSource) -> bool:$/;"	m	class:BoxSource
quads	pyvista/core/utilities/geometric_sources.py	/^    def quads(self: BoxSource, quads: bool) -> None:$/;"	m	class:BoxSource
qual	examples/00-load/read_dolfin.py	/^qual = dolfin.cell_quality()$/;"	v
qual	examples/01-filter/mesh_quality.py	/^qual = mesh.cell_quality(measures)$/;"	v
r	build/lib/pyvista/examples/examples.py	/^        from sympy.abc import r$/;"	i
r	examples/00-load/create_structured_surface.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	examples/01-filter/decimate.py	/^r = ratio ** (phi)$/;"	v
r	examples/02-plot/distance_along_spline.py	/^r = z**2 + 1$/;"	v
r	examples/02-plot/gif.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	examples/02-plot/movie_glyphs.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	examples/02-plot/texture.py	/^r = np.sqrt(x**2 + y**2)$/;"	v
r	pyvista/examples/examples.py	/^        from sympy.abc import r$/;"	i
r_gas_constant	build/lib/pyvista/core/utilities/reader.py	/^    def r_gas_constant(self):$/;"	m	class:MultiBlockPlot3DReader
r_gas_constant	build/lib/pyvista/core/utilities/reader.py	/^    def r_gas_constant(self, val) -> None:$/;"	m	class:MultiBlockPlot3DReader
r_gas_constant	pyvista/core/utilities/reader.py	/^    def r_gas_constant(self):$/;"	m	class:MultiBlockPlot3DReader
r_gas_constant	pyvista/core/utilities/reader.py	/^    def r_gas_constant(self, val) -> None:$/;"	m	class:MultiBlockPlot3DReader
r_mat_to_euler_angles	tests/plotting/test_widgets.py	/^def r_mat_to_euler_angles(R):$/;"	f
r_res	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def r_res(self: DiscSource) -> int:$/;"	m	class:DiscSource
r_res	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def r_res(self: DiscSource, r_res: int) -> None:$/;"	m	class:DiscSource
r_res	pyvista/core/utilities/geometric_sources.py	/^    def r_res(self: DiscSource) -> int:$/;"	m	class:DiscSource
r_res	pyvista/core/utilities/geometric_sources.py	/^    def r_res(self: DiscSource, r_res: int) -> None:$/;"	m	class:DiscSource
rad	examples/02-plot/points_gaussian_scale.py	/^rad = rng.random(N_SPHERES) * 0.01$/;"	v
radii	examples/02-plot/depth_peeling.py	/^radii = [1, 0.5, 0.5, 0.5, 0.5]$/;"	v
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def radius(self: CapsuleSource) -> float:$/;"	m	class:.CapsuleSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def radius(self: CapsuleSource, radius: float) -> None:$/;"	m	class:.CapsuleSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: ConeSource) -> float:$/;"	m	class:ConeSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: ConeSource, radius: float) -> None:$/;"	m	class:ConeSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: CylinderSource) -> float:$/;"	m	class:CylinderSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: CylinderSource, radius: float) -> None:$/;"	m	class:CylinderSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: PolygonSource) -> float:$/;"	m	class:PolygonSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: PolygonSource, radius: float) -> None:$/;"	m	class:PolygonSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: SphereSource) -> float:$/;"	m	class:SphereSource
radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def radius(self: SphereSource, radius: float) -> None:$/;"	m	class:SphereSource
radius	build/lib/pyvista/core/utilities/image_sources.py	/^    def radius(self) -> Sequence[float]:$/;"	m	class:ImageEllipsoidSource
radius	build/lib/pyvista/core/utilities/image_sources.py	/^    def radius(self, radius: Sequence[float]) -> None:$/;"	m	class:ImageEllipsoidSource
radius	examples/00-load/create_sphere.py	/^radius = 0.5$/;"	v
radius	examples/02-plot/points_gaussian_scale.py	/^radius = torus_radius + tube_radius * np.cos(phi)$/;"	v
radius	examples/02-plot/silhouette.py	/^    radius=0.15,$/;"	v
radius	examples/02-plot/texture.py	/^    radius=1,$/;"	v
radius	pyvista/core/utilities/geometric_sources.py	/^        def radius(self: CapsuleSource) -> float:$/;"	m	class:.CapsuleSource
radius	pyvista/core/utilities/geometric_sources.py	/^        def radius(self: CapsuleSource, radius: float) -> None:$/;"	m	class:.CapsuleSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: ConeSource) -> float:$/;"	m	class:ConeSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: ConeSource, radius: float) -> None:$/;"	m	class:ConeSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: CylinderSource) -> float:$/;"	m	class:CylinderSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: CylinderSource, radius: float) -> None:$/;"	m	class:CylinderSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: PolygonSource) -> float:$/;"	m	class:PolygonSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: PolygonSource, radius: float) -> None:$/;"	m	class:PolygonSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: SphereSource) -> float:$/;"	m	class:SphereSource
radius	pyvista/core/utilities/geometric_sources.py	/^    def radius(self: SphereSource, radius: float) -> None:$/;"	m	class:SphereSource
radius	pyvista/core/utilities/image_sources.py	/^    def radius(self) -> Sequence[float]:$/;"	m	class:ImageEllipsoidSource
radius	pyvista/core/utilities/image_sources.py	/^    def radius(self, radius: Sequence[float]) -> None:$/;"	m	class:ImageEllipsoidSource
radius	tests/core/test_polydata.py	/^radius = 0.5$/;"	v
raise_error	build/lib/pyvista/core/utilities/cell_quality.py	/^    def raise_error(item_: str, valid_options_: Sequence[str]) -> NoReturn:$/;"	f	function:cell_quality_info
raise_error	pyvista/core/utilities/cell_quality.py	/^    def raise_error(item_: str, valid_options_: Sequence[str]) -> NoReturn:$/;"	f	function:cell_quality_info
raise_has_duplicates	build/lib/pyvista/core/grid.py	/^from .utilities.arrays import raise_has_duplicates$/;"	i
raise_has_duplicates	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import raise_has_duplicates as raise_has_duplicates$/;"	i
raise_has_duplicates	build/lib/pyvista/core/utilities/arrays.py	/^def raise_has_duplicates(arr: NumpyArray[Any]) -> None:$/;"	f
raise_has_duplicates	pyvista/core/grid.py	/^from .utilities.arrays import raise_has_duplicates$/;"	i
raise_has_duplicates	pyvista/core/utilities/__init__.py	/^from .arrays import raise_has_duplicates as raise_has_duplicates$/;"	i
raise_has_duplicates	pyvista/core/utilities/arrays.py	/^def raise_has_duplicates(arr: NumpyArray[Any]) -> None:$/;"	f
raise_has_duplicates	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import raise_has_duplicates$/;"	i
raise_key_error	build/lib/pyvista/core/composite.py	/^                    def raise_key_error($/;"	f	function:MultiBlock.move_nested_field_data_to_root
raise_key_error	pyvista/core/composite.py	/^                    def raise_key_error($/;"	f	function:MultiBlock.move_nested_field_data_to_root
raise_not_matching	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import raise_not_matching$/;"	i
raise_not_matching	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import raise_not_matching as raise_not_matching$/;"	i
raise_not_matching	build/lib/pyvista/core/utilities/arrays.py	/^def raise_not_matching(scalars: npt.NDArray[Any], dataset: DataSet | Table) -> None:$/;"	f
raise_not_matching	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import raise_not_matching$/;"	i
raise_not_matching	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import raise_not_matching$/;"	i
raise_not_matching	pyvista/core/dataset.py	/^from .utilities.arrays import raise_not_matching$/;"	i
raise_not_matching	pyvista/core/utilities/__init__.py	/^from .arrays import raise_not_matching as raise_not_matching$/;"	i
raise_not_matching	pyvista/core/utilities/arrays.py	/^def raise_not_matching(scalars: npt.NDArray[Any], dataset: DataSet | Table) -> None:$/;"	f
raise_not_matching	pyvista/plotting/mapper.py	/^from pyvista.core.utilities.arrays import raise_not_matching$/;"	i
raise_not_matching	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.arrays import raise_not_matching$/;"	i
raise_not_matching	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import raise_not_matching$/;"	i
raise_on_legacy_config	pyvista/ext/plot_directive.py	/^    def raise_on_legacy_config(app, config):$/;"	f	function:setup
ramp	build/lib/pyvista/plotting/lookup_table.py	/^    def ramp(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
ramp	build/lib/pyvista/plotting/lookup_table.py	/^    def ramp(self, value: str):$/;"	m	class:LookupTable
ramp	pyvista/plotting/lookup_table.py	/^    def ramp(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
ramp	pyvista/plotting/lookup_table.py	/^    def ramp(self, value: str):$/;"	m	class:LookupTable
random_hills	tests/conftest.py	/^def random_hills():$/;"	f
random_points	examples/02-plot/movie.py	/^    random_points = rng.random(mesh.points.shape)$/;"	v
randomhills	examples/00-load/create_parametric_geometric_objects.py	/^randomhills = pv.ParametricRandomHills()$/;"	v
range	build/lib/pyvista/plotting/charts.py	/^    def range(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
range	build/lib/pyvista/plotting/charts.py	/^    def range(self, val) -> None:$/;"	m	class:Axis
range	pyvista/plotting/charts.py	/^    def range(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
range	pyvista/plotting/charts.py	/^    def range(self, val) -> None:$/;"	m	class:Axis
ranges	examples/01-filter/slicing.py	/^ranges = np.ptp(np.array(model.bounds).reshape(-1, 2), axis=1)$/;"	v
ratio	examples/01-filter/decimate.py	/^ratio = 1.1$/;"	v
ratio_to_keep	examples/01-filter/image_fft.py	/^ratio_to_keep = 0.10$/;"	v
ray	examples/01-filter/poly_ray_trace.py	/^ray = pv.Line(start, stop)$/;"	v
ray_plane_intersection	build/lib/pyvista/plotting/affine_widget.py	/^def ray_plane_intersection(start_point, direction, plane_point, normal):$/;"	f
ray_plane_intersection	pyvista/plotting/affine_widget.py	/^def ray_plane_intersection(start_point, direction, plane_point, normal):$/;"	f
ray_plane_intersection	tests/plotting/test_widgets.py	/^from pyvista.plotting.affine_widget import ray_plane_intersection$/;"	i
ray_trace	build/lib/pyvista/core/filters/poly_data.py	/^    def ray_trace($/;"	m	class:PolyDataFilters
ray_trace	pyvista/core/filters/poly_data.py	/^    def ray_trace($/;"	m	class:PolyDataFilters
ray_triangle_intersection	examples/99-advanced/ray_trace_moeller.py	/^def ray_triangle_intersection(ray_start, ray_vec, triangle):$/;"	f
re	build/lib/pyvista/core/filters/data_object.py	/^import re$/;"	i
re	build/lib/pyvista/core/utilities/observers.py	/^import re$/;"	i
re	build/lib/pyvista/ext/coverage.py	/^import re$/;"	i
re	build/lib/pyvista/ext/plot_directive.py	/^import re$/;"	i
re	build/lib/pyvista/plotting/charts.py	/^import re$/;"	i
re	build/lib/pyvista/report.py	/^import re$/;"	i
re	doc/source/conf.py	/^import re$/;"	i
re	doc/source/make_tables.py	/^import re$/;"	i
re	pyvista/core/filters/data_object.py	/^import re$/;"	i
re	pyvista/core/utilities/observers.py	/^import re$/;"	i
re	pyvista/ext/coverage.py	/^import re$/;"	i
re	pyvista/ext/plot_directive.py	/^import re$/;"	i
re	pyvista/plotting/charts.py	/^import re$/;"	i
re	pyvista/report.py	/^import re$/;"	i
re	tests/check_doctest_names.py	/^import re$/;"	i
re	tests/conftest.py	/^import re$/;"	i
re	tests/core/test_composite.py	/^import re$/;"	i
re	tests/core/test_dataobject.py	/^import re$/;"	i
re	tests/core/test_dataobject_filters.py	/^import re$/;"	i
re	tests/core/test_dataset.py	/^import re$/;"	i
re	tests/core/test_dataset_filters.py	/^import re$/;"	i
re	tests/core/test_datasetattributes.py	/^import re$/;"	i
re	tests/core/test_geometric_objects.py	/^import re$/;"	i
re	tests/core/test_geometric_sources.py	/^import re$/;"	i
re	tests/core/test_grid.py	/^import re$/;"	i
re	tests/core/test_helpers.py	/^import re$/;"	i
re	tests/core/test_imagedata_filters.py	/^import re$/;"	i
re	tests/core/test_partitioned.py	/^import re$/;"	i
re	tests/core/test_polydata.py	/^import re$/;"	i
re	tests/core/test_pyvista_ndarray.py	/^import re$/;"	i
re	tests/core/test_reader.py	/^import re$/;"	i
re	tests/core/test_utilities.py	/^import re$/;"	i
re	tests/plotting/test_axes.py	/^import re$/;"	i
re	tests/plotting/test_axes_assembly.py	/^import re$/;"	i
re	tests/plotting/test_colors.py	/^import re$/;"	i
re	tests/plotting/test_lookup_table.py	/^import re$/;"	i
re	tests/plotting/test_picking.py	/^import re$/;"	i
re	tests/plotting/test_plotter.py	/^import re$/;"	i
re	tests/plotting/test_plotting.py	/^import re$/;"	i
re	tests/plotting/test_regression.py	/^import re$/;"	i
re	tests/plotting/test_render_window_interactor.py	/^import re$/;"	i
re	tests/plotting/test_renderer.py	/^import re$/;"	i
re	tests/plotting/test_utilities.py	/^import re$/;"	i
re	tests/plotting/test_widgets.py	/^import re$/;"	i
re	tests/plotting/tinypages/conf.py	/^import re$/;"	i
re	tests/test_conftest.py	/^import re$/;"	i
read	build/lib/pyvista/core/dataobject.py	/^from .utilities.fileio import read$/;"	i
read	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import read as read$/;"	i
read	build/lib/pyvista/core/utilities/fileio.py	/^def read($/;"	f
read	build/lib/pyvista/core/utilities/reader.py	/^    def read(self):$/;"	m	class:BaseReader
read	build/lib/pyvista/core/utilities/reader.py	/^    def read(self):$/;"	m	class:HDFReader
read	build/lib/pyvista/core/utilities/reader.py	/^    def read(self, grid: bool = True):$/;"	m	class:GaussianCubeReader
read	build/lib/pyvista/examples/downloads.py	/^from pyvista.core.utilities.fileio import read$/;"	i
read	build/lib/pyvista/plotting/utilities/regression.py	/^    from pyvista import read$/;"	i
read	pyvista/core/dataobject.py	/^from .utilities.fileio import read$/;"	i
read	pyvista/core/utilities/__init__.py	/^from .fileio import read as read$/;"	i
read	pyvista/core/utilities/fileio.py	/^def read($/;"	f
read	pyvista/core/utilities/reader.py	/^    def read(self):$/;"	m	class:BaseReader
read	pyvista/core/utilities/reader.py	/^    def read(self):$/;"	m	class:HDFReader
read	pyvista/core/utilities/reader.py	/^    def read(self, grid: bool = True):$/;"	m	class:GaussianCubeReader
read	pyvista/examples/downloads.py	/^from pyvista.core.utilities.fileio import read$/;"	i
read	pyvista/plotting/utilities/regression.py	/^    from pyvista import read$/;"	i
read	tests/core/test_reader.py	/^    def read(content, include_content, **kwargs):$/;"	f	function:test_grdecl_reader
read_buffer	build/lib/pyvista/core/utilities/fileio.py	/^    def read_buffer($/;"	f	function:read_grdecl
read_buffer	pyvista/core/utilities/fileio.py	/^    def read_buffer($/;"	f	function:read_grdecl
read_exodus	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import read_exodus as read_exodus$/;"	i
read_exodus	build/lib/pyvista/core/utilities/fileio.py	/^def read_exodus($/;"	f
read_exodus	pyvista/core/utilities/__init__.py	/^from .fileio import read_exodus as read_exodus$/;"	i
read_exodus	pyvista/core/utilities/fileio.py	/^def read_exodus($/;"	f
read_func	build/lib/pyvista/examples/downloads.py	/^    def read_func(filename):$/;"	f	function:_lshape_files_func
read_func	build/lib/pyvista/examples/downloads.py	/^    read_func=_cgns_multi_read_func,$/;"	v
read_func	build/lib/pyvista/examples/downloads.py	/^    read_func=_openfoam_tubes_read_func,$/;"	v
read_func	build/lib/pyvista/examples/downloads.py	/^    read_func=_sparse_points_reader,$/;"	v
read_func	pyvista/examples/downloads.py	/^    def read_func(filename):$/;"	f	function:_lshape_files_func
read_func	pyvista/examples/downloads.py	/^    read_func=_cgns_multi_read_func,$/;"	v
read_func	pyvista/examples/downloads.py	/^    read_func=_openfoam_tubes_read_func,$/;"	v
read_func	pyvista/examples/downloads.py	/^    read_func=_sparse_points_reader,$/;"	v
read_global	build/lib/pyvista/core/utilities/reader.py	/^    def read_global(self) -> pyvista.Table:$/;"	m	class:ExodusIIReader
read_global	pyvista/core/utilities/reader.py	/^    def read_global(self) -> pyvista.Table:$/;"	m	class:ExodusIIReader
read_grdecl	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import read_grdecl as read_grdecl$/;"	i
read_grdecl	build/lib/pyvista/core/utilities/fileio.py	/^def read_grdecl($/;"	f
read_grdecl	pyvista/core/utilities/__init__.py	/^from .fileio import read_grdecl as read_grdecl$/;"	i
read_grdecl	pyvista/core/utilities/fileio.py	/^def read_grdecl($/;"	f
read_keyword	build/lib/pyvista/core/utilities/fileio.py	/^    def read_keyword($/;"	f	function:read_grdecl
read_keyword	build/lib/pyvista/core/utilities/fileio.py	/^    def read_keyword(f: TextIO, split: Literal[False] = False, converter: type = ...) -> str: ...$/;"	f	function:read_grdecl
read_keyword	build/lib/pyvista/core/utilities/fileio.py	/^    def read_keyword(f: TextIO, split: bool = ..., converter: type = ...) -> list[str]: ...$/;"	f	function:read_grdecl
read_keyword	pyvista/core/utilities/fileio.py	/^    def read_keyword($/;"	f	function:read_grdecl
read_keyword	pyvista/core/utilities/fileio.py	/^    def read_keyword(f: TextIO, split: Literal[False] = False, converter: type = ...) -> str: ...$/;"	f	function:read_grdecl
read_keyword	pyvista/core/utilities/fileio.py	/^    def read_keyword(f: TextIO, split: bool = ..., converter: type = ...) -> list[str]: ...$/;"	f	function:read_grdecl
read_keywords	build/lib/pyvista/core/utilities/fileio.py	/^    def read_keywords(filename: str | Path, other_keywords: Sequence[str]) -> dict[str, Any]:$/;"	f	function:read_grdecl
read_keywords	pyvista/core/utilities/fileio.py	/^    def read_keywords(filename: str | Path, other_keywords: Sequence[str]) -> dict[str, Any]:$/;"	f	function:read_grdecl
read_meshio	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import read_meshio as read_meshio$/;"	i
read_meshio	build/lib/pyvista/core/utilities/fileio.py	/^def read_meshio(filename: str | Path, file_format: str | None = None) -> meshio.Mesh:$/;"	f
read_meshio	pyvista/core/utilities/__init__.py	/^from .fileio import read_meshio as read_meshio$/;"	i
read_meshio	pyvista/core/utilities/fileio.py	/^def read_meshio(filename: str | Path, file_format: str | None = None) -> meshio.Mesh:$/;"	f
read_pickle	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import read_pickle as read_pickle$/;"	i
read_pickle	build/lib/pyvista/core/utilities/fileio.py	/^def read_pickle(filename: str | Path) -> DataObject:$/;"	f
read_pickle	pyvista/core/utilities/__init__.py	/^from .fileio import read_pickle as read_pickle$/;"	i
read_pickle	pyvista/core/utilities/fileio.py	/^def read_pickle(filename: str | Path) -> DataObject:$/;"	f
read_texture	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import read_texture as read_texture$/;"	i
read_texture	build/lib/pyvista/core/utilities/fileio.py	/^def read_texture(filename: str | Path, progress_bar: bool = False) -> Texture:$/;"	f
read_texture	build/lib/pyvista/examples/downloads.py	/^from pyvista.core.utilities.fileio import read_texture$/;"	i
read_texture	pyvista/core/utilities/__init__.py	/^from .fileio import read_texture as read_texture$/;"	i
read_texture	pyvista/core/utilities/fileio.py	/^def read_texture(filename: str | Path, progress_bar: bool = False) -> Texture:$/;"	f
read_texture	pyvista/examples/downloads.py	/^from pyvista.core.utilities.fileio import read_texture$/;"	i
reader	build/lib/pyvista/core/utilities/reader.py	/^    def reader(self):$/;"	m	class:BaseReader
reader	examples/00-load/reader.py	/^reader = pyvista.get_reader(filename)$/;"	v
reader	examples/00-load/reader.py	/^reader = pyvista.get_reader(temp_file.name)$/;"	v
reader	examples/99-advanced/openfoam_example.py	/^reader = pyvista.POpenFOAMReader(filename)$/;"	v
reader	pyvista/core/utilities/reader.py	/^    def reader(self):$/;"	m	class:BaseReader
reader_mesh	examples/00-load/reader.py	/^reader_mesh = reader.read()$/;"	v
reader_mesh_2	examples/00-load/reader.py	/^reader_mesh_2 = reader.read()$/;"	v
reason	tests/core/test_reader.py	/^    reason='polyhedra decomposition was removed after 9.3',$/;"	v
reason	tests/examples/test_download_files.py	/^    reason='Skip until glTF extension KHR_texture_transform is supported.',$/;"	v
reason	tests/plotting/test_charts.py	/^    reason='Chart interaction when using multiple renderers is bugged on older versions.',$/;"	v
reason	tests/plotting/test_demos.py	/^    reason='Test requires system to support plotting',$/;"	v
reason	tests/plotting/test_plotting.py	/^    reason='Functions not implemented before 9.0.X',$/;"	v
reason	tests/plotting/test_plotting.py	/^    reason='Functions not implemented before 9.3.X',$/;"	v
reason	tests/plotting/test_render_window_interactor.py	/^    reason='Other RenderWindowInteractors do not invoke TimerEvents during ProcessEvents.',$/;"	v
reason	tests/plotting/test_render_window_interactor.py	/^    reason='vtkXRenderWindowInteractor (Linux) does not invoke TimerEvents during ProcessEvents until VTK9.2.',$/;"	v
rebuild	build/lib/pyvista/plotting/lookup_table.py	/^    def rebuild(self):$/;"	m	class:LookupTable
rebuild	pyvista/plotting/lookup_table.py	/^    def rebuild(self):$/;"	m	class:LookupTable
reconstruct_surface	build/lib/pyvista/core/filters/poly_data.py	/^    def reconstruct_surface(self, nbr_sz=None, sample_spacing=None, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
reconstruct_surface	build/lib/pyvista/core/filters/unstructured_grid.py	/^    def reconstruct_surface(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:UnstructuredGridFilters
reconstruct_surface	pyvista/core/filters/poly_data.py	/^    def reconstruct_surface(self, nbr_sz=None, sample_spacing=None, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
reconstruct_surface	pyvista/core/filters/unstructured_grid.py	/^    def reconstruct_surface(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:UnstructuredGridFilters
rectfile	build/lib/pyvista/examples/examples.py	/^rectfile = str(Path(dir_path) \/ 'rectilinear.vtk')$/;"	v
rectfile	pyvista/examples/examples.py	/^rectfile = str(Path(dir_path) \/ 'rectilinear.vtk')$/;"	v
rectilinear	tests/conftest.py	/^def rectilinear():$/;"	f
recursive_iterator	build/lib/pyvista/core/composite.py	/^    def recursive_iterator($/;"	m	class:MultiBlock
recursive_iterator	pyvista/core/composite.py	/^    def recursive_iterator($/;"	m	class:MultiBlock
red	build/lib/pyvista/ext/coverage.py	/^from sphinx.util.console import red$/;"	i
red	examples/02-plot/cmap.py	/^red = np.array([1.0, 0.0, 0.0, 1.0])$/;"	v
red	pyvista/ext/coverage.py	/^from sphinx.util.console import red$/;"	i
redef	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
redef	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
redef	build/lib/pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
redef	build/lib/pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
redef	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
redef	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
redef	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
redef	build/lib/pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
redef	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
redef	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
redef	pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
redef	pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
redef	pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
redef	pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
redef	pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
redef	pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
redraw_on_render	build/lib/pyvista/plotting/charts.py	/^    def redraw_on_render(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
redraw_on_render	build/lib/pyvista/plotting/charts.py	/^    def redraw_on_render(self, val) -> None:$/;"	m	class:ChartMPL
redraw_on_render	pyvista/plotting/charts.py	/^    def redraw_on_render(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
redraw_on_render	pyvista/plotting/charts.py	/^    def redraw_on_render(self, val) -> None:$/;"	m	class:ChartMPL
reference	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import reference as reference$/;"	i
reference	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import reference as reference$/;"	i
referrers	tests/plotting/conftest.py	/^        referrers = [v for v in gc.get_referrers(obj) if v is not after and v is not cf]$/;"	v	class:check_gc.GcHandler
reflect	build/lib/pyvista/core/filters/data_object.py	/^    def reflect(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
reflect	build/lib/pyvista/core/utilities/transform.py	/^    def reflect($/;"	m	class:Transform
reflect	pyvista/core/filters/data_object.py	/^    def reflect(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
reflect	pyvista/core/utilities/transform.py	/^    def reflect($/;"	m	class:Transform
reflection	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import reflection$/;"	i
reflection	build/lib/pyvista/core/utilities/transformations.py	/^def reflection($/;"	f
reflection	pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.transformations import reflection$/;"	i
reflection	pyvista/core/utilities/transformations.py	/^def reflection($/;"	f
region_ids	examples/01-filter/connectivity.py	/^region_ids = np.unique(all_regions['RegionId'])$/;"	v
registry	build/lib/pyvista/examples/downloads.py	/^    registry={},$/;"	v
registry	build/lib/pyvista/examples/gltf.py	/^    registry={$/;"	v
registry	pyvista/examples/downloads.py	/^    registry={},$/;"	v
registry	pyvista/examples/gltf.py	/^    registry={$/;"	v
regression	tests/plotting/test_regression.py	/^from pyvista.plotting.utilities import regression$/;"	i
regular_cells	build/lib/pyvista/core/cell.py	/^    def regular_cells(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
regular_cells	pyvista/core/cell.py	/^    def regular_cells(self: Self) -> NumpyArray[int]:$/;"	m	class:CellArray
regular_faces	build/lib/pyvista/core/pointset.py	/^    def regular_faces(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
regular_faces	build/lib/pyvista/core/pointset.py	/^    def regular_faces(self, faces: MatrixLike[int]) -> None:  # numpydoc ignore=PR01$/;"	m	class:PolyData
regular_faces	pyvista/core/pointset.py	/^    def regular_faces(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
regular_faces	pyvista/core/pointset.py	/^    def regular_faces(self, faces: MatrixLike[int]) -> None:  # numpydoc ignore=PR01$/;"	m	class:PolyData
relative_path	build/lib/pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
relative_path	pyvista/ext/viewer_directive.py	/^from docutils.utils import relative_path  # pragma: no cover$/;"	i
relative_position	build/lib/pyvista/plotting/text.py	/^    def relative_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Label
relative_position	build/lib/pyvista/plotting/text.py	/^    def relative_position(self, position: VectorLike[float]):$/;"	m	class:Label
relative_position	pyvista/plotting/text.py	/^    def relative_position(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Label
relative_position	pyvista/plotting/text.py	/^    def relative_position(self, position: VectorLike[float]):$/;"	m	class:Label
release	doc/source/conf.py	/^release = pyvista.__version__$/;"	v
release	tests/plotting/tinypages/conf.py	/^release = '0.1'$/;"	v
release_callback	tests/plotting/test_widgets.py	/^    def release_callback(transform):$/;"	f	function:test_affine_widget
relpath	build/lib/pyvista/ext/plot_directive.py	/^from os.path import relpath$/;"	i
relpath	pyvista/ext/plot_directive.py	/^from os.path import relpath$/;"	i
remove	build/lib/pyvista/core/datasetattributes.py	/^    def remove(self: Self, key: str) -> None:$/;"	m	class:DataSetAttributes
remove	build/lib/pyvista/plotting/affine_widget.py	/^    def remove(self):$/;"	m	class:AffineWidget3D
remove	pyvista/core/datasetattributes.py	/^    def remove(self: Self, key: str) -> None:$/;"	m	class:DataSetAttributes
remove	pyvista/plotting/affine_widget.py	/^    def remove(self):$/;"	m	class:AffineWidget3D
remove_actor	build/lib/pyvista/plotting/plotter.py	/^    def remove_actor(self, *args, **kwargs) -> bool:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_actor	build/lib/pyvista/plotting/renderer.py	/^    def remove_actor(self, actor, reset_camera=False, render=True):$/;"	m	class:Renderer
remove_actor	pyvista/plotting/plotter.py	/^    def remove_actor(self, *args, **kwargs) -> bool:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_actor	pyvista/plotting/renderer.py	/^    def remove_actor(self, actor, reset_camera=False, render=True):$/;"	m	class:Renderer
remove_all_functions	build/lib/pyvista/core/utilities/reader.py	/^    def remove_all_functions(self) -> None:$/;"	m	class:MultiBlockPlot3DReader
remove_all_functions	pyvista/core/utilities/reader.py	/^    def remove_all_functions(self) -> None:$/;"	m	class:MultiBlockPlot3DReader
remove_all_lights	build/lib/pyvista/plotting/plotter.py	/^    def remove_all_lights(self, only_active=False) -> None:$/;"	m	class:BasePlotter
remove_all_lights	build/lib/pyvista/plotting/renderer.py	/^    def remove_all_lights(self) -> None:$/;"	m	class:Renderer
remove_all_lights	build/lib/pyvista/plotting/renderers.py	/^    def remove_all_lights(self):$/;"	m	class:Renderers
remove_all_lights	pyvista/plotting/plotter.py	/^    def remove_all_lights(self, only_active=False) -> None:$/;"	m	class:BasePlotter
remove_all_lights	pyvista/plotting/renderer.py	/^    def remove_all_lights(self) -> None:$/;"	m	class:Renderer
remove_all_lights	pyvista/plotting/renderers.py	/^    def remove_all_lights(self):$/;"	m	class:Renderers
remove_alpha	build/lib/pyvista/plotting/utilities/__init__.py	/^from .regression import remove_alpha as remove_alpha$/;"	i
remove_alpha	build/lib/pyvista/plotting/utilities/regression.py	/^def remove_alpha(img):$/;"	f
remove_alpha	pyvista/plotting/utilities/__init__.py	/^from .regression import remove_alpha as remove_alpha$/;"	i
remove_alpha	pyvista/plotting/utilities/regression.py	/^def remove_alpha(img):$/;"	f
remove_background_image	build/lib/pyvista/plotting/plotter.py	/^    def remove_background_image(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_background_image	build/lib/pyvista/plotting/renderers.py	/^    def remove_background_image(self):$/;"	m	class:Renderers
remove_background_image	pyvista/plotting/plotter.py	/^    def remove_background_image(self) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_background_image	pyvista/plotting/renderers.py	/^    def remove_background_image(self):$/;"	m	class:Renderers
remove_blur_pass	build/lib/pyvista/plotting/render_passes.py	/^    def remove_blur_pass(self):$/;"	m	class:RenderPasses
remove_blur_pass	pyvista/plotting/render_passes.py	/^    def remove_blur_pass(self):$/;"	m	class:RenderPasses
remove_blurring	build/lib/pyvista/plotting/plotter.py	/^    def remove_blurring(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_blurring	build/lib/pyvista/plotting/renderer.py	/^    def remove_blurring(self) -> None:$/;"	m	class:Renderer
remove_blurring	pyvista/plotting/plotter.py	/^    def remove_blurring(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_blurring	pyvista/plotting/renderer.py	/^    def remove_blurring(self) -> None:$/;"	m	class:Renderer
remove_bounding_box	build/lib/pyvista/plotting/plotter.py	/^    def remove_bounding_box(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_bounding_box	build/lib/pyvista/plotting/renderer.py	/^    def remove_bounding_box(self, render=True) -> None:$/;"	m	class:Renderer
remove_bounding_box	pyvista/plotting/plotter.py	/^    def remove_bounding_box(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_bounding_box	pyvista/plotting/renderer.py	/^    def remove_bounding_box(self, render=True) -> None:$/;"	m	class:Renderer
remove_bounds_axes	build/lib/pyvista/plotting/plotter.py	/^    def remove_bounds_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_bounds_axes	build/lib/pyvista/plotting/renderer.py	/^    def remove_bounds_axes(self) -> None:$/;"	m	class:Renderer
remove_bounds_axes	pyvista/plotting/plotter.py	/^    def remove_bounds_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_bounds_axes	pyvista/plotting/renderer.py	/^    def remove_bounds_axes(self) -> None:$/;"	m	class:Renderer
remove_cells	build/lib/pyvista/core/pointset.py	/^    def remove_cells($/;"	m	class:_PointSet
remove_cells	build/lib/pyvista/core/pointset.py	/^    def remove_cells(self, *args, **kwargs):$/;"	m	class:PointSet
remove_cells	pyvista/core/pointset.py	/^    def remove_cells($/;"	m	class:_PointSet
remove_cells	pyvista/core/pointset.py	/^    def remove_cells(self, *args, **kwargs):$/;"	m	class:PointSet
remove_chart	build/lib/pyvista/plotting/charts.py	/^    def remove_chart(self, chart_or_index):$/;"	m	class:Charts
remove_chart	build/lib/pyvista/plotting/plotter.py	/^    def remove_chart(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_chart	build/lib/pyvista/plotting/renderer.py	/^    def remove_chart(self, chart_or_index) -> None:$/;"	m	class:Renderer
remove_chart	pyvista/plotting/charts.py	/^    def remove_chart(self, chart_or_index):$/;"	m	class:Charts
remove_chart	pyvista/plotting/plotter.py	/^    def remove_chart(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_chart	pyvista/plotting/renderer.py	/^    def remove_chart(self, chart_or_index) -> None:$/;"	m	class:Renderer
remove_environment_texture	build/lib/pyvista/plotting/plotter.py	/^    def remove_environment_texture(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_environment_texture	build/lib/pyvista/plotting/renderer.py	/^    def remove_environment_texture(self) -> None:$/;"	m	class:Renderer
remove_environment_texture	pyvista/plotting/plotter.py	/^    def remove_environment_texture(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_environment_texture	pyvista/plotting/renderer.py	/^    def remove_environment_texture(self) -> None:$/;"	m	class:Renderer
remove_floors	build/lib/pyvista/plotting/plotter.py	/^    def remove_floors(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_floors	build/lib/pyvista/plotting/renderer.py	/^    def remove_floors(self, clear_kwargs=True, render=True) -> None:$/;"	m	class:Renderer
remove_floors	pyvista/plotting/plotter.py	/^    def remove_floors(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_floors	pyvista/plotting/renderer.py	/^    def remove_floors(self, clear_kwargs=True, render=True) -> None:$/;"	m	class:Renderer
remove_function	build/lib/pyvista/core/utilities/reader.py	/^    def remove_function(self, value: int | Plot3DFunctionEnum) -> None:$/;"	m	class:MultiBlockPlot3DReader
remove_function	pyvista/core/utilities/reader.py	/^    def remove_function(self, value: int | Plot3DFunctionEnum) -> None:$/;"	m	class:MultiBlockPlot3DReader
remove_legend	build/lib/pyvista/plotting/plotter.py	/^    def remove_legend(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_legend	build/lib/pyvista/plotting/renderer.py	/^    def remove_legend(self, render=True) -> None:$/;"	m	class:Renderer
remove_legend	pyvista/plotting/plotter.py	/^    def remove_legend(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_legend	pyvista/plotting/renderer.py	/^    def remove_legend(self, render=True) -> None:$/;"	m	class:Renderer
remove_observer	build/lib/pyvista/plotting/render_window_interactor.py	/^    def remove_observer(self, observer):$/;"	m	class:RenderWindowInteractor
remove_observer	pyvista/plotting/render_window_interactor.py	/^    def remove_observer(self, observer):$/;"	m	class:RenderWindowInteractor
remove_observers	build/lib/pyvista/plotting/render_window_interactor.py	/^            def remove_observers(self):$/;"	m	class:_style_factory._make_class.CustomStyle
remove_observers	build/lib/pyvista/plotting/render_window_interactor.py	/^    def remove_observers(self, event=None):$/;"	m	class:RenderWindowInteractor
remove_observers	pyvista/plotting/render_window_interactor.py	/^            def remove_observers(self):$/;"	m	class:_style_factory._make_class.CustomStyle
remove_observers	pyvista/plotting/render_window_interactor.py	/^    def remove_observers(self, event=None):$/;"	m	class:RenderWindowInteractor
remove_plot	build/lib/pyvista/plotting/charts.py	/^    def remove_plot(self, plot):$/;"	m	class:Chart2D
remove_plot	pyvista/plotting/charts.py	/^    def remove_plot(self, plot):$/;"	m	class:Chart2D
remove_points	build/lib/pyvista/core/filters/poly_data.py	/^    def remove_points(self, remove, mode='any', keep_scalars: bool = True, inplace: bool = False):$/;"	m	class:PolyDataFilters
remove_points	pyvista/core/filters/poly_data.py	/^    def remove_points(self, remove, mode='any', keep_scalars: bool = True, inplace: bool = False):$/;"	m	class:PolyDataFilters
remove_scalar_bar	build/lib/pyvista/plotting/plotter.py	/^    def remove_scalar_bar(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_scalar_bar	build/lib/pyvista/plotting/scalar_bars.py	/^    def remove_scalar_bar(self, title=None, render: bool = True):$/;"	m	class:ScalarBars
remove_scalar_bar	pyvista/plotting/plotter.py	/^    def remove_scalar_bar(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
remove_scalar_bar	pyvista/plotting/scalar_bars.py	/^    def remove_scalar_bar(self, title=None, render: bool = True):$/;"	m	class:ScalarBars
rename_array	build/lib/pyvista/core/dataset.py	/^    def rename_array($/;"	m	class:DataSet
rename_array	pyvista/core/dataset.py	/^    def rename_array($/;"	m	class:DataSet
render	build/lib/pyvista/plotting/plotter.py	/^    def render(self) -> None:$/;"	m	class:BasePlotter
render	pyvista/plotting/plotter.py	/^    def render(self) -> None:$/;"	m	class:BasePlotter
render_figures	build/lib/pyvista/ext/plot_directive.py	/^def render_figures($/;"	f
render_figures	pyvista/ext/plot_directive.py	/^def render_figures($/;"	f
render_lines_as_tubes	build/lib/pyvista/demos/logo.py	/^        render_lines_as_tubes=True,$/;"	v
render_lines_as_tubes	build/lib/pyvista/plotting/_property.py	/^    def render_lines_as_tubes(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
render_lines_as_tubes	build/lib/pyvista/plotting/_property.py	/^    def render_lines_as_tubes(self, value: bool):$/;"	m	class:Property
render_lines_as_tubes	build/lib/pyvista/plotting/themes.py	/^    def render_lines_as_tubes(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
render_lines_as_tubes	build/lib/pyvista/plotting/themes.py	/^    def render_lines_as_tubes(self, render_lines_as_tubes: bool):$/;"	m	class:Theme
render_lines_as_tubes	examples/00-load/create_truss.py	/^    render_lines_as_tubes=True,$/;"	v
render_lines_as_tubes	examples/99-advanced/openfoam_tubes.py	/^    render_lines_as_tubes=True,$/;"	v
render_lines_as_tubes	pyvista/demos/logo.py	/^        render_lines_as_tubes=True,$/;"	v
render_lines_as_tubes	pyvista/plotting/_property.py	/^    def render_lines_as_tubes(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
render_lines_as_tubes	pyvista/plotting/_property.py	/^    def render_lines_as_tubes(self, value: bool):$/;"	m	class:Property
render_lines_as_tubes	pyvista/plotting/themes.py	/^    def render_lines_as_tubes(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
render_lines_as_tubes	pyvista/plotting/themes.py	/^    def render_lines_as_tubes(self, render_lines_as_tubes: bool):$/;"	m	class:Theme
render_points_as_spheres	build/lib/pyvista/demos/logo.py	/^        render_points_as_spheres=True,$/;"	v
render_points_as_spheres	build/lib/pyvista/plotting/_property.py	/^    def render_points_as_spheres(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
render_points_as_spheres	build/lib/pyvista/plotting/_property.py	/^    def render_points_as_spheres(self, value: bool):$/;"	m	class:Property
render_points_as_spheres	build/lib/pyvista/plotting/themes.py	/^    def render_points_as_spheres(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
render_points_as_spheres	build/lib/pyvista/plotting/themes.py	/^    def render_points_as_spheres(self, render_points_as_spheres: bool):$/;"	m	class:Theme
render_points_as_spheres	examples/00-load/create_kochanek_spline.py	/^        render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/00-load/wrap_trimesh.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/01-filter/cell_centers.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/01-filter/extrude_rotate.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/01-filter/image_representations.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/02-plot/distance_along_spline.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/02-plot/point_clouds.py	/^    render_points_as_spheres=False,$/;"	v
render_points_as_spheres	examples/02-plot/point_clouds.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/02-plot/points_gaussian_scale.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/02-plot/vertices.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/98-common/project_points_tessellate.py	/^    render_points_as_spheres=True,$/;"	v
render_points_as_spheres	examples/99-advanced/atomic_orbitals.py	/^    render_points_as_spheres=False,$/;"	v
render_points_as_spheres	pyvista/demos/logo.py	/^        render_points_as_spheres=True,$/;"	v
render_points_as_spheres	pyvista/plotting/_property.py	/^    def render_points_as_spheres(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
render_points_as_spheres	pyvista/plotting/_property.py	/^    def render_points_as_spheres(self, value: bool):$/;"	m	class:Property
render_points_as_spheres	pyvista/plotting/themes.py	/^    def render_points_as_spheres(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
render_points_as_spheres	pyvista/plotting/themes.py	/^    def render_points_as_spheres(self, render_points_as_spheres: bool):$/;"	m	class:Theme
render_window	build/lib/pyvista/plotting/plotter.py	/^    def render_window(self) -> _vtk.vtkRenderWindow | None:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
render_window	pyvista/plotting/plotter.py	/^    def render_window(self) -> _vtk.vtkRenderWindow | None:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
render_window_interactor	tests/plotting/test_render_window_interactor.py	/^    from pyvista.plotting import render_window_interactor$/;"	i
renderer	build/lib/pyvista/plotting/plotter.py	/^    def renderer(self) -> Renderer:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
renderer	build/lib/pyvista/report.py	/^    def renderer(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
renderer	pyvista/plotting/plotter.py	/^    def renderer(self) -> Renderer:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
renderer	pyvista/report.py	/^    def renderer(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
renderers	build/lib/pyvista/plotting/lights.py	/^    def renderers(self):  # numpydoc ignore=RT01$/;"	m	class:Light
renderers	pyvista/plotting/lights.py	/^    def renderers(self):  # numpydoc ignore=RT01$/;"	m	class:Light
repeat	build/lib/pyvista/plotting/texture.py	/^    def repeat(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
repeat	build/lib/pyvista/plotting/texture.py	/^    def repeat(self, flag: bool):$/;"	m	class:Texture
repeat	pyvista/plotting/texture.py	/^    def repeat(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Texture
repeat	pyvista/plotting/texture.py	/^    def repeat(self, flag: bool):$/;"	m	class:Texture
replace	build/lib/pyvista/core/composite.py	/^    def replace($/;"	m	class:MultiBlock
replace	pyvista/core/composite.py	/^    def replace($/;"	m	class:MultiBlock
representation	build/lib/pyvista/plotting/actor_properties.py	/^    def representation(self) -> RepresentationType:  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
representation	build/lib/pyvista/plotting/actor_properties.py	/^    def representation(self, value: RepresentationType):$/;"	m	class:ActorProperties
representation	pyvista/plotting/actor_properties.py	/^    def representation(self) -> RepresentationType:  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
representation	pyvista/plotting/actor_properties.py	/^    def representation(self, value: RepresentationType):$/;"	m	class:ActorProperties
reprlib	build/lib/pyvista/core/_validation/check.py	/^import reprlib$/;"	i
reprlib	build/lib/pyvista/core/_validation/validate.py	/^import reprlib$/;"	i
reprlib	pyvista/core/_validation/check.py	/^import reprlib$/;"	i
reprlib	pyvista/core/_validation/validate.py	/^import reprlib$/;"	i
requests	tests/examples/test_downloads.py	/^import requests$/;"	i
required_arguments	build/lib/pyvista/ext/plot_directive.py	/^    required_arguments = 0$/;"	v	class:PlotDirective
required_arguments	build/lib/pyvista/ext/viewer_directive.py	/^    required_arguments = 1$/;"	v	class:OfflineViewerDirective
required_arguments	pyvista/ext/plot_directive.py	/^    required_arguments = 0$/;"	v	class:PlotDirective
required_arguments	pyvista/ext/viewer_directive.py	/^    required_arguments = 1$/;"	v	class:OfflineViewerDirective
resample	build/lib/pyvista/core/filters/image_data.py	/^    def resample(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
resample	pyvista/core/filters/image_data.py	/^    def resample(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
reset	examples/02-plot/mesh_picking.py	/^def reset():$/;"	f
reset	tests/core/test_dataset_filters.py	/^    def reset(self, *args, **kwargs):$/;"	m	class:GetOutput
reset_camera	build/lib/pyvista/plotting/plotter.py	/^    def reset_camera(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
reset_camera	build/lib/pyvista/plotting/renderer.py	/^    def reset_camera(self, render=True, bounds=None) -> None:$/;"	m	class:Renderer
reset_camera	build/lib/pyvista/trame/ui/base_viewer.py	/^    def reset_camera(self, **kwargs):$/;"	m	class:BaseViewer
reset_camera	examples/99-advanced/sphere_eversion.py	/^    reset_camera=True,$/;"	v
reset_camera	pyvista/plotting/plotter.py	/^    def reset_camera(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
reset_camera	pyvista/plotting/renderer.py	/^    def reset_camera(self, render=True, bounds=None) -> None:$/;"	m	class:Renderer
reset_camera	pyvista/trame/ui/base_viewer.py	/^    def reset_camera(self, **kwargs):$/;"	m	class:BaseViewer
reset_camera_clipping_range	build/lib/pyvista/plotting/plotter.py	/^    def reset_camera_clipping_range(self) -> None:$/;"	m	class:BasePlotter
reset_camera_clipping_range	build/lib/pyvista/plotting/renderer.py	/^    def reset_camera_clipping_range(self) -> None:$/;"	m	class:Renderer
reset_camera_clipping_range	pyvista/plotting/plotter.py	/^    def reset_camera_clipping_range(self) -> None:$/;"	m	class:BasePlotter
reset_camera_clipping_range	pyvista/plotting/renderer.py	/^    def reset_camera_clipping_range(self) -> None:$/;"	m	class:Renderer
reset_clipping_range	build/lib/pyvista/plotting/camera.py	/^    def reset_clipping_range(self):$/;"	m	class:Camera
reset_clipping_range	pyvista/plotting/camera.py	/^    def reset_clipping_range(self):$/;"	m	class:Camera
reset_colors	build/lib/pyvista/plotting/composite_mapper.py	/^    def reset_colors(self):$/;"	m	class:CompositeAttributes
reset_colors	pyvista/plotting/composite_mapper.py	/^    def reset_colors(self):$/;"	m	class:CompositeAttributes
reset_gloal_theme	build/lib/pyvista/conftest.py	/^def reset_gloal_theme():$/;"	f
reset_gloal_theme	pyvista/conftest.py	/^def reset_gloal_theme():$/;"	f
reset_key_events	build/lib/pyvista/plotting/plotter.py	/^    def reset_key_events(self):$/;"	m	class:BasePlotter
reset_key_events	pyvista/plotting/plotter.py	/^    def reset_key_events(self):$/;"	m	class:BasePlotter
reset_opacities	build/lib/pyvista/plotting/composite_mapper.py	/^    def reset_opacities(self):$/;"	m	class:CompositeAttributes
reset_opacities	pyvista/plotting/composite_mapper.py	/^    def reset_opacities(self):$/;"	m	class:CompositeAttributes
reset_pickabilities	build/lib/pyvista/plotting/composite_mapper.py	/^    def reset_pickabilities(self):$/;"	m	class:CompositeAttributes
reset_pickabilities	pyvista/plotting/composite_mapper.py	/^    def reset_pickabilities(self):$/;"	m	class:CompositeAttributes
reset_picker	build/lib/pyvista/plotting/render_window_interactor.py	/^    def reset_picker(self):$/;"	m	class:RenderWindowInteractor
reset_picker	pyvista/plotting/render_window_interactor.py	/^    def reset_picker(self):$/;"	m	class:RenderWindowInteractor
reset_pyvista	doc/source/conf.py	/^reset_pyvista = ResetPyVista()$/;"	v
reset_visibilities	build/lib/pyvista/plotting/composite_mapper.py	/^    def reset_visibilities(self):$/;"	m	class:CompositeAttributes
reset_visibilities	pyvista/plotting/composite_mapper.py	/^    def reset_visibilities(self):$/;"	m	class:CompositeAttributes
resize	build/lib/pyvista/plotting/background_renderer.py	/^    def resize(self, *args):$/;"	m	class:BackgroundRenderer
resize	pyvista/plotting/background_renderer.py	/^    def resize(self, *args):$/;"	m	class:BackgroundRenderer
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: ConeSource) -> int:$/;"	m	class:ConeSource
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: ConeSource, resolution: int) -> None:$/;"	m	class:ConeSource
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: CylinderSource) -> int:$/;"	m	class:CylinderSource
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: CylinderSource, resolution: int) -> None:$/;"	m	class:CylinderSource
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: LineSource) -> int:$/;"	m	class:LineSource
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: LineSource, resolution: int) -> None:$/;"	m	class:LineSource
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: OrthogonalPlanesSource) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: OrthogonalPlanesSource, resolution: int | VectorLike[int]) -> None:$/;"	m	class:OrthogonalPlanesSource
resolution	examples/00-load/create_parametric_geometric_objects.py	/^resolution = 100$/;"	v
resolution	examples/01-filter/extrude_rotate.py	/^resolution = 10$/;"	v
resolution	examples/02-plot/plot_over_line.py	/^    resolution=10000,$/;"	v
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: ConeSource) -> int:$/;"	m	class:ConeSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: ConeSource, resolution: int) -> None:$/;"	m	class:ConeSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: CylinderSource) -> int:$/;"	m	class:CylinderSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: CylinderSource, resolution: int) -> None:$/;"	m	class:CylinderSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: LineSource) -> int:$/;"	m	class:LineSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: LineSource, resolution: int) -> None:$/;"	m	class:LineSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: OrthogonalPlanesSource) -> tuple[int, int, int]:  # numpydoc ignore=RT01$/;"	m	class:OrthogonalPlanesSource
resolution	pyvista/core/utilities/geometric_sources.py	/^    def resolution(self: OrthogonalPlanesSource, resolution: int | VectorLike[int]) -> None:$/;"	m	class:OrthogonalPlanesSource
resolve	build/lib/pyvista/plotting/mapper.py	/^    def resolve(self) -> str:$/;"	m	class:_DataSetMapper
resolve	build/lib/pyvista/plotting/mapper.py	/^    def resolve(self, resolve):$/;"	m	class:_DataSetMapper
resolve	pyvista/plotting/mapper.py	/^    def resolve(self) -> str:$/;"	m	class:_DataSetMapper
resolve	pyvista/plotting/mapper.py	/^    def resolve(self, resolve):$/;"	m	class:_DataSetMapper
restore_defaults	build/lib/pyvista/plotting/themes.py	/^    def restore_defaults(self):$/;"	m	class:Theme
restore_defaults	pyvista/plotting/themes.py	/^    def restore_defaults(self):$/;"	m	class:Theme
restripped	examples/00-load/create_polydata_strips.py	/^restripped = trimesh.strip()$/;"	v
result	examples/01-filter/boolean_operations.py	/^result = cube.boolean_difference(sphere)$/;"	v
result	examples/01-filter/boolean_operations.py	/^result = sphere_a & sphere_b$/;"	v
result	examples/01-filter/boolean_operations.py	/^result = sphere_a - sphere_b$/;"	v
result	examples/01-filter/boolean_operations.py	/^result = sphere_a | sphere_b$/;"	v
result	examples/01-filter/resample.py	/^result = mesh.sample(data_to_probe)$/;"	v
result	examples/01-filter/using_filters.py	/^result = dataset.threshold().elevation().clip(normal='z').slice_orthogonal()$/;"	v
results_parser	tests/plotting/test_conftest.py	/^from tests.test_conftest import results_parser  # noqa: F401$/;"	i
results_parser	tests/test_conftest.py	/^def results_parser(monkeypatch: pytest.MonkeyPatch):$/;"	f
retry_if_failed	build/lib/pyvista/examples/downloads.py	/^    retry_if_failed=3,$/;"	v
retry_if_failed	build/lib/pyvista/examples/gltf.py	/^    retry_if_failed=3,$/;"	v
retry_if_failed	pyvista/examples/downloads.py	/^    retry_if_failed=3,$/;"	v
retry_if_failed	pyvista/examples/gltf.py	/^    retry_if_failed=3,$/;"	v
return_cpos	build/lib/pyvista/_plot.py	/^        return_cpos=return_cpos,$/;"	v
return_cpos	build/lib/pyvista/plotting/themes.py	/^    def return_cpos(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
return_cpos	build/lib/pyvista/plotting/themes.py	/^    def return_cpos(self, value: bool):$/;"	m	class:Theme
return_cpos	pyvista/_plot.py	/^        return_cpos=return_cpos,$/;"	v
return_cpos	pyvista/plotting/themes.py	/^    def return_cpos(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
return_cpos	pyvista/plotting/themes.py	/^    def return_cpos(self, value: bool):$/;"	m	class:Theme
return_img	build/lib/pyvista/_plot.py	/^        return_img=return_img,$/;"	v
return_img	pyvista/_plot.py	/^        return_img=return_img,$/;"	v
return_source	examples/01-filter/streamlines.py	/^    return_source=True,$/;"	v
return_viewer	build/lib/pyvista/_plot.py	/^        return_viewer=return_viewer,$/;"	v
return_viewer	pyvista/_plot.py	/^        return_viewer=return_viewer,$/;"	v
reverse	build/lib/pyvista/core/composite.py	/^    def reverse(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
reverse	pyvista/core/composite.py	/^    def reverse(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
rfft	build/lib/pyvista/core/filters/image_data.py	/^    def rfft(self, output_scalars_name=None, progress_bar: bool = False):$/;"	m	class:ImageDataFilters
rfft	examples/01-filter/image_fft.py	/^rfft = fft_image.rfft()$/;"	v
rfft	pyvista/core/filters/image_data.py	/^    def rfft(self, output_scalars_name=None, progress_bar: bool = False):$/;"	m	class:ImageDataFilters
rgb_to_hls	build/lib/pyvista/plotting/colors.py	/^from colorsys import rgb_to_hls$/;"	i
rgb_to_hls	pyvista/plotting/colors.py	/^from colorsys import rgb_to_hls$/;"	i
rgba	examples/02-plot/point_clouds.py	/^    rgba=True,$/;"	v
rgba	examples/02-plot/point_clouds.py	/^rgba = points - points.min(axis=0)$/;"	v
rgba	examples/02-plot/texture.py	/^rgba = examples.download_rgba_texture()$/;"	v
rho	examples/99-advanced/warp_by_vector_eigenmodes.py	/^rho = 8.0  # g\/cm^3$/;"	v
ribbon	build/lib/pyvista/core/filters/poly_data.py	/^    def ribbon($/;"	m	class:PolyDataFilters
ribbon	examples/00-load/create_spline.py	/^ribbon = spline.compute_arc_length().ribbon(width=0.75, scalars='arc_length')$/;"	v
ribbon	pyvista/core/filters/poly_data.py	/^    def ribbon($/;"	m	class:PolyDataFilters
ribs	examples/99-advanced/anatomical_groups.py	/^ribs = [$/;"	v
rng	examples/00-load/create_point_cloud.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/00-load/create_structured_surface.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/00-load/create_tri_surface.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/00-load/linear_cells.py	/^rng = np.random.default_rng(2)$/;"	v
rng	examples/00-load/wrap_trimesh.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/01-filter/compute_volume.py	/^rng = dataset.get_data_range()$/;"	v
rng	examples/01-filter/extract_surface.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/01-filter/interpolate_sample.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/01-filter/sampling_functions_2d.py	/^rng = z.max() - z.min()$/;"	v
rng	examples/02-plot/chart_basics.py	/^rng = np.random.default_rng(1)  # Seeded random number generator for consistent data generation$/;"	v
rng	examples/02-plot/composite_picking.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/02-plot/labels.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/02-plot/movie.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/02-plot/point_clouds.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/02-plot/points_gaussian_scale.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/02-plot/spherical.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/03-widgets/multi_slider_widget.py	/^    rng=[0.1, 1.5],$/;"	v
rng	examples/03-widgets/multi_slider_widget.py	/^    rng=[3, 60],$/;"	v
rng	examples/03-widgets/multi_slider_widget.py	/^    rng=[3, 60],$/;"	v	class:MyCustomRoutine
rng	examples/98-common/project_points_tessellate.py	/^rng = np.random.default_rng(seed=0)  # Seed rng for reproducibility$/;"	v
rng	examples/99-advanced/atomic_orbitals.py	/^rng = np.random.default_rng(seed=0)$/;"	v
rng	examples/99-advanced/openfoam_tubes.py	/^    rng=(0, 212),$/;"	v
rng_int	examples/01-filter/glyphs_table.py	/^rng_int = np.array($/;"	v
rnge	examples/04-lights/shadows.py	/^rnge = (bnds.x_max - bnds.x_min, bnds.y_max - bnds.y_min, bnds.z_max - bnds.z_min)$/;"	v
roi	examples/01-filter/clipping.py	/^roi = pv.Cube(center=(0.9e3, 0.2e3, mesh.center[2]), x_length=500, y_length=500, z_length=500)$/;"	v
roll	build/lib/pyvista/plotting/camera.py	/^    def roll(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
roll	build/lib/pyvista/plotting/camera.py	/^    def roll(self, angle):$/;"	m	class:Camera
roll	pyvista/plotting/camera.py	/^    def roll(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
roll	pyvista/plotting/camera.py	/^    def roll(self, angle):$/;"	m	class:Camera
roman	examples/00-load/create_parametric_geometric_objects.py	/^roman = pv.ParametricRoman()$/;"	v
rome	examples/01-filter/geodesic.py	/^rome = land.find_closest_point((0.718047, 0.163038, 0.676684))$/;"	v
room	examples/02-plot/depth_peeling.py	/^room = examples.download_room_surface_mesh()$/;"	v
root	tests/core/test_composite.py	/^    root = pv.MultiBlock([nested1])$/;"	v
root_doc	doc/source/conf.py	/^root_doc = 'index'$/;"	v
root_doc	tests/plotting/tinypages/conf.py	/^root_doc = 'index'$/;"	v
rot	examples/01-filter/extract_cells_inside_surface.py	/^rot = mesh.rotate_y(90, inplace=False)$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.copy()$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.rotate_x(60 * i, point=axes.origin, inplace=False)$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.rotate_y(60 * i, point=axes.origin, inplace=False)$/;"	v
rot	examples/01-filter/rotate.py	/^    rot = mesh.rotate_z(60 * i, point=axes.origin, inplace=False)$/;"	v
rot120	examples/04-lights/actors.py	/^rot120 = np.array([[-0.5, -np.sqrt(3) \/ 2, 0], [np.sqrt(3) \/ 2, -0.5, 0], [0, 0, 1]])$/;"	v
rotate	build/lib/pyvista/core/filters/data_object.py	/^    def rotate(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate	build/lib/pyvista/core/utilities/transform.py	/^    def rotate($/;"	m	class:Transform
rotate	pyvista/core/filters/data_object.py	/^    def rotate(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate	pyvista/core/utilities/transform.py	/^    def rotate($/;"	m	class:Transform
rotate_ccw	build/lib/pyvista/plotting/texture.py	/^    def rotate_ccw(self) -> Texture:$/;"	m	class:Texture
rotate_ccw	pyvista/plotting/texture.py	/^    def rotate_ccw(self) -> Texture:$/;"	m	class:Texture
rotate_cw	build/lib/pyvista/plotting/texture.py	/^    def rotate_cw(self) -> Texture:$/;"	m	class:Texture
rotate_cw	pyvista/plotting/texture.py	/^    def rotate_cw(self) -> Texture:$/;"	m	class:Texture
rotate_vector	build/lib/pyvista/core/filters/data_object.py	/^    def rotate_vector(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_vector	build/lib/pyvista/core/utilities/transform.py	/^    def rotate_vector($/;"	m	class:Transform
rotate_vector	pyvista/core/filters/data_object.py	/^    def rotate_vector(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_vector	pyvista/core/utilities/transform.py	/^    def rotate_vector($/;"	m	class:Transform
rotate_x	build/lib/pyvista/core/filters/data_object.py	/^    def rotate_x(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_x	build/lib/pyvista/core/utilities/transform.py	/^    def rotate_x($/;"	m	class:Transform
rotate_x	build/lib/pyvista/plotting/prop3d.py	/^    def rotate_x(self, angle: float) -> None:$/;"	m	class:Prop3D
rotate_x	pyvista/core/filters/data_object.py	/^    def rotate_x(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_x	pyvista/core/utilities/transform.py	/^    def rotate_x($/;"	m	class:Transform
rotate_x	pyvista/plotting/prop3d.py	/^    def rotate_x(self, angle: float) -> None:$/;"	m	class:Prop3D
rotate_y	build/lib/pyvista/core/filters/data_object.py	/^    def rotate_y(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_y	build/lib/pyvista/core/utilities/transform.py	/^    def rotate_y($/;"	m	class:Transform
rotate_y	build/lib/pyvista/plotting/prop3d.py	/^    def rotate_y(self, angle: float) -> None:$/;"	m	class:Prop3D
rotate_y	pyvista/core/filters/data_object.py	/^    def rotate_y(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_y	pyvista/core/utilities/transform.py	/^    def rotate_y($/;"	m	class:Transform
rotate_y	pyvista/plotting/prop3d.py	/^    def rotate_y(self, angle: float) -> None:$/;"	m	class:Prop3D
rotate_z	build/lib/pyvista/core/filters/data_object.py	/^    def rotate_z(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_z	build/lib/pyvista/core/utilities/transform.py	/^    def rotate_z($/;"	m	class:Transform
rotate_z	build/lib/pyvista/plotting/prop3d.py	/^    def rotate_z(self, angle: float) -> None:$/;"	m	class:Prop3D
rotate_z	pyvista/core/filters/data_object.py	/^    def rotate_z(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
rotate_z	pyvista/core/utilities/transform.py	/^    def rotate_z($/;"	m	class:Transform
rotate_z	pyvista/plotting/prop3d.py	/^    def rotate_z(self, angle: float) -> None:$/;"	m	class:Prop3D
rotated_subset	examples/01-filter/interpolate_sample.py	/^rotated_subset = subset.rotate_vector(vector=(0, 0, 1), angle=45, point=(0.5, 0.5, 0))$/;"	v
rotation_from	build/lib/pyvista/plotting/prop3d.py	/^    def rotation_from(self, rotation: RotationLike) -> None:$/;"	m	class:Prop3D
rotation_from	pyvista/plotting/prop3d.py	/^    def rotation_from(self, rotation: RotationLike) -> None:$/;"	m	class:Prop3D
roughness	build/lib/pyvista/plotting/_property.py	/^    def roughness(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
roughness	build/lib/pyvista/plotting/_property.py	/^    def roughness(self, value: bool):$/;"	m	class:Property
roughness	build/lib/pyvista/plotting/actor_properties.py	/^    def roughness(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
roughness	build/lib/pyvista/plotting/actor_properties.py	/^    def roughness(self, value: float):$/;"	m	class:ActorProperties
roughness	build/lib/pyvista/plotting/themes.py	/^    def roughness(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
roughness	build/lib/pyvista/plotting/themes.py	/^    def roughness(self, roughness: float):$/;"	m	class:_LightingConfig
roughness	examples/02-plot/backface_props.py	/^    roughness=0.2,$/;"	v
roughness	pyvista/plotting/_property.py	/^    def roughness(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
roughness	pyvista/plotting/_property.py	/^    def roughness(self, value: bool):$/;"	m	class:Property
roughness	pyvista/plotting/actor_properties.py	/^    def roughness(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
roughness	pyvista/plotting/actor_properties.py	/^    def roughness(self, value: float):$/;"	m	class:ActorProperties
roughness	pyvista/plotting/themes.py	/^    def roughness(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
roughness	pyvista/plotting/themes.py	/^    def roughness(self, roughness: float):$/;"	m	class:_LightingConfig
row_array	build/lib/pyvista/core/objects.py	/^from .utilities.arrays import row_array$/;"	i
row_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import row_array as row_array$/;"	i
row_array	build/lib/pyvista/core/utilities/arrays.py	/^def row_array(obj: _vtk.vtkTable, name: str) -> pyvista_ndarray | None:$/;"	f
row_array	pyvista/core/objects.py	/^from .utilities.arrays import row_array$/;"	i
row_array	pyvista/core/utilities/__init__.py	/^from .arrays import row_array as row_array$/;"	i
row_array	pyvista/core/utilities/arrays.py	/^def row_array(obj: _vtk.vtkTable, name: str) -> pyvista_ndarray | None:$/;"	f
row_arrays	build/lib/pyvista/core/objects.py	/^    def row_arrays(self):$/;"	m	class:Table
row_arrays	pyvista/core/objects.py	/^    def row_arrays(self):$/;"	m	class:Table
row_plot	examples/01-filter/subdivide.py	/^    def row_plot(row, subfilter):$/;"	f	function:plot_subdivisions
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:CellQualityInfoTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:CellQualityMeasuresTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:ColorSchemeTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:ColorTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:LineStyleTable
row_template	doc/source/make_tables.py	/^    row_template = _aligned_dedent($/;"	v	class:MarkerStyleTable
row_weights	examples/02-plot/multi_window.py	/^row_weights = [0.5, 1, 1, 2, 1]$/;"	v
ruled_surface	build/lib/pyvista/core/filters/poly_data.py	/^    def ruled_surface($/;"	m	class:PolyDataFilters
ruled_surface	pyvista/core/filters/poly_data.py	/^    def ruled_surface($/;"	m	class:PolyDataFilters
run	build/lib/pyvista/ext/plot_directive.py	/^    def run(self):$/;"	m	class:PlotDirective
run	build/lib/pyvista/ext/plot_directive.py	/^def run(arguments, content, options, state_machine, state, lineno):$/;"	f
run	build/lib/pyvista/ext/viewer_directive.py	/^    def run(self):  # pragma: no cover$/;"	m	class:OfflineViewerDirective
run	pyvista/ext/plot_directive.py	/^    def run(self):$/;"	m	class:PlotDirective
run	pyvista/ext/plot_directive.py	/^def run(arguments, content, options, state_machine, state, lineno):$/;"	f
run	pyvista/ext/viewer_directive.py	/^    def run(self):  # pragma: no cover$/;"	m	class:OfflineViewerDirective
run_image_filter	build/lib/pyvista/plotting/plotter.py	/^from .utilities.regression import run_image_filter$/;"	i
run_image_filter	build/lib/pyvista/plotting/utilities/__init__.py	/^from .regression import run_image_filter as run_image_filter$/;"	i
run_image_filter	build/lib/pyvista/plotting/utilities/regression.py	/^def run_image_filter(imfilter: _vtk.vtkWindowToImageFilter) -> NumpyArray[float]:$/;"	f
run_image_filter	pyvista/plotting/plotter.py	/^from .utilities.regression import run_image_filter$/;"	i
run_image_filter	pyvista/plotting/utilities/__init__.py	/^from .regression import run_image_filter as run_image_filter$/;"	i
run_image_filter	pyvista/plotting/utilities/regression.py	/^def run_image_filter(imfilter: _vtk.vtkWindowToImageFilter) -> NumpyArray[float]:$/;"	f
runtime_checkable	build/lib/pyvista/examples/_dataset_loader.py	/^from typing import runtime_checkable$/;"	i
runtime_checkable	pyvista/examples/_dataset_loader.py	/^from typing import runtime_checkable$/;"	i
s	examples/02-plot/lighting_mesh.py	/^s = 1.0$/;"	v
sactor	tests/plotting/test_theme.py	/^        sactor = pl.add_mesh(sphere)$/;"	v	class:test_user_theme.MyTheme
sactor	tests/plotting/test_theme.py	/^        sactor = pl.add_mesh(sphere, pbr=True)$/;"	v	class:test_user_theme.MyTheme
safe_getattr	build/lib/pyvista/ext/coverage.py	/^from sphinx.util.inspect import safe_getattr$/;"	i
safe_getattr	pyvista/ext/coverage.py	/^from sphinx.util.inspect import safe_getattr$/;"	i
samp_z_stress	examples/99-advanced/fea_hertzian_contact_pressure.py	/^samp_z_stress = -sampled['Stress'][:, 2]$/;"	v
sample	build/lib/pyvista/core/filters/data_object.py	/^    def sample(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
sample	pyvista/core/filters/data_object.py	/^    def sample(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
sample_function	build/lib/pyvista/core/utilities/__init__.py	/^from .features import sample_function as sample_function$/;"	i
sample_function	build/lib/pyvista/core/utilities/features.py	/^def sample_function($/;"	f
sample_function	pyvista/core/utilities/__init__.py	/^from .features import sample_function as sample_function$/;"	i
sample_function	pyvista/core/utilities/features.py	/^def sample_function($/;"	f
sample_function	tests/core/test_utilities.py	/^from pyvista.core.utilities.features import sample_function$/;"	i
sample_over_circular_arc	build/lib/pyvista/core/filters/data_set.py	/^    def sample_over_circular_arc(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_over_circular_arc	pyvista/core/filters/data_set.py	/^    def sample_over_circular_arc(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_over_circular_arc_normal	build/lib/pyvista/core/filters/data_set.py	/^    def sample_over_circular_arc_normal(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_over_circular_arc_normal	pyvista/core/filters/data_set.py	/^    def sample_over_circular_arc_normal(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_over_line	build/lib/pyvista/core/filters/data_set.py	/^    def sample_over_line(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_over_line	pyvista/core/filters/data_set.py	/^    def sample_over_line(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_over_multiple_lines	build/lib/pyvista/core/filters/data_set.py	/^    def sample_over_multiple_lines(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_over_multiple_lines	pyvista/core/filters/data_set.py	/^    def sample_over_multiple_lines(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sample_test	tests/core/test_dataobject_filters.py	/^    def sample_test(**kwargs):$/;"	f	function:test_sample
sampled	examples/01-filter/image_fft_perlin_noise.py	/^sampled = pv.sample_function(noise, bounds=(0, 10, 0, 10, 0, 10), dim=(xdim, ydim, 1))$/;"	v
sampled	examples/01-filter/sampling_functions_2d.py	/^sampled = pv.sample_function(noise, bounds=(-10, 10, -10, 10, -10, 10), dim=(500, 500, 1))$/;"	v
sampled	examples/99-advanced/fea_hertzian_contact_pressure.py	/^sampled = line.sample(mesh, tolerance=1e-3)$/;"	v
sampled_fft	examples/01-filter/image_fft_perlin_noise.py	/^sampled_fft = sampled.fft()$/;"	v
sargs	examples/01-filter/streamlines.py	/^sargs = dict(vertical=True, title_font_size=16)$/;"	v
sargs	examples/02-plot/scalar_bars.py	/^sargs = dict($/;"	v
sargs	examples/02-plot/scalar_bars.py	/^sargs = dict(height=0.25, vertical=True, position_x=0.05, position_y=0.05)$/;"	v
sargs	examples/02-plot/scalar_bars.py	/^sargs = dict(interactive=True)  # Simply make the bar interactive$/;"	v
saturation_range	build/lib/pyvista/plotting/lookup_table.py	/^    def saturation_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
saturation_range	build/lib/pyvista/plotting/lookup_table.py	/^    def saturation_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
saturation_range	pyvista/plotting/lookup_table.py	/^    def saturation_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
saturation_range	pyvista/plotting/lookup_table.py	/^    def saturation_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
saturn	examples/99-advanced/planets.py	/^saturn = examples.planets.load_saturn(radius=60268.0)$/;"	v
saturn_rings	examples/99-advanced/planets.py	/^saturn_rings = examples.planets.load_saturn_rings(inner=inner, outer=outer, c_res=50)$/;"	v
saturn_rings_texture	examples/99-advanced/planets.py	/^saturn_rings_texture = examples.planets.download_saturn_rings(texture=True)$/;"	v
saturn_texture	examples/99-advanced/planets.py	/^saturn_texture = examples.planets.download_saturn_surface(texture=True)$/;"	v
save	build/lib/pyvista/core/dataobject.py	/^    def save($/;"	m	class:DataObject
save	build/lib/pyvista/core/objects.py	/^    def save(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:Table
save	build/lib/pyvista/core/pointset.py	/^    def save($/;"	m	class:ExplicitStructuredGrid
save	build/lib/pyvista/core/pointset.py	/^    def save(self, filename, binary: bool = True, texture=None, recompute_normals: bool = True):$/;"	m	class:PolyData
save	build/lib/pyvista/plotting/themes.py	/^    def save(self, filename: str) -> None:$/;"	m	class:Theme
save	pyvista/core/dataobject.py	/^    def save($/;"	m	class:DataObject
save	pyvista/core/objects.py	/^    def save(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:Table
save	pyvista/core/pointset.py	/^    def save($/;"	m	class:ExplicitStructuredGrid
save	pyvista/core/pointset.py	/^    def save(self, filename, binary: bool = True, texture=None, recompute_normals: bool = True):$/;"	m	class:PolyData
save	pyvista/plotting/themes.py	/^    def save(self, filename: str) -> None:$/;"	m	class:Theme
save_frame	examples/99-advanced/sphere_eversion.py	/^def save_frame(x, y, z):$/;"	f
save_graphic	build/lib/pyvista/plotting/plotter.py	/^    def save_graphic(self, filename, title='PyVista Export', raster=True, painter=True) -> None:$/;"	m	class:BasePlotter
save_graphic	pyvista/plotting/plotter.py	/^    def save_graphic(self, filename, title='PyVista Export', raster=True, painter=True) -> None:$/;"	m	class:BasePlotter
save_meshio	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import save_meshio as save_meshio$/;"	i
save_meshio	build/lib/pyvista/core/utilities/fileio.py	/^def save_meshio($/;"	f
save_meshio	pyvista/core/utilities/__init__.py	/^from .fileio import save_meshio as save_meshio$/;"	i
save_meshio	pyvista/core/utilities/fileio.py	/^def save_meshio($/;"	f
save_pickle	build/lib/pyvista/core/dataobject.py	/^from .utilities.fileio import save_pickle$/;"	i
save_pickle	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import save_pickle as save_pickle$/;"	i
save_pickle	build/lib/pyvista/core/utilities/fileio.py	/^def save_pickle(filename: str | Path, mesh: DataObject) -> None:$/;"	f
save_pickle	pyvista/core/dataobject.py	/^from .utilities.fileio import save_pickle$/;"	i
save_pickle	pyvista/core/utilities/__init__.py	/^from .fileio import save_pickle as save_pickle$/;"	i
save_pickle	pyvista/core/utilities/fileio.py	/^def save_pickle(filename: str | Path, mesh: DataObject) -> None:$/;"	f
save_pickle	tests/core/test_dataobject.py	/^from pyvista.core.utilities.fileio import save_pickle$/;"	i
saved_file	examples/00-load/read_dolfin.py	/^saved_file = examples.download_file('dolfin_fine.xml')$/;"	v
scalar	examples/02-plot/spherical.py	/^scalar = u_vec**2 + v_vec**2$/;"	v
scalar_3d	examples/02-plot/spherical.py	/^scalar_3d = ($/;"	v
scalar_bar	build/lib/pyvista/plotting/plotter.py	/^    def scalar_bar(self) -> _vtk.vtkScalarBarActor:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scalar_bar	pyvista/plotting/plotter.py	/^    def scalar_bar(self) -> _vtk.vtkScalarBarActor:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scalar_bar_args	examples/01-filter/connectivity.py	/^    scalar_bar_args=scalar_bar_args,$/;"	v
scalar_bar_args	examples/01-filter/connectivity.py	/^scalar_bar_args = dict($/;"	v
scalar_bar_args	examples/01-filter/integrate_data.py	/^    scalar_bar_args=dict(vertical=True, title_font_size=16),$/;"	v
scalar_bar_args	examples/01-filter/streamlines.py	/^    scalar_bar_args=sargs,$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': 'Colorcet Fire (No Lighting)'},$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': 'Colorcet Fire'},$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': 'Matplotlib Hot (No Lighting)'},$/;"	v
scalar_bar_args	examples/02-plot/cmap.py	/^    scalar_bar_args={'title': 'Matplotlib Hot'},$/;"	v
scalar_bar_args	examples/02-plot/interpolate_before_map.py	/^    scalar_bar_args={'title': 'Elevation - interpolated'},$/;"	v
scalar_bar_args	examples/02-plot/interpolate_before_map.py	/^    scalar_bar_args={'title': 'Elevation - not interpolated'},$/;"	v
scalar_bar_args	examples/02-plot/interpolate_before_map.py	/^    scalar_bar_args={'title': 'RTData - interpolated'},$/;"	v
scalar_bar_args	examples/02-plot/interpolate_before_map.py	/^    scalar_bar_args={'title': 'RTData - not interpolated'},$/;"	v
scalar_bar_args	examples/99-advanced/fea_hertzian_contact_pressure.py	/^    scalar_bar_args={'title': 'Z Component Stress (Pa)', 'color': 'w'},$/;"	v
scalar_bar_args	examples/99-advanced/openfoam_cooling.py	/^    scalar_bar_args={'title': 'Temperature'},$/;"	v
scalar_bar_args	examples/99-advanced/openfoam_tubes.py	/^    scalar_bar_args={'title': 'Flow Velocity'},$/;"	v
scalar_bar_args	examples/99-advanced/openfoam_tubes.py	/^    scalar_bar_args={'title': 'Turbulent Kinematic Viscosity'},$/;"	v
scalar_bars	build/lib/pyvista/plotting/plotter.py	/^    def scalar_bars(self) -> ScalarBars:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scalar_bars	pyvista/plotting/plotter.py	/^    def scalar_bars(self) -> ScalarBars:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scalar_bars	tests/plotting/test_scalar_bars.py	/^def scalar_bars(sphere):$/;"	f
scalar_map_mode	build/lib/pyvista/plotting/mapper.py	/^    def scalar_map_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_map_mode	build/lib/pyvista/plotting/mapper.py	/^    def scalar_map_mode(self, scalar_mode: str | FieldAssociation):$/;"	m	class:_BaseMapper
scalar_map_mode	pyvista/plotting/mapper.py	/^    def scalar_map_mode(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_map_mode	pyvista/plotting/mapper.py	/^    def scalar_map_mode(self, scalar_mode: str | FieldAssociation):$/;"	m	class:_BaseMapper
scalar_range	build/lib/pyvista/plotting/lookup_table.py	/^    def scalar_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
scalar_range	build/lib/pyvista/plotting/lookup_table.py	/^    def scalar_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
scalar_range	build/lib/pyvista/plotting/mapper.py	/^    def scalar_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_range	build/lib/pyvista/plotting/mapper.py	/^    def scalar_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
scalar_range	build/lib/pyvista/plotting/mapper.py	/^    def scalar_range(self, clim) -> None:$/;"	m	class:_BaseMapper
scalar_range	build/lib/pyvista/plotting/mapper.py	/^    def scalar_range(self, clim) -> None:$/;"	m	class:_BaseVolumeMapper
scalar_range	examples/01-filter/compute_volume.py	/^scalar_range = [0, 77]  # Range corresponding to bottom 15% of values$/;"	v
scalar_range	pyvista/plotting/lookup_table.py	/^    def scalar_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
scalar_range	pyvista/plotting/lookup_table.py	/^    def scalar_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:_BaseVolumeMapper
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self, clim) -> None:$/;"	m	class:_BaseMapper
scalar_range	pyvista/plotting/mapper.py	/^    def scalar_range(self, clim) -> None:$/;"	m	class:_BaseVolumeMapper
scalar_visibility	build/lib/pyvista/plotting/mapper.py	/^    def scalar_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_visibility	build/lib/pyvista/plotting/mapper.py	/^    def scalar_visibility(self, value: bool) -> None:$/;"	m	class:_BaseMapper
scalar_visibility	pyvista/plotting/mapper.py	/^    def scalar_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_BaseMapper
scalar_visibility	pyvista/plotting/mapper.py	/^    def scalar_visibility(self, value: bool) -> None:$/;"	m	class:_BaseMapper
scalars	build/lib/pyvista/demos/logo.py	/^        scalars='scalars',$/;"	v
scalars	build/lib/pyvista/demos/logo.py	/^    scalars = grid.points[cells[:, 1], 1]$/;"	v
scalars	build/lib/pyvista/demos/logo.py	/^    scalars = mesh.points[:, 0]$/;"	v
scalars	examples/00-load/create_poly.py	/^    scalars=np.arange(3),$/;"	v
scalars	examples/00-load/create_truss.py	/^    scalars=colors,$/;"	v
scalars	examples/00-load/wrap_trimesh.py	/^    scalars=points[:, 2],$/;"	v
scalars	examples/01-filter/clipping_with_surface.py	/^    scalars='implicit_distance',$/;"	v
scalars	examples/01-filter/image_fft.py	/^    scalars=np.abs(data),$/;"	v
scalars	examples/01-filter/image_fft.py	/^    scalars=np.abs(fft_image.point_data['PNGImage']),$/;"	v
scalars	examples/01-filter/integrate_data.py	/^    scalars='normal_velocity',$/;"	v
scalars	examples/01-filter/mesh_quality.py	/^    scalars='shape',$/;"	v
scalars	examples/01-filter/sampling_functions_2d.py	/^    scalars=z,$/;"	v
scalars	examples/01-filter/streamlines.py	/^    scalars='IntegrationTime',$/;"	v
scalars	examples/02-plot/cmap.py	/^    scalars='Elevation',$/;"	v
scalars	examples/02-plot/cmap.py	/^scalars = np.empty(mesh.n_points)$/;"	v
scalars	examples/02-plot/gif.py	/^    scalars='Height',$/;"	v
scalars	examples/02-plot/opacity.py	/^    scalars='Temperature',$/;"	v
scalars	examples/02-plot/point_clouds.py	/^    scalars=points[:, 2],$/;"	v
scalars	examples/02-plot/point_clouds.py	/^    scalars=rgba,$/;"	v
scalars	examples/02-plot/point_clouds.py	/^    scalars=scalars,$/;"	v
scalars	examples/02-plot/point_clouds.py	/^scalars = np.linalg.norm(cloud.points - cloud.center, axis=1)$/;"	v
scalars	examples/02-plot/vector_component.py	/^    scalars='Nodal Displacement',$/;"	v
scalars	examples/02-plot/vertices.py	/^    scalars=surf_points[:, 1],$/;"	v
scalars	examples/02-plot/volume.py	/^    scalars='NIFTI',$/;"	v
scalars	examples/02-plot/volume.py	/^    scalars='heart',$/;"	v
scalars	examples/99-advanced/atomic_orbitals.py	/^    scalars=np.abs(grid['real_wf']),$/;"	v
scalars	examples/99-advanced/fea_hertzian_contact_pressure.py	/^    scalars=z_stress,$/;"	v
scalars	examples/99-advanced/magnetic_fields.py	/^    scalars=scalars,$/;"	v
scalars	examples/99-advanced/magnetic_fields.py	/^scalars = np.linalg.norm(grid['B'], axis=1)$/;"	v
scalars	examples/99-advanced/openfoam_cooling.py	/^    scalars='T',$/;"	v
scalars	examples/99-advanced/openfoam_tubes.py	/^    scalars='U',$/;"	v
scalars	examples/99-advanced/openfoam_tubes.py	/^    scalars='nut',$/;"	v
scalars	examples/99-advanced/pump_bracket.py	/^    scalars='disp_3',$/;"	v
scalars	pyvista/demos/logo.py	/^        scalars='scalars',$/;"	v
scalars	pyvista/demos/logo.py	/^    scalars = grid.points[cells[:, 1], 1]$/;"	v
scalars	pyvista/demos/logo.py	/^    scalars = mesh.points[:, 0]$/;"	v
scalars_rng	examples/02-plot/lookup_table.py	/^scalars_rng = (bracket.active_scalars.min(), bracket.active_scalars.max())$/;"	v
scale	build/lib/pyvista/core/filters/data_object.py	/^    def scale(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
scale	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def scale(self: SuperquadricSource) -> tuple[float, float, float]:$/;"	m	class:SuperquadricSource
scale	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def scale(self: SuperquadricSource, scale: VectorLike[float]) -> None:$/;"	m	class:SuperquadricSource
scale	build/lib/pyvista/core/utilities/transform.py	/^    def scale($/;"	m	class:Transform
scale	build/lib/pyvista/plotting/plotter.py	/^    def scale(self) -> list[float]:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scale	build/lib/pyvista/plotting/plotter.py	/^    def scale(self, scale) -> None:$/;"	m	class:BasePlotter
scale	build/lib/pyvista/plotting/prop3d.py	/^    def scale(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
scale	build/lib/pyvista/plotting/prop3d.py	/^    def scale(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
scale	build/lib/pyvista/plotting/prop3d.py	/^    def scale(self, scale: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
scale	build/lib/pyvista/plotting/prop3d.py	/^    def scale(self, value: float | VectorLike[float]) -> None:$/;"	m	class:Prop3D
scale	examples/00-load/create_point_cloud.py	/^    scale=False,$/;"	v
scale	examples/99-advanced/atomic_orbitals.py	/^    scale=False,$/;"	v
scale	pyvista/core/filters/data_object.py	/^    def scale(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
scale	pyvista/core/utilities/geometric_sources.py	/^    def scale(self: SuperquadricSource) -> tuple[float, float, float]:$/;"	m	class:SuperquadricSource
scale	pyvista/core/utilities/geometric_sources.py	/^    def scale(self: SuperquadricSource, scale: VectorLike[float]) -> None:$/;"	m	class:SuperquadricSource
scale	pyvista/core/utilities/transform.py	/^    def scale($/;"	m	class:Transform
scale	pyvista/plotting/plotter.py	/^    def scale(self) -> list[float]:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
scale	pyvista/plotting/plotter.py	/^    def scale(self, scale) -> None:$/;"	m	class:BasePlotter
scale	pyvista/plotting/prop3d.py	/^    def scale(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
scale	pyvista/plotting/prop3d.py	/^    def scale(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
scale	pyvista/plotting/prop3d.py	/^    def scale(self, scale: VectorLike[float]) -> None:$/;"	m	class:_Prop3DMixin
scale	pyvista/plotting/prop3d.py	/^    def scale(self, value: float | VectorLike[float]) -> None:$/;"	m	class:Prop3D
scale	tests/plotting/test_plotting.py	/^    scale=dict(scale=SCALE),$/;"	v
scale_array	build/lib/pyvista/plotting/mapper.py	/^    def scale_array(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
scale_array	build/lib/pyvista/plotting/mapper.py	/^    def scale_array(self, name: str):$/;"	m	class:PointGaussianMapper
scale_array	pyvista/plotting/mapper.py	/^    def scale_array(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
scale_array	pyvista/plotting/mapper.py	/^    def scale_array(self, name: str):$/;"	m	class:PointGaussianMapper
scale_factor	build/lib/pyvista/plotting/mapper.py	/^    def scale_factor(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
scale_factor	build/lib/pyvista/plotting/mapper.py	/^    def scale_factor(self, value: float) -> None:$/;"	m	class:PointGaussianMapper
scale_factor	pyvista/plotting/mapper.py	/^    def scale_factor(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointGaussianMapper
scale_factor	pyvista/plotting/mapper.py	/^    def scale_factor(self, value: float) -> None:$/;"	m	class:PointGaussianMapper
scale_factor	tests/core/test_dataset_filters.py	/^    def scale_factor(self):$/;"	m	class:InterrogateVTKGlyph3D
scale_mode	tests/core/test_dataset_filters.py	/^    def scale_mode(self):$/;"	m	class:InterrogateVTKGlyph3D
scale_point	build/lib/pyvista/plotting/__init__.py	/^from .renderer import scale_point as scale_point$/;"	i
scale_point	build/lib/pyvista/plotting/renderer.py	/^def scale_point(camera, point, invert=False):$/;"	f
scale_point	pyvista/plotting/__init__.py	/^from .renderer import scale_point as scale_point$/;"	i
scale_point	pyvista/plotting/renderer.py	/^def scale_point(camera, point, invert=False):$/;"	f
scale_transform	tests/core/test_utilities.py	/^def scale_transform():$/;"	f
scaling	tests/core/test_dataset_filters.py	/^    def scaling(self):$/;"	m	class:InterrogateVTKGlyph3D
scatter	build/lib/pyvista/plotting/charts.py	/^    def scatter(self, x, y, color='b', size=10, style='o', label=''):$/;"	m	class:Chart2D
scatter	pyvista/plotting/charts.py	/^    def scatter(self, x, y, color='b', size=10, style='o', label=''):$/;"	m	class:Chart2D
scatter_plot_2d	tests/plotting/test_charts.py	/^def scatter_plot_2d(chart_2d):$/;"	f
scipy	tests/core/test_validation.py	/^import scipy$/;"	i
scipy	tests/plotting/test_actor.py	/^import scipy$/;"	i
scooby	build/lib/pyvista/plotting/plotter.py	/^import scooby$/;"	i
scooby	build/lib/pyvista/report.py	/^import scooby$/;"	i
scooby	pyvista/plotting/plotter.py	/^import scooby$/;"	i
scooby	pyvista/report.py	/^import scooby$/;"	i
screen	examples/04-lights/attenuation.py	/^        screen = pv.Plane(center=(light_x, plane_y, 0), direction=(0, 1, 0), i_size=5, j_size=5)$/;"	v
screen	examples/04-lights/shadows.py	/^    screen = pyvista.Plane(center=(0, plane_y, 0), direction=(0, 1, 0), i_size=5, j_size=5)$/;"	v
screenshot	build/lib/pyvista/_plot.py	/^        screenshot=screenshot,$/;"	v
screenshot	build/lib/pyvista/plotting/plotter.py	/^    def screenshot($/;"	m	class:BasePlotter
screenshot	build/lib/pyvista/trame/ui/base_viewer.py	/^    def screenshot(self):$/;"	m	class:BaseViewer
screenshot	pyvista/_plot.py	/^        screenshot=screenshot,$/;"	v
screenshot	pyvista/plotting/plotter.py	/^    def screenshot($/;"	m	class:BasePlotter
screenshot	pyvista/trame/ui/base_viewer.py	/^    def screenshot(self):$/;"	m	class:BaseViewer
scurve	examples/02-plot/moving_cmap.py	/^def scurve(t):$/;"	f
secondary	doc/source/make_tables.py	/^        secondary = auto()$/;"	v	class:_BaseDatasetBadge.SemanticColorEnum
seealso_template	doc/source/make_tables.py	/^    seealso_template = _aligned_dedent($/;"	v	class:DatasetCard
seed	build/lib/pyvista/core/utilities/image_sources.py	/^    def seed(self, value: int) -> None:$/;"	m	class:ImageNoiseSource
seed	examples/99-advanced/magnetic_fields.py	/^seed = pv.Disc(inner=1, outer=5.4, r_res=2, c_res=12)$/;"	v
seed	pyvista/core/utilities/image_sources.py	/^    def seed(self, value: int) -> None:$/;"	m	class:ImageNoiseSource
seed_mesh	examples/01-filter/streamlines.py	/^seed_mesh = source_mesh.decimate_boundary(0.4)$/;"	v
segmented_grid	tests/core/test_imagedata_filters.py	/^def segmented_grid():$/;"	f
select	build/lib/pyvista/trame/ui/vuetify2.py	/^def select(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
select	build/lib/pyvista/trame/ui/vuetify3.py	/^def select(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
select	examples/01-filter/extract_cells_inside_surface.py	/^select = mesh.select_enclosed_points(rot)$/;"	v
select	examples/99-advanced/customization_trame_toolbar.py	/^from pyvista.trame.ui.vuetify3 import select$/;"	i
select	pyvista/trame/ui/vuetify2.py	/^def select(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
select	pyvista/trame/ui/vuetify3.py	/^def select(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
select_enclosed_points	build/lib/pyvista/core/filters/data_set.py	/^    def select_enclosed_points(  # type: ignore[misc]$/;"	m	class:DataSetFilters
select_enclosed_points	pyvista/core/filters/data_set.py	/^    def select_enclosed_points(  # type: ignore[misc]$/;"	m	class:DataSetFilters
select_values	build/lib/pyvista/core/filters/image_data.py	/^    def select_values(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
select_values	pyvista/core/filters/image_data.py	/^    def select_values(  # type: ignore[misc]$/;"	m	class:ImageDataFilters
send_errors_to_logging	build/lib/pyvista/__init__.py	/^from pyvista.core.utilities.observers import send_errors_to_logging$/;"	i
send_errors_to_logging	build/lib/pyvista/core/utilities/__init__.py	/^from .observers import send_errors_to_logging as send_errors_to_logging$/;"	i
send_errors_to_logging	build/lib/pyvista/core/utilities/observers.py	/^def send_errors_to_logging():  # numpydoc ignore=RT01$/;"	f
send_errors_to_logging	pyvista/__init__.py	/^from pyvista.core.utilities.observers import send_errors_to_logging$/;"	i
send_errors_to_logging	pyvista/core/utilities/__init__.py	/^from .observers import send_errors_to_logging as send_errors_to_logging$/;"	i
send_errors_to_logging	pyvista/core/utilities/observers.py	/^def send_errors_to_logging():  # numpydoc ignore=RT01$/;"	f
separate_cells	build/lib/pyvista/core/filters/data_set.py	/^    def separate_cells(  # type: ignore[misc]$/;"	m	class:DataSetFilters
separate_cells	build/lib/pyvista/core/pointset.py	/^    def separate_cells(self, *args, **kwargs):$/;"	m	class:PointSet
separate_cells	pyvista/core/filters/data_set.py	/^    def separate_cells(  # type: ignore[misc]$/;"	m	class:DataSetFilters
separate_cells	pyvista/core/pointset.py	/^    def separate_cells(self, *args, **kwargs):$/;"	m	class:PointSet
separating_distance	examples/01-filter/streamlines_2D.py	/^    separating_distance=3,$/;"	v
separating_distance	examples/99-advanced/openfoam_example.py	/^    separating_distance=1,$/;"	v
separating_distance_ratio	examples/01-filter/streamlines_2D.py	/^    separating_distance_ratio=0.2,$/;"	v
separating_distance_ratio	examples/99-advanced/openfoam_example.py	/^    separating_distance_ratio=0.1,$/;"	v
serial_dict_empty	tests/core/test_utilities.py	/^def serial_dict_empty():$/;"	f
serial_dict_with_foobar	tests/core/test_utilities.py	/^def serial_dict_with_foobar():$/;"	f
server	build/lib/pyvista/trame/jupyter.py	/^        server = get_server(name=name)$/;"	v
server	build/lib/pyvista/trame/jupyter.py	/^        server = get_server(name=pyvista.global_theme.trame.jupyter_server_name)$/;"	v
server	build/lib/pyvista/trame/jupyter.py	/^        server=server,$/;"	v
server	examples_trame/advanced/contour.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/advanced/custom_ui.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/PyVistaLocalView.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/PyVistaRemoteLocalView.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/PyVistaRemoteView.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/actor_color.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/algorithm.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/file_viewer.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/mesh_scalars.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/multi_views.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/basic/ui_template.py	/^server = get_server(client_type='vue3')$/;"	v
server	examples_trame/validation/many_actors.py	/^server = get_server(client_type='vue3')$/;"	v
server	pyvista/trame/jupyter.py	/^        server = get_server(name=name)$/;"	v
server	pyvista/trame/jupyter.py	/^        server = get_server(name=pyvista.global_theme.trame.jupyter_server_name)$/;"	v
server	pyvista/trame/jupyter.py	/^        server=server,$/;"	v
server_proxy_enabled	build/lib/pyvista/plotting/themes.py	/^    def server_proxy_enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
server_proxy_enabled	build/lib/pyvista/plotting/themes.py	/^    def server_proxy_enabled(self, enabled: bool):$/;"	m	class:_TrameConfig
server_proxy_enabled	build/lib/pyvista/trame/jupyter.py	/^            server_proxy_enabled=server_proxy_enabled,$/;"	v
server_proxy_enabled	build/lib/pyvista/trame/jupyter.py	/^        server_proxy_enabled = pyvista.global_theme.trame.server_proxy_enabled$/;"	v
server_proxy_enabled	pyvista/plotting/themes.py	/^    def server_proxy_enabled(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
server_proxy_enabled	pyvista/plotting/themes.py	/^    def server_proxy_enabled(self, enabled: bool):$/;"	m	class:_TrameConfig
server_proxy_enabled	pyvista/trame/jupyter.py	/^            server_proxy_enabled=server_proxy_enabled,$/;"	v
server_proxy_enabled	pyvista/trame/jupyter.py	/^        server_proxy_enabled = pyvista.global_theme.trame.server_proxy_enabled$/;"	v
server_proxy_prefix	build/lib/pyvista/plotting/themes.py	/^    def server_proxy_prefix(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
server_proxy_prefix	build/lib/pyvista/plotting/themes.py	/^    def server_proxy_prefix(self, prefix: str):$/;"	m	class:_TrameConfig
server_proxy_prefix	build/lib/pyvista/trame/jupyter.py	/^            server_proxy_prefix = pyvista.global_theme.trame.server_proxy_prefix$/;"	v
server_proxy_prefix	build/lib/pyvista/trame/jupyter.py	/^            server_proxy_prefix=server_proxy_prefix,$/;"	v
server_proxy_prefix	pyvista/plotting/themes.py	/^    def server_proxy_prefix(self):  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
server_proxy_prefix	pyvista/plotting/themes.py	/^    def server_proxy_prefix(self, prefix: str):$/;"	m	class:_TrameConfig
server_proxy_prefix	pyvista/trame/jupyter.py	/^            server_proxy_prefix = pyvista.global_theme.trame.server_proxy_prefix$/;"	v
server_proxy_prefix	pyvista/trame/jupyter.py	/^            server_proxy_prefix=server_proxy_prefix,$/;"	v
set_active_renderer	build/lib/pyvista/plotting/renderers.py	/^    def set_active_renderer(self, index_row, index_column=None):$/;"	m	class:Renderers
set_active_renderer	pyvista/plotting/renderers.py	/^    def set_active_renderer(self, index_row, index_column=None):$/;"	m	class:Renderers
set_active_scalars	build/lib/pyvista/core/composite.py	/^    def set_active_scalars($/;"	m	class:MultiBlock
set_active_scalars	build/lib/pyvista/core/dataset.py	/^    def set_active_scalars($/;"	m	class:DataSet
set_active_scalars	pyvista/core/composite.py	/^    def set_active_scalars($/;"	m	class:MultiBlock
set_active_scalars	pyvista/core/dataset.py	/^    def set_active_scalars($/;"	m	class:DataSet
set_active_tensors	build/lib/pyvista/core/dataset.py	/^    def set_active_tensors($/;"	m	class:DataSet
set_active_tensors	pyvista/core/dataset.py	/^    def set_active_tensors($/;"	m	class:DataSet
set_active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:EnSightReader
set_active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:OpenFOAMReader
set_active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:PVDReader
set_active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:XdmfReader
set_active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):$/;"	m	class:ExodusIIReader
set_active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):$/;"	m	class:Nek5000Reader
set_active_time_point	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):$/;"	m	class:TimeReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:EnSightReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:OpenFOAMReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:PVDReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point) -> None:  # noqa: D102$/;"	m	class:XdmfReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):$/;"	m	class:ExodusIIReader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):$/;"	m	class:Nek5000Reader
set_active_time_point	pyvista/core/utilities/reader.py	/^    def set_active_time_point(self, time_point):$/;"	m	class:TimeReader
set_active_time_set	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_set(self, time_set):$/;"	m	class:EnSightReader
set_active_time_set	pyvista/core/utilities/reader.py	/^    def set_active_time_set(self, time_set):$/;"	m	class:EnSightReader
set_active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value) -> None:  # noqa: D102$/;"	m	class:PVDReader
set_active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:EnSightReader
set_active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:OpenFOAMReader
set_active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:XdmfReader
set_active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):$/;"	m	class:ExodusIIReader
set_active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):$/;"	m	class:Nek5000Reader
set_active_time_value	build/lib/pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):$/;"	m	class:TimeReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value) -> None:  # noqa: D102$/;"	m	class:PVDReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:EnSightReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:OpenFOAMReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):  # noqa: D102$/;"	m	class:XdmfReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):$/;"	m	class:ExodusIIReader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):$/;"	m	class:Nek5000Reader
set_active_time_value	pyvista/core/utilities/reader.py	/^    def set_active_time_value(self, time_value):$/;"	m	class:TimeReader
set_active_vectors	build/lib/pyvista/core/dataset.py	/^    def set_active_vectors($/;"	m	class:DataSet
set_active_vectors	pyvista/core/dataset.py	/^    def set_active_vectors($/;"	m	class:DataSet
set_actor_prop	build/lib/pyvista/plotting/axes_assembly.py	/^    def set_actor_prop($/;"	m	class:AxesAssembly
set_actor_prop	pyvista/plotting/axes_assembly.py	/^    def set_actor_prop($/;"	m	class:AxesAssembly
set_algorithm_input	build/lib/pyvista/plotting/mapper.py	/^from .utilities.algorithms import set_algorithm_input$/;"	i
set_algorithm_input	build/lib/pyvista/plotting/plotter.py	/^from .utilities.algorithms import set_algorithm_input$/;"	i
set_algorithm_input	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import set_algorithm_input as set_algorithm_input$/;"	i
set_algorithm_input	build/lib/pyvista/plotting/utilities/algorithms.py	/^def set_algorithm_input(alg, inp, port=0):$/;"	f
set_algorithm_input	build/lib/pyvista/plotting/widgets.py	/^from .utilities.algorithms import set_algorithm_input$/;"	i
set_algorithm_input	pyvista/plotting/mapper.py	/^from .utilities.algorithms import set_algorithm_input$/;"	i
set_algorithm_input	pyvista/plotting/plotter.py	/^from .utilities.algorithms import set_algorithm_input$/;"	i
set_algorithm_input	pyvista/plotting/utilities/__init__.py	/^from .algorithms import set_algorithm_input as set_algorithm_input$/;"	i
set_algorithm_input	pyvista/plotting/utilities/algorithms.py	/^def set_algorithm_input(alg, inp, port=0):$/;"	f
set_algorithm_input	pyvista/plotting/widgets.py	/^from .utilities.algorithms import set_algorithm_input$/;"	i
set_algorithm_input	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.algorithms import set_algorithm_input  # noqa: F401$/;"	i
set_array	build/lib/pyvista/core/datasetattributes.py	/^    def set_array(self: Self, data: ArrayLike[float], name: str, deep_copy: bool = False) -> None:$/;"	m	class:DataSetAttributes
set_array	pyvista/core/datasetattributes.py	/^    def set_array(self: Self, data: ArrayLike[float], name: str, deep_copy: bool = False) -> None:$/;"	m	class:DataSetAttributes
set_axis_location	build/lib/pyvista/plotting/axes_assembly.py	/^        def set_axis_location(plane_id, edge: str, position: float):$/;"	f	function:PlanesAssembly._update_label_positions
set_axis_location	pyvista/plotting/axes_assembly.py	/^        def set_axis_location(plane_id, edge: str, position: float):$/;"	f	function:PlanesAssembly._update_label_positions
set_background	build/lib/pyvista/plotting/plotter.py	/^    def set_background(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_background	build/lib/pyvista/plotting/renderer.py	/^    def set_background(self, color, top=None, right=None, side=None, corner=None):$/;"	m	class:Renderer
set_background	build/lib/pyvista/plotting/renderers.py	/^    def set_background($/;"	m	class:Renderers
set_background	pyvista/plotting/plotter.py	/^    def set_background(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_background	pyvista/plotting/renderer.py	/^    def set_background(self, color, top=None, right=None, side=None, corner=None):$/;"	m	class:Renderer
set_background	pyvista/plotting/renderers.py	/^    def set_background($/;"	m	class:Renderers
set_block_name	build/lib/pyvista/core/composite.py	/^    def set_block_name(self: MultiBlock, index: int | str, name: str | None) -> None:$/;"	m	class:MultiBlock
set_block_name	pyvista/core/composite.py	/^    def set_block_name(self: MultiBlock, index: int | str, name: str | None) -> None:$/;"	m	class:MultiBlock
set_camera_light	build/lib/pyvista/plotting/lights.py	/^    def set_camera_light(self):$/;"	m	class:Light
set_camera_light	pyvista/plotting/lights.py	/^    def set_camera_light(self):$/;"	m	class:Light
set_chart_interaction	build/lib/pyvista/plotting/plotter.py	/^    def set_chart_interaction(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_chart_interaction	build/lib/pyvista/plotting/renderer.py	/^    def set_chart_interaction(self, interactive, toggle=False):  # numpydoc ignore=PR01,RT01$/;"	m	class:Renderer
set_chart_interaction	build/lib/pyvista/plotting/renderers.py	/^    def set_chart_interaction(self, interactive, toggle: bool = False):$/;"	m	class:Renderers
set_chart_interaction	pyvista/plotting/plotter.py	/^    def set_chart_interaction(self, *args, **kwargs):  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_chart_interaction	pyvista/plotting/renderer.py	/^    def set_chart_interaction(self, interactive, toggle=False):  # numpydoc ignore=PR01,RT01$/;"	m	class:Renderer
set_chart_interaction	pyvista/plotting/renderers.py	/^    def set_chart_interaction(self, interactive, toggle: bool = False):$/;"	m	class:Renderers
set_color_cycler	build/lib/pyvista/plotting/plotter.py	/^    def set_color_cycler(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_color_cycler	build/lib/pyvista/plotting/renderer.py	/^    def set_color_cycler(self, color_cycler) -> None:$/;"	m	class:Renderer
set_color_cycler	build/lib/pyvista/plotting/renderers.py	/^    def set_color_cycler(self, color_cycler, all_renderers: bool = True):$/;"	m	class:Renderers
set_color_cycler	pyvista/plotting/plotter.py	/^    def set_color_cycler(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_color_cycler	pyvista/plotting/renderer.py	/^    def set_color_cycler(self, color_cycler) -> None:$/;"	m	class:Renderer
set_color_cycler	pyvista/plotting/renderers.py	/^    def set_color_cycler(self, color_cycler, all_renderers: bool = True):$/;"	m	class:Renderers
set_custom_opacity	build/lib/pyvista/plotting/mapper.py	/^    def set_custom_opacity(self, opacity, color, n_colors, preference='point'):$/;"	m	class:_DataSetMapper
set_custom_opacity	pyvista/plotting/mapper.py	/^    def set_custom_opacity(self, opacity, color, n_colors, preference='point'):$/;"	m	class:_DataSetMapper
set_default_active_scalars	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import set_default_active_scalars$/;"	i
set_default_active_scalars	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.arrays import set_default_active_scalars$/;"	i
set_default_active_scalars	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import set_default_active_scalars$/;"	i
set_default_active_scalars	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import set_default_active_scalars as set_default_active_scalars$/;"	i
set_default_active_scalars	build/lib/pyvista/core/utilities/arrays.py	/^def set_default_active_scalars(mesh: pyvista.DataSet) -> _ActiveArrayExistsInfoTuple:$/;"	f
set_default_active_scalars	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import set_default_active_scalars$/;"	i
set_default_active_scalars	pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.arrays import set_default_active_scalars$/;"	i
set_default_active_scalars	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import set_default_active_scalars$/;"	i
set_default_active_scalars	pyvista/core/utilities/__init__.py	/^from .arrays import set_default_active_scalars as set_default_active_scalars$/;"	i
set_default_active_scalars	pyvista/core/utilities/arrays.py	/^def set_default_active_scalars(mesh: pyvista.DataSet) -> _ActiveArrayExistsInfoTuple:$/;"	f
set_default_active_scalars	tests/core/test_helpers.py	/^from pyvista.core.utilities.arrays import set_default_active_scalars$/;"	i
set_default_active_vectors	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import set_default_active_vectors$/;"	i
set_default_active_vectors	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import set_default_active_vectors as set_default_active_vectors$/;"	i
set_default_active_vectors	build/lib/pyvista/core/utilities/arrays.py	/^def set_default_active_vectors(mesh: pyvista.DataSet) -> _ActiveArrayExistsInfoTuple:$/;"	f
set_default_active_vectors	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.arrays import set_default_active_vectors$/;"	i
set_default_active_vectors	pyvista/core/utilities/__init__.py	/^from .arrays import set_default_active_vectors as set_default_active_vectors$/;"	i
set_default_active_vectors	pyvista/core/utilities/arrays.py	/^def set_default_active_vectors(mesh: pyvista.DataSet) -> _ActiveArrayExistsInfoTuple:$/;"	f
set_default_theme	tests/plotting/conftest.py	/^def set_default_theme():$/;"	f
set_direction_angle	build/lib/pyvista/plotting/lights.py	/^    def set_direction_angle(self, elev, azim):$/;"	m	class:Light
set_direction_angle	pyvista/plotting/lights.py	/^    def set_direction_angle(self, elev, azim):$/;"	m	class:Light
set_environment_texture	build/lib/pyvista/plotting/plotter.py	/^    def set_environment_texture(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_environment_texture	build/lib/pyvista/plotting/renderer.py	/^    def set_environment_texture(self, texture, is_srgb=False) -> None:$/;"	m	class:Renderer
set_environment_texture	pyvista/plotting/plotter.py	/^    def set_environment_texture(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_environment_texture	pyvista/plotting/renderer.py	/^    def set_environment_texture(self, texture, is_srgb=False) -> None:$/;"	m	class:Renderer
set_error_output_file	build/lib/pyvista/core/utilities/__init__.py	/^from .observers import set_error_output_file as set_error_output_file$/;"	i
set_error_output_file	build/lib/pyvista/core/utilities/observers.py	/^def set_error_output_file(filename):$/;"	f
set_error_output_file	pyvista/core/utilities/__init__.py	/^from .observers import set_error_output_file as set_error_output_file$/;"	i
set_error_output_file	pyvista/core/utilities/observers.py	/^def set_error_output_file(filename):$/;"	f
set_focus	build/lib/pyvista/plotting/plotter.py	/^    def set_focus(self, *args, render=True, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_focus	build/lib/pyvista/plotting/renderer.py	/^    def set_focus(self, point) -> None:$/;"	m	class:Renderer
set_focus	pyvista/plotting/plotter.py	/^    def set_focus(self, *args, render=True, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_focus	pyvista/plotting/renderer.py	/^    def set_focus(self, point) -> None:$/;"	m	class:Renderer
set_font_file	build/lib/pyvista/plotting/text.py	/^    def set_font_file(self, font_file: str):$/;"	m	class:TextProperty
set_font_file	pyvista/plotting/text.py	/^    def set_font_file(self, font_file: str):$/;"	m	class:TextProperty
set_headlight	build/lib/pyvista/plotting/lights.py	/^    def set_headlight(self):$/;"	m	class:Light
set_headlight	pyvista/plotting/lights.py	/^    def set_headlight(self):$/;"	m	class:Light
set_interaction	build/lib/pyvista/plotting/charts.py	/^    def set_interaction(self, interactive, toggle: bool = False):$/;"	m	class:Charts
set_interaction	pyvista/plotting/charts.py	/^    def set_interaction(self, interactive, toggle: bool = False):$/;"	m	class:Charts
set_jupyter_backend	build/lib/pyvista/__init__.py	/^from pyvista.jupyter import set_jupyter_backend as set_jupyter_backend$/;"	i
set_jupyter_backend	build/lib/pyvista/jupyter/__init__.py	/^def set_jupyter_backend(backend, name=None, **kwargs):$/;"	f
set_jupyter_backend	pyvista/__init__.py	/^from pyvista.jupyter import set_jupyter_backend as set_jupyter_backend$/;"	i
set_jupyter_backend	pyvista/jupyter/__init__.py	/^def set_jupyter_backend(backend, name=None, **kwargs):$/;"	f
set_log_scale	examples_trame/basic/mesh_scalars.py	/^def set_log_scale(log_scale=False, **kwargs):$/;"	f
set_max	examples/02-plot/lookup_table.py	/^    def set_max(max_value):$/;"	f	function:make_double_slider
set_max_alpha	examples/02-plot/lookup_table.py	/^def set_max_alpha(max_value):$/;"	f
set_min	examples/02-plot/lookup_table.py	/^    def set_min(min_value):$/;"	f	function:make_double_slider
set_min_alpha	examples/02-plot/lookup_table.py	/^def set_min_alpha(min_value):$/;"	f
set_mpl	tests/conftest.py	/^def set_mpl():$/;"	f
set_pickle_format	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import set_pickle_format as set_pickle_format$/;"	i
set_pickle_format	build/lib/pyvista/core/utilities/fileio.py	/^def set_pickle_format(format: Literal['vtk', 'xml', 'legacy']) -> None:  # noqa: A002$/;"	f
set_pickle_format	pyvista/core/utilities/__init__.py	/^from .fileio import set_pickle_format as set_pickle_format$/;"	i
set_pickle_format	pyvista/core/utilities/fileio.py	/^def set_pickle_format(format: Literal['vtk', 'xml', 'legacy']) -> None:  # noqa: A002$/;"	f
set_plot_theme	build/lib/pyvista/plotting/__init__.py	/^from .themes import set_plot_theme as set_plot_theme$/;"	i
set_plot_theme	build/lib/pyvista/plotting/themes.py	/^def set_plot_theme(theme):$/;"	f
set_plot_theme	pyvista/plotting/__init__.py	/^from .themes import set_plot_theme as set_plot_theme$/;"	i
set_plot_theme	pyvista/plotting/themes.py	/^def set_plot_theme(theme):$/;"	f
set_position	build/lib/pyvista/plotting/plotter.py	/^    def set_position(self, *args, render=True, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_position	build/lib/pyvista/plotting/renderer.py	/^    def set_position(self, point, reset=False, render=True) -> None:$/;"	m	class:Renderer
set_position	pyvista/plotting/plotter.py	/^    def set_position(self, *args, render=True, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_position	pyvista/plotting/renderer.py	/^    def set_position(self, point, reset=False, render=True) -> None:$/;"	m	class:Renderer
set_render_window	build/lib/pyvista/plotting/render_window_interactor.py	/^    def set_render_window(self, render_window):$/;"	m	class:RenderWindowInteractor
set_render_window	pyvista/plotting/render_window_interactor.py	/^    def set_render_window(self, render_window):$/;"	m	class:RenderWindowInteractor
set_scalars	build/lib/pyvista/core/datasetattributes.py	/^    def set_scalars($/;"	m	class:DataSetAttributes
set_scalars	build/lib/pyvista/plotting/composite_mapper.py	/^    def set_scalars($/;"	m	class:CompositePolyDataMapper
set_scalars	build/lib/pyvista/plotting/mapper.py	/^    def set_scalars($/;"	m	class:_DataSetMapper
set_scalars	examples_trame/basic/mesh_scalars.py	/^def set_scalars(scalars=mesh.active_scalars_name, **kwargs):$/;"	f
set_scalars	pyvista/core/datasetattributes.py	/^    def set_scalars($/;"	m	class:DataSetAttributes
set_scalars	pyvista/plotting/composite_mapper.py	/^    def set_scalars($/;"	m	class:CompositePolyDataMapper
set_scalars	pyvista/plotting/mapper.py	/^    def set_scalars($/;"	m	class:_DataSetMapper
set_scale	build/lib/pyvista/plotting/plotter.py	/^    def set_scale(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_scale	build/lib/pyvista/plotting/renderer.py	/^    def set_scale($/;"	m	class:Renderer
set_scale	pyvista/plotting/plotter.py	/^    def set_scale(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_scale	pyvista/plotting/renderer.py	/^    def set_scale($/;"	m	class:Renderer
set_scene_light	build/lib/pyvista/plotting/lights.py	/^    def set_scene_light(self):$/;"	m	class:Light
set_scene_light	pyvista/plotting/lights.py	/^    def set_scene_light(self):$/;"	m	class:Light
set_text	build/lib/pyvista/plotting/text.py	/^    def set_text(self, position, text):$/;"	m	class:CornerAnnotation
set_text	pyvista/plotting/text.py	/^    def set_text(self, position, text):$/;"	m	class:CornerAnnotation
set_unique_colors	build/lib/pyvista/plotting/composite_mapper.py	/^    def set_unique_colors($/;"	m	class:CompositePolyDataMapper
set_unique_colors	pyvista/plotting/composite_mapper.py	/^    def set_unique_colors($/;"	m	class:CompositePolyDataMapper
set_vectors	build/lib/pyvista/core/datasetattributes.py	/^    def set_vectors($/;"	m	class:DataSetAttributes
set_vectors	pyvista/core/datasetattributes.py	/^    def set_vectors($/;"	m	class:DataSetAttributes
set_viewup	build/lib/pyvista/plotting/plotter.py	/^    def set_viewup(self, *args, render=True, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_viewup	build/lib/pyvista/plotting/renderer.py	/^    def set_viewup(self, vector, reset=True, render=True) -> None:$/;"	m	class:Renderer
set_viewup	pyvista/plotting/plotter.py	/^    def set_viewup(self, *args, render=True, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
set_viewup	pyvista/plotting/renderer.py	/^    def set_viewup(self, vector, reset=True, render=True) -> None:$/;"	m	class:Renderer
set_visibility	examples/99-advanced/customization_trame_toolbar.py	/^def set_visibility(visibility, **kwargs):$/;"	f
set_visibility	tests/plotting/jupyter/test_trame.py	/^    def set_visibility(visibility, **kwargs):$/;"	f	function:test_trame_custom_menu_items
set_vtkwriter_mode	build/lib/pyvista/core/dataobject.py	/^from .utilities.fileio import set_vtkwriter_mode$/;"	i
set_vtkwriter_mode	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import set_vtkwriter_mode as set_vtkwriter_mode$/;"	i
set_vtkwriter_mode	build/lib/pyvista/core/utilities/fileio.py	/^def set_vtkwriter_mode(vtk_writer: _VTKWriterType, use_binary: bool = True) -> _VTKWriterType:$/;"	f
set_vtkwriter_mode	pyvista/core/dataobject.py	/^from .utilities.fileio import set_vtkwriter_mode$/;"	i
set_vtkwriter_mode	pyvista/core/utilities/__init__.py	/^from .fileio import set_vtkwriter_mode as set_vtkwriter_mode$/;"	i
set_vtkwriter_mode	pyvista/core/utilities/fileio.py	/^def set_vtkwriter_mode(vtk_writer: _VTKWriterType, use_binary: bool = True) -> _VTKWriterType:$/;"	f
setdefault	build/lib/pyvista/core/utilities/arrays.py	/^    def setdefault(self: _SerializedDictArray, *args, **kwargs) -> None:$/;"	m	class:_SerializedDictArray
setdefault	pyvista/core/utilities/arrays.py	/^    def setdefault(self: _SerializedDictArray, *args, **kwargs) -> None:$/;"	m	class:_SerializedDictArray
settings	tests/core/test_dataobject_filters.py	/^from hypothesis import settings$/;"	i
settings	tests/core/test_datasetattributes.py	/^from hypothesis import settings$/;"	i
settings	tests/core/test_reader.py	/^from hypothesis import settings$/;"	i
settings	tests/plotting/test_regression.py	/^from hypothesis import settings$/;"	i
settings	tests/plotting/test_theme.py	/^from hypothesis import settings$/;"	i
setup	build/lib/pyvista/ext/coverage.py	/^def setup(app: Sphinx) -> dict[str, Any]:$/;"	f
setup	build/lib/pyvista/ext/plot_directive.py	/^def setup(app):$/;"	f
setup	build/lib/pyvista/ext/viewer_directive.py	/^def setup(app):$/;"	f
setup	doc/source/conf.py	/^def setup(app):  # noqa: D103$/;"	f
setup	pyvista/ext/coverage.py	/^def setup(app: Sphinx) -> dict[str, Any]:$/;"	f
setup	pyvista/ext/plot_directive.py	/^def setup(app):$/;"	f
setup	pyvista/ext/viewer_directive.py	/^def setup(app):$/;"	f
setup	setup.py	/^from setuptools import setup$/;"	i
setup_plot	tests/plotting/test_plotting.py	/^    def setup_plot():$/;"	f	function:test_enable_custom_trackball_style
sextant_file	examples/00-load/load_vrml.py	/^sextant_file = examples.vrml.download_sextant()$/;"	v
shade	build/lib/pyvista/plotting/volume_property.py	/^    def shade(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
shade	build/lib/pyvista/plotting/volume_property.py	/^    def shade(self, value: bool):$/;"	m	class:VolumeProperty
shade	pyvista/plotting/volume_property.py	/^    def shade(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
shade	pyvista/plotting/volume_property.py	/^    def shade(self, value: bool):$/;"	m	class:VolumeProperty
shading	build/lib/pyvista/plotting/actor_properties.py	/^    def shading(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
shading	build/lib/pyvista/plotting/actor_properties.py	/^    def shading(self, is_active: bool):$/;"	m	class:ActorProperties
shading	pyvista/plotting/actor_properties.py	/^    def shading(self):  # numpydoc ignore=RT01$/;"	m	class:ActorProperties
shading	pyvista/plotting/actor_properties.py	/^    def shading(self, is_active: bool):$/;"	m	class:ActorProperties
shadow	examples/02-plot/scalar_bars.py	/^    shadow=True,$/;"	v
shadow_attenuation	build/lib/pyvista/plotting/lights.py	/^    def shadow_attenuation(self):  # numpydoc ignore=RT01$/;"	m	class:Light
shadow_attenuation	build/lib/pyvista/plotting/lights.py	/^    def shadow_attenuation(self, value):$/;"	m	class:Light
shadow_attenuation	examples/04-lights/shadows.py	/^    shadow_attenuation=0.95,$/;"	v
shadow_attenuation	pyvista/plotting/lights.py	/^    def shadow_attenuation(self):  # numpydoc ignore=RT01$/;"	m	class:Light
shadow_attenuation	pyvista/plotting/lights.py	/^    def shadow_attenuation(self, value):$/;"	m	class:Light
shadow_renderer	build/lib/pyvista/plotting/renderers.py	/^    def shadow_renderer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
shadow_renderer	pyvista/plotting/renderers.py	/^    def shadow_renderer(self):  # numpydoc ignore=RT01$/;"	m	class:Renderers
shaft	build/lib/pyvista/core/utilities/geometric_sources.py	/^    shaft = 0$/;"	v	class:_PartEnum
shaft	pyvista/core/utilities/geometric_sources.py	/^    shaft = 0$/;"	v	class:_PartEnum
shaft_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_length($/;"	m	class:AxesGeometrySource
shaft_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_length(self: AxesGeometrySource, length: float | VectorLike[float]) -> None:$/;"	m	class:AxesGeometrySource
shaft_length	build/lib/pyvista/plotting/axes_actor.py	/^    def shaft_length(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
shaft_length	build/lib/pyvista/plotting/axes_actor.py	/^    def shaft_length(self, length):$/;"	m	class:AxesActor
shaft_length	pyvista/core/utilities/geometric_sources.py	/^    def shaft_length($/;"	m	class:AxesGeometrySource
shaft_length	pyvista/core/utilities/geometric_sources.py	/^    def shaft_length(self: AxesGeometrySource, length: float | VectorLike[float]) -> None:$/;"	m	class:AxesGeometrySource
shaft_length	pyvista/plotting/axes_actor.py	/^    def shaft_length(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
shaft_length	pyvista/plotting/axes_actor.py	/^    def shaft_length(self, length):$/;"	m	class:AxesActor
shaft_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: ArrowSource) -> float:$/;"	m	class:ArrowSource
shaft_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: ArrowSource, shaft_radius: float) -> None:$/;"	m	class:ArrowSource
shaft_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: AxesGeometrySource) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
shaft_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: AxesGeometrySource, radius: float) -> None:$/;"	m	class:AxesGeometrySource
shaft_radius	pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: ArrowSource) -> float:$/;"	m	class:ArrowSource
shaft_radius	pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: ArrowSource, shaft_radius: float) -> None:$/;"	m	class:ArrowSource
shaft_radius	pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: AxesGeometrySource) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
shaft_radius	pyvista/core/utilities/geometric_sources.py	/^    def shaft_radius(self: AxesGeometrySource, radius: float) -> None:$/;"	m	class:AxesGeometrySource
shaft_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_resolution(self: ArrowSource) -> int:$/;"	m	class:ArrowSource
shaft_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_resolution(self: ArrowSource, shaft_resolution: int) -> None:$/;"	m	class:ArrowSource
shaft_resolution	pyvista/core/utilities/geometric_sources.py	/^    def shaft_resolution(self: ArrowSource) -> int:$/;"	m	class:ArrowSource
shaft_resolution	pyvista/core/utilities/geometric_sources.py	/^    def shaft_resolution(self: ArrowSource, shaft_resolution: int) -> None:$/;"	m	class:ArrowSource
shaft_type	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_type(self: AxesGeometrySource) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
shaft_type	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shaft_type(self: AxesGeometrySource, shaft_type: GeometryTypes | DataSet) -> None:$/;"	m	class:AxesGeometrySource
shaft_type	build/lib/pyvista/plotting/axes_actor.py	/^    def shaft_type(self) -> ShaftType:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
shaft_type	build/lib/pyvista/plotting/axes_actor.py	/^    def shaft_type(self, shaft_type: ShaftType | int):$/;"	m	class:AxesActor
shaft_type	pyvista/core/utilities/geometric_sources.py	/^    def shaft_type(self: AxesGeometrySource) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
shaft_type	pyvista/core/utilities/geometric_sources.py	/^    def shaft_type(self: AxesGeometrySource, shaft_type: GeometryTypes | DataSet) -> None:$/;"	m	class:AxesGeometrySource
shaft_type	pyvista/plotting/axes_actor.py	/^    def shaft_type(self) -> ShaftType:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
shaft_type	pyvista/plotting/axes_actor.py	/^    def shaft_type(self, shaft_type: ShaftType | int):$/;"	m	class:AxesActor
shallow_copy	build/lib/pyvista/core/composite.py	/^    def shallow_copy(  # type: ignore[override]$/;"	m	class:MultiBlock
shallow_copy	build/lib/pyvista/core/dataobject.py	/^    def shallow_copy(self: Self, to_copy: Self | _vtk.vtkDataObject) -> None:$/;"	m	class:DataObject
shallow_copy	build/lib/pyvista/core/pointset.py	/^    def shallow_copy(self, to_copy: DataSet) -> None:  # type: ignore[override]$/;"	m	class:_PointSet
shallow_copy	build/lib/pyvista/plotting/text.py	/^    def shallow_copy(self, to_copy: TextProperty) -> None:$/;"	m	class:TextProperty
shallow_copy	pyvista/core/composite.py	/^    def shallow_copy(  # type: ignore[override]$/;"	m	class:MultiBlock
shallow_copy	pyvista/core/dataobject.py	/^    def shallow_copy(self: Self, to_copy: Self | _vtk.vtkDataObject) -> None:$/;"	m	class:DataObject
shallow_copy	pyvista/core/pointset.py	/^    def shallow_copy(self, to_copy: DataSet) -> None:  # type: ignore[override]$/;"	m	class:_PointSet
shallow_copy	pyvista/plotting/text.py	/^    def shallow_copy(self, to_copy: TextProperty) -> None:$/;"	m	class:TextProperty
shape	build/lib/pyvista/plotting/plotter.py	/^    def shape(self) -> tuple[int] | tuple[int, int]:$/;"	m	class:BasePlotter
shape	build/lib/pyvista/plotting/renderers.py	/^    def shape(self) -> tuple[int] | tuple[int, int]:$/;"	m	class:Renderers
shape	examples/02-plot/multi_window.py	/^shape = (5, 4)  # 5 by 4 grid$/;"	v
shape	pyvista/plotting/plotter.py	/^    def shape(self) -> tuple[int] | tuple[int, int]:$/;"	m	class:BasePlotter
shape	pyvista/plotting/renderers.py	/^    def shape(self) -> tuple[int] | tuple[int, int]:$/;"	m	class:Renderers
sharp_edges_feature_angle	build/lib/pyvista/plotting/themes.py	/^    def sharp_edges_feature_angle(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
sharp_edges_feature_angle	build/lib/pyvista/plotting/themes.py	/^    def sharp_edges_feature_angle(self, value: float):$/;"	m	class:Theme
sharp_edges_feature_angle	pyvista/plotting/themes.py	/^    def sharp_edges_feature_angle(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Theme
sharp_edges_feature_angle	pyvista/plotting/themes.py	/^    def sharp_edges_feature_angle(self, value: float):$/;"	m	class:Theme
shifted	examples/04-lights/mesh_lighting.py	/^shifted = horse.translate((0, 10, 0), inplace=False)$/;"	v
show	build/lib/pyvista/plotting/charts.py	/^    def show($/;"	m	class:_Chart
show	build/lib/pyvista/plotting/plotter.py	/^    def show($/;"	m	class:Plotter
show	build/lib/pyvista/plotting/themes.py	/^    def show(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
show	build/lib/pyvista/plotting/themes.py	/^    def show(self, show: bool):$/;"	m	class:_AxesConfig
show	pyvista/plotting/charts.py	/^    def show($/;"	m	class:_Chart
show	pyvista/plotting/plotter.py	/^    def show($/;"	m	class:Plotter
show	pyvista/plotting/themes.py	/^    def show(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
show	pyvista/plotting/themes.py	/^    def show(self, show: bool):$/;"	m	class:_AxesConfig
show	tests/plotting/test_picking.py	/^        show=True,$/;"	v	class:test_single_cell_picking.PickCallback
show_actor	build/lib/pyvista/plotting/axes.py	/^    def show_actor(self):$/;"	m	class:Axes
show_actor	build/lib/pyvista/plotting/lights.py	/^    def show_actor(self):$/;"	m	class:Light
show_actor	pyvista/plotting/axes.py	/^    def show_actor(self):$/;"	m	class:Axes
show_actor	pyvista/plotting/lights.py	/^    def show_actor(self):$/;"	m	class:Light
show_axes	build/lib/pyvista/_plot.py	/^        show_axes = pl.theme.axes.show$/;"	v
show_axes	build/lib/pyvista/plotting/plotter.py	/^    def show_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_axes	build/lib/pyvista/plotting/renderer.py	/^    def show_axes(self) -> None:$/;"	m	class:Renderer
show_axes	examples/01-filter/image_representations.py	/^    show_axes=False,$/;"	v
show_axes	examples/01-filter/mesh_quality.py	/^    show_axes=False,$/;"	v
show_axes	pyvista/_plot.py	/^        show_axes = pl.theme.axes.show$/;"	v
show_axes	pyvista/plotting/plotter.py	/^    def show_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_axes	pyvista/plotting/renderer.py	/^    def show_axes(self) -> None:$/;"	m	class:Renderer
show_axes_all	build/lib/pyvista/plotting/plotter.py	/^    def show_axes_all(self) -> None:$/;"	m	class:BasePlotter
show_axes_all	pyvista/plotting/plotter.py	/^    def show_axes_all(self) -> None:$/;"	m	class:BasePlotter
show_bounds	build/lib/pyvista/plotting/plotter.py	/^    def show_bounds(self, *args, **kwargs) -> CubeAxesActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_bounds	build/lib/pyvista/plotting/renderer.py	/^    def show_bounds($/;"	m	class:Renderer
show_bounds	pyvista/plotting/plotter.py	/^    def show_bounds(self, *args, **kwargs) -> CubeAxesActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_bounds	pyvista/plotting/renderer.py	/^    def show_bounds($/;"	m	class:Renderer
show_cells	build/lib/pyvista/core/pointset.py	/^    def show_cells(self, inplace: bool = False) -> ExplicitStructuredGrid:$/;"	m	class:ExplicitStructuredGrid
show_cells	pyvista/core/pointset.py	/^    def show_cells(self, inplace: bool = False) -> ExplicitStructuredGrid:$/;"	m	class:ExplicitStructuredGrid
show_edges	build/lib/pyvista/demos/logo.py	/^        show_edges=True,$/;"	v
show_edges	build/lib/pyvista/plotting/_property.py	/^    def show_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
show_edges	build/lib/pyvista/plotting/_property.py	/^    def show_edges(self, value: bool):$/;"	m	class:Property
show_edges	build/lib/pyvista/plotting/themes.py	/^    def show_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_edges	build/lib/pyvista/plotting/themes.py	/^    def show_edges(self, show_edges: bool):$/;"	m	class:Theme
show_edges	examples/00-load/create_poly.py	/^    show_edges=True,$/;"	v
show_edges	examples/01-filter/clipping_with_surface.py	/^    show_edges=True,$/;"	v
show_edges	examples/01-filter/image_representations.py	/^    show_edges=True,$/;"	v
show_edges	examples/01-filter/sampling_functions_3d.py	/^    show_edges=False,$/;"	v
show_edges	examples/02-plot/gif.py	/^    show_edges=True,$/;"	v
show_edges	examples/02-plot/movie_glyphs.py	/^    show_edges=False,$/;"	v
show_edges	examples/02-plot/vertices.py	/^    show_edges=True,$/;"	v
show_edges	examples/99-advanced/fea_hertzian_contact_pressure.py	/^    show_edges=False,$/;"	v
show_edges	pyvista/demos/logo.py	/^        show_edges=True,$/;"	v
show_edges	pyvista/plotting/_property.py	/^    def show_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Property
show_edges	pyvista/plotting/_property.py	/^    def show_edges(self, value: bool):$/;"	m	class:Property
show_edges	pyvista/plotting/themes.py	/^    def show_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_edges	pyvista/plotting/themes.py	/^    def show_edges(self, show_edges: bool):$/;"	m	class:Theme
show_frame	build/lib/pyvista/plotting/text.py	/^    def show_frame(self) -> bool:$/;"	m	class:TextProperty
show_frame	build/lib/pyvista/plotting/text.py	/^    def show_frame(self, frame: bool):$/;"	m	class:TextProperty
show_frame	pyvista/plotting/text.py	/^    def show_frame(self) -> bool:$/;"	m	class:TextProperty
show_frame	pyvista/plotting/text.py	/^    def show_frame(self, frame: bool):$/;"	m	class:TextProperty
show_grid	build/lib/pyvista/_plot.py	/^    show_grid = kwargs.pop('show_grid', False)$/;"	v
show_grid	build/lib/pyvista/plotting/plotter.py	/^    def show_grid(self, *args, **kwargs) -> CubeAxesActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_grid	build/lib/pyvista/plotting/renderer.py	/^    def show_grid(self, **kwargs):$/;"	m	class:Renderer
show_grid	pyvista/_plot.py	/^    show_grid = kwargs.pop('show_grid', False)$/;"	v
show_grid	pyvista/plotting/plotter.py	/^    def show_grid(self, *args, **kwargs) -> CubeAxesActor:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
show_grid	pyvista/plotting/renderer.py	/^    def show_grid(self, **kwargs):$/;"	m	class:Renderer
show_kwargs	build/lib/pyvista/plotting/helpers.py	/^        show_kwargs = {}$/;"	v
show_kwargs	pyvista/plotting/helpers.py	/^        show_kwargs = {}$/;"	v
show_labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def show_labels(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
show_labels	build/lib/pyvista/plotting/axes_assembly.py	/^    def show_labels(self, value: bool):$/;"	m	class:_XYZAssembly
show_labels	pyvista/plotting/axes_assembly.py	/^    def show_labels(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
show_labels	pyvista/plotting/axes_assembly.py	/^    def show_labels(self, value: bool):$/;"	m	class:_XYZAssembly
show_message	tests/plotting/test_picking.py	/^        show_message=True,$/;"	v	class:test_element_picking.Tracker
show_progress	build/lib/pyvista/core/utilities/reader.py	/^    def show_progress(self, msg=None) -> None:$/;"	m	class:BaseReader
show_progress	pyvista/core/utilities/reader.py	/^    def show_progress(self, msg=None) -> None:$/;"	m	class:BaseReader
show_scalar_bar	build/lib/pyvista/demos/logo.py	/^        show_scalar_bar=False,$/;"	v
show_scalar_bar	build/lib/pyvista/plotting/themes.py	/^    def show_scalar_bar(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_scalar_bar	build/lib/pyvista/plotting/themes.py	/^    def show_scalar_bar(self, show_scalar_bar: bool):$/;"	m	class:Theme
show_scalar_bar	examples/00-load/create_poly.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/00-load/create_truss.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/01-filter/sampling_functions_2d.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/01-filter/sampling_functions_3d.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/isovalue.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/movie_glyphs.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/point_clouds.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/points_gaussian_scale.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/vector_component.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/vertices.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/02-plot/volume.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/atomic_orbitals.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/magnetic_fields.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/openfoam_cooling.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/openfoam_cooling.py	/^    show_scalar_bar=True,$/;"	v
show_scalar_bar	examples/99-advanced/pump_bracket.py	/^    show_scalar_bar=False,$/;"	v
show_scalar_bar	examples/99-advanced/ray_trace_moeller.py	/^        show_scalar_bar=False,$/;"	v
show_scalar_bar	pyvista/demos/logo.py	/^        show_scalar_bar=False,$/;"	v
show_scalar_bar	pyvista/plotting/themes.py	/^    def show_scalar_bar(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_scalar_bar	pyvista/plotting/themes.py	/^    def show_scalar_bar(self, show_scalar_bar: bool):$/;"	m	class:Theme
show_size	examples_trame/basic/file_viewer.py	/^            show_size=True,$/;"	v
show_static_image	build/lib/pyvista/jupyter/notebook.py	/^def show_static_image(plotter, screenshot):  # numpydoc ignore=RT01$/;"	f
show_static_image	pyvista/jupyter/notebook.py	/^def show_static_image(plotter, screenshot):  # numpydoc ignore=RT01$/;"	f
show_symmetric	build/lib/pyvista/plotting/axes.py	/^    def show_symmetric(self):$/;"	m	class:Axes
show_symmetric	pyvista/plotting/axes.py	/^    def show_symmetric(self):$/;"	m	class:Axes
show_trame	build/lib/pyvista/jupyter/__init__.py	/^            from pyvista.trame.jupyter import show_trame as show_trame$/;"	i
show_trame	build/lib/pyvista/jupyter/notebook.py	/^            from pyvista.trame.jupyter import show_trame$/;"	i
show_trame	build/lib/pyvista/trame/__init__.py	/^from pyvista.trame.jupyter import show_trame$/;"	i
show_trame	build/lib/pyvista/trame/jupyter.py	/^def show_trame($/;"	f
show_trame	pyvista/jupyter/__init__.py	/^            from pyvista.trame.jupyter import show_trame as show_trame$/;"	i
show_trame	pyvista/jupyter/notebook.py	/^            from pyvista.trame.jupyter import show_trame$/;"	i
show_trame	pyvista/trame/__init__.py	/^from pyvista.trame.jupyter import show_trame$/;"	i
show_trame	pyvista/trame/jupyter.py	/^def show_trame($/;"	f
show_vertices	build/lib/pyvista/plotting/themes.py	/^    def show_vertices(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_vertices	build/lib/pyvista/plotting/themes.py	/^    def show_vertices(self, show_vertices: bool):$/;"	m	class:Theme
show_vertices	examples/02-plot/vertices.py	/^    show_vertices=True,$/;"	v
show_vertices	pyvista/plotting/themes.py	/^    def show_vertices(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
show_vertices	pyvista/plotting/themes.py	/^    def show_vertices(self, show_vertices: bool):$/;"	m	class:Theme
show_xaxis	examples/02-plot/bounds.py	/^    show_xaxis=False,$/;"	v
show_zlabels	examples/01-filter/image_fft_perlin_noise.py	/^    show_zlabels=False,$/;"	v
shrink	build/lib/pyvista/core/filters/data_set.py	/^    def shrink(  # type: ignore[misc]$/;"	m	class:DataSetFilters
shrink	build/lib/pyvista/core/pointset.py	/^    def shrink(self, *args, **kwargs):$/;"	m	class:PointSet
shrink	pyvista/core/filters/data_set.py	/^    def shrink(  # type: ignore[misc]$/;"	m	class:DataSetFilters
shrink	pyvista/core/pointset.py	/^    def shrink(self, *args, **kwargs):$/;"	m	class:PointSet
shrink_factor	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shrink_factor(self: CubeFacesSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
shrink_factor	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def shrink_factor(self: CubeFacesSource, factor: float | None) -> None:$/;"	m	class:CubeFacesSource
shrink_factor	pyvista/core/utilities/geometric_sources.py	/^    def shrink_factor(self: CubeFacesSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:CubeFacesSource
shrink_factor	pyvista/core/utilities/geometric_sources.py	/^    def shrink_factor(self: CubeFacesSource, factor: float | None) -> None:$/;"	m	class:CubeFacesSource
shutil	build/lib/pyvista/examples/downloads.py	/^import shutil$/;"	i
shutil	build/lib/pyvista/ext/plot_directive.py	/^import shutil$/;"	i
shutil	build/lib/pyvista/ext/viewer_directive.py	/^import shutil$/;"	i
shutil	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^import shutil$/;"	i
shutil	pyvista/examples/downloads.py	/^import shutil$/;"	i
shutil	pyvista/ext/plot_directive.py	/^import shutil$/;"	i
shutil	pyvista/ext/viewer_directive.py	/^import shutil$/;"	i
shutil	pyvista/plotting/utilities/sphinx_gallery.py	/^import shutil$/;"	i
shutil	tests/core/test_utilities.py	/^import shutil$/;"	i
shutil	tests/doc/tst_doc_images.py	/^import shutil$/;"	i
shutil	tests/examples/test_dataset_loader.py	/^import shutil$/;"	i
side_sets	build/lib/pyvista/core/utilities/reader.py	/^    def side_sets(self):$/;"	m	class:ExodusIIReader
side_sets	pyvista/core/utilities/reader.py	/^    def side_sets(self):$/;"	m	class:ExodusIIReader
signal	build/lib/pyvista/core/utilities/observers.py	/^import signal$/;"	i
signal	pyvista/core/utilities/observers.py	/^import signal$/;"	i
signature	build/lib/pyvista/plotting/render_window_interactor.py	/^from inspect import signature$/;"	i
signature	pyvista/plotting/render_window_interactor.py	/^from inspect import signature$/;"	i
silhouette	build/lib/pyvista/plotting/themes.py	/^    def silhouette(self) -> _SilhouetteConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
silhouette	build/lib/pyvista/plotting/themes.py	/^    def silhouette(self, config: _SilhouetteConfig):$/;"	m	class:Theme
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(color='red', line_width=8.0, decimate=None),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(color='red', line_width=8.0, decimate=None, feature_angle=True),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(decimate=None, feature_angle=True, line_width=8, color='white'),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^    silhouette=dict(line_width=8, color='white'),$/;"	v
silhouette	examples/02-plot/silhouette.py	/^silhouette = dict($/;"	v
silhouette	pyvista/plotting/themes.py	/^    def silhouette(self) -> _SilhouetteConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
silhouette	pyvista/plotting/themes.py	/^    def silhouette(self, config: _SilhouetteConfig):$/;"	m	class:Theme
simulate	examples/03-widgets/line_widget.py	/^def simulate(pointa, pointb):$/;"	f
single_click_callback	tests/plotting/test_render_window_interactor.py	/^    def single_click_callback(mouse_position):$/;"	f	function:test_track_click_position
single_slice	examples/01-filter/slicing.py	/^single_slice = mesh.slice(normal=[1, 1, 0])$/;"	v
size	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def size(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
size	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def size(self: SuperquadricSource, size: float) -> None:$/;"	m	class:SuperquadricSource
size	build/lib/pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
size	build/lib/pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
size	build/lib/pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
size	build/lib/pyvista/plotting/charts.py	/^    def size(self, val):$/;"	m	class:ChartBox
size	build/lib/pyvista/plotting/charts.py	/^    def size(self, val):$/;"	m	class:ChartPie
size	build/lib/pyvista/plotting/charts.py	/^    def size(self, val):$/;"	m	class:_Chart
size	build/lib/pyvista/plotting/text.py	/^    def size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Label
size	build/lib/pyvista/plotting/text.py	/^    def size(self, size: int):$/;"	m	class:Label
size	build/lib/pyvista/plotting/themes.py	/^    def size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
size	build/lib/pyvista/plotting/themes.py	/^    def size(self, size: int):$/;"	m	class:_Font
size	examples/02-plot/chart_overlays.py	/^    size=(0.46, 0.25),$/;"	v
size	examples/03-widgets/checkbox_widget.py	/^size = 50$/;"	v
size	pyvista/core/utilities/geometric_sources.py	/^    def size(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
size	pyvista/core/utilities/geometric_sources.py	/^    def size(self: SuperquadricSource, size: float) -> None:$/;"	m	class:SuperquadricSource
size	pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:ChartBox
size	pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:ChartPie
size	pyvista/plotting/charts.py	/^    def size(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
size	pyvista/plotting/charts.py	/^    def size(self, val):$/;"	m	class:ChartBox
size	pyvista/plotting/charts.py	/^    def size(self, val):$/;"	m	class:ChartPie
size	pyvista/plotting/charts.py	/^    def size(self, val):$/;"	m	class:_Chart
size	pyvista/plotting/text.py	/^    def size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:Label
size	pyvista/plotting/text.py	/^    def size(self, size: int):$/;"	m	class:Label
size	pyvista/plotting/themes.py	/^    def size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
size	pyvista/plotting/themes.py	/^    def size(self, size: int):$/;"	m	class:_Font
sized	examples/01-filter/compute_volume.py	/^sized = dataset.compute_cell_sizes()$/;"	v
sizes	examples/01-filter/compute_volume.py	/^sizes = threshed.compute_cell_sizes()$/;"	v
skeleton	examples/99-advanced/anatomical_groups.py	/^skeleton = [$/;"	v
skip_9_0_X	tests/plotting/test_plotting.py	/^skip_9_0_X = pytest.mark.skipif(pv.vtk_version_info < (9, 1), reason='Flaky on 9.0.X')$/;"	v
skip_9_1_0	tests/examples/test_download_files.py	/^skip_9_1_0 = pytest.mark.needs_vtk_version(9, 1, 0)$/;"	v
skip_9_1_0	tests/plotting/test_plotting.py	/^skip_9_1_0 = pytest.mark.needs_vtk_version(9, 1, 0)$/;"	v
skip_check_gc	tests/plotting/conftest.py	/^def skip_check_gc(check_gc):$/;"	f
skip_check_gc	tests/plotting/jupyter/conftest.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_check_gc	tests/plotting/test_axes.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_check_gc	tests/plotting/test_charts.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_check_gc	tests/plotting/test_cube_axes_actor.py	/^def skip_check_gc(skip_check_gc):$/;"	f
skip_lesser_9_0_X	tests/plotting/test_plotting.py	/^skip_lesser_9_0_X = pytest.mark.skipif($/;"	v
skip_lesser_9_2_2	tests/core/test_unstructured_grid_filters.py	/^skip_lesser_9_2_2 = pytest.mark.skipif($/;"	v
skip_lesser_9_3_X	tests/plotting/test_plotting.py	/^skip_lesser_9_3_X = pytest.mark.skipif($/;"	v
skip_mesa	tests/plotting/test_plotting.py	/^skip_mesa = pytest.mark.skipif(using_mesa(), reason='Does not display correctly within OSMesa')$/;"	v
skip_no_ipython	tests/plotting/jupyter/test_static.py	/^skip_no_ipython = pytest.mark.skipif(not has_ipython, reason='Requires IPython package')$/;"	v
skip_no_plotting	tests/plotting/test_demos.py	/^skip_no_plotting = pytest.mark.skipif($/;"	v
skip_no_trame	tests/plotting/jupyter/test_trame.py	/^    skip_no_trame = pytest.mark.skipif(not has_trame, reason='Requires trame')$/;"	v
skip_windows_mesa	tests/plotting/test_plotting.py	/^skip_windows_mesa = skip_mesa and pytest.mark.skip_windows($/;"	v
skip_zero_time	build/lib/pyvista/core/utilities/reader.py	/^    def skip_zero_time(self):$/;"	m	class:OpenFOAMReader
skip_zero_time	build/lib/pyvista/core/utilities/reader.py	/^    def skip_zero_time(self, value) -> None:$/;"	m	class:OpenFOAMReader
skip_zero_time	pyvista/core/utilities/reader.py	/^    def skip_zero_time(self):$/;"	m	class:OpenFOAMReader
skip_zero_time	pyvista/core/utilities/reader.py	/^    def skip_zero_time(self, value) -> None:$/;"	m	class:OpenFOAMReader
skipped	tests/test_conftest.py	/^    skipped = _ReportDescriptor()$/;"	v	class:RunResultsReport
slc	examples/01-filter/slicing.py	/^slc = model.slice_along_line(spline)$/;"	v
slice	build/lib/pyvista/core/filters/data_object.py	/^    def slice(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice	build/lib/pyvista/core/pointset.py	/^    def slice(self, *args, **kwargs):$/;"	m	class:PointSet
slice	pyvista/core/filters/data_object.py	/^    def slice(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice	pyvista/core/pointset.py	/^    def slice(self, *args, **kwargs):$/;"	m	class:PointSet
slice_	examples/99-advanced/warp_by_vector_eigenmodes.py	/^    slice_ = grid.points.copy()$/;"	v
slice_along_axis	build/lib/pyvista/core/filters/data_object.py	/^    def slice_along_axis(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_along_axis	build/lib/pyvista/core/pointset.py	/^    def slice_along_axis(self, *args, **kwargs):$/;"	m	class:PointSet
slice_along_axis	pyvista/core/filters/data_object.py	/^    def slice_along_axis(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_along_axis	pyvista/core/pointset.py	/^    def slice_along_axis(self, *args, **kwargs):$/;"	m	class:PointSet
slice_along_line	build/lib/pyvista/core/filters/data_object.py	/^    def slice_along_line(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_along_line	build/lib/pyvista/core/pointset.py	/^    def slice_along_line(self, *args, **kwargs):$/;"	m	class:PointSet
slice_along_line	pyvista/core/filters/data_object.py	/^    def slice_along_line(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_along_line	pyvista/core/pointset.py	/^    def slice_along_line(self, *args, **kwargs):$/;"	m	class:PointSet
slice_boundaries	examples/99-advanced/openfoam_example.py	/^slice_boundaries = pyvista.MultiBlock($/;"	v
slice_implicit	build/lib/pyvista/core/filters/data_object.py	/^    def slice_implicit(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_implicit	build/lib/pyvista/core/pointset.py	/^    def slice_implicit(self, *args, **kwargs):$/;"	m	class:PointSet
slice_implicit	pyvista/core/filters/data_object.py	/^    def slice_implicit(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_implicit	pyvista/core/pointset.py	/^    def slice_implicit(self, *args, **kwargs):$/;"	m	class:PointSet
slice_internal_mesh	examples/99-advanced/openfoam_example.py	/^slice_internal_mesh = slice_z_center(internal_mesh)$/;"	v
slice_orthogonal	build/lib/pyvista/core/filters/data_object.py	/^    def slice_orthogonal(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_orthogonal	build/lib/pyvista/core/pointset.py	/^    def slice_orthogonal(self, *args, **kwargs):$/;"	m	class:PointSet
slice_orthogonal	pyvista/core/filters/data_object.py	/^    def slice_orthogonal(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
slice_orthogonal	pyvista/core/pointset.py	/^    def slice_orthogonal(self, *args, **kwargs):$/;"	m	class:PointSet
slice_z_center	examples/99-advanced/openfoam_example.py	/^def slice_z_center(mesh):$/;"	f
slices	examples/01-filter/slicing.py	/^slices = mesh.slice_along_axis(n=7, axis='y')$/;"	v
slices	examples/01-filter/slicing.py	/^slices = mesh.slice_orthogonal()$/;"	v
slices	examples/01-filter/slicing.py	/^slices = mesh.slice_orthogonal(x=20, y=20, z=30)$/;"	v
slices	examples/01-filter/slicing.py	/^slices = pv.MultiBlock()  # treat like a dictionary\/list$/;"	v
slices	examples/01-filter/slicing.py	/^slices = pv.MultiBlock()$/;"	v
slices	examples/01-filter/using_filters.py	/^slices = dataset.slice_orthogonal()$/;"	v
slices	examples/02-plot/ortho_slices.py	/^slices = mesh.slice_orthogonal(x=100, z=75)$/;"	v
slices	examples/99-advanced/warp_by_vector_eigenmodes.py	/^slices = []$/;"	v
slider	build/lib/pyvista/trame/ui/vuetify2.py	/^def slider(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
slider	build/lib/pyvista/trame/ui/vuetify3.py	/^def slider(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
slider	examples/99-advanced/customization_trame_toolbar.py	/^from pyvista.trame.ui.vuetify3 import slider$/;"	i
slider	pyvista/trame/ui/vuetify2.py	/^def slider(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
slider	pyvista/trame/ui/vuetify3.py	/^def slider(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
slider_color	build/lib/pyvista/plotting/themes.py	/^    def slider_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_color	build/lib/pyvista/plotting/themes.py	/^    def slider_color(self, slider_color: ColorLike):$/;"	m	class:_SliderStyleConfig
slider_color	pyvista/plotting/themes.py	/^    def slider_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_color	pyvista/plotting/themes.py	/^    def slider_color(self, slider_color: ColorLike):$/;"	m	class:_SliderStyleConfig
slider_length	build/lib/pyvista/plotting/themes.py	/^    def slider_length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_length	build/lib/pyvista/plotting/themes.py	/^    def slider_length(self, slider_length: float):$/;"	m	class:_SliderStyleConfig
slider_length	pyvista/plotting/themes.py	/^    def slider_length(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_length	pyvista/plotting/themes.py	/^    def slider_length(self, slider_length: float):$/;"	m	class:_SliderStyleConfig
slider_styles	build/lib/pyvista/plotting/themes.py	/^    def slider_styles(self) -> _SliderConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
slider_styles	build/lib/pyvista/plotting/themes.py	/^    def slider_styles(self, config: _SliderConfig):$/;"	m	class:Theme
slider_styles	pyvista/plotting/themes.py	/^    def slider_styles(self) -> _SliderConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
slider_styles	pyvista/plotting/themes.py	/^    def slider_styles(self, config: _SliderConfig):$/;"	m	class:Theme
slider_width	build/lib/pyvista/plotting/themes.py	/^    def slider_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_width	build/lib/pyvista/plotting/themes.py	/^    def slider_width(self, slider_width: float):$/;"	m	class:_SliderStyleConfig
slider_width	pyvista/plotting/themes.py	/^    def slider_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
slider_width	pyvista/plotting/themes.py	/^    def slider_width(self, slider_width: float):$/;"	m	class:_SliderStyleConfig
smooth	build/lib/pyvista/core/filters/poly_data.py	/^    def smooth($/;"	m	class:PolyDataFilters
smooth	examples/01-filter/surface_smoothing.py	/^smooth = surf.smooth()$/;"	v
smooth	examples/01-filter/surface_smoothing.py	/^smooth = surf.smooth(n_iter=100)$/;"	v
smooth	examples/01-filter/surface_smoothing.py	/^smooth = surf.smooth(n_iter=1000)$/;"	v
smooth	pyvista/core/filters/poly_data.py	/^    def smooth($/;"	m	class:PolyDataFilters
smooth_shading	build/lib/pyvista/plotting/themes.py	/^    def smooth_shading(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
smooth_shading	build/lib/pyvista/plotting/themes.py	/^    def smooth_shading(self, smooth_shading: bool):$/;"	m	class:Theme
smooth_shading	examples/00-load/create_platonic_solids.py	/^        smooth_shading=smooth_shading,$/;"	v
smooth_shading	examples/01-filter/sampling_functions_2d.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/02-plot/backface_props.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/02-plot/silhouette.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/04-lights/shadows.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/99-advanced/atomic_orbitals.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/99-advanced/openfoam_cooling.py	/^    smooth_shading=True,$/;"	v
smooth_shading	examples/99-advanced/sphere_eversion.py	/^    smooth_shading=True,$/;"	v
smooth_shading	pyvista/plotting/themes.py	/^    def smooth_shading(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
smooth_shading	pyvista/plotting/themes.py	/^    def smooth_shading(self, smooth_shading: bool):$/;"	m	class:Theme
smooth_taubin	build/lib/pyvista/core/filters/poly_data.py	/^    def smooth_taubin($/;"	m	class:PolyDataFilters
smooth_taubin	pyvista/core/filters/poly_data.py	/^    def smooth_taubin($/;"	m	class:PolyDataFilters
smooth_w_taubin	examples/01-filter/surface_smoothing.py	/^smooth_w_taubin = surf.smooth_taubin(n_iter=50, pass_band=0.05)$/;"	v
smoothed_data	examples/01-filter/gaussian_smoothing.py	/^smoothed_data = data.gaussian_smooth(std_dev=3.0)$/;"	v
solids	examples/00-load/create_platonic_solids.py	/^solids = [pv.PlatonicSolid(kind, radius=0.4, center=center) for kind, center in zip(kinds, centers)]$/;"	v
sort_labels	build/lib/pyvista/core/filters/data_set.py	/^    def sort_labels(  # type: ignore[misc]$/;"	m	class:DataSetFilters
sort_labels	pyvista/core/filters/data_set.py	/^    def sort_labels(  # type: ignore[misc]$/;"	m	class:DataSetFilters
source	examples_trame/basic/algorithm.py	/^source = pv.ConeSource()$/;"	v
source_center	examples/01-filter/streamlines.py	/^    source_center=(133.1, 116.3, 5.0),$/;"	v
source_center	examples/01-filter/streamlines.py	/^    source_center=(92.46, 74.37, 135.5),$/;"	v
source_mesh	examples/01-filter/streamlines.py	/^source_mesh = mesh.slice('z', origin=(0, 0, 182))  # inlet surface$/;"	v
source_name	build/lib/pyvista/examples/_dataset_loader.py	/^    def source_name(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
source_name	build/lib/pyvista/examples/_dataset_loader.py	/^    def source_name(self) -> str:$/;"	m	class:_DownloadableFile
source_name	build/lib/pyvista/examples/_dataset_loader.py	/^    def source_name(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDownloadableDatasetLoader
source_name	pyvista/examples/_dataset_loader.py	/^    def source_name(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
source_name	pyvista/examples/_dataset_loader.py	/^    def source_name(self) -> str:$/;"	m	class:_DownloadableFile
source_name	pyvista/examples/_dataset_loader.py	/^    def source_name(self) -> tuple[str, ...]:$/;"	m	class:_MultiFileDownloadableDatasetLoader
source_radius	examples/01-filter/streamlines.py	/^    source_radius=0.1,$/;"	v
source_radius	examples/01-filter/streamlines.py	/^    source_radius=10,$/;"	v
source_radius	examples/01-filter/streamlines.py	/^    source_radius=2.0,$/;"	v
source_suffix	doc/source/conf.py	/^source_suffix = '.rst'$/;"	v
source_suffix	tests/plotting/tinypages/conf.py	/^source_suffix = '.rst'$/;"	v
source_url_blob	build/lib/pyvista/examples/_dataset_loader.py	/^    def source_url_blob(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
source_url_blob	pyvista/examples/_dataset_loader.py	/^    def source_url_blob(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
source_url_raw	build/lib/pyvista/examples/_dataset_loader.py	/^    def source_url_raw(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
source_url_raw	pyvista/examples/_dataset_loader.py	/^    def source_url_raw(self) -> _FilePropStrType_co:$/;"	m	class:_Downloadable
spacing	build/lib/pyvista/core/grid.py	/^    def spacing(self: Self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
spacing	build/lib/pyvista/core/grid.py	/^    def spacing(self: Self, spacing: VectorLike[float]) -> None:$/;"	m	class:ImageData
spacing	build/lib/pyvista/core/utilities/image_sources.py	/^    def spacing(self) -> Sequence[float]:$/;"	m	class:ImageGridSource
spacing	build/lib/pyvista/core/utilities/image_sources.py	/^    def spacing(self, spacing: Sequence[float]) -> None:$/;"	m	class:ImageGridSource
spacing	examples/01-filter/flying_edges.py	/^    spacing=(abs(x_min) \/ n * 2, abs(y_min) \/ n * 2, abs(z_min) \/ n * 2),$/;"	v
spacing	examples/99-advanced/openfoam_cooling.py	/^spacing = (0.002, 0.002, 0.002)$/;"	v
spacing	examples/99-advanced/openfoam_tubes.py	/^spacing = (0.003, 0.003, 0.003)$/;"	v
spacing	pyvista/core/grid.py	/^    def spacing(self: Self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
spacing	pyvista/core/grid.py	/^    def spacing(self: Self, spacing: VectorLike[float]) -> None:$/;"	m	class:ImageData
spacing	pyvista/core/utilities/image_sources.py	/^    def spacing(self) -> Sequence[float]:$/;"	m	class:ImageGridSource
spacing	pyvista/core/utilities/image_sources.py	/^    def spacing(self, spacing: Sequence[float]) -> None:$/;"	m	class:ImageGridSource
specular	build/lib/pyvista/plotting/_property.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
specular	build/lib/pyvista/plotting/_property.py	/^    def specular(self, value: float):$/;"	m	class:Property
specular	build/lib/pyvista/plotting/themes.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
specular	build/lib/pyvista/plotting/themes.py	/^    def specular(self, specular: float):$/;"	m	class:_LightingConfig
specular	build/lib/pyvista/plotting/volume_property.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
specular	build/lib/pyvista/plotting/volume_property.py	/^    def specular(self, value: float):$/;"	m	class:VolumeProperty
specular	examples/00-load/create_platonic_solids.py	/^        specular=1.0,$/;"	v
specular	examples/02-plot/silhouette.py	/^    specular=1,$/;"	v
specular	examples/04-lights/shadows.py	/^    specular=0.5,$/;"	v
specular	examples/99-advanced/sphere_eversion.py	/^    specular=1.0,$/;"	v
specular	pyvista/plotting/_property.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
specular	pyvista/plotting/_property.py	/^    def specular(self, value: float):$/;"	m	class:Property
specular	pyvista/plotting/themes.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
specular	pyvista/plotting/themes.py	/^    def specular(self, specular: float):$/;"	m	class:_LightingConfig
specular	pyvista/plotting/volume_property.py	/^    def specular(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
specular	pyvista/plotting/volume_property.py	/^    def specular(self, value: float):$/;"	m	class:VolumeProperty
specular_color	build/lib/pyvista/plotting/_property.py	/^    def specular_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
specular_color	build/lib/pyvista/plotting/_property.py	/^    def specular_color(self, value):$/;"	m	class:Property
specular_color	build/lib/pyvista/plotting/lights.py	/^    def specular_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
specular_color	build/lib/pyvista/plotting/lights.py	/^    def specular_color(self, color: ColorLike):$/;"	m	class:Light
specular_color	pyvista/plotting/_property.py	/^    def specular_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:Property
specular_color	pyvista/plotting/_property.py	/^    def specular_color(self, value):$/;"	m	class:Property
specular_color	pyvista/plotting/lights.py	/^    def specular_color(self):  # numpydoc ignore=RT01$/;"	m	class:Light
specular_color	pyvista/plotting/lights.py	/^    def specular_color(self, color: ColorLike):$/;"	m	class:Light
specular_power	build/lib/pyvista/plotting/_property.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
specular_power	build/lib/pyvista/plotting/_property.py	/^    def specular_power(self, value: float):$/;"	m	class:Property
specular_power	build/lib/pyvista/plotting/themes.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
specular_power	build/lib/pyvista/plotting/themes.py	/^    def specular_power(self, specular_power: float):$/;"	m	class:_LightingConfig
specular_power	build/lib/pyvista/plotting/volume_property.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
specular_power	build/lib/pyvista/plotting/volume_property.py	/^    def specular_power(self, value: float):$/;"	m	class:VolumeProperty
specular_power	examples/00-load/create_platonic_solids.py	/^        specular_power=10,$/;"	v
specular_power	examples/04-lights/shadows.py	/^    specular_power=90,$/;"	v
specular_power	examples/99-advanced/sphere_eversion.py	/^    specular_power=50.0,$/;"	v
specular_power	pyvista/plotting/_property.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:Property
specular_power	pyvista/plotting/_property.py	/^    def specular_power(self, value: float):$/;"	m	class:Property
specular_power	pyvista/plotting/themes.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_LightingConfig
specular_power	pyvista/plotting/themes.py	/^    def specular_power(self, specular_power: float):$/;"	m	class:_LightingConfig
specular_power	pyvista/plotting/volume_property.py	/^    def specular_power(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:VolumeProperty
specular_power	pyvista/plotting/volume_property.py	/^    def specular_power(self, value: float):$/;"	m	class:VolumeProperty
sphere	examples/00-load/create_geometric_objects.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/01-filter/boolean_operations.py	/^sphere = pv.Sphere(radius=0.6)$/;"	v
sphere	examples/01-filter/boolean_operations.py	/^sphere = pv.Sphere(radius=0.6).flip_faces()$/;"	v
sphere	examples/01-filter/glyphs.py	/^sphere = pv.Sphere(radius=3.14)$/;"	v
sphere	examples/01-filter/interpolate_sample.py	/^sphere = pv.SolidSphere(center=(0.5, 0.5, 0), outer_radius=1.0)$/;"	v
sphere	examples/01-filter/poly_ray_trace.py	/^sphere = pv.Sphere(radius=0.85)$/;"	v
sphere	examples/01-filter/warp_by_vector.py	/^sphere = examples.load_sphere_vectors()$/;"	v
sphere	examples/02-plot/backface_props.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/element_picking.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/mesh_picking.py	/^sphere = pv.Sphere(center=(1, 0, 0))$/;"	v
sphere	examples/02-plot/movie_glyphs.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/multi_window.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/pbr.py	/^    sphere = pv.Sphere(radius=0.5, center=(0.0, 4 - i, j))$/;"	v
sphere	examples/02-plot/point_picking.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/02-plot/texture.py	/^sphere = pv.Sphere($/;"	v
sphere	examples/03-widgets/animation.py	/^sphere = pv.Sphere()$/;"	v
sphere	examples/99-advanced/add_example.py	/^sphere = pv.Sphere(theta_resolution=10, phi_resolution=10)$/;"	v
sphere	tests/conftest.py	/^def sphere():$/;"	f
sphere	tests/core/test_helpers.py	/^        sphere = pv.Sphere()$/;"	v	class:test_wrappers.Foo
sphere	tests/core/test_polydata.py	/^def sphere():$/;"	f
sphere0	examples/01-filter/collisions.py	/^sphere0 = pv.Sphere()$/;"	v
sphere1	examples/01-filter/collisions.py	/^sphere1 = pv.Sphere(radius=0.6, center=(-1, 0, 0))$/;"	v
sphere_a	examples/01-filter/boolean_operations.py	/^sphere_a = pv.Sphere()$/;"	v
sphere_actor	examples/02-plot/point_picking.py	/^sphere_actor = p.add_mesh(sphere, pickable=True)  # initially pickable$/;"	v
sphere_b	examples/01-filter/boolean_operations.py	/^sphere_b = pv.Sphere(center=(0.5, 0, 0))$/;"	v
sphere_dense	tests/core/test_polydata.py	/^def sphere_dense():$/;"	f
sphere_radius	build/lib/pyvista/plotting/axes_actor.py	/^    def sphere_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
sphere_radius	build/lib/pyvista/plotting/axes_actor.py	/^    def sphere_radius(self, rad: float):$/;"	m	class:AxesActor
sphere_radius	pyvista/plotting/axes_actor.py	/^    def sphere_radius(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
sphere_radius	pyvista/plotting/axes_actor.py	/^    def sphere_radius(self, rad: float):$/;"	m	class:AxesActor
sphere_resolution	build/lib/pyvista/plotting/axes_actor.py	/^    def sphere_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
sphere_resolution	build/lib/pyvista/plotting/axes_actor.py	/^    def sphere_resolution(self, res: int):$/;"	m	class:AxesActor
sphere_resolution	pyvista/plotting/axes_actor.py	/^    def sphere_resolution(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
sphere_resolution	pyvista/plotting/axes_actor.py	/^    def sphere_resolution(self, res: int):$/;"	m	class:AxesActor
sphere_shifted	tests/core/test_polydata.py	/^def sphere_shifted():$/;"	f
sphere_to_cylinder	examples/99-advanced/sphere_eversion.py	/^def sphere_to_cylinder(theta, phi):$/;"	f
spherefile	build/lib/pyvista/examples/examples.py	/^spherefile = str(Path(dir_path) \/ 'sphere.ply')$/;"	v
spherefile	pyvista/examples/examples.py	/^spherefile = str(Path(dir_path) \/ 'sphere.ply')$/;"	v
spheres	examples/02-plot/blurring.py	/^spheres = grid.glyph(geom=pv.Sphere(), scale=False, orient=False)$/;"	v
spheres	examples/02-plot/depth_peeling.py	/^spheres = pv.MultiBlock()$/;"	v
spheres	examples/02-plot/movie_glyphs.py	/^spheres = grid.glyph(scale='size', geom=sphere, orient=False)$/;"	v
spherical_to_cartesian	build/lib/pyvista/core/utilities/__init__.py	/^from .features import spherical_to_cartesian as spherical_to_cartesian$/;"	i
spherical_to_cartesian	build/lib/pyvista/core/utilities/features.py	/^def spherical_to_cartesian(r, phi, theta):$/;"	f
spherical_to_cartesian	pyvista/core/utilities/__init__.py	/^from .features import spherical_to_cartesian as spherical_to_cartesian$/;"	i
spherical_to_cartesian	pyvista/core/utilities/features.py	/^def spherical_to_cartesian(r, phi, theta):$/;"	f
sphinx	build/lib/pyvista/ext/coverage.py	/^import sphinx$/;"	i
sphinx	pyvista/ext/coverage.py	/^import sphinx$/;"	i
sphinx_book_theme	doc/source/conf.py	/^import sphinx_book_theme  # noqa: F401$/;"	i
sphinx_gallery_conf	doc/source/conf.py	/^sphinx_gallery_conf = {$/;"	v
spider_cage	examples/01-filter/flying_edges.py	/^def spider_cage(x, y, z):$/;"	f
spine	examples/99-advanced/anatomical_groups.py	/^spine = [$/;"	v
spiral	examples/01-filter/decimate.py	/^spiral = pv.PolyData(points, lines=np.append([n_points], np.arange(n_points)))$/;"	v
splatter	examples/99-advanced/plotting_algorithms.py	/^splatter = vtk.vtkGaussianSplatter()$/;"	v
spline	examples/00-load/create_spline.py	/^spline = pv.Spline(points, 1000)$/;"	v
spline	examples/00-load/create_spline.py	/^spline = pv.Spline(points, 400)$/;"	v
spline	examples/01-filter/slicing.py	/^spline = pv.Spline(points, 15)$/;"	v
spline	examples/02-plot/distance_along_spline.py	/^spline = pv.Spline(points, 1000)$/;"	v
spline	tests/conftest.py	/^def spline():$/;"	f
split_bodies	build/lib/pyvista/core/filters/data_set.py	/^    def split_bodies(  # type: ignore[misc]$/;"	m	class:DataSetFilters
split_bodies	pyvista/core/filters/data_set.py	/^    def split_bodies(  # type: ignore[misc]$/;"	m	class:DataSetFilters
split_cells	examples/00-load/create_unstructured_surface.py	/^split_cells = grid.explode(0.5)$/;"	v
split_cells	examples/02-plot/point_cell_scalars.py	/^split_cells = grid.separate_cells()$/;"	v
split_component_test_cases	tests/core/test_dataset_filters.py	/^split_component_test_cases = [$/;"	v
split_gears	examples/02-plot/bounds.py	/^split_gears = gears.split_bodies()$/;"	v
split_sharp_edges	build/lib/pyvista/plotting/themes.py	/^    def split_sharp_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
split_sharp_edges	build/lib/pyvista/plotting/themes.py	/^    def split_sharp_edges(self, value: bool):$/;"	m	class:Theme
split_sharp_edges	examples/99-advanced/openfoam_cooling.py	/^    split_sharp_edges=True,$/;"	v
split_sharp_edges	pyvista/plotting/themes.py	/^    def split_sharp_edges(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
split_sharp_edges	pyvista/plotting/themes.py	/^    def split_sharp_edges(self, value: bool):$/;"	m	class:Theme
split_values	build/lib/pyvista/core/filters/data_set.py	/^    def split_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
split_values	pyvista/core/filters/data_set.py	/^    def split_values(  # type: ignore[misc]$/;"	m	class:DataSetFilters
spring	examples/01-filter/extrude_rotate.py	/^spring = profile.extrude_rotate(resolution=360, translation=6.0, dradius=1.0, angle=2160.0)$/;"	v
sqrt	build/lib/pyvista/core/utilities/cell_quality.py	/^def sqrt(num: float) -> float:  # noqa: D103$/;"	f
sqrt	pyvista/core/utilities/cell_quality.py	/^def sqrt(num: float) -> float:  # noqa: D103$/;"	f
src	build/lib/pyvista/trame/jupyter.py	/^        src = ($/;"	v
src	build/lib/pyvista/trame/jupyter.py	/^        src = build_url($/;"	v
src	build/lib/pyvista/trame/jupyter.py	/^        src = f'{protocol}:\/\/{host}:{_server.port}\/index.html{params}'$/;"	v
src	build/lib/pyvista/trame/jupyter.py	/^        src = iframe_attrs['src']$/;"	v
src	build/lib/pyvista/trame/jupyter.py	/^    def src(self):  # numpydoc ignore=RT01$/;"	m	class:Widget
src	pyvista/trame/jupyter.py	/^        src = ($/;"	v
src	pyvista/trame/jupyter.py	/^        src = build_url($/;"	v
src	pyvista/trame/jupyter.py	/^        src = f'{protocol}:\/\/{host}:{_server.port}\/index.html{params}'$/;"	v
src	pyvista/trame/jupyter.py	/^        src = iframe_attrs['src']$/;"	v
src	pyvista/trame/jupyter.py	/^    def src(self):  # numpydoc ignore=RT01$/;"	m	class:Widget
srcset	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^        srcset = _get_srcset_st(sources_dir, hinnames)$/;"	v
srcset	pyvista/plotting/utilities/sphinx_gallery.py	/^        srcset = _get_srcset_st(sources_dir, hinnames)$/;"	v
srcsetpaths	build/lib/pyvista/plotting/utilities/sphinx_gallery.py	/^        srcsetpaths = [{0: fl} for fl in figure_list]$/;"	v
srcsetpaths	pyvista/plotting/utilities/sphinx_gallery.py	/^        srcsetpaths = [{0: fl} for fl in figure_list]$/;"	v
srgb_to_linear	build/lib/pyvista/plotting/colors.py	/^    def srgb_to_linear(self):$/;"	m	class:Color
srgb_to_linear	pyvista/plotting/colors.py	/^    def srgb_to_linear(self):$/;"	m	class:Color
st	tests/core/test_dataset_filters.py	/^from hypothesis import strategies as st$/;"	i
st	tests/core/test_geometric_objects.py	/^from hypothesis import strategies as st$/;"	i
st	tests/core/test_grid.py	/^from hypothesis import strategies as st$/;"	i
st	tests/core/test_reader.py	/^from hypothesis import strategies as st$/;"	i
st	tests/core/test_utilities.py	/^from hypothesis import strategies as st$/;"	i
st	tests/plotting/test_regression.py	/^from hypothesis import strategies as st$/;"	i
st	tests/plotting/test_renderer.py	/^from hypothesis import strategies as st$/;"	i
st	tests/plotting/test_theme.py	/^from hypothesis import strategies as st$/;"	i
stack	build/lib/pyvista/plotting/charts.py	/^    def stack(self, x, ys, colors=None, labels=None):$/;"	m	class:Chart2D
stack	pyvista/plotting/charts.py	/^    def stack(self, x, ys, colors=None, labels=None):$/;"	m	class:Chart2D
stack_plot	tests/plotting/test_charts.py	/^def stack_plot(chart_2d):$/;"	f
start	build/lib/pyvista/plotting/render_window_interactor.py	/^    def start(self):$/;"	m	class:RenderWindowInteractor
start	examples/01-filter/poly_ray_trace.py	/^start = [0, 0, 0]$/;"	v
start	examples/99-advanced/ray_trace_moeller.py	/^start = np.array([0.3, 0.25, 1])$/;"	v
start	pyvista/plotting/render_window_interactor.py	/^    def start(self):$/;"	m	class:RenderWindowInteractor
start	tests/plotting/test_picking.py	/^        start=False,$/;"	v	class:test_single_cell_picking.PickCallback
start_phi	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def start_phi(self: SphereSource) -> float:$/;"	m	class:SphereSource
start_phi	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def start_phi(self: SphereSource, start_phi: float) -> None:$/;"	m	class:SphereSource
start_phi	pyvista/core/utilities/geometric_sources.py	/^    def start_phi(self: SphereSource) -> float:$/;"	m	class:SphereSource
start_phi	pyvista/core/utilities/geometric_sources.py	/^    def start_phi(self: SphereSource, start_phi: float) -> None:$/;"	m	class:SphereSource
start_position	examples/01-filter/streamlines_2D.py	/^    start_position=(0.0, 0.4, 0.0),$/;"	v
start_position	examples/01-filter/streamlines_2D.py	/^    start_position=(4, 0.1, 0.0),$/;"	v
start_position	examples/99-advanced/openfoam_example.py	/^    start_position=(0.05, 0.05, 0),$/;"	v
start_theta	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def start_theta(self: SphereSource) -> float:$/;"	m	class:SphereSource
start_theta	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def start_theta(self: SphereSource, start_theta: float) -> None:$/;"	m	class:SphereSource
start_theta	examples/02-plot/texture.py	/^    start_theta=270.001,$/;"	v
start_theta	pyvista/core/utilities/geometric_sources.py	/^    def start_theta(self: SphereSource) -> float:$/;"	m	class:SphereSource
start_theta	pyvista/core/utilities/geometric_sources.py	/^    def start_theta(self: SphereSource, start_theta: float) -> None:$/;"	m	class:SphereSource
start_xvfb	build/lib/pyvista/plotting/utilities/__init__.py	/^from .xvfb import start_xvfb as start_xvfb$/;"	i
start_xvfb	build/lib/pyvista/plotting/utilities/xvfb.py	/^def start_xvfb(wait=3, window_size=None):$/;"	f
start_xvfb	pyvista/plotting/utilities/__init__.py	/^from .xvfb import start_xvfb as start_xvfb$/;"	i
start_xvfb	pyvista/plotting/utilities/xvfb.py	/^def start_xvfb(wait=3, window_size=None):$/;"	f
start_xvfb	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.xvfb import start_xvfb  # noqa: F401$/;"	i
starting_mesh	examples/03-widgets/multi_slider_widget.py	/^starting_mesh = pv.Sphere()$/;"	v
state	build/lib/pyvista/trame/jupyter.py	/^    state = server.state$/;"	v
state	pyvista/trame/jupyter.py	/^    state = server.state$/;"	v
stats	build/lib/pyvista/plotting/charts.py	/^    def stats(self):  # numpydoc ignore=RT01$/;"	m	class:BoxPlot
stats	pyvista/plotting/charts.py	/^    def stats(self):  # numpydoc ignore=RT01$/;"	m	class:BoxPlot
status	build/lib/pyvista/core/utilities/reader.py	/^    def status(self, name):$/;"	m	class:ExodusIIBlockSet
status	pyvista/core/utilities/reader.py	/^    def status(self, name):$/;"	m	class:ExodusIIBlockSet
std	build/lib/pyvista/core/utilities/image_sources.py	/^    def std(self) -> float:$/;"	m	class:ImageGaussianSource
std	build/lib/pyvista/core/utilities/image_sources.py	/^    def std(self, std: float) -> None:$/;"	m	class:ImageGaussianSource
std	pyvista/core/utilities/image_sources.py	/^    def std(self) -> float:$/;"	m	class:ImageGaussianSource
std	pyvista/core/utilities/image_sources.py	/^    def std(self, std: float) -> None:$/;"	m	class:ImageGaussianSource
stem	build/lib/pyvista/ext/plot_directive.py	/^    def stem(self):$/;"	m	class:ImageFile
stem	pyvista/ext/plot_directive.py	/^    def stem(self):$/;"	m	class:ImageFile
stereo_proj	examples/02-plot/moving_cmap.py	/^def stereo_proj(q):$/;"	f
still_ratio	build/lib/pyvista/plotting/themes.py	/^    def still_ratio(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
still_ratio	build/lib/pyvista/plotting/themes.py	/^    def still_ratio(self, still_ratio: float):$/;"	m	class:_TrameConfig
still_ratio	pyvista/plotting/themes.py	/^    def still_ratio(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_TrameConfig
still_ratio	pyvista/plotting/themes.py	/^    def still_ratio(self, still_ratio: float):$/;"	m	class:_TrameConfig
stop	examples/01-filter/poly_ray_trace.py	/^stop = [0.25, 1, 0.5]$/;"	v
store_click_position	build/lib/pyvista/plotting/plotter.py	/^    def store_click_position(self, *args):$/;"	m	class:BasePlotter
store_click_position	pyvista/plotting/plotter.py	/^    def store_click_position(self, *args):$/;"	m	class:BasePlotter
store_mouse_position	build/lib/pyvista/plotting/plotter.py	/^    def store_mouse_position(self, *args):$/;"	m	class:BasePlotter
store_mouse_position	pyvista/plotting/plotter.py	/^    def store_mouse_position(self, *args):$/;"	m	class:BasePlotter
stpyvista	doc/source/make_external_gallery.py	/^    stpyvista=Example($/;"	v
str_subclass	tests/core/test_validation.py	/^    class str_subclass(str):$/;"	c	function:test_check_string
streamlines	build/lib/pyvista/core/filters/data_set.py	/^    def streamlines(  # type: ignore[misc]$/;"	m	class:DataSetFilters
streamlines	examples/01-filter/streamlines.py	/^streamlines = mesh.streamlines(n_points=40, source_center=(0.08, 3, 0.71), max_length=200)$/;"	v
streamlines	examples/01-filter/streamlines.py	/^streamlines = mesh.streamlines_from_source(seed_mesh, integration_direction='forward')$/;"	v
streamlines	examples/99-advanced/openfoam_example.py	/^streamlines = slice_internal_mesh.streamlines_evenly_spaced_2D($/;"	v
streamlines	pyvista/core/filters/data_set.py	/^    def streamlines(  # type: ignore[misc]$/;"	m	class:DataSetFilters
streamlines_evenly_spaced_2D	build/lib/pyvista/core/filters/data_set.py	/^    def streamlines_evenly_spaced_2D(  # type: ignore[misc]$/;"	m	class:DataSetFilters
streamlines_evenly_spaced_2D	pyvista/core/filters/data_set.py	/^    def streamlines_evenly_spaced_2D(  # type: ignore[misc]$/;"	m	class:DataSetFilters
streamlines_from_source	build/lib/pyvista/core/filters/data_set.py	/^    def streamlines_from_source(  # type: ignore[misc]$/;"	m	class:DataSetFilters
streamlines_from_source	pyvista/core/filters/data_set.py	/^    def streamlines_from_source(  # type: ignore[misc]$/;"	m	class:DataSetFilters
string	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def string(self: Text3DSource) -> str:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
string	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def string(self: Text3DSource, string: str | None) -> None:$/;"	m	class:Text3DSource
string	pyvista/core/utilities/geometric_sources.py	/^    def string(self: Text3DSource) -> str:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
string	pyvista/core/utilities/geometric_sources.py	/^    def string(self: Text3DSource, string: str | None) -> None:$/;"	m	class:Text3DSource
strip	build/lib/pyvista/core/filters/poly_data.py	/^    def strip($/;"	m	class:PolyDataFilters
strip	pyvista/core/filters/poly_data.py	/^    def strip($/;"	m	class:PolyDataFilters
strip_hex_prefix	build/lib/pyvista/plotting/colors.py	/^    def strip_hex_prefix(h: str) -> str:$/;"	m	class:Color
strip_hex_prefix	pyvista/plotting/colors.py	/^    def strip_hex_prefix(h: str) -> str:$/;"	m	class:Color
strips	build/lib/pyvista/core/pointset.py	/^    def strips(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
strips	build/lib/pyvista/core/pointset.py	/^    def strips(self, strips: CellArrayLike) -> None:$/;"	m	class:PolyData
strips	examples/00-load/create_polydata_strips.py	/^strips = np.array([8, 0, 1, 2, 3, 4, 5, 6, 7])$/;"	v
strips	pyvista/core/pointset.py	/^    def strips(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
strips	pyvista/core/pointset.py	/^    def strips(self, strips: CellArrayLike) -> None:$/;"	m	class:PolyData
strl	examples/99-advanced/magnetic_fields.py	/^strl = grid.streamlines_from_source($/;"	v
struct	examples/00-load/create_structured_surface.py	/^struct = examples.load_structured()$/;"	v
struct_grid	tests/conftest.py	/^def struct_grid():$/;"	f
structured_grids_split_coincident	tests/core/test_dataset_filters.py	/^def structured_grids_split_coincident():$/;"	f
structured_grids_split_disconnected	tests/core/test_dataset_filters.py	/^def structured_grids_split_disconnected():$/;"	f
structured_points	tests/core/test_grid.py	/^def structured_points():$/;"	f
style	build/lib/pyvista/demos/logo.py	/^        style='points',$/;"	v
style	build/lib/pyvista/demos/logo.py	/^        style='wireframe',$/;"	v
style	build/lib/pyvista/plotting/_property.py	/^    def style(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Property
style	build/lib/pyvista/plotting/_property.py	/^    def style(self, new_style: str):$/;"	m	class:Property
style	build/lib/pyvista/plotting/charts.py	/^    def style(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
style	build/lib/pyvista/plotting/charts.py	/^    def style(self, val):$/;"	m	class:Pen
style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def style(self):$/;"	m	class:RenderWindowInteractor
style	examples/00-load/create_truss.py	/^    style='wireframe',$/;"	v
style	examples/02-plot/point_clouds.py	/^    style='points',$/;"	v
style	examples/02-plot/point_clouds.py	/^    style='points_gaussian',$/;"	v
style	examples/02-plot/points_gaussian_scale.py	/^    style='points_gaussian',$/;"	v
style	examples/03-widgets/multi_slider_widget.py	/^    style='modern',$/;"	v
style	examples/03-widgets/multi_slider_widget.py	/^    style='modern',$/;"	v	class:MyCustomRoutine
style	examples/99-advanced/atomic_orbitals.py	/^    style='points_gaussian',$/;"	v
style	examples/99-advanced/ray_trace_moeller.py	/^        style='wireframe',$/;"	v
style	examples_trame/basic/file_viewer.py	/^            style='max-width: 300px;',$/;"	v
style	examples_trame/basic/file_viewer.py	/^            style='position: relative;',$/;"	v
style	pyvista/demos/logo.py	/^        style='points',$/;"	v
style	pyvista/demos/logo.py	/^        style='wireframe',$/;"	v
style	pyvista/plotting/_property.py	/^    def style(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Property
style	pyvista/plotting/_property.py	/^    def style(self, new_style: str):$/;"	m	class:Property
style	pyvista/plotting/charts.py	/^    def style(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
style	pyvista/plotting/charts.py	/^    def style(self, val):$/;"	m	class:Pen
style	pyvista/plotting/render_window_interactor.py	/^    def style(self):$/;"	m	class:RenderWindowInteractor
subdivide	build/lib/pyvista/core/filters/poly_data.py	/^    def subdivide($/;"	m	class:PolyDataFilters
subdivide	pyvista/core/filters/poly_data.py	/^    def subdivide($/;"	m	class:PolyDataFilters
subdivide_adaptive	build/lib/pyvista/core/filters/poly_data.py	/^    def subdivide_adaptive($/;"	m	class:PolyDataFilters
subdivide_adaptive	pyvista/core/filters/poly_data.py	/^    def subdivide_adaptive($/;"	m	class:PolyDataFilters
subdivide_tetra	build/lib/pyvista/core/filters/unstructured_grid.py	/^    def subdivide_tetra(self):$/;"	m	class:UnstructuredGridFilters
subdivide_tetra	pyvista/core/filters/unstructured_grid.py	/^    def subdivide_tetra(self):$/;"	m	class:UnstructuredGridFilters
subplot	build/lib/pyvista/plotting/plotter.py	/^    def subplot(self, index_row, index_column=None) -> None:$/;"	m	class:BasePlotter
subplot	pyvista/plotting/plotter.py	/^    def subplot(self, index_row, index_column=None) -> None:$/;"	m	class:BasePlotter
subprocess	build/lib/pyvista/plotting/tools.py	/^import subprocess$/;"	i
subprocess	build/lib/pyvista/report.py	/^import subprocess$/;"	i
subprocess	examples_trame/tests/test_trame.py	/^import subprocess$/;"	i
subprocess	pyvista/plotting/tools.py	/^import subprocess$/;"	i
subprocess	pyvista/report.py	/^import subprocess$/;"	i
subprocess	tests/test_init.py	/^import subprocess$/;"	i
subprocess	tests/typing/mypy_plugin/test_plugin.py	/^import subprocess$/;"	i
subset	examples/00-load/terrain_mesh.py	/^subset = dem.extract_subset((500, 900, 400, 800, 0, 0), (5, 5, 1))$/;"	v
subset	examples/01-filter/image_fft_perlin_noise.py	/^subset = sampled_fft.extract_subset((0, xdim \/\/ 2, 0, ydim \/\/ 2, 0, 0))$/;"	v
subset	examples/01-filter/interpolate_sample.py	/^subset = pv.ImageData(dimensions=(8, 8, 1), spacing=[0.1, 0.1, 0], origin=(0.15, 0.15, 0))$/;"	v
success	doc/source/make_tables.py	/^        success = auto()$/;"	v	class:_BaseDatasetBadge.SemanticColorEnum
sunkit	doc/source/make_external_gallery.py	/^    sunkit=Example($/;"	v
superellipsoid	examples/00-load/create_parametric_geometric_objects.py	/^superellipsoid = pv.ParametricSuperEllipsoid(n1=0.1, n2=2)$/;"	v
supertoroid	examples/00-load/create_parametric_geometric_objects.py	/^supertoroid = pv.ParametricSuperToroid(n1=0.5)$/;"	v
supports_open_gl	build/lib/pyvista/plotting/tools.py	/^def supports_open_gl():$/;"	f
supports_open_gl	pyvista/plotting/tools.py	/^def supports_open_gl():$/;"	f
suppress	build/lib/pyvista/plotting/plotter.py	/^from contextlib import suppress$/;"	i
suppress	pyvista/plotting/plotter.py	/^from contextlib import suppress$/;"	i
suppress_health_check	tests/core/test_dataobject_filters.py	/^    suppress_health_check=[HealthCheck.function_scoped_fixture],$/;"	v
suppress_rendering	build/lib/pyvista/plotting/plotter.py	/^    def suppress_rendering(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
suppress_rendering	build/lib/pyvista/plotting/plotter.py	/^    def suppress_rendering(self, value) -> None:$/;"	m	class:BasePlotter
suppress_rendering	pyvista/plotting/plotter.py	/^    def suppress_rendering(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
suppress_rendering	pyvista/plotting/plotter.py	/^    def suppress_rendering(self, value) -> None:$/;"	m	class:BasePlotter
suppress_warnings	doc/source/conf.py	/^suppress_warnings = ['config.cache']$/;"	v
surf	examples/00-load/create_poly.py	/^surf = pv.PolyData(vertices, faces)$/;"	v
surf	examples/00-load/create_tri_surface.py	/^surf = cloud.delaunay_2d()$/;"	v
surf	examples/00-load/create_tri_surface.py	/^surf = cloud.delaunay_2d(alpha=1.0)$/;"	v
surf	examples/00-load/create_tri_surface.py	/^surf = cloud.delaunay_2d(alpha=1.0, edge_source=polygon)$/;"	v
surf	examples/01-filter/extract_surface.py	/^surf = grid.extract_surface()$/;"	v
surf	examples/01-filter/surface_reconstruction.py	/^surf = points.reconstruct_surface()$/;"	v
surf	examples/01-filter/surface_smoothing.py	/^surf = vol.extract_geometry()$/;"	v
surf	examples/02-plot/texture.py	/^surf = pv.Cylinder()$/;"	v
surf	examples/03-widgets/sphere_widget.py	/^surf = pv.PolyData()$/;"	v
surf	examples/03-widgets/sphere_widget.py	/^surf = pv.StructuredGrid(xx, yy, zz)$/;"	v
surf_points	examples/02-plot/vertices.py	/^surf_points = mesh.extract_surface().points$/;"	v
surf_subdivided	examples/01-filter/extract_surface.py	/^surf_subdivided = grid.extract_surface(nonlinear_subdivision=5)$/;"	v
surface	examples/01-filter/clipping_with_surface.py	/^surface = examples.load_random_hills()$/;"	v
surface	examples/01-filter/clipping_with_surface.py	/^surface = pv.Cone(direction=(0, 0, -1), height=3.0, radius=1, resolution=50, capping=False)$/;"	v
surface	examples/01-filter/interpolate.py	/^surface = examples.download_saddle_surface()$/;"	v
surface	examples/01-filter/voxelize.py	/^surface = examples.download_foot_bones()$/;"	v
surface	examples/02-plot/isovalue.py	/^surface = surfaces[0].copy()$/;"	v
surface	examples/02-plot/isovalue.py	/^surface = vol.contour(values[:1])$/;"	v
surface	tests/core/test_helpers.py	/^        surface = image.extract_surface()$/;"	v	class:test_wrappers.Foo
surface_from_para	build/lib/pyvista/core/utilities/__init__.py	/^from .parametric_objects import surface_from_para as surface_from_para$/;"	i
surface_from_para	build/lib/pyvista/core/utilities/parametric_objects.py	/^def surface_from_para($/;"	f
surface_from_para	pyvista/core/utilities/__init__.py	/^from .parametric_objects import surface_from_para as surface_from_para$/;"	i
surface_from_para	pyvista/core/utilities/parametric_objects.py	/^def surface_from_para($/;"	f
surface_indices	build/lib/pyvista/core/filters/data_set.py	/^    def surface_indices(  # type: ignore[misc]$/;"	m	class:DataSetFilters
surface_indices	pyvista/core/filters/data_set.py	/^    def surface_indices(  # type: ignore[misc]$/;"	m	class:DataSetFilters
surface_texture	examples/99-advanced/planets.py	/^surface_texture = examples.planets.download_venus_surface(atmosphere=False, texture=True)$/;"	v
surfaces	examples/02-plot/isovalue.py	/^surfaces = [vol.contour([v]) for v in values]$/;"	v
surfaces	examples/02-plot/spherical.py	/^surfaces = grid_scalar_3d.cell_data_to_point_data().contour(isosurfaces=[1, 5, 10, 15])$/;"	v
surrounding	examples/02-plot/topo_map.py	/^surrounding = elevation.clip_box(bounds, invert=True)$/;"	v
switch_off	build/lib/pyvista/plotting/lights.py	/^    def switch_off(self):$/;"	m	class:Light
switch_off	pyvista/plotting/lights.py	/^    def switch_off(self):$/;"	m	class:Light
switch_on	build/lib/pyvista/plotting/lights.py	/^    def switch_on(self):$/;"	m	class:Light
switch_on	pyvista/plotting/lights.py	/^    def switch_on(self):$/;"	m	class:Light
symmetric	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def symmetric(self: AxesGeometrySource) -> bool:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
symmetric	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def symmetric(self: AxesGeometrySource, val: bool) -> None:$/;"	m	class:AxesGeometrySource
symmetric	pyvista/core/utilities/geometric_sources.py	/^    def symmetric(self: AxesGeometrySource) -> bool:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
symmetric	pyvista/core/utilities/geometric_sources.py	/^    def symmetric(self: AxesGeometrySource, val: bool) -> None:$/;"	m	class:AxesGeometrySource
symmetric_bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def symmetric_bounds(self: AxesGeometrySource) -> bool:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
symmetric_bounds	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def symmetric_bounds(self: AxesGeometrySource, val: bool) -> None:$/;"	m	class:AxesGeometrySource
symmetric_bounds	pyvista/core/utilities/geometric_sources.py	/^    def symmetric_bounds(self: AxesGeometrySource) -> bool:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
symmetric_bounds	pyvista/core/utilities/geometric_sources.py	/^    def symmetric_bounds(self: AxesGeometrySource, val: bool) -> None:$/;"	m	class:AxesGeometrySource
sys	build/lib/pyvista/__init__.py	/^import sys$/;"	i
sys	build/lib/pyvista/core/utilities/docs.py	/^import sys$/;"	i
sys	build/lib/pyvista/core/utilities/features.py	/^import sys$/;"	i
sys	build/lib/pyvista/core/utilities/misc.py	/^import sys$/;"	i
sys	build/lib/pyvista/core/utilities/observers.py	/^import sys$/;"	i
sys	build/lib/pyvista/examples/downloads.py	/^import sys$/;"	i
sys	build/lib/pyvista/plotting/axes_assembly.py	/^    import sys$/;"	i
sys	build/lib/pyvista/plotting/composite_mapper.py	/^import sys$/;"	i
sys	build/lib/pyvista/plotting/mapper.py	/^import sys$/;"	i
sys	build/lib/pyvista/plotting/plotter.py	/^import sys$/;"	i
sys	build/lib/pyvista/plotting/tools.py	/^import sys$/;"	i
sys	build/lib/pyvista/report.py	/^import sys$/;"	i
sys	doc/source/conf.py	/^import sys$/;"	i
sys	doc/source/make_tables.py	/^import sys$/;"	i
sys	pyvista/__init__.py	/^import sys$/;"	i
sys	pyvista/core/utilities/docs.py	/^import sys$/;"	i
sys	pyvista/core/utilities/features.py	/^import sys$/;"	i
sys	pyvista/core/utilities/misc.py	/^import sys$/;"	i
sys	pyvista/core/utilities/observers.py	/^import sys$/;"	i
sys	pyvista/examples/downloads.py	/^import sys$/;"	i
sys	pyvista/plotting/axes_assembly.py	/^    import sys$/;"	i
sys	pyvista/plotting/composite_mapper.py	/^import sys$/;"	i
sys	pyvista/plotting/mapper.py	/^import sys$/;"	i
sys	pyvista/plotting/plotter.py	/^import sys$/;"	i
sys	pyvista/plotting/tools.py	/^import sys$/;"	i
sys	pyvista/report.py	/^import sys$/;"	i
sys	tests/check_doctest_names.py	/^import sys$/;"	i
sys	tests/core/test_datasetattributes.py	/^import sys$/;"	i
sys	tests/core/test_validation.py	/^import sys$/;"	i
sys	tests/plotting/test_tinypages.py	/^import sys$/;"	i
sys	tests/plotting/tinypages/conf.py	/^import sys$/;"	i
sys	tests/test_init.py	/^import sys$/;"	i
system_supports_plotting	build/lib/pyvista/plotting/__init__.py	/^from .tools import system_supports_plotting as system_supports_plotting$/;"	i
system_supports_plotting	build/lib/pyvista/plotting/tools.py	/^def system_supports_plotting():$/;"	f
system_supports_plotting	pyvista/plotting/__init__.py	/^from .tools import system_supports_plotting as system_supports_plotting$/;"	i
system_supports_plotting	pyvista/plotting/tools.py	/^def system_supports_plotting():$/;"	f
system_supports_plotting	tests/plotting/conftest.py	/^from pyvista.plotting import system_supports_plotting$/;"	i
system_supports_plotting	tests/plotting/test_demos.py	/^from pyvista.plotting import system_supports_plotting$/;"	i
system_supports_plotting	tests/plotting/test_tinypages.py	/^from pyvista.plotting import system_supports_plotting$/;"	i
t	examples/00-load/create_kochanek_spline.py	/^t = [-1.0, -0.5, 0.0, 0.5, 1.0]$/;"	v
t	examples/02-plot/chart_overlays.py	/^t = np.linspace(0, 5, 50)$/;"	v
t	examples/99-advanced/sphere_eversion.py	/^t = -1 \/ Q$/;"	v
t_elapsed	examples/00-load/create_pointset.py	/^    t_elapsed = time.time() - tstart$/;"	v
t_elapsed	examples/00-load/create_pointset.py	/^t_elapsed = time.time() - tstart$/;"	v
tags_badge_colors	doc/source/conf.py	/^tags_badge_colors = {$/;"	v
tags_create_badges	doc/source/conf.py	/^tags_create_badges = True$/;"	v
tags_create_tags	doc/source/conf.py	/^tags_create_tags = True$/;"	v
tags_index_head	doc/source/conf.py	/^tags_index_head = 'Gallery examples categorised by tag:'  # tags landing page intro text$/;"	v
tags_intro_text	doc/source/conf.py	/^tags_intro_text = 'Tags:'  # prefix text for a tags list$/;"	v
tags_output_dir	doc/source/conf.py	/^tags_output_dir = 'tags'$/;"	v
tags_overview_title	doc/source/conf.py	/^tags_overview_title = 'Tags'  # title for the tags landing page$/;"	v
tags_page_header	doc/source/conf.py	/^tags_page_header = 'Gallery examples contain this tag:'  # tag sub-page, header text$/;"	v
tags_page_title	doc/source/conf.py	/^tags_page_title = 'Tag'  # tag sub-page, title appended with the tag name$/;"	v
target_file	build/lib/pyvista/examples/downloads.py	/^    target_file='case.foam',$/;"	v
target_file	pyvista/examples/downloads.py	/^    target_file='case.foam',$/;"	v
target_reduction	examples/01-filter/decimate.py	/^target_reduction = 0.7$/;"	v
teapot	examples/00-load/create_platonic_solids.py	/^teapot = examples.download_teapot()$/;"	v
temp_file	examples/00-load/reader.py	/^temp_file = NamedTemporaryFile('w', suffix='.vtp')$/;"	v
tempfile	examples_trame/basic/file_viewer.py	/^import tempfile$/;"	i
templates_path	doc/source/conf.py	/^templates_path = ['_templates']$/;"	v
templates_path	tests/plotting/tinypages/conf.py	/^templates_path = ['_templates']$/;"	v
terminal_speed	examples/01-filter/streamlines.py	/^    terminal_speed=0.0,$/;"	v
terminal_speed	examples/01-filter/streamlines.py	/^    terminal_speed=0.1,$/;"	v
terminate_app	build/lib/pyvista/plotting/render_window_interactor.py	/^    def terminate_app(self):$/;"	m	class:RenderWindowInteractor
terminate_app	pyvista/plotting/render_window_interactor.py	/^    def terminate_app(self):$/;"	m	class:RenderWindowInteractor
terrain	examples/00-load/terrain_mesh.py	/^terrain = subset.warp_by_scalar()$/;"	v
tessellate	build/lib/pyvista/core/filters/data_set.py	/^    def tessellate(  # type: ignore[misc]$/;"	m	class:DataSetFilters
tessellate	build/lib/pyvista/core/pointset.py	/^    def tessellate(self, *args, **kwargs):$/;"	m	class:PointSet
tessellate	pyvista/core/filters/data_set.py	/^    def tessellate(  # type: ignore[misc]$/;"	m	class:DataSetFilters
tessellate	pyvista/core/pointset.py	/^    def tessellate(self, *args, **kwargs):$/;"	m	class:PointSet
test_ExplicitStructuredGrid_cast_to_unstructured_grid	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_cast_to_unstructured_grid():$/;"	f
test_ExplicitStructuredGrid_cell_coords	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_cell_coords():$/;"	f
test_ExplicitStructuredGrid_cell_id	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_cell_id():$/;"	f
test_ExplicitStructuredGrid_clean	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_clean():$/;"	f
test_ExplicitStructuredGrid_compute_connections	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_compute_connections():$/;"	f
test_ExplicitStructuredGrid_compute_connectivity	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_compute_connectivity():$/;"	f
test_ExplicitStructuredGrid_dimensions	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_dimensions():$/;"	f
test_ExplicitStructuredGrid_hide_cells	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_hide_cells():$/;"	f
test_ExplicitStructuredGrid_init	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_init():$/;"	f
test_ExplicitStructuredGrid_neighbors	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_neighbors():$/;"	f
test_ExplicitStructuredGrid_raise_init	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_raise_init():$/;"	f
test_ExplicitStructuredGrid_save	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_save():$/;"	f
test_ExplicitStructuredGrid_save_raises	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_save_raises():$/;"	f
test_ExplicitStructuredGrid_show_cells	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_show_cells():$/;"	f
test_ExplicitStructuredGrid_visible_bounds	tests/core/test_grid.py	/^def test_ExplicitStructuredGrid_visible_bounds():$/;"	f
test_ParametricBohemianDome	tests/core/test_parametric_geometry.py	/^def test_ParametricBohemianDome():$/;"	f
test_ParametricBour	tests/core/test_parametric_geometry.py	/^def test_ParametricBour():$/;"	f
test_ParametricBoy	tests/core/test_parametric_geometry.py	/^def test_ParametricBoy():$/;"	f
test_ParametricCatalanMinimal	tests/core/test_parametric_geometry.py	/^def test_ParametricCatalanMinimal():$/;"	f
test_ParametricConicSpiral	tests/core/test_parametric_geometry.py	/^def test_ParametricConicSpiral():$/;"	f
test_ParametricCrossCap	tests/core/test_parametric_geometry.py	/^def test_ParametricCrossCap():$/;"	f
test_ParametricDini	tests/core/test_parametric_geometry.py	/^def test_ParametricDini():$/;"	f
test_ParametricEllipsoid	tests/core/test_parametric_geometry.py	/^def test_ParametricEllipsoid():$/;"	f
test_ParametricEnneper	tests/core/test_parametric_geometry.py	/^def test_ParametricEnneper():$/;"	f
test_ParametricFigure8Klein	tests/core/test_parametric_geometry.py	/^def test_ParametricFigure8Klein():$/;"	f
test_ParametricHenneberg	tests/core/test_parametric_geometry.py	/^def test_ParametricHenneberg():$/;"	f
test_ParametricKlein	tests/core/test_parametric_geometry.py	/^def test_ParametricKlein():$/;"	f
test_ParametricKuen	tests/core/test_parametric_geometry.py	/^def test_ParametricKuen():$/;"	f
test_ParametricMobius	tests/core/test_parametric_geometry.py	/^def test_ParametricMobius():$/;"	f
test_ParametricPluckerConoid	tests/core/test_parametric_geometry.py	/^def test_ParametricPluckerConoid():$/;"	f
test_ParametricPseudosphere	tests/core/test_parametric_geometry.py	/^def test_ParametricPseudosphere():$/;"	f
test_ParametricRandomHills	tests/core/test_parametric_geometry.py	/^def test_ParametricRandomHills():$/;"	f
test_ParametricRoman	tests/core/test_parametric_geometry.py	/^def test_ParametricRoman():$/;"	f
test_ParametricSuperEllipsoid	tests/core/test_parametric_geometry.py	/^def test_ParametricSuperEllipsoid():$/;"	f
test_ParametricSuperToroid	tests/core/test_parametric_geometry.py	/^def test_ParametricSuperToroid():$/;"	f
test_ParametricTorus	tests/core/test_parametric_geometry.py	/^def test_ParametricTorus():$/;"	f
test_Quadrilateral	tests/examples/test_cell_examples.py	/^def test_Quadrilateral():$/;"	f
test_StructuredGrid_cast_to_explicit_structured_grid	tests/core/test_grid.py	/^def test_StructuredGrid_cast_to_explicit_structured_grid():$/;"	f
test_StructuredGrid_cast_to_explicit_structured_grid_raises	tests/core/test_grid.py	/^def test_StructuredGrid_cast_to_explicit_structured_grid_raises():$/;"	f
test_UnstructuredGrid_cast_to_explicit_structured_grid	tests/core/test_grid.py	/^def test_UnstructuredGrid_cast_to_explicit_structured_grid():$/;"	f
test_UnstructuredGrid_cast_to_explicit_structured_grid_raises	tests/core/test_grid.py	/^def test_UnstructuredGrid_cast_to_explicit_structured_grid_raises():$/;"	f
test_above_below_scalar_range_annotations	tests/plotting/test_plotting.py	/^def test_above_below_scalar_range_annotations():$/;"	f
test_above_range_color	tests/plotting/test_lookup_table.py	/^def test_above_range_color(lut):$/;"	f
test_above_range_color	tests/plotting/test_theme.py	/^def test_above_range_color(default_theme):$/;"	f
test_activate_scalars	tests/core/test_composite.py	/^def test_activate_scalars(multiblock_poly):$/;"	f
test_active_array_info_deprecated	tests/core/test_dataset.py	/^def test_active_array_info_deprecated(mesh):$/;"	f
test_active_normals	tests/core/test_dataset.py	/^def test_active_normals(sphere):$/;"	f
test_active_normals_name	tests/core/test_datasetattributes.py	/^def test_active_normals_name():$/;"	f
test_active_scalars_cell	tests/core/test_dataset.py	/^def test_active_scalars_cell(grid):$/;"	f
test_active_scalars_name	tests/core/test_datasetattributes.py	/^def test_active_scalars_name(sphere):$/;"	f
test_active_scalars_remain	tests/plotting/test_plotter.py	/^def test_active_scalars_remain(sphere, hexbeam):$/;"	f
test_active_scalars_setter	tests/core/test_datasetattributes.py	/^def test_active_scalars_setter(hexbeam_point_attributes):$/;"	f
test_active_scalars_setter_no_override	tests/core/test_datasetattributes.py	/^def test_active_scalars_setter_no_override(hexbeam):$/;"	f
test_active_t_coords_deprecated	tests/core/test_dataset.py	/^def test_active_t_coords_deprecated(mesh):$/;"	f
test_active_t_coords_deprecated	tests/core/test_datasetattributes.py	/^def test_active_t_coords_deprecated():$/;"	f
test_active_t_coords_name_deprecated	tests/core/test_datasetattributes.py	/^def test_active_t_coords_name_deprecated():$/;"	f
test_active_texture_coordinates_name	tests/core/test_datasetattributes.py	/^def test_active_texture_coordinates_name(plane):$/;"	f
test_active_vectors_eq	tests/core/test_datasetattributes.py	/^def test_active_vectors_eq():$/;"	f
test_active_vectors_name_setter	tests/core/test_datasetattributes.py	/^def test_active_vectors_name_setter():$/;"	f
test_actor_backface_prop	tests/plotting/test_actor.py	/^def test_actor_backface_prop(actor):$/;"	f
test_actor_bounds	tests/plotting/test_actor.py	/^def test_actor_bounds(klass, actor, dummy_actor):$/;"	f
test_actor_center	tests/plotting/test_actor.py	/^def test_actor_center(klass, actor, dummy_actor):$/;"	f
test_actor_copy_deep	tests/plotting/test_actor.py	/^def test_actor_copy_deep(prop3d, prop_attr, actor, volume, include_mapper):$/;"	f
test_actor_copy_shallow	tests/plotting/test_actor.py	/^def test_actor_copy_shallow(prop3d, actor, volume):$/;"	f
test_actor_from_argument	tests/plotting/test_actor.py	/^def test_actor_from_argument():$/;"	f
test_actor_from_plotter	tests/plotting/test_actor.py	/^def test_actor_from_plotter():$/;"	f
test_actor_init_empty	tests/plotting/test_actor.py	/^def test_actor_init_empty():$/;"	f
test_actor_length	tests/plotting/test_actor.py	/^def test_actor_length(klass, actor, dummy_actor):$/;"	f
test_actor_mblock_copy_shallow	tests/plotting/test_actor.py	/^def test_actor_mblock_copy_shallow(actor_from_multi_block):$/;"	f
test_actor_name	tests/plotting/test_actor.py	/^def test_actor_name(actor):$/;"	f
test_actor_orientation	tests/plotting/test_actor.py	/^def test_actor_orientation(klass, actor, dummy_actor):$/;"	f
test_actor_origin	tests/plotting/test_actor.py	/^def test_actor_origin(klass, actor, dummy_actor):$/;"	f
test_actor_pickable	tests/plotting/test_actor.py	/^def test_actor_pickable(actor):$/;"	f
test_actor_picking	tests/plotting/test_picking.py	/^def test_actor_picking(sphere):$/;"	f
test_actor_position	tests/plotting/test_actor.py	/^def test_actor_position(klass, actor, dummy_actor):$/;"	f
test_actor_rotate_x	tests/plotting/test_actor.py	/^def test_actor_rotate_x(actor):$/;"	f
test_actor_rotate_y	tests/plotting/test_actor.py	/^def test_actor_rotate_y(actor):$/;"	f
test_actor_rotate_z	tests/plotting/test_actor.py	/^def test_actor_rotate_z(actor):$/;"	f
test_actor_rotation_order	tests/plotting/test_actor.py	/^def test_actor_rotation_order(actor):$/;"	f
test_actor_scale	tests/plotting/test_actor.py	/^def test_actor_scale(klass, actor, dummy_actor):$/;"	f
test_actor_texture	tests/plotting/test_actor.py	/^def test_actor_texture(actor):$/;"	f
test_actor_user_matrix	tests/plotting/test_actor.py	/^def test_actor_user_matrix(klass, actor, dummy_actor):$/;"	f
test_actor_visible	tests/plotting/test_actor.py	/^def test_actor_visible(actor):$/;"	f
test_actors	tests/plotting/test_axes.py	/^def test_actors(axes):$/;"	f
test_actors	tests/plotting/test_lights.py	/^def test_actors():$/;"	f
test_actors_prop_collection	tests/plotting/test_renderer.py	/^def test_actors_prop_collection():$/;"	f
test_actors_prop_collection_init	tests/plotting/test_renderer.py	/^def test_actors_prop_collection_init():$/;"	f
test_actual_memory_size	tests/core/test_dataset.py	/^def test_actual_memory_size(grid):$/;"	f
test_add	tests/core/test_polydata.py	/^def test_add(sphere, sphere_shifted):$/;"	f
test_add_1d	tests/core/test_pyvista_ndarray.py	/^def test_add_1d():$/;"	f
test_add_actor_raises	tests/plotting/test_renderer.py	/^def test_add_actor_raises():$/;"	f
test_add_array	tests/plotting/test_collection.py	/^def test_add_array(sphere):$/;"	f
test_add_arrows	tests/plotting/test_plotting.py	/^def test_add_arrows():$/;"	f
test_add_axes_parameters	tests/plotting/test_plotting.py	/^def test_add_axes_parameters():$/;"	f
test_add_axes_twice	tests/plotting/test_plotting.py	/^def test_add_axes_twice():$/;"	f
test_add_background_image_global	tests/plotting/test_plotting.py	/^def test_add_background_image_global(sphere):$/;"	f
test_add_background_image_not_global	tests/plotting/test_plotting.py	/^def test_add_background_image_not_global(sphere):$/;"	f
test_add_background_image_raises	tests/plotting/test_plotter.py	/^def test_add_background_image_raises():$/;"	f
test_add_background_image_subplots	tests/plotting/test_plotting.py	/^def test_add_background_image_subplots(airplane):$/;"	f
test_add_box_axes	tests/plotting/test_plotting.py	/^def test_add_box_axes():$/;"	f
test_add_camera_orientation_widget	tests/plotting/test_widgets.py	/^def test_add_camera_orientation_widget(uniform):$/;"	f
test_add_cursor	tests/plotting/test_plotting.py	/^def test_add_cursor():$/;"	f
test_add_fail	tests/plotting/test_scalar_bars.py	/^def test_add_fail(scalar_bars):$/;"	f
test_add_field_data	tests/core/test_dataset.py	/^def test_add_field_data(grid, field):$/;"	f
test_add_floor	tests/plotting/test_plotting.py	/^def test_add_floor(face):$/;"	f
test_add_ids_algorithm	tests/plotting/test_plotting.py	/^def test_add_ids_algorithm():$/;"	f
test_add_legend	tests/plotting/test_plotting.py	/^def test_add_legend(sphere):$/;"	f
test_add_legend_background_opacity	tests/plotting/test_renderer.py	/^def test_add_legend_background_opacity(sphere):$/;"	f
test_add_legend_loc	tests/plotting/test_renderer.py	/^def test_add_legend_loc(loc):$/;"	f
test_add_legend_no_face	tests/plotting/test_renderer.py	/^def test_add_legend_no_face(sphere):$/;"	f
test_add_lines	tests/plotting/test_plotter.py	/^def test_add_lines(connected, n_lines):$/;"	f
test_add_lines_invalid	tests/plotting/test_plotting.py	/^def test_add_lines_invalid():$/;"	f
test_add_lines_raises	tests/plotting/test_plotter.py	/^def test_add_lines_raises():$/;"	f
test_add_matrix	tests/core/test_datasetattributes.py	/^def test_add_matrix(hexbeam):$/;"	f
test_add_measurement_widget_raises	tests/plotting/test_widgets.py	/^def test_add_measurement_widget_raises():$/;"	f
test_add_mesh_isovalue_pointset_raises	tests/plotting/test_widgets.py	/^def test_add_mesh_isovalue_pointset_raises():$/;"	f
test_add_mesh_isovalue_raises	tests/plotting/test_widgets.py	/^def test_add_mesh_isovalue_raises():$/;"	f
test_add_mesh_threshold_raises	tests/plotting/test_widgets.py	/^def test_add_mesh_threshold_raises():$/;"	f
test_add_multiple	tests/plotting/test_plotter.py	/^def test_add_multiple(sphere):$/;"	f
test_add_north_arrow	tests/plotting/test_plotting.py	/^def test_add_north_arrow():$/;"	f
test_add_pick_observer	tests/plotting/test_render_window_interactor.py	/^def test_add_pick_observer():$/;"	f
test_add_plane_widget_raises	tests/plotting/test_widgets.py	/^def test_add_plane_widget_raises():$/;"	f
test_add_point_array_list	tests/core/test_dataset.py	/^def test_add_point_array_list(grid):$/;"	f
test_add_point_labels	tests/plotting/test_plotting.py	/^def test_add_point_labels():$/;"	f
test_add_point_labels_algo_raises	tests/plotting/test_plotter.py	/^def test_add_point_labels_algo_raises(mocker: MockerFixture):$/;"	f
test_add_point_labels_always_visible	tests/plotting/test_plotting.py	/^def test_add_point_labels_always_visible(always_visible):$/;"	f
test_add_point_labels_justification	tests/plotting/test_plotting.py	/^def test_add_point_labels_justification(justification_horizontal, justification_vertical):$/;"	f
test_add_point_labels_label_not_found_raises	tests/plotting/test_plotter.py	/^def test_add_point_labels_label_not_found_raises():$/;"	f
test_add_point_labels_raises	tests/plotting/test_plotter.py	/^def test_add_point_labels_raises(points):$/;"	f
test_add_point_labels_shape	tests/plotting/test_plotting.py	/^def test_add_point_labels_shape(shape, verify_image_cache):$/;"	f
test_add_point_labels_shape_raises	tests/plotting/test_plotter.py	/^def test_add_point_labels_shape_raises():$/;"	f
test_add_point_scalar_labels_fmt	tests/plotting/test_plotting.py	/^def test_add_point_scalar_labels_fmt():$/;"	f
test_add_point_scalar_labels_list	tests/plotting/test_plotting.py	/^def test_add_point_scalar_labels_list():$/;"	f
test_add_points	tests/plotting/test_plotting.py	/^def test_add_points():$/;"	f
test_add_points_invalid_style	tests/plotting/test_plotter.py	/^def test_add_points_invalid_style(sphere):$/;"	f
test_add_remove_background	tests/plotting/test_plotting.py	/^def test_add_remove_background(sphere):$/;"	f
test_add_remove_floor	tests/plotting/test_plotting.py	/^def test_add_remove_floor(sphere):$/;"	f
test_add_remove_legend	tests/plotting/test_renderer.py	/^def test_add_remove_legend(sphere):$/;"	f
test_add_remove_scalar_bar	tests/plotting/test_plotting.py	/^def test_add_remove_scalar_bar(sphere):$/;"	f
test_add_ruler_scale	tests/plotting/test_plotter.py	/^def test_add_ruler_scale():$/;"	f
test_add_scalar_bar_raises	tests/plotting/test_plotter.py	/^def test_add_scalar_bar_raises():$/;"	f
test_add_scalar_bar_with_unconstrained_font_size	tests/plotting/test_plotting.py	/^def test_add_scalar_bar_with_unconstrained_font_size(sphere):$/;"	f
test_add_should_contain_array_name	tests/core/test_datasetattributes.py	/^def test_add_should_contain_array_name(insert_arange_narray):$/;"	f
test_add_should_contain_exact_array	tests/core/test_datasetattributes.py	/^def test_add_should_contain_exact_array(insert_arange_narray):$/;"	f
test_add_should_not_add_none_array	tests/core/test_datasetattributes.py	/^def test_add_should_not_add_none_array(hexbeam_point_attributes):$/;"	f
test_add_slider_widget_raises	tests/plotting/test_widgets.py	/^def test_add_slider_widget_raises():$/;"	f
test_add_text	tests/plotting/test_plotting.py	/^def test_add_text():$/;"	f
test_add_text_font_file	tests/plotting/test_plotting.py	/^def test_add_text_font_file():$/;"	f
test_add_text_latex	tests/plotting/test_plotting.py	/^def test_add_text_latex(recwarn: pytest.WarningsRecorder):$/;"	f
test_add_timer_event	tests/plotting/test_render_window_interactor.py	/^def test_add_timer_event():$/;"	f
test_add_title	tests/plotting/test_plotting.py	/^def test_add_title(verify_image_cache):$/;"	f
test_add_two_vectors	tests/core/test_datasetattributes.py	/^def test_add_two_vectors():$/;"	f
test_add_volume_clip_plane	tests/plotting/test_widgets.py	/^def test_add_volume_clip_plane(uniform):$/;"	f
test_add_volume_scalar_raises	tests/plotting/test_plotter.py	/^def test_add_volume_scalar_raises(mocker: MockerFixture):$/;"	f
test_add_vtk_light	tests/plotting/test_lights.py	/^def test_add_vtk_light():$/;"	f
test_add_widget	tests/plotting/test_widgets.py	/^    def test_add_widget($/;"	m	class:Test_event_parser
test_affine_widget	tests/plotting/test_widgets.py	/^def test_affine_widget(sphere):$/;"	f
test_algo_to_mesh_handler_raises	tests/plotting/test_utilities.py	/^def test_algo_to_mesh_handler_raises(mocker: MockerFixture):$/;"	f
test_algorithm_add_point_labels	tests/plotting/test_plotting.py	/^def test_algorithm_add_point_labels():$/;"	f
test_algorithm_add_points	tests/plotting/test_plotting.py	/^def test_algorithm_add_points():$/;"	f
test_align	tests/core/test_dataset_filters.py	/^def test_align():$/;"	f
test_align_xyz	tests/core/test_dataset_filters.py	/^def test_align_xyz():$/;"	f
test_align_xyz_no_axis_direction	tests/core/test_dataset_filters.py	/^def test_align_xyz_no_axis_direction(planar_mesh):$/;"	f
test_align_xyz_return_matrix	tests/core/test_dataset_filters.py	/^def test_align_xyz_return_matrix():$/;"	f
test_align_xyz_single_axis_direction	tests/core/test_dataset_filters.py	/^def test_align_xyz_single_axis_direction(planar_mesh, name, value):$/;"	f
test_align_xyz_swap_axes	tests/core/test_dataset_filters.py	/^def test_align_xyz_swap_axes():$/;"	f
test_align_xyz_three_axis_directions	tests/core/test_dataset_filters.py	/^def test_align_xyz_three_axis_directions(planar_mesh):$/;"	f
test_align_xyz_two_axis_directions	tests/core/test_dataset_filters.py	/^def test_align_xyz_two_axis_directions(planar_mesh):$/;"	f
test_allow_empty_mesh	tests/plotting/test_theme.py	/^def test_allow_empty_mesh(default_theme):$/;"	f
test_alpha_range	tests/plotting/test_lookup_table.py	/^def test_alpha_range(lut, lut_w_cmap):$/;"	f
test_annotated_int_enum_from_any_raises	tests/core/test_utilities.py	/^def test_annotated_int_enum_from_any_raises(value):$/;"	f
test_annotations	tests/plotting/test_lookup_table.py	/^def test_annotations(lut):$/;"	f
test_anti_aliasing	tests/plotting/test_theme.py	/^def test_anti_aliasing(default_theme):$/;"	f
test_anti_aliasing_fxaa	tests/plotting/test_theme.py	/^def test_anti_aliasing_fxaa(default_theme):$/;"	f
test_anti_aliasing_invalid	tests/plotting/test_plotter.py	/^def test_anti_aliasing_invalid():$/;"	f
test_anti_aliasing_msaa	tests/plotting/test_theme.py	/^def test_anti_aliasing_msaa(default_theme):$/;"	f
test_anti_aliasing_multiplot	tests/plotting/test_plotter.py	/^def test_anti_aliasing_multiplot(sphere):$/;"	f
test_anti_aliasing_ssaa	tests/plotting/test_theme.py	/^def test_anti_aliasing_ssaa(default_theme):$/;"	f
test_append	tests/core/test_polydata.py	/^def test_append($/;"	f
test_append_raises	tests/core/test_polydata.py	/^def test_append_raises(sphere: pv.PolyData):$/;"	f
test_apply_cmap	tests/plotting/test_lookup_table.py	/^def test_apply_cmap(lut):$/;"	f
test_apply_lookup_table_raises	tests/plotting/test_volume_property.py	/^def test_apply_lookup_table_raises(vol_prop: VolumeProperty, lut):$/;"	f
test_apply_transformation_to_points	tests/core/test_utilities.py	/^def test_apply_transformation_to_points():$/;"	f
test_area	tests/core/test_polydata.py	/^def test_area(sphere_dense, cube_dense):$/;"	f
test_area_and_volume	tests/examples/test_cell_examples.py	/^def test_area_and_volume(cell_example):$/;"	f
test_areaplot	tests/plotting/test_charts.py	/^def test_areaplot(chart_2d, area_plot):$/;"	f
test_array_association	tests/core/test_helpers.py	/^def test_array_association():$/;"	f
test_array_from_vtkmatrix	tests/core/test_validation.py	/^def test_array_from_vtkmatrix(cls, shape):$/;"	f
test_array_name	tests/plotting/mappers/test_mapper.py	/^def test_array_name(dataset_mapper):$/;"	f
test_array_volume_rendering	tests/plotting/test_plotting.py	/^def test_array_volume_rendering(uniform, verify_image_cache):$/;"	f
test_arrow	tests/core/test_geometric_objects.py	/^def test_arrow(scale):$/;"	f
test_arrow_raises_error	tests/core/test_geometric_objects.py	/^def test_arrow_raises_error():$/;"	f
test_arrow_source	tests/core/test_geometric_sources.py	/^def test_arrow_source():$/;"	f
test_arrows	tests/core/test_dataset.py	/^def test_arrows():$/;"	f
test_arrows_ndim_raises	tests/core/test_dataset.py	/^def test_arrows_ndim_raises(mocker: MockerFixture):$/;"	f
test_as_polydata_blocks	tests/core/test_composite.py	/^def test_as_polydata_blocks(multiblock_all_with_nested_and_none):$/;"	f
test_as_unstructured_grid_blocks	tests/core/test_composite.py	/^def test_as_unstructured_grid_blocks(multiblock_all_with_nested_and_none):$/;"	f
test_assert_empty_kwargs	tests/core/test_utilities.py	/^def test_assert_empty_kwargs():$/;"	f
test_assign_labels_to_points	tests/core/test_datasetattributes.py	/^def test_assign_labels_to_points(hexbeam):$/;"	f
test_atomized	tests/plotting/test_demos.py	/^def test_atomized():$/;"	f
test_attr_repr	tests/plotting/mappers/test_composite_mapper.py	/^def test_attr_repr(block_attr):$/;"	f
test_avsucd_reader	tests/core/test_reader.py	/^def test_avsucd_reader():$/;"	f
test_axes	tests/plotting/test_plotting.py	/^def test_axes():$/;"	f
test_axes_actor_axis_labels_deprecated	tests/plotting/test_axes.py	/^def test_axes_actor_axis_labels_deprecated(axes_actor):$/;"	f
test_axes_actor_cone_rad	tests/plotting/test_axes.py	/^def test_axes_actor_cone_rad(axes_actor):$/;"	f
test_axes_actor_cone_res	tests/plotting/test_axes.py	/^def test_axes_actor_cone_res(axes_actor):$/;"	f
test_axes_actor_cylinder_rad	tests/plotting/test_axes.py	/^def test_axes_actor_cylinder_rad(axes_actor):$/;"	f
test_axes_actor_cylinder_res	tests/plotting/test_axes.py	/^def test_axes_actor_cylinder_res(axes_actor):$/;"	f
test_axes_actor_default_colors	tests/plotting/test_plotting.py	/^def test_axes_actor_default_colors():$/;"	f
test_axes_actor_label_pos	tests/plotting/test_axes.py	/^def test_axes_actor_label_pos(axes_actor):$/;"	f
test_axes_actor_labels_group	tests/plotting/test_axes.py	/^def test_axes_actor_labels_group(axes_actor):$/;"	f
test_axes_actor_labels_individual	tests/plotting/test_axes.py	/^def test_axes_actor_labels_individual(axes_actor):$/;"	f
test_axes_actor_properties	tests/plotting/test_axes.py	/^def test_axes_actor_properties():$/;"	f
test_axes_actor_properties	tests/plotting/test_plotting.py	/^def test_axes_actor_properties():$/;"	f
test_axes_actor_shaft_len	tests/plotting/test_axes.py	/^def test_axes_actor_shaft_len(axes_actor):$/;"	f
test_axes_actor_shaft_type	tests/plotting/test_axes.py	/^def test_axes_actor_shaft_type(axes_actor):$/;"	f
test_axes_actor_sphere_rad	tests/plotting/test_axes.py	/^def test_axes_actor_sphere_rad(axes_actor):$/;"	f
test_axes_actor_sphere_res	tests/plotting/test_axes.py	/^def test_axes_actor_sphere_res(axes_actor):$/;"	f
test_axes_actor_tip_len	tests/plotting/test_axes.py	/^def test_axes_actor_tip_len(axes_actor):$/;"	f
test_axes_actor_tip_type	tests/plotting/test_axes.py	/^def test_axes_actor_tip_type(axes_actor):$/;"	f
test_axes_actor_total_len	tests/plotting/test_axes.py	/^def test_axes_actor_total_len(axes_actor):$/;"	f
test_axes_actor_visibility	tests/plotting/test_axes.py	/^def test_axes_actor_visibility(axes_actor):$/;"	f
test_axes_assembly_bounds	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_bounds(axes_assembly):$/;"	f
test_axes_assembly_center	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_center(axes_assembly):$/;"	f
test_axes_assembly_color_inputs	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_color_inputs(axes_assembly):$/;"	f
test_axes_assembly_label_position	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_label_position(axes_assembly):$/;"	f
test_axes_assembly_label_position_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_label_position_init():$/;"	f
test_axes_assembly_label_size	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_label_size(axes_assembly):$/;"	f
test_axes_assembly_label_size_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_label_size_init():$/;"	f
test_axes_assembly_labels	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_labels(axes_assembly):$/;"	f
test_axes_assembly_labels_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_labels_init():$/;"	f
test_axes_assembly_labels_raises	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_labels_raises():$/;"	f
test_axes_assembly_length	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_length(axes_assembly):$/;"	f
test_axes_assembly_name	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_name():$/;"	f
test_axes_assembly_orientation	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_orientation(axes_assembly):$/;"	f
test_axes_assembly_orientation_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_orientation_init():$/;"	f
test_axes_assembly_origin	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_origin(axes_assembly):$/;"	f
test_axes_assembly_origin_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_origin_init():$/;"	f
test_axes_assembly_position	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_position(axes_assembly):$/;"	f
test_axes_assembly_position_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_position_init():$/;"	f
test_axes_assembly_repr	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_repr(axes_assembly):$/;"	f
test_axes_assembly_scale	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_scale(axes_assembly):$/;"	f
test_axes_assembly_scale_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_scale_init():$/;"	f
test_axes_assembly_set_get_actor_prop_all_color	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_all_color(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_axis	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_axis(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_axis_and_shaft	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_axis_and_shaft(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_axis_and_tip	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_axis_and_tip(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_axis_and_tip_color	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_axis_and_tip_color(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_axis_color	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_axis_color(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_raises	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_raises(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_shaft	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_shaft(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_shaft_color	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_shaft_color(axes_assembly):$/;"	f
test_axes_assembly_set_get_actor_prop_tip	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_actor_prop_tip(axes_assembly):$/;"	f
test_axes_assembly_set_get_part_prop_all	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_set_get_part_prop_all(axes_assembly):$/;"	f
test_axes_assembly_show_labels	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_show_labels(axes_assembly):$/;"	f
test_axes_assembly_show_labels_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_show_labels_init():$/;"	f
test_axes_assembly_symmetric	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_symmetric(axes_assembly_symmetric):$/;"	f
test_axes_assembly_symmetric_init_label	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_symmetric_init_label(test_property):$/;"	f
test_axes_assembly_symmetric_name	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_symmetric_name():$/;"	f
test_axes_assembly_symmetric_set_get_label	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_symmetric_set_get_label(axes_assembly_symmetric, test_property):$/;"	f
test_axes_assembly_symmetric_set_get_labels	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_symmetric_set_get_labels(axes_assembly_symmetric):$/;"	f
test_axes_assembly_theme	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_theme(axes_assembly):$/;"	f
test_axes_assembly_user_matrix	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_user_matrix(axes_assembly):$/;"	f
test_axes_assembly_user_matrix_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_user_matrix_init():$/;"	f
test_axes_assembly_x_color	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_x_color(axes_assembly):$/;"	f
test_axes_assembly_x_label	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_x_label(axes_assembly):$/;"	f
test_axes_assembly_x_label_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_x_label_init(axes_assembly):$/;"	f
test_axes_assembly_y_color	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_y_color(axes_assembly):$/;"	f
test_axes_assembly_y_label	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_y_label(axes_assembly):$/;"	f
test_axes_assembly_y_label_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_y_label_init(axes_assembly):$/;"	f
test_axes_assembly_z_color	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_z_color(axes_assembly):$/;"	f
test_axes_assembly_z_label	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_z_label(axes_assembly):$/;"	f
test_axes_assembly_z_label_init	tests/plotting/test_axes_assembly.py	/^def test_axes_assembly_z_label_init(axes_assembly):$/;"	f
test_axes_box	tests/plotting/test_theme.py	/^def test_axes_box(default_theme):$/;"	f
test_axes_color	tests/plotting/test_theme.py	/^def test_axes_color(default_theme):$/;"	f
test_axes_eq	tests/plotting/test_theme.py	/^def test_axes_eq(default_theme):$/;"	f
test_axes_geometry_shaft_type_tip_type	tests/plotting/test_plotting.py	/^def test_axes_geometry_shaft_type_tip_type(geometry_type):$/;"	f
test_axes_geometry_source_bounds	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_bounds(axes_geometry_source, part):$/;"	f
test_axes_geometry_source_custom_part	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_custom_part(axes_geometry_source):$/;"	f
test_axes_geometry_source_repr	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_repr(axes_geometry_source):$/;"	f
test_axes_geometry_source_shaft_length_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_shaft_length_init():$/;"	f
test_axes_geometry_source_shaft_length_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_shaft_length_set_get(axes_geometry_source):$/;"	f
test_axes_geometry_source_shaft_radius_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_shaft_radius_init():$/;"	f
test_axes_geometry_source_shaft_radius_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_shaft_radius_set_get(axes_geometry_source):$/;"	f
test_axes_geometry_source_shaft_type_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_shaft_type_init(shaft_type):$/;"	f
test_axes_geometry_source_shaft_type_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_shaft_type_set_get(shaft_type, axes_geometry_source):$/;"	f
test_axes_geometry_source_symmetric_bounds_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_symmetric_bounds_init():$/;"	f
test_axes_geometry_source_symmetric_bounds_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_symmetric_bounds_set_get(axes_geometry_source):$/;"	f
test_axes_geometry_source_symmetric_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_symmetric_init():$/;"	f
test_axes_geometry_source_symmetric_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_symmetric_set_get(axes_geometry_source):$/;"	f
test_axes_geometry_source_tip_length_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_tip_length_init():$/;"	f
test_axes_geometry_source_tip_length_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_tip_length_set_get(axes_geometry_source):$/;"	f
test_axes_geometry_source_tip_radius_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_tip_radius_init():$/;"	f
test_axes_geometry_source_tip_radius_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_tip_radius_set_get(axes_geometry_source):$/;"	f
test_axes_geometry_source_tip_type_init	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_tip_type_init(tip_type):$/;"	f
test_axes_geometry_source_tip_type_set_get	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_tip_type_set_get(tip_type, axes_geometry_source):$/;"	f
test_axes_geometry_source_update_output	tests/core/test_geometric_sources.py	/^def test_axes_geometry_source_update_output(axes_geometry_source):$/;"	f
test_axes_show	tests/plotting/test_theme.py	/^def test_axes_show(default_theme):$/;"	f
test_axis_angle_rotation	tests/core/test_utilities.py	/^def test_axis_angle_rotation():$/;"	f
test_axis_angle_rotation_many_times	tests/core/test_utilities.py	/^def test_axis_angle_rotation_many_times(axis, angle, times):$/;"	f
test_axis_grid	tests/plotting/test_charts.py	/^def test_axis_grid(axis):$/;"	f
test_axis_init	tests/plotting/test_charts.py	/^def test_axis_init():$/;"	f
test_axis_label	tests/plotting/test_charts.py	/^def test_axis_label(axis):$/;"	f
test_axis_label_font_size	tests/plotting/test_charts.py	/^def test_axis_label_font_size(chart_2d):$/;"	f
test_axis_margin	tests/plotting/test_charts.py	/^def test_axis_margin(axis):$/;"	f
test_axis_minor_tick_visibility	tests/plotting/test_cube_axes_actor.py	/^def test_axis_minor_tick_visibility(cube_axes_actor):$/;"	f
test_axis_range	tests/plotting/test_charts.py	/^def test_axis_range(axis):$/;"	f
test_axis_rotation_invalid	tests/core/test_dataset.py	/^def test_axis_rotation_invalid():$/;"	f
test_axis_rotation_not_inplace	tests/core/test_dataset.py	/^def test_axis_rotation_not_inplace():$/;"	f
test_axis_scale	tests/plotting/test_charts.py	/^def test_axis_scale(chart_2d, axis):$/;"	f
test_axis_tick_count	tests/plotting/test_charts.py	/^def test_axis_tick_count(axis):$/;"	f
test_axis_tick_labels_visible	tests/plotting/test_charts.py	/^def test_axis_tick_labels_visible(axis):$/;"	f
test_axis_tick_locations	tests/plotting/test_charts.py	/^def test_axis_tick_locations(chart_2d, axis):$/;"	f
test_axis_tick_offset	tests/plotting/test_charts.py	/^def test_axis_tick_offset(axis):$/;"	f
test_axis_tick_size	tests/plotting/test_charts.py	/^def test_axis_tick_size(axis):$/;"	f
test_axis_tick_visible	tests/plotting/test_charts.py	/^def test_axis_tick_visible(axis):$/;"	f
test_axis_visible	tests/plotting/test_charts.py	/^def test_axis_visible(axis):$/;"	f
test_azimuth	tests/plotting/test_camera.py	/^def test_azimuth(camera):$/;"	f
test_backface_params	tests/plotting/test_plotting.py	/^def test_backface_params():$/;"	f
test_bad_init	tests/core/test_cells.py	/^def test_bad_init():$/;"	f
test_bad_instantiation	tests/core/test_dataset.py	/^def test_bad_instantiation():$/;"	f
test_bad_keyword_arguments	tests/plotting/test_plotting.py	/^def test_bad_keyword_arguments():$/;"	f
test_bad_legend_origin_and_size	tests/plotting/test_renderer.py	/^def test_bad_legend_origin_and_size(sphere):$/;"	f
test_barplot	tests/plotting/test_charts.py	/^def test_barplot(chart_2d, bar_plot):$/;"	f
test_base_viewer_ui	tests/plotting/jupyter/test_trame.py	/^def test_base_viewer_ui():$/;"	f
test_basic_mapper	tests/plotting/mappers/test_composite_mapper.py	/^def test_basic_mapper(composite_mapper):$/;"	f
test_beam_example	tests/plotting/test_demos.py	/^def test_beam_example():$/;"	f
test_below_range_color	tests/plotting/test_lookup_table.py	/^def test_below_range_color(lut):$/;"	f
test_below_range_color	tests/plotting/test_theme.py	/^def test_below_range_color(default_theme):$/;"	f
test_binarymarchingcubesreader	tests/core/test_reader.py	/^def test_binarymarchingcubesreader():$/;"	f
test_biquadratic_quadratic_hexahedron	tests/examples/test_cell_examples.py	/^def test_biquadratic_quadratic_hexahedron():$/;"	f
test_biquadratic_quadratic_wedge	tests/examples/test_cell_examples.py	/^def test_biquadratic_quadratic_wedge():$/;"	f
test_biquadratic_quadrilateral	tests/examples/test_cell_examples.py	/^def test_biquadratic_quadrilateral():$/;"	f
test_biquadratic_triangle	tests/examples/test_cell_examples.py	/^def test_biquadratic_triangle():$/;"	f
test_bitarray_cells	tests/core/test_dataset.py	/^def test_bitarray_cells(grid):$/;"	f
test_bitarray_field	tests/core/test_dataset.py	/^def test_bitarray_field(grid):$/;"	f
test_bitarray_points	tests/core/test_dataset.py	/^def test_bitarray_points(grid):$/;"	f
test_bitwise_and_or	tests/core/test_polydata.py	/^def test_bitwise_and_or(sphere, sphere_shifted):$/;"	f
test_bitwise_and_or_of_polydata	tests/plotting/test_plotting.py	/^def test_bitwise_and_or_of_polydata(operator):$/;"	f
test_block_attr	tests/plotting/mappers/test_composite_mapper.py	/^def test_block_attr(block_attributes):$/;"	f
test_block_attr_get_item_	tests/plotting/mappers/test_composite_mapper.py	/^def test_block_attr_get_item_(multiblock_poly):$/;"	f
test_block_attributes	tests/plotting/mappers/test_composite_mapper.py	/^def test_block_attributes(block_attributes):$/;"	f
test_block_picking	tests/plotting/test_picking.py	/^def test_block_picking(multiblock_poly):$/;"	f
test_block_types	tests/core/test_composite.py	/^def test_block_types(multiblock_all_with_nested_and_none):$/;"	f
test_blur_pass	tests/plotting/test_render_pass.py	/^def test_blur_pass():$/;"	f
test_blurring	tests/plotting/test_plotting.py	/^def test_blurring():$/;"	f
test_bmpreader	tests/core/test_reader.py	/^def test_bmpreader():$/;"	f
test_bool	tests/core/test_datasetattributes.py	/^def test_bool(hexbeam_point_attributes):$/;"	f
test_bool_scalars	tests/plotting/test_plotting.py	/^def test_bool_scalars(sphere):$/;"	f
test_boolean_difference	tests/core/test_polydata.py	/^def test_boolean_difference(sphere, sphere_shifted):$/;"	f
test_boolean_difference_fail	tests/core/test_polydata.py	/^def test_boolean_difference_fail(plane, sphere):$/;"	f
test_boolean_intersect_edge_case	tests/core/test_polydata_filters.py	/^def test_boolean_intersect_edge_case():$/;"	f
test_boolean_raises	tests/core/test_polydata_filters.py	/^def test_boolean_raises(other_mesh):$/;"	f
test_boolean_union_intersection	tests/core/test_polydata.py	/^def test_boolean_union_intersection(sphere, sphere_shifted):$/;"	f
test_border	tests/plotting/test_renderer.py	/^def test_border(has_border):$/;"	f
test_bounding_box	tests/plotting/test_plotting.py	/^def test_bounding_box(oblique_cone, box_style):$/;"	f
test_bounding_box_as_composite	tests/core/test_dataset_filters.py	/^def test_bounding_box_as_composite(sphere, as_composite, mesh_type):$/;"	f
test_bounding_box_return_meta	tests/core/test_dataset_filters.py	/^def test_bounding_box_return_meta(oriented, as_composite):$/;"	f
test_bounds	tests/plotting/mappers/test_mapper.py	/^def test_bounds(dataset_mapper):$/;"	f
test_bounds_tuple	tests/typing/test_return_type.py	/^def test_bounds_tuple(class_with_bounds):$/;"	f
test_box	tests/core/test_geometric_objects.py	/^def test_box():$/;"	f
test_box_axes	tests/plotting/test_plotting.py	/^def test_box_axes():$/;"	f
test_box_axes	tests/plotting/test_theme.py	/^def test_box_axes(default_theme):$/;"	f
test_box_axes_color_box	tests/plotting/test_plotting.py	/^def test_box_axes_color_box():$/;"	f
test_box_source	tests/core/test_geometric_sources.py	/^def test_box_source():$/;"	f
test_box_source_bounds_raises	tests/core/test_geometric_sources.py	/^def test_box_source_bounds_raises(bounds):$/;"	f
test_brush	tests/plotting/test_charts.py	/^def test_brush():$/;"	f
test_byureader	tests/core/test_reader.py	/^def test_byureader():$/;"	f
test_call	tests/plotting/test_lookup_table.py	/^def test_call(lut):$/;"	f
test_call_raises	tests/plotting/test_lookup_table.py	/^def test_call_raises(lut: LookupError, mocker: MockerFixture):$/;"	f
test_camera	tests/plotting/test_plotting.py	/^def test_camera(sphere):$/;"	f
test_camera	tests/plotting/test_theme.py	/^def test_camera(default_theme):$/;"	f
test_camera3d_widget	tests/plotting/test_widgets.py	/^def test_camera3d_widget(verify_image_cache):$/;"	f
test_camera_from_paraview_pvcc	tests/plotting/test_camera.py	/^def test_camera_from_paraview_pvcc(paraview_pvcc):$/;"	f
test_camera_is_set	tests/plotting/test_renderer.py	/^def test_camera_is_set():$/;"	f
test_camera_parallel_projection	tests/plotting/test_theme.py	/^def test_camera_parallel_projection(default_theme):$/;"	f
test_camera_parallel_scale	tests/plotting/test_theme.py	/^def test_camera_parallel_scale(default_theme):$/;"	f
test_camera_position	tests/plotting/test_camera.py	/^def test_camera_position(camera):$/;"	f
test_camera_position	tests/plotting/test_renderer.py	/^def test_camera_position():$/;"	f
test_camera_to_paraview_pvcc	tests/plotting/test_camera.py	/^def test_camera_to_paraview_pvcc(camera, tmp_path):$/;"	f
test_capsule	tests/core/test_geometric_objects.py	/^def test_capsule():$/;"	f
test_capsule_center	tests/core/test_geometric_objects.py	/^def test_capsule_center(center, direction):$/;"	f
test_capsule_source	tests/core/test_geometric_sources.py	/^def test_capsule_source():$/;"	f
test_cartesian_to_spherical	tests/core/test_utilities.py	/^def test_cartesian_to_spherical():$/;"	f
test_cast_image_data_with_float_spacing_to_rectilinear	tests/core/test_grid.py	/^def test_cast_image_data_with_float_spacing_to_rectilinear():$/;"	f
test_cast_rectilinear_grid	tests/core/test_grid.py	/^def test_cast_rectilinear_grid():$/;"	f
test_cast_to_list	tests/core/test_validation.py	/^def test_cast_to_list():$/;"	f
test_cast_to_numpy	tests/core/test_validation.py	/^def test_cast_to_numpy(as_any, copy, dtype):$/;"	f
test_cast_to_numpy_must_be_real	tests/core/test_validation.py	/^def test_cast_to_numpy_must_be_real():$/;"	f
test_cast_to_numpy_raises	tests/core/test_validation.py	/^def test_cast_to_numpy_raises():$/;"	f
test_cast_to_pointset	tests/core/test_dataset.py	/^def test_cast_to_pointset(sphere):$/;"	f
test_cast_to_pointset_implicit	tests/core/test_dataset.py	/^def test_cast_to_pointset_implicit(uniform):$/;"	f
test_cast_to_poly_points_implicit	tests/core/test_dataset.py	/^def test_cast_to_poly_points_implicit(uniform):$/;"	f
test_cast_to_polydata	tests/core/test_pointset.py	/^def test_cast_to_polydata(pointset, deep):$/;"	f
test_cast_to_tuple	tests/core/test_validation.py	/^def test_cast_to_tuple():$/;"	f
test_cast_to_unstructured_grid	tests/core/test_pointset.py	/^def test_cast_to_unstructured_grid(pointset):$/;"	f
test_cast_uniform_to_rectilinear	tests/core/test_grid.py	/^def test_cast_uniform_to_rectilinear():$/;"	f
test_cast_uniform_to_structured	tests/core/test_grid.py	/^def test_cast_uniform_to_structured():$/;"	f
test_cell_array_range	tests/core/test_dataset.py	/^def test_cell_array_range(grid):$/;"	f
test_cell_attribute	tests/core/test_cells.py	/^def test_cell_attribute(grid):$/;"	f
test_cell_bounds	tests/core/test_cells.py	/^def test_cell_bounds(grid):$/;"	f
test_cell_cast_to_polydata	tests/core/test_cells.py	/^def test_cell_cast_to_polydata(cell):$/;"	f
test_cell_cast_to_unstructured_grid	tests/core/test_cells.py	/^def test_cell_cast_to_unstructured_grid(cell):$/;"	f
test_cell_center	tests/core/test_cells.py	/^def test_cell_center(grid):$/;"	f
test_cell_center_pointset	tests/core/test_dataobject_filters.py	/^def test_cell_center_pointset(airplane):$/;"	f
test_cell_center_value	tests/core/test_cells.py	/^def test_cell_center_value():$/;"	f
test_cell_centers	tests/core/test_dataobject_filters.py	/^def test_cell_centers(datasets):$/;"	f
test_cell_centers_composite	tests/core/test_dataobject_filters.py	/^def test_cell_centers_composite(multiblock_all):$/;"	f
test_cell_connectivity_empty	tests/core/test_grid.py	/^def test_cell_connectivity_empty(empty_poly_cast_to_ugrid, hexbeam):$/;"	f
test_cell_copy	tests/core/test_cells.py	/^def test_cell_copy():$/;"	f
test_cell_copy_generic	tests/core/test_cells.py	/^def test_cell_copy_generic(cell):$/;"	f
test_cell_data	tests/core/test_dataset.py	/^def test_cell_data(grid):$/;"	f
test_cell_data_bad_value	tests/core/test_dataset.py	/^def test_cell_data_bad_value(grid):$/;"	f
test_cell_data_to_point_data	tests/core/test_dataobject_filters.py	/^def test_cell_data_to_point_data():$/;"	f
test_cell_data_to_point_data_composite	tests/core/test_dataobject_filters.py	/^def test_cell_data_to_point_data_composite(multiblock_all):$/;"	f
test_cell_dimension	tests/core/test_cells.py	/^def test_cell_dimension(cell, dim):$/;"	f
test_cell_edge_neighbors_ids	tests/core/test_dataset.py	/^def test_cell_edge_neighbors_ids(grid: DataSet, i0):$/;"	f
test_cell_edges	tests/core/test_cells.py	/^def test_cell_edges(cell):$/;"	f
test_cell_edges_point_ids	tests/core/test_cells.py	/^def test_cell_edges_point_ids(cell):$/;"	f
test_cell_face_neighbors_ids	tests/core/test_dataset.py	/^def test_cell_face_neighbors_ids(grid: DataSet, i0):$/;"	f
test_cell_faces	tests/core/test_cells.py	/^def test_cell_faces(cell):$/;"	f
test_cell_faces_point_ids	tests/core/test_cells.py	/^def test_cell_faces_point_ids(cell):$/;"	f
test_cell_get_cell	tests/core/test_cells.py	/^def test_cell_get_cell():$/;"	f
test_cell_get_edges	tests/core/test_cells.py	/^def test_cell_get_edges(cell):$/;"	f
test_cell_is_linear	tests/core/test_cells.py	/^def test_cell_is_linear(cell):$/;"	f
test_cell_n_edges	tests/core/test_cells.py	/^def test_cell_n_edges(cell, ne):$/;"	f
test_cell_n_faces	tests/core/test_cells.py	/^def test_cell_n_faces(cell, nf):$/;"	f
test_cell_n_points	tests/core/test_cells.py	/^def test_cell_n_points(cell, np):$/;"	f
test_cell_neighbors_levels	tests/core/test_dataset.py	/^def test_cell_neighbors_levels(grid: DataSet, i0, n_levels, connections):$/;"	f
test_cell_no_field_data	tests/core/test_cells.py	/^def test_cell_no_field_data():$/;"	f
test_cell_normals_computes_new_normals	tests/core/test_polydata.py	/^def test_cell_normals_computes_new_normals(ant):$/;"	f
test_cell_normals_returns_active_normals	tests/core/test_polydata.py	/^def test_cell_normals_returns_active_normals(ant_with_normals):$/;"	f
test_cell_picking_interactive	tests/plotting/test_picking.py	/^def test_cell_picking_interactive():$/;"	f
test_cell_picking_interactive_subplot	tests/plotting/test_picking.py	/^def test_cell_picking_interactive_subplot():$/;"	f
test_cell_point_ids	tests/core/test_cells.py	/^def test_cell_point_ids(grid):$/;"	f
test_cell_point_neighbors_ids	tests/core/test_dataset.py	/^def test_cell_point_neighbors_ids(grid: DataSet, i0):$/;"	f
test_cell_points	tests/core/test_cells.py	/^def test_cell_points(cell):$/;"	f
test_cell_quality	tests/core/test_dataobject_filters.py	/^def test_cell_quality():$/;"	f
test_cell_quality_all_valid	tests/core/test_dataobject_filters.py	/^def test_cell_quality_all_valid(ant):$/;"	f
test_cell_quality_composite	tests/core/test_dataobject_filters.py	/^def test_cell_quality_composite(multiblock_all_with_nested_and_none):$/;"	f
test_cell_quality_info	tests/core/test_utilities.py	/^def test_cell_quality_info(cell_type):$/;"	f
test_cell_quality_info_acceptable_range	tests/core/test_utilities.py	/^def test_cell_quality_info_acceptable_range(info):$/;"	f
test_cell_quality_info_degenerate_cell	tests/core/test_utilities.py	/^def test_cell_quality_info_degenerate_cell(info):$/;"	f
test_cell_quality_info_full_range	tests/core/test_utilities.py	/^def test_cell_quality_info_full_range(info):$/;"	f
test_cell_quality_info_normal_range	tests/core/test_utilities.py	/^def test_cell_quality_info_normal_range(info):$/;"	f
test_cell_quality_info_raises	tests/core/test_utilities.py	/^def test_cell_quality_info_raises():$/;"	f
test_cell_quality_info_unit_cell_value	tests/core/test_utilities.py	/^def test_cell_quality_info_unit_cell_value(info):$/;"	f
test_cell_quality_info_valid_measures	tests/core/test_utilities.py	/^def test_cell_quality_info_valid_measures(info):$/;"	f
test_cell_quality_measures	tests/core/test_dataobject_filters.py	/^def test_cell_quality_measures(ant):$/;"	f
test_cell_quality_return_type	tests/core/test_dataobject_filters.py	/^def test_cell_quality_return_type(multiblock_all_with_nested_and_none):$/;"	f
test_cell_quality_size_measures	tests/core/test_dataobject_filters.py	/^def test_cell_quality_size_measures(cell_mesh, measure):$/;"	f
test_cell_type	tests/core/test_cells.py	/^def test_cell_type(cell, type_):$/;"	f
test_cell_type_is_inside_enum	tests/core/test_cells.py	/^def test_cell_type_is_inside_enum(cell):$/;"	f
test_cell_types	tests/core/test_cells.py	/^def test_cell_types():$/;"	f
test_cells_dict_alternating_cells	tests/core/test_grid.py	/^def test_cells_dict_alternating_cells():$/;"	f
test_cells_dict_empty_grid	tests/core/test_grid.py	/^def test_cells_dict_empty_grid():$/;"	f
test_cells_dict_hexbeam_file	tests/core/test_grid.py	/^def test_cells_dict_hexbeam_file():$/;"	f
test_cells_dict_utils	tests/core/test_utilities.py	/^def test_cells_dict_utils():$/;"	f
test_cells_dict_variable_length	tests/core/test_grid.py	/^def test_cells_dict_variable_length():$/;"	f
test_cells_empty	tests/core/test_grid.py	/^def test_cells_empty(empty_poly_cast_to_ugrid):$/;"	f
test_cells_np_bool	tests/core/test_dataset.py	/^def test_cells_np_bool(grid):$/;"	f
test_cells_to_points	tests/core/test_imagedata_filters.py	/^def test_cells_to_points(uniform_many_scalars, active_scalars, copy):$/;"	f
test_cells_to_points_scalars	tests/core/test_imagedata_filters.py	/^def test_cells_to_points_scalars(uniform):$/;"	f
test_cells_uint8	tests/core/test_dataset.py	/^def test_cells_uint8(grid):$/;"	f
test_celltypes_empty	tests/core/test_grid.py	/^def test_celltypes_empty(empty_poly_cast_to_ugrid, hexbeam):$/;"	f
test_center_of_mass	tests/core/test_pointset.py	/^def test_center_of_mass():$/;"	f
test_center_of_mass	tests/core/test_polydata.py	/^def test_center_of_mass(sphere):$/;"	f
test_center_tuple	tests/typing/test_return_type.py	/^def test_center_tuple(class_with_center):$/;"	f
test_change_name_fail	tests/core/test_dataset.py	/^def test_change_name_fail(grid):$/;"	f
test_chart_2d	tests/plotting/test_charts.py	/^def test_chart_2d(pl, chart_2d):$/;"	f
test_chart_box	tests/plotting/test_charts.py	/^def test_chart_box(pl, chart_box, box_plot):$/;"	f
test_chart_common	tests/plotting/test_charts.py	/^def test_chart_common(pl, chart_f, request):$/;"	f
test_chart_interaction	tests/plotting/test_charts.py	/^def test_chart_interaction():$/;"	f
test_chart_matplotlib_plot	tests/plotting/test_plotting.py	/^def test_chart_matplotlib_plot(verify_image_cache):$/;"	f
test_chart_mpl	tests/plotting/test_charts.py	/^def test_chart_mpl(pl, chart_mpl):$/;"	f
test_chart_mpl_update	tests/plotting/test_charts.py	/^def test_chart_mpl_update(pl):$/;"	f
test_chart_pie	tests/plotting/test_charts.py	/^def test_chart_pie(pl, chart_pie, pie_plot):$/;"	f
test_chart_plot	tests/plotting/test_plotting.py	/^def test_chart_plot():$/;"	f
test_charts	tests/plotting/test_charts.py	/^def test_charts(pl):$/;"	f
test_charts_sin	tests/plotting/test_plotting.py	/^def test_charts_sin():$/;"	f
test_check_consistency_raises	tests/core/test_grid.py	/^def test_check_consistency_raises(mocker: MockerFixture):$/;"	f
test_check_contains	tests/core/test_validation.py	/^def test_check_contains():$/;"	f
test_check_finite	tests/core/test_validation.py	/^def test_check_finite():$/;"	f
test_check_greater_than	tests/core/test_validation.py	/^def test_check_greater_than():$/;"	f
test_check_instance	tests/core/test_validation.py	/^def test_check_instance(obj, classinfo, allow_subclass, name):$/;"	f
test_check_integer	tests/core/test_validation.py	/^def test_check_integer():$/;"	f
test_check_iterable	tests/core/test_validation.py	/^def test_check_iterable():$/;"	f
test_check_iterable_items	tests/core/test_validation.py	/^def test_check_iterable_items():$/;"	f
test_check_length	tests/core/test_validation.py	/^def test_check_length():$/;"	f
test_check_less_than	tests/core/test_validation.py	/^def test_check_less_than():$/;"	f
test_check_ndim	tests/core/test_validation.py	/^def test_check_ndim():$/;"	f
test_check_nonnegative	tests/core/test_validation.py	/^def test_check_nonnegative():$/;"	f
test_check_number	tests/core/test_validation.py	/^def test_check_number():$/;"	f
test_check_range	tests/core/test_validation.py	/^def test_check_range():$/;"	f
test_check_range	tests/plotting/test_property.py	/^def test_check_range():$/;"	f
test_check_real	tests/core/test_validation.py	/^def test_check_real():$/;"	f
test_check_sequence	tests/core/test_validation.py	/^def test_check_sequence():$/;"	f
test_check_shape	tests/core/test_validation.py	/^def test_check_shape():$/;"	f
test_check_sorted	tests/core/test_validation.py	/^def test_check_sorted(shape, axis, ascending, strict):$/;"	f
test_check_string	tests/core/test_validation.py	/^def test_check_string():$/;"	f
test_check_subdtype	tests/core/test_validation.py	/^def test_check_subdtype():$/;"	f
test_check_type	tests/core/test_validation.py	/^def test_check_type():$/;"	f
test_check_type_union	tests/core/test_validation.py	/^def test_check_type_union():$/;"	f
test_check_valid_vector	tests/core/test_utilities.py	/^def test_check_valid_vector():$/;"	f
test_circle	tests/core/test_geometric_objects.py	/^def test_circle():$/;"	f
test_circular_arc	tests/core/test_geometric_objects.py	/^def test_circular_arc():$/;"	f
test_circular_arc_from_normal	tests/core/test_geometric_objects.py	/^def test_circular_arc_from_normal():$/;"	f
test_classproperty	tests/core/test_utilities.py	/^def test_classproperty():$/;"	f
test_clean	tests/core/test_polydata.py	/^def test_clean(sphere):$/;"	f
test_clean_grid	tests/core/test_unstructured_grid_filters.py	/^def test_clean_grid(hexbeam):$/;"	f
test_clean_points	tests/core/test_unstructured_grid_filters.py	/^def test_clean_points():$/;"	f
test_clean_raises	tests/core/test_polydata_filters.py	/^def test_clean_raises(mocker: MockerFixture):$/;"	f
test_clear	tests/plotting/test_plotting.py	/^def test_clear(sphere):$/;"	f
test_clear	tests/plotting/test_scalar_bars.py	/^def test_clear(scalar_bars):$/;"	f
test_clear_actors	tests/plotting/test_plotter.py	/^def test_clear_actors(cube, sphere):$/;"	f
test_clear_all_cell_data	tests/core/test_composite.py	/^def test_clear_all_cell_data(multiblock_all):$/;"	f
test_clear_all_data	tests/core/test_composite.py	/^def test_clear_all_data(multiblock_all):$/;"	f
test_clear_all_point_data	tests/core/test_composite.py	/^def test_clear_all_point_data(multiblock_all):$/;"	f
test_clear_box_widget	tests/plotting/test_widgets.py	/^def test_clear_box_widget(verify_image_cache):$/;"	f
test_clear_button_widget	tests/plotting/test_widgets.py	/^def test_clear_button_widget(verify_image_cache):$/;"	f
test_clear_camera3d_widget	tests/plotting/test_widgets.py	/^def test_clear_camera3d_widget(verify_image_cache):$/;"	f
test_clear_camera_widget	tests/plotting/test_widgets.py	/^def test_clear_camera_widget(verify_image_cache):$/;"	f
test_clear_data	tests/core/test_dataset.py	/^def test_clear_data():$/;"	f
test_clear_key_event_callbacks	tests/plotting/test_render_window_interactor.py	/^def test_clear_key_event_callbacks():$/;"	f
test_clear_line_widget	tests/plotting/test_widgets.py	/^def test_clear_line_widget(verify_image_cache):$/;"	f
test_clear_logo_widget	tests/plotting/test_widgets.py	/^def test_clear_logo_widget(verify_image_cache):$/;"	f
test_clear_measure_widget	tests/plotting/test_widgets.py	/^def test_clear_measure_widget(verify_image_cache):$/;"	f
test_clear_plane_widget	tests/plotting/test_widgets.py	/^def test_clear_plane_widget(verify_image_cache):$/;"	f
test_clear_slider_widget	tests/plotting/test_widgets.py	/^def test_clear_slider_widget(verify_image_cache):$/;"	f
test_clear_sphere_widget	tests/plotting/test_widgets.py	/^def test_clear_sphere_widget(verify_image_cache):$/;"	f
test_clear_spline_widget	tests/plotting/test_widgets.py	/^def test_clear_spline_widget(verify_image_cache):$/;"	f
test_clip_box	tests/core/test_dataobject_filters.py	/^def test_clip_box(datasets):$/;"	f
test_clip_box_composite	tests/core/test_dataobject_filters.py	/^def test_clip_box_composite(multiblock_all):$/;"	f
test_clip_closed_surface	tests/core/test_dataset_filters.py	/^def test_clip_closed_surface():$/;"	f
test_clip_filter	tests/core/test_dataobject_filters.py	/^def test_clip_filter(multiblock_all_with_nested_and_none, return_clipped):$/;"	f
test_clip_filter_composite	tests/core/test_dataobject_filters.py	/^def test_clip_filter_composite(multiblock_all):$/;"	f
test_clip_filter_crinkle_active_scalars	tests/core/test_dataobject_filters.py	/^def test_clip_filter_crinkle_active_scalars(uniform, has_active_scalars):$/;"	f
test_clip_filter_crinkle_disjoint	tests/core/test_dataobject_filters.py	/^def test_clip_filter_crinkle_disjoint(uniform):$/;"	f
test_clip_filter_empty_inputs	tests/core/test_dataobject_filters.py	/^def test_clip_filter_empty_inputs(dataset):$/;"	f
test_clip_filter_normal	tests/core/test_dataobject_filters.py	/^def test_clip_filter_normal(datasets):$/;"	f
test_clip_multiblock_crinkle	tests/plotting/test_plotting.py	/^def test_clip_multiblock_crinkle(return_clipped, as_multiblock):$/;"	f
test_clip_plane	tests/core/test_polydata.py	/^def test_clip_plane(sphere):$/;"	f
test_clip_scalar_filter	tests/core/test_dataset_filters.py	/^def test_clip_scalar_filter(datasets, both, invert):$/;"	f
test_clip_scalar_multiple	tests/core/test_dataset_filters.py	/^def test_clip_scalar_multiple():$/;"	f
test_clip_scalar_no_active	tests/core/test_dataset_filters.py	/^def test_clip_scalar_no_active(sphere):$/;"	f
test_clip_surface	tests/core/test_dataset_filters.py	/^def test_clip_surface():$/;"	f
test_clipping_range	tests/plotting/test_camera.py	/^def test_clipping_range(camera):$/;"	f
test_closing_and_mem_cleanup	tests/plotting/test_plotting.py	/^def test_closing_and_mem_cleanup(verify_image_cache):$/;"	f
test_cmap	tests/plotting/test_theme.py	/^def test_cmap(default_theme):$/;"	f
test_cmap_list	tests/plotting/test_plotting.py	/^def test_cmap_list(sphere, verify_image_cache):$/;"	f
test_cmap_values_raises	tests/plotting/test_lookup_table.py	/^def test_cmap_values_raises():$/;"	f
test_coerce_point_like_arg	tests/core/test_utilities.py	/^def test_coerce_point_like_arg():$/;"	f
test_coerce_point_like_arg_copy	tests/core/test_utilities.py	/^def test_coerce_point_like_arg_copy():$/;"	f
test_coerce_point_like_arg_errors	tests/core/test_utilities.py	/^def test_coerce_point_like_arg_errors():$/;"	f
test_coerce_points_like_args_does_not_copy	tests/core/test_utilities.py	/^def test_coerce_points_like_args_does_not_copy():$/;"	f
test_collision	tests/core/test_dataset_filters.py	/^def test_collision(sphere):$/;"	f
test_collision_plot	tests/plotting/test_plotting.py	/^def test_collision_plot(verify_image_cache):$/;"	f
test_collision_solid_non_triangle	tests/core/test_dataset_filters.py	/^def test_collision_solid_non_triangle(hexbeam):$/;"	f
test_color	tests/plotting/mappers/test_composite_mapper.py	/^def test_color(block_attr):$/;"	f
test_color	tests/plotting/test_colors.py	/^def test_color():$/;"	f
test_color_cycler	tests/plotting/test_plotting.py	/^def test_color_cycler():$/;"	f
test_color_cycler_names	tests/plotting/test_plotting.py	/^def test_color_cycler_names(name):$/;"	f
test_color_cycler_true	tests/plotting/test_plotting.py	/^def test_color_cycler_true():$/;"	f
test_color_hls	tests/plotting/test_colors.py	/^def test_color_hls():$/;"	f
test_color_invalid_color	tests/plotting/test_colors.py	/^def test_color_invalid_color(color):$/;"	f
test_color_invalid_opacity	tests/plotting/test_colors.py	/^def test_color_invalid_opacity(opacity):$/;"	f
test_color_labels	tests/core/test_dataset_filters.py	/^def test_color_labels(uniform, coloring_mode):$/;"	f
test_color_labels_color_type_cmap	tests/core/test_dataset_filters.py	/^def test_color_labels_color_type_cmap(labeled_image, color_type):$/;"	f
test_color_labels_color_type_partial_dict	tests/core/test_dataset_filters.py	/^def test_color_labels_color_type_partial_dict(labeled_image, color_type):$/;"	f
test_color_labels_inputs	tests/core/test_dataset_filters.py	/^def test_color_labels_inputs(labeled_image, color_input, expected_rgb):$/;"	f
test_color_labels_invalid_input	tests/core/test_dataset_filters.py	/^def test_color_labels_invalid_input(uniform):$/;"	f
test_color_labels_negative_index	tests/core/test_dataset_filters.py	/^def test_color_labels_negative_index(labeled_image, negative_indexing, cmap_index):$/;"	f
test_color_labels_scalars	tests/core/test_dataset_filters.py	/^def test_color_labels_scalars(uniform):$/;"	f
test_color_missing_with_nan	tests/plotting/mappers/test_composite_mapper.py	/^def test_color_missing_with_nan(composite_mapper):$/;"	f
test_color_mode	tests/plotting/mappers/test_mapper.py	/^def test_color_mode(dataset_mapper):$/;"	f
test_color_name_delimiter	tests/plotting/test_colors.py	/^def test_color_name_delimiter(delimiter):$/;"	f
test_color_opacity	tests/plotting/test_colors.py	/^def test_color_opacity():$/;"	f
test_color_scheme_to_cycler_raises	tests/plotting/test_colors.py	/^def test_color_scheme_to_cycler_raises(scheme):$/;"	f
test_color_str	tests/plotting/test_theme.py	/^def test_color_str():$/;"	f
test_color_synonyms	tests/plotting/test_colors.py	/^def test_color_synonyms(color_synonym):$/;"	f
test_colorbar_eq	tests/plotting/test_theme.py	/^def test_colorbar_eq(default_theme):$/;"	f
test_colorbar_height	tests/plotting/test_theme.py	/^def test_colorbar_height(default_theme):$/;"	f
test_colorbar_position_x	tests/plotting/test_theme.py	/^def test_colorbar_position_x(default_theme):$/;"	f
test_colorbar_position_y	tests/plotting/test_theme.py	/^def test_colorbar_position_y(default_theme):$/;"	f
test_colorbar_width	tests/plotting/test_theme.py	/^def test_colorbar_width(default_theme):$/;"	f
test_colors	tests/plotting/test_lights.py	/^def test_colors():$/;"	f
test_combine_filter	tests/core/test_composite.py	/^def test_combine_filter(multiblock_all_with_nested_and_none):$/;"	f
test_common_plotting_import_paths	tests/namespace/test_plotting_namespace.py	/^def test_common_plotting_import_paths():$/;"	f
test_common_utilities_import_paths	tests/namespace/test_utilities_namespace.py	/^def test_common_utilities_import_paths():$/;"	f
test_commpare_images_raises	tests/plotting/test_regression.py	/^def test_commpare_images_raises(mocker: MockerFixture):$/;"	f
test_compare_images_two_plotter_different	tests/plotting/test_regression.py	/^def test_compare_images_two_plotter_different(sphere, airplane, tmpdir):$/;"	f
test_compare_images_two_plotters_same	tests/plotting/test_regression.py	/^def test_compare_images_two_plotters_same(sphere, tmpdir):$/;"	f
test_complex	tests/core/test_datasetattributes.py	/^def test_complex(plane, dtype_str):$/;"	f
test_complex_collection	tests/plotting/test_collection.py	/^def test_complex_collection(plane):$/;"	f
test_complex_raises	tests/core/test_datasetattributes.py	/^def test_complex_raises(plane):$/;"	f
test_composite_mapper_non_poly	tests/plotting/mappers/test_composite_mapper.py	/^def test_composite_mapper_non_poly(multiblock_all):$/;"	f
test_compute_boundary_mesh_quality	tests/core/test_dataset_filters.py	/^def test_compute_boundary_mesh_quality():$/;"	f
test_compute_bounds	tests/plotting/test_renderer.py	/^def test_compute_bounds(airplane):$/;"	f
test_compute_cell_quality	tests/core/test_dataobject_filters.py	/^def test_compute_cell_quality():$/;"	f
test_compute_cell_sizes	tests/core/test_dataobject_filters.py	/^def test_compute_cell_sizes(datasets):$/;"	f
test_compute_cell_sizes_composite	tests/core/test_dataobject_filters.py	/^def test_compute_cell_sizes_composite(multiblock_all):$/;"	f
test_compute_derivatives	tests/core/test_dataset_filters.py	/^def test_compute_derivatives(random_hills):$/;"	f
test_compute_normals	tests/core/test_composite.py	/^def test_compute_normals(multiblock_poly):$/;"	f
test_compute_normals	tests/core/test_polydata.py	/^def test_compute_normals(sphere):$/;"	f
test_compute_normals_inplace	tests/core/test_polydata.py	/^def test_compute_normals_inplace(sphere):$/;"	f
test_compute_normals_raises	tests/core/test_polydata.py	/^def test_compute_normals_raises(sphere):$/;"	f
test_compute_normals_split_vertices	tests/core/test_polydata.py	/^def test_compute_normals_split_vertices(cube):$/;"	f
test_concatenate_structured	tests/core/test_dataset_filters.py	/^def test_concatenate_structured($/;"	f
test_concatenate_structured_bad_dimensions	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_bad_dimensions(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_bad_inputs	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_bad_inputs(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_bad_point_data	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_bad_point_data(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_different_arrays	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_different_arrays(structured_grids_split_coincident):$/;"	f
test_concatenate_structured_disconnected	tests/core/test_dataset_filters.py	/^def test_concatenate_structured_disconnected(structured_grids_split_disconnected):$/;"	f
test_cone	tests/core/test_geometric_objects.py	/^def test_cone():$/;"	f
test_cone_source	tests/core/test_geometric_sources.py	/^def test_cone_source():$/;"	f
test_connectivity_all	tests/core/test_dataset_filters.py	/^def test_connectivity_all(foot_bones):$/;"	f
test_connectivity_cell_seed	tests/core/test_dataset_filters.py	/^def test_connectivity_cell_seed(foot_bones):$/;"	f
test_connectivity_closest_point	tests/core/test_dataset_filters.py	/^def test_connectivity_closest_point(foot_bones):$/;"	f
test_connectivity_inplace_and_output_type	tests/core/test_dataset_filters.py	/^def test_connectivity_inplace_and_output_type($/;"	f
test_connectivity_label_regions	tests/core/test_dataset_filters.py	/^def test_connectivity_label_regions(datasets, dataset_index, extraction_mode):$/;"	f
test_connectivity_largest	tests/core/test_dataset_filters.py	/^def test_connectivity_largest(foot_bones):$/;"	f
test_connectivity_point_seed	tests/core/test_dataset_filters.py	/^def test_connectivity_point_seed(foot_bones):$/;"	f
test_connectivity_raises	tests/core/test_dataset_filters.py	/^def test_connectivity_raises($/;"	f
test_connectivity_scalar_range	tests/core/test_dataset_filters.py	/^def test_connectivity_scalar_range($/;"	f
test_connectivity_specified	tests/core/test_dataset_filters.py	/^def test_connectivity_specified(foot_bones):$/;"	f
test_connectivity_specified_returns_empty	tests/core/test_dataset_filters.py	/^def test_connectivity_specified_returns_empty(connected_datasets, dataset_index):$/;"	f
test_contains_should_contain_when_added	tests/core/test_datasetattributes.py	/^def test_contains_should_contain_when_added(insert_arange_narray):$/;"	f
test_contour	tests/core/test_dataset_filters.py	/^def test_contour(uniform, method):$/;"	f
test_contour_banded_points	tests/core/test_polydata_filters.py	/^def test_contour_banded_points(sphere):$/;"	f
test_contour_banded_raise	tests/core/test_polydata_filters.py	/^def test_contour_banded_raise(sphere):$/;"	f
test_contour_banded_raises	tests/core/test_polydata_filters.py	/^def test_contour_banded_raises(mocker: MockerFixture):$/;"	f
test_contour_errors	tests/core/test_dataset_filters.py	/^def test_contour_errors(uniform, airplane):$/;"	f
test_contour_labeled	tests/core/test_imagedata_filters.py	/^def test_contour_labeled(frog_tissues):$/;"	f
test_contour_labeled_deprecated	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_deprecated():$/;"	f
test_contour_labeled_with_boundary_output_style	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_boundary_output_style(frog_tissues):$/;"	f
test_contour_labeled_with_invalid_output_mesh_type	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_invalid_output_mesh_type(frog_tissues):$/;"	f
test_contour_labeled_with_invalid_output_style	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_invalid_output_style(frog_tissues):$/;"	f
test_contour_labeled_with_invalid_scalars	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_invalid_scalars(frog_tissues):$/;"	f
test_contour_labeled_with_reduced_labels_count	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_reduced_labels_count(frog_tissues):$/;"	f
test_contour_labeled_with_scalars	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_scalars(frog_tissues):$/;"	f
test_contour_labeled_with_smoothing	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_smoothing(frog_tissues):$/;"	f
test_contour_labeled_with_triangle_output_mesh	tests/core/test_imagedata_filters.py	/^def test_contour_labeled_with_triangle_output_mesh(frog_tissues):$/;"	f
test_contour_labels_background_value	tests/core/test_imagedata_filters.py	/^def test_contour_labels_background_value(labeled_image, background_value):$/;"	f
test_contour_labels_boundary_style	tests/core/test_imagedata_filters.py	/^def test_contour_labels_boundary_style($/;"	f
test_contour_labels_boundary_style	tests/plotting/test_plotting.py	/^def test_contour_labels_boundary_style($/;"	f
test_contour_labels_cell_data	tests/core/test_imagedata_filters.py	/^def test_contour_labels_cell_data(channels):$/;"	f
test_contour_labels_compare_select_inputs_select_outputs	tests/plotting/test_plotting.py	/^def test_contour_labels_compare_select_inputs_select_outputs($/;"	f
test_contour_labels_orient_faces	tests/plotting/test_plotting.py	/^def test_contour_labels_orient_faces(labeled_image, orient_faces):  # noqa: F811$/;"	f
test_contour_labels_pad_background	tests/core/test_imagedata_filters.py	/^def test_contour_labels_pad_background(labeled_image):$/;"	f
test_contour_labels_raises	tests/core/test_imagedata_filters.py	/^def test_contour_labels_raises(labeled_image):$/;"	f
test_contour_labels_raises_vtkversionerror	tests/core/test_imagedata_filters.py	/^def test_contour_labels_raises_vtkversionerror():$/;"	f
test_contour_labels_scalars_smoothing_output_mesh_type	tests/core/test_imagedata_filters.py	/^def test_contour_labels_scalars_smoothing_output_mesh_type($/;"	f
test_contour_labels_simplify_output	tests/core/test_imagedata_filters.py	/^def test_contour_labels_simplify_output(labeled_image, boundary_type, simplify_output):$/;"	f
test_contour_labels_smoothing_constraint	tests/plotting/test_plotting.py	/^def test_contour_labels_smoothing_constraint($/;"	f
test_contour_labels_strict_external	tests/core/test_imagedata_filters.py	/^def test_contour_labels_strict_external(channels):$/;"	f
test_contour_raises	tests/core/test_dataset_filters.py	/^def test_contour_raises(mocker: MockerFixture):$/;"	f
test_convert_array	tests/core/test_utilities.py	/^def test_convert_array():$/;"	f
test_convert_array_raises	tests/core/test_utilities.py	/^def test_convert_array_raises():$/;"	f
test_convert_id_list	tests/core/test_utilities.py	/^def test_convert_id_list():$/;"	f
test_convert_orientation_to_rotation_matrix	tests/plotting/test_actor.py	/^def test_convert_orientation_to_rotation_matrix(order):$/;"	f
test_copies_are_not_associated	tests/core/test_pyvista_ndarray.py	/^def test_copies_are_not_associated():$/;"	f
test_copy	tests/core/test_dataset.py	/^def test_copy(grid):$/;"	f
test_copy	tests/plotting/mappers/test_mapper.py	/^def test_copy(dataset_mapper, sphere):$/;"	f
test_copy	tests/plotting/test_camera.py	/^def test_copy():$/;"	f
test_copy	tests/plotting/test_lights.py	/^def test_copy():$/;"	f
test_copy_attributes	tests/core/test_dataset.py	/^def test_copy_attributes(grid):$/;"	f
test_copy_metadata	tests/core/test_dataset.py	/^def test_copy_metadata(globe):$/;"	f
test_copy_no_copy_wrap_object	tests/core/test_grid.py	/^def test_copy_no_copy_wrap_object(datasets):$/;"	f
test_copy_no_copy_wrap_object_vtk9	tests/core/test_grid.py	/^def test_copy_no_copy_wrap_object_vtk9(datasets_vtk9):$/;"	f
test_copy_structure	tests/core/test_dataset.py	/^def test_copy_structure(grid):$/;"	f
test_copy_structure_self	tests/core/test_dataset.py	/^def test_copy_structure_self(datasets):$/;"	f
test_copy_vtk_array	tests/core/test_utilities.py	/^def test_copy_vtk_array():$/;"	f
test_core_errors_namespace	tests/namespace/test_errors_namespace.py	/^def test_core_errors_namespace(name):$/;"	f
test_corner_annotation_name	tests/plotting/test_text.py	/^def test_corner_annotation_name():$/;"	f
test_corner_annotation_prop	tests/plotting/test_text.py	/^def test_corner_annotation_prop(corner_annotation):$/;"	f
test_corner_annotation_text	tests/plotting/test_text.py	/^def test_corner_annotation_text(corner_annotation):$/;"	f
test_create_axes_orientation_box	tests/plotting/test_plotting.py	/^def test_create_axes_orientation_box():$/;"	f
test_create_grid_raises	tests/core/test_utilities.py	/^def test_create_grid_raises():$/;"	f
test_create_image_data_from_file	tests/core/test_grid.py	/^def test_create_image_data_from_file():$/;"	f
test_create_image_data_from_specs	tests/core/test_grid.py	/^def test_create_image_data_from_specs():$/;"	f
test_create_rectilinear_after_init	tests/core/test_grid.py	/^def test_create_rectilinear_after_init():$/;"	f
test_create_rectilinear_grid_from_file	tests/core/test_grid.py	/^def test_create_rectilinear_grid_from_file():$/;"	f
test_create_rectilinear_grid_from_specs	tests/core/test_grid.py	/^def test_create_rectilinear_grid_from_specs():$/;"	f
test_createvectorpolydata	tests/core/test_utilities.py	/^def test_createvectorpolydata():$/;"	f
test_createvectorpolydata_1D	tests/core/test_utilities.py	/^def test_createvectorpolydata_1D():$/;"	f
test_createvectorpolydata_error	tests/core/test_utilities.py	/^def test_createvectorpolydata_error():$/;"	f
test_css4_colors	tests/plotting/test_colors.py	/^def test_css4_colors(css4_color):$/;"	f
test_cube	tests/core/test_geometric_objects.py	/^def test_cube():$/;"	f
test_cube_axes_actor	tests/plotting/test_cube_axes_actor.py	/^def test_cube_axes_actor():$/;"	f
test_cube_faces_source	tests/core/test_geometric_sources.py	/^def test_cube_faces_source(cube_faces_source):$/;"	f
test_cube_faces_source	tests/plotting/test_plotting.py	/^def test_cube_faces_source(name, value):$/;"	f
test_cube_faces_source_frame	tests/core/test_geometric_sources.py	/^def test_cube_faces_source_frame(cube_faces_source):$/;"	f
test_cube_faces_source_output_bounds	tests/core/test_geometric_sources.py	/^def test_cube_faces_source_output_bounds(cube_faces_source, attr, value, face_name, bounds):$/;"	f
test_cube_faces_source_parent_attr	tests/core/test_geometric_sources.py	/^def test_cube_faces_source_parent_attr(name, value):$/;"	f
test_cube_faces_source_set_get_factor	tests/core/test_geometric_sources.py	/^def test_cube_faces_source_set_get_factor(attr):$/;"	f
test_cube_faces_source_update	tests/core/test_geometric_sources.py	/^def test_cube_faces_source_update(cube_faces_source):$/;"	f
test_cube_point_dtype	tests/core/test_geometric_objects.py	/^def test_cube_point_dtype(point_dtype):$/;"	f
test_cube_source	tests/core/test_geometric_sources.py	/^def test_cube_source():$/;"	f
test_cubic_line	tests/examples/test_cell_examples.py	/^def test_cubic_line():$/;"	f
test_culling_frontface	tests/plotting/test_plotting.py	/^def test_culling_frontface(sphere):$/;"	f
test_curvature	tests/core/test_polydata.py	/^def test_curvature(sphere, curv_type):$/;"	f
test_custom_opacity	tests/plotting/test_lookup_table.py	/^def test_custom_opacity(lut, skip_check_gc):$/;"	f
test_cylinder	tests/core/test_geometric_objects.py	/^def test_cylinder():$/;"	f
test_cylinder_capsule_cap	tests/core/test_geometric_sources.py	/^def test_cylinder_capsule_cap():$/;"	f
test_cylinder_source	tests/core/test_geometric_sources.py	/^def test_cylinder_source():$/;"	f
test_cylinder_structured	tests/core/test_geometric_objects.py	/^def test_cylinder_structured():$/;"	f
test_dataset_loader_cubemap	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_cubemap(dataset_loader_cubemap):$/;"	f
test_dataset_loader_dicom	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_dicom(dataset_loader_dicom):$/;"	f
test_dataset_loader_from_nested_files_and_directory	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_from_nested_files_and_directory($/;"	f
test_dataset_loader_from_nested_multiblock	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_from_nested_multiblock(dataset_loader_nested_multiblock):$/;"	f
test_dataset_loader_name_matches_download_name	tests/examples/test_downloads.py	/^def test_dataset_loader_name_matches_download_name(test_case: DatasetLoaderTestCase):$/;"	f
test_dataset_loader_name_matches_function_name	tests/examples/test_examples.py	/^def test_dataset_loader_name_matches_function_name(test_case: DatasetLoaderTestCase):$/;"	f
test_dataset_loader_one_file	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_one_file(dataset_loader_one_file):$/;"	f
test_dataset_loader_one_file_local	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_one_file_local(dataset_loader_one_file_local):$/;"	f
test_dataset_loader_source_url_blob	tests/examples/test_downloads.py	/^def test_dataset_loader_source_url_blob(test_case: DatasetLoaderTestCase):$/;"	f
test_dataset_loader_two_files_both_loadable	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_two_files_both_loadable(dataset_loader_two_files_both_loadable):$/;"	f
test_dataset_loader_two_files_one_loadable	tests/examples/test_dataset_loader.py	/^def test_dataset_loader_two_files_one_loadable(dataset_loader_two_files_one_loadable):$/;"	f
test_datasetfilters_init	tests/core/test_dataset_filters.py	/^def test_datasetfilters_init():$/;"	f
test_dcmreader	tests/core/test_reader.py	/^def test_dcmreader(tmpdir):$/;"	f
test_decimate	tests/core/test_polydata.py	/^def test_decimate(sphere):$/;"	f
test_decimate_boundary	tests/core/test_dataset_filters.py	/^def test_decimate_boundary():$/;"	f
test_decimate_polyline	tests/core/test_polydata_filters.py	/^def test_decimate_polyline(poly_circle):$/;"	f
test_decimate_polyline_inplace	tests/core/test_polydata_filters.py	/^def test_decimate_polyline_inplace(poly_circle):$/;"	f
test_decimate_polyline_maximum_error	tests/core/test_polydata_filters.py	/^def test_decimate_polyline_maximum_error(poly_circle):$/;"	f
test_decimate_pro	tests/core/test_polydata.py	/^def test_decimate_pro(sphere):$/;"	f
test_deep_clean	tests/plotting/test_plotter.py	/^def test_deep_clean(cube):$/;"	f
test_deep_deprecated	tests/core/test_cells.py	/^def test_deep_deprecated(deep: bool):$/;"	f
test_default_name_tracking	tests/plotting/test_plotting.py	/^def test_default_name_tracking():$/;"	f
test_default_pickle_format	tests/core/test_dataobject.py	/^def test_default_pickle_format():$/;"	f
test_del_should_fail_bad_argument	tests/core/test_datasetattributes.py	/^def test_del_should_fail_bad_argument(removed_key, hexbeam_point_attributes):$/;"	f
test_del_slice	tests/core/test_composite.py	/^def test_del_slice(sphere):$/;"	f
test_del_slice	tests/core/test_partitioned.py	/^def test_del_slice(sphere):$/;"	f
test_delaunay_2d	tests/core/test_polydata.py	/^def test_delaunay_2d():$/;"	f
test_delaunay_2d_unstructured	tests/core/test_dataset_filters.py	/^def test_delaunay_2d_unstructured(datasets):$/;"	f
test_delaunay_3d	tests/core/test_dataset_filters.py	/^def test_delaunay_3d():$/;"	f
test_delaunay_3d	tests/core/test_pointset.py	/^def test_delaunay_3d(pointset):$/;"	f
test_delete_downloads	tests/examples/test_downloads.py	/^def test_delete_downloads(tmpdir):$/;"	f
test_delete_downloads_does_not_exist	tests/examples/test_downloads.py	/^def test_delete_downloads_does_not_exist(tmpdir):$/;"	f
test_demreader	tests/core/test_reader.py	/^def test_demreader():$/;"	f
test_depth_of_field	tests/plotting/test_plotting.py	/^def test_depth_of_field():$/;"	f
test_depth_of_field_pass	tests/plotting/test_render_pass.py	/^def test_depth_of_field_pass():$/;"	f
test_depth_of_field_raise_no_ssao	tests/plotting/test_render_pass.py	/^def test_depth_of_field_raise_no_ssao():$/;"	f
test_depth_peeling_config	tests/plotting/test_theme.py	/^def test_depth_peeling_config(default_theme, parm):$/;"	f
test_depth_peeling_eq	tests/plotting/test_theme.py	/^def test_depth_peeling_eq(default_theme):$/;"	f
test_depth_silhouette_eq	tests/plotting/test_theme.py	/^def test_depth_silhouette_eq(default_theme):$/;"	f
test_depth_silhouette_opacity_outside_clamp	tests/plotting/test_theme.py	/^def test_depth_silhouette_opacity_outside_clamp(default_theme):$/;"	f
test_destructor	tests/core/test_grid.py	/^def test_destructor():$/;"	f
test_dict	tests/plotting/test_scalar_bars.py	/^def test_dict(scalar_bars):$/;"	f
test_direction	tests/core/test_parametric_geometry.py	/^def test_direction():$/;"	f
test_direction	tests/plotting/test_camera.py	/^def test_direction(camera):$/;"	f
test_direction_objects	tests/plotting/test_plotting.py	/^def test_direction_objects(direction_obj_test_case):$/;"	f
test_disable_depth_of_field	tests/plotting/test_plotter.py	/^def test_disable_depth_of_field(sphere):$/;"	f
test_disable_hidden_line_removal	tests/plotting/test_plotter.py	/^def test_disable_hidden_line_removal():$/;"	f
test_disable_parallel_projection	tests/plotting/test_camera.py	/^def test_disable_parallel_projection(camera):$/;"	f
test_disable_picking	tests/plotting/test_picking.py	/^def test_disable_picking(sphere, left_clicking):$/;"	f
test_disable_stereo_render	tests/plotting/test_plotting.py	/^def test_disable_stereo_render():$/;"	f
test_disc	tests/core/test_geometric_objects.py	/^def test_disc():$/;"	f
test_disc_source	tests/core/test_geometric_sources.py	/^def test_disc_source():$/;"	f
test_distance	tests/plotting/test_camera.py	/^def test_distance(camera):$/;"	f
test_do_not_set_attributes	tests/plotting/mappers/test_mapper.py	/^def test_do_not_set_attributes(dataset_mapper):$/;"	f
test_dodecahedron	tests/core/test_geometric_objects.py	/^def test_dodecahedron():$/;"	f
test_download_action_figure	tests/examples/test_download_files.py	/^def test_download_action_figure():$/;"	f
test_download_aero_bracket	tests/examples/test_download_files.py	/^def test_download_aero_bracket():$/;"	f
test_download_angular_sector	tests/examples/test_download_files.py	/^def test_download_angular_sector():$/;"	f
test_download_antarctica_velocity	tests/examples/test_download_files.py	/^def test_download_antarctica_velocity():$/;"	f
test_download_armadillo	tests/examples/test_download_files.py	/^def test_download_armadillo():$/;"	f
test_download_backward_facing_step	tests/examples/test_download_files.py	/^def test_download_backward_facing_step():$/;"	f
test_download_beach	tests/examples/test_download_files.py	/^def test_download_beach():$/;"	f
test_download_biplane	tests/examples/test_download_files.py	/^def test_download_biplane():$/;"	f
test_download_bird	tests/examples/test_download_files.py	/^def test_download_bird():$/;"	f
test_download_bird_bath	tests/examples/test_download_files.py	/^def test_download_bird_bath():$/;"	f
test_download_bird_texture	tests/examples/test_download_files.py	/^def test_download_bird_texture():$/;"	f
test_download_black_vase	tests/examples/test_download_files.py	/^def test_download_black_vase():$/;"	f
test_download_blood_vessels	tests/examples/test_download_files.py	/^def test_download_blood_vessels():$/;"	f
test_download_blow	tests/examples/test_download_files.py	/^def test_download_blow():$/;"	f
test_download_bolt_nut	tests/examples/test_download_files.py	/^def test_download_bolt_nut():$/;"	f
test_download_brain	tests/examples/test_download_files.py	/^def test_download_brain():$/;"	f
test_download_bunny	tests/examples/test_download_files.py	/^def test_download_bunny():$/;"	f
test_download_bunny_coarse	tests/examples/test_download_files.py	/^def test_download_bunny_coarse():$/;"	f
test_download_cad_model	tests/examples/test_download_files.py	/^def test_download_cad_model():$/;"	f
test_download_cad_model_case	tests/examples/test_download_files.py	/^def test_download_cad_model_case():$/;"	f
test_download_cake_easy	tests/examples/test_download_files.py	/^def test_download_cake_easy():$/;"	f
test_download_cake_easy_texture	tests/examples/test_download_files.py	/^def test_download_cake_easy_texture():$/;"	f
test_download_can_crushed_hdf	tests/examples/test_download_files.py	/^def test_download_can_crushed_hdf():$/;"	f
test_download_can_crushed_vtu	tests/examples/test_download_files.py	/^def test_download_can_crushed_vtu():$/;"	f
test_download_carotid	tests/examples/test_download_files.py	/^def test_download_carotid():$/;"	f
test_download_cavity	tests/examples/test_download_files.py	/^def test_download_cavity():$/;"	f
test_download_cells_nd	tests/examples/test_download_files.py	/^def test_download_cells_nd():$/;"	f
test_download_cgns_multi	tests/examples/test_download_files.py	/^def test_download_cgns_multi():$/;"	f
test_download_cgns_structured	tests/examples/test_download_files.py	/^def test_download_cgns_structured():$/;"	f
test_download_chest	tests/examples/test_download_files.py	/^def test_download_chest():$/;"	f
test_download_cloud_dark_matter	tests/examples/test_download_files.py	/^def test_download_cloud_dark_matter():$/;"	f
test_download_cloud_dark_matter_dense	tests/examples/test_download_files.py	/^def test_download_cloud_dark_matter_dense():$/;"	f
test_download_clown	tests/examples/test_download_files.py	/^def test_download_clown():$/;"	f
test_download_coastlines	tests/examples/test_download_files.py	/^def test_download_coastlines():$/;"	f
test_download_coil_magnetic_field	tests/examples/test_download_files.py	/^def test_download_coil_magnetic_field():$/;"	f
test_download_cow	tests/examples/test_download_files.py	/^def test_download_cow():$/;"	f
test_download_cow_head	tests/examples/test_download_files.py	/^def test_download_cow_head():$/;"	f
test_download_crater_imagery	tests/examples/test_download_files.py	/^def test_download_crater_imagery():$/;"	f
test_download_crater_topo	tests/examples/test_download_files.py	/^def test_download_crater_topo():$/;"	f
test_download_cubemap_park	tests/examples/test_download_files.py	/^def test_download_cubemap_park():$/;"	f
test_download_cubemap_space_16k	tests/examples/test_download_files.py	/^def test_download_cubemap_space_16k():$/;"	f
test_download_cubemap_space_4k	tests/examples/test_download_files.py	/^def test_download_cubemap_space_4k():$/;"	f
test_download_cylinder_crossflow	tests/examples/test_download_files.py	/^def test_download_cylinder_crossflow():$/;"	f
test_download_damavand_volcano	tests/examples/test_download_files.py	/^def test_download_damavand_volcano():$/;"	f
test_download_dataset_texture	tests/examples/test_dataset_loader.py	/^def test_download_dataset_texture():$/;"	f
test_download_delaunay_example	tests/examples/test_download_files.py	/^def test_download_delaunay_example():$/;"	f
test_download_dicom_stack	tests/examples/test_download_files.py	/^def test_download_dicom_stack():$/;"	f
test_download_disc_quads	tests/examples/test_download_files.py	/^def test_download_disc_quads():$/;"	f
test_download_dolfin	tests/examples/test_download_files.py	/^def test_download_dolfin():$/;"	f
test_download_doorman	tests/examples/test_download_files.py	/^def test_download_doorman():$/;"	f
test_download_dragon	tests/examples/test_download_files.py	/^def test_download_dragon():$/;"	f
test_download_drill	tests/examples/test_download_files.py	/^def test_download_drill():$/;"	f
test_download_dual_sphere_animation	tests/examples/test_download_files.py	/^def test_download_dual_sphere_animation():$/;"	f
test_download_electronics_cooling	tests/examples/test_download_files.py	/^def test_download_electronics_cooling():$/;"	f
test_download_embryo	tests/examples/test_download_files.py	/^def test_download_embryo():$/;"	f
test_download_emoji	tests/examples/test_download_files.py	/^def test_download_emoji():$/;"	f
test_download_emoji_texture	tests/examples/test_download_files.py	/^def test_download_emoji_texture():$/;"	f
test_download_exodus	tests/examples/test_download_files.py	/^def test_download_exodus():$/;"	f
test_download_face	tests/examples/test_download_files.py	/^def test_download_face():$/;"	f
test_download_face2	tests/examples/test_download_files.py	/^def test_download_face2():$/;"	f
test_download_faults	tests/examples/test_download_files.py	/^def test_download_faults():$/;"	f
test_download_fea_hertzian_contact_cylinder	tests/examples/test_download_files.py	/^def test_download_fea_hertzian_contact_cylinder():$/;"	f
test_download_filled_contours	tests/examples/test_download_files.py	/^def test_download_filled_contours():$/;"	f
test_download_foot_bones	tests/examples/test_download_files.py	/^def test_download_foot_bones():$/;"	f
test_download_frog	tests/examples/test_download_files.py	/^def test_download_frog():$/;"	f
test_download_gears	tests/examples/test_download_files.py	/^def test_download_gears():$/;"	f
test_download_gif_simple	tests/examples/test_download_files.py	/^def test_download_gif_simple():$/;"	f
test_download_gltf_avocado	tests/examples/test_download_files.py	/^def test_download_gltf_avocado():$/;"	f
test_download_gltf_damaged_helmet	tests/examples/test_download_files.py	/^def test_download_gltf_damaged_helmet():$/;"	f
test_download_gltf_gearbox	tests/examples/test_download_files.py	/^def test_download_gltf_gearbox():$/;"	f
test_download_gltf_milk_truck	tests/examples/test_download_files.py	/^def test_download_gltf_milk_truck():$/;"	f
test_download_gltf_sheen_chair	tests/examples/test_download_files.py	/^def test_download_gltf_sheen_chair():$/;"	f
test_download_gourds	tests/examples/test_download_files.py	/^def test_download_gourds():$/;"	f
test_download_gourds_pnm	tests/examples/test_download_files.py	/^def test_download_gourds_pnm():$/;"	f
test_download_gourds_texture	tests/examples/test_download_files.py	/^def test_download_gourds_texture():$/;"	f
test_download_gpr_data_array	tests/examples/test_download_files.py	/^def test_download_gpr_data_array():$/;"	f
test_download_gpr_path	tests/examples/test_download_files.py	/^def test_download_gpr_path():$/;"	f
test_download_guitar	tests/examples/test_download_files.py	/^def test_download_guitar():$/;"	f
test_download_head	tests/examples/test_download_files.py	/^def test_download_head():$/;"	f
test_download_honolulu	tests/examples/test_download_files.py	/^def test_download_honolulu():$/;"	f
test_download_horse	tests/examples/test_download_files.py	/^def test_download_horse():$/;"	f
test_download_horse_points	tests/examples/test_download_files.py	/^def test_download_horse_points():$/;"	f
test_download_human	tests/examples/test_download_files.py	/^def test_download_human():$/;"	f
test_download_iron_protein	tests/examples/test_download_files.py	/^def test_download_iron_protein():$/;"	f
test_download_ivan_angel	tests/examples/test_download_files.py	/^def test_download_ivan_angel():$/;"	f
test_download_kitchen	tests/examples/test_download_files.py	/^def test_download_kitchen():$/;"	f
test_download_kitchen_split	tests/examples/test_download_files.py	/^def test_download_kitchen_split():$/;"	f
test_download_knee	tests/examples/test_download_files.py	/^def test_download_knee():$/;"	f
test_download_knee_full	tests/examples/test_download_files.py	/^def test_download_knee_full():$/;"	f
test_download_letter_a	tests/examples/test_download_files.py	/^def test_download_letter_a():$/;"	f
test_download_letter_k	tests/examples/test_download_files.py	/^def test_download_letter_k():$/;"	f
test_download_lidar	tests/examples/test_download_files.py	/^def test_download_lidar():$/;"	f
test_download_lobster	tests/examples/test_download_files.py	/^def test_download_lobster():$/;"	f
test_download_louis_louvre	tests/examples/test_download_files.py	/^def test_download_louis_louvre():$/;"	f
test_download_lshape	tests/examples/test_download_files.py	/^def test_download_lshape():$/;"	f
test_download_lucy	tests/examples/test_download_files.py	/^def test_download_lucy():$/;"	f
test_download_masonry_texture	tests/examples/test_download_files.py	/^def test_download_masonry_texture():$/;"	f
test_download_meshio_xdmf	tests/examples/test_download_files.py	/^def test_download_meshio_xdmf():$/;"	f
test_download_model_with_variance	tests/examples/test_download_files.py	/^def test_download_model_with_variance():$/;"	f
test_download_moonlanding_image	tests/examples/test_download_files.py	/^def test_download_moonlanding_image():$/;"	f
test_download_motor	tests/examples/test_download_files.py	/^def test_download_motor():$/;"	f
test_download_mount_damavand	tests/examples/test_download_files.py	/^def test_download_mount_damavand():$/;"	f
test_download_mug	tests/examples/test_download_files.py	/^def test_download_mug():$/;"	f
test_download_naca	tests/examples/test_download_files.py	/^def test_download_naca():$/;"	f
test_download_nefertiti	tests/examples/test_download_files.py	/^def test_download_nefertiti():$/;"	f
test_download_nek5000	tests/examples/test_download_files.py	/^def test_download_nek5000():$/;"	f
test_download_notch_displacement	tests/examples/test_download_files.py	/^def test_download_notch_displacement():$/;"	f
test_download_notch_stress	tests/examples/test_download_files.py	/^def test_download_notch_stress():$/;"	f
test_download_oblique_cone	tests/examples/test_download_files.py	/^def test_download_oblique_cone():$/;"	f
test_download_office	tests/examples/test_download_files.py	/^def test_download_office():$/;"	f
test_download_openfoam_tubes	tests/examples/test_download_files.py	/^def test_download_openfoam_tubes():$/;"	f
test_download_owl	tests/examples/test_download_files.py	/^def test_download_owl():$/;"	f
test_download_parched_canal_4k	tests/examples/test_download_files.py	/^def test_download_parched_canal_4k():$/;"	f
test_download_particles_lethe	tests/examples/test_download_files.py	/^def test_download_particles_lethe():$/;"	f
test_download_pepper	tests/examples/test_download_files.py	/^def test_download_pepper():$/;"	f
test_download_pine_roots	tests/examples/test_download_files.py	/^def test_download_pine_roots():$/;"	f
test_download_plastic_vase	tests/examples/test_download_files.py	/^def test_download_plastic_vase():$/;"	f
test_download_poly_line	tests/examples/test_download_files.py	/^def test_download_poly_line():$/;"	f
test_download_prostate	tests/examples/test_download_files.py	/^def test_download_prostate():$/;"	f
test_download_pump_bracket	tests/examples/test_download_files.py	/^def test_download_pump_bracket():$/;"	f
test_download_puppy	tests/examples/test_download_files.py	/^def test_download_puppy():$/;"	f
test_download_puppy_texture	tests/examples/test_download_files.py	/^def test_download_puppy_texture():$/;"	f
test_download_quadratic_pyramid	tests/examples/test_download_files.py	/^def test_download_quadratic_pyramid():$/;"	f
test_download_rectilinear_grid	tests/examples/test_download_files.py	/^def test_download_rectilinear_grid():$/;"	f
test_download_rgba_texture	tests/examples/test_download_files.py	/^def test_download_rgba_texture():$/;"	f
test_download_room_surface_mesh	tests/examples/test_download_files.py	/^def test_download_room_surface_mesh():$/;"	f
test_download_saddle_surface	tests/examples/test_download_files.py	/^def test_download_saddle_surface():$/;"	f
test_download_sea_vase	tests/examples/test_download_files.py	/^def test_download_sea_vase():$/;"	f
test_download_sextant_vrml	tests/examples/test_download_files.py	/^def test_download_sextant_vrml():$/;"	f
test_download_shark	tests/examples/test_download_files.py	/^def test_download_shark():$/;"	f
test_download_single_sphere_animation	tests/examples/test_download_files.py	/^def test_download_single_sphere_animation():$/;"	f
test_download_sky_box_nz	tests/examples/test_download_files.py	/^def test_download_sky_box_nz():$/;"	f
test_download_sky_box_nz_texture	tests/examples/test_download_files.py	/^def test_download_sky_box_nz_texture():$/;"	f
test_download_sparse_points	tests/examples/test_download_files.py	/^def test_download_sparse_points():$/;"	f
test_download_spider	tests/examples/test_download_files.py	/^def test_download_spider():$/;"	f
test_download_st_helens	tests/examples/test_download_files.py	/^def test_download_st_helens():$/;"	f
test_download_stars_cloud_hyg	tests/examples/test_download_files.py	/^def test_download_stars_cloud_hyg():$/;"	f
test_download_structured_grid	tests/examples/test_download_files.py	/^def test_download_structured_grid():$/;"	f
test_download_structured_grid_two	tests/examples/test_download_files.py	/^def test_download_structured_grid_two():$/;"	f
test_download_teapot	tests/examples/test_download_files.py	/^def test_download_teapot():$/;"	f
test_download_teapot_vrml	tests/examples/test_download_files.py	/^def test_download_teapot_vrml():$/;"	f
test_download_tecplot_ascii	tests/examples/test_download_files.py	/^def test_download_tecplot_ascii():$/;"	f
test_download_tensors	tests/examples/test_download_files.py	/^def test_download_tensors():$/;"	f
test_download_tetra_dc_mesh	tests/examples/test_download_files.py	/^def test_download_tetra_dc_mesh():$/;"	f
test_download_tetrahedron	tests/examples/test_download_files.py	/^def test_download_tetrahedron():$/;"	f
test_download_thermal_probes	tests/examples/test_download_files.py	/^def test_download_thermal_probes():$/;"	f
test_download_topo_global	tests/examples/test_download_files.py	/^def test_download_topo_global():$/;"	f
test_download_topo_land	tests/examples/test_download_files.py	/^def test_download_topo_land():$/;"	f
test_download_torso	tests/examples/test_download_files.py	/^def test_download_torso():$/;"	f
test_download_tri_quadratic_hexahedron	tests/examples/test_download_files.py	/^def test_download_tri_quadratic_hexahedron():$/;"	f
test_download_trumpet	tests/examples/test_download_files.py	/^def test_download_trumpet():$/;"	f
test_download_turbine_blade	tests/examples/test_download_files.py	/^def test_download_turbine_blade():$/;"	f
test_download_unstructured_grid	tests/examples/test_download_files.py	/^def test_download_unstructured_grid():$/;"	f
test_download_urn	tests/examples/test_download_files.py	/^def test_download_urn():$/;"	f
test_download_usa	tests/examples/test_download_files.py	/^def test_download_usa():$/;"	f
test_download_usa_texture	tests/examples/test_download_files.py	/^def test_download_usa_texture():$/;"	f
test_download_vtk	tests/examples/test_download_files.py	/^def test_download_vtk():$/;"	f
test_download_vtk_logo	tests/examples/test_download_files.py	/^def test_download_vtk_logo():$/;"	f
test_download_wavy	tests/examples/test_download_files.py	/^def test_download_wavy():$/;"	f
test_download_woman	tests/examples/test_download_files.py	/^def test_download_woman():$/;"	f
test_downloads_mark	tests/test_conftest.py	/^def test_downloads_mark($/;"	f
test_edge_mask	tests/core/test_polydata.py	/^def test_edge_mask(sphere):$/;"	f
test_edge_opacity	tests/plotting/test_plotter.py	/^def test_edge_opacity(sphere):$/;"	f
test_edl_pass	tests/plotting/test_render_pass.py	/^def test_edl_pass():$/;"	f
test_element_picking	tests/plotting/test_picking.py	/^def test_element_picking(mode):$/;"	f
test_elevation	tests/core/test_dataobject_filters.py	/^def test_elevation(uniform):$/;"	f
test_elevation	tests/plotting/test_camera.py	/^def test_elevation(camera):$/;"	f
test_elevation_composite	tests/core/test_dataobject_filters.py	/^def test_elevation_composite(multiblock_all):$/;"	f
test_ellipse	tests/core/test_geometric_objects.py	/^def test_ellipse():$/;"	f
test_embeddable_widget	tests/plotting/jupyter/test_trame.py	/^def test_embeddable_widget(skip_check_gc):$/;"	f
test_emissive	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_emissive(mapper):$/;"	f
test_empty	tests/examples/test_cell_examples.py	/^def test_empty():$/;"	f
test_empty_active_vectors	tests/core/test_datasetattributes.py	/^def test_empty_active_vectors(hexbeam):$/;"	f
test_empty_irregular_faces	tests/core/test_polydata.py	/^def test_empty_irregular_faces():$/;"	f
test_empty_points	tests/core/test_dataset.py	/^def test_empty_points():$/;"	f
test_empty_regular_faces	tests/core/test_polydata.py	/^def test_empty_regular_faces():$/;"	f
test_enable_2d_style	tests/plotting/test_render_window_interactor.py	/^def test_enable_2d_style():$/;"	f
test_enable_antialising_raises	tests/plotting/test_renderer.py	/^def test_enable_antialising_raises(aa_type):$/;"	f
test_enable_custom_trackball_style	tests/plotting/test_plotting.py	/^def test_enable_custom_trackball_style():$/;"	f
test_enable_custom_trackball_style	tests/plotting/test_render_window_interactor.py	/^def test_enable_custom_trackball_style():$/;"	f
test_enable_hidden_line_removal	tests/plotting/test_plotter.py	/^def test_enable_hidden_line_removal():$/;"	f
test_enable_parallel_projection	tests/plotting/test_camera.py	/^def test_enable_parallel_projection(camera):$/;"	f
test_enable_picking_gc	tests/plotting/test_plotting.py	/^def test_enable_picking_gc():$/;"	f
test_enable_stereo_render	tests/plotting/test_plotting.py	/^def test_enable_stereo_render(verify_image_cache):$/;"	f
test_ensight_multi_block_io	tests/core/test_composite.py	/^def test_ensight_multi_block_io(extension, binary, tmpdir):$/;"	f
test_ensightreader_arrays	tests/core/test_reader.py	/^def test_ensightreader_arrays():$/;"	f
test_ensightreader_time_sets	tests/core/test_reader.py	/^def test_ensightreader_time_sets():$/;"	f
test_ensightreader_timepoints	tests/core/test_reader.py	/^def test_ensightreader_timepoints():$/;"	f
test_eq	tests/core/test_datasetattributes.py	/^def test_eq(sphere):$/;"	f
test_eq	tests/plotting/test_camera.py	/^def test_eq():$/;"	f
test_eq	tests/plotting/test_lights.py	/^def test_eq():$/;"	f
test_eq_wrong_type	tests/core/test_dataobject.py	/^def test_eq_wrong_type(sphere):$/;"	f
test_exodus_blocks	tests/core/test_reader.py	/^def test_exodus_blocks():$/;"	f
test_exodus_reader_core	tests/core/test_reader.py	/^def test_exodus_reader_core():$/;"	f
test_exodus_reader_ext	tests/core/test_reader.py	/^def test_exodus_reader_ext():$/;"	f
test_explode	tests/core/test_dataset.py	/^def test_explode(datasets):$/;"	f
test_explode	tests/core/test_pointset.py	/^def test_explode(pointset):$/;"	f
test_export_color	tests/plotting/jupyter/test_trame.py	/^def test_export_color(tmpdir, skip_check_gc):$/;"	f
test_export_gltf	tests/plotting/test_plotting.py	/^def test_export_gltf(tmpdir, sphere, airplane, hexbeam, verify_image_cache):$/;"	f
test_export_multi	tests/plotting/jupyter/test_trame.py	/^def test_export_multi(tmpdir, skip_check_gc):$/;"	f
test_export_obj	tests/plotting/test_plotting.py	/^def test_export_obj(tmpdir, sphere):$/;"	f
test_export_single	tests/plotting/jupyter/test_trame.py	/^def test_export_single(tmpdir, skip_check_gc):$/;"	f
test_export_texture	tests/plotting/jupyter/test_trame.py	/^def test_export_texture(tmpdir, skip_check_gc):$/;"	f
test_export_verts	tests/plotting/jupyter/test_trame.py	/^def test_export_verts(tmpdir, skip_check_gc):$/;"	f
test_export_vrml	tests/plotting/test_plotting.py	/^def test_export_vrml(tmpdir, sphere, airplane, hexbeam):$/;"	f
test_extend	tests/core/test_composite.py	/^def test_extend(sphere, uniform, ant):$/;"	f
test_extract_all_edges	tests/core/test_dataobject_filters.py	/^def test_extract_all_edges(datasets):$/;"	f
test_extract_all_edges_composite	tests/core/test_dataobject_filters.py	/^def test_extract_all_edges_composite(multiblock_all):$/;"	f
test_extract_all_edges_no_data	tests/core/test_dataobject_filters.py	/^def test_extract_all_edges_no_data():$/;"	f
test_extract_cells	tests/core/test_grid.py	/^def test_extract_cells(hexbeam, invert):$/;"	f
test_extract_cells_by_type	tests/core/test_dataset_filters.py	/^def test_extract_cells_by_type(tetbeam, hexbeam):$/;"	f
test_extract_feature_edges	tests/core/test_grid.py	/^def test_extract_feature_edges(hexbeam):$/;"	f
test_extract_feature_edges	tests/core/test_polydata.py	/^def test_extract_feature_edges(sphere):$/;"	f
test_extract_feature_edges_no_data	tests/core/test_polydata.py	/^def test_extract_feature_edges_no_data():$/;"	f
test_extract_geometry	tests/core/test_composite.py	/^def test_extract_geometry(multiblock_all_with_nested_and_none):$/;"	f
test_extract_geometry	tests/core/test_dataset_filters.py	/^def test_extract_geometry(datasets, multiblock_all):$/;"	f
test_extract_geometry_extent	tests/core/test_dataset_filters.py	/^def test_extract_geometry_extent(uniform):$/;"	f
test_extract_largest	tests/core/test_polydata.py	/^def test_extract_largest(sphere):$/;"	f
test_extract_points_adjacent_cells_False	tests/core/test_dataset_filters.py	/^def test_extract_points_adjacent_cells_False(dataset_filter, extracted_with_adjacent_False):$/;"	f
test_extract_points_adjacent_cells_True	tests/core/test_dataset_filters.py	/^def test_extract_points_adjacent_cells_True(dataset_filter, extracted_with_adjacent_True):$/;"	f
test_extract_points_default	tests/core/test_dataset_filters.py	/^def test_extract_points_default(extracted_with_adjacent_True):$/;"	f
test_extract_points_include_cells_False	tests/core/test_dataset_filters.py	/^def test_extract_points_include_cells_False($/;"	f
test_extract_subset	tests/core/test_dataset_filters.py	/^def test_extract_subset():$/;"	f
test_extract_subset_structured	tests/core/test_dataset_filters.py	/^def test_extract_subset_structured():$/;"	f
test_extract_surface	tests/core/test_dataset_filters.py	/^def test_extract_surface():$/;"	f
test_extract_values_component_mode	tests/core/test_dataset_filters.py	/^def test_extract_values_component_mode($/;"	f
test_extract_values_component_values_split_unique	tests/core/test_dataset_filters.py	/^def test_extract_values_component_values_split_unique($/;"	f
test_extract_values_dict_input	tests/core/test_dataset_filters.py	/^def test_extract_values_dict_input(labeled_data, dict_inputs, block_names):$/;"	f
test_extract_values_empty	tests/core/test_dataset_filters.py	/^def test_extract_values_empty():$/;"	f
test_extract_values_input_values_and_invert	tests/core/test_dataset_filters.py	/^def test_extract_values_input_values_and_invert(preference, values, invert, grid4x4):$/;"	f
test_extract_values_open_intervals	tests/core/test_dataset_filters.py	/^def test_extract_values_open_intervals(grid4x4):$/;"	f
test_extract_values_pass_ids	tests/core/test_dataset_filters.py	/^def test_extract_values_pass_ids(grid4x4, pass_point_ids, pass_cell_ids):$/;"	f
test_extract_values_preference	tests/core/test_dataset_filters.py	/^def test_extract_values_preference($/;"	f
test_extract_values_raises	tests/core/test_dataset_filters.py	/^def test_extract_values_raises(grid4x4):$/;"	f
test_extract_values_split_ranges_values	tests/core/test_dataset_filters.py	/^def test_extract_values_split_ranges_values(labeled_data):$/;"	f
test_extrude	tests/core/test_polydata.py	/^def test_extrude():$/;"	f
test_extrude_capping_warnings	tests/core/test_polydata.py	/^def test_extrude_capping_warnings():$/;"	f
test_extrude_rotate	tests/core/test_dataset_filters.py	/^def test_extrude_rotate():$/;"	f
test_extrude_rotate_inplace	tests/core/test_dataset_filters.py	/^def test_extrude_rotate_inplace():$/;"	f
test_extrude_trim	tests/core/test_dataset_filters.py	/^def test_extrude_trim():$/;"	f
test_extrude_trim_catch	tests/core/test_dataset_filters.py	/^def test_extrude_trim_catch():$/;"	f
test_extrude_trim_inplace	tests/core/test_dataset_filters.py	/^def test_extrude_trim_inplace():$/;"	f
test_extrude_trim_strategy	tests/core/test_dataset_filters.py	/^def test_extrude_trim_strategy(extrusion, capping):$/;"	f
test_face_normals	tests/core/test_polydata.py	/^def test_face_normals(sphere):$/;"	f
test_facetreader	tests/core/test_reader.py	/^def test_facetreader():$/;"	f
test_fail_plot_table	tests/plotting/test_plotting.py	/^def test_fail_plot_table():$/;"	f
test_failure_to_find	tests/namespace/test_utilities_namespace.py	/^def test_failure_to_find():$/;"	f
test_fft_and_rfft	tests/core/test_grid.py	/^def test_fft_and_rfft(noise_2d):$/;"	f
test_fft_high_pass	tests/core/test_grid.py	/^def test_fft_high_pass(noise_2d):$/;"	f
test_fft_low_pass	tests/core/test_grid.py	/^def test_fft_low_pass(noise_2d):$/;"	f
test_field_data	tests/core/test_dataset.py	/^def test_field_data(grid):$/;"	f
test_field_data_bad_value	tests/core/test_dataset.py	/^def test_field_data_bad_value(grid):$/;"	f
test_field_data_string	tests/core/test_dataset.py	/^def test_field_data_string(grid):$/;"	f
test_field_np_bool	tests/core/test_dataset.py	/^def test_field_np_bool(grid):$/;"	f
test_field_uint8	tests/core/test_dataset.py	/^def test_field_uint8(grid):$/;"	f
test_file_copier	tests/examples/test_downloads.py	/^def test_file_copier(tmpdir):$/;"	f
test_file_format	tests/test_meshio.py	/^def test_file_format():$/;"	f
test_file_from_files	tests/examples/test_downloads.py	/^def test_file_from_files(tmpdir):$/;"	f
test_filters_return_pointset	tests/core/test_pointset.py	/^def test_filters_return_pointset(sphere):$/;"	f
test_find_cells_along_line	tests/core/test_dataset.py	/^def test_find_cells_along_line():$/;"	f
test_find_cells_along_line_raises	tests/core/test_dataset.py	/^def test_find_cells_along_line_raises():$/;"	f
test_find_cells_intersecting_line	tests/core/test_dataset.py	/^def test_find_cells_intersecting_line():$/;"	f
test_find_cells_within_bounds	tests/core/test_dataset.py	/^def test_find_cells_within_bounds():$/;"	f
test_find_cells_within_bounds_raises	tests/core/test_dataset.py	/^def test_find_cells_within_bounds_raises():$/;"	f
test_find_closest_cell	tests/core/test_dataset.py	/^def test_find_closest_cell():$/;"	f
test_find_closest_cell_surface_point	tests/core/test_dataset.py	/^def test_find_closest_cell_surface_point():$/;"	f
test_find_closest_cells	tests/core/test_dataset.py	/^def test_find_closest_cells():$/;"	f
test_find_closest_point	tests/core/test_dataset.py	/^def test_find_closest_point():$/;"	f
test_find_containing_cell	tests/core/test_dataset.py	/^def test_find_containing_cell():$/;"	f
test_find_containing_cells	tests/core/test_dataset.py	/^def test_find_containing_cells():$/;"	f
test_fit_line_to_points	tests/core/test_utilities.py	/^def test_fit_line_to_points():$/;"	f
test_fit_plane_to_points	tests/core/test_utilities.py	/^def test_fit_plane_to_points():$/;"	f
test_fit_plane_to_points_resolution	tests/core/test_utilities.py	/^def test_fit_plane_to_points_resolution(airplane):$/;"	f
test_fit_plane_to_points_success_with_many_points	tests/core/test_utilities.py	/^def test_fit_plane_to_points_success_with_many_points(one_million_points):$/;"	f
test_fixed_font_size_annotation_text_scaling_off	tests/plotting/test_plotting.py	/^def test_fixed_font_size_annotation_text_scaling_off():$/;"	f
test_flatten	tests/core/test_composite.py	/^def test_flatten(multiblock_all_with_nested_and_none):$/;"	f
test_flatten_copy	tests/core/test_composite.py	/^def test_flatten_copy(multiblock_all, copy):$/;"	f
test_flip_faces	tests/core/test_polydata.py	/^def test_flip_faces(mesh):$/;"	f
test_flip_normal	tests/core/test_dataobject_filters.py	/^def test_flip_normal():$/;"	f
test_flip_normal	tests/core/test_pointset.py	/^def test_flip_normal():$/;"	f
test_flip_normal_vectors	tests/core/test_polydata.py	/^def test_flip_normal_vectors(mesh):$/;"	f
test_flip_normals	tests/core/test_polydata.py	/^def test_flip_normals(sphere):$/;"	f
test_flip_normals_raises	tests/core/test_polydata_filters.py	/^def test_flip_normals_raises():$/;"	f
test_flip_x	tests/core/test_dataobject_filters.py	/^def test_flip_x():$/;"	f
test_flip_x	tests/core/test_pointset.py	/^def test_flip_x():$/;"	f
test_flip_x	tests/plotting/test_texture.py	/^def test_flip_x(texture):$/;"	f
test_flip_y	tests/core/test_dataobject_filters.py	/^def test_flip_y():$/;"	f
test_flip_y	tests/core/test_pointset.py	/^def test_flip_y():$/;"	f
test_flip_y	tests/plotting/test_texture.py	/^def test_flip_y(texture):$/;"	f
test_flip_z	tests/core/test_dataobject_filters.py	/^def test_flip_z():$/;"	f
test_flip_z	tests/core/test_pointset.py	/^def test_flip_z():$/;"	f
test_fluentcffreader	tests/core/test_reader.py	/^def test_fluentcffreader():$/;"	f
test_fly_to_mouse_position	tests/plotting/test_picking.py	/^def test_fly_to_mouse_position(verify_image_cache, sphere):$/;"	f
test_fly_to_right_click	tests/plotting/test_picking.py	/^def test_fly_to_right_click(verify_image_cache, sphere):$/;"	f
test_fly_to_right_click_multi_render	tests/plotting/test_picking.py	/^def test_fly_to_right_click_multi_render(verify_image_cache, sphere):$/;"	f
test_focal_point	tests/plotting/test_camera.py	/^def test_focal_point(camera):$/;"	f
test_font	tests/plotting/test_theme.py	/^def test_font():$/;"	f
test_font_eq	tests/plotting/test_theme.py	/^def test_font_eq(default_theme):$/;"	f
test_font_family	tests/plotting/test_theme.py	/^def test_font_family(default_theme):$/;"	f
test_font_fmt	tests/plotting/test_theme.py	/^def test_font_fmt(default_theme):$/;"	f
test_font_label_size	tests/plotting/test_theme.py	/^def test_font_label_size(default_theme):$/;"	f
test_font_title_size	tests/plotting/test_theme.py	/^def test_font_title_size(default_theme):$/;"	f
test_format_file_size	tests/examples/test_dataset_loader.py	/^def test_format_file_size():$/;"	f
test_from_array	tests/plotting/test_texture.py	/^def test_from_array():$/;"	f
test_from_dict_raises	tests/core/test_objects.py	/^def test_from_dict_raises(mocker: MockerFixture):$/;"	f
test_from_vtk	tests/plotting/test_lights.py	/^def test_from_vtk():$/;"	f
test_gambitreader	tests/core/test_reader.py	/^def test_gambitreader():$/;"	f
test_gaussian_cubes_reader	tests/core/test_reader.py	/^def test_gaussian_cubes_reader():$/;"	f
test_gaussian_smooth	tests/core/test_grid.py	/^def test_gaussian_smooth(hexbeam):$/;"	f
test_gaussian_smooth_cell_data_active	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_cell_data_active():$/;"	f
test_gaussian_smooth_cell_data_specified	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_cell_data_specified():$/;"	f
test_gaussian_smooth_constant_data	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_constant_data():$/;"	f
test_gaussian_smooth_outlier	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_outlier():$/;"	f
test_gaussian_smooth_output_type	tests/core/test_dataset_filters.py	/^def test_gaussian_smooth_output_type():$/;"	f
test_generic_filter	tests/core/test_composite.py	/^def test_generic_filter(multiblock_all_with_nested_and_none, function):$/;"	f
test_generic_filter_inplace	tests/core/test_composite.py	/^def test_generic_filter_inplace(multiblock_all_with_nested_and_none, inplace):$/;"	f
test_generic_filter_raises	tests/core/test_composite.py	/^def test_generic_filter_raises(multiblock_all_with_nested_and_none):$/;"	f
test_geodesic	tests/core/test_polydata.py	/^def test_geodesic(sphere):$/;"	f
test_geodesic_disconnected	tests/core/test_polydata.py	/^def test_geodesic_disconnected(sphere, sphere_shifted):$/;"	f
test_geodesic_distance	tests/core/test_polydata.py	/^def test_geodesic_distance(sphere):$/;"	f
test_geodesic_fail	tests/core/test_polydata.py	/^def test_geodesic_fail(sphere, plane):$/;"	f
test_geodesic_picking	tests/plotting/test_picking.py	/^def test_geodesic_picking():$/;"	f
test_gesignareader	tests/core/test_reader.py	/^def test_gesignareader():$/;"	f
test_get	tests/core/test_datasetattributes.py	/^def test_get(sphere):$/;"	f
test_get_angle	tests/plotting/test_widgets.py	/^def test_get_angle():$/;"	f
test_get_array_bool_array_should_be_identical	tests/core/test_datasetattributes.py	/^def test_get_array_bool_array_should_be_identical(insert_bool_array):$/;"	f
test_get_array_cell	tests/core/test_utilities.py	/^def test_get_array_cell(hexbeam):$/;"	f
test_get_array_error	tests/core/test_utilities.py	/^def test_get_array_error(hexbeam):$/;"	f
test_get_array_field	tests/core/test_utilities.py	/^def test_get_array_field(hexbeam):$/;"	f
test_get_array_none	tests/core/test_utilities.py	/^def test_get_array_none(hexbeam):$/;"	f
test_get_array_point	tests/core/test_utilities.py	/^def test_get_array_point(hexbeam):$/;"	f
test_get_array_raises	tests/core/test_utilities.py	/^def test_get_array_raises():$/;"	f
test_get_array_should_fail_if_does_not_exist	tests/core/test_datasetattributes.py	/^def test_get_array_should_fail_if_does_not_exist(array_key, hexbeam_point_attributes):$/;"	f
test_get_array_should_return_bool_array	tests/core/test_datasetattributes.py	/^def test_get_array_should_return_bool_array(insert_bool_array):$/;"	f
test_get_background_texture	tests/plotting/test_charts.py	/^def test_get_background_texture(chart_2d):$/;"	f
test_get_block	tests/core/test_composite.py	/^def test_get_block(nested_fixture):$/;"	f
test_get_cell_array_fail	tests/core/test_dataset.py	/^def test_get_cell_array_fail():$/;"	f
test_get_charts	tests/plotting/test_plotting.py	/^def test_get_charts():$/;"	f
test_get_cmap_safe	tests/plotting/test_colors.py	/^def test_get_cmap_safe(cmap):$/;"	f
test_get_data_range	tests/core/test_dataset.py	/^def test_get_data_range(grid):$/;"	f
test_get_data_range_table	tests/core/test_objects.py	/^def test_get_data_range_table(preference):$/;"	f
test_get_datasets	tests/plotting/test_plotter.py	/^def test_get_datasets(sphere, hexbeam):$/;"	f
test_get_ext	tests/core/test_utilities.py	/^def test_get_ext(path, target_ext):$/;"	f
test_get_item	tests/core/test_dataset.py	/^def test_get_item(grid):$/;"	f
test_get_reader_fail	tests/core/test_reader.py	/^def test_get_reader_fail(tmp_path):$/;"	f
test_get_sg_image_scraper	tests/plotting/test_plotting_utilities.py	/^def test_get_sg_image_scraper():$/;"	f
test_getitem	tests/core/test_datasetattributes.py	/^def test_getitem(hexbeam_point_attributes):$/;"	f
test_getters_should_return_same_result	tests/core/test_datasetattributes.py	/^def test_getters_should_return_same_result(insert_arange_narray):$/;"	f
test_gif_reader	tests/plotting/test_plotting_utilities.py	/^def test_gif_reader(gif_file):$/;"	f
test_glyph	tests/core/test_dataset_filters.py	/^def test_glyph(datasets, sphere):$/;"	f
test_glyph_cell_point_data	tests/core/test_dataset_filters.py	/^def test_glyph_cell_point_data(sphere):$/;"	f
test_glyph_color_mode	tests/core/test_dataset_filters.py	/^def test_glyph_color_mode(sphere, color_mode):$/;"	f
test_glyph_orient_and_scale	tests/core/test_dataset_filters.py	/^def test_glyph_orient_and_scale():$/;"	f
test_glyph_raises	tests/core/test_dataset_filters.py	/^def test_glyph_raises(sphere):$/;"	f
test_glyph_settings	tests/core/test_dataset_filters.py	/^def test_glyph_settings(sphere):$/;"	f
test_glyph_warns_ambiguous_data	tests/core/test_dataset_filters.py	/^def test_glyph_warns_ambiguous_data(sphere):$/;"	f
test_gpuinfo	tests/plotting/test_plotting_utilities.py	/^def test_gpuinfo():$/;"	f
test_grayscale	tests/plotting/test_texture.py	/^def test_grayscale(texture):$/;"	f
test_grdecl_reader	tests/core/test_reader.py	/^def test_grdecl_reader(tmp_path):$/;"	f
test_grid_dimensionality	tests/core/test_grid.py	/^def test_grid_dimensionality(grid_class, dimensionality, dimensions):$/;"	f
test_grid_extract_selection_points	tests/core/test_grid.py	/^def test_grid_extract_selection_points(struct_grid):$/;"	f
test_grid_from_sph_coords	tests/core/test_utilities.py	/^def test_grid_from_sph_coords():$/;"	f
test_grid_points	tests/core/test_grid.py	/^def test_grid_points():$/;"	f
test_grid_repr	tests/core/test_grid.py	/^def test_grid_repr(struct_grid):$/;"	f
test_handle_array_with_null_name	tests/core/test_dataset.py	/^def test_handle_array_with_null_name():$/;"	f
test_has_duplicates	tests/core/test_utilities.py	/^def test_has_duplicates():$/;"	f
test_has_module	tests/core/test_utilities.py	/^def test_has_module():$/;"	f
test_has_render_window_fail	tests/plotting/test_plotter.py	/^def test_has_render_window_fail():$/;"	f
test_hdf_reader	tests/core/test_reader.py	/^def test_hdf_reader():$/;"	f
test_hdr_reader	tests/core/test_reader.py	/^def test_hdr_reader():$/;"	f
test_hexagonal_prism	tests/examples/test_cell_examples.py	/^def test_hexagonal_prism():$/;"	f
test_hexahedron	tests/examples/test_cell_examples.py	/^def test_hexahedron():$/;"	f
test_hexbeam_field_attributes_active_scalars	tests/core/test_datasetattributes.py	/^def test_hexbeam_field_attributes_active_scalars(hexbeam_field_attributes):$/;"	f
test_hide_axes	tests/plotting/test_plotting.py	/^def test_hide_axes():$/;"	f
test_hide_axes_all	tests/plotting/test_plotting.py	/^def test_hide_axes_all():$/;"	f
test_hide_cells	tests/core/test_grid.py	/^def test_hide_cells(ind, struct_grid):$/;"	f
test_hide_points	tests/core/test_grid.py	/^def test_hide_points(ind, struct_grid):$/;"	f
test_horizon_picking	tests/plotting/test_picking.py	/^def test_horizon_picking():$/;"	f
test_html_repr	tests/core/test_dataset.py	/^def test_html_repr(grid):$/;"	f
test_html_repr_string_scalar	tests/core/test_dataset.py	/^def test_html_repr_string_scalar(grid):$/;"	f
test_hue_range	tests/plotting/test_lookup_table.py	/^def test_hue_range(lut, lut_w_cmap):$/;"	f
test_iadd_general	tests/core/test_dataset_filters.py	/^def test_iadd_general(uniform, hexbeam, sphere):$/;"	f
test_icosahedron	tests/core/test_geometric_objects.py	/^def test_icosahedron():$/;"	f
test_icosphere	tests/core/test_geometric_objects.py	/^def test_icosphere():$/;"	f
test_identical_boolean	tests/core/test_polydata_filters.py	/^def test_identical_boolean(sphere):$/;"	f
test_image_data_empty_init	tests/core/test_grid.py	/^def test_image_data_empty_init(dims):$/;"	f
test_image_data_init_kwargs	tests/core/test_grid.py	/^def test_image_data_init_kwargs():$/;"	f
test_image_data_invald_args	tests/core/test_grid.py	/^def test_image_data_invald_args():$/;"	f
test_image_data_to_tetrahedra	tests/core/test_grid.py	/^def test_image_data_to_tetrahedra():$/;"	f
test_image_dilate_erode_cell_data_active	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_cell_data_active():$/;"	f
test_image_dilate_erode_cell_data_specified	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_cell_data_specified():$/;"	f
test_image_dilate_erode_dilation	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_dilation():$/;"	f
test_image_dilate_erode_erosion	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_erosion():$/;"	f
test_image_dilate_erode_output_type	tests/core/test_dataset_filters.py	/^def test_image_dilate_erode_output_type():$/;"	f
test_image_ellip_soid_source	tests/core/test_image_sources.py	/^def test_image_ellip_soid_source():$/;"	f
test_image_gradient_source	tests/core/test_image_sources.py	/^def test_image_gradient_source():$/;"	f
test_image_grid_source	tests/core/test_image_sources.py	/^def test_image_grid_source():$/;"	f
test_image_mandelbrot_source	tests/core/test_image_sources.py	/^def test_image_mandelbrot_source():$/;"	f
test_image_noise_source	tests/core/test_image_sources.py	/^def test_image_noise_source():$/;"	f
test_image_properties	tests/plotting/test_plotting.py	/^def test_image_properties():$/;"	f
test_image_sinusolid_source	tests/core/test_image_sources.py	/^def test_image_sinusolid_source():$/;"	f
test_image_threshold_between	tests/core/test_dataset_filters.py	/^def test_image_threshold_between(in_value, out_value):$/;"	f
test_image_threshold_dtype	tests/core/test_dataset_filters.py	/^def test_image_threshold_dtype(value_dtype, array_dtype):$/;"	f
test_image_threshold_output_type	tests/core/test_dataset_filters.py	/^def test_image_threshold_output_type(uniform):$/;"	f
test_image_threshold_raises	tests/core/test_dataset_filters.py	/^def test_image_threshold_raises(uniform):$/;"	f
test_image_threshold_upper	tests/core/test_dataset_filters.py	/^def test_image_threshold_upper(in_value, out_value):$/;"	f
test_image_threshold_wrong_threshold_length	tests/core/test_dataset_filters.py	/^def test_image_threshold_wrong_threshold_length():$/;"	f
test_image_threshold_wrong_threshold_type	tests/core/test_dataset_filters.py	/^def test_image_threshold_wrong_threshold_type():$/;"	f
test_imagedata_direction_matrix	tests/core/test_grid.py	/^def test_imagedata_direction_matrix():$/;"	f
test_imagedata_direction_matrix_orthonormal	tests/core/test_grid.py	/^def test_imagedata_direction_matrix_orthonormal(uniform):$/;"	f
test_imagedata_index_to_physical_matrix	tests/core/test_grid.py	/^def test_imagedata_index_to_physical_matrix():$/;"	f
test_imagedata_offset	tests/core/test_grid.py	/^def test_imagedata_offset():$/;"	f
test_implicit_distance	tests/core/test_dataset_filters.py	/^def test_implicit_distance():$/;"	f
test_import_3ds	tests/plotting/test_plotting.py	/^def test_import_3ds():$/;"	f
test_import_gltf	tests/plotting/test_plotting.py	/^def test_import_gltf(verify_image_cache):$/;"	f
test_import_obj	tests/plotting/test_plotting.py	/^def test_import_obj():$/;"	f
test_import_obj_with_texture	tests/plotting/test_plotting.py	/^def test_import_obj_with_texture():$/;"	f
test_import_vrml	tests/plotting/test_plotting.py	/^def test_import_vrml():$/;"	f
test_index_vs_loc	tests/plotting/test_plotting.py	/^def test_index_vs_loc():$/;"	f
test_inheritance_no_wrappers	tests/core/test_helpers.py	/^def test_inheritance_no_wrappers():$/;"	f
test_init	tests/core/test_datasetattributes.py	/^def test_init(hexbeam):$/;"	f
test_init	tests/core/test_polydata.py	/^def test_init():$/;"	f
test_init	tests/plotting/mappers/test_mapper.py	/^def test_init(sphere):$/;"	f
test_init	tests/plotting/test_lights.py	/^def test_init():$/;"	f
test_init_as_points	tests/core/test_polydata.py	/^def test_init_as_points():$/;"	f
test_init_as_points_from_list	tests/core/test_polydata.py	/^def test_init_as_points_from_list():$/;"	f
test_init_bad_filename	tests/core/test_grid.py	/^def test_init_bad_filename():$/;"	f
test_init_bad_input	tests/core/test_grid.py	/^def test_init_bad_input():$/;"	f
test_init_cell_array	tests/core/test_cells.py	/^def test_init_cell_array(cells):$/;"	f
test_init_cell_array_from_arrays	tests/core/test_cells.py	/^def test_init_cell_array_from_arrays(offsets, connectivity, deep):$/;"	f
test_init_cell_array_from_regular_cells	tests/core/test_cells.py	/^def test_init_cell_array_from_regular_cells(cells, deep):$/;"	f
test_init_cmap	tests/plotting/test_lookup_table.py	/^def test_init_cmap():$/;"	f
test_init_custom	tests/plotting/test_lookup_table.py	/^def test_init_custom():$/;"	f
test_init_from_arrays	tests/core/test_grid.py	/^def test_init_from_arrays():$/;"	f
test_init_from_arrays	tests/core/test_polydata.py	/^def test_init_from_arrays(faces_is_cell_array):$/;"	f
test_init_from_arrays_triangular	tests/core/test_polydata.py	/^def test_init_from_arrays_triangular(faces_is_cell_array):$/;"	f
test_init_from_arrays_with_vert	tests/core/test_polydata.py	/^def test_init_from_arrays_with_vert(faces_is_cell_array):$/;"	f
test_init_from_dict	tests/core/test_grid.py	/^def test_init_from_dict(multiple_cell_types, flat_cells):$/;"	f
test_init_from_numpy_arrays	tests/core/test_grid.py	/^def test_init_from_numpy_arrays():$/;"	f
test_init_from_pdata	tests/core/test_polydata.py	/^def test_init_from_pdata(sphere):$/;"	f
test_init_from_polydata	tests/core/test_grid.py	/^def test_init_from_polydata(sphere):$/;"	f
test_init_from_structured	tests/core/test_grid.py	/^def test_init_from_structured(struct_grid):$/;"	f
test_init_from_unstructured	tests/core/test_grid.py	/^def test_init_from_unstructured(hexbeam):$/;"	f
test_init_polyhedron	tests/core/test_grid.py	/^def test_init_polyhedron():$/;"	f
test_init_renderers_groups_item_len_raises	tests/plotting/test_renderer.py	/^def test_init_renderers_groups_item_len_raises(groups):$/;"	f
test_init_renderers_groups_item_raises	tests/plotting/test_renderer.py	/^def test_init_renderers_groups_item_raises(group):$/;"	f
test_init_renderers_groups_raises	tests/plotting/test_renderer.py	/^def test_init_renderers_groups_raises(groups):$/;"	f
test_init_structured	tests/core/test_grid.py	/^def test_init_structured(struct_grid):$/;"	f
test_init_structured_raise	tests/core/test_grid.py	/^def test_init_structured_raise():$/;"	f
test_init_values	tests/plotting/test_lookup_table.py	/^def test_init_values():$/;"	f
test_inplace_no_overwrite_texture_coordinates	tests/plotting/test_texture.py	/^def test_inplace_no_overwrite_texture_coordinates():$/;"	f
test_insert	tests/core/test_composite.py	/^def test_insert(sphere):$/;"	f
test_insert	tests/core/test_partitioned.py	/^def test_insert(sphere):$/;"	f
test_instantiate_by_filename	tests/core/test_grid.py	/^def test_instantiate_by_filename():$/;"	f
test_integrate_data	tests/core/test_dataset_filters.py	/^def test_integrate_data():$/;"	f
test_integrate_data_datasets	tests/core/test_dataset_filters.py	/^def test_integrate_data_datasets(datasets):$/;"	f
test_intensity	tests/plotting/test_lights.py	/^def test_intensity():$/;"	f
test_interactive_plot_file_size	tests/doc/tst_doc_images.py	/^def test_interactive_plot_file_size(vtksz_file: str):$/;"	f
test_interactive_update	tests/plotting/test_plotting.py	/^def test_interactive_update():$/;"	f
test_interactor_style	tests/plotting/test_plotting.py	/^def test_interactor_style(sphere, interaction, kwargs):$/;"	f
test_interpolate	tests/core/test_dataset_filters.py	/^def test_interpolate():$/;"	f
test_interpolate	tests/plotting/test_texture.py	/^def test_interpolate(texture):$/;"	f
test_interpolate_before_map	tests/plotting/mappers/test_composite_mapper.py	/^def test_interpolate_before_map(composite_mapper):$/;"	f
test_interpolate_before_map	tests/plotting/mappers/test_mapper.py	/^def test_interpolate_before_map(dataset_mapper):$/;"	f
test_interpolate_raises	tests/core/test_dataset_filters.py	/^def test_interpolate_raises(strategy):$/;"	f
test_interpolation_type	tests/plotting/test_volume_property.py	/^def test_interpolation_type(vol_prop):$/;"	f
test_intersection	tests/core/test_polydata.py	/^def test_intersection(sphere, sphere_shifted):$/;"	f
test_invalid_arg	tests/core/test_composite.py	/^def test_invalid_arg():$/;"	f
test_invalid_color_str_single_char	tests/plotting/test_theme.py	/^def test_invalid_color_str_single_char():$/;"	f
test_invalid_connectivity_arrays	tests/core/test_polydata.py	/^def test_invalid_connectivity_arrays(arr, value):$/;"	f
test_invalid_copy_from	tests/core/test_dataset.py	/^def test_invalid_copy_from(grid):$/;"	f
test_invalid_curvature	tests/core/test_polydata.py	/^def test_invalid_curvature(sphere):$/;"	f
test_invalid_file	tests/core/test_polydata.py	/^def test_invalid_file():$/;"	f
test_invalid_init	tests/core/test_polydata.py	/^def test_invalid_init():$/;"	f
test_invalid_init	tests/plotting/test_camera.py	/^def test_invalid_init():$/;"	f
test_invalid_init_structured	tests/core/test_grid.py	/^def test_invalid_init_structured():$/;"	f
test_invalid_load_theme	tests/plotting/test_theme.py	/^def test_invalid_load_theme(default_theme):$/;"	f
test_invalid_n_arrays	tests/plotting/test_plotting.py	/^def test_invalid_n_arrays(sphere):$/;"	f
test_invalid_points	tests/core/test_dataset.py	/^def test_invalid_points(grid):$/;"	f
test_invalid_resolve	tests/plotting/mappers/test_mapper.py	/^def test_invalid_resolve(dataset_mapper):$/;"	f
test_invalid_save	tests/core/test_polydata.py	/^def test_invalid_save(sphere):$/;"	f
test_invalid_subdivide_adaptive	tests/core/test_dataset_filters.py	/^def test_invalid_subdivide_adaptive(cube):$/;"	f
test_invalid_subdivision	tests/core/test_polydata.py	/^def test_invalid_subdivision(sphere):$/;"	f
test_invalid_theme	tests/plotting/test_theme.py	/^def test_invalid_theme():$/;"	f
test_invalid_theme_type_error	tests/plotting/test_theme.py	/^def test_invalid_theme_type_error():$/;"	f
test_invalid_vector	tests/core/test_dataset.py	/^def test_invalid_vector(grid):$/;"	f
test_invalid_warp_scalar	tests/core/test_dataset_filters.py	/^def test_invalid_warp_scalar(sphere):$/;"	f
test_invalid_warp_scalar_inplace	tests/core/test_dataset_filters.py	/^def test_invalid_warp_scalar_inplace(uniform):$/;"	f
test_invalid_warp_vector	tests/core/test_dataset_filters.py	/^def test_invalid_warp_vector(sphere):$/;"	f
test_ipython_key_completions	tests/core/test_dataset.py	/^def test_ipython_key_completions(grid):$/;"	f
test_ipywidgets_raises	tests/plotting/jupyter/test_trame.py	/^def test_ipywidgets_raises(monkeypatch: pytest.MonkeyPatch):$/;"	f
test_iren_context_style	tests/plotting/test_charts.py	/^def test_iren_context_style(pl):$/;"	f
test_irregular_faces	tests/core/test_polydata.py	/^def test_irregular_faces():$/;"	f
test_irregular_faces_mutable	tests/core/test_polydata.py	/^def test_irregular_faces_mutable():$/;"	f
test_is_all_triangles	tests/core/test_polydata.py	/^def test_is_all_triangles():$/;"	f
test_is_empty	tests/core/test_dataobject.py	/^def test_is_empty(ant):$/;"	f
test_is_homogeneous_is_heterogeneous	tests/core/test_composite.py	/^def test_is_homogeneous_is_heterogeneous(multiblock_all_with_nested_and_none):$/;"	f
test_is_inside_bounds	tests/core/test_utilities.py	/^def test_is_inside_bounds():$/;"	f
test_is_inside_bounds_raises	tests/core/test_utilities.py	/^def test_is_inside_bounds_raises():$/;"	f
test_is_manifold	tests/core/test_dataset_filters.py	/^def test_is_manifold(sphere, plane):$/;"	f
test_isometric_view_interactive	tests/plotting/test_plotting.py	/^def test_isometric_view_interactive(sphere):$/;"	f
test_isubtract	tests/core/test_polydata.py	/^def test_isubtract(sphere, sphere_shifted):$/;"	f
test_jpegreader	tests/core/test_reader.py	/^def test_jpegreader():$/;"	f
test_key_press_event	tests/plotting/test_plotting.py	/^def test_key_press_event():$/;"	f
test_key_should_exist	tests/core/test_datasetattributes.py	/^def test_key_should_exist(insert_arange_narray):$/;"	f
test_keys_should_be_strings	tests/core/test_datasetattributes.py	/^def test_keys_should_be_strings(insert_arange_narray):$/;"	f
test_kochanek_spline	tests/core/test_parametric_geometry.py	/^def test_kochanek_spline():$/;"	f
test_label	tests/plotting/test_text.py	/^def test_label():$/;"	f
test_label_connectivity	tests/core/test_imagedata_filters.py	/^def test_label_connectivity(segmented_grid):$/;"	f
test_label_connectivity_auto_scalar_range	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_auto_scalar_range(segmented_grid):$/;"	f
test_label_connectivity_constant_label	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_constant_label(segmented_grid):$/;"	f
test_label_connectivity_inplace_with_float_casting	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_inplace_with_float_casting(segmented_grid):$/;"	f
test_label_connectivity_invalid_parameters	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_invalid_parameters(segmented_grid):$/;"	f
test_label_connectivity_largest_region	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_largest_region(segmented_grid):$/;"	f
test_label_connectivity_point_data	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_point_data(segmented_grid):$/;"	f
test_label_connectivity_scalar	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_scalar(segmented_grid):$/;"	f
test_label_connectivity_scalar_range_default_vtk	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_scalar_range_default_vtk(segmented_grid):$/;"	f
test_label_connectivity_scalar_range_fractional_number	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_scalar_range_fractional_number(segmented_grid):$/;"	f
test_label_connectivity_scalar_range_whole_number	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_scalar_range_whole_number(segmented_grid):$/;"	f
test_label_connectivity_seed_points	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_seed_points(segmented_grid):$/;"	f
test_label_connectivity_seed_points_vtkDataSet	tests/core/test_imagedata_filters.py	/^def test_label_connectivity_seed_points_vtkDataSet(segmented_grid):$/;"	f
test_label_name	tests/plotting/test_text.py	/^def test_label_name():$/;"	f
test_label_offset	tests/plotting/test_cube_axes_actor.py	/^def test_label_offset(cube_axes_actor):$/;"	f
test_label_prop3d	tests/plotting/test_plotting.py	/^def test_label_prop3d(relative_position):$/;"	f
test_label_prop3d	tests/plotting/test_text.py	/^def test_label_prop3d():$/;"	f
test_label_relative_position	tests/plotting/test_text.py	/^def test_label_relative_position():$/;"	f
test_label_visibility_setter	tests/plotting/test_cube_axes_actor.py	/^def test_label_visibility_setter(cube_axes_actor):$/;"	f
test_labels	tests/plotting/test_cube_axes_actor.py	/^def test_labels(cube_axes_actor):$/;"	f
test_large_dependencies_not_imported	tests/test_init.py	/^def test_large_dependencies_not_imported(module: str):$/;"	f
test_layer	tests/plotting/test_renderer.py	/^def test_layer():$/;"	f
test_left_button_down	tests/plotting/test_plotting.py	/^def test_left_button_down():$/;"	f
test_legend_add_entry_exception	tests/plotting/test_renderer.py	/^def test_legend_add_entry_exception():$/;"	f
test_legend_add_entry_warning	tests/plotting/test_renderer.py	/^def test_legend_add_entry_warning(verify_image_cache):$/;"	f
test_legend_circle_face	tests/plotting/test_plotting.py	/^def test_legend_circle_face(sphere):$/;"	f
test_legend_face	tests/plotting/test_renderer.py	/^def test_legend_face(sphere, face, verify_image_cache):$/;"	f
test_legend_font	tests/plotting/test_plotter.py	/^def test_legend_font(sphere):$/;"	f
test_legend_from_glyph	tests/plotting/test_renderer.py	/^def test_legend_from_glyph(sphere, verify_image_cache):$/;"	f
test_legend_from_multiple_glyph	tests/plotting/test_renderer.py	/^def test_legend_from_multiple_glyph(random_hills, verify_image_cache):$/;"	f
test_legend_invalid_face	tests/plotting/test_plotting.py	/^def test_legend_invalid_face(sphere):$/;"	f
test_legend_none_face	tests/plotting/test_renderer.py	/^def test_legend_none_face(verify_image_cache):$/;"	f
test_legend_rectangle_face	tests/plotting/test_plotting.py	/^def test_legend_rectangle_face(sphere):$/;"	f
test_legend_scale	tests/plotting/test_plotting.py	/^def test_legend_scale(sphere):$/;"	f
test_legend_subplots	tests/plotting/test_plotting.py	/^def test_legend_subplots(sphere, cube):$/;"	f
test_legend_using_add_legend	tests/plotting/test_renderer.py	/^def test_legend_using_add_legend(random_hills, verify_image_cache):$/;"	f
test_legend_using_add_legend_only_labels	tests/plotting/test_renderer.py	/^def test_legend_using_add_legend_only_labels(random_hills, verify_image_cache):$/;"	f
test_legend_using_add_legend_with_glyph	tests/plotting/test_renderer.py	/^def test_legend_using_add_legend_with_glyph(random_hills, verify_image_cache):$/;"	f
test_length_should_be_0_on_clear	tests/core/test_datasetattributes.py	/^def test_length_should_be_0_on_clear(insert_arange_narray):$/;"	f
test_length_should_decrement_on_pop	tests/core/test_datasetattributes.py	/^def test_length_should_decrement_on_pop(insert_arange_narray):$/;"	f
test_length_should_decrement_on_remove	tests/core/test_datasetattributes.py	/^def test_length_should_decrement_on_remove(insert_arange_narray):$/;"	f
test_length_should_increment_on_set_array	tests/core/test_datasetattributes.py	/^def test_length_should_increment_on_set_array(hexbeam_point_attributes):$/;"	f
test_lighting_add_manual_light	tests/plotting/test_plotting.py	/^def test_lighting_add_manual_light(sphere):$/;"	f
test_lighting_disable_3_lights	tests/plotting/test_plotting.py	/^def test_lighting_disable_3_lights():$/;"	f
test_lighting_enable_three_lights	tests/plotting/test_plotting.py	/^def test_lighting_enable_three_lights(sphere):$/;"	f
test_lighting_init_invalid	tests/plotting/test_plotting.py	/^def test_lighting_init_invalid():$/;"	f
test_lighting_init_light_kit	tests/plotting/test_plotting.py	/^def test_lighting_init_light_kit(sphere):$/;"	f
test_lighting_init_none	tests/plotting/test_plotting.py	/^def test_lighting_init_none(sphere):$/;"	f
test_lighting_init_three_lights	tests/plotting/test_plotting.py	/^def test_lighting_init_three_lights(sphere):$/;"	f
test_lighting_remove_manual_light	tests/plotting/test_plotting.py	/^def test_lighting_remove_manual_light(sphere):$/;"	f
test_lighting_subplots	tests/plotting/test_plotting.py	/^def test_lighting_subplots(sphere):$/;"	f
test_line	tests/core/test_geometric_objects.py	/^def test_line():$/;"	f
test_line	tests/examples/test_cell_examples.py	/^def test_line():$/;"	f
test_line_segments_from_points	tests/core/test_utilities.py	/^def test_line_segments_from_points():$/;"	f
test_line_source	tests/core/test_geometric_sources.py	/^def test_line_source():$/;"	f
test_linear_copy	tests/core/test_grid.py	/^def test_linear_copy(hexbeam):$/;"	f
test_linear_copy_surf_elem	tests/core/test_grid.py	/^def test_linear_copy_surf_elem():$/;"	f
test_lineplot2d	tests/plotting/test_charts.py	/^def test_lineplot2d(chart_2d, line_plot_2d):$/;"	f
test_lines	tests/core/test_polydata.py	/^def test_lines():$/;"	f
test_lines_from_points	tests/core/test_utilities.py	/^def test_lines_from_points():$/;"	f
test_lines_on_init	tests/core/test_polydata.py	/^def test_lines_on_init(lines_is_cell_array):$/;"	f
test_lines_segments_from_points	tests/core/test_utilities.py	/^def test_lines_segments_from_points(points):$/;"	f
test_link_views	tests/plotting/test_plotting.py	/^def test_link_views(sphere):$/;"	f
test_link_views_camera_set	tests/plotting/test_plotting.py	/^def test_link_views_camera_set(sphere, verify_image_cache):$/;"	f
test_linkcode_resolve	tests/core/test_utilities.py	/^def test_linkcode_resolve():$/;"	f
test_load_airplane	tests/examples/test_examples.py	/^def test_load_airplane():$/;"	f
test_load_ant	tests/examples/test_examples.py	/^def test_load_ant():$/;"	f
test_load_channels	tests/examples/test_examples.py	/^def test_load_channels():$/;"	f
test_load_dataset_no_reader	tests/examples/test_dataset_loader.py	/^def test_load_dataset_no_reader(dataset_loader_one_file):$/;"	f
test_load_earth	tests/examples/test_examples.py	/^def test_load_earth():$/;"	f
test_load_frog_tissue	tests/examples/test_examples.py	/^def test_load_frog_tissue():$/;"	f
test_load_hydrogen_orbital	tests/examples/test_examples.py	/^def test_load_hydrogen_orbital():$/;"	f
test_load_jupiter	tests/examples/test_download_files.py	/^def test_load_jupiter():$/;"	f
test_load_logo	tests/examples/test_examples.py	/^def test_load_logo():$/;"	f
test_load_mars	tests/examples/test_download_files.py	/^def test_load_mars():$/;"	f
test_load_mercury	tests/examples/test_download_files.py	/^def test_load_mercury():$/;"	f
test_load_moon	tests/examples/test_download_files.py	/^def test_load_moon():$/;"	f
test_load_neptune	tests/examples/test_download_files.py	/^def test_load_neptune():$/;"	f
test_load_nut	tests/examples/test_examples.py	/^def test_load_nut():$/;"	f
test_load_pluto	tests/examples/test_download_files.py	/^def test_load_pluto():$/;"	f
test_load_random_hills	tests/examples/test_examples.py	/^def test_load_random_hills(random_hills):$/;"	f
test_load_saturn	tests/examples/test_download_files.py	/^def test_load_saturn():$/;"	f
test_load_saturn_rings	tests/examples/test_download_files.py	/^def test_load_saturn_rings():$/;"	f
test_load_sphere	tests/examples/test_examples.py	/^def test_load_sphere():$/;"	f
test_load_spline	tests/examples/test_examples.py	/^def test_load_spline():$/;"	f
test_load_structured_bad_filename	tests/core/test_grid.py	/^def test_load_structured_bad_filename():$/;"	f
test_load_sun	tests/examples/test_download_files.py	/^def test_load_sun():$/;"	f
test_load_tetbeam	tests/examples/test_examples.py	/^def test_load_tetbeam():$/;"	f
test_load_theme	tests/plotting/test_theme.py	/^def test_load_theme(tmpdir, default_theme):$/;"	f
test_load_uranus	tests/examples/test_download_files.py	/^def test_load_uranus():$/;"	f
test_load_venus	tests/examples/test_download_files.py	/^def test_load_venus():$/;"	f
test_local_file_cache	tests/examples/test_downloads.py	/^def test_local_file_cache(tmpdir):$/;"	f
test_log_scale	tests/plotting/test_lookup_table.py	/^def test_log_scale(lut):$/;"	f
test_log_scale	tests/plotting/test_plotting.py	/^def test_log_scale(uniform):$/;"	f
test_logo_basic	tests/plotting/test_demos.py	/^def test_logo_basic():$/;"	f
test_logo_voxel	tests/plotting/test_demos.py	/^def test_logo_voxel():$/;"	f
test_logo_widget	tests/plotting/test_widgets.py	/^def test_logo_widget(verify_image_cache):$/;"	f
test_lookup_table	tests/plotting/mappers/test_composite_mapper.py	/^def test_lookup_table(composite_mapper):$/;"	f
test_lookup_table	tests/plotting/mappers/test_mapper.py	/^def test_lookup_table(dataset_mapper):$/;"	f
test_lookup_table	tests/plotting/test_plotting.py	/^def test_lookup_table(verify_image_cache):$/;"	f
test_lookup_table_above_below_opacity	tests/plotting/test_plotting.py	/^def test_lookup_table_above_below_opacity(verify_image_cache):$/;"	f
test_lookup_table_nan_hidden	tests/plotting/test_plotting.py	/^def test_lookup_table_nan_hidden(verify_image_cache):$/;"	f
test_make_movie	tests/plotting/test_plotting.py	/^def test_make_movie(sphere, tmpdir, verify_image_cache):$/;"	f
test_make_points_double	tests/core/test_dataset.py	/^def test_make_points_double(grid):$/;"	f
test_make_tri_mesh	tests/core/test_helpers.py	/^def test_make_tri_mesh(sphere):$/;"	f
test_many_multi_pass	tests/plotting/test_plotting.py	/^def test_many_multi_pass():$/;"	f
test_map_value	tests/plotting/test_lookup_table.py	/^def test_map_value(lut):$/;"	f
test_mapper_init	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_mapper_init(mapper):$/;"	f
test_measurement_widget	tests/plotting/test_widgets.py	/^def test_measurement_widget(random_hills):$/;"	f
test_median_smooth_constant_data	tests/core/test_dataset_filters.py	/^def test_median_smooth_constant_data():$/;"	f
test_median_smooth_outlier	tests/core/test_dataset_filters.py	/^def test_median_smooth_outlier():$/;"	f
test_median_smooth_output_type	tests/core/test_dataset_filters.py	/^def test_median_smooth_output_type():$/;"	f
test_memory_address	tests/core/test_dataset.py	/^def test_memory_address(grid):$/;"	f
test_merge	tests/core/test_grid.py	/^def test_merge(hexbeam):$/;"	f
test_merge	tests/core/test_polydata.py	/^def test_merge(sphere, sphere_shifted, hexbeam):$/;"	f
test_merge	tests/core/test_utilities.py	/^def test_merge(sphere, cube, datasets):$/;"	f
test_merge_active_normals	tests/core/test_dataset_filters.py	/^def test_merge_active_normals():$/;"	f
test_merge_active_scalars	tests/core/test_polydata.py	/^def test_merge_active_scalars(input_):$/;"	f
test_merge_general	tests/core/test_dataset_filters.py	/^def test_merge_general(uniform):$/;"	f
test_merge_invalid	tests/core/test_grid.py	/^def test_merge_invalid(hexbeam, sphere):$/;"	f
test_merge_list	tests/core/test_grid.py	/^def test_merge_list(hexbeam):$/;"	f
test_merge_main_has_priority	tests/core/test_polydata.py	/^def test_merge_main_has_priority(input_):$/;"	f
test_merge_not_main	tests/core/test_grid.py	/^def test_merge_not_main(hexbeam):$/;"	f
test_merge_points	tests/core/test_dataset_filters.py	/^def test_merge_points():$/;"	f
test_merge_points	tests/core/test_polydata.py	/^def test_merge_points(inplace):$/;"	f
test_merge_points_filter	tests/core/test_dataset_filters.py	/^def test_merge_points_filter(inplace):$/;"	f
test_mesh_picking	tests/plotting/test_picking.py	/^def test_mesh_picking(sphere, left_clicking):$/;"	f
test_meshio	tests/test_meshio.py	/^def test_meshio(mesh_in, tmpdir):$/;"	f
test_meta_image_reader	tests/core/test_reader.py	/^def test_meta_image_reader():$/;"	f
test_metadata_save	tests/core/test_dataobject.py	/^def test_metadata_save(hexbeam, tmpdir):$/;"	f
test_min	tests/core/test_pyvista_ndarray.py	/^def test_min(pyvista_ndarray_1d):$/;"	f
test_mipmap	tests/plotting/test_texture.py	/^def test_mipmap(texture):$/;"	f
test_mixed_cell_polydata	tests/core/test_polydata.py	/^def test_mixed_cell_polydata(verts, lines, faces, strips):$/;"	f
test_model_transform_matrix	tests/plotting/test_camera.py	/^def test_model_transform_matrix(camera):$/;"	f
test_modify_field_data	tests/core/test_dataset.py	/^def test_modify_field_data(grid):$/;"	f
test_modifying_modifies_dataset	tests/core/test_pyvista_ndarray.py	/^def test_modifying_modifies_dataset():$/;"	f
test_move_nested_field_data_to_root	tests/core/test_composite.py	/^def test_move_nested_field_data_to_root(copy, field_data_mode, separator, name_in, name_out):$/;"	f
test_move_nested_field_data_to_root_check_duplicate_keys	tests/core/test_composite.py	/^def test_move_nested_field_data_to_root_check_duplicate_keys():$/;"	f
test_move_nested_field_data_user_dict_mode	tests/core/test_composite.py	/^def test_move_nested_field_data_user_dict_mode(user_dict_mode):$/;"	f
test_mpl_backend	tests/test_meta.py	/^def test_mpl_backend():$/;"	f
test_multi_block_append	tests/core/test_composite.py	/^def test_multi_block_append(ant, sphere, uniform, airplane, rectilinear):$/;"	f
test_multi_block_clean	tests/core/test_composite.py	/^def test_multi_block_clean(rectilinear, uniform, ant):$/;"	f
test_multi_block_color_cycler	tests/plotting/test_plotter.py	/^def test_multi_block_color_cycler():$/;"	f
test_multi_block_copy	tests/core/test_composite.py	/^def test_multi_block_copy(deep, multiblock_all_with_nested_and_none):$/;"	f
test_multi_block_data_range	tests/core/test_composite.py	/^def test_multi_block_data_range():$/;"	f
test_multi_block_eq	tests/core/test_composite.py	/^def test_multi_block_eq(multiblock_all_with_nested_and_none):$/;"	f
test_multi_block_init_dict	tests/core/test_composite.py	/^def test_multi_block_init_dict(rectilinear, airplane):$/;"	f
test_multi_block_init_list	tests/core/test_composite.py	/^def test_multi_block_init_list(rectilinear, airplane):$/;"	f
test_multi_block_init_vtk	tests/core/test_composite.py	/^def test_multi_block_init_vtk():$/;"	f
test_multi_block_io	tests/core/test_composite.py	/^def test_multi_block_io($/;"	f
test_multi_block_keys	tests/core/test_composite.py	/^def test_multi_block_keys(rectilinear, airplane):$/;"	f
test_multi_block_length	tests/core/test_composite.py	/^def test_multi_block_length(multiblock_all_with_nested_and_none):$/;"	f
test_multi_block_negative_index	tests/core/test_composite.py	/^def test_multi_block_negative_index(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_multi_block_plot	tests/plotting/test_plotting.py	/^def test_multi_block_plot(verify_image_cache):$/;"	f
test_multi_block_repr	tests/core/test_composite.py	/^def test_multi_block_repr(multiblock_all_with_nested_and_none):$/;"	f
test_multi_block_repr_bounds	tests/core/test_composite.py	/^def test_multi_block_repr_bounds():$/;"	f
test_multi_block_save_lines	tests/core/test_composite.py	/^def test_multi_block_save_lines(tmpdir):$/;"	f
test_multi_block_set_get_ers	tests/core/test_composite.py	/^def test_multi_block_set_get_ers():$/;"	f
test_multi_block_shallow_copy	tests/core/test_composite.py	/^def test_multi_block_shallow_copy(recursive, multiblock_all_with_nested_and_none):$/;"	f
test_multi_block_volume	tests/core/test_composite.py	/^def test_multi_block_volume(ant, airplane, sphere, uniform):$/;"	f
test_multi_cell_picking	tests/plotting/test_picking.py	/^def test_multi_cell_picking(through):$/;"	f
test_multi_file_loader	tests/examples/test_dataset_loader.py	/^def test_multi_file_loader(examples_local_repository_tmp_dir, load_func):$/;"	f
test_multi_io_erros	tests/core/test_composite.py	/^def test_multi_io_erros(tmpdir):$/;"	f
test_multi_plot_scalars	tests/plotting/test_plotting.py	/^def test_multi_plot_scalars(verify_image_cache):$/;"	f
test_multi_ray_trace	tests/core/test_polydata.py	/^def test_multi_ray_trace(sphere):$/;"	f
test_multi_renderers	tests/plotting/test_plotting.py	/^def test_multi_renderers():$/;"	f
test_multi_renderers_bad_indices	tests/plotting/test_plotting.py	/^def test_multi_renderers_bad_indices():$/;"	f
test_multi_renderers_subplot_ind_1x2	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_1x2():$/;"	f
test_multi_renderers_subplot_ind_1x3	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_1x3():$/;"	f
test_multi_renderers_subplot_ind_2x1	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_2x1():$/;"	f
test_multi_renderers_subplot_ind_3x1	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_3x1():$/;"	f
test_multi_renderers_subplot_ind_3x1_splitting_pos	tests/plotting/test_plotting.py	/^def test_multi_renderers_subplot_ind_3x1_splitting_pos():$/;"	f
test_multi_slice_index	tests/core/test_composite.py	/^def test_multi_slice_index(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_multiblock_partitioned_zip	tests/core/test_composite.py	/^def test_multiblock_partitioned_zip(container):$/;"	f
test_multiblock_ref	tests/core/test_composite.py	/^def test_multiblock_ref():$/;"	f
test_multiblock_volume_rendering	tests/plotting/test_plotting.py	/^def test_multiblock_volume_rendering(uniform):$/;"	f
test_multiblockplot3dreader	tests/core/test_reader.py	/^def test_multiblockplot3dreader():$/;"	f
test_multicomp_plot_common	tests/plotting/test_charts.py	/^def test_multicomp_plot_common(plot_f, request):$/;"	f
test_multiple_lines	tests/core/test_geometric_objects.py	/^def test_multiple_lines():$/;"	f
test_multiple_lines_source	tests/core/test_geometric_sources.py	/^def test_multiple_lines_source():$/;"	f
test_multiple_texture_coordinates	tests/plotting/test_texture.py	/^def test_multiple_texture_coordinates():$/;"	f
test_n_cells_deprecated	tests/core/test_cells.py	/^def test_n_cells_deprecated():$/;"	f
test_n_faces	tests/core/test_polydata.py	/^def test_n_faces(default_n_faces):$/;"	f
test_n_faces_etc_deprecated	tests/core/test_polydata.py	/^def test_n_faces_etc_deprecated(cells: str):$/;"	f
test_n_faces_strict	tests/core/test_polydata.py	/^def test_n_faces_strict():$/;"	f
test_n_lines	tests/core/test_polydata.py	/^def test_n_lines():$/;"	f
test_n_verts	tests/core/test_polydata.py	/^def test_n_verts():$/;"	f
test_namespace_contract	tests/plotting/test_scraper.py	/^def test_namespace_contract():$/;"	f
test_nan_color	tests/plotting/test_lookup_table.py	/^def test_nan_color(lut):$/;"	f
test_needs_vtk_version	tests/test_conftest.py	/^def test_needs_vtk_version($/;"	f
test_needs_vtk_version_tuple	tests/test_conftest.py	/^def test_needs_vtk_version_tuple($/;"	f
test_nek5000_reader	tests/core/test_reader.py	/^def test_nek5000_reader():$/;"	f
test_nifti_reader	tests/core/test_reader.py	/^def test_nifti_reader():$/;"	f
test_no_active	tests/core/test_dataset.py	/^def test_no_active():$/;"	f
test_no_added_with_scalar_bar	tests/plotting/test_plotter.py	/^def test_no_added_with_scalar_bar(sphere):$/;"	f
test_no_arrows	tests/core/test_dataset.py	/^def test_no_arrows(grid):$/;"	f
test_no_copy_pointset_init	tests/core/test_grid.py	/^def test_no_copy_pointset_init():$/;"	f
test_no_copy_pointset_points_setter	tests/core/test_grid.py	/^def test_no_copy_pointset_points_setter():$/;"	f
test_no_copy_polydata_init	tests/core/test_grid.py	/^def test_no_copy_polydata_init():$/;"	f
test_no_copy_polydata_points_setter	tests/core/test_grid.py	/^def test_no_copy_polydata_points_setter():$/;"	f
test_no_copy_rectilinear_grid	tests/core/test_grid.py	/^def test_no_copy_rectilinear_grid():$/;"	f
test_no_copy_structured_mesh_init	tests/core/test_grid.py	/^def test_no_copy_structured_mesh_init(structured_points):$/;"	f
test_no_copy_structured_mesh_points_setter	tests/core/test_grid.py	/^def test_no_copy_structured_mesh_points_setter(structured_points):$/;"	f
test_no_copy_unstructured_grid_points_setter	tests/core/test_grid.py	/^def test_no_copy_unstructured_grid_points_setter():$/;"	f
test_no_empty_meshes	tests/plotting/test_plotting.py	/^def test_no_empty_meshes():$/;"	f
test_no_new_attr_subclass	tests/core/test_utilities.py	/^def test_no_new_attr_subclass(no_new_attr_subclass):$/;"	f
test_no_texture_coordinates	tests/core/test_dataset.py	/^def test_no_texture_coordinates(grid):$/;"	f
test_normals_get	tests/core/test_datasetattributes.py	/^def test_normals_get(plane):$/;"	f
test_normals_name	tests/core/test_datasetattributes.py	/^def test_normals_name(plane):$/;"	f
test_normals_raise_field	tests/core/test_datasetattributes.py	/^def test_normals_raise_field(plane):$/;"	f
test_normals_set	tests/core/test_datasetattributes.py	/^def test_normals_set():$/;"	f
test_not_current	tests/plotting/test_plotting.py	/^def test_not_current(verify_image_cache):$/;"	f
test_nrrd_reader	tests/core/test_reader.py	/^def test_nrrd_reader():$/;"	f
test_numpy_to_idarr_bool	tests/core/test_cells.py	/^def test_numpy_to_idarr_bool():$/;"	f
test_numpy_to_texture	tests/plotting/test_texture.py	/^def test_numpy_to_texture():$/;"	f
test_objreader	tests/core/test_reader.py	/^def test_objreader():$/;"	f
test_observer	tests/core/test_utilities.py	/^def test_observer():$/;"	f
test_observers	tests/plotting/test_render_window_interactor.py	/^def test_observers():$/;"	f
test_octahedron	tests/core/test_geometric_objects.py	/^def test_octahedron():$/;"	f
test_only_screenshots_flag	tests/plotting/test_plotter.py	/^def test_only_screenshots_flag(sphere, tmpdir, global_variables_reset):$/;"	f
test_opacity	tests/plotting/mappers/test_composite_mapper.py	/^def test_opacity(block_attr):$/;"	f
test_opacity_by_array	tests/plotting/test_plotting.py	/^def test_opacity_by_array(uniform):$/;"	f
test_opacity_by_array_direct	tests/plotting/test_plotting.py	/^def test_opacity_by_array_direct(plane, verify_image_cache):$/;"	f
test_opacity_by_array_preference	tests/plotting/test_plotting.py	/^def test_opacity_by_array_preference():$/;"	f
test_opacity_by_array_uncertainty	tests/plotting/test_plotting.py	/^def test_opacity_by_array_uncertainty(uniform):$/;"	f
test_opacity_by_array_user_transform	tests/plotting/test_plotting.py	/^def test_opacity_by_array_user_transform(uniform, verify_image_cache):$/;"	f
test_opacity_mismatched_fail	tests/plotting/test_plotting.py	/^def test_opacity_mismatched_fail(uniform):$/;"	f
test_opacity_transfer_functions	tests/plotting/test_plotting.py	/^def test_opacity_transfer_functions():$/;"	f
test_opacity_transfer_functions_raises	tests/plotting/test_plotting.py	/^def test_opacity_transfer_functions_raises(mapping):$/;"	f
test_open_gif_invalid	tests/plotting/test_plotting.py	/^def test_open_gif_invalid():$/;"	f
test_openfoam_case_type	tests/core/test_reader.py	/^def test_openfoam_case_type():$/;"	f
test_openfoam_cell_to_point_default	tests/core/test_reader.py	/^def test_openfoam_cell_to_point_default():$/;"	f
test_openfoam_decompose_polyhedra	tests/core/test_reader.py	/^def test_openfoam_decompose_polyhedra():$/;"	f
test_openfoam_patch_arrays	tests/core/test_reader.py	/^def test_openfoam_patch_arrays():$/;"	f
test_openfoam_skip_zero_time	tests/core/test_reader.py	/^def test_openfoam_skip_zero_time():$/;"	f
test_openfoamreader_active_time	tests/core/test_reader.py	/^def test_openfoamreader_active_time():$/;"	f
test_openfoamreader_arrays_time	tests/core/test_reader.py	/^def test_openfoamreader_arrays_time():$/;"	f
test_openfoamreader_read_data_time_point	tests/core/test_reader.py	/^def test_openfoamreader_read_data_time_point():$/;"	f
test_openfoamreader_read_data_time_value	tests/core/test_reader.py	/^def test_openfoamreader_read_data_time_value():$/;"	f
test_opt_in_n_faces_strict	tests/core/test_polydata.py	/^def test_opt_in_n_faces_strict(default_n_faces):$/;"	f
test_orbit_on_path	tests/plotting/test_plotting.py	/^def test_orbit_on_path(sphere):$/;"	f
test_orientation_cube	tests/plotting/test_demos.py	/^def test_orientation_cube():$/;"	f
test_oriented_bounding_box	tests/core/test_dataset_filters.py	/^def test_oriented_bounding_box():$/;"	f
test_origin	tests/plotting/test_axes.py	/^def test_origin(axes):$/;"	f
test_orthogonal_planes_source	tests/core/test_geometric_sources.py	/^def test_orthogonal_planes_source():$/;"	f
test_orthogonal_planes_source_bounds	tests/core/test_geometric_sources.py	/^def test_orthogonal_planes_source_bounds():$/;"	f
test_orthogonal_planes_source_names	tests/core/test_geometric_sources.py	/^def test_orthogonal_planes_source_names():$/;"	f
test_orthogonal_planes_source_normal_sign	tests/core/test_geometric_sources.py	/^def test_orthogonal_planes_source_normal_sign():$/;"	f
test_orthogonal_planes_source_normals	tests/plotting/test_plotting.py	/^def test_orthogonal_planes_source_normals(normal_sign, plane):$/;"	f
test_orthogonal_planes_source_push	tests/core/test_geometric_sources.py	/^def test_orthogonal_planes_source_push(distance):$/;"	f
test_orthogonal_planes_source_push	tests/plotting/test_plotting.py	/^def test_orthogonal_planes_source_push(distance):$/;"	f
test_orthogonal_planes_source_resolution	tests/plotting/test_plotting.py	/^def test_orthogonal_planes_source_resolution(resolution):$/;"	f
test_orthographic_slicer	tests/plotting/test_plotting.py	/^def test_orthographic_slicer(uniform):$/;"	f
test_outline	tests/core/test_dataset_filters.py	/^def test_outline(datasets):$/;"	f
test_outline_composite	tests/core/test_dataset_filters.py	/^def test_outline_composite(multiblock_all):$/;"	f
test_outline_corners	tests/core/test_dataset_filters.py	/^def test_outline_corners(datasets):$/;"	f
test_outline_corners_composite	tests/core/test_dataset_filters.py	/^def test_outline_corners_composite(multiblock_all):$/;"	f
test_outline_opacity	tests/plotting/test_widgets.py	/^def test_outline_opacity(uniform, outline_opacity):$/;"	f
test_pack_labels	tests/core/test_dataset_filters.py	/^def test_pack_labels(labeled_image):$/;"	f
test_pack_labels_inplace	tests/core/test_dataset_filters.py	/^def test_pack_labels_inplace(uniform):$/;"	f
test_pack_labels_output_scalars	tests/core/test_dataset_filters.py	/^def test_pack_labels_output_scalars(labeled_image):$/;"	f
test_pack_labels_preference	tests/core/test_dataset_filters.py	/^def test_pack_labels_preference(uniform):$/;"	f
test_pad_image	tests/core/test_imagedata_filters.py	/^def test_pad_image(zero_dimensionality_image, pad_size, pad_value, dimensionality):$/;"	f
test_pad_image_deprecation	tests/core/test_imagedata_filters.py	/^def test_pad_image_deprecation(zero_dimensionality_image):$/;"	f
test_pad_image_does_not_pad_cell_data	tests/core/test_imagedata_filters.py	/^def test_pad_image_does_not_pad_cell_data(uniform, all_scalars):$/;"	f
test_pad_image_multi_component	tests/core/test_imagedata_filters.py	/^def test_pad_image_multi_component(zero_dimensionality_image):$/;"	f
test_pad_image_pad_size_axis	tests/core/test_imagedata_filters.py	/^def test_pad_image_pad_size_axis($/;"	f
test_pad_image_pad_size_bounds	tests/core/test_imagedata_filters.py	/^def test_pad_image_pad_size_bounds($/;"	f
test_pad_image_raises	tests/core/test_imagedata_filters.py	/^def test_pad_image_raises(zero_dimensionality_image, uniform, beach):$/;"	f
test_pad_image_scalars	tests/core/test_imagedata_filters.py	/^def test_pad_image_scalars(zero_dimensionality_image, all_scalars, scalars, expected_scalars):$/;"	f
test_pad_image_wrap_mirror	tests/core/test_imagedata_filters.py	/^def test_pad_image_wrap_mirror(uniform, pad_value):$/;"	f
test_parallel_projection	tests/plotting/test_plotting.py	/^def test_parallel_projection():$/;"	f
test_parallel_scale	tests/plotting/test_camera.py	/^def test_parallel_scale(camera):$/;"	f
test_parallel_scale	tests/plotting/test_plotting.py	/^def test_parallel_scale():$/;"	f
test_parse_field_choice_raises	tests/core/test_utilities.py	/^def test_parse_field_choice_raises():$/;"	f
test_parse_interaction_event	tests/core/test_utilities.py	/^def test_parse_interaction_event($/;"	f
test_parse_interaction_event_raises_str	tests/core/test_utilities.py	/^def test_parse_interaction_event_raises_str():$/;"	f
test_parse_interaction_event_raises_wrong_type	tests/core/test_utilities.py	/^def test_parse_interaction_event_raises_wrong_type():$/;"	f
test_particle_reader	tests/core/test_reader.py	/^def test_particle_reader():$/;"	f
test_partition	tests/core/test_dataset.py	/^def test_partition(hexbeam):$/;"	f
test_partitioned_dataset_deep_copy	tests/core/test_partitioned.py	/^def test_partitioned_dataset_deep_copy(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_partitioned_dataset_negative_index	tests/core/test_partitioned.py	/^def test_partitioned_dataset_negative_index(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_partitioned_dataset_repr	tests/core/test_partitioned.py	/^def test_partitioned_dataset_repr(ant, sphere, uniform, airplane):$/;"	f
test_partitioned_dataset_shallow_copy	tests/core/test_partitioned.py	/^def test_partitioned_dataset_shallow_copy(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_partitions_slice_index	tests/core/test_partitioned.py	/^def test_partitions_slice_index(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_path	tests/core/test_grid.py	/^test_path = str(Path(__file__).resolve().parent)$/;"	v
test_path	tests/core/test_polydata.py	/^test_path = str(Path(__file__).resolve().parent)$/;"	v
test_path_picking	tests/plotting/test_picking.py	/^def test_path_picking():$/;"	f
test_pathlib_read_write	tests/core/test_grid.py	/^def test_pathlib_read_write(tmpdir, hexbeam):$/;"	f
test_pathlib_read_write	tests/core/test_polydata.py	/^def test_pathlib_read_write(tmpdir, sphere):$/;"	f
test_pathlib_read_write	tests/test_meshio.py	/^def test_pathlib_read_write(tmpdir, sphere):$/;"	f
test_pbr	tests/plotting/test_plotting.py	/^def test_pbr(sphere, verify_image_cache):$/;"	f
test_pdbreader	tests/core/test_reader.py	/^def test_pdbreader():$/;"	f
test_pen	tests/plotting/test_charts.py	/^def test_pen():$/;"	f
test_pentagonal_prism	tests/examples/test_cell_examples.py	/^def test_pentagonal_prism():$/;"	f
test_perlin_noise	tests/core/test_imaging.py	/^def test_perlin_noise():$/;"	f
test_pickable_actors	tests/plotting/test_plotter.py	/^def test_pickable_actors():$/;"	f
test_picker_raises	tests/plotting/test_picking.py	/^def test_picker_raises(picker, mocker: MockerFixture):$/;"	f
test_picker_raises	tests/plotting/test_render_window_interactor.py	/^def test_picker_raises(picker, mocker: MockerFixture):$/;"	f
test_pickle_invalid_format	tests/core/test_dataobject.py	/^def test_pickle_invalid_format(sphere):$/;"	f
test_pickle_multiblock	tests/core/test_dataobject.py	/^def test_pickle_multiblock(multiblock_all_with_nested_and_none, pickle_format):$/;"	f
test_pickle_multiprocessing	tests/core/test_dataobject.py	/^def test_pickle_multiprocessing(datasets, pickle_format):$/;"	f
test_pickle_serialize_deserialize	tests/core/test_dataobject.py	/^def test_pickle_serialize_deserialize(datasets, pickle_format, file_ext, tmp_path):$/;"	f
test_pickle_user_dict	tests/core/test_dataobject.py	/^def test_pickle_user_dict(sphere, pickle_format):$/;"	f
test_pixel	tests/examples/test_cell_examples.py	/^def test_pixel():$/;"	f
test_plane	tests/core/test_geometric_objects.py	/^def test_plane():$/;"	f
test_plane_direction	tests/core/test_geometric_objects.py	/^def test_plane_direction(expected):$/;"	f
test_plane_size	tests/core/test_geometric_objects.py	/^def test_plane_size():$/;"	f
test_plane_source	tests/core/test_geometric_sources.py	/^def test_plane_source():$/;"	f
test_plane_source_push	tests/core/test_geometric_sources.py	/^def test_plane_source_push():$/;"	f
test_planes_assembly	tests/plotting/test_plotting.py	/^def test_planes_assembly(airplane):$/;"	f
test_planes_assembly_camera	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_camera(planes_assembly):$/;"	f
test_planes_assembly_label_mode	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_label_mode(planes_assembly):$/;"	f
test_planes_assembly_label_mode_init	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_label_mode_init():$/;"	f
test_planes_assembly_label_position	tests/plotting/test_plotting.py	/^def test_planes_assembly_label_position($/;"	f
test_planes_assembly_label_size	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_label_size(planes_assembly):$/;"	f
test_planes_assembly_label_size	tests/plotting/test_plotting.py	/^def test_planes_assembly_label_size(bounds, label_size):$/;"	f
test_planes_assembly_label_size_init	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_label_size_init():$/;"	f
test_planes_assembly_labels	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_labels(planes_assembly):$/;"	f
test_planes_assembly_labels_init	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_labels_init():$/;"	f
test_planes_assembly_name	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_name():$/;"	f
test_planes_assembly_opacity	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_opacity(planes_assembly):$/;"	f
test_planes_assembly_opacity_init	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_opacity_init():$/;"	f
test_planes_assembly_repr	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_repr(planes_assembly):$/;"	f
test_planes_assembly_x_color	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_x_color(planes_assembly):$/;"	f
test_planes_assembly_x_label	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_x_label(planes_assembly):$/;"	f
test_planes_assembly_x_label_init	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_x_label_init():$/;"	f
test_planes_assembly_y_color	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_y_color(planes_assembly):$/;"	f
test_planes_assembly_y_label	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_y_label(planes_assembly):$/;"	f
test_planes_assembly_y_label_init	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_y_label_init():$/;"	f
test_planes_assembly_z_color	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_z_color(planes_assembly):$/;"	f
test_planes_assembly_z_label	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_z_label(planes_assembly):$/;"	f
test_planes_assembly_z_label_init	tests/plotting/test_axes_assembly.py	/^def test_planes_assembly_z_label_init():$/;"	f
test_platonic_invalids	tests/core/test_geometric_objects.py	/^def test_platonic_invalids():$/;"	f
test_platonic_solid_source	tests/core/test_geometric_sources.py	/^def test_platonic_solid_source():$/;"	f
test_platonic_solids	tests/core/test_geometric_objects.py	/^def test_platonic_solids(kind_str, kind_int, n_vertices, n_faces):$/;"	f
test_plot	tests/plotting/test_plotting.py	/^def test_plot(sphere, tmpdir, verify_image_cache, anti_aliasing):$/;"	f
test_plot3dmetareader	tests/core/test_reader.py	/^def test_plot3dmetareader():$/;"	f
test_plot_above_below_color	tests/plotting/test_plotting.py	/^def test_plot_above_below_color(uniform):$/;"	f
test_plot_actor	tests/plotting/test_plotting.py	/^def test_plot_actor(sphere):$/;"	f
test_plot_add_scalar_bar	tests/plotting/test_plotting.py	/^def test_plot_add_scalar_bar(sphere, verify_image_cache):$/;"	f
test_plot_algorithm_cone	tests/plotting/test_plotting.py	/^def test_plot_algorithm_cone():$/;"	f
test_plot_algorithm_scalars	tests/plotting/test_plotting.py	/^def test_plot_algorithm_scalars():$/;"	f
test_plot_algorithm_widgets	tests/plotting/test_widgets.py	/^def test_plot_algorithm_widgets():$/;"	f
test_plot_ants_plane	tests/plotting/test_demos.py	/^def test_plot_ants_plane():$/;"	f
test_plot_arrow	tests/plotting/test_plotting.py	/^def test_plot_arrow():$/;"	f
test_plot_arrows	tests/plotting/test_plotting.py	/^def test_plot_arrows():$/;"	f
test_plot_boundaries	tests/plotting/test_plotting_utilities.py	/^def test_plot_boundaries():$/;"	f
test_plot_bounds_axes_with_no_data	tests/plotting/test_plotting.py	/^def test_plot_bounds_axes_with_no_data():$/;"	f
test_plot_categories_int	tests/plotting/test_plotting.py	/^def test_plot_categories_int(sphere):$/;"	f
test_plot_categories_true	tests/plotting/test_plotting.py	/^def test_plot_categories_true(sphere):$/;"	f
test_plot_cell	tests/plotting/test_plotting.py	/^def test_plot_cell():$/;"	f
test_plot_cell_data	tests/plotting/test_plotting.py	/^def test_plot_cell_data(sphere, verify_image_cache):$/;"	f
test_plot_clim	tests/plotting/test_plotting.py	/^def test_plot_clim(sphere):$/;"	f
test_plot_common	tests/plotting/test_charts.py	/^def test_plot_common(plot_f, request):$/;"	f
test_plot_compare_four	tests/plotting/test_plotting.py	/^def test_plot_compare_four():$/;"	f
test_plot_complex_value	tests/plotting/test_plotting.py	/^def test_plot_complex_value(plane, verify_image_cache):$/;"	f
test_plot_composite_bool	tests/plotting/test_plotting.py	/^def test_plot_composite_bool(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_lookup_table	tests/plotting/test_plotting.py	/^def test_plot_composite_lookup_table(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_many_options	tests/plotting/test_plotting.py	/^def test_plot_composite_many_options(multiblock_poly):$/;"	f
test_plot_composite_poly_complex	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_complex(multiblock_poly):$/;"	f
test_plot_composite_poly_component_nested_multiblock	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_component_nested_multiblock(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_poly_component_norm	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_component_norm(multiblock_poly):$/;"	f
test_plot_composite_poly_component_single	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_component_single(multiblock_poly):$/;"	f
test_plot_composite_poly_no_scalars	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_no_scalars(multiblock_poly):$/;"	f
test_plot_composite_poly_scalars_cell	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_scalars_cell(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_poly_scalars_opacity	tests/plotting/test_plotting.py	/^def test_plot_composite_poly_scalars_opacity(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_preference_cell	tests/plotting/test_plotting.py	/^def test_plot_composite_preference_cell(multiblock_poly, verify_image_cache):$/;"	f
test_plot_composite_raise	tests/plotting/test_plotting.py	/^def test_plot_composite_raise(sphere, multiblock_poly):$/;"	f
test_plot_composite_rgba	tests/plotting/test_plotting.py	/^def test_plot_composite_rgba(multiblock_poly):$/;"	f
test_plot_cubemap_alone	tests/plotting/test_plotting.py	/^def test_plot_cubemap_alone(cubemap, verify_image_cache):$/;"	f
test_plot_curvature	tests/plotting/test_plotting_utilities.py	/^def test_plot_curvature(skip_check_gc):$/;"	f
test_plot_curvature_pointset	tests/plotting/test_plotting_utilities.py	/^def test_plot_curvature_pointset(skip_check_gc):$/;"	f
test_plot_datasets	tests/plotting/test_demos.py	/^def test_plot_datasets():$/;"	f
test_plot_datasets_dataset_type	tests/plotting/test_demos.py	/^def test_plot_datasets_dataset_type():$/;"	f
test_plot_depth_peeling	tests/plotting/test_plotting.py	/^def test_plot_depth_peeling():$/;"	f
test_plot_eye_dome_lighting_enable_disable	tests/plotting/test_plotting.py	/^def test_plot_eye_dome_lighting_enable_disable(airplane):$/;"	f
test_plot_eye_dome_lighting_plot	tests/plotting/test_plotting.py	/^def test_plot_eye_dome_lighting_plot(airplane):$/;"	f
test_plot_eye_dome_lighting_plotter	tests/plotting/test_plotting.py	/^def test_plot_eye_dome_lighting_plotter(airplane):$/;"	f
test_plot_glyphs	tests/plotting/test_demos.py	/^def test_plot_glyphs():$/;"	f
test_plot_helper_two_datasets	tests/plotting/test_plotting.py	/^def test_plot_helper_two_datasets(sphere, airplane):$/;"	f
test_plot_helper_two_volumes	tests/plotting/test_plotting.py	/^def test_plot_helper_two_volumes(uniform, verify_image_cache):$/;"	f
test_plot_helper_volume	tests/plotting/test_plotting.py	/^def test_plot_helper_volume(uniform, verify_image_cache):$/;"	f
test_plot_increment_point_size	tests/plotting/test_plotting.py	/^def test_plot_increment_point_size():$/;"	f
test_plot_individual_cell	tests/plotting/test_plotting.py	/^def test_plot_individual_cell(hexbeam):$/;"	f
test_plot_invalid_add_scalar_bar	tests/plotting/test_plotting.py	/^def test_plot_invalid_add_scalar_bar():$/;"	f
test_plot_invalid_style	tests/plotting/test_plotting.py	/^def test_plot_invalid_style(sphere):$/;"	f
test_plot_label_fmt	tests/plotting/test_plotting.py	/^def test_plot_label_fmt(sphere):$/;"	f
test_plot_lighting_change_positional_false_true	tests/plotting/test_plotting.py	/^def test_plot_lighting_change_positional_false_true(sphere):$/;"	f
test_plot_lighting_change_positional_true_false	tests/plotting/test_plotting.py	/^def test_plot_lighting_change_positional_true_false(sphere):$/;"	f
test_plot_list	tests/plotting/test_plotting.py	/^def test_plot_list():$/;"	f
test_plot_logo	tests/plotting/test_demos.py	/^def test_plot_logo():$/;"	f
test_plot_logo	tests/plotting/test_plotting.py	/^def test_plot_logo():$/;"	f
test_plot_mesh_background	tests/plotting/test_plotting.py	/^def test_plot_mesh_background(background):$/;"	f
test_plot_mesh_background_raises	tests/plotting/test_plotting.py	/^def test_plot_mesh_background_raises():$/;"	f
test_plot_nan_color	tests/plotting/test_plotting.py	/^def test_plot_nan_color(uniform):$/;"	f
test_plot_no_active_scalars	tests/plotting/test_plotting.py	/^def test_plot_no_active_scalars(sphere):$/;"	f
test_plot_no_silhouette	tests/plotting/test_plotting.py	/^def test_plot_no_silhouette(tri_cylinder):$/;"	f
test_plot_normals	tests/plotting/test_plotting_utilities.py	/^def test_plot_normals(flip, faces):$/;"	f
test_plot_normals_smooth_shading	tests/plotting/test_plotting.py	/^def test_plot_normals_smooth_shading(sphere, use_custom_normals, smooth_shading):$/;"	f
test_plot_numpy_texture	tests/plotting/test_plotting.py	/^def test_plot_numpy_texture():$/;"	f
test_plot_over_circular_arc	tests/core/test_dataset_filters.py	/^def test_plot_over_circular_arc(tmpdir):$/;"	f
test_plot_over_circular_arc_normal	tests/core/test_dataset_filters.py	/^def test_plot_over_circular_arc_normal(tmpdir):$/;"	f
test_plot_over_line	tests/core/test_dataset_filters.py	/^def test_plot_over_line(tmpdir):$/;"	f
test_plot_points_gaussian	tests/plotting/test_plotting.py	/^def test_plot_points_gaussian(sphere):$/;"	f
test_plot_points_gaussian_as_spheres	tests/plotting/test_plotting.py	/^def test_plot_points_gaussian_as_spheres(sphere):$/;"	f
test_plot_points_gaussian_scalars	tests/plotting/test_plotting.py	/^def test_plot_points_gaussian_scalars(sphere):$/;"	f
test_plot_points_gaussian_scale	tests/plotting/test_plotting.py	/^def test_plot_points_gaussian_scale(sphere):$/;"	f
test_plot_pointset_widgets	tests/plotting/test_widgets.py	/^def test_plot_pointset_widgets(pointset):$/;"	f
test_plot_pyvista_ndarray	tests/plotting/test_plotting.py	/^def test_plot_pyvista_ndarray(sphere):$/;"	f
test_plot_return_cpos	tests/plotting/test_plotting.py	/^def test_plot_return_cpos(sphere):$/;"	f
test_plot_return_img_with_cpos	tests/plotting/test_plotter.py	/^def test_plot_return_img_with_cpos(sphere: pv.PolyData):$/;"	f
test_plot_return_img_without_cpos	tests/plotting/test_plotter.py	/^def test_plot_return_img_without_cpos(sphere: pv.PolyData):$/;"	f
test_plot_rgb	tests/plotting/test_plotting.py	/^def test_plot_rgb(composite, dtype):$/;"	f
test_plot_rgb_implicit	tests/plotting/test_plotting.py	/^def test_plot_rgb_implicit(composite, scalars):$/;"	f
test_plot_shadows	tests/plotting/test_plotting.py	/^def test_plot_shadows():$/;"	f
test_plot_shadows_enable_disable	tests/plotting/test_plotting.py	/^def test_plot_shadows_enable_disable():$/;"	f
test_plot_show_bounds	tests/plotting/test_plotting.py	/^def test_plot_show_bounds(sphere):$/;"	f
test_plot_show_bounds_params	tests/plotting/test_plotting.py	/^def test_plot_show_bounds_params(grid, location):$/;"	f
test_plot_show_grid	tests/plotting/test_plotting.py	/^def test_plot_show_grid(sphere):$/;"	f
test_plot_show_grid_with_mesh	tests/plotting/test_plotting.py	/^def test_plot_show_grid_with_mesh(hexbeam, plane, verify_image_cache):$/;"	f
test_plot_show_vertices	tests/plotting/test_plotting.py	/^def test_plot_show_vertices(sphere, hexbeam, multiblock_all):$/;"	f
test_plot_sigmoid_opacity_transfer_functions	tests/plotting/test_plotting.py	/^def test_plot_sigmoid_opacity_transfer_functions(uniform, opacity):$/;"	f
test_plot_silhouette	tests/plotting/test_plotting.py	/^def test_plot_silhouette(tri_cylinder):$/;"	f
test_plot_silhouette_method	tests/plotting/test_plotting.py	/^def test_plot_silhouette_method(tri_cylinder):$/;"	f
test_plot_silhouette_non_poly	tests/plotting/test_plotting.py	/^def test_plot_silhouette_non_poly(hexbeam):$/;"	f
test_plot_silhouette_options	tests/plotting/test_plotting.py	/^def test_plot_silhouette_options(tri_cylinder):$/;"	f
test_plot_string_array	tests/plotting/test_plotting.py	/^def test_plot_string_array(verify_image_cache):$/;"	f
test_plot_texture	tests/plotting/test_plotting.py	/^def test_plot_texture():$/;"	f
test_plot_texture_alone	tests/plotting/test_plotting.py	/^def test_plot_texture_alone(texture):$/;"	f
test_plot_texture_flip_x	tests/plotting/test_plotting.py	/^def test_plot_texture_flip_x(texture):$/;"	f
test_plot_texture_flip_y	tests/plotting/test_plotting.py	/^def test_plot_texture_flip_y(texture):$/;"	f
test_plot_update	tests/plotting/test_plotting.py	/^def test_plot_update(sphere):$/;"	f
test_plot_volume_rgba	tests/plotting/test_plotting.py	/^def test_plot_volume_rgba(uniform):$/;"	f
test_plot_volume_ugrid	tests/plotting/test_plotting.py	/^def test_plot_volume_ugrid(verify_image_cache):$/;"	f
test_plot_wave	tests/plotting/test_demos.py	/^def test_plot_wave():$/;"	f
test_plot_window_size_context	tests/plotting/test_plotting.py	/^def test_plot_window_size_context(sphere):$/;"	f
test_plot_wireframe_style	tests/plotting/test_plotting.py	/^def test_plot_wireframe_style():$/;"	f
test_plot_zoom	tests/plotting/test_plotting.py	/^def test_plot_zoom(sphere):$/;"	f
test_plotter_actors	tests/plotting/test_plotter.py	/^def test_plotter_actors(sphere, cube):$/;"	f
test_plotter_add_floor	tests/plotting/test_plotter.py	/^def test_plotter_add_floor(face, normal):$/;"	f
test_plotter_add_floor_raise_error	tests/plotting/test_plotter.py	/^def test_plotter_add_floor_raise_error():$/;"	f
test_plotter_add_mesh_multiblock_algo_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_mesh_multiblock_algo_raises(mocker: MockerFixture):$/;"	f
test_plotter_add_mesh_scalars_rgb_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_mesh_scalars_rgb_raises():$/;"	f
test_plotter_add_mesh_smooth_shading_algo_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_mesh_smooth_shading_algo_raises(mocker: MockerFixture):$/;"	f
test_plotter_add_mesh_texture_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_mesh_texture_raises(mocker: MockerFixture):$/;"	f
test_plotter_add_volume_clim	tests/plotting/test_plotter.py	/^def test_plotter_add_volume_clim(uniform: pv.ImageData):$/;"	f
test_plotter_add_volume_mapper_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_volume_mapper_raises():$/;"	f
test_plotter_add_volume_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_volume_raises(uniform: pv.ImageData, sphere: pv.PolyData):$/;"	f
test_plotter_add_volume_resolution_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_volume_resolution_raises(mocker: MockerFixture):$/;"	f
test_plotter_add_volume_scalar_raises	tests/plotting/test_plotter.py	/^def test_plotter_add_volume_scalar_raises():$/;"	f
test_plotter_anti_aliasing_raises	tests/plotting/test_plotter.py	/^def test_plotter_anti_aliasing_raises():$/;"	f
test_plotter_camera_position	tests/plotting/test_renderer.py	/^def test_plotter_camera_position():$/;"	f
test_plotter_image	tests/plotting/test_plotting.py	/^def test_plotter_image():$/;"	f
test_plotter_image_before_show	tests/plotting/test_plotter.py	/^def test_plotter_image_before_show():$/;"	f
test_plotter_image_scale	tests/plotting/test_plotter.py	/^def test_plotter_image_scale():$/;"	f
test_plotter_line_point_smoothing	tests/plotting/test_plotter.py	/^def test_plotter_line_point_smoothing():$/;"	f
test_plotter_lookup_table	tests/plotting/test_plotting.py	/^def test_plotter_lookup_table(sphere, verify_image_cache):$/;"	f
test_plotter_meshes	tests/plotting/test_plotter.py	/^def test_plotter_meshes(sphere, cube):$/;"	f
test_plotter_remains_shallow	tests/plotting/test_plotter.py	/^def test_plotter_remains_shallow():$/;"	f
test_plotter_render_callback	tests/plotting/test_plotting.py	/^def test_plotter_render_callback():$/;"	f
test_plotter_reset_key_events	tests/plotting/test_plotter.py	/^def test_plotter_reset_key_events():$/;"	f
test_plotter_scale	tests/plotting/test_plotting.py	/^def test_plotter_scale(sphere):$/;"	f
test_plotter_set_theme	tests/plotting/test_theme.py	/^def test_plotter_set_theme():$/;"	f
test_plotter_shape	tests/plotting/test_plotter.py	/^def test_plotter_shape():$/;"	f
test_plotter_shape_invalid	tests/plotting/test_plotting.py	/^def test_plotter_shape_invalid():$/;"	f
test_plotter_store_mouse_position_raises	tests/plotting/test_plotter.py	/^def test_plotter_store_mouse_position_raises(monkeypatch: pytest.MonkeyPatch):$/;"	f
test_plotter_suppress_rendering	tests/plotting/test_plotter.py	/^def test_plotter_suppress_rendering():$/;"	f
test_plotter_theme_raises	tests/plotting/test_plotter.py	/^def test_plotter_theme_raises():$/;"	f
test_plotter_update_coordinates	tests/plotting/test_plotter.py	/^def test_plotter_update_coordinates(sphere):$/;"	f
test_plotter_volume_add_scalars	tests/plotting/test_plotting.py	/^def test_plotter_volume_add_scalars(uniform):$/;"	f
test_plotter_volume_add_scalars_log_scale	tests/plotting/test_plotting.py	/^def test_plotter_volume_add_scalars_log_scale(uniform):$/;"	f
test_plotter_volume_lookup_table	tests/plotting/test_plotting.py	/^def test_plotter_volume_lookup_table(uniform):$/;"	f
test_plotter_zoom_camera	tests/plotting/test_plotter.py	/^def test_plotter_zoom_camera():$/;"	f
test_plotting_collection	tests/plotting/test_collection.py	/^def test_plotting_collection():$/;"	f
test_plotting_errors_namespace	tests/namespace/test_errors_namespace.py	/^def test_plotting_errors_namespace(name):$/;"	f
test_plotting_module_raises	tests/plotting/test_plotting.py	/^def test_plotting_module_raises(mocker: MockerFixture):$/;"	f
test_plotting_top_namespace	tests/namespace/test_plotting_namespace.py	/^def test_plotting_top_namespace(name):$/;"	f
test_plyreader	tests/core/test_reader.py	/^def test_plyreader():$/;"	f
test_png_reader	tests/core/test_reader.py	/^def test_png_reader():$/;"	f
test_pnm_reader	tests/core/test_reader.py	/^def test_pnm_reader():$/;"	f
test_point_cell_data_single_scalar_no_exception_raised	tests/core/test_dataset.py	/^def test_point_cell_data_single_scalar_no_exception_raised():$/;"	f
test_point_cell_field_data_empty_array	tests/core/test_dataset.py	/^def test_point_cell_field_data_empty_array(uniform, attribute, empty_shape, mesh_is_empty):$/;"	f
test_point_cell_ids	tests/core/test_dataset.py	/^def test_point_cell_ids(grid: DataSet, i0):$/;"	f
test_point_data	tests/core/test_dataset.py	/^def test_point_data(grid):$/;"	f
test_point_data_bad_value	tests/core/test_dataset.py	/^def test_point_data_bad_value(grid):$/;"	f
test_point_data_to_cell_data	tests/core/test_dataobject_filters.py	/^def test_point_data_to_cell_data():$/;"	f
test_point_data_to_cell_data_composite	tests/core/test_dataobject_filters.py	/^def test_point_data_to_cell_data_composite(multiblock_all):$/;"	f
test_point_is_inside_cell	tests/core/test_dataset.py	/^def test_point_is_inside_cell():$/;"	f
test_point_is_inside_cell_raises	tests/core/test_dataset.py	/^def test_point_is_inside_cell_raises(mocker: MockerFixture):$/;"	f
test_point_neighbors_levels	tests/core/test_dataset.py	/^def test_point_neighbors_levels(grid: DataSet, i0, n_levels):$/;"	f
test_point_normals_computes_new_normals	tests/core/test_polydata.py	/^def test_point_normals_computes_new_normals(ant):$/;"	f
test_point_normals_returns_active_normals	tests/core/test_polydata.py	/^def test_point_normals_returns_active_normals(ant_with_normals):$/;"	f
test_point_picking	tests/plotting/test_picking.py	/^def test_point_picking(left_clicking):$/;"	f
test_point_picking_window	tests/plotting/test_picking.py	/^def test_point_picking_window(pickable_window):$/;"	f
test_pointgrid_dimensionality	tests/core/test_pointset.py	/^def test_pointgrid_dimensionality(grid_class, dimensionality, dimensions):$/;"	f
test_points_np_bool	tests/core/test_dataset.py	/^def test_points_np_bool(grid):$/;"	f
test_points_to_cells	tests/core/test_imagedata_filters.py	/^def test_points_to_cells(uniform_many_scalars, active_scalars, copy):$/;"	f
test_points_to_cells_and_cells_to_points_dimensions	tests/core/test_imagedata_filters.py	/^def test_points_to_cells_and_cells_to_points_dimensions($/;"	f
test_points_to_cells_and_cells_to_points_dimensions_incorrect_number_data	tests/core/test_imagedata_filters.py	/^def test_points_to_cells_and_cells_to_points_dimensions_incorrect_number_data():$/;"	f
test_points_to_cells_and_cells_to_points_round_trip_equal	tests/core/test_imagedata_filters.py	/^def test_points_to_cells_and_cells_to_points_round_trip_equal(extent):$/;"	f
test_points_to_cells_scalars	tests/core/test_imagedata_filters.py	/^def test_points_to_cells_scalars(uniform):$/;"	f
test_points_to_double	tests/core/test_pointset.py	/^def test_points_to_double():$/;"	f
test_points_uint8	tests/core/test_dataset.py	/^def test_points_uint8(grid):$/;"	f
test_pointset	tests/core/test_pointset.py	/^def test_pointset(pointset):$/;"	f
test_pointset_basic	tests/core/test_pointset.py	/^def test_pointset_basic():$/;"	f
test_pointset_force_float	tests/core/test_pointset.py	/^def test_pointset_force_float(force_float, expected_data_type):$/;"	f
test_pointset_from_vtk	tests/core/test_pointset.py	/^def test_pointset_from_vtk():$/;"	f
test_pointset_plot	tests/plotting/test_plotting.py	/^def test_pointset_plot(pointset):$/;"	f
test_pointset_plot_as_points	tests/plotting/test_plotting.py	/^def test_pointset_plot_as_points(pointset):$/;"	f
test_pointset_plot_as_points_vtk	tests/plotting/test_plotting.py	/^def test_pointset_plot_as_points_vtk():$/;"	f
test_pointset_plot_vtk	tests/plotting/test_plotting.py	/^def test_pointset_plot_vtk():$/;"	f
test_pointset_to_polydata_algorithm	tests/plotting/test_plotting.py	/^def test_pointset_to_polydata_algorithm(pointset):$/;"	f
test_pointset_wrap	tests/core/test_pointset.py	/^def test_pointset_wrap():$/;"	f
test_poked_subplot_context	tests/plotting/test_render_window_interactor.py	/^def test_poked_subplot_context(verify_image_cache):$/;"	f
test_poked_subplot_loc	tests/plotting/test_render_window_interactor.py	/^def test_poked_subplot_loc():$/;"	f
test_poly_data_strip	tests/core/test_dataset_filters.py	/^def test_poly_data_strip():$/;"	f
test_poly_line	tests/examples/test_cell_examples.py	/^def test_poly_line():$/;"	f
test_poly_vertex	tests/examples/test_cell_examples.py	/^def test_poly_vertex():$/;"	f
test_polydata_eq	tests/core/test_dataobject.py	/^def test_polydata_eq(sphere):$/;"	f
test_polydata_repr_str	tests/core/test_polydata.py	/^def test_polydata_repr_str():$/;"	f
test_polydata_strip_neq	tests/core/test_dataobject.py	/^def test_polydata_strip_neq():$/;"	f
test_polygon	tests/core/test_geometric_objects.py	/^def test_polygon():$/;"	f
test_polygon	tests/examples/test_cell_examples.py	/^def test_polygon():$/;"	f
test_polygon_source	tests/core/test_geometric_sources.py	/^def test_polygon_source():$/;"	f
test_pop	tests/core/test_composite.py	/^def test_pop():$/;"	f
test_pop	tests/core/test_partitioned.py	/^def test_pop():$/;"	f
test_pop_should_fail_bad_argument	tests/core/test_datasetattributes.py	/^def test_pop_should_fail_bad_argument(removed_key, hexbeam_point_attributes):$/;"	f
test_pop_should_return_arange_narray	tests/core/test_datasetattributes.py	/^def test_pop_should_return_arange_narray(insert_arange_narray):$/;"	f
test_pop_should_return_bool_array	tests/core/test_datasetattributes.py	/^def test_pop_should_return_bool_array(insert_bool_array):$/;"	f
test_pop_should_return_string_array	tests/core/test_datasetattributes.py	/^def test_pop_should_return_string_array(insert_string_array):$/;"	f
test_positional	tests/plotting/test_lights.py	/^def test_positional():$/;"	f
test_positioning	tests/plotting/test_lights.py	/^def test_positioning():$/;"	f
test_prepare_smooth_shading_not_poly	tests/plotting/test_plotter.py	/^def test_prepare_smooth_shading_not_poly(hexbeam):$/;"	f
test_prepare_smooth_shading_point_cloud	tests/plotting/test_plotter.py	/^def test_prepare_smooth_shading_point_cloud(split_sharp_edges):$/;"	f
test_prepare_smooth_shading_texture	tests/plotting/test_plotter.py	/^def test_prepare_smooth_shading_texture(globe):$/;"	f
test_preserve_field_data_after_extract_cells	tests/core/test_datasetattributes.py	/^def test_preserve_field_data_after_extract_cells(hexbeam, arr):$/;"	f
test_principal_axes	tests/core/test_utilities.py	/^def test_principal_axes(points, expected_axes):$/;"	f
test_principal_axes_empty	tests/core/test_utilities.py	/^def test_principal_axes_empty():$/;"	f
test_principal_axes_return_std	tests/core/test_utilities.py	/^def test_principal_axes_return_std():$/;"	f
test_principal_axes_single_point	tests/core/test_utilities.py	/^def test_principal_axes_single_point():$/;"	f
test_principal_axes_success_with_many_points	tests/core/test_utilities.py	/^def test_principal_axes_success_with_many_points(one_million_points):$/;"	f
test_print_repr	tests/core/test_dataset.py	/^def test_print_repr(grid, display, html):$/;"	f
test_process_events_raises	tests/plotting/test_render_window_interactor.py	/^def test_process_events_raises(mocker: MockerFixture):$/;"	f
test_progress_monitor	tests/core/test_utilities.py	/^def test_progress_monitor():$/;"	f
test_progress_monitor_raises	tests/core/test_utilities.py	/^def test_progress_monitor_raises(mocker: MockerFixture):$/;"	f
test_project_points_to_plane	tests/core/test_polydata.py	/^def test_project_points_to_plane():$/;"	f
test_promote_type_runtime	tests/typing/mypy_plugin/test_plugin.py	/^def test_promote_type_runtime(decorated_single, decorated_double):$/;"	f
test_promote_type_static	tests/typing/mypy_plugin/test_plugin.py	/^def test_promote_type_static(use_plugin, promote_type, arg_type, expected_output, tmp_path):$/;"	f
test_prop_collection_append	tests/plotting/test_renderer.py	/^def test_prop_collection_append(prop_collection):$/;"	f
test_prop_collection_delitem	tests/plotting/test_renderer.py	/^def test_prop_collection_delitem(prop_collection):$/;"	f
test_prop_collection_insert	tests/plotting/test_renderer.py	/^def test_prop_collection_insert(prop_collection):$/;"	f
test_prop_collection_raises	tests/plotting/test_renderer.py	/^def test_prop_collection_raises(prop_collection):$/;"	f
test_prop_collection_setitem	tests/plotting/test_renderer.py	/^def test_prop_collection_setitem(prop_collection):$/;"	f
test_property_ambient	tests/plotting/test_property.py	/^def test_property_ambient(prop):$/;"	f
test_property_ambient_color	tests/plotting/test_property.py	/^def test_property_ambient_color(prop):$/;"	f
test_property_anisotropy	tests/plotting/test_property.py	/^def test_property_anisotropy(prop):$/;"	f
test_property_background_color	tests/plotting/test_text.py	/^def test_property_background_color(prop):$/;"	f
test_property_background_opacity	tests/plotting/test_text.py	/^def test_property_background_opacity(prop):$/;"	f
test_property_bold	tests/plotting/test_text.py	/^def test_property_bold(prop, bold):$/;"	f
test_property_color	tests/plotting/test_text.py	/^def test_property_color(prop):$/;"	f
test_property_culling	tests/plotting/test_property.py	/^def test_property_culling(prop, value):$/;"	f
test_property_diffuse	tests/plotting/test_property.py	/^def test_property_diffuse(prop):$/;"	f
test_property_diffuse_color	tests/plotting/test_property.py	/^def test_property_diffuse_color(prop):$/;"	f
test_property_edge_color	tests/plotting/test_property.py	/^def test_property_edge_color(prop):$/;"	f
test_property_edge_opacity	tests/plotting/test_property.py	/^def test_property_edge_opacity(prop):$/;"	f
test_property_enable_shadow	tests/plotting/test_text.py	/^def test_property_enable_shadow(prop):$/;"	f
test_property_font_family	tests/plotting/test_text.py	/^def test_property_font_family(prop):$/;"	f
test_property_font_size	tests/plotting/test_text.py	/^def test_property_font_size(prop):$/;"	f
test_property_frame_color	tests/plotting/test_text.py	/^def test_property_frame_color(prop):$/;"	f
test_property_frame_width	tests/plotting/test_text.py	/^def test_property_frame_width(prop):$/;"	f
test_property_init	tests/plotting/test_property.py	/^def test_property_init():$/;"	f
test_property_init	tests/plotting/test_text.py	/^def test_property_init():$/;"	f
test_property_interpolation	tests/plotting/test_property.py	/^def test_property_interpolation(prop):$/;"	f
test_property_italic	tests/plotting/test_text.py	/^def test_property_italic(prop, italic):$/;"	f
test_property_justification_horizontal	tests/plotting/test_text.py	/^def test_property_justification_horizontal(prop, justification):$/;"	f
test_property_justification_invalid	tests/plotting/test_text.py	/^def test_property_justification_invalid(prop):$/;"	f
test_property_justification_vertical	tests/plotting/test_text.py	/^def test_property_justification_vertical(prop, justification):$/;"	f
test_property_lighting	tests/plotting/test_property.py	/^def test_property_lighting(prop):$/;"	f
test_property_line_width	tests/plotting/test_property.py	/^def test_property_line_width(prop):$/;"	f
test_property_metallic	tests/plotting/test_property.py	/^def test_property_metallic(prop):$/;"	f
test_property_opacity	tests/plotting/test_property.py	/^def test_property_opacity(prop):$/;"	f
test_property_opacity	tests/plotting/test_text.py	/^def test_property_opacity(prop):$/;"	f
test_property_orientation	tests/plotting/test_text.py	/^def test_property_orientation(prop):$/;"	f
test_property_pbr	tests/plotting/test_plotting.py	/^def test_property_pbr(verify_image_cache):$/;"	f
test_property_point_size	tests/plotting/test_property.py	/^def test_property_point_size(prop):$/;"	f
test_property_render_lines_as_tubes	tests/plotting/test_property.py	/^def test_property_render_lines_as_tubes(prop):$/;"	f
test_property_render_points_as_spheres	tests/plotting/test_property.py	/^def test_property_render_points_as_spheres(prop):$/;"	f
test_property_roughness	tests/plotting/test_property.py	/^def test_property_roughness(prop):$/;"	f
test_property_set_font_file	tests/plotting/test_text.py	/^def test_property_set_font_file(prop):$/;"	f
test_property_shallow_copy	tests/plotting/test_text.py	/^def test_property_shallow_copy(prop, italic, bold):$/;"	f
test_property_show_edges	tests/plotting/test_property.py	/^def test_property_show_edges(prop):$/;"	f
test_property_show_frame	tests/plotting/test_text.py	/^def test_property_show_frame(prop):$/;"	f
test_property_specular	tests/plotting/test_property.py	/^def test_property_specular(prop):$/;"	f
test_property_specular_color	tests/plotting/test_property.py	/^def test_property_specular_color(prop):$/;"	f
test_property_specular_power	tests/plotting/test_property.py	/^def test_property_specular_power(prop):$/;"	f
test_property_style	tests/plotting/test_property.py	/^def test_property_style(prop):$/;"	f
test_prostar_reader	tests/core/test_reader.py	/^def test_prostar_reader():$/;"	f
test_protein_ribbon	tests/core/test_polydata_filters.py	/^def test_protein_ribbon():$/;"	f
test_public_namespace	tests/namespace/test_public_namespace.py	/^def test_public_namespace(name):$/;"	f
test_pvdreader	tests/core/test_reader.py	/^def test_pvdreader():$/;"	f
test_pvdreader_no_part_group	tests/core/test_reader.py	/^def test_pvdreader_no_part_group():$/;"	f
test_pvdreader_no_time_group	tests/core/test_reader.py	/^def test_pvdreader_no_time_group():$/;"	f
test_pyramid	tests/core/test_geometric_objects.py	/^def test_pyramid():$/;"	f
test_pyramid	tests/examples/test_cell_examples.py	/^def test_pyramid():$/;"	f
test_pyramid_raises	tests/core/test_geometric_objects.py	/^def test_pyramid_raises(points):$/;"	f
test_pyvista_oo_flag	tests/test_init.py	/^def test_pyvista_oo_flag():$/;"	f
test_pyvista_qt_raises	tests/plotting/test_plotting.py	/^def test_pyvista_qt_raises():$/;"	f
test_pyvista_read_exodus	tests/core/test_utilities.py	/^def test_pyvista_read_exodus(read_exodus_mock):$/;"	f
test_pyvistandarray_assign	tests/plotting/test_collection.py	/^def test_pyvistandarray_assign(sphere):$/;"	f
test_pyvistandarray_strides	tests/plotting/test_collection.py	/^def test_pyvistandarray_strides(sphere):$/;"	f
test_quadratic_edge	tests/examples/test_cell_examples.py	/^def test_quadratic_edge():$/;"	f
test_quadratic_hexahedron	tests/examples/test_cell_examples.py	/^def test_quadratic_hexahedron():$/;"	f
test_quadratic_linear_quadrilateral	tests/examples/test_cell_examples.py	/^def test_quadratic_linear_quadrilateral():$/;"	f
test_quadratic_linear_wedge	tests/examples/test_cell_examples.py	/^def test_quadratic_linear_wedge():$/;"	f
test_quadratic_polygon	tests/examples/test_cell_examples.py	/^def test_quadratic_polygon():$/;"	f
test_quadratic_pyramid	tests/examples/test_cell_examples.py	/^def test_quadratic_pyramid():$/;"	f
test_quadratic_quadrilateral	tests/examples/test_cell_examples.py	/^def test_quadratic_quadrilateral():$/;"	f
test_quadratic_tetrahedron	tests/examples/test_cell_examples.py	/^def test_quadratic_tetrahedron():$/;"	f
test_quadratic_triangle	tests/examples/test_cell_examples.py	/^def test_quadratic_triangle():$/;"	f
test_quadratic_wedge	tests/examples/test_cell_examples.py	/^def test_quadratic_wedge():$/;"	f
test_quadrilateral	tests/core/test_geometric_objects.py	/^def test_quadrilateral():$/;"	f
test_quadrilateral_raises	tests/core/test_geometric_objects.py	/^def test_quadrilateral_raises(points):$/;"	f
test_radial_gradient_background	tests/plotting/test_plotting.py	/^def test_radial_gradient_background():$/;"	f
test_raise_not_matching_raises	tests/core/test_utilities.py	/^def test_raise_not_matching_raises():$/;"	f
test_raise_rectilinear_grid_non_unique	tests/core/test_grid.py	/^def test_raise_rectilinear_grid_non_unique():$/;"	f
test_raise_unsupported	tests/core/test_pointset.py	/^def test_raise_unsupported(pointset):$/;"	f
test_raises	tests/core/test_pyvista_ndarray.py	/^def test_raises(val):$/;"	f
test_raises_cell_neighbors_ExplicitStructuredGrid	tests/core/test_dataset.py	/^def test_raises_cell_neighbors_ExplicitStructuredGrid(datasets_vtk9):$/;"	f
test_raises_cell_neighbors_connections	tests/core/test_dataset.py	/^def test_raises_cell_neighbors_connections(grid):$/;"	f
test_raises_point_neighbors_ind_overflow	tests/core/test_dataset.py	/^def test_raises_point_neighbors_ind_overflow(grid):$/;"	f
test_ramp	tests/plotting/test_lookup_table.py	/^def test_ramp(lut):$/;"	f
test_ray_plane_intersection	tests/plotting/test_widgets.py	/^def test_ray_plane_intersection():$/;"	f
test_ray_trace	tests/core/test_polydata.py	/^def test_ray_trace(sphere):$/;"	f
test_ray_trace_origin	tests/core/test_polydata.py	/^def test_ray_trace_origin():$/;"	f
test_ray_trace_plot	tests/plotting/test_plotting_utilities.py	/^def test_ray_trace_plot():$/;"	f
test_read	tests/core/test_utilities.py	/^def test_read(tmpdir, use_pathlib):$/;"	f
test_read_cgns	tests/core/test_reader.py	/^def test_read_cgns():$/;"	f
test_read_exodus_raises	tests/core/test_reader.py	/^def test_read_exodus_raises(sideset):$/;"	f
test_read_force_ext	tests/core/test_utilities.py	/^def test_read_force_ext(tmpdir):$/;"	f
test_read_force_ext_wrong_extension	tests/core/test_utilities.py	/^def test_read_force_ext_wrong_extension(tmpdir):$/;"	f
test_read_image_data_from_file	tests/core/test_grid.py	/^def test_read_image_data_from_file():$/;"	f
test_read_image_data_from_pathlib	tests/core/test_grid.py	/^def test_read_image_data_from_pathlib():$/;"	f
test_read_progress_bar	tests/core/test_utilities.py	/^def test_read_progress_bar(mock_show_progress, mock_reader, mock_read):$/;"	f
test_read_raises	tests/core/test_reader.py	/^def test_read_raises():$/;"	f
test_read_rectilinear_grid_from_file	tests/core/test_grid.py	/^def test_read_rectilinear_grid_from_file():$/;"	f
test_read_rectilinear_grid_from_pathlib	tests/core/test_grid.py	/^def test_read_rectilinear_grid_from_pathlib():$/;"	f
test_read_texture_from_numpy	tests/plotting/test_plotting.py	/^def test_read_texture_from_numpy():$/;"	f
test_read_texture_raises	tests/core/test_reader.py	/^def test_read_texture_raises(mocker: MockerFixture, npoints):$/;"	f
test_read_write_pickle	tests/core/test_reader.py	/^def test_read_write_pickle(tmp_path, data_object, ext, datasets):$/;"	f
test_reader_cell_point_data	tests/core/test_reader.py	/^def test_reader_cell_point_data(tmpdir):$/;"	f
test_reader_invalid_file	tests/core/test_reader.py	/^def test_reader_invalid_file():$/;"	f
test_reconstruct_surface_poly	tests/core/test_dataset_filters.py	/^def test_reconstruct_surface_poly(sphere):$/;"	f
test_reconstruct_surface_unstructured	tests/core/test_dataset_filters.py	/^def test_reconstruct_surface_unstructured():$/;"	f
test_rect_grid_dimensions_raises	tests/core/test_grid.py	/^def test_rect_grid_dimensions_raises():$/;"	f
test_rect_grid_raises	tests/core/test_grid.py	/^def test_rect_grid_raises(arg):$/;"	f
test_rect_grid_raises_args	tests/core/test_grid.py	/^def test_rect_grid_raises_args(args):$/;"	f
test_rectangle	tests/core/test_geometric_objects.py	/^def test_rectangle(points):$/;"	f
test_rectangle_not_enough_points	tests/core/test_geometric_objects.py	/^def test_rectangle_not_enough_points():$/;"	f
test_rectangle_not_orthognal_entries	tests/core/test_geometric_objects.py	/^def test_rectangle_not_orthognal_entries():$/;"	f
test_rectangle_two_identical_points	tests/core/test_geometric_objects.py	/^def test_rectangle_two_identical_points():$/;"	f
test_rectlinear_edge_case	tests/plotting/test_plotting.py	/^def test_rectlinear_edge_case(verify_image_cache):$/;"	f
test_recursive_iterator	tests/core/test_composite.py	/^def test_recursive_iterator(multiblock_all_with_nested_and_none):$/;"	f
test_recursive_iterator_contents	tests/core/test_composite.py	/^def test_recursive_iterator_contents($/;"	f
test_recursive_iterator_ids	tests/core/test_composite.py	/^def test_recursive_iterator_ids(nested_ids):$/;"	f
test_recursive_iterator_node_type	tests/core/test_composite.py	/^def test_recursive_iterator_node_type():$/;"	f
test_recursive_iterator_order	tests/core/test_composite.py	/^def test_recursive_iterator_order(nested_fixture, order, expected_ids, expected_names):$/;"	f
test_recursive_iterator_prepend_names	tests/core/test_composite.py	/^def test_recursive_iterator_prepend_names(separator, prepend_names):$/;"	f
test_recursive_iterator_raises	tests/core/test_composite.py	/^def test_recursive_iterator_raises():$/;"	f
test_reflect_inplace	tests/core/test_dataobject_filters.py	/^def test_reflect_inplace(dataset):$/;"	f
test_reflect_mesh_about_point	tests/core/test_dataobject_filters.py	/^def test_reflect_mesh_about_point(datasets):$/;"	f
test_reflect_mesh_with_vectors	tests/core/test_dataobject_filters.py	/^def test_reflect_mesh_with_vectors(datasets):$/;"	f
test_reflection	tests/core/test_utilities.py	/^def test_reflection():$/;"	f
test_regular_faces	tests/core/test_polydata.py	/^def test_regular_faces(deep):$/;"	f
test_regular_faces_mutable	tests/core/test_polydata.py	/^def test_regular_faces_mutable():$/;"	f
test_release_button_observers	tests/plotting/test_render_window_interactor.py	/^def test_release_button_observers(event):$/;"	f
test_remove_actor	tests/plotting/test_plotting.py	/^def test_remove_actor(uniform):$/;"	f
test_remove_blurring	tests/plotting/test_plotter.py	/^def test_remove_blurring(sphere):$/;"	f
test_remove_bounds_axes	tests/plotting/test_plotting.py	/^def test_remove_bounds_axes(sphere):$/;"	f
test_remove_cells	tests/core/test_grid.py	/^def test_remove_cells(ind, hexbeam):$/;"	f
test_remove_cells_invalid	tests/core/test_grid.py	/^def test_remove_cells_invalid(hexbeam):$/;"	f
test_remove_cells_not_inplace	tests/core/test_grid.py	/^def test_remove_cells_not_inplace(ind, hexbeam):$/;"	f
test_remove_environment_texture_cubemap	tests/plotting/test_plotting.py	/^def test_remove_environment_texture_cubemap(sphere):$/;"	f
test_remove_fail	tests/plotting/test_scalar_bars.py	/^def test_remove_fail(scalar_bars):$/;"	f
test_remove_points_all	tests/core/test_polydata.py	/^def test_remove_points_all(sphere):$/;"	f
test_remove_points_any	tests/core/test_polydata.py	/^def test_remove_points_any(sphere):$/;"	f
test_remove_points_fail	tests/core/test_polydata.py	/^def test_remove_points_fail(sphere, plane):$/;"	f
test_remove_scalars_single	tests/plotting/test_plotter.py	/^def test_remove_scalars_single(sphere, hexbeam):$/;"	f
test_remove_should_fail_on_bad_argument	tests/core/test_datasetattributes.py	/^def test_remove_should_fail_on_bad_argument(removed_key, hexbeam_point_attributes):$/;"	f
test_remove_vertices_actor	tests/plotting/test_plotting.py	/^def test_remove_vertices_actor(sphere):$/;"	f
test_rename_array_cell	tests/core/test_dataset.py	/^def test_rename_array_cell(grid):$/;"	f
test_rename_array_doesnt_delete	tests/core/test_dataset.py	/^def test_rename_array_doesnt_delete():$/;"	f
test_rename_array_field	tests/core/test_dataset.py	/^def test_rename_array_field(grid):$/;"	f
test_rename_array_point	tests/core/test_dataset.py	/^def test_rename_array_point(grid):$/;"	f
test_rename_array_raises	tests/core/test_dataset.py	/^def test_rename_array_raises(mocker: MockerFixture):$/;"	f
test_render_lines_as_tubes_show_edges_warning	tests/plotting/test_plotter.py	/^def test_render_lines_as_tubes_show_edges_warning(sphere):$/;"	f
test_render_passes_deep_clean	tests/plotting/test_render_pass.py	/^def test_render_passes_deep_clean():$/;"	f
test_render_passes_init	tests/plotting/test_render_pass.py	/^def test_render_passes_init():$/;"	f
test_renderer_set_viewup	tests/plotting/test_renderer.py	/^def test_renderer_set_viewup():$/;"	f
test_repeat	tests/plotting/test_texture.py	/^def test_repeat(texture):$/;"	f
test_replace	tests/core/test_composite.py	/^def test_replace():$/;"	f
test_replace_nested	tests/core/test_composite.py	/^def test_replace_nested(nested_fixture, replace_indices):$/;"	f
test_replace_nested_invalid_indices	tests/core/test_composite.py	/^def test_replace_nested_invalid_indices(nested_fixture, invalid_indices):$/;"	f
test_report	tests/core/test_utilities.py	/^def test_report():$/;"	f
test_repr	tests/core/test_cells.py	/^def test_repr(cell, type_):$/;"	f
test_repr	tests/core/test_datasetattributes.py	/^def test_repr(hexbeam_point_attributes):$/;"	f
test_repr	tests/plotting/test_camera.py	/^def test_repr(camera):$/;"	f
test_repr	tests/plotting/test_lookup_table.py	/^def test_repr(lut):$/;"	f
test_repr	tests/plotting/test_scalar_bars.py	/^def test_repr(scalar_bars):$/;"	f
test_repr	tests/plotting/test_theme.py	/^def test_repr(default_theme):$/;"	f
test_repr_field_attributes_with_string	tests/core/test_datasetattributes.py	/^def test_repr_field_attributes_with_string(hexbeam_field_attributes):$/;"	f
test_resample_cell_data	tests/core/test_imagedata_filters.py	/^def test_resample_cell_data(uniform):$/;"	f
test_resample_extend_border	tests/core/test_imagedata_filters.py	/^def test_resample_extend_border(uniform, extend_border, name, value):$/;"	f
test_resample_inplace	tests/core/test_imagedata_filters.py	/^def test_resample_inplace(uniform):$/;"	f
test_resample_interpolation	tests/core/test_imagedata_filters.py	/^def test_resample_interpolation(uniform, interpolation, dtype, sample_rate):$/;"	f
test_resample_raises	tests/core/test_imagedata_filters.py	/^def test_resample_raises(uniform):$/;"	f
test_resample_reference_image	tests/core/test_imagedata_filters.py	/^def test_resample_reference_image(uniform, spacing, direction_matrix, origin, dimensions, offset):$/;"	f
test_resample_scalars	tests/core/test_imagedata_filters.py	/^def test_resample_scalars(uniform, name, value):$/;"	f
test_reset_camera	tests/plotting/test_renderer.py	/^def test_reset_camera():$/;"	f
test_reset_camera_clipping_range	tests/plotting/test_plotting.py	/^def test_reset_camera_clipping_range(sphere):$/;"	f
test_reset_clipping_range	tests/plotting/test_camera.py	/^def test_reset_clipping_range(camera):$/;"	f
test_resolve	tests/plotting/mappers/test_mapper.py	/^def test_resolve(dataset_mapper, resolve):$/;"	f
test_restore_defaults	tests/plotting/test_theme.py	/^def test_restore_defaults(default_theme):$/;"	f
test_reverse	tests/core/test_composite.py	/^def test_reverse(sphere):$/;"	f
test_reverse	tests/core/test_partitioned.py	/^def test_reverse(sphere):$/;"	f
test_ribbon_filter	tests/core/test_polydata.py	/^def test_ribbon_filter():$/;"	f
test_roll	tests/plotting/test_camera.py	/^def test_roll(camera):$/;"	f
test_rotate	tests/core/test_dataobject_filters.py	/^def test_rotate():$/;"	f
test_rotate	tests/core/test_pointset.py	/^def test_rotate():$/;"	f
test_rotate_180_degrees_two_times_should_return_original_geometry	tests/core/test_dataobject_filters.py	/^def test_rotate_180_degrees_two_times_should_return_original_geometry():$/;"	f
test_rotate_90_degrees_four_times_should_return_original_geometry	tests/core/test_dataobject_filters.py	/^def test_rotate_90_degrees_four_times_should_return_original_geometry():$/;"	f
test_rotate_should_match_vtk_rotation	tests/core/test_dataobject_filters.py	/^def test_rotate_should_match_vtk_rotation(angle, axis, grid):$/;"	f
test_rotate_vector	tests/core/test_dataobject_filters.py	/^def test_rotate_vector():$/;"	f
test_rotate_vector	tests/core/test_pointset.py	/^def test_rotate_vector():$/;"	f
test_rotate_vector_90_degrees_should_not_distort_geometry	tests/core/test_dataobject_filters.py	/^def test_rotate_vector_90_degrees_should_not_distort_geometry():$/;"	f
test_rotate_x	tests/core/test_dataobject_filters.py	/^def test_rotate_x():$/;"	f
test_rotate_x	tests/core/test_pointset.py	/^def test_rotate_x():$/;"	f
test_rotate_y	tests/core/test_dataobject_filters.py	/^def test_rotate_y():$/;"	f
test_rotate_y	tests/core/test_pointset.py	/^def test_rotate_y():$/;"	f
test_rotate_z	tests/core/test_dataobject_filters.py	/^def test_rotate_z():$/;"	f
test_rotate_z	tests/core/test_pointset.py	/^def test_rotate_z():$/;"	f
test_rotation	tests/plotting/test_widgets.py	/^    def test_rotation($/;"	f	function:test_affine_widget
test_rotation_from	tests/plotting/test_actor.py	/^def test_rotation_from(actor, func):$/;"	f
test_rotation_from_matches_dataset_rotate	tests/plotting/test_actor.py	/^def test_rotation_from_matches_dataset_rotate(origin):$/;"	f
test_rotations_should_match_by_a_360_degree_difference	tests/core/test_dataobject_filters.py	/^def test_rotations_should_match_by_a_360_degree_difference():$/;"	f
test_ruled_surface	tests/core/test_polydata_filters.py	/^def test_ruled_surface():$/;"	f
test_ruler	tests/plotting/test_plotting.py	/^def test_ruler():$/;"	f
test_ruler_number_labels	tests/plotting/test_plotting.py	/^def test_ruler_number_labels():$/;"	f
test_sample	tests/core/test_dataobject_filters.py	/^def test_sample():$/;"	f
test_sample_composite	tests/core/test_dataobject_filters.py	/^def test_sample_composite():$/;"	f
test_sample_function	tests/core/test_imaging.py	/^def test_sample_function(dtype):$/;"	f
test_sample_function_raises	tests/core/test_utilities.py	/^def test_sample_function_raises(monkeypatch: pytest.MonkeyPatch):$/;"	f
test_sample_over_circular_arc	tests/core/test_dataset_filters.py	/^def test_sample_over_circular_arc():$/;"	f
test_sample_over_circular_arc_normal	tests/core/test_dataset_filters.py	/^def test_sample_over_circular_arc_normal():$/;"	f
test_sample_over_line	tests/core/test_dataset_filters.py	/^def test_sample_over_line():$/;"	f
test_sample_over_multiple_lines	tests/core/test_dataset_filters.py	/^def test_sample_over_multiple_lines():$/;"	f
test_saturation_range	tests/plotting/test_lookup_table.py	/^def test_saturation_range(lut, lut_w_cmap):$/;"	f
test_save	tests/core/test_grid.py	/^def test_save(extension, binary, tmpdir, hexbeam):$/;"	f
test_save	tests/core/test_pointset.py	/^def test_save(tmpdir, pointset):$/;"	f
test_save	tests/core/test_polydata.py	/^def test_save(sphere, extension, binary, tmpdir):$/;"	f
test_save_bad_extension	tests/core/test_grid.py	/^def test_save_bad_extension():$/;"	f
test_save_before_close_callback	tests/plotting/test_theme.py	/^def test_save_before_close_callback(tmpdir, default_theme):$/;"	f
test_save_graphic_raises	tests/plotting/test_plotter.py	/^def test_save_graphic_raises():$/;"	f
test_save_image_raises	tests/plotting/test_plotter.py	/^def test_save_image_raises(mocker: MockerFixture):$/;"	f
test_save_nested_multiblock_field_data	tests/core/test_dataobject.py	/^def test_save_nested_multiblock_field_data(tmp_path, file_ext):$/;"	f
test_save_ply_texture_array	tests/plotting/test_texture.py	/^def test_save_ply_texture_array(sphere, ndim, as_str, tmpdir):$/;"	f
test_save_ply_texture_array_catch	tests/plotting/test_texture.py	/^def test_save_ply_texture_array_catch(sphere, as_str, tmpdir):$/;"	f
test_save_raises_no_writers	tests/core/test_dataobject.py	/^def test_save_raises_no_writers(monkeypatch: pytest.MonkeyPatch):$/;"	f
test_save_rectilinear	tests/core/test_grid.py	/^def test_save_rectilinear(extension, binary, tmpdir):$/;"	f
test_save_screenshot	tests/plotting/test_plotting.py	/^def test_save_screenshot(tmpdir, sphere, ext):$/;"	f
test_save_structured	tests/core/test_grid.py	/^def test_save_structured(extension, binary, tmpdir, struct_grid):$/;"	f
test_save_uniform	tests/core/test_grid.py	/^def test_save_uniform(extension, binary, tmpdir):$/;"	f
test_scalar_bar_actor_removal	tests/plotting/test_plotting.py	/^def test_scalar_bar_actor_removal(sphere):$/;"	f
test_scalar_bar_args_unmodified_add_mesh	tests/plotting/test_plotting.py	/^def test_scalar_bar_args_unmodified_add_mesh(sphere):$/;"	f
test_scalar_bar_args_unmodified_add_volume	tests/plotting/test_plotting.py	/^def test_scalar_bar_args_unmodified_add_volume(uniform):$/;"	f
test_scalar_cell_priorities	tests/plotting/test_plotting.py	/^def test_scalar_cell_priorities():$/;"	f
test_scalar_map_mode	tests/plotting/mappers/test_composite_mapper.py	/^def test_scalar_map_mode(composite_mapper):$/;"	f
test_scalar_map_mode_values	tests/plotting/mappers/test_composite_mapper.py	/^def test_scalar_map_mode_values(value, composite_mapper):$/;"	f
test_scalar_range	tests/plotting/mappers/test_mapper.py	/^def test_scalar_range(dataset_mapper):$/;"	f
test_scalar_range	tests/plotting/test_lookup_table.py	/^def test_scalar_range(lut):$/;"	f
test_scalar_visibility	tests/plotting/mappers/test_composite_mapper.py	/^def test_scalar_visibility(composite_mapper):$/;"	f
test_scalars_by_name	tests/plotting/test_plotting.py	/^def test_scalars_by_name(verify_image_cache):$/;"	f
test_scalars_dict_update	tests/core/test_dataset.py	/^def test_scalars_dict_update():$/;"	f
test_scale	tests/core/test_dataobject_filters.py	/^def test_scale():$/;"	f
test_scale	tests/core/test_pointset.py	/^def test_scale():$/;"	f
test_scale_array	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_scale_array(mapper):$/;"	f
test_scale_factor	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_scale_factor(mapper):$/;"	f
test_scatterplot2d	tests/plotting/test_charts.py	/^def test_scatterplot2d(chart_2d, scatter_plot_2d):$/;"	f
test_scraper	tests/plotting/test_scraper.py	/^def test_scraper(tmpdir, monkeypatch, n_win, scraper_type):$/;"	f
test_scraper_raise	tests/plotting/test_scraper.py	/^def test_scraper_raise(tmpdir):$/;"	f
test_scraper_with_app	tests/plotting/test_scraper.py	/^def test_scraper_with_app(tmpdir, monkeypatch, n_win=2):$/;"	f
test_screenshot	tests/plotting/test_plotting.py	/^def test_screenshot(tmpdir):$/;"	f
test_screenshot_altered_window_size	tests/plotting/test_plotting.py	/^def test_screenshot_altered_window_size(sphere):$/;"	f
test_screenshot_bytes	tests/plotting/test_plotting.py	/^def test_screenshot_bytes():$/;"	f
test_screenshot_fail_suppressed_rendering	tests/plotting/test_plotter.py	/^def test_screenshot_fail_suppressed_rendering():$/;"	f
test_screenshot_notebook	tests/plotting/test_plotting.py	/^def test_screenshot_notebook(tmpdir):$/;"	f
test_screenshot_rendering	tests/plotting/test_plotting.py	/^def test_screenshot_rendering(tmpdir):$/;"	f
test_screenshot_scaled	tests/plotting/test_plotting.py	/^def test_screenshot_scaled():$/;"	f
test_select_enclosed_points	tests/core/test_dataset_filters.py	/^def test_select_enclosed_points(uniform, hexbeam):$/;"	f
test_select_values	tests/core/test_imagedata_filters.py	/^def test_select_values(uniform):$/;"	f
test_select_values_dtype	tests/core/test_imagedata_filters.py	/^def test_select_values_dtype(uniform, dtype):$/;"	f
test_select_values_empty_input	tests/core/test_imagedata_filters.py	/^def test_select_values_empty_input():$/;"	f
test_select_values_split	tests/core/test_imagedata_filters.py	/^def test_select_values_split(uniform):$/;"	f
test_separate_cells	tests/core/test_dataset.py	/^def test_separate_cells(hexbeam):$/;"	f
test_serial_dict_as_dict	tests/core/test_utilities.py	/^def test_serial_dict_as_dict(serial_dict_with_foobar):$/;"	f
test_serial_dict_init	tests/core/test_utilities.py	/^def test_serial_dict_init():$/;"	f
test_serial_dict_overrides__delitem__	tests/core/test_utilities.py	/^def test_serial_dict_overrides__delitem__(serial_dict_with_foobar):$/;"	f
test_serial_dict_overrides__setattr__	tests/core/test_utilities.py	/^def test_serial_dict_overrides__setattr__(serial_dict_empty):$/;"	f
test_serial_dict_overrides__setitem__	tests/core/test_utilities.py	/^def test_serial_dict_overrides__setitem__(serial_dict_empty):$/;"	f
test_serial_dict_overrides_clear	tests/core/test_utilities.py	/^def test_serial_dict_overrides_clear(serial_dict_with_foobar):$/;"	f
test_serial_dict_overrides_pop	tests/core/test_utilities.py	/^def test_serial_dict_overrides_pop(serial_dict_with_foobar):$/;"	f
test_serial_dict_overrides_popitem	tests/core/test_utilities.py	/^def test_serial_dict_overrides_popitem(serial_dict_with_foobar):$/;"	f
test_serial_dict_overrides_setdefault	tests/core/test_utilities.py	/^def test_serial_dict_overrides_setdefault(serial_dict_empty, serial_dict_with_foobar):$/;"	f
test_serial_dict_overrides_update	tests/core/test_utilities.py	/^def test_serial_dict_overrides_update(serial_dict_empty):$/;"	f
test_serve	examples_trame/tests/test_trame.py	/^def test_serve(test_file):$/;"	f
test_set_active_multi_multi	tests/core/test_composite.py	/^def test_set_active_multi_multi(multiblock_poly):$/;"	f
test_set_active_scalars	tests/core/test_composite.py	/^def test_set_active_scalars(multiblock_all):$/;"	f
test_set_active_scalars	tests/core/test_dataset.py	/^def test_set_active_scalars(grid):$/;"	f
test_set_active_scalars_components	tests/core/test_composite.py	/^def test_set_active_scalars_components(multiblock_poly):$/;"	f
test_set_active_scalars_fail	tests/core/test_datasetattributes.py	/^def test_set_active_scalars_fail(hexbeam):$/;"	f
test_set_active_scalars_mixed	tests/core/test_composite.py	/^def test_set_active_scalars_mixed(multiblock_poly):$/;"	f
test_set_active_scalars_multi	tests/core/test_composite.py	/^def test_set_active_scalars_multi(multiblock_poly):$/;"	f
test_set_active_scalars_name	tests/core/test_dataset.py	/^def test_set_active_scalars_name(grid):$/;"	f
test_set_active_scalars_raises	tests/core/test_dataset.py	/^def test_set_active_scalars_raises(mocker: MockerFixture):$/;"	f
test_set_active_scalars_raises_vtk	tests/core/test_dataset.py	/^def test_set_active_scalars_raises_vtk(mocker: MockerFixture):$/;"	f
test_set_active_tensors	tests/core/test_dataset.py	/^def test_set_active_tensors(grid):$/;"	f
test_set_active_tensors_fail	tests/core/test_dataset.py	/^def test_set_active_tensors_fail(grid):$/;"	f
test_set_active_vectors	tests/core/test_dataset.py	/^def test_set_active_vectors(grid):$/;"	f
test_set_active_vectors	tests/core/test_datasetattributes.py	/^def test_set_active_vectors(hexbeam):$/;"	f
test_set_active_vectors_fail	tests/core/test_dataset.py	/^def test_set_active_vectors_fail(grid):$/;"	f
test_set_array_catch	tests/core/test_datasetattributes.py	/^def test_set_array_catch(hexbeam):$/;"	f
test_set_array_scalar_value_should_give_array	tests/core/test_datasetattributes.py	/^def test_set_array_scalar_value_should_give_array(scalar, hexbeam_point_attributes):$/;"	f
test_set_array_should_accept_scalar_value	tests/core/test_datasetattributes.py	/^def test_set_array_should_accept_scalar_value(scalar, hexbeam_point_attributes):$/;"	f
test_set_array_string_array_should_equal	tests/core/test_datasetattributes.py	/^def test_set_array_string_array_should_equal(arr, hexbeam_field_attributes):$/;"	f
test_set_array_string_lists_should_equal	tests/core/test_datasetattributes.py	/^def test_set_array_string_lists_should_equal(arr, hexbeam_field_attributes):$/;"	f
test_set_background	tests/plotting/test_plotting.py	/^def test_set_background():$/;"	f
test_set_bitarray	tests/core/test_datasetattributes.py	/^def test_set_bitarray(hexbeam):$/;"	f
test_set_block_name_by_name	tests/core/test_composite.py	/^def test_set_block_name_by_name(ant):$/;"	f
test_set_camera_position	tests/plotting/test_plotting.py	/^def test_set_camera_position(cpos, sphere):$/;"	f
test_set_camera_position_invalid	tests/plotting/test_plotting.py	/^def test_set_camera_position_invalid(cpos, sphere):$/;"	f
test_set_cell_vectors	tests/core/test_dataset.py	/^def test_set_cell_vectors(grid):$/;"	f
test_set_default_active_scalarrs	tests/core/test_helpers.py	/^def test_set_default_active_scalarrs():$/;"	f
test_set_default_active_vectors	tests/core/test_helpers.py	/^def test_set_default_active_vectors():$/;"	f
test_set_default_kwarg_mandatory	tests/core/test_validation.py	/^def test_set_default_kwarg_mandatory():$/;"	f
test_set_environment_texture_cubemap	tests/plotting/test_plotting.py	/^def test_set_environment_texture_cubemap(sphere, verify_image_cache):$/;"	f
test_set_extent	tests/core/test_grid.py	/^def test_set_extent():$/;"	f
test_set_extent_width_spacing	tests/core/test_grid.py	/^def test_set_extent_width_spacing():$/;"	f
test_set_fails_with_wrong_shape	tests/core/test_datasetattributes.py	/^def test_set_fails_with_wrong_shape(hexbeam):$/;"	f
test_set_focus	tests/plotting/test_plotting.py	/^def test_set_focus(point):$/;"	f
test_set_hidden_line_removal	tests/plotting/test_theme.py	/^def test_set_hidden_line_removal(default_theme):$/;"	f
test_set_invalid_vectors	tests/core/test_datasetattributes.py	/^def test_set_invalid_vectors(hexbeam):$/;"	f
test_set_irregular_faces	tests/core/test_polydata.py	/^def test_set_irregular_faces():$/;"	f
test_set_item	tests/core/test_dataset.py	/^def test_set_item(grid):$/;"	f
test_set_item_range	tests/core/test_dataset.py	/^def test_set_item_range(grid):$/;"	f
test_set_jupyter_backend_fail	tests/plotting/jupyter/test_static.py	/^def test_set_jupyter_backend_fail():$/;"	f
test_set_jupyter_backend_none	tests/plotting/jupyter/test_static.py	/^def test_set_jupyter_backend_none(backend):$/;"	f
test_set_jupyter_backend_static	tests/plotting/jupyter/test_static.py	/^def test_set_jupyter_backend_static():$/;"	f
test_set_jupyter_backend_trame	tests/plotting/jupyter/test_trame.py	/^def test_set_jupyter_backend_trame():$/;"	f
test_set_parallel_projection	tests/plotting/test_plotting.py	/^def test_set_parallel_projection(state):$/;"	f
test_set_parallel_scale	tests/plotting/test_plotting.py	/^def test_set_parallel_scale(value):$/;"	f
test_set_parallel_scale_invalid	tests/plotting/test_plotting.py	/^def test_set_parallel_scale_invalid():$/;"	f
test_set_pickle_format	tests/core/test_dataobject.py	/^def test_set_pickle_format(pickle_format):$/;"	f
test_set_plot_theme_from_env	tests/plotting/test_theme.py	/^def test_set_plot_theme_from_env():$/;"	f
test_set_points	tests/core/test_dataset.py	/^def test_set_points():$/;"	f
test_set_regular_faces	tests/core/test_polydata.py	/^def test_set_regular_faces():$/;"	f
test_set_scalars	tests/core/test_datasetattributes.py	/^def test_set_scalars(sphere):$/;"	f
test_set_scalars	tests/plotting/mappers/test_mapper.py	/^def test_set_scalars(dataset_mapper):$/;"	f
test_set_shallow_regular_cells	tests/core/test_cells.py	/^def test_set_shallow_regular_cells():$/;"	f
test_set_texture_coordinates	tests/core/test_dataset.py	/^def test_set_texture_coordinates(grid):$/;"	f
test_set_texture_coordinates_name	tests/core/test_datasetattributes.py	/^def test_set_texture_coordinates_name():$/;"	f
test_set_theme	tests/plotting/test_theme.py	/^def test_set_theme():$/;"	f
test_set_vectors	tests/core/test_datasetattributes.py	/^def test_set_vectors(hexbeam):$/;"	f
test_set_viewup	tests/plotting/test_plotting.py	/^def test_set_viewup(verify_image_cache, vector):$/;"	f
test_setitem	tests/core/test_datasetattributes.py	/^def test_setitem(hexbeam_point_attributes):$/;"	f
test_setitem_raises	tests/core/test_datasetattributes.py	/^def test_setitem_raises(i):$/;"	f
test_setting_points_by_different_types	tests/core/test_dataset.py	/^def test_setting_points_by_different_types(grid):$/;"	f
test_shadow_pass	tests/plotting/test_render_pass.py	/^def test_shadow_pass():$/;"	f
test_shallow_copy_back_propagation	tests/core/test_dataset.py	/^def test_shallow_copy_back_propagation():$/;"	f
test_shape	tests/plotting/test_lights.py	/^def test_shape():$/;"	f
test_should_del_array	tests/core/test_datasetattributes.py	/^def test_should_del_array(insert_arange_narray):$/;"	f
test_should_pop_array	tests/core/test_datasetattributes.py	/^def test_should_pop_array(insert_arange_narray):$/;"	f
test_should_pop_array_invalid	tests/core/test_datasetattributes.py	/^def test_should_pop_array_invalid(insert_arange_narray):$/;"	f
test_should_remove_array	tests/core/test_datasetattributes.py	/^def test_should_remove_array(insert_arange_narray):$/;"	f
test_show_after_closed_raises	tests/plotting/test_plotter.py	/^def test_show_after_closed_raises():$/;"	f
test_show_axes	tests/plotting/test_plotting.py	/^def test_show_axes():$/;"	f
test_show_axes_all	tests/plotting/test_plotting.py	/^def test_show_axes_all():$/;"	f
test_show_bounds_axes_ranges	tests/plotting/test_renderer.py	/^def test_show_bounds_axes_ranges():$/;"	f
test_show_bounds_grid_raises	tests/plotting/test_renderer.py	/^def test_show_bounds_grid_raises(grid):$/;"	f
test_show_bounds_grid_value_raises	tests/plotting/test_renderer.py	/^def test_show_bounds_grid_value_raises(grid):$/;"	f
test_show_bounds_invalid_axes_ranges	tests/plotting/test_renderer.py	/^def test_show_bounds_invalid_axes_ranges():$/;"	f
test_show_bounds_n_labels	tests/plotting/test_plotting.py	/^def test_show_bounds_n_labels():$/;"	f
test_show_bounds_no_labels	tests/plotting/test_plotting.py	/^def test_show_bounds_no_labels():$/;"	f
test_show_bounds_padding_raises	tests/plotting/test_renderer.py	/^def test_show_bounds_padding_raises(padding):$/;"	f
test_show_bounds_with_scaling	tests/plotting/test_renderer.py	/^def test_show_bounds_with_scaling(sphere):$/;"	f
test_show_grid_axes_ranges_with_all_edges	tests/plotting/test_renderer.py	/^def test_show_grid_axes_ranges_with_all_edges():$/;"	f
test_show_return_values	tests/plotting/jupyter/test_static.py	/^def test_show_return_values(sphere: pv.PolyData):$/;"	f
test_shrink	tests/core/test_dataset_filters.py	/^def test_shrink():$/;"	f
test_silhouette_config	tests/plotting/test_theme.py	/^def test_silhouette_config(default_theme, parm):$/;"	f
test_simulate_key_press_raises	tests/plotting/test_render_window_interactor.py	/^def test_simulate_key_press_raises():$/;"	f
test_single_cell_picking	tests/plotting/test_picking.py	/^def test_single_cell_picking():$/;"	f
test_single_file_loader	tests/examples/test_dataset_loader.py	/^def test_single_file_loader(FileLoader, use_archive, examples_local_repository_tmp_dir):$/;"	f
test_single_file_loader_from_directory	tests/examples/test_dataset_loader.py	/^def test_single_file_loader_from_directory(examples_local_repository_tmp_dir):$/;"	f
test_skip_egl	tests/test_conftest.py	/^def test_skip_egl($/;"	f
test_skip_mac	tests/test_conftest.py	/^def test_skip_mac($/;"	f
test_skip_plotting_mark	tests/plotting/test_conftest.py	/^def test_skip_plotting_mark($/;"	f
test_skip_windows	tests/test_conftest.py	/^def test_skip_windows($/;"	f
test_skybox	tests/plotting/test_plotting_utilities.py	/^def test_skybox(tmpdir):$/;"	f
test_skybox_example	tests/plotting/test_texture.py	/^def test_skybox_example():$/;"	f
test_slc_reader	tests/core/test_reader.py	/^def test_slc_reader():$/;"	f
test_slice_along_axis	tests/core/test_dataobject_filters.py	/^def test_slice_along_axis(datasets):$/;"	f
test_slice_along_axis_composite	tests/core/test_dataobject_filters.py	/^def test_slice_along_axis_composite(multiblock_all):$/;"	f
test_slice_along_line	tests/core/test_dataobject_filters.py	/^def test_slice_along_line():$/;"	f
test_slice_along_line_composite	tests/core/test_dataobject_filters.py	/^def test_slice_along_line_composite(multiblock_all):$/;"	f
test_slice_defaults	tests/core/test_composite.py	/^def test_slice_defaults(multiblock_all_with_nested_and_none):$/;"	f
test_slice_defaults	tests/core/test_partitioned.py	/^def test_slice_defaults(ant, sphere, uniform, airplane, tetbeam):$/;"	f
test_slice_filter	tests/core/test_dataobject_filters.py	/^def test_slice_filter(datasets):$/;"	f
test_slice_filter_composite	tests/core/test_dataobject_filters.py	/^def test_slice_filter_composite(multiblock_all):$/;"	f
test_slice_negatives	tests/core/test_composite.py	/^def test_slice_negatives(multiblock_all_with_nested_and_none):$/;"	f
test_slice_orthogonal_filter	tests/core/test_dataobject_filters.py	/^def test_slice_orthogonal_filter(datasets):$/;"	f
test_slice_orthogonal_filter_composite	tests/core/test_dataobject_filters.py	/^def test_slice_orthogonal_filter_composite(multiblock_all):$/;"	f
test_slice_structured	tests/core/test_grid.py	/^def test_slice_structured(struct_grid):$/;"	f
test_slices_are_associated	tests/core/test_pyvista_ndarray.py	/^def test_slices_are_associated():$/;"	f
test_slices_are_associated_single_index	tests/core/test_pyvista_ndarray.py	/^def test_slices_are_associated_single_index():$/;"	f
test_slicing_multiple_in_setitem	tests/core/test_composite.py	/^def test_slicing_multiple_in_setitem(sphere):$/;"	f
test_slider_style_config	tests/plotting/test_theme.py	/^def test_slider_style_config(default_theme, parm, style):$/;"	f
test_slider_style_config_eq	tests/plotting/test_theme.py	/^def test_slider_style_config_eq(default_theme):$/;"	f
test_slider_style_eq	tests/plotting/test_theme.py	/^def test_slider_style_eq(default_theme):$/;"	f
test_smooth	tests/core/test_dataset_filters.py	/^def test_smooth(uniform):$/;"	f
test_smooth_inplace	tests/core/test_polydata.py	/^def test_smooth_inplace(sphere):$/;"	f
test_smooth_shading_shallow_copy	tests/plotting/test_plotter.py	/^def test_smooth_shading_shallow_copy(sphere):$/;"	f
test_smooth_taubin	tests/core/test_dataset_filters.py	/^def test_smooth_taubin(uniform):$/;"	f
test_solid_sphere	tests/core/test_geometric_objects.py	/^def test_solid_sphere():$/;"	f
test_solid_sphere_generic	tests/core/test_geometric_objects.py	/^def test_solid_sphere_generic():$/;"	f
test_solid_sphere_hollow	tests/core/test_geometric_objects.py	/^def test_solid_sphere_hollow():$/;"	f
test_solid_sphere_phi	tests/core/test_geometric_objects.py	/^def test_solid_sphere_phi():$/;"	f
test_solid_sphere_phi_start_end	tests/core/test_geometric_objects.py	/^def test_solid_sphere_phi_start_end():$/;"	f
test_solid_sphere_radians	tests/core/test_geometric_objects.py	/^def test_solid_sphere_radians():$/;"	f
test_solid_sphere_resolution_edge_cases	tests/core/test_geometric_objects.py	/^def test_solid_sphere_resolution_edge_cases():$/;"	f
test_solid_sphere_resolution_errors	tests/core/test_geometric_objects.py	/^def test_solid_sphere_resolution_errors():$/;"	f
test_solid_sphere_theta	tests/core/test_geometric_objects.py	/^def test_solid_sphere_theta():$/;"	f
test_solid_sphere_theta_range	tests/core/test_geometric_objects.py	/^def test_solid_sphere_theta_range():$/;"	f
test_solid_sphere_theta_start_end	tests/core/test_geometric_objects.py	/^def test_solid_sphere_theta_start_end():$/;"	f
test_solid_sphere_tol_angle	tests/core/test_geometric_objects.py	/^def test_solid_sphere_tol_angle(radians):$/;"	f
test_solid_sphere_tol_radius	tests/core/test_geometric_objects.py	/^def test_solid_sphere_tol_radius():$/;"	f
test_sort_labels	tests/core/test_dataset_filters.py	/^def test_sort_labels(labeled_image):$/;"	f
test_sphere	tests/core/test_geometric_objects.py	/^def test_sphere():$/;"	f
test_sphere_direction_points	tests/core/test_geometric_objects.py	/^def test_sphere_direction_points(expected):$/;"	f
test_sphere_phi	tests/core/test_geometric_objects.py	/^def test_sphere_phi():$/;"	f
test_sphere_source	tests/core/test_geometric_sources.py	/^def test_sphere_source():$/;"	f
test_sphere_theta	tests/core/test_geometric_objects.py	/^def test_sphere_theta():$/;"	f
test_sphere_with_texture_map	tests/examples/test_examples.py	/^def test_sphere_with_texture_map():$/;"	f
test_spherical_to_cartesian	tests/core/test_utilities.py	/^def test_spherical_to_cartesian():$/;"	f
test_spline	tests/core/test_parametric_geometry.py	/^def test_spline():$/;"	f
test_split_bodies	tests/core/test_dataset_filters.py	/^def test_split_bodies():$/;"	f
test_split_values_extract_values_component	tests/core/test_dataset_filters.py	/^def test_split_values_extract_values_component($/;"	f
test_splitting	tests/plotting/test_plotting.py	/^def test_splitting():$/;"	f
test_splitting_active_cells	tests/plotting/test_plotting.py	/^def test_splitting_active_cells(cube):$/;"	f
test_squeeze	tests/core/test_pyvista_ndarray.py	/^def test_squeeze(pyvista_ndarray_1d):$/;"	f
test_ssaa_pass	tests/plotting/test_plotting.py	/^def test_ssaa_pass():$/;"	f
test_ssaa_pass	tests/plotting/test_render_pass.py	/^def test_ssaa_pass():$/;"	f
test_ssao_pass	tests/plotting/test_plotting.py	/^def test_ssao_pass():$/;"	f
test_ssao_pass	tests/plotting/test_render_pass.py	/^def test_ssao_pass():$/;"	f
test_ssao_pass_from_helper	tests/plotting/test_plotting.py	/^def test_ssao_pass_from_helper():$/;"	f
test_ssao_raise_no_depth_of_field	tests/plotting/test_render_pass.py	/^def test_ssao_raise_no_depth_of_field():$/;"	f
test_stackplot	tests/plotting/test_charts.py	/^def test_stackplot(chart_2d, stack_plot):$/;"	f
test_start_xvfb	tests/plotting/test_utilities.py	/^def test_start_xvfb():$/;"	f
test_start_xvfb_raises	tests/plotting/test_utilities.py	/^def test_start_xvfb_raises(monkeypatch: pytest.MonkeyPatch, mocker: MockerFixture):$/;"	f
test_static_from_show	tests/plotting/jupyter/test_static.py	/^def test_static_from_show(sphere, return_viewer):$/;"	f
test_static_images	tests/doc/tst_doc_images.py	/^def test_static_images(test_case: _TestCaseTuple):$/;"	f
test_stlreader	tests/core/test_reader.py	/^def test_stlreader():$/;"	f
test_str	tests/core/test_cells.py	/^def test_str(cell, type_):$/;"	f
test_str	tests/core/test_dataset.py	/^def test_str(grid):$/;"	f
test_str	tests/plotting/test_camera.py	/^def test_str(camera):$/;"	f
test_streamlines_cell_point	tests/core/test_dataset_filters.py	/^def test_streamlines_cell_point(uniform_vec, interpolator_type):$/;"	f
test_streamlines_dir	tests/core/test_dataset_filters.py	/^def test_streamlines_dir(uniform_vec, integration_direction):$/;"	f
test_streamlines_errors	tests/core/test_dataset_filters.py	/^def test_streamlines_errors(uniform_vec):$/;"	f
test_streamlines_evenly_spaced_2D	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D():$/;"	f
test_streamlines_evenly_spaced_2D_errors	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_errors():$/;"	f
test_streamlines_evenly_spaced_2D_integrator_type	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_integrator_type():$/;"	f
test_streamlines_evenly_spaced_2D_interpolator_type	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_interpolator_type():$/;"	f
test_streamlines_evenly_spaced_2D_sep_dist_ratio	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_sep_dist_ratio():$/;"	f
test_streamlines_evenly_spaced_2D_start_position	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_start_position():$/;"	f
test_streamlines_evenly_spaced_2D_vectors	tests/core/test_dataset_filters.py	/^def test_streamlines_evenly_spaced_2D_vectors():$/;"	f
test_streamlines_from_source	tests/core/test_dataset_filters.py	/^def test_streamlines_from_source(uniform_vec):$/;"	f
test_streamlines_from_source_structured_grids	tests/core/test_dataset_filters.py	/^def test_streamlines_from_source_structured_grids():$/;"	f
test_streamlines_max_length	tests/core/test_dataset_filters.py	/^def test_streamlines_max_length():$/;"	f
test_streamlines_nonxy_plane	tests/core/test_dataset_filters.py	/^def test_streamlines_nonxy_plane():$/;"	f
test_streamlines_return_source	tests/core/test_dataset_filters.py	/^def test_streamlines_return_source(uniform_vec):$/;"	f
test_streamlines_start_position	tests/core/test_dataset_filters.py	/^def test_streamlines_start_position(uniform_vec):$/;"	f
test_streamlines_type	tests/core/test_dataset_filters.py	/^def test_streamlines_type(uniform_vec, integrator_type):$/;"	f
test_string_arrays	tests/core/test_dataset.py	/^def test_string_arrays():$/;"	f
test_strips	tests/core/test_polydata.py	/^def test_strips():$/;"	f
test_structured_add_non_grid	tests/core/test_dataset_filters.py	/^def test_structured_add_non_grid():$/;"	f
test_subdivide_adaptive	tests/core/test_dataset_filters.py	/^def test_subdivide_adaptive(sphere, inplace):$/;"	f
test_subdivide_tetra	tests/core/test_dataset_filters.py	/^def test_subdivide_tetra(tetbeam):$/;"	f
test_subdivision	tests/core/test_polydata.py	/^def test_subdivision(sphere, subfilter):$/;"	f
test_subplot_groups	tests/plotting/test_plotting.py	/^def test_subplot_groups():$/;"	f
test_subplot_groups_fail	tests/plotting/test_plotting.py	/^def test_subplot_groups_fail():$/;"	f
test_subtract	tests/core/test_polydata.py	/^def test_subtract(sphere, sphere_shifted):$/;"	f
test_superquadric	tests/core/test_geometric_objects.py	/^def test_superquadric():$/;"	f
test_superquadric_source	tests/core/test_geometric_sources.py	/^def test_superquadric_source():$/;"	f
test_surface_from_para	tests/core/test_parametric_geometry.py	/^def test_surface_from_para():$/;"	f
test_surface_indices	tests/core/test_grid.py	/^def test_surface_indices(hexbeam):$/;"	f
test_surface_point_picking	tests/plotting/test_picking.py	/^def test_surface_point_picking(sphere, left_clicking):$/;"	f
test_swap_axes	tests/core/test_dataset_filters.py	/^def test_swap_axes(x, y, z, order, test_case, values):$/;"	f
test_switch_picking_type	tests/plotting/test_picking.py	/^def test_switch_picking_type():$/;"	f
test_switch_state	tests/plotting/test_lights.py	/^def test_switch_state():$/;"	f
test_symmetric	tests/plotting/test_axes.py	/^def test_symmetric(axes):$/;"	f
test_tab_colors	tests/plotting/test_colors.py	/^def test_tab_colors(tab_color):$/;"	f
test_table_cmap_list	tests/plotting/test_lookup_table.py	/^def test_table_cmap_list(lut):$/;"	f
test_table_init	tests/core/test_objects.py	/^def test_table_init(tmpdir):$/;"	f
test_table_iter	tests/core/test_objects.py	/^def test_table_iter():$/;"	f
test_table_pandas	tests/core/test_objects.py	/^def test_table_pandas():$/;"	f
test_table_repr	tests/core/test_objects.py	/^def test_table_repr():$/;"	f
test_table_row_arrays	tests/core/test_objects.py	/^def test_table_row_arrays():$/;"	f
test_table_row_np_bool	tests/core/test_objects.py	/^def test_table_row_np_bool():$/;"	f
test_table_row_uint8	tests/core/test_objects.py	/^def test_table_row_uint8():$/;"	f
test_table_values_update	tests/plotting/test_lookup_table.py	/^def test_table_values_update(lut, skip_check_gc):$/;"	f
test_tecplotreader	tests/core/test_reader.py	/^def test_tecplotreader():$/;"	f
test_tessellate	tests/core/test_dataset_filters.py	/^def test_tessellate():$/;"	f
test_tetrahedron	tests/core/test_geometric_objects.py	/^def test_tetrahedron():$/;"	f
test_tetrahedron	tests/examples/test_cell_examples.py	/^def test_tetrahedron():$/;"	f
test_tetrahedron_regular_faces	tests/core/test_polydata.py	/^def test_tetrahedron_regular_faces():$/;"	f
test_text3d_source	tests/core/test_geometric_sources.py	/^def test_text3d_source():$/;"	f
test_text3d_source_empty_string	tests/core/test_geometric_sources.py	/^def test_text3d_source_empty_string():$/;"	f
test_text3d_source_modified	tests/core/test_geometric_sources.py	/^def test_text3d_source_modified(text3d_source_with_text, kwarg_tuple):$/;"	f
test_text3d_source_modified_init	tests/core/test_geometric_sources.py	/^def test_text3d_source_modified_init(kwarg_tuple):$/;"	f
test_text3d_source_output	tests/core/test_geometric_sources.py	/^def test_text3d_source_output(text3d_source_with_text):$/;"	f
test_text3d_source_parameters	tests/core/test_geometric_sources.py	/^def test_text3d_source_parameters(string, center, height, width, depth, normal):$/;"	f
test_text3d_source_update	tests/core/test_geometric_sources.py	/^def test_text3d_source_update(text3d_source_with_text):$/;"	f
test_text_3d	tests/core/test_geometric_objects.py	/^def test_text_3d():$/;"	f
test_text_3d_raises	tests/core/test_geometric_sources.py	/^def test_text_3d_raises():$/;"	f
test_text_input	tests/plotting/test_text.py	/^def test_text_input(text):$/;"	f
test_text_name	tests/plotting/test_text.py	/^def test_text_name():$/;"	f
test_text_position	tests/plotting/test_text.py	/^def test_text_position(text):$/;"	f
test_text_prop	tests/plotting/test_text.py	/^def test_text_prop(text):$/;"	f
test_texture	tests/plotting/test_texture.py	/^def test_texture():$/;"	f
test_texture_coordinates	tests/plotting/test_texture.py	/^def test_texture_coordinates():$/;"	f
test_texture_empty_init	tests/plotting/test_texture.py	/^def test_texture_empty_init():$/;"	f
test_texture_from_images	tests/plotting/test_texture.py	/^def test_texture_from_images(image):$/;"	f
test_texture_grayscale_init	tests/plotting/test_texture.py	/^def test_texture_grayscale_init():$/;"	f
test_texture_map_to_plane	tests/core/test_dataset_filters.py	/^def test_texture_map_to_plane():$/;"	f
test_texture_map_to_sphere	tests/core/test_dataset_filters.py	/^def test_texture_map_to_sphere():$/;"	f
test_texture_repr	tests/plotting/test_texture.py	/^def test_texture_repr(texture):$/;"	f
test_texture_rotate_ccw	tests/plotting/test_texture.py	/^def test_texture_rotate_ccw(texture):$/;"	f
test_texture_rotate_cw	tests/plotting/test_texture.py	/^def test_texture_rotate_cw(texture):$/;"	f
test_theme_colorbar_orientation	tests/plotting/test_theme.py	/^def test_theme_colorbar_orientation(default_theme):$/;"	f
test_theme_eq	tests/plotting/test_theme.py	/^def test_theme_eq():$/;"	f
test_theme_image_scale_raises	tests/plotting/test_theme.py	/^def test_theme_image_scale_raises(default_theme: pv.themes.Theme, image_scale):$/;"	f
test_theme_lightning_params_raises	tests/plotting/test_theme.py	/^def test_theme_lightning_params_raises(default_theme: pv.themes.Theme, lighting_params):$/;"	f
test_theme_parm	tests/plotting/test_theme.py	/^def test_theme_parm(default_theme, parm):$/;"	f
test_theme_slots	tests/plotting/test_theme.py	/^def test_theme_slots(default_theme):$/;"	f
test_theme_trame_raises	tests/plotting/test_theme.py	/^def test_theme_trame_raises(default_theme: pv.themes.Theme, trame):$/;"	f
test_theme_wrong_type	tests/plotting/test_theme.py	/^def test_theme_wrong_type(default_theme):$/;"	f
test_themes	tests/plotting/test_theme.py	/^def test_themes(theme):$/;"	f
test_thickness	tests/plotting/test_camera.py	/^def test_thickness(camera):$/;"	f
test_threshold	tests/core/test_dataset_filters.py	/^def test_threshold(datasets):$/;"	f
test_threshold	tests/core/test_pointset.py	/^def test_threshold(pointset):$/;"	f
test_threshold_all_scalars	tests/core/test_dataset_filters.py	/^def test_threshold_all_scalars():$/;"	f
test_threshold_multicomponent	tests/core/test_dataset_filters.py	/^def test_threshold_multicomponent():$/;"	f
test_threshold_paraview_consistency	tests/core/test_dataset_filters.py	/^def test_threshold_paraview_consistency():$/;"	f
test_threshold_percent	tests/core/test_dataset_filters.py	/^def test_threshold_percent(datasets):$/;"	f
test_threshold_percent	tests/core/test_pointset.py	/^def test_threshold_percent(pointset):$/;"	f
test_threshold_raises	tests/core/test_dataset_filters.py	/^def test_threshold_raises(mocker: MockerFixture):$/;"	f
test_tick_location	tests/plotting/test_cube_axes_actor.py	/^def test_tick_location(cube_axes_actor):$/;"	f
test_tiff_reader	tests/core/test_reader.py	/^def test_tiff_reader():$/;"	f
test_tight_direction	tests/plotting/test_plotting.py	/^def test_tight_direction(view, negative, colorful_tetrahedron):$/;"	f
test_tight_multiple_objects	tests/plotting/test_plotting.py	/^def test_tight_multiple_objects():$/;"	f
test_tight_square	tests/plotting/test_plotting.py	/^def test_tight_square(noise_2d):$/;"	f
test_tight_square_padding	tests/plotting/test_plotting.py	/^def test_tight_square_padding():$/;"	f
test_tight_tall	tests/plotting/test_plotting.py	/^def test_tight_tall():$/;"	f
test_tight_wide	tests/plotting/test_plotting.py	/^def test_tight_wide():$/;"	f
test_timer	tests/plotting/test_render_window_interactor.py	/^def test_timer():$/;"	f
test_tinypages	tests/plotting/test_tinypages.py	/^def test_tinypages(tmp_path, ename, evalue):$/;"	f
test_title_offset	tests/plotting/test_cube_axes_actor.py	/^def test_title_offset(cube_axes_actor):$/;"	f
test_title_offset_float	tests/plotting/test_cube_axes_actor.py	/^def test_title_offset_float(cube_axes_actor):$/;"	f
test_title_offset_sequence	tests/plotting/test_cube_axes_actor.py	/^def test_title_offset_sequence(cube_axes_actor):$/;"	f
test_titles	tests/plotting/test_cube_axes_actor.py	/^def test_titles(cube_axes_actor):$/;"	f
test_to_opacity_tf	tests/plotting/test_lookup_table.py	/^def test_to_opacity_tf(lut, clamping):$/;"	f
test_to_tetrahedral	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral(tiny_rectilinear, tetra_per_cell):$/;"	f
test_to_tetrahedral_edge_case	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_edge_case():$/;"	f
test_to_tetrahedral_mixed	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_mixed(tiny_rectilinear):$/;"	f
test_to_tetrahedral_pass_cell_data	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_pass_cell_data(tiny_rectilinear):$/;"	f
test_to_tetrahedral_pass_cell_ids	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_pass_cell_ids(tiny_rectilinear):$/;"	f
test_to_tetrahedral_raise	tests/core/test_rectilinear_grid_filters.py	/^def test_to_tetrahedral_raise(tiny_rectilinear):$/;"	f
test_to_tf	tests/plotting/test_lookup_table.py	/^def test_to_tf(lut):$/;"	f
test_tobytes	tests/core/test_pyvista_ndarray.py	/^def test_tobytes(pyvista_ndarray_1d):$/;"	f
test_too_many_scalar_bars	tests/plotting/test_scalar_bars.py	/^def test_too_many_scalar_bars(sphere):$/;"	f
test_track_click_position	tests/plotting/test_render_window_interactor.py	/^def test_track_click_position():$/;"	f
test_track_click_position_multi_render	tests/plotting/test_render_window_interactor.py	/^def test_track_click_position_multi_render():$/;"	f
test_track_click_position_raises	tests/plotting/test_render_window_interactor.py	/^def test_track_click_position_raises(callback):$/;"	f
test_track_mouse_position	tests/plotting/test_render_window_interactor.py	/^def test_track_mouse_position():$/;"	f
test_trame	tests/plotting/jupyter/test_trame.py	/^def test_trame(client_type):$/;"	f
test_trame_closed_plotter	tests/plotting/jupyter/test_trame.py	/^def test_trame_closed_plotter():$/;"	f
test_trame_config	tests/plotting/test_theme.py	/^def test_trame_config():$/;"	f
test_trame_custom_menu_items	tests/plotting/jupyter/test_trame.py	/^def test_trame_custom_menu_items(client_type):$/;"	f
test_trame_export_html	tests/plotting/jupyter/test_trame.py	/^def test_trame_export_html(tmpdir):$/;"	f
test_trame_int64	tests/plotting/jupyter/test_trame.py	/^def test_trame_int64():$/;"	f
test_trame_jupyter_custom_handler	tests/plotting/jupyter/test_trame.py	/^def test_trame_jupyter_custom_handler():$/;"	f
test_trame_jupyter_custom_size	tests/plotting/jupyter/test_trame.py	/^def test_trame_jupyter_custom_size():$/;"	f
test_trame_jupyter_modes	tests/plotting/jupyter/test_trame.py	/^def test_trame_jupyter_modes():$/;"	f
test_trame_plotter_ui	tests/plotting/jupyter/test_trame.py	/^def test_trame_plotter_ui(client_type):$/;"	f
test_trame_server_launch	tests/plotting/jupyter/test_trame.py	/^def test_trame_server_launch():$/;"	f
test_trame_views	tests/plotting/jupyter/test_trame.py	/^def test_trame_views():$/;"	f
test_transform_actor	tests/plotting/test_actor.py	/^def test_transform_actor(actor, multiply_mode):$/;"	f
test_transform_add	tests/core/test_utilities.py	/^def test_transform_add():$/;"	f
test_transform_add_raises	tests/core/test_utilities.py	/^def test_transform_add_raises():$/;"	f
test_transform_apply	tests/core/test_utilities.py	/^def test_transform_apply(transform, obj, return_self, return_type, return_dtype, copy):$/;"	f
test_transform_apply_invalid_mode	tests/core/test_utilities.py	/^def test_transform_apply_invalid_mode():$/;"	f
test_transform_apply_to_dataset	tests/core/test_utilities.py	/^def test_transform_apply_to_dataset(scale_transform, mode, method):$/;"	f
test_transform_apply_to_points	tests/core/test_utilities.py	/^def test_transform_apply_to_points(scale_transform, translate_transform, method, transformation):$/;"	f
test_transform_apply_to_vectors	tests/core/test_utilities.py	/^def test_transform_apply_to_vectors(scale_transform, translate_transform, method, transformation):$/;"	f
test_transform_as_rotation	tests/core/test_utilities.py	/^def test_transform_as_rotation(representation, args, expected_type, expected_shape):$/;"	f
test_transform_chain_methods	tests/core/test_utilities.py	/^def test_transform_chain_methods():$/;"	f
test_transform_compose_vtkmatrix	tests/core/test_utilities.py	/^def test_transform_compose_vtkmatrix(transform):$/;"	f
test_transform_copy	tests/core/test_utilities.py	/^def test_transform_copy(multiply_mode):$/;"	f
test_transform_decompose	tests/core/test_utilities.py	/^def test_transform_decompose(transform, do_shear, do_scale, do_reflection, do_rotate, do_translate):$/;"	f
test_transform_decompose_dtype	tests/core/test_utilities.py	/^def test_transform_decompose_dtype(dtype, homogeneous):$/;"	f
test_transform_filter	tests/core/test_composite.py	/^def test_transform_filter(ant, sphere, airplane, tetbeam, inplace):$/;"	f
test_transform_filter_inplace_default_warns	tests/core/test_composite.py	/^def test_transform_filter_inplace_default_warns(multiblock_poly):$/;"	f
test_transform_filter_inplace_default_warns	tests/core/test_dataobject_filters.py	/^def test_transform_filter_inplace_default_warns(cube):$/;"	f
test_transform_flip_xyz	tests/core/test_utilities.py	/^def test_transform_flip_xyz(transform, method, vector):$/;"	f
test_transform_identity	tests/core/test_utilities.py	/^def test_transform_identity(transform):$/;"	f
test_transform_imagedata	tests/core/test_dataobject_filters.py	/^def test_transform_imagedata(uniform, spacing):$/;"	f
test_transform_imagedata_warns_with_shear	tests/core/test_dataobject_filters.py	/^def test_transform_imagedata_warns_with_shear(uniform):$/;"	f
test_transform_init	tests/core/test_utilities.py	/^def test_transform_init():$/;"	f
test_transform_inplace_bad_types_2	tests/core/test_dataobject_filters.py	/^def test_transform_inplace_bad_types_2(rectilinear):$/;"	f
test_transform_inplace_rectilinear	tests/core/test_dataobject_filters.py	/^def test_transform_inplace_rectilinear(rectilinear):$/;"	f
test_transform_int_vectors_warning	tests/core/test_dataobject_filters.py	/^def test_transform_int_vectors_warning(datasets, num_cell_arrays, num_point_data):$/;"	f
test_transform_integers	tests/core/test_dataobject_filters.py	/^def test_transform_integers():$/;"	f
test_transform_integers_vtkbug_present	tests/core/test_dataobject_filters.py	/^def test_transform_integers_vtkbug_present():$/;"	f
test_transform_invert	tests/core/test_utilities.py	/^def test_transform_invert(transform):$/;"	f
test_transform_matrix_list	tests/core/test_utilities.py	/^def test_transform_matrix_list(transform, attr):$/;"	f
test_transform_mesh	tests/core/test_dataobject_filters.py	/^def test_transform_mesh(datasets, num_cell_arrays, num_point_data):$/;"	f
test_transform_mesh_and_vectors	tests/core/test_dataobject_filters.py	/^def test_transform_mesh_and_vectors(datasets, num_cell_arrays, num_point_data):$/;"	f
test_transform_mul	tests/core/test_utilities.py	/^def test_transform_mul():$/;"	f
test_transform_mul_other	tests/core/test_utilities.py	/^def test_transform_mul_other(other):$/;"	f
test_transform_mul_raises	tests/core/test_utilities.py	/^def test_transform_mul_raises():$/;"	f
test_transform_multiply_mode	tests/core/test_utilities.py	/^def test_transform_multiply_mode(transform):$/;"	f
test_transform_multiply_mode_override	tests/core/test_utilities.py	/^def test_transform_multiply_mode_override(transform, transformed_actor, object_mode, override_mode):$/;"	f
test_transform_radd	tests/core/test_utilities.py	/^def test_transform_radd():$/;"	f
test_transform_radd_raises	tests/core/test_utilities.py	/^def test_transform_radd_raises():$/;"	f
test_transform_raises	tests/core/test_dataobject_filters.py	/^def test_transform_raises(sphere):$/;"	f
test_transform_reflect	tests/core/test_utilities.py	/^def test_transform_reflect(transform, reflect_args):$/;"	f
test_transform_repr	tests/core/test_utilities.py	/^def test_transform_repr(transform):$/;"	f
test_transform_rmul	tests/core/test_utilities.py	/^def test_transform_rmul(scale_factor):$/;"	f
test_transform_rmul_raises	tests/core/test_utilities.py	/^def test_transform_rmul_raises():$/;"	f
test_transform_rotate	tests/core/test_utilities.py	/^def test_transform_rotate(transform):$/;"	f
test_transform_rotate_vector	tests/core/test_utilities.py	/^def test_transform_rotate_vector(transform):$/;"	f
test_transform_rotate_x	tests/core/test_utilities.py	/^def test_transform_rotate_x(transform):$/;"	f
test_transform_rotate_y	tests/core/test_utilities.py	/^def test_transform_rotate_y(transform):$/;"	f
test_transform_rotate_z	tests/core/test_utilities.py	/^def test_transform_rotate_z(transform):$/;"	f
test_transform_scale	tests/core/test_utilities.py	/^def test_transform_scale(transform, scale_args):$/;"	f
test_transform_should_fail_given_wrong_numpy_shape	tests/core/test_dataobject_filters.py	/^def test_transform_should_fail_given_wrong_numpy_shape(array, grid):$/;"	f
test_transform_should_match_vtk_transformation	tests/core/test_dataobject_filters.py	/^def test_transform_should_match_vtk_transformation(rotate_amounts, translate_amounts, grid):$/;"	f
test_transform_should_match_vtk_transformation_non_homogeneous	tests/core/test_dataobject_filters.py	/^def test_transform_should_match_vtk_transformation_non_homogeneous(rotate_amounts, grid):$/;"	f
test_transform_translate	tests/core/test_utilities.py	/^def test_transform_translate(transform, translate_args):$/;"	f
test_transform_vectors_sph_to_cart	tests/core/test_utilities.py	/^def test_transform_vectors_sph_to_cart():$/;"	f
test_transform_with_point	tests/core/test_utilities.py	/^def test_transform_with_point(transform, multiply_mode, method, args):$/;"	f
test_transforms	tests/plotting/test_lights.py	/^def test_transforms():$/;"	f
test_translate	tests/core/test_pointset.py	/^def test_translate():$/;"	f
test_translate_direction_collinear	tests/core/test_geometric_sources.py	/^def test_translate_direction_collinear(is_negative, delta, bunny):$/;"	f
test_translate_precision	tests/core/test_geometric_sources.py	/^def test_translate_precision():$/;"	f
test_translate_should_fail_bad_points_or_transform	tests/core/test_dataobject_filters.py	/^def test_translate_should_fail_bad_points_or_transform(grid):$/;"	f
test_translate_should_not_fail_given_none	tests/core/test_dataobject_filters.py	/^def test_translate_should_not_fail_given_none(grid):$/;"	f
test_translate_should_translate_grid	tests/core/test_dataobject_filters.py	/^def test_translate_should_translate_grid(grid, axis_amounts):$/;"	f
test_translation	tests/plotting/test_widgets.py	/^    def test_translation($/;"	f	function:test_affine_widget
test_triangle	tests/core/test_geometric_objects.py	/^def test_triangle():$/;"	f
test_triangle	tests/examples/test_cell_examples.py	/^def test_triangle():$/;"	f
test_triangle_raises	tests/core/test_geometric_objects.py	/^def test_triangle_raises(points):$/;"	f
test_triangle_strip	tests/examples/test_cell_examples.py	/^def test_triangle_strip():$/;"	f
test_triangulate	tests/core/test_dataobject_filters.py	/^def test_triangulate():$/;"	f
test_triangulate_composite	tests/core/test_dataobject_filters.py	/^def test_triangulate_composite(multiblock_all):$/;"	f
test_triangulate_contours	tests/core/test_polydata_filters.py	/^def test_triangulate_contours():$/;"	f
test_triangulate_filter	tests/core/test_polydata.py	/^def test_triangulate_filter(plane):$/;"	f
test_triangulate_filter_pass_lines	tests/core/test_polydata.py	/^def test_triangulate_filter_pass_lines(sphere: pv.PolyData, plane: pv.PolyData, pass_lines: bool):$/;"	f
test_triangulate_filter_pass_verts	tests/core/test_polydata.py	/^def test_triangulate_filter_pass_verts(plane: pv.PolyData, pass_verts: bool):$/;"	f
test_triangulate_inplace	tests/core/test_grid.py	/^def test_triangulate_inplace(hexbeam):$/;"	f
test_triquadratic_hexahedron	tests/examples/test_cell_examples.py	/^def test_triquadratic_hexahedron():$/;"	f
test_triquadratic_pyramid	tests/examples/test_cell_examples.py	/^def test_triquadratic_pyramid():$/;"	f
test_try_imageio_imread	tests/core/test_reader.py	/^def test_try_imageio_imread():$/;"	f
test_tube	tests/core/test_geometric_objects.py	/^def test_tube():$/;"	f
test_tube	tests/core/test_polydata.py	/^def test_tube(spline):$/;"	f
test_tube_capping	tests/core/test_geometric_objects.py	/^def test_tube_capping(capping: bool):$/;"	f
test_type_invalid	tests/plotting/test_lights.py	/^def test_type_invalid():$/;"	f
test_type_properties	tests/plotting/test_lights.py	/^def test_type_properties(int_code, enum_code):$/;"	f
test_type_setters	tests/plotting/test_lights.py	/^def test_type_setters():$/;"	f
test_uniform_eq	tests/core/test_dataobject.py	/^def test_uniform_eq():$/;"	f
test_uniform_setters	tests/core/test_grid.py	/^def test_uniform_setters():$/;"	f
test_unique_cell_types_explicit_structured_grid	tests/examples/test_dataset_loader.py	/^def test_unique_cell_types_explicit_structured_grid():$/;"	f
test_unique_colors	tests/plotting/test_colors.py	/^def test_unique_colors():$/;"	f
test_unlink_views_raises	tests/plotting/test_plotter.py	/^def test_unlink_views_raises():$/;"	f
test_unstructured_grid_eq	tests/core/test_dataobject.py	/^def test_unstructured_grid_eq(hexbeam):$/;"	f
test_up	tests/plotting/test_camera.py	/^def test_up(camera):$/;"	f
test_update	tests/core/test_datasetattributes.py	/^def test_update(uniform, copy):$/;"	f
test_update_scalar_bar_range	tests/plotting/test_plotting.py	/^def test_update_scalar_bar_range(sphere):$/;"	f
test_update_scalar_bar_range_raises	tests/plotting/test_plotter.py	/^def test_update_scalar_bar_range_raises():$/;"	f
test_use_2d_mode	tests/plotting/test_cube_axes_actor.py	/^def test_use_2d_mode(cube_axes_actor):$/;"	f
test_use_circular_splat	tests/plotting/mappers/test_gaussian_mapper.py	/^def test_use_circular_splat(mapper):$/;"	f
test_user_annotations_scalar_bar_mesh	tests/plotting/test_plotting.py	/^def test_user_annotations_scalar_bar_mesh(uniform):$/;"	f
test_user_annotations_scalar_bar_volume	tests/plotting/test_plotting.py	/^def test_user_annotations_scalar_bar_volume(uniform, verify_image_cache):$/;"	f
test_user_dict	tests/core/test_dataobject.py	/^def test_user_dict(data_object):$/;"	f
test_user_dict_persists_with_cells_to_points	tests/core/test_dataobject.py	/^def test_user_dict_persists_with_cells_to_points(uniform):$/;"	f
test_user_dict_persists_with_merge_filter	tests/core/test_dataobject.py	/^def test_user_dict_persists_with_merge_filter():$/;"	f
test_user_dict_persists_with_pack_labels_filter	tests/core/test_dataobject.py	/^def test_user_dict_persists_with_pack_labels_filter():$/;"	f
test_user_dict_persists_with_points_to_cells	tests/core/test_dataobject.py	/^def test_user_dict_persists_with_points_to_cells(uniform):$/;"	f
test_user_dict_persists_with_threshold_filter	tests/core/test_dataobject.py	/^def test_user_dict_persists_with_threshold_filter(uniform):$/;"	f
test_user_dict_removal	tests/core/test_dataobject.py	/^def test_user_dict_removal(data_object, method):$/;"	f
test_user_dict_values	tests/core/test_dataobject.py	/^def test_user_dict_values(ant, value):$/;"	f
test_user_dict_write_read	tests/core/test_dataobject.py	/^def test_user_dict_write_read(tmp_path, data_object, ext):$/;"	f
test_user_logo	tests/plotting/test_theme.py	/^def test_user_logo(default_theme, verify_image_cache):$/;"	f
test_user_matrix_mesh	tests/plotting/test_plotting.py	/^def test_user_matrix_mesh(sphere):$/;"	f
test_user_matrix_silhouette	tests/plotting/test_plotting.py	/^def test_user_matrix_silhouette(airplane):$/;"	f
test_user_matrix_volume	tests/plotting/test_plotting.py	/^def test_user_matrix_volume(uniform):$/;"	f
test_user_theme	tests/plotting/test_theme.py	/^def test_user_theme():$/;"	f
test_utilities_modules	tests/namespace/test_utilities_namespace.py	/^def test_utilities_modules(name):$/;"	f
test_utilities_namespace	tests/namespace/test_utilities_namespace.py	/^def test_utilities_namespace(name):$/;"	f
test_valid_array_len_cells	tests/core/test_datasetattributes.py	/^def test_valid_array_len_cells(hexbeam):$/;"	f
test_valid_array_len_field	tests/core/test_datasetattributes.py	/^def test_valid_array_len_field(hexbeam):$/;"	f
test_valid_array_len_points	tests/core/test_datasetattributes.py	/^def test_valid_array_len_points(hexbeam):$/;"	f
test_valid_vector_raises	tests/core/test_utilities.py	/^def test_valid_vector_raises(point):$/;"	f
test_validate_array	tests/core/test_validation.py	/^def test_validate_array($/;"	f
test_validate_array3	tests/core/test_validation.py	/^def test_validate_array3(reshape):$/;"	f
test_validate_arrayN	tests/core/test_validation.py	/^def test_validate_arrayN(reshape):$/;"	f
test_validate_arrayN_unsigned	tests/core/test_validation.py	/^def test_validate_arrayN_unsigned(reshape):$/;"	f
test_validate_arrayNx3	tests/core/test_validation.py	/^def test_validate_arrayNx3(reshape):$/;"	f
test_validate_array_non_numeric	tests/core/test_validation.py	/^def test_validate_array_non_numeric(array):$/;"	f
test_validate_axes	tests/core/test_validation.py	/^def test_validate_axes(name):$/;"	f
test_validate_axes_orthogonal	tests/core/test_validation.py	/^def test_validate_axes_orthogonal(bias_index):$/;"	f
test_validate_data_range	tests/core/test_validation.py	/^def test_validate_data_range():$/;"	f
test_validate_dim_operation	tests/core/test_imagedata_filters.py	/^def test_validate_dim_operation($/;"	f
test_validate_dim_operation_invalid_parameters	tests/core/test_imagedata_filters.py	/^def test_validate_dim_operation_invalid_parameters($/;"	f
test_validate_dimensionality	tests/core/test_validation.py	/^def test_validate_dimensionality(dimensionality, reshape, expected_dimensionality):$/;"	f
test_validate_dimensionality_errors	tests/core/test_validation.py	/^def test_validate_dimensionality_errors(dimensionality, message):$/;"	f
test_validate_jupyter_backend_raises	tests/plotting/jupyter/test_static.py	/^def test_validate_jupyter_backend_raises(mocker: MockerFixture):$/;"	f
test_validate_number	tests/core/test_validation.py	/^def test_validate_number():$/;"	f
test_validate_rotation	tests/core/test_validation.py	/^def test_validate_rotation():$/;"	f
test_validate_rotation_tolerance	tests/core/test_validation.py	/^def test_validate_rotation_tolerance():$/;"	f
test_validate_shape_value	tests/core/test_validation.py	/^def test_validate_shape_value():$/;"	f
test_validate_transform3x3	tests/core/test_validation.py	/^def test_validate_transform3x3(transform_like):$/;"	f
test_validate_transform3x3_raises	tests/core/test_validation.py	/^def test_validate_transform3x3_raises():$/;"	f
test_validate_transform4x4	tests/core/test_validation.py	/^def test_validate_transform4x4(transform_like):$/;"	f
test_validate_transform4x4_raises	tests/core/test_validation.py	/^def test_validate_transform4x4_raises():$/;"	f
test_value_range	tests/plotting/test_lookup_table.py	/^def test_value_range(lut, lut_w_cmap):$/;"	f
test_value_should_exist	tests/core/test_datasetattributes.py	/^def test_value_should_exist(insert_arange_narray):$/;"	f
test_values	tests/plotting/test_lookup_table.py	/^def test_values(lut):$/;"	f
test_values_should_be_pyvista_ndarrays	tests/core/test_datasetattributes.py	/^def test_values_should_be_pyvista_ndarrays(insert_arange_narray):$/;"	f
test_vector_array	tests/plotting/test_plotting.py	/^def test_vector_array(multicomp_poly):$/;"	f
test_vector_array_fail_with_incorrect_component	tests/plotting/test_plotting.py	/^def test_vector_array_fail_with_incorrect_component(multicomp_poly):$/;"	f
test_vector_array_with_cells	tests/plotting/test_plotting.py	/^def test_vector_array_with_cells(multicomp_poly):$/;"	f
test_vector_array_with_points	tests/plotting/test_plotting.py	/^def test_vector_array_with_points(multicomp_poly):$/;"	f
test_vector_plotting_doesnt_modify_data	tests/plotting/test_plotting.py	/^def test_vector_plotting_doesnt_modify_data(multicomp_poly):$/;"	f
test_version	tests/core/test_utilities.py	/^def test_version():$/;"	f
test_vertex	tests/examples/test_cell_examples.py	/^def test_vertex():$/;"	f
test_vertice_cells_on_read	tests/core/test_polydata.py	/^def test_vertice_cells_on_read(tmpdir):$/;"	f
test_verts	tests/core/test_polydata.py	/^def test_verts(verts_is_cell_array):$/;"	f
test_view_angle	tests/plotting/test_camera.py	/^def test_view_angle(camera):$/;"	f
test_view_frustum	tests/plotting/test_camera.py	/^def test_view_frustum(camera):$/;"	f
test_view_isometric	tests/plotting/test_renderer.py	/^def test_view_isometric():$/;"	f
test_view_vectors	tests/plotting/test_plotting_utilities.py	/^def test_view_vectors():$/;"	f
test_view_xy	tests/plotting/test_renderer.py	/^def test_view_xy():$/;"	f
test_view_xyz	tests/plotting/test_plotting.py	/^def test_view_xyz(direction, negative, colorful_tetrahedron):$/;"	f
test_view_xz	tests/plotting/test_renderer.py	/^def test_view_xz():$/;"	f
test_view_yx	tests/plotting/test_renderer.py	/^def test_view_yx():$/;"	f
test_view_yz	tests/plotting/test_renderer.py	/^def test_view_yz():$/;"	f
test_view_zx	tests/plotting/test_renderer.py	/^def test_view_zx():$/;"	f
test_view_zy	tests/plotting/test_renderer.py	/^def test_view_zy():$/;"	f
test_viewport	tests/plotting/test_renderer.py	/^def test_viewport():$/;"	f
test_visible	tests/plotting/mappers/test_composite_mapper.py	/^def test_visible(block_attr):$/;"	f
test_vol_actor_prop	tests/plotting/test_actor.py	/^def test_vol_actor_prop(vol_actor):$/;"	f
test_volume	tests/core/test_grid.py	/^def test_volume(hexbeam):$/;"	f
test_volume	tests/core/test_polydata.py	/^def test_volume(sphere_dense):$/;"	f
test_volume_area	tests/core/test_dataset.py	/^def test_volume_area():$/;"	f
test_volume_independent_components	tests/plotting/test_volume_property.py	/^def test_volume_independent_components(vol_prop):$/;"	f
test_volume_lookup_table	tests/plotting/test_volume_property.py	/^def test_volume_lookup_table(vol_prop, skip_check_gc):$/;"	f
test_volume_mapper	tests/plotting/test_theme.py	/^def test_volume_mapper(default_theme):$/;"	f
test_volume_mapper_blend_mode	tests/plotting/mappers/test_volume_mapper.py	/^def test_volume_mapper_blend_mode(volume_mapper, skip_check_gc):$/;"	f
test_volume_mapper_dataset	tests/plotting/mappers/test_volume_mapper.py	/^def test_volume_mapper_dataset(volume_mapper, skip_check_gc):$/;"	f
test_volume_property_ambient	tests/plotting/test_volume_property.py	/^def test_volume_property_ambient(vol_prop):$/;"	f
test_volume_property_copy	tests/plotting/test_volume_property.py	/^def test_volume_property_copy(vol_prop):$/;"	f
test_volume_property_diffuse	tests/plotting/test_volume_property.py	/^def test_volume_property_diffuse(vol_prop):$/;"	f
test_volume_property_repr	tests/plotting/test_volume_property.py	/^def test_volume_property_repr(vol_prop):$/;"	f
test_volume_property_shade	tests/plotting/test_volume_property.py	/^def test_volume_property_shade(vol_prop):$/;"	f
test_volume_property_specular	tests/plotting/test_volume_property.py	/^def test_volume_property_specular(vol_prop):$/;"	f
test_volume_property_specular_power	tests/plotting/test_volume_property.py	/^def test_volume_property_specular_power(vol_prop):$/;"	f
test_volume_rendering_from_helper	tests/plotting/test_plotting.py	/^def test_volume_rendering_from_helper(uniform, verify_image_cache):$/;"	f
test_volume_rendering_from_plotter	tests/plotting/test_plotting.py	/^def test_volume_rendering_from_plotter(uniform):$/;"	f
test_volume_rendering_rectilinear	tests/plotting/test_plotting.py	/^def test_volume_rendering_rectilinear(uniform):$/;"	f
test_voxel	tests/examples/test_cell_examples.py	/^def test_voxel():$/;"	f
test_voxelize	tests/core/test_utilities.py	/^def test_voxelize(uniform):$/;"	f
test_voxelize_binary_mask	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask(frog_tissues_image, frog_tissues_contour):$/;"	f
test_voxelize_binary_mask_cell_length_sample_size	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_cell_length_sample_size(ant):$/;"	f
test_voxelize_binary_mask_dimensions	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_dimensions(sphere):$/;"	f
test_voxelize_binary_mask_foreground_background	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_foreground_background(sphere, foreground, background):$/;"	f
test_voxelize_binary_mask_input	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_input(hexbeam):$/;"	f
test_voxelize_binary_mask_no_reference	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_no_reference(frog_tissues_image, frog_tissues_contour):$/;"	f
test_voxelize_binary_mask_orientation	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_orientation(oriented_image, oriented_polydata):$/;"	f
test_voxelize_binary_mask_raises	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_raises(sphere):$/;"	f
test_voxelize_binary_mask_rounding_func	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_rounding_func(sphere, rounding_func):$/;"	f
test_voxelize_binary_mask_spacing	tests/core/test_dataset_filters.py	/^def test_voxelize_binary_mask_spacing(ant):$/;"	f
test_voxelize_enclosed_bounds	tests/core/test_utilities.py	/^def test_voxelize_enclosed_bounds(function, ant):$/;"	f
test_voxelize_fit_bounds	tests/core/test_utilities.py	/^def test_voxelize_fit_bounds(function, uniform):$/;"	f
test_voxelize_invalid_density	tests/core/test_utilities.py	/^def test_voxelize_invalid_density(rectilinear):$/;"	f
test_voxelize_non_uniform_density	tests/core/test_utilities.py	/^def test_voxelize_non_uniform_density(uniform):$/;"	f
test_voxelize_throws_point_cloud	tests/core/test_utilities.py	/^def test_voxelize_throws_point_cloud(hexbeam):$/;"	f
test_voxelize_volume	tests/plotting/test_plotting.py	/^def test_voxelize_volume():$/;"	f
test_voxelize_volume_default_density	tests/core/test_utilities.py	/^def test_voxelize_volume_default_density(uniform):$/;"	f
test_voxelize_volume_invalid_density	tests/core/test_utilities.py	/^def test_voxelize_volume_invalid_density(rectilinear):$/;"	f
test_voxelize_volume_no_face_mesh	tests/core/test_utilities.py	/^def test_voxelize_volume_no_face_mesh(rectilinear):$/;"	f
test_vtk_colors	tests/plotting/test_colors.py	/^def test_vtk_colors(vtk_color):$/;"	f
test_vtk_error_catcher	tests/core/test_utilities.py	/^def test_vtk_error_catcher():$/;"	f
test_vtk_not_loaded	tests/test_init.py	/^def test_vtk_not_loaded():$/;"	f
test_vtk_points	tests/plotting/test_collection.py	/^def test_vtk_points():$/;"	f
test_vtk_points_allow_empty	tests/core/test_helpers.py	/^def test_vtk_points_allow_empty():$/;"	f
test_vtk_points_deep_shallow	tests/core/test_helpers.py	/^def test_vtk_points_deep_shallow():$/;"	f
test_vtk_points_force_float	tests/core/test_helpers.py	/^def test_vtk_points_force_float(force_float, expected_data_type):$/;"	f
test_vtk_points_slice	tests/plotting/test_collection.py	/^def test_vtk_points_slice():$/;"	f
test_vtk_verbosity_context	tests/core/test_utilities.py	/^def test_vtk_verbosity_context(verbosity):$/;"	f
test_vtk_verbosity_invalid_input	tests/core/test_utilities.py	/^def test_vtk_verbosity_invalid_input(value):$/;"	f
test_vtk_verbosity_nested_context	tests/core/test_utilities.py	/^def test_vtk_verbosity_nested_context():$/;"	f
test_vtk_verbosity_no_context	tests/core/test_utilities.py	/^def test_vtk_verbosity_no_context():$/;"	f
test_vtk_verbosity_set_get	tests/core/test_utilities.py	/^def test_vtk_verbosity_set_get(verbosity):$/;"	f
test_vtkmatrix_to_from_array	tests/core/test_utilities.py	/^def test_vtkmatrix_to_from_array():$/;"	f
test_vtkreader	tests/core/test_reader.py	/^def test_vtkreader():$/;"	f
test_warning_vtk	tests/test_conftest.py	/^def test_warning_vtk($/;"	f
test_warnings_turned_to_errors	tests/test_conftest.py	/^def test_warnings_turned_to_errors($/;"	f
test_warp_by_scalar	tests/core/test_dataset_filters.py	/^def test_warp_by_scalar():$/;"	f
test_warp_by_vector	tests/core/test_dataset_filters.py	/^def test_warp_by_vector():$/;"	f
test_wavelet	tests/core/test_geometric_objects.py	/^def test_wavelet():$/;"	f
test_wedge	tests/examples/test_cell_examples.py	/^def test_wedge():$/;"	f
test_where_is	tests/plotting/test_plotting.py	/^def test_where_is():$/;"	f
test_widget_box	tests/plotting/test_widgets.py	/^def test_widget_box(uniform):$/;"	f
test_widget_checkbox_button	tests/plotting/test_widgets.py	/^def test_widget_checkbox_button(uniform):$/;"	f
test_widget_closed	tests/plotting/test_widgets.py	/^def test_widget_closed(uniform):$/;"	f
test_widget_line	tests/plotting/test_widgets.py	/^def test_widget_line(uniform):$/;"	f
test_widget_plane	tests/plotting/test_widgets.py	/^def test_widget_plane(uniform):$/;"	f
test_widget_radio_button	tests/plotting/test_widgets.py	/^def test_widget_radio_button(uniform):$/;"	f
test_widget_radio_button_click	tests/plotting/test_widgets.py	/^def test_widget_radio_button_click(uniform):$/;"	f
test_widget_radio_button_multiple_on	tests/plotting/test_widgets.py	/^def test_widget_radio_button_multiple_on(uniform):$/;"	f
test_widget_radio_button_multiple_switch	tests/plotting/test_widgets.py	/^def test_widget_radio_button_multiple_switch(uniform):$/;"	f
test_widget_radio_button_plotter_closed	tests/plotting/test_widgets.py	/^def test_widget_radio_button_plotter_closed(uniform):$/;"	f
test_widget_radio_button_with_title	tests/plotting/test_widgets.py	/^def test_widget_radio_button_with_title(uniform):$/;"	f
test_widget_slider	tests/plotting/test_widgets.py	/^def test_widget_slider(uniform):$/;"	f
test_widget_sphere	tests/plotting/test_widgets.py	/^def test_widget_sphere(uniform):$/;"	f
test_widget_spline	tests/plotting/test_widgets.py	/^def test_widget_spline(uniform):$/;"	f
test_widget_text_slider	tests/plotting/test_widgets.py	/^def test_widget_text_slider(uniform):$/;"	f
test_window_size	tests/plotting/test_theme.py	/^def test_window_size(default_theme):$/;"	f
test_wireframe_color	tests/plotting/test_plotting.py	/^def test_wireframe_color(sphere):$/;"	f
test_wrap	tests/plotting/test_texture.py	/^def test_wrap(texture):$/;"	f
test_wrap_by_vector_raises	tests/core/test_dataset_filters.py	/^def test_wrap_by_vector_raises(mocker: MockerFixture):$/;"	f
test_wrap_image_array_raises_dtype	tests/plotting/test_regression.py	/^def test_wrap_image_array_raises_dtype(mocker: MockerFixture):$/;"	f
test_wrap_image_array_raises_ndim	tests/plotting/test_regression.py	/^def test_wrap_image_array_raises_ndim(mocker: MockerFixture, ndim):$/;"	f
test_wrap_image_array_raises_shape	tests/plotting/test_regression.py	/^def test_wrap_image_array_raises_shape(mocker: MockerFixture, shape):$/;"	f
test_wrap_no_copy	tests/core/test_helpers.py	/^def test_wrap_no_copy():$/;"	f
test_wrap_none	tests/core/test_helpers.py	/^def test_wrap_none():$/;"	f
test_wrap_pyvista_ndarray	tests/core/test_helpers.py	/^def test_wrap_pyvista_ndarray(sphere):$/;"	f
test_wrap_pyvista_ndarray_vtk	tests/core/test_helpers.py	/^def test_wrap_pyvista_ndarray_vtk(dtypes):$/;"	f
test_wrap_raises	tests/core/test_helpers.py	/^def test_wrap_raises():$/;"	f
test_wrap_raises_unable	tests/core/test_helpers.py	/^def test_wrap_raises_unable():$/;"	f
test_wrap_trimesh	tests/core/test_helpers.py	/^def test_wrap_trimesh():$/;"	f
test_wrap_vtk_not_supported_raises	tests/core/test_helpers.py	/^def test_wrap_vtk_not_supported_raises(mocker: MockerFixture):$/;"	f
test_wrappers	tests/core/test_helpers.py	/^def test_wrappers():$/;"	f
test_wrapping	tests/plotting/test_charts.py	/^def test_wrapping():$/;"	f
test_write_frame_raises	tests/plotting/test_plotter.py	/^def test_write_frame_raises():$/;"	f
test_write_gif	tests/plotting/test_plotting.py	/^def test_write_gif(sphere, tmpdir):$/;"	f
test_xdmf_reader	tests/core/test_reader.py	/^def test_xdmf_reader():$/;"	f
test_xmlimagedatareader	tests/core/test_reader.py	/^def test_xmlimagedatareader(tmpdir):$/;"	f
test_xmlmultiblockreader	tests/core/test_reader.py	/^def test_xmlmultiblockreader(tmpdir):$/;"	f
test_xmlpartitioneddatasetreader	tests/core/test_reader.py	/^def test_xmlpartitioneddatasetreader(tmpdir):$/;"	f
test_xmlpolydatareader	tests/core/test_reader.py	/^def test_xmlpolydatareader(tmpdir):$/;"	f
test_xmlrectilineargridreader	tests/core/test_reader.py	/^def test_xmlrectilineargridreader(tmpdir):$/;"	f
test_xmlstructuredgridreader	tests/core/test_reader.py	/^def test_xmlstructuredgridreader(tmpdir):$/;"	f
test_xmlunstructuredgridreader	tests/core/test_reader.py	/^def test_xmlunstructuredgridreader(tmpdir):$/;"	f
test_xyz_assembly	tests/plotting/test_plotting.py	/^def test_xyz_assembly(test_kwargs, Assembly, obj_kwargs, verify_image_cache):$/;"	f
test_xyz_assembly_show_labels_false	tests/plotting/test_plotting.py	/^def test_xyz_assembly_show_labels_false(Assembly):$/;"	f
test_zoom	tests/plotting/test_camera.py	/^def test_zoom(camera):$/;"	f
testing	build/lib/pyvista/plotting/themes.py	/^    testing = _TestingTheme$/;"	v	class:_NATIVE_THEMES
testing	pyvista/plotting/themes.py	/^    testing = _TestingTheme$/;"	v	class:_NATIVE_THEMES
tetbeam	tests/conftest.py	/^def tetbeam():$/;"	f
tetgen	doc/source/make_external_gallery.py	/^    tetgen=Example($/;"	v
tex	examples/02-plot/texture.py	/^tex = examples.download_masonry_texture()$/;"	v
tex	examples/02-plot/texture.py	/^tex = examples.download_puppy_texture()$/;"	v
tex	examples/02-plot/texture.py	/^tex = examples.load_globe_texture()$/;"	v
tex	examples/02-plot/texture.py	/^tex = pv.numpy_to_texture(image)$/;"	v
tex	examples/02-plot/texture.py	/^tex = pv.read_texture(image_file)$/;"	v
texinfo_documents	doc/source/conf.py	/^texinfo_documents = [$/;"	v
text	build/lib/pyvista/demos/logo.py	/^        text = text_3d('You can move me!', depth=0.1)$/;"	v
text	examples/00-load/create_pixel_art.py	/^text = logo.text_3d('ALIEN MONSTERS', depth=10.0)$/;"	v
text	examples/01-filter/image_fft.py	/^    text='Moon Landing Image FFT with Noise Removed',$/;"	v
text	examples/01-filter/image_fft.py	/^    text='Moon Landing Image FFT',$/;"	v
text	pyvista/demos/logo.py	/^        text = text_3d('You can move me!', depth=0.1)$/;"	v
text	tests/core/test_datasetattributes.py	/^from hypothesis.strategies import text$/;"	i
text	tests/plotting/test_plotting.py	/^import pyvista.plotting.text$/;"	i
text	tests/plotting/test_text.py	/^def text():$/;"	f
text3d_source_test_params	tests/core/test_geometric_sources.py	/^def text3d_source_test_params():$/;"	f
text3d_source_with_text	tests/core/test_geometric_sources.py	/^def text3d_source_with_text():$/;"	f
text_3d	build/lib/pyvista/demos/demos.py	/^from .logo import text_3d$/;"	i
text_3d	build/lib/pyvista/demos/logo.py	/^def text_3d(string, depth=0.5):$/;"	f
text_3d	pyvista/demos/demos.py	/^from .logo import text_3d$/;"	i
text_3d	pyvista/demos/logo.py	/^def text_3d(string, depth=0.5):$/;"	f
text_field	build/lib/pyvista/trame/ui/vuetify2.py	/^def text_field(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
text_field	build/lib/pyvista/trame/ui/vuetify3.py	/^def text_field(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
text_field	examples/99-advanced/customization_trame_toolbar.py	/^from pyvista.trame.ui.vuetify3 import text_field$/;"	i
text_field	pyvista/trame/ui/vuetify2.py	/^def text_field(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
text_field	pyvista/trame/ui/vuetify3.py	/^def text_field(model, tooltip, **kwargs):  # numpydoc ignore=PR01$/;"	f
texture	build/lib/pyvista/plotting/actor.py	/^    def texture(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
texture	build/lib/pyvista/plotting/actor.py	/^    def texture(self, obj) -> None:$/;"	m	class:Actor
texture	build/lib/pyvista/plotting/charts.py	/^    def texture(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture	build/lib/pyvista/plotting/charts.py	/^    def texture(self, val) -> None:$/;"	m	class:Brush
texture	examples/00-load/load_gltf.py	/^texture = examples.download_dikhololo_night()$/;"	v
texture	examples/02-plot/backface_props.py	/^    texture=texture,$/;"	v
texture	examples/02-plot/backface_props.py	/^texture = examples.load_globe_texture()$/;"	v
texture	examples/02-plot/background_image.py	/^texture = examples.load_globe_texture()$/;"	v
texture	examples/02-plot/multi_window.py	/^texture = examples.load_globe_texture()$/;"	v
texture	pyvista/plotting/actor.py	/^    def texture(self):  # numpydoc ignore=RT01$/;"	m	class:Actor
texture	pyvista/plotting/actor.py	/^    def texture(self, obj) -> None:$/;"	m	class:Actor
texture	pyvista/plotting/charts.py	/^    def texture(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture	pyvista/plotting/charts.py	/^    def texture(self, val) -> None:$/;"	m	class:Brush
texture	tests/conftest.py	/^def texture():$/;"	f
texture_interpolate	build/lib/pyvista/plotting/charts.py	/^    def texture_interpolate(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture_interpolate	build/lib/pyvista/plotting/charts.py	/^    def texture_interpolate(self, val) -> None:$/;"	m	class:Brush
texture_interpolate	pyvista/plotting/charts.py	/^    def texture_interpolate(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture_interpolate	pyvista/plotting/charts.py	/^    def texture_interpolate(self, val) -> None:$/;"	m	class:Brush
texture_map_to_plane	build/lib/pyvista/core/filters/data_set.py	/^    def texture_map_to_plane(  # type: ignore[misc]$/;"	m	class:DataSetFilters
texture_map_to_plane	pyvista/core/filters/data_set.py	/^    def texture_map_to_plane(  # type: ignore[misc]$/;"	m	class:DataSetFilters
texture_map_to_sphere	build/lib/pyvista/core/filters/data_set.py	/^    def texture_map_to_sphere(  # type: ignore[misc]$/;"	m	class:DataSetFilters
texture_map_to_sphere	pyvista/core/filters/data_set.py	/^    def texture_map_to_sphere(  # type: ignore[misc]$/;"	m	class:DataSetFilters
texture_repeat	build/lib/pyvista/plotting/charts.py	/^    def texture_repeat(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture_repeat	build/lib/pyvista/plotting/charts.py	/^    def texture_repeat(self, val) -> None:$/;"	m	class:Brush
texture_repeat	pyvista/plotting/charts.py	/^    def texture_repeat(self):  # numpydoc ignore=RT01$/;"	m	class:Brush
texture_repeat	pyvista/plotting/charts.py	/^    def texture_repeat(self, val) -> None:$/;"	m	class:Brush
textwrap	build/lib/pyvista/core/celltype.py	/^import textwrap$/;"	i
textwrap	build/lib/pyvista/ext/plot_directive.py	/^import textwrap$/;"	i
textwrap	build/lib/pyvista/plotting/plotter.py	/^import textwrap$/;"	i
textwrap	doc/source/make_tables.py	/^import textwrap$/;"	i
textwrap	pyvista/core/celltype.py	/^import textwrap$/;"	i
textwrap	pyvista/ext/plot_directive.py	/^import textwrap$/;"	i
textwrap	pyvista/plotting/plotter.py	/^import textwrap$/;"	i
tf	examples/02-plot/opacity.py	/^tf = pv.opacity_transfer_function(opacity, 256).astype(float) \/ 255.0$/;"	v
theme	build/lib/pyvista/_plot.py	/^        theme=theme,$/;"	v
theme	build/lib/pyvista/plotting/plotter.py	/^    def theme(self) -> Theme:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
theme	build/lib/pyvista/plotting/plotter.py	/^    def theme(self, theme) -> None:$/;"	m	class:BasePlotter
theme	examples/01-filter/image_fft.py	/^    theme=grey_theme,$/;"	v
theme	pyvista/_plot.py	/^        theme=theme,$/;"	v
theme	pyvista/plotting/plotter.py	/^    def theme(self) -> Theme:  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
theme	pyvista/plotting/plotter.py	/^    def theme(self, theme) -> None:$/;"	m	class:BasePlotter
themes	examples/02-plot/themes.py	/^from pyvista import themes$/;"	i
theta	build/lib/pyvista/examples/examples.py	/^        from sympy.abc import theta$/;"	i
theta	examples/00-load/create_sphere.py	/^theta = np.linspace(0, 2 * np.pi, ntheta)$/;"	v
theta	examples/00-load/create_sphere.py	/^theta = theta[:-1]$/;"	v
theta	examples/02-plot/distance_along_spline.py	/^theta = np.linspace(-1 * np.pi, 1 * np.pi, 100)$/;"	v
theta	examples/02-plot/points_gaussian_scale.py	/^theta = rng.uniform(0, 2 * np.pi, N_SPHERES)$/;"	v
theta	pyvista/examples/examples.py	/^        from sympy.abc import theta$/;"	i
theta_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def theta_resolution(self: CapsuleSource) -> int:$/;"	m	class:.CapsuleSource
theta_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^        def theta_resolution(self: CapsuleSource, theta_resolution: int) -> None:$/;"	m	class:.CapsuleSource
theta_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SphereSource) -> int:$/;"	m	class:SphereSource
theta_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SphereSource, theta_resolution: int) -> None:$/;"	m	class:SphereSource
theta_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
theta_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SuperquadricSource, theta_resolution: float) -> None:$/;"	m	class:SuperquadricSource
theta_resolution	examples/02-plot/texture.py	/^    theta_resolution=120,$/;"	v
theta_resolution	pyvista/core/utilities/geometric_sources.py	/^        def theta_resolution(self: CapsuleSource) -> int:$/;"	m	class:.CapsuleSource
theta_resolution	pyvista/core/utilities/geometric_sources.py	/^        def theta_resolution(self: CapsuleSource, theta_resolution: int) -> None:$/;"	m	class:.CapsuleSource
theta_resolution	pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SphereSource) -> int:$/;"	m	class:SphereSource
theta_resolution	pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SphereSource, theta_resolution: int) -> None:$/;"	m	class:SphereSource
theta_resolution	pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
theta_resolution	pyvista/core/utilities/geometric_sources.py	/^    def theta_resolution(self: SuperquadricSource, theta_resolution: float) -> None:$/;"	m	class:SuperquadricSource
theta_roundness	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def theta_roundness(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
theta_roundness	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def theta_roundness(self: SuperquadricSource, theta_roundness: float) -> None:$/;"	m	class:SuperquadricSource
theta_roundness	pyvista/core/utilities/geometric_sources.py	/^    def theta_roundness(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
theta_roundness	pyvista/core/utilities/geometric_sources.py	/^    def theta_roundness(self: SuperquadricSource, theta_roundness: float) -> None:$/;"	m	class:SuperquadricSource
thickness	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def thickness(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
thickness	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def thickness(self: SuperquadricSource, thickness: float) -> None:$/;"	m	class:SuperquadricSource
thickness	build/lib/pyvista/plotting/camera.py	/^    def thickness(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
thickness	build/lib/pyvista/plotting/camera.py	/^    def thickness(self, length):$/;"	m	class:Camera
thickness	pyvista/core/utilities/geometric_sources.py	/^    def thickness(self: SuperquadricSource) -> float:$/;"	m	class:SuperquadricSource
thickness	pyvista/core/utilities/geometric_sources.py	/^    def thickness(self: SuperquadricSource, thickness: float) -> None:$/;"	m	class:SuperquadricSource
thickness	pyvista/plotting/camera.py	/^    def thickness(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
thickness	pyvista/plotting/camera.py	/^    def thickness(self, length):$/;"	m	class:Camera
threaded	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import threaded as threaded$/;"	i
threaded	build/lib/pyvista/core/utilities/misc.py	/^def threaded(fn):  # noqa: ANN001, ANN201$/;"	f
threaded	pyvista/core/utilities/__init__.py	/^from .misc import threaded as threaded$/;"	i
threaded	pyvista/core/utilities/misc.py	/^def threaded(fn):  # noqa: ANN001, ANN201$/;"	f
threaded	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import threaded  # noqa: F401$/;"	i
threading	build/lib/pyvista/core/utilities/misc.py	/^import threading$/;"	i
threading	build/lib/pyvista/core/utilities/observers.py	/^import threading$/;"	i
threading	pyvista/core/utilities/misc.py	/^import threading$/;"	i
threading	pyvista/core/utilities/observers.py	/^import threading$/;"	i
three_dimensionality_image	tests/core/test_imagedata_filters.py	/^def three_dimensionality_image():$/;"	f
threshed	examples/01-filter/compute_volume.py	/^threshed = dataset.threshold_percent([0.15, 0.50], invert=True)$/;"	v
threshed	examples/01-filter/using_filters.py	/^threshed = dataset.threshold([100, 500])$/;"	v
threshold	build/lib/pyvista/core/filters/data_set.py	/^    def threshold(  # type: ignore[misc]$/;"	m	class:DataSetFilters
threshold	build/lib/pyvista/core/pointset.py	/^    def threshold(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
threshold	examples/01-filter/resample.py	/^threshold = lambda m: m.threshold(75.0, scalars='SLCImage')$/;"	v
threshold	pyvista/core/filters/data_set.py	/^    def threshold(  # type: ignore[misc]$/;"	m	class:DataSetFilters
threshold	pyvista/core/pointset.py	/^    def threshold(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
threshold_percent	build/lib/pyvista/core/filters/data_set.py	/^    def threshold_percent(  # type: ignore[misc]$/;"	m	class:DataSetFilters
threshold_percent	build/lib/pyvista/core/pointset.py	/^    def threshold_percent(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
threshold_percent	pyvista/core/filters/data_set.py	/^    def threshold_percent(  # type: ignore[misc]$/;"	m	class:DataSetFilters
threshold_percent	pyvista/core/pointset.py	/^    def threshold_percent(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PointSet
through	tests/plotting/test_picking.py	/^        through=False,  # Single cell visible picking$/;"	v	class:test_single_cell_picking.PickCallback
through_pick_callback	build/lib/pyvista/plotting/picking.py	/^        def through_pick_callback(selection):$/;"	f	function:PickingMethods.enable_rectangle_through_picking
through_pick_callback	pyvista/plotting/picking.py	/^        def through_pick_callback(selection):$/;"	f	function:PickingMethods.enable_rectangle_through_picking
tick_count	build/lib/pyvista/plotting/charts.py	/^    def tick_count(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_count	build/lib/pyvista/plotting/charts.py	/^    def tick_count(self, val) -> None:$/;"	m	class:Axis
tick_count	pyvista/plotting/charts.py	/^    def tick_count(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_count	pyvista/plotting/charts.py	/^    def tick_count(self, val) -> None:$/;"	m	class:Axis
tick_label_size	build/lib/pyvista/plotting/charts.py	/^    def tick_label_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_label_size	build/lib/pyvista/plotting/charts.py	/^    def tick_label_size(self, size) -> None:$/;"	m	class:Axis
tick_label_size	pyvista/plotting/charts.py	/^    def tick_label_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_label_size	pyvista/plotting/charts.py	/^    def tick_label_size(self, size) -> None:$/;"	m	class:Axis
tick_labels	build/lib/pyvista/plotting/charts.py	/^    def tick_labels(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels	build/lib/pyvista/plotting/charts.py	/^    def tick_labels(self, val) -> None:$/;"	m	class:Axis
tick_labels	pyvista/plotting/charts.py	/^    def tick_labels(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels	pyvista/plotting/charts.py	/^    def tick_labels(self, val) -> None:$/;"	m	class:Axis
tick_labels_offset	build/lib/pyvista/plotting/charts.py	/^    def tick_labels_offset(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels_offset	build/lib/pyvista/plotting/charts.py	/^    def tick_labels_offset(self, val) -> None:$/;"	m	class:Axis
tick_labels_offset	pyvista/plotting/charts.py	/^    def tick_labels_offset(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels_offset	pyvista/plotting/charts.py	/^    def tick_labels_offset(self, val) -> None:$/;"	m	class:Axis
tick_labels_visible	build/lib/pyvista/plotting/charts.py	/^    def tick_labels_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels_visible	build/lib/pyvista/plotting/charts.py	/^    def tick_labels_visible(self, val) -> None:$/;"	m	class:Axis
tick_labels_visible	pyvista/plotting/charts.py	/^    def tick_labels_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_labels_visible	pyvista/plotting/charts.py	/^    def tick_labels_visible(self, val) -> None:$/;"	m	class:Axis
tick_location	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def tick_location(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
tick_location	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def tick_location(self, value: str):$/;"	m	class:CubeAxesActor
tick_location	pyvista/plotting/cube_axes_actor.py	/^    def tick_location(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
tick_location	pyvista/plotting/cube_axes_actor.py	/^    def tick_location(self, value: str):$/;"	m	class:CubeAxesActor
tick_locations	build/lib/pyvista/plotting/charts.py	/^    def tick_locations(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_locations	build/lib/pyvista/plotting/charts.py	/^    def tick_locations(self, val) -> None:$/;"	m	class:Axis
tick_locations	pyvista/plotting/charts.py	/^    def tick_locations(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_locations	pyvista/plotting/charts.py	/^    def tick_locations(self, val) -> None:$/;"	m	class:Axis
tick_size	build/lib/pyvista/plotting/charts.py	/^    def tick_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_size	build/lib/pyvista/plotting/charts.py	/^    def tick_size(self, val) -> None:$/;"	m	class:Axis
tick_size	pyvista/plotting/charts.py	/^    def tick_size(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
tick_size	pyvista/plotting/charts.py	/^    def tick_size(self, val) -> None:$/;"	m	class:Axis
ticks_visible	build/lib/pyvista/plotting/charts.py	/^    def ticks_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
ticks_visible	build/lib/pyvista/plotting/charts.py	/^    def ticks_visible(self, val) -> None:$/;"	m	class:Axis
ticks_visible	pyvista/plotting/charts.py	/^    def ticks_visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
ticks_visible	pyvista/plotting/charts.py	/^    def ticks_visible(self, val) -> None:$/;"	m	class:Axis
tight	build/lib/pyvista/plotting/camera.py	/^    def tight($/;"	m	class:Camera
tight	pyvista/plotting/camera.py	/^    def tight($/;"	m	class:Camera
tight_layout	examples/02-plot/chart_basics.py	/^    tight_layout=True,$/;"	v
time	build/lib/pyvista/demos/demos.py	/^import time$/;"	i
time	build/lib/pyvista/plotting/plotter.py	/^import time$/;"	i
time	build/lib/pyvista/plotting/render_window_interactor.py	/^import time$/;"	i
time	build/lib/pyvista/plotting/utilities/xvfb.py	/^import time$/;"	i
time	examples/00-load/create_pointset.py	/^import time$/;"	i
time	pyvista/demos/demos.py	/^import time$/;"	i
time	pyvista/plotting/plotter.py	/^import time$/;"	i
time	pyvista/plotting/render_window_interactor.py	/^import time$/;"	i
time	pyvista/plotting/utilities/xvfb.py	/^import time$/;"	i
time	tests/core/test_imagedata_filters.py	/^import time$/;"	i
time	tests/plotting/test_plotting.py	/^import time$/;"	i
time	tests/plotting/test_render_window_interactor.py	/^import time$/;"	i
time_point_value	build/lib/pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:EnSightReader
time_point_value	build/lib/pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:OpenFOAMReader
time_point_value	build/lib/pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:PVDReader
time_point_value	build/lib/pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:XdmfReader
time_point_value	build/lib/pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):$/;"	m	class:ExodusIIReader
time_point_value	build/lib/pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):$/;"	m	class:Nek5000Reader
time_point_value	build/lib/pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):$/;"	m	class:TimeReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:EnSightReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:OpenFOAMReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:PVDReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):  # noqa: D102$/;"	m	class:XdmfReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):$/;"	m	class:ExodusIIReader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):$/;"	m	class:Nek5000Reader
time_point_value	pyvista/core/utilities/reader.py	/^    def time_point_value(self, time_point):$/;"	m	class:TimeReader
time_slider	examples/02-plot/chart_overlays.py	/^time_slider = p.add_slider_widget($/;"	v
time_values	build/lib/pyvista/core/utilities/reader.py	/^    def time_values(self):  # noqa: D102$/;"	m	class:PVDReader
time_values	build/lib/pyvista/core/utilities/reader.py	/^    def time_values(self):  # noqa: D102$/;"	m	class:XdmfReader
time_values	build/lib/pyvista/core/utilities/reader.py	/^    def time_values(self):$/;"	m	class:ExodusIIReader
time_values	build/lib/pyvista/core/utilities/reader.py	/^    def time_values(self):$/;"	m	class:Nek5000Reader
time_values	build/lib/pyvista/core/utilities/reader.py	/^    def time_values(self):$/;"	m	class:TimeReader
time_values	examples/00-load/reader.py	/^time_values = reader.time_values$/;"	v
time_values	pyvista/core/utilities/reader.py	/^    def time_values(self):  # noqa: D102$/;"	m	class:PVDReader
time_values	pyvista/core/utilities/reader.py	/^    def time_values(self):  # noqa: D102$/;"	m	class:XdmfReader
time_values	pyvista/core/utilities/reader.py	/^    def time_values(self):$/;"	m	class:ExodusIIReader
time_values	pyvista/core/utilities/reader.py	/^    def time_values(self):$/;"	m	class:Nek5000Reader
time_values	pyvista/core/utilities/reader.py	/^    def time_values(self):$/;"	m	class:TimeReader
times	build/lib/pyvista/plotting/tools.py	/^    times = _vtk.VTK_TIMES$/;"	v	class:FONTS
times	pyvista/plotting/tools.py	/^    times = _vtk.VTK_TIMES$/;"	v	class:FONTS
tiny_rectilinear	tests/core/test_rectilinear_grid_filters.py	/^def tiny_rectilinear():$/;"	f
tip	build/lib/pyvista/core/utilities/geometric_sources.py	/^    tip = 1$/;"	v	class:_PartEnum
tip	pyvista/core/utilities/geometric_sources.py	/^    tip = 1$/;"	v	class:_PartEnum
tip_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: ArrowSource) -> float:$/;"	m	class:ArrowSource
tip_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: ArrowSource, tip_length: float) -> None:$/;"	m	class:ArrowSource
tip_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: AxesGeometrySource) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
tip_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: AxesGeometrySource, length: float | VectorLike[float]) -> None:$/;"	m	class:AxesGeometrySource
tip_length	build/lib/pyvista/plotting/axes_actor.py	/^    def tip_length(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
tip_length	build/lib/pyvista/plotting/axes_actor.py	/^    def tip_length(self, length):$/;"	m	class:AxesActor
tip_length	pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: ArrowSource) -> float:$/;"	m	class:ArrowSource
tip_length	pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: ArrowSource, tip_length: float) -> None:$/;"	m	class:ArrowSource
tip_length	pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: AxesGeometrySource) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
tip_length	pyvista/core/utilities/geometric_sources.py	/^    def tip_length(self: AxesGeometrySource, length: float | VectorLike[float]) -> None:$/;"	m	class:AxesGeometrySource
tip_length	pyvista/plotting/axes_actor.py	/^    def tip_length(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
tip_length	pyvista/plotting/axes_actor.py	/^    def tip_length(self, length):$/;"	m	class:AxesActor
tip_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: ArrowSource) -> float:$/;"	m	class:ArrowSource
tip_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: ArrowSource, tip_radius: float) -> None:$/;"	m	class:ArrowSource
tip_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: AxesGeometrySource) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
tip_radius	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: AxesGeometrySource, radius: float) -> None:$/;"	m	class:AxesGeometrySource
tip_radius	pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: ArrowSource) -> float:$/;"	m	class:ArrowSource
tip_radius	pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: ArrowSource, tip_radius: float) -> None:$/;"	m	class:ArrowSource
tip_radius	pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: AxesGeometrySource) -> float:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
tip_radius	pyvista/core/utilities/geometric_sources.py	/^    def tip_radius(self: AxesGeometrySource, radius: float) -> None:$/;"	m	class:AxesGeometrySource
tip_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_resolution(self: ArrowSource) -> int:$/;"	m	class:ArrowSource
tip_resolution	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_resolution(self: ArrowSource, tip_resolution: int) -> None:$/;"	m	class:ArrowSource
tip_resolution	pyvista/core/utilities/geometric_sources.py	/^    def tip_resolution(self: ArrowSource) -> int:$/;"	m	class:ArrowSource
tip_resolution	pyvista/core/utilities/geometric_sources.py	/^    def tip_resolution(self: ArrowSource, tip_resolution: int) -> None:$/;"	m	class:ArrowSource
tip_type	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_type(self: AxesGeometrySource) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
tip_type	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def tip_type(self: AxesGeometrySource, tip_type: str | DataSet) -> None:$/;"	m	class:AxesGeometrySource
tip_type	build/lib/pyvista/plotting/axes_actor.py	/^    def tip_type(self) -> TipType:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
tip_type	build/lib/pyvista/plotting/axes_actor.py	/^    def tip_type(self, tip_type: TipType | int):$/;"	m	class:AxesActor
tip_type	pyvista/core/utilities/geometric_sources.py	/^    def tip_type(self: AxesGeometrySource) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesGeometrySource
tip_type	pyvista/core/utilities/geometric_sources.py	/^    def tip_type(self: AxesGeometrySource, tip_type: str | DataSet) -> None:$/;"	m	class:AxesGeometrySource
tip_type	pyvista/plotting/axes_actor.py	/^    def tip_type(self) -> TipType:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
tip_type	pyvista/plotting/axes_actor.py	/^    def tip_type(self, tip_type: TipType | int):$/;"	m	class:AxesActor
title	build/lib/pyvista/plotting/charts.py	/^    def title(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
title	build/lib/pyvista/plotting/charts.py	/^    def title(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
title	build/lib/pyvista/plotting/charts.py	/^    def title(self, val) -> None:$/;"	m	class:ChartMPL
title	build/lib/pyvista/plotting/charts.py	/^    def title(self, val) -> None:$/;"	m	class:_Chart
title	build/lib/pyvista/plotting/themes.py	/^    def title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
title	build/lib/pyvista/plotting/themes.py	/^    def title(self, title: str):$/;"	m	class:Theme
title	doc/source/make_tables.py	/^    title = ''$/;"	v	class:ColorTable
title	examples/02-plot/lookup_table.py	/^    title='Alpha Range',$/;"	v
title	examples/02-plot/plot_over_line.py	/^    title='Elevation Profile',$/;"	v
title	examples/03-widgets/multi_slider_widget.py	/^    title='Phi Resolution',$/;"	v	class:MyCustomRoutine
title	examples/03-widgets/multi_slider_widget.py	/^    title='Radius',$/;"	v
title	examples/03-widgets/multi_slider_widget.py	/^    title='Theta Resolution',$/;"	v
title	pyvista/plotting/charts.py	/^    def title(self):  # numpydoc ignore=RT01$/;"	m	class:ChartMPL
title	pyvista/plotting/charts.py	/^    def title(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
title	pyvista/plotting/charts.py	/^    def title(self, val) -> None:$/;"	m	class:ChartMPL
title	pyvista/plotting/charts.py	/^    def title(self, val) -> None:$/;"	m	class:_Chart
title	pyvista/plotting/themes.py	/^    def title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
title	pyvista/plotting/themes.py	/^    def title(self, title: str):$/;"	m	class:Theme
title_callback	build/lib/pyvista/plotting/widgets.py	/^        def title_callback(widget, _event):$/;"	f	function:WidgetHelper.add_text_slider_widget
title_callback	pyvista/plotting/widgets.py	/^        def title_callback(widget, _event):$/;"	f	function:WidgetHelper.add_text_slider_widget
title_font_size	examples/02-plot/scalar_bars.py	/^    title_font_size=20,$/;"	v
title_offset	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def title_offset(self) -> float | tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
title_offset	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def title_offset(self, offset: float | MutableSequence[float]):$/;"	m	class:CubeAxesActor
title_offset	pyvista/plotting/cube_axes_actor.py	/^    def title_offset(self) -> float | tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
title_offset	pyvista/plotting/cube_axes_actor.py	/^    def title_offset(self, offset: float | MutableSequence[float]):$/;"	m	class:CubeAxesActor
title_size	build/lib/pyvista/plotting/themes.py	/^    def title_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
title_size	build/lib/pyvista/plotting/themes.py	/^    def title_size(self, title_size: int | None):$/;"	m	class:_Font
title_size	pyvista/plotting/themes.py	/^    def title_size(self) -> int:  # numpydoc ignore=RT01$/;"	m	class:_Font
title_size	pyvista/plotting/themes.py	/^    def title_size(self, title_size: int | None):$/;"	m	class:_Font
tmesh	examples/00-load/wrap_trimesh.py	/^tmesh = trimesh.Trimesh(points, faces=faces, process=False)$/;"	v
to_array	build/lib/pyvista/plotting/texture.py	/^    def to_array(self) -> NumpyArray[float]:$/;"	m	class:Texture
to_array	pyvista/plotting/texture.py	/^    def to_array(self) -> NumpyArray[float]:$/;"	m	class:Texture
to_color_tf	build/lib/pyvista/plotting/lookup_table.py	/^    def to_color_tf(self) -> _vtk.vtkColorTransferFunction:$/;"	m	class:LookupTable
to_color_tf	pyvista/plotting/lookup_table.py	/^    def to_color_tf(self) -> _vtk.vtkColorTransferFunction:$/;"	m	class:LookupTable
to_dict	build/lib/pyvista/plotting/colors.py	/^    def to_dict(self):  # numpydoc ignore=RT01$/;"	m	class:Color
to_dict	build/lib/pyvista/plotting/themes.py	/^    def to_dict(self) -> dict[str, Any]:$/;"	m	class:_ThemeConfig
to_dict	pyvista/plotting/colors.py	/^    def to_dict(self):  # numpydoc ignore=RT01$/;"	m	class:Color
to_dict	pyvista/plotting/themes.py	/^    def to_dict(self) -> dict[str, Any]:$/;"	m	class:_ThemeConfig
to_grayscale	build/lib/pyvista/plotting/texture.py	/^    def to_grayscale(self) -> Texture:$/;"	m	class:Texture
to_grayscale	pyvista/plotting/texture.py	/^    def to_grayscale(self) -> Texture:$/;"	m	class:Texture
to_image	build/lib/pyvista/plotting/texture.py	/^    def to_image(self):$/;"	m	class:Texture
to_image	pyvista/plotting/texture.py	/^    def to_image(self):$/;"	m	class:Texture
to_img	build/lib/pyvista/plotting/utilities/regression.py	/^    def to_img(img):$/;"	f	function:compare_images
to_img	pyvista/plotting/utilities/regression.py	/^    def to_img(img):$/;"	f	function:compare_images
to_list	build/lib/pyvista/plotting/renderer.py	/^    def to_list(self):$/;"	m	class:CameraPosition
to_list	pyvista/plotting/renderer.py	/^    def to_list(self):$/;"	m	class:CameraPosition
to_meshio	build/lib/pyvista/core/utilities/__init__.py	/^from .fileio import to_meshio as to_meshio$/;"	i
to_meshio	build/lib/pyvista/core/utilities/fileio.py	/^def to_meshio(mesh: DataSet) -> meshio.Mesh:$/;"	f
to_meshio	pyvista/core/utilities/__init__.py	/^from .fileio import to_meshio as to_meshio$/;"	i
to_meshio	pyvista/core/utilities/fileio.py	/^def to_meshio(mesh: DataSet) -> meshio.Mesh:$/;"	f
to_opacity_tf	build/lib/pyvista/plotting/lookup_table.py	/^    def to_opacity_tf(self, clamping: bool = True) -> _vtk.vtkPiecewiseFunction:$/;"	m	class:LookupTable
to_opacity_tf	pyvista/plotting/lookup_table.py	/^    def to_opacity_tf(self, clamping: bool = True) -> _vtk.vtkPiecewiseFunction:$/;"	m	class:LookupTable
to_pandas	build/lib/pyvista/core/objects.py	/^    def to_pandas(self):$/;"	m	class:Table
to_pandas	pyvista/core/objects.py	/^    def to_pandas(self):$/;"	m	class:Table
to_paraview_pvcc	build/lib/pyvista/plotting/camera.py	/^    def to_paraview_pvcc(self, filename: str | Path):$/;"	m	class:Camera
to_paraview_pvcc	pyvista/plotting/camera.py	/^    def to_paraview_pvcc(self, filename: str | Path):$/;"	m	class:Camera
to_skybox	build/lib/pyvista/plotting/texture.py	/^    def to_skybox(self):$/;"	m	class:Texture
to_skybox	pyvista/plotting/texture.py	/^    def to_skybox(self):$/;"	m	class:Texture
to_tetrahedra	build/lib/pyvista/core/filters/rectilinear_grid.py	/^    def to_tetrahedra($/;"	m	class:RectilinearGridFilters
to_tetrahedra	build/lib/pyvista/core/grid.py	/^    def to_tetrahedra(self: Self, *args, **kwargs) -> UnstructuredGrid:  # numpydoc ignore=PR01,RT01$/;"	m	class:ImageData
to_tetrahedra	pyvista/core/filters/rectilinear_grid.py	/^    def to_tetrahedra($/;"	m	class:RectilinearGridFilters
to_tetrahedra	pyvista/core/grid.py	/^    def to_tetrahedra(self: Self, *args, **kwargs) -> UnstructuredGrid:  # numpydoc ignore=PR01,RT01$/;"	m	class:ImageData
to_vtk_scientific	tests/plotting/test_charts.py	/^def to_vtk_scientific(val):$/;"	f
todo_include_todos	doc/source/conf.py	/^todo_include_todos = False$/;"	v
toggle	build/lib/pyvista/plotting/charts.py	/^    def toggle(self) -> None:$/;"	m	class:Axis
toggle	build/lib/pyvista/plotting/charts.py	/^    def toggle(self) -> None:$/;"	m	class:_Chart
toggle	build/lib/pyvista/plotting/charts.py	/^    def toggle(self) -> None:$/;"	m	class:_Plot
toggle	pyvista/plotting/charts.py	/^    def toggle(self) -> None:$/;"	m	class:Axis
toggle	pyvista/plotting/charts.py	/^    def toggle(self) -> None:$/;"	m	class:_Chart
toggle	pyvista/plotting/charts.py	/^    def toggle(self) -> None:$/;"	m	class:_Plot
toggle_other_buttons_off	build/lib/pyvista/plotting/widgets.py	/^        def toggle_other_buttons_off(widget):$/;"	f	function:WidgetHelper.add_radio_button_widget
toggle_other_buttons_off	pyvista/plotting/widgets.py	/^        def toggle_other_buttons_off(widget):$/;"	f	function:WidgetHelper.add_radio_button_widget
toggle_vis	examples/03-widgets/checkbox_widget.py	/^def toggle_vis(flag):$/;"	f
tolerance	tests/plotting/test_picking.py	/^        tolerance=0.2,$/;"	v	class:test_point_picking_window.Tracker
top	examples/00-load/create_structured_surface.py	/^top = struct.points.copy()$/;"	v
top	examples/01-filter/compute_normals.py	/^top = mesh.extract_cells(ids)$/;"	v
topo	examples/02-plot/background_image.py	/^topo = examples.download_topo_land()$/;"	v
topo_map	examples/02-plot/topo_map.py	/^topo_map = examples.download_crater_imagery()$/;"	v
topo_map	examples/02-plot/topo_map.py	/^topo_map = topo_map.flip_y()  # flip to align to our dataset$/;"	v
topogenesis	doc/source/make_external_gallery.py	/^    topogenesis=Example($/;"	v
topological	build/lib/pyvista/core/pointset.py	/^        def topological(ind):$/;"	f	function:ExplicitStructuredGrid.neighbors
topological	pyvista/core/pointset.py	/^        def topological(ind):$/;"	f	function:ExplicitStructuredGrid.neighbors
toroidal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def toroidal(self: SuperquadricSource) -> bool:$/;"	m	class:SuperquadricSource
toroidal	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def toroidal(self: SuperquadricSource, toroidal: bool) -> None:$/;"	m	class:SuperquadricSource
toroidal	pyvista/core/utilities/geometric_sources.py	/^    def toroidal(self: SuperquadricSource) -> bool:$/;"	m	class:SuperquadricSource
toroidal	pyvista/core/utilities/geometric_sources.py	/^    def toroidal(self: SuperquadricSource, toroidal: bool) -> None:$/;"	m	class:SuperquadricSource
torus	examples/00-load/create_parametric_geometric_objects.py	/^torus = pv.ParametricTorus()$/;"	v
torus_radius	examples/02-plot/points_gaussian_scale.py	/^torus_radius = 1$/;"	v
total_flow_rate	examples/01-filter/integrate_data.py	/^total_flow_rate = integrated_data['normal_velocity'][0]$/;"	v
total_length	build/lib/pyvista/plotting/axes_actor.py	/^    def total_length(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
total_length	build/lib/pyvista/plotting/axes_actor.py	/^    def total_length(self, length):$/;"	m	class:AxesActor
total_length	pyvista/plotting/axes_actor.py	/^    def total_length(self) -> tuple[float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
total_length	pyvista/plotting/axes_actor.py	/^    def total_length(self, length):$/;"	m	class:AxesActor
total_size	build/lib/pyvista/examples/_dataset_loader.py	/^    def total_size(self) -> str:$/;"	m	class:_BaseFilePropsProtocol
total_size	build/lib/pyvista/examples/_dataset_loader.py	/^    def total_size(self) -> str:$/;"	m	class:_MultiFileDatasetLoader
total_size	build/lib/pyvista/examples/_dataset_loader.py	/^    def total_size(self) -> str:$/;"	m	class:_SingleFile
total_size	pyvista/examples/_dataset_loader.py	/^    def total_size(self) -> str:$/;"	m	class:_BaseFilePropsProtocol
total_size	pyvista/examples/_dataset_loader.py	/^    def total_size(self) -> str:$/;"	m	class:_MultiFileDatasetLoader
total_size	pyvista/examples/_dataset_loader.py	/^    def total_size(self) -> str:$/;"	m	class:_SingleFile
tp	examples/00-load/create_surface_draped.py	/^tp = np.arange(0, z_spacing * nsamples, z_spacing)$/;"	v
tp	examples/00-load/create_surface_draped.py	/^tp = path[:, 2][:, None] - tp$/;"	v
tqdm	build/lib/pyvista/core/utilities/observers.py	/^        from tqdm import tqdm$/;"	i
tqdm	build/lib/pyvista/plotting/plotter.py	/^                from tqdm import tqdm$/;"	i
tqdm	pyvista/core/utilities/observers.py	/^        from tqdm import tqdm$/;"	i
tqdm	pyvista/plotting/plotter.py	/^                from tqdm import tqdm$/;"	i
traceback	build/lib/pyvista/core/utilities/misc.py	/^import traceback$/;"	i
traceback	build/lib/pyvista/core/utilities/observers.py	/^import traceback$/;"	i
traceback	build/lib/pyvista/ext/plot_directive.py	/^import traceback$/;"	i
traceback	build/lib/pyvista/plotting/utilities/algorithms.py	/^import traceback$/;"	i
traceback	pyvista/core/utilities/misc.py	/^import traceback$/;"	i
traceback	pyvista/core/utilities/observers.py	/^import traceback$/;"	i
traceback	pyvista/ext/plot_directive.py	/^import traceback$/;"	i
traceback	pyvista/plotting/utilities/algorithms.py	/^import traceback$/;"	i
track_click_position	build/lib/pyvista/plotting/plotter.py	/^    def track_click_position(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
track_click_position	build/lib/pyvista/plotting/render_window_interactor.py	/^    def track_click_position(self, callback=None, side='right', double=False, viewport=False):$/;"	m	class:RenderWindowInteractor
track_click_position	pyvista/plotting/plotter.py	/^    def track_click_position(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
track_click_position	pyvista/plotting/render_window_interactor.py	/^    def track_click_position(self, callback=None, side='right', double=False, viewport=False):$/;"	m	class:RenderWindowInteractor
track_mouse_position	build/lib/pyvista/plotting/plotter.py	/^    def track_mouse_position(self) -> None:$/;"	m	class:BasePlotter
track_mouse_position	build/lib/pyvista/plotting/render_window_interactor.py	/^    def track_mouse_position(self, callback):$/;"	m	class:RenderWindowInteractor
track_mouse_position	pyvista/plotting/plotter.py	/^    def track_mouse_position(self) -> None:$/;"	m	class:BasePlotter
track_mouse_position	pyvista/plotting/render_window_interactor.py	/^    def track_mouse_position(self, callback):$/;"	m	class:RenderWindowInteractor
trame	build/lib/pyvista/__init__.py	/^    from pyvista import trame as trame$/;"	i
trame	build/lib/pyvista/plotting/themes.py	/^    def trame(self) -> _TrameConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
trame	build/lib/pyvista/plotting/themes.py	/^    def trame(self, config: _TrameConfig):$/;"	m	class:Theme
trame	pyvista/__init__.py	/^    from pyvista import trame as trame$/;"	i
trame	pyvista/plotting/themes.py	/^    def trame(self) -> _TrameConfig:  # numpydoc ignore=RT01$/;"	m	class:Theme
trame	pyvista/plotting/themes.py	/^    def trame(self, config: _TrameConfig):$/;"	m	class:Theme
trame_get_server	build/lib/pyvista/trame/views.py	/^from trame.app import get_server as trame_get_server$/;"	i
trame_get_server	pyvista/trame/views.py	/^from trame.app import get_server as trame_get_server$/;"	i
transform	build/lib/pyvista/core/filters/data_object.py	/^    def transform(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
transform	build/lib/pyvista/plotting/prop3d.py	/^    def transform($/;"	m	class:Prop3D
transform	pyvista/core/filters/data_object.py	/^    def transform(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
transform	pyvista/plotting/prop3d.py	/^    def transform($/;"	m	class:Prop3D
transform	tests/core/test_utilities.py	/^def transform():$/;"	f
transform_matrix	build/lib/pyvista/plotting/lights.py	/^    def transform_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:Light
transform_matrix	build/lib/pyvista/plotting/lights.py	/^    def transform_matrix(self, matrix: TransformLike):$/;"	m	class:Light
transform_matrix	pyvista/plotting/lights.py	/^    def transform_matrix(self):  # numpydoc ignore=RT01$/;"	m	class:Light
transform_matrix	pyvista/plotting/lights.py	/^    def transform_matrix(self, matrix: TransformLike):$/;"	m	class:Light
transform_point	build/lib/pyvista/plotting/axes_assembly.py	/^        def transform_point(point):$/;"	f	function:PlanesAssembly._update_label_positions
transform_point	pyvista/plotting/axes_assembly.py	/^        def transform_point(point):$/;"	f	function:PlanesAssembly._update_label_positions
transform_vectors_sph_to_cart	build/lib/pyvista/core/utilities/__init__.py	/^from .features import transform_vectors_sph_to_cart as transform_vectors_sph_to_cart$/;"	i
transform_vectors_sph_to_cart	build/lib/pyvista/core/utilities/features.py	/^def transform_vectors_sph_to_cart(theta, phi, r, u, v, w):  # numpydoc ignore=RT02$/;"	f
transform_vectors_sph_to_cart	pyvista/core/utilities/__init__.py	/^from .features import transform_vectors_sph_to_cart as transform_vectors_sph_to_cart$/;"	i
transform_vectors_sph_to_cart	pyvista/core/utilities/features.py	/^def transform_vectors_sph_to_cart(theta, phi, r, u, v, w):  # numpydoc ignore=RT02$/;"	f
transformations	build/lib/pyvista/core/utilities/helpers.py	/^from . import transformations$/;"	i
transformations	pyvista/core/utilities/helpers.py	/^from . import transformations$/;"	i
transformations	tests/core/test_utilities.py	/^from pyvista.core.utilities import transformations$/;"	i
transformed_actor	tests/core/test_utilities.py	/^def transformed_actor():$/;"	f
translate	build/lib/pyvista/core/filters/data_object.py	/^    def translate(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
translate	build/lib/pyvista/core/pointset.py	/^    def translate($/;"	m	class:_PointSet
translate	build/lib/pyvista/core/utilities/__init__.py	/^from .geometric_sources import translate as translate$/;"	i
translate	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import translate$/;"	i
translate	build/lib/pyvista/core/utilities/geometric_sources.py	/^def translate($/;"	f
translate	build/lib/pyvista/core/utilities/parametric_objects.py	/^from .geometric_sources import translate$/;"	i
translate	build/lib/pyvista/core/utilities/transform.py	/^    def translate($/;"	m	class:Transform
translate	pyvista/core/filters/data_object.py	/^    def translate(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
translate	pyvista/core/pointset.py	/^    def translate($/;"	m	class:_PointSet
translate	pyvista/core/utilities/__init__.py	/^from .geometric_sources import translate as translate$/;"	i
translate	pyvista/core/utilities/geometric_objects.py	/^from .geometric_sources import translate$/;"	i
translate	pyvista/core/utilities/geometric_sources.py	/^def translate($/;"	f
translate	pyvista/core/utilities/parametric_objects.py	/^from .geometric_sources import translate$/;"	i
translate	pyvista/core/utilities/transform.py	/^    def translate($/;"	m	class:Transform
translate	tests/core/test_geometric_sources.py	/^from pyvista.core.utilities.geometric_objects import translate$/;"	i
translate_transform	tests/core/test_utilities.py	/^def translate_transform():$/;"	f
transparent_background	build/lib/pyvista/plotting/themes.py	/^    def transparent_background(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
transparent_background	build/lib/pyvista/plotting/themes.py	/^    def transparent_background(self, transparent_background: bool):$/;"	m	class:Theme
transparent_background	pyvista/plotting/themes.py	/^    def transparent_background(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Theme
transparent_background	pyvista/plotting/themes.py	/^    def transparent_background(self, transparent_background: bool):$/;"	m	class:Theme
tree	examples/01-filter/distance_between_surfaces.py	/^tree = KDTree(h1.points)$/;"	v
tri	examples/99-advanced/ray_trace_moeller.py	/^tri = pv.PolyData(points, faces)$/;"	v
tri_cylinder	tests/conftest.py	/^def tri_cylinder():$/;"	f
tri_data	tests/core/test_helpers.py	/^        tri_data = pv_data.delaunay_2d()$/;"	v	class:test_wrappers.Foo
triangulate	build/lib/pyvista/core/filters/data_object.py	/^    def triangulate(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
triangulate	build/lib/pyvista/core/filters/poly_data.py	/^    def triangulate(  # type: ignore[override]$/;"	m	class:PolyDataFilters
triangulate	build/lib/pyvista/core/pointset.py	/^    def triangulate(self, *args, **kwargs):$/;"	m	class:PointSet
triangulate	pyvista/core/filters/data_object.py	/^    def triangulate(  # type: ignore[misc]$/;"	m	class:DataObjectFilters
triangulate	pyvista/core/filters/poly_data.py	/^    def triangulate(  # type: ignore[override]$/;"	m	class:PolyDataFilters
triangulate	pyvista/core/pointset.py	/^    def triangulate(self, *args, **kwargs):$/;"	m	class:PointSet
triangulate_algorithm	build/lib/pyvista/plotting/plotter.py	/^from .utilities.algorithms import triangulate_algorithm$/;"	i
triangulate_algorithm	build/lib/pyvista/plotting/utilities/__init__.py	/^from .algorithms import triangulate_algorithm as triangulate_algorithm$/;"	i
triangulate_algorithm	build/lib/pyvista/plotting/utilities/algorithms.py	/^def triangulate_algorithm(inp):$/;"	f
triangulate_algorithm	pyvista/plotting/plotter.py	/^from .utilities.algorithms import triangulate_algorithm$/;"	i
triangulate_algorithm	pyvista/plotting/utilities/__init__.py	/^from .algorithms import triangulate_algorithm as triangulate_algorithm$/;"	i
triangulate_algorithm	pyvista/plotting/utilities/algorithms.py	/^def triangulate_algorithm(inp):$/;"	f
triangulate_contours	build/lib/pyvista/core/filters/poly_data.py	/^    def triangulate_contours(self, display_errors: bool = False, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
triangulate_contours	pyvista/core/filters/poly_data.py	/^    def triangulate_contours(self, display_errors: bool = False, progress_bar: bool = False):$/;"	m	class:PolyDataFilters
trimesh	build/lib/pyvista/core/filters/poly_data.py	/^            import trimesh$/;"	i
trimesh	examples/00-load/create_polydata_strips.py	/^trimesh = mesh.triangulate()$/;"	v
trimesh	examples/00-load/wrap_trimesh.py	/^import trimesh$/;"	i
trimesh	pyvista/core/filters/poly_data.py	/^            import trimesh$/;"	i
trimesh	tests/core/test_helpers.py	/^import trimesh$/;"	i
truncate_length	examples_trame/basic/file_viewer.py	/^            truncate_length=25,$/;"	v
try_callback	build/lib/pyvista/core/utilities/__init__.py	/^from .misc import try_callback as try_callback$/;"	i
try_callback	build/lib/pyvista/core/utilities/misc.py	/^def try_callback(func, *args) -> None:  # noqa: ANN001$/;"	f
try_callback	build/lib/pyvista/plotting/affine_widget.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	build/lib/pyvista/plotting/picking.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	build/lib/pyvista/plotting/render_window_interactor.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	build/lib/pyvista/plotting/renderer.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	build/lib/pyvista/plotting/widgets.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	pyvista/core/utilities/__init__.py	/^from .misc import try_callback as try_callback$/;"	i
try_callback	pyvista/core/utilities/misc.py	/^def try_callback(func, *args) -> None:  # noqa: ANN001$/;"	f
try_callback	pyvista/plotting/affine_widget.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	pyvista/plotting/picking.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	pyvista/plotting/render_window_interactor.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	pyvista/plotting/renderer.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	pyvista/plotting/widgets.py	/^from pyvista.core.utilities.misc import try_callback$/;"	i
try_callback	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import try_callback  # noqa: F401$/;"	i
try_init_object	tests/typing/test_return_type.py	/^def try_init_object(class_, kwargs):$/;"	f
tstart	examples/00-load/create_pointset.py	/^    tstart = time.time()$/;"	v
tstart	examples/00-load/create_pointset.py	/^tstart = time.time()$/;"	v
tube	build/lib/pyvista/core/filters/poly_data.py	/^    def tube($/;"	m	class:PolyDataFilters
tube	examples/00-load/create_spline.py	/^tube = line.tube(radius=0.1)$/;"	v
tube	examples/00-load/create_spline.py	/^tube = polyline.tube(radius=0.1)$/;"	v
tube	examples/00-load/create_spline.py	/^tube = spline.tube(radius=0.1)$/;"	v
tube	examples/00-load/create_spline.py	/^tube = spline.tube(scalars='radius', absolute=True)$/;"	v
tube	pyvista/core/filters/poly_data.py	/^    def tube($/;"	m	class:PolyDataFilters
tube_color	build/lib/pyvista/plotting/themes.py	/^    def tube_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
tube_color	build/lib/pyvista/plotting/themes.py	/^    def tube_color(self, tube_color: ColorLike):$/;"	m	class:_SliderStyleConfig
tube_color	pyvista/plotting/themes.py	/^    def tube_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
tube_color	pyvista/plotting/themes.py	/^    def tube_color(self, tube_color: ColorLike):$/;"	m	class:_SliderStyleConfig
tube_radius	examples/02-plot/points_gaussian_scale.py	/^tube_radius = 0.3$/;"	v
tube_width	build/lib/pyvista/plotting/themes.py	/^    def tube_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
tube_width	build/lib/pyvista/plotting/themes.py	/^    def tube_width(self, tube_width: float):$/;"	m	class:_SliderStyleConfig
tube_width	examples/02-plot/lookup_table.py	/^    tube_width=0.0,$/;"	v
tube_width	examples/02-plot/lookup_table.py	/^    tube_width=0.003,$/;"	v
tube_width	pyvista/plotting/themes.py	/^    def tube_width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_SliderStyleConfig
tube_width	pyvista/plotting/themes.py	/^    def tube_width(self, tube_width: float):$/;"	m	class:_SliderStyleConfig
turn_blue	tests/plotting/test_picking.py	/^    def turn_blue(index, dataset):$/;"	f	function:test_block_picking
two_dimensionality_image	tests/core/test_imagedata_filters.py	/^def two_dimensionality_image():$/;"	f
type	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
type	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
type	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
type	build/lib/pyvista/core/cell.py	/^    def type(self: Self) -> CellType:$/;"	m	class:Cell
type	build/lib/pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
type	build/lib/pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
type	build/lib/pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
type	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
type	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
type	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
type	build/lib/pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
type	build/lib/pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
type	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersExtraction import (  # type: ignore[attr-defined, no-redef]$/;"	i
type	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import (  # type: ignore[attr-defined, no-redef]$/;"	i
type	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import buffer_shared as buffer_shared  # type: ignore[attr-defined]$/;"	i
type	pyvista/core/cell.py	/^    def type(self: Self) -> CellType:$/;"	m	class:Cell
type	pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
type	pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
type	pyvista/plotting/colors.py	/^    from matplotlib import cm as colormaps  # type: ignore[assignment]$/;"	i
type	pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
type	pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
type	pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
type	pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
type	pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
types	tests/core/test_cells.py	/^types = [$/;"	v
u_vec	examples/02-plot/spherical.py	/^u_vec = np.cos(np.radians(xx))  # zonal$/;"	v
ui	build/lib/pyvista/trame/jupyter.py	/^            ui=plotter._id_name,$/;"	v
ui	build/lib/pyvista/trame/ui/base_viewer.py	/^    def ui(self):$/;"	m	class:BaseViewer
ui	build/lib/pyvista/trame/ui/vuetify2.py	/^    def ui($/;"	m	class:Viewer
ui	build/lib/pyvista/trame/ui/vuetify3.py	/^    def ui($/;"	m	class:Viewer
ui	pyvista/trame/jupyter.py	/^            ui=plotter._id_name,$/;"	v
ui	pyvista/trame/ui/base_viewer.py	/^    def ui(self):$/;"	m	class:BaseViewer
ui	pyvista/trame/ui/vuetify2.py	/^    def ui($/;"	m	class:Viewer
ui	pyvista/trame/ui/vuetify3.py	/^    def ui($/;"	m	class:Viewer
ui_controls	build/lib/pyvista/trame/ui/vuetify2.py	/^    def ui_controls(self, mode=None, default_server_rendering=True, v_show=None):$/;"	m	class:Viewer
ui_controls	build/lib/pyvista/trame/ui/vuetify3.py	/^    def ui_controls(self, mode=None, default_server_rendering=True, v_show=None):$/;"	m	class:Viewer
ui_controls	pyvista/trame/ui/vuetify2.py	/^    def ui_controls(self, mode=None, default_server_rendering=True, v_show=None):$/;"	m	class:Viewer
ui_controls	pyvista/trame/ui/vuetify3.py	/^    def ui_controls(self, mode=None, default_server_rendering=True, v_show=None):$/;"	m	class:Viewer
unacceptable	examples/01-filter/mesh_quality.py	/^unacceptable = qual.extract_values(scalars='shape', ranges=info.acceptable_range, invert=True)$/;"	v
unfold_sphere	examples/99-advanced/sphere_eversion.py	/^def unfold_sphere(theta, phi, t, q, eta, lamda):$/;"	f
uniform	tests/conftest.py	/^def uniform():$/;"	f
uniform	tests/test_meshio.py	/^uniform = examples.load_uniform().cast_to_unstructured_grid()$/;"	v
uniform2d	tests/test_meshio.py	/^uniform2d = pv.ImageData(dimensions=(10, 10, 1)).cast_to_unstructured_grid()$/;"	v
uniform_many_scalars	tests/core/test_imagedata_filters.py	/^def uniform_many_scalars(uniform):$/;"	f
uniform_vec	tests/core/test_dataset_filters.py	/^def uniform_vec():$/;"	f
uniformfile	build/lib/pyvista/examples/examples.py	/^uniformfile = str(Path(dir_path) \/ 'uniform.vtk')$/;"	v
uniformfile	pyvista/examples/examples.py	/^uniformfile = str(Path(dir_path) \/ 'uniform.vtk')$/;"	v
unique_cell_types	build/lib/pyvista/examples/_dataset_loader.py	/^    def unique_cell_types($/;"	m	class:_DatasetLoader
unique_cell_types	pyvista/examples/_dataset_loader.py	/^    def unique_cell_types($/;"	m	class:_DatasetLoader
unique_dataset_type	build/lib/pyvista/examples/_dataset_loader.py	/^    def unique_dataset_type($/;"	m	class:_DatasetLoader
unique_dataset_type	pyvista/examples/_dataset_loader.py	/^    def unique_dataset_type($/;"	m	class:_DatasetLoader
unique_extension	build/lib/pyvista/examples/_dataset_loader.py	/^    def unique_extension(self) -> str | tuple[str, ...]:$/;"	m	class:_BaseFilePropsProtocol
unique_extension	pyvista/examples/_dataset_loader.py	/^    def unique_extension(self) -> str | tuple[str, ...]:$/;"	m	class:_BaseFilePropsProtocol
unique_reader_type	build/lib/pyvista/examples/_dataset_loader.py	/^    def unique_reader_type($/;"	m	class:_BaseFilePropsProtocol
unique_reader_type	pyvista/examples/_dataset_loader.py	/^    def unique_reader_type($/;"	m	class:_BaseFilePropsProtocol
unlink_views	build/lib/pyvista/plotting/plotter.py	/^    def unlink_views(self, views=None) -> None:$/;"	m	class:BasePlotter
unlink_views	pyvista/plotting/plotter.py	/^    def unlink_views(self, views=None) -> None:$/;"	m	class:BasePlotter
unreachable	build/lib/pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
unreachable	pyvista/plotting/renderer.py	/^            from pyvista.core.errors import VTKVersionError  # type: ignore[unreachable]$/;"	i
unsteady_pattern	build/lib/pyvista/core/utilities/reader.py	/^    def unsteady_pattern(self) -> bool:$/;"	m	class:CGNSReader
unsteady_pattern	build/lib/pyvista/core/utilities/reader.py	/^    def unsteady_pattern(self, enabled: bool) -> None:$/;"	m	class:CGNSReader
unsteady_pattern	pyvista/core/utilities/reader.py	/^    def unsteady_pattern(self) -> bool:$/;"	m	class:CGNSReader
unsteady_pattern	pyvista/core/utilities/reader.py	/^    def unsteady_pattern(self, enabled: bool) -> None:$/;"	m	class:CGNSReader
untrack_click_position	build/lib/pyvista/plotting/plotter.py	/^    def untrack_click_position(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
untrack_click_position	build/lib/pyvista/plotting/render_window_interactor.py	/^    def untrack_click_position(self, side='right'):$/;"	m	class:RenderWindowInteractor
untrack_click_position	pyvista/plotting/plotter.py	/^    def untrack_click_position(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
untrack_click_position	pyvista/plotting/render_window_interactor.py	/^    def untrack_click_position(self, side='right'):$/;"	m	class:RenderWindowInteractor
untrack_mouse_position	build/lib/pyvista/plotting/plotter.py	/^    def untrack_mouse_position(self) -> None:$/;"	m	class:BasePlotter
untrack_mouse_position	build/lib/pyvista/plotting/render_window_interactor.py	/^    def untrack_mouse_position(self):$/;"	m	class:RenderWindowInteractor
untrack_mouse_position	pyvista/plotting/plotter.py	/^    def untrack_mouse_position(self) -> None:$/;"	m	class:BasePlotter
untrack_mouse_position	pyvista/plotting/render_window_interactor.py	/^    def untrack_mouse_position(self):$/;"	m	class:RenderWindowInteractor
up	build/lib/pyvista/plotting/camera.py	/^    def up(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
up	build/lib/pyvista/plotting/camera.py	/^    def up(self, vector):$/;"	m	class:Camera
up	pyvista/plotting/camera.py	/^    def up(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
up	pyvista/plotting/camera.py	/^    def up(self, vector):$/;"	m	class:Camera
update	build/lib/pyvista/core/datasetattributes.py	/^    def update($/;"	m	class:DataSetAttributes
update	build/lib/pyvista/core/objects.py	/^    def update(self, data) -> None:$/;"	m	class:Table
update	build/lib/pyvista/core/utilities/arrays.py	/^    def update(self: _SerializedDictArray, *args, **kwargs) -> None:$/;"	m	class:_SerializedDictArray
update	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def update(self: AxesGeometrySource) -> None:$/;"	m	class:AxesGeometrySource
update	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def update(self: CubeFacesSource) -> None:$/;"	m	class:CubeFacesSource
update	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def update(self: OrthogonalPlanesSource) -> None:$/;"	m	class:OrthogonalPlanesSource
update	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def update(self: Text3DSource) -> None:$/;"	m	class:Text3DSource
update	build/lib/pyvista/plotting/charts.py	/^    def update(self, data) -> None:$/;"	m	class:BoxPlot
update	build/lib/pyvista/plotting/charts.py	/^    def update(self, data) -> None:$/;"	m	class:PiePlot
update	build/lib/pyvista/plotting/charts.py	/^    def update(self, x, y) -> None:$/;"	m	class:BarPlot
update	build/lib/pyvista/plotting/charts.py	/^    def update(self, x, y) -> None:$/;"	m	class:LinePlot2D
update	build/lib/pyvista/plotting/charts.py	/^    def update(self, x, y) -> None:$/;"	m	class:ScatterPlot2D
update	build/lib/pyvista/plotting/charts.py	/^    def update(self, x, y1, y2=None) -> None:$/;"	m	class:AreaPlot
update	build/lib/pyvista/plotting/charts.py	/^    def update(self, x, ys) -> None:$/;"	m	class:StackPlot
update	build/lib/pyvista/plotting/mapper.py	/^    def update(self) -> None:$/;"	m	class:_BaseMapper
update	build/lib/pyvista/plotting/plotter.py	/^    def update(self, stime=1, force_redraw=True) -> None:$/;"	m	class:BasePlotter
update	build/lib/pyvista/trame/ui/base_viewer.py	/^    def update(self, **kwargs):$/;"	m	class:BaseViewer
update	examples/03-widgets/multi_slider_widget.py	/^    def update(self):$/;"	m	class:MyCustomRoutine
update	pyvista/core/datasetattributes.py	/^    def update($/;"	m	class:DataSetAttributes
update	pyvista/core/objects.py	/^    def update(self, data) -> None:$/;"	m	class:Table
update	pyvista/core/utilities/arrays.py	/^    def update(self: _SerializedDictArray, *args, **kwargs) -> None:$/;"	m	class:_SerializedDictArray
update	pyvista/core/utilities/geometric_sources.py	/^    def update(self: AxesGeometrySource) -> None:$/;"	m	class:AxesGeometrySource
update	pyvista/core/utilities/geometric_sources.py	/^    def update(self: CubeFacesSource) -> None:$/;"	m	class:CubeFacesSource
update	pyvista/core/utilities/geometric_sources.py	/^    def update(self: OrthogonalPlanesSource) -> None:$/;"	m	class:OrthogonalPlanesSource
update	pyvista/core/utilities/geometric_sources.py	/^    def update(self: Text3DSource) -> None:$/;"	m	class:Text3DSource
update	pyvista/plotting/charts.py	/^    def update(self, data) -> None:$/;"	m	class:BoxPlot
update	pyvista/plotting/charts.py	/^    def update(self, data) -> None:$/;"	m	class:PiePlot
update	pyvista/plotting/charts.py	/^    def update(self, x, y) -> None:$/;"	m	class:BarPlot
update	pyvista/plotting/charts.py	/^    def update(self, x, y) -> None:$/;"	m	class:LinePlot2D
update	pyvista/plotting/charts.py	/^    def update(self, x, y) -> None:$/;"	m	class:ScatterPlot2D
update	pyvista/plotting/charts.py	/^    def update(self, x, y1, y2=None) -> None:$/;"	m	class:AreaPlot
update	pyvista/plotting/charts.py	/^    def update(self, x, ys) -> None:$/;"	m	class:StackPlot
update	pyvista/plotting/mapper.py	/^    def update(self) -> None:$/;"	m	class:_BaseMapper
update	pyvista/plotting/plotter.py	/^    def update(self, stime=1, force_redraw=True) -> None:$/;"	m	class:BasePlotter
update	pyvista/trame/ui/base_viewer.py	/^    def update(self, **kwargs):$/;"	m	class:BaseViewer
update_axis	build/lib/pyvista/plotting/renderer.py	/^            def update_axis(ax) -> None:$/;"	f	function:Renderer.compute_bounds._update_bounds
update_axis	pyvista/plotting/renderer.py	/^            def update_axis(ax) -> None:$/;"	f	function:Renderer.compute_bounds._update_bounds
update_bounds	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def update_bounds(self, bounds):$/;"	m	class:CubeAxesActor
update_bounds	pyvista/plotting/cube_axes_actor.py	/^    def update_bounds(self, bounds):$/;"	m	class:CubeAxesActor
update_bounds_axes	build/lib/pyvista/plotting/plotter.py	/^    def update_bounds_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
update_bounds_axes	build/lib/pyvista/plotting/renderer.py	/^    def update_bounds_axes(self) -> None:$/;"	m	class:Renderer
update_bounds_axes	pyvista/plotting/plotter.py	/^    def update_bounds_axes(self, *args, **kwargs) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
update_bounds_axes	pyvista/plotting/renderer.py	/^    def update_bounds_axes(self) -> None:$/;"	m	class:Renderer
update_camera	build/lib/pyvista/trame/ui/base_viewer.py	/^    def update_camera(self, **kwargs):$/;"	m	class:BaseViewer
update_camera	build/lib/pyvista/trame/views.py	/^    def update_camera(self):$/;"	m	class:_BasePyVistaView
update_camera	pyvista/trame/ui/base_viewer.py	/^    def update_camera(self, **kwargs):$/;"	m	class:BaseViewer
update_camera	pyvista/trame/views.py	/^    def update_camera(self):$/;"	m	class:_BasePyVistaView
update_cmap	examples_trame/advanced/custom_ui.py	/^def update_cmap(cmap='viridis', **kwargs):$/;"	f
update_cmap	examples_trame/basic/PyVistaRemoteLocalView.py	/^def update_cmap(cmap='viridis', **kwargs):$/;"	f
update_cmap	examples_trame/basic/PyVistaRemoteView.py	/^def update_cmap(cmap='viridis', **kwargs):$/;"	f
update_cmap	examples_trame/basic/ui_template.py	/^def update_cmap(cmap='viridis', **kwargs):$/;"	f
update_contour	examples_trame/advanced/contour.py	/^def update_contour(contour_value, **kwargs):$/;"	f
update_contour	examples_trame/basic/algorithm.py	/^def update_contour(resolution, **kwargs):$/;"	f
update_coordinates	build/lib/pyvista/plotting/plotter.py	/^    def update_coordinates(self, points, mesh=None, render=True) -> None:$/;"	m	class:BasePlotter
update_coordinates	pyvista/plotting/plotter.py	/^    def update_coordinates(self, points, mesh=None, render=True) -> None:$/;"	m	class:BasePlotter
update_image	build/lib/pyvista/trame/ui/base_viewer.py	/^    def update_image(self, **kwargs):$/;"	m	class:BaseViewer
update_image	build/lib/pyvista/trame/views.py	/^    def update_image(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PyVistaRemoteView
update_image	build/lib/pyvista/trame/views.py	/^    def update_image(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:PyVistaLocalView
update_image	pyvista/trame/ui/base_viewer.py	/^    def update_image(self, **kwargs):$/;"	m	class:BaseViewer
update_image	pyvista/trame/views.py	/^    def update_image(self, *args, **kwargs):  # numpydoc ignore=RT01$/;"	m	class:PyVistaRemoteView
update_image	pyvista/trame/views.py	/^    def update_image(self, *args, **kwargs):  # pragma: no cover$/;"	m	class:PyVistaLocalView
update_n_sides	examples/99-advanced/plotting_algorithms.py	/^def update_n_sides(value):$/;"	f
update_resolution	examples/99-advanced/customization_trame_toolbar.py	/^def update_resolution(resolution, **kwargs):$/;"	f
update_resolution	examples/99-advanced/plotting_algorithms.py	/^def update_resolution(value):$/;"	f
update_resolution	tests/plotting/jupyter/test_trame.py	/^    def update_resolution(resolution, **kwargs):$/;"	f	function:test_trame_custom_menu_items
update_scalar_bar_range	build/lib/pyvista/plotting/plotter.py	/^    def update_scalar_bar_range(self, clim, name=None) -> None:$/;"	m	class:BasePlotter
update_scalar_bar_range	pyvista/plotting/plotter.py	/^    def update_scalar_bar_range(self, clim, name=None) -> None:$/;"	m	class:BasePlotter
update_scalars	build/lib/pyvista/plotting/plotter.py	/^    def update_scalars(self, scalars, mesh=None, render=True) -> None:$/;"	m	class:BasePlotter
update_scalars	pyvista/plotting/plotter.py	/^    def update_scalars(self, scalars, mesh=None, render=True) -> None:$/;"	m	class:BasePlotter
update_style	build/lib/pyvista/plotting/render_window_interactor.py	/^    def update_style(self):$/;"	m	class:RenderWindowInteractor
update_style	pyvista/plotting/render_window_interactor.py	/^    def update_style(self):$/;"	m	class:RenderWindowInteractor
update_surface	examples/03-widgets/sphere_widget.py	/^def update_surface(point, i):$/;"	f
update_time	examples/02-plot/chart_overlays.py	/^def update_time(time):$/;"	f
uranus	examples/99-advanced/planets.py	/^uranus = examples.planets.load_uranus(radius=25559.0)$/;"	v
uranus_texture	examples/99-advanced/planets.py	/^uranus_texture = examples.planets.download_uranus_surface(texture=True)$/;"	v
use_2d_mode	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def use_2d_mode(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
use_2d_mode	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def use_2d_mode(self, value: bool):$/;"	m	class:CubeAxesActor
use_2d_mode	pyvista/plotting/cube_axes_actor.py	/^    def use_2d_mode(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
use_2d_mode	pyvista/plotting/cube_axes_actor.py	/^    def use_2d_mode(self, value: bool):$/;"	m	class:CubeAxesActor
use_bounds	build/lib/pyvista/plotting/actor.py	/^    def use_bounds(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
use_bounds	build/lib/pyvista/plotting/actor.py	/^    def use_bounds(self, value: bool) -> None:$/;"	m	class:Actor
use_bounds	pyvista/plotting/actor.py	/^    def use_bounds(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
use_bounds	pyvista/plotting/actor.py	/^    def use_bounds(self, value: bool) -> None:$/;"	m	class:Actor
use_circular_splat	build/lib/pyvista/plotting/mapper.py	/^    def use_circular_splat(self, opacity: float = 1.0) -> None:$/;"	m	class:PointGaussianMapper
use_circular_splat	pyvista/plotting/mapper.py	/^    def use_circular_splat(self, opacity: float = 1.0) -> None:$/;"	m	class:PointGaussianMapper
use_default_splat	build/lib/pyvista/plotting/mapper.py	/^    def use_default_splat(self) -> None:$/;"	m	class:PointGaussianMapper
use_default_splat	pyvista/plotting/mapper.py	/^    def use_default_splat(self) -> None:$/;"	m	class:PointGaussianMapper
use_plugin	tests/typing/mypy_plugin/test_plugin.py	/^        use_plugin=False,$/;"	v
use_plugin	tests/typing/mypy_plugin/test_plugin.py	/^        use_plugin=True,$/;"	v
use_strict_n_faces	build/lib/pyvista/core/pointset.py	/^    def use_strict_n_faces(mode: bool) -> None:$/;"	m	class:PolyData
use_strict_n_faces	pyvista/core/pointset.py	/^    def use_strict_n_faces(mode: bool) -> None:$/;"	m	class:PolyData
use_transparency	examples/02-plot/opacity.py	/^    use_transparency=True,$/;"	v
user_dict	build/lib/pyvista/core/dataobject.py	/^    def user_dict($/;"	m	class:DataObject
user_dict	build/lib/pyvista/core/dataobject.py	/^    def user_dict(self: Self) -> _SerializedDictArray:$/;"	m	class:DataObject
user_dict	pyvista/core/dataobject.py	/^    def user_dict($/;"	m	class:DataObject
user_dict	pyvista/core/dataobject.py	/^    def user_dict(self: Self) -> _SerializedDictArray:$/;"	m	class:DataObject
user_matrix	build/lib/pyvista/plotting/prop3d.py	/^    def user_matrix(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
user_matrix	build/lib/pyvista/plotting/prop3d.py	/^    def user_matrix(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
user_matrix	build/lib/pyvista/plotting/prop3d.py	/^    def user_matrix(self, matrix: TransformLike) -> None:$/;"	m	class:_Prop3DMixin
user_matrix	build/lib/pyvista/plotting/prop3d.py	/^    def user_matrix(self, value: TransformLike) -> None:$/;"	m	class:Prop3D
user_matrix	pyvista/plotting/prop3d.py	/^    def user_matrix(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:Prop3D
user_matrix	pyvista/plotting/prop3d.py	/^    def user_matrix(self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:_Prop3DMixin
user_matrix	pyvista/plotting/prop3d.py	/^    def user_matrix(self, matrix: TransformLike) -> None:$/;"	m	class:_Prop3DMixin
user_matrix	pyvista/plotting/prop3d.py	/^    def user_matrix(self, value: TransformLike) -> None:$/;"	m	class:Prop3D
user_matrix	tests/plotting/test_plotting.py	/^    user_matrix=dict(user_matrix=USER_MATRIX),$/;"	v
uses_egl	build/lib/pyvista/plotting/plotter.py	/^from .utilities.gl_checks import uses_egl$/;"	i
uses_egl	build/lib/pyvista/plotting/renderer.py	/^from .utilities.gl_checks import uses_egl$/;"	i
uses_egl	build/lib/pyvista/plotting/utilities/__init__.py	/^from .gl_checks import uses_egl as uses_egl$/;"	i
uses_egl	build/lib/pyvista/plotting/utilities/gl_checks.py	/^def uses_egl() -> bool:$/;"	f
uses_egl	pyvista/plotting/plotter.py	/^from .utilities.gl_checks import uses_egl$/;"	i
uses_egl	pyvista/plotting/renderer.py	/^from .utilities.gl_checks import uses_egl$/;"	i
uses_egl	pyvista/plotting/utilities/__init__.py	/^from .gl_checks import uses_egl as uses_egl$/;"	i
uses_egl	pyvista/plotting/utilities/gl_checks.py	/^def uses_egl() -> bool:$/;"	f
uses_egl	tests/conftest.py	/^from pyvista.plotting.utilities.gl_checks import uses_egl$/;"	i
using_mesa	tests/plotting/test_plotting.py	/^def using_mesa():$/;"	f
util	build/lib/pyvista/core/utilities/observers.py	/^import importlib.util$/;"	i
util	build/lib/pyvista/examples/downloads.py	/^import importlib.util$/;"	i
util	build/lib/pyvista/jupyter/__init__.py	/^import importlib.util$/;"	i
util	build/lib/pyvista/typing/mypy_plugin.py	/^import importlib.util$/;"	i
util	doc/source/conf.py	/^import importlib.util$/;"	i
util	pyvista/core/utilities/observers.py	/^import importlib.util$/;"	i
util	pyvista/examples/downloads.py	/^import importlib.util$/;"	i
util	pyvista/jupyter/__init__.py	/^import importlib.util$/;"	i
util	pyvista/typing/mypy_plugin.py	/^import importlib.util$/;"	i
util	tests/plotting/jupyter/test_static.py	/^import importlib.util$/;"	i
util	tests/plotting/test_colors.py	/^import importlib.util$/;"	i
util	tests/plotting/test_plotting_utilities.py	/^import importlib.util$/;"	i
utilities	build/lib/pyvista/__init__.py	/^    from pyvista import utilities as utilities$/;"	i
utilities	pyvista/__init__.py	/^    from pyvista import utilities as utilities$/;"	i
utilities	tests/namespace/test_utilities_namespace.py	/^        import pyvista.utilities as utilities  # noqa: PLR0402$/;"	i
uuid	build/lib/pyvista/plotting/plotter.py	/^import uuid$/;"	i
uuid	pyvista/plotting/plotter.py	/^import uuid$/;"	i
v	examples/02-plot/chart_overlays.py	/^v = np.cos(t)$/;"	v
v_chart	examples/02-plot/chart_overlays.py	/^v_chart = pv.Chart2D($/;"	v
v_grid	build/lib/pyvista/demos/logo.py	/^    v_grid = pyvista.voxelize(mesh_letters['V'], density=0.08)$/;"	v
v_grid	pyvista/demos/logo.py	/^    v_grid = pyvista.voxelize(mesh_letters['V'], density=0.08)$/;"	v
v_grid_atom	build/lib/pyvista/demos/logo.py	/^    v_grid_atom = atomize(v_grid)$/;"	v
v_grid_atom	pyvista/demos/logo.py	/^    v_grid_atom = atomize(v_grid)$/;"	v
v_grid_atom_surf	build/lib/pyvista/demos/logo.py	/^    v_grid_atom_surf = v_grid_atom.extract_surface()$/;"	v
v_grid_atom_surf	pyvista/demos/logo.py	/^    v_grid_atom_surf = v_grid_atom.extract_surface()$/;"	v
v_line	examples/02-plot/chart_overlays.py	/^v_line = v_chart.line(t[:1], v[:1])$/;"	v
v_model	examples_trame/basic/file_viewer.py	/^            v_model=('file_exchange', None),$/;"	v
v_vec	examples/02-plot/spherical.py	/^v_vec = np.sin(np.radians(yy))  # meridional$/;"	v
valid_array_len	build/lib/pyvista/core/datasetattributes.py	/^    def valid_array_len(self: Self) -> int | None:$/;"	m	class:DataSetAttributes
valid_array_len	pyvista/core/datasetattributes.py	/^    def valid_array_len(self: Self) -> int | None:$/;"	m	class:DataSetAttributes
validate_array	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_array as validate_array$/;"	i
validate_array	build/lib/pyvista/core/_validation/validate.py	/^def validate_array($/;"	f
validate_array	pyvista/core/_validation/__init__.py	/^from .validate import validate_array as validate_array$/;"	i
validate_array	pyvista/core/_validation/validate.py	/^def validate_array($/;"	f
validate_array	tests/core/test_validation.py	/^from pyvista.core._validation import validate_array$/;"	i
validate_array3	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_array3 as validate_array3$/;"	i
validate_array3	build/lib/pyvista/core/_validation/validate.py	/^def validate_array3($/;"	f
validate_array3	pyvista/core/_validation/__init__.py	/^from .validate import validate_array3 as validate_array3$/;"	i
validate_array3	pyvista/core/_validation/validate.py	/^def validate_array3($/;"	f
validate_array3	tests/core/test_validation.py	/^from pyvista.core._validation import validate_array3$/;"	i
validate_arrayN	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_arrayN as validate_arrayN$/;"	i
validate_arrayN	build/lib/pyvista/core/_validation/validate.py	/^def validate_arrayN(arr: float | VectorLike[float], \/, *, reshape: bool = True, **kwargs):$/;"	f
validate_arrayN	pyvista/core/_validation/__init__.py	/^from .validate import validate_arrayN as validate_arrayN$/;"	i
validate_arrayN	pyvista/core/_validation/validate.py	/^def validate_arrayN(arr: float | VectorLike[float], \/, *, reshape: bool = True, **kwargs):$/;"	f
validate_arrayN	tests/core/test_validation.py	/^from pyvista.core._validation import validate_arrayN$/;"	i
validate_arrayN_unsigned	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_arrayN_unsigned as validate_arrayN_unsigned$/;"	i
validate_arrayN_unsigned	build/lib/pyvista/core/_validation/validate.py	/^def validate_arrayN_unsigned($/;"	f
validate_arrayN_unsigned	pyvista/core/_validation/__init__.py	/^from .validate import validate_arrayN_unsigned as validate_arrayN_unsigned$/;"	i
validate_arrayN_unsigned	pyvista/core/_validation/validate.py	/^def validate_arrayN_unsigned($/;"	f
validate_arrayN_unsigned	tests/core/test_validation.py	/^from pyvista.core._validation import validate_arrayN_unsigned$/;"	i
validate_arrayNx3	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_arrayNx3 as validate_arrayNx3$/;"	i
validate_arrayNx3	build/lib/pyvista/core/_validation/validate.py	/^def validate_arrayNx3($/;"	f
validate_arrayNx3	pyvista/core/_validation/__init__.py	/^from .validate import validate_arrayNx3 as validate_arrayNx3$/;"	i
validate_arrayNx3	pyvista/core/_validation/validate.py	/^def validate_arrayNx3($/;"	f
validate_arrayNx3	tests/core/test_validation.py	/^from pyvista.core._validation import validate_arrayNx3$/;"	i
validate_axes	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_axes as validate_axes$/;"	i
validate_axes	build/lib/pyvista/core/_validation/validate.py	/^def validate_axes($/;"	f
validate_axes	pyvista/core/_validation/__init__.py	/^from .validate import validate_axes as validate_axes$/;"	i
validate_axes	pyvista/core/_validation/validate.py	/^def validate_axes($/;"	f
validate_axes	tests/core/test_validation.py	/^from pyvista.core._validation import validate_axes$/;"	i
validate_data_range	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_data_range as validate_data_range$/;"	i
validate_data_range	build/lib/pyvista/core/_validation/validate.py	/^def validate_data_range(rng: VectorLike[float], \/, **kwargs):$/;"	f
validate_data_range	pyvista/core/_validation/__init__.py	/^from .validate import validate_data_range as validate_data_range$/;"	i
validate_data_range	pyvista/core/_validation/validate.py	/^def validate_data_range(rng: VectorLike[float], \/, **kwargs):$/;"	f
validate_data_range	tests/core/test_validation.py	/^from pyvista.core._validation import validate_data_range$/;"	i
validate_dimensionality	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_dimensionality as validate_dimensionality$/;"	i
validate_dimensionality	build/lib/pyvista/core/_validation/validate.py	/^def validate_dimensionality($/;"	f
validate_dimensionality	pyvista/core/_validation/__init__.py	/^from .validate import validate_dimensionality as validate_dimensionality$/;"	i
validate_dimensionality	pyvista/core/_validation/validate.py	/^def validate_dimensionality($/;"	f
validate_dimensionality	tests/core/test_validation.py	/^from pyvista.core._validation import validate_dimensionality$/;"	i
validate_number	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_number as validate_number$/;"	i
validate_number	build/lib/pyvista/core/_validation/validate.py	/^def validate_number(num: float, \/, *, reshape: bool = True, **kwargs):$/;"	f
validate_number	pyvista/core/_validation/__init__.py	/^from .validate import validate_number as validate_number$/;"	i
validate_number	pyvista/core/_validation/validate.py	/^def validate_number(num: float, \/, *, reshape: bool = True, **kwargs):$/;"	f
validate_number	tests/core/test_validation.py	/^from pyvista.core._validation import validate_number$/;"	i
validate_rotation	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_rotation as validate_rotation$/;"	i
validate_rotation	build/lib/pyvista/core/_validation/validate.py	/^def validate_rotation($/;"	f
validate_rotation	pyvista/core/_validation/__init__.py	/^from .validate import validate_rotation as validate_rotation$/;"	i
validate_rotation	pyvista/core/_validation/validate.py	/^def validate_rotation($/;"	f
validate_rotation	tests/core/test_validation.py	/^from pyvista.core._validation import validate_rotation$/;"	i
validate_transform3x3	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_transform3x3 as validate_transform3x3$/;"	i
validate_transform3x3	build/lib/pyvista/core/_validation/validate.py	/^def validate_transform3x3($/;"	f
validate_transform3x3	pyvista/core/_validation/__init__.py	/^from .validate import validate_transform3x3 as validate_transform3x3$/;"	i
validate_transform3x3	pyvista/core/_validation/validate.py	/^def validate_transform3x3($/;"	f
validate_transform3x3	tests/core/test_validation.py	/^from pyvista.core._validation import validate_transform3x3$/;"	i
validate_transform4x4	build/lib/pyvista/core/_validation/__init__.py	/^from .validate import validate_transform4x4 as validate_transform4x4$/;"	i
validate_transform4x4	build/lib/pyvista/core/_validation/validate.py	/^def validate_transform4x4($/;"	f
validate_transform4x4	pyvista/core/_validation/__init__.py	/^from .validate import validate_transform4x4 as validate_transform4x4$/;"	i
validate_transform4x4	pyvista/core/_validation/validate.py	/^def validate_transform4x4($/;"	f
validate_transform4x4	tests/core/test_validation.py	/^from pyvista.core._validation import validate_transform4x4$/;"	i
valley_mesh	examples/01-filter/connectivity.py	/^valley_mesh = mesh.connectivity('closest', peak_point, scalar_range=valley_range)$/;"	v
valley_range	examples/01-filter/connectivity.py	/^valley_range = [data_min, -0.2]  # Valley if curvature < -0.2$/;"	v
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_QUAD,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_QUADRATIC_WEDGE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_TRIANGLE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_CONVEX_POINT_SET,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_CUBIC_LINE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_EMPTY_CELL,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_HEXAGONAL_PRISM,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_LINE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_PENTAGONAL_PRISM,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_PIXEL,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_POLYGON,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_POLYHEDRON,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_POLY_LINE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_POLY_VERTEX,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_PYRAMID,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUAD,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_EDGE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_LINEAR_QUAD,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_LINEAR_WEDGE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_POLYGON,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_PYRAMID,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_QUAD,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_TETRA,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_TRIANGLE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_WEDGE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_TETRA,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIANGLE,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIANGLE_STRIP,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIQUADRATIC_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIQUADRATIC_PYRAMID,$/;"	v
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_VERTEX,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_VOXEL,$/;"	v	class:_CellTypeTuple
value	build/lib/pyvista/core/celltype.py	/^        value=_vtk.VTK_WEDGE,$/;"	v	class:_CellTypeTuple
value	examples/02-plot/lookup_table.py	/^    value=lut.alpha_range[0],$/;"	v
value	examples/02-plot/lookup_table.py	/^    value=lut.alpha_range[1],$/;"	v
value	examples/03-widgets/multi_slider_widget.py	/^    value=0.5,$/;"	v
value	examples/03-widgets/multi_slider_widget.py	/^    value=30,$/;"	v
value	examples/03-widgets/multi_slider_widget.py	/^    value=30,$/;"	v	class:MyCustomRoutine
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_QUAD,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_QUADRATIC_WEDGE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_BIQUADRATIC_TRIANGLE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_CONVEX_POINT_SET,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_CUBIC_LINE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_EMPTY_CELL,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_HEXAGONAL_PRISM,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_LINE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_PENTAGONAL_PRISM,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_PIXEL,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_POLYGON,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_POLYHEDRON,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_POLY_LINE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_POLY_VERTEX,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_PYRAMID,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUAD,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_EDGE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_LINEAR_QUAD,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_LINEAR_WEDGE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_POLYGON,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_PYRAMID,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_QUAD,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_TETRA,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_TRIANGLE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_QUADRATIC_WEDGE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_TETRA,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIANGLE,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIANGLE_STRIP,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIQUADRATIC_HEXAHEDRON,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_TRIQUADRATIC_PYRAMID,$/;"	v
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_VERTEX,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_VOXEL,$/;"	v	class:_CellTypeTuple
value	pyvista/core/celltype.py	/^        value=_vtk.VTK_WEDGE,$/;"	v	class:_CellTypeTuple
value_range	build/lib/pyvista/plotting/lookup_table.py	/^    def value_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
value_range	build/lib/pyvista/plotting/lookup_table.py	/^    def value_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
value_range	pyvista/plotting/lookup_table.py	/^    def value_range(self) -> tuple[float, float] | None:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
value_range	pyvista/plotting/lookup_table.py	/^    def value_range(self, value: tuple[float, float]):$/;"	m	class:LookupTable
values	build/lib/pyvista/core/datasetattributes.py	/^    def values(self: Self) -> list[pyvista_ndarray]:$/;"	m	class:DataSetAttributes
values	build/lib/pyvista/core/objects.py	/^    def values(self):$/;"	m	class:Table
values	build/lib/pyvista/plotting/lookup_table.py	/^    def values(self) -> lookup_table_ndarray:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
values	build/lib/pyvista/plotting/lookup_table.py	/^    def values(self, new_values):$/;"	m	class:LookupTable
values	build/lib/pyvista/plotting/scalar_bars.py	/^    def values(self):  # numpydoc ignore=RT01$/;"	m	class:ScalarBars
values	examples/00-load/create_uniform_grid.py	/^values = np.linspace(0, 10, 1000).reshape((20, 5, 10))$/;"	v
values	examples/01-filter/flying_edges.py	/^values = barth_sextic(x, y, z)$/;"	v
values	examples/01-filter/flying_edges.py	/^values = spider_cage(x, y, z)$/;"	v
values	examples/01-filter/glyphs_table.py	/^values = np.arange(N)  # values for scalars to look up glyphs by$/;"	v
values	examples/02-plot/isovalue.py	/^values = np.linspace(5, 150, num=25)$/;"	v
values	pyvista/core/datasetattributes.py	/^    def values(self: Self) -> list[pyvista_ndarray]:$/;"	m	class:DataSetAttributes
values	pyvista/core/objects.py	/^    def values(self):$/;"	m	class:Table
values	pyvista/plotting/lookup_table.py	/^    def values(self) -> lookup_table_ndarray:  # numpydoc ignore=RT01$/;"	m	class:LookupTable
values	pyvista/plotting/lookup_table.py	/^    def values(self, new_values):$/;"	m	class:LookupTable
values	pyvista/plotting/scalar_bars.py	/^    def values(self):  # numpydoc ignore=RT01$/;"	m	class:ScalarBars
values	tests/core/test_dataset_filters.py	/^        values=0,$/;"	v	class:ComponentModeTestCase
values	tests/core/test_dataset_filters.py	/^        values=1,$/;"	v	class:ComponentModeTestCase
values	tests/core/test_dataset_filters.py	/^        values=BLACK,$/;"	v	class:ComponentModeTestCase
values	tests/core/test_dataset_filters.py	/^        values=[WHITE, RED],$/;"	v	class:ComponentModeTestCase
values	tests/core/test_utilities.py	/^values = (0.1, 0.2, 0.3)$/;"	v
values_component_dict	tests/core/test_dataset_filters.py	/^values_component_dict = ($/;"	v
values_dict_ranges_dict	tests/core/test_dataset_filters.py	/^values_dict_ranges_dict = dict(values=dict(val=0), ranges={(0, 0): 'rng'}), ['val', 'rng']$/;"	v
values_dict_ranges_nodict	tests/core/test_dataset_filters.py	/^values_dict_ranges_nodict = dict(values={0: 'val'}, ranges=[0, 0]), ['val', 'Block-01']$/;"	v
values_nodict_ranges_dict	tests/core/test_dataset_filters.py	/^values_nodict_ranges_dict = dict(values=0, ranges=dict(rng=[0, 0])), ['Block-00', 'rng']$/;"	v
variable	tests/core/test_reader.py	/^    reader.add_function(reader.ENTROPY)  # add ENTROPY by class variable$/;"	c	function:test_multiblockplot3dreader
variable	tests/core/test_reader.py	/^    reader.add_function(reader.KINETIC_ENERGY)  # add by class variable (alias to enum value)$/;"	c	function:test_multiblockplot3dreader
variable	tests/core/test_reader.py	/^    reader.remove_function(reader.ENTROPY)  # remove by class variable$/;"	c	function:test_multiblockplot3dreader
variable_dimensionality_image	tests/core/test_imagedata_filters.py	/^def variable_dimensionality_image(dimensions):$/;"	f
vec	examples/01-filter/distance_between_surfaces.py	/^    vec = h0n['Normals'][i] * h0n.length$/;"	v
vec	examples/01-filter/slicing.py	/^vec = np.array([1.0, 2.0, 1.0])$/;"	v
vector	examples/99-advanced/warp_by_vector_eigenmodes.py	/^    vector = f'eigenmode_{current_index:02}'$/;"	v
vector_3d	build/lib/pyvista/core/utilities/reader.py	/^    def vector_3d(self) -> bool:$/;"	m	class:CGNSReader
vector_3d	build/lib/pyvista/core/utilities/reader.py	/^    def vector_3d(self, enabled: bool) -> None:$/;"	m	class:CGNSReader
vector_3d	pyvista/core/utilities/reader.py	/^    def vector_3d(self) -> bool:$/;"	m	class:CGNSReader
vector_3d	pyvista/core/utilities/reader.py	/^    def vector_3d(self, enabled: bool) -> None:$/;"	m	class:CGNSReader
vector_mode	tests/core/test_dataset_filters.py	/^    def vector_mode(self):$/;"	m	class:InterrogateVTKGlyph3D
vector_poly_data	build/lib/pyvista/core/utilities/__init__.py	/^from .points import vector_poly_data as vector_poly_data$/;"	i
vector_poly_data	build/lib/pyvista/core/utilities/points.py	/^def vector_poly_data($/;"	f
vector_poly_data	pyvista/core/utilities/__init__.py	/^from .points import vector_poly_data as vector_poly_data$/;"	i
vector_poly_data	pyvista/core/utilities/points.py	/^def vector_poly_data($/;"	f
vector_poly_data	tests/core/test_utilities.py	/^from pyvista.core.utilities import vector_poly_data$/;"	i
vectors	examples/00-load/create_point_cloud.py	/^vectors = compute_vectors(point_cloud)$/;"	v
vectors	examples/01-filter/glyphs.py	/^vectors = np.vstack($/;"	v
vectors	examples/01-filter/streamlines.py	/^vectors = np.empty((mesh.n_points, 3))$/;"	v
vectors	examples/02-plot/spherical.py	/^vectors = np.stack($/;"	v
vectors	examples/99-advanced/magnetic_fields.py	/^    vectors='B',$/;"	v
vectors	examples/99-advanced/openfoam_example.py	/^    vectors='U',$/;"	v
vectors	examples/99-advanced/openfoam_tubes.py	/^    vectors='U',$/;"	v
vel_dargs	examples/99-advanced/antarctica_compare.py	/^vel_dargs = dict(scalars='magnitude', clim=[1e-3, 1e4], cmap='Blues', log_scale=True)$/;"	v
vendor	build/lib/pyvista/report.py	/^    def vendor(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
vendor	pyvista/report.py	/^    def vendor(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
venus	examples/99-advanced/planets.py	/^venus = examples.planets.load_venus()$/;"	v
venus	examples/99-advanced/planets.py	/^venus = examples.planets.load_venus(radius=6052.0)$/;"	v
venus_texture	examples/99-advanced/planets.py	/^venus_texture = examples.planets.download_venus_surface(texture=True)$/;"	v
verify_image_cache_wrapper	tests/plotting/test_plotting.py	/^def verify_image_cache_wrapper(verify_image_cache):$/;"	f
version	build/lib/pyvista/report.py	/^    def version(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
version	doc/source/conf.py	/^version = pyvista.__version__$/;"	v
version	pyvista/report.py	/^    def version(self):  # numpydoc ignore=RT01$/;"	m	class:GPUInfo
version	tests/plotting/tinypages/conf.py	/^version = '0.1'$/;"	v
version_info	build/lib/pyvista/__init__.py	/^from pyvista._version import version_info as version_info$/;"	i
version_info	build/lib/pyvista/_version.py	/^version_info = 0, 45, 'dev0'$/;"	v
version_info	build/lib/pyvista/core/filters/data_object.py	/^from pyvista._version import version_info$/;"	i
version_info	pyvista/__init__.py	/^from pyvista._version import version_info as version_info$/;"	i
version_info	pyvista/_version.py	/^version_info = 0, 45, 'dev0'$/;"	v
version_info	pyvista/core/filters/data_object.py	/^from pyvista._version import version_info$/;"	i
vertex_color	examples/02-plot/vertices.py	/^    vertex_color='magenta',$/;"	v
vertices	examples/00-load/create_poly.py	/^vertices = np.array([[0, 0, 0], [1, 0, 0], [1, 1, 0], [0, 1, 0], [0.5, 0.5, -1]])$/;"	v
vertices	examples/00-load/wrap_trimesh.py	/^vertices = vtk.vtkCellArray()$/;"	v
vertices	examples/01-filter/extrude_rotate.py	/^vertices = np.array($/;"	v
verts	build/lib/pyvista/core/pointset.py	/^    def verts(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
verts	build/lib/pyvista/core/pointset.py	/^    def verts(self, verts: CellArrayLike) -> None:$/;"	m	class:PolyData
verts	pyvista/core/pointset.py	/^    def verts(self) -> NumpyArray[int]:  # numpydoc ignore=RT01$/;"	m	class:PolyData
verts	pyvista/core/pointset.py	/^    def verts(self, verts: CellArrayLike) -> None:$/;"	m	class:PolyData
vessel_vio	doc/source/make_external_gallery.py	/^    vessel_vio=Example($/;"	v
view	examples_trame/basic/PyVistaLocalView.py	/^            view = PyVistaLocalView(plotter)$/;"	v
view	examples_trame/basic/file_viewer.py	/^            view = plotter_ui(pl)$/;"	v
view	examples_trame/basic/multi_views.py	/^            view = plotter_ui(pl)$/;"	v
view	examples_trame/validation/many_actors.py	/^        view = plotter_ui(plotter)$/;"	v
view_angle	build/lib/pyvista/plotting/camera.py	/^    def view_angle(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
view_angle	build/lib/pyvista/plotting/camera.py	/^    def view_angle(self, value):$/;"	m	class:Camera
view_angle	pyvista/plotting/camera.py	/^    def view_angle(self):  # numpydoc ignore=RT01$/;"	m	class:Camera
view_angle	pyvista/plotting/camera.py	/^    def view_angle(self, value):$/;"	m	class:Camera
view_frustum	build/lib/pyvista/plotting/camera.py	/^    def view_frustum(self, aspect=1.0):$/;"	m	class:Camera
view_frustum	pyvista/plotting/camera.py	/^    def view_frustum(self, aspect=1.0):$/;"	m	class:Camera
view_isometric	build/lib/pyvista/plotting/plotter.py	/^    def view_isometric(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_isometric	build/lib/pyvista/plotting/renderer.py	/^    def view_isometric(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_isometric	build/lib/pyvista/trame/ui/base_viewer.py	/^    def view_isometric(self):$/;"	m	class:BaseViewer
view_isometric	pyvista/plotting/plotter.py	/^    def view_isometric(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_isometric	pyvista/plotting/renderer.py	/^    def view_isometric(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_isometric	pyvista/trame/ui/base_viewer.py	/^    def view_isometric(self):$/;"	m	class:BaseViewer
view_vector	build/lib/pyvista/plotting/plotter.py	/^    def view_vector(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_vector	build/lib/pyvista/plotting/renderer.py	/^    def view_vector(self, vector, viewup=None, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_vector	pyvista/plotting/plotter.py	/^    def view_vector(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_vector	pyvista/plotting/renderer.py	/^    def view_vector(self, vector, viewup=None, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_vectors	build/lib/pyvista/plotting/camera.py	/^from .helpers import view_vectors$/;"	i
view_vectors	build/lib/pyvista/plotting/helpers.py	/^def view_vectors(view: str, negative: bool = False) -> tuple[NumpyArray[int], NumpyArray[int]]:$/;"	f
view_vectors	build/lib/pyvista/plotting/renderer.py	/^from .helpers import view_vectors$/;"	i
view_vectors	pyvista/plotting/camera.py	/^from .helpers import view_vectors$/;"	i
view_vectors	pyvista/plotting/helpers.py	/^def view_vectors(view: str, negative: bool = False) -> tuple[NumpyArray[int], NumpyArray[int]]:$/;"	f
view_vectors	pyvista/plotting/renderer.py	/^from .helpers import view_vectors$/;"	i
view_vectors	tests/plotting/test_plotting_utilities.py	/^from pyvista.plotting.helpers import view_vectors$/;"	i
view_xy	build/lib/pyvista/plotting/plotter.py	/^    def view_xy(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_xy	build/lib/pyvista/plotting/renderer.py	/^    def view_xy(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_xy	build/lib/pyvista/trame/ui/base_viewer.py	/^    def view_xy(self):$/;"	m	class:BaseViewer
view_xy	pyvista/plotting/plotter.py	/^    def view_xy(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_xy	pyvista/plotting/renderer.py	/^    def view_xy(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_xy	pyvista/trame/ui/base_viewer.py	/^    def view_xy(self):$/;"	m	class:BaseViewer
view_xz	build/lib/pyvista/plotting/plotter.py	/^    def view_xz(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_xz	build/lib/pyvista/plotting/renderer.py	/^    def view_xz(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_xz	build/lib/pyvista/trame/ui/base_viewer.py	/^    def view_xz(self):$/;"	m	class:BaseViewer
view_xz	pyvista/plotting/plotter.py	/^    def view_xz(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_xz	pyvista/plotting/renderer.py	/^    def view_xz(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_xz	pyvista/trame/ui/base_viewer.py	/^    def view_xz(self):$/;"	m	class:BaseViewer
view_yx	build/lib/pyvista/plotting/plotter.py	/^    def view_yx(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_yx	build/lib/pyvista/plotting/renderer.py	/^    def view_yx(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_yx	pyvista/plotting/plotter.py	/^    def view_yx(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_yx	pyvista/plotting/renderer.py	/^    def view_yx(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_yz	build/lib/pyvista/plotting/plotter.py	/^    def view_yz(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_yz	build/lib/pyvista/plotting/renderer.py	/^    def view_yz(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_yz	build/lib/pyvista/trame/ui/base_viewer.py	/^    def view_yz(self):$/;"	m	class:BaseViewer
view_yz	pyvista/plotting/plotter.py	/^    def view_yz(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_yz	pyvista/plotting/renderer.py	/^    def view_yz(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_yz	pyvista/trame/ui/base_viewer.py	/^    def view_yz(self):$/;"	m	class:BaseViewer
view_zx	build/lib/pyvista/plotting/plotter.py	/^    def view_zx(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_zx	build/lib/pyvista/plotting/renderer.py	/^    def view_zx(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_zx	pyvista/plotting/plotter.py	/^    def view_zx(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_zx	pyvista/plotting/renderer.py	/^    def view_zx(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_zy	build/lib/pyvista/plotting/plotter.py	/^    def view_zy(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_zy	build/lib/pyvista/plotting/renderer.py	/^    def view_zy(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
view_zy	pyvista/plotting/plotter.py	/^    def view_zy(self, *args, **kwarg) -> None:  # numpydoc ignore=PR01,RT01$/;"	m	class:BasePlotter
view_zy	pyvista/plotting/renderer.py	/^    def view_zy(self, negative=False, render=True, bounds=None) -> None:$/;"	m	class:Renderer
viewer	build/lib/pyvista/trame/jupyter.py	/^    def viewer(self):  # numpydoc ignore=RT01$/;"	m	class:Widget
viewer	build/lib/pyvista/trame/jupyter.py	/^    viewer = get_viewer($/;"	v
viewer	build/lib/pyvista/trame/jupyter.py	/^    viewer = initialize($/;"	v
viewer	build/lib/pyvista/trame/ui/__init__.py	/^    viewer = get_viewer(plotter, server=kwargs.get('server'), suppress_rendering=mode == 'client')$/;"	v
viewer	examples_trame/advanced/custom_ui.py	/^viewer = get_viewer(plotter)$/;"	v
viewer	pyvista/trame/jupyter.py	/^    def viewer(self):  # numpydoc ignore=RT01$/;"	m	class:Widget
viewer	pyvista/trame/jupyter.py	/^    viewer = get_viewer($/;"	v
viewer	pyvista/trame/jupyter.py	/^    viewer = initialize($/;"	v
viewer	pyvista/trame/ui/__init__.py	/^    viewer = get_viewer(plotter, server=kwargs.get('server'), suppress_rendering=mode == 'client')$/;"	v
viewport	build/lib/pyvista/plotting/picking.py	/^    def viewport(self) -> tuple[float, float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
viewport	build/lib/pyvista/plotting/renderer.py	/^    def viewport(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
viewport	build/lib/pyvista/plotting/renderer.py	/^    def viewport(self, viewport) -> None:$/;"	m	class:Renderer
viewport	pyvista/plotting/picking.py	/^    def viewport(self) -> tuple[float, float, float, float]:  # numpydoc ignore=RT01$/;"	m	class:RectangleSelection
viewport	pyvista/plotting/renderer.py	/^    def viewport(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
viewport	pyvista/plotting/renderer.py	/^    def viewport(self, viewport) -> None:$/;"	m	class:Renderer
views	build/lib/pyvista/trame/ui/base_viewer.py	/^    def views(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
views	pyvista/trame/ui/base_viewer.py	/^    def views(self):  # numpydoc ignore=RT01$/;"	m	class:BaseViewer
viewup	build/lib/pyvista/plotting/renderer.py	/^    def viewup(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
viewup	build/lib/pyvista/plotting/renderer.py	/^    def viewup(self, value) -> None:$/;"	m	class:CameraPosition
viewup	build/lib/pyvista/plotting/themes.py	/^    def viewup(self) -> VectorLike[float]:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
viewup	build/lib/pyvista/plotting/themes.py	/^    def viewup(self, viewup: VectorLike[float]):$/;"	m	class:_CameraConfig
viewup	examples/02-plot/backface_props.py	/^viewup = [0, 0, 1]$/;"	v
viewup	examples/02-plot/orbit.py	/^viewup = [0, 1, 0]$/;"	v
viewup	examples/02-plot/orbit.py	/^viewup = [0.5, 0.5, 1]$/;"	v
viewup	pyvista/plotting/renderer.py	/^    def viewup(self):  # numpydoc ignore=RT01$/;"	m	class:CameraPosition
viewup	pyvista/plotting/renderer.py	/^    def viewup(self, value) -> None:$/;"	m	class:CameraPosition
viewup	pyvista/plotting/themes.py	/^    def viewup(self) -> VectorLike[float]:  # numpydoc ignore=RT01$/;"	m	class:_CameraConfig
viewup	pyvista/plotting/themes.py	/^    def viewup(self, viewup: VectorLike[float]):$/;"	m	class:_CameraConfig
visibility	build/lib/pyvista/plotting/actor.py	/^    def visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
visibility	build/lib/pyvista/plotting/actor.py	/^    def visibility(self, value: bool) -> None:$/;"	m	class:Actor
visibility	build/lib/pyvista/plotting/axes_actor.py	/^    def visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
visibility	build/lib/pyvista/plotting/axes_actor.py	/^    def visibility(self, value: bool):$/;"	m	class:AxesActor
visibility	pyvista/plotting/actor.py	/^    def visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:Actor
visibility	pyvista/plotting/actor.py	/^    def visibility(self, value: bool) -> None:$/;"	m	class:Actor
visibility	pyvista/plotting/axes_actor.py	/^    def visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
visibility	pyvista/plotting/axes_actor.py	/^    def visibility(self, value: bool):$/;"	m	class:AxesActor
visible	build/lib/pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
visible	build/lib/pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
visible	build/lib/pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
visible	build/lib/pyvista/plotting/charts.py	/^    def visible(self, val) -> None:$/;"	m	class:Axis
visible	build/lib/pyvista/plotting/charts.py	/^    def visible(self, val) -> None:$/;"	m	class:_Chart
visible	build/lib/pyvista/plotting/charts.py	/^    def visible(self, val) -> None:$/;"	m	class:_Plot
visible	build/lib/pyvista/plotting/composite_mapper.py	/^    def visible(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
visible	build/lib/pyvista/plotting/composite_mapper.py	/^    def visible(self, new_visible: bool | None):$/;"	m	class:BlockAttributes
visible	pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:Axis
visible	pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Chart
visible	pyvista/plotting/charts.py	/^    def visible(self):  # numpydoc ignore=RT01$/;"	m	class:_Plot
visible	pyvista/plotting/charts.py	/^    def visible(self, val) -> None:$/;"	m	class:Axis
visible	pyvista/plotting/charts.py	/^    def visible(self, val) -> None:$/;"	m	class:_Chart
visible	pyvista/plotting/charts.py	/^    def visible(self, val) -> None:$/;"	m	class:_Plot
visible	pyvista/plotting/composite_mapper.py	/^    def visible(self) -> bool | None:  # numpydoc ignore=RT01$/;"	m	class:BlockAttributes
visible	pyvista/plotting/composite_mapper.py	/^    def visible(self, new_visible: bool | None):$/;"	m	class:BlockAttributes
visible_bounds	build/lib/pyvista/core/pointset.py	/^    def visible_bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:ExplicitStructuredGrid
visible_bounds	pyvista/core/pointset.py	/^    def visible_bounds(self) -> BoundsTuple:  # numpydoc ignore=RT01$/;"	m	class:ExplicitStructuredGrid
visible_pick_callback	build/lib/pyvista/plotting/picking.py	/^        def visible_pick_callback(selection):$/;"	f	function:PickingMethods.enable_rectangle_visible_picking
visible_pick_callback	pyvista/plotting/picking.py	/^        def visible_pick_callback(selection):$/;"	f	function:PickingMethods.enable_rectangle_visible_picking
visualpic	doc/source/make_external_gallery.py	/^    visualpic=Example($/;"	v
voi	examples/02-plot/volume.py	/^voi = large_vol.extract_subset([175, 200, 105, 132, 98, 170])$/;"	v
vol	examples/00-load/create_structured_surface.py	/^vol = pv.StructuredGrid()$/;"	v
vol	examples/01-filter/compute_volume.py	/^    vol = b.volume$/;"	v
vol	examples/01-filter/surface_smoothing.py	/^vol = data.threshold_percent(30, invert=1)$/;"	v
vol	examples/02-plot/ghost_cells.py	/^vol = examples.load_channels()$/;"	v
vol	examples/02-plot/isovalue.py	/^vol = examples.download_brain()$/;"	v
vol	examples/02-plot/volume.py	/^vol = examples.download_knee_full()$/;"	v
vol	examples/03-widgets/clip_volume.py	/^vol = pl.add_volume(grid, opacity=opacity)$/;"	v
vol	examples/03-widgets/plane_widget.py	/^vol = examples.download_brain()$/;"	v
vol	examples/99-advanced/atomic_orbitals.py	/^vol = pl.add_volume(grid, cmap='magma', opacity=[1, 0, 1])$/;"	v
vol	examples/99-advanced/magnetic_fields.py	/^vol = pl.add_volume($/;"	v
vol	examples/99-advanced/openfoam_cooling.py	/^vol = pl.add_volume($/;"	v
vol	examples/99-advanced/openfoam_tubes.py	/^vol = pl.add_volume($/;"	v
vol	examples/99-advanced/warp_by_vector_eigenmodes.py	/^vol = pv.StructuredGrid()$/;"	v
vol_actor	tests/plotting/test_actor.py	/^def vol_actor():$/;"	f
vol_opac	examples/01-filter/interpolate.py	/^vol_opac = [0, 0, 0.2, 0.2, 0.5, 0.5]$/;"	v
vol_prop	tests/plotting/test_volume_property.py	/^def vol_prop():$/;"	f
volume	build/lib/pyvista/core/composite.py	/^    def volume(self: MultiBlock) -> float:$/;"	m	class:MultiBlock
volume	build/lib/pyvista/core/dataset.py	/^    def volume($/;"	m	class:DataSet
volume	build/lib/pyvista/core/pointset.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointSet
volume	build/lib/pyvista/core/pointset.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PolyData
volume	examples/01-filter/compute_volume.py	/^volume = dataset.volume$/;"	v
volume	examples/01-filter/integrate_data.py	/^volume = integrated_volume['Volume'][0]$/;"	v
volume	examples_trame/advanced/contour.py	/^volume = examples.download_head_2()$/;"	v
volume	pyvista/core/composite.py	/^    def volume(self: MultiBlock) -> float:$/;"	m	class:MultiBlock
volume	pyvista/core/dataset.py	/^    def volume($/;"	m	class:DataSet
volume	pyvista/core/pointset.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PointSet
volume	pyvista/core/pointset.py	/^    def volume(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:PolyData
volume	tests/plotting/test_actor.py	/^def volume():$/;"	f
volume_mapper	build/lib/pyvista/plotting/themes.py	/^    def volume_mapper(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
volume_mapper	build/lib/pyvista/plotting/themes.py	/^    def volume_mapper(self, mapper: str):$/;"	m	class:Theme
volume_mapper	pyvista/plotting/themes.py	/^    def volume_mapper(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:Theme
volume_mapper	pyvista/plotting/themes.py	/^    def volume_mapper(self, mapper: str):$/;"	m	class:Theme
volume_mapper	tests/plotting/mappers/test_volume_mapper.py	/^def volume_mapper():$/;"	f
volumes	examples/01-filter/compute_volume.py	/^volumes = sizes.cell_data['Volume']$/;"	v
voxelize	build/lib/pyvista/core/utilities/__init__.py	/^from .features import voxelize as voxelize$/;"	i
voxelize	build/lib/pyvista/core/utilities/features.py	/^def voxelize($/;"	f
voxelize	pyvista/core/utilities/__init__.py	/^from .features import voxelize as voxelize$/;"	i
voxelize	pyvista/core/utilities/features.py	/^def voxelize($/;"	f
voxelize_binary_mask	build/lib/pyvista/core/filters/data_set.py	/^    def voxelize_binary_mask(  # type: ignore[misc]$/;"	m	class:DataSetFilters
voxelize_binary_mask	pyvista/core/filters/data_set.py	/^    def voxelize_binary_mask(  # type: ignore[misc]$/;"	m	class:DataSetFilters
voxelize_volume	build/lib/pyvista/core/utilities/__init__.py	/^from .features import voxelize_volume as voxelize_volume$/;"	i
voxelize_volume	build/lib/pyvista/core/utilities/features.py	/^def voxelize_volume($/;"	f
voxelize_volume	pyvista/core/utilities/__init__.py	/^from .features import voxelize_volume as voxelize_volume$/;"	i
voxelize_volume	pyvista/core/utilities/features.py	/^def voxelize_volume($/;"	f
voxels	examples/01-filter/voxelize.py	/^voxels = pv.voxelize(surface, density=surface.length \/ 200)$/;"	v
vrml	build/lib/pyvista/examples/__init__.py	/^from . import vrml as vrml$/;"	i
vrml	pyvista/examples/__init__.py	/^from . import vrml as vrml$/;"	i
vtk	build/lib/pyvista/plotting/themes.py	/^    vtk = Theme$/;"	v	class:_NATIVE_THEMES
vtk	examples/00-load/wrap_trimesh.py	/^import vtk$/;"	i
vtk	examples/03-widgets/plane_widget.py	/^import vtk$/;"	i
vtk	examples/99-advanced/extending_pyvista.py	/^import vtk$/;"	i
vtk	examples/99-advanced/plotting_algorithms.py	/^import vtk$/;"	i
vtk	pyvista/plotting/themes.py	/^    vtk = Theme$/;"	v	class:_NATIVE_THEMES
vtk	tests/core/test_cells.py	/^import vtk$/;"	i
vtk	tests/core/test_composite.py	/^import vtk$/;"	i
vtk	tests/core/test_dataobject_filters.py	/^import vtk$/;"	i
vtk	tests/core/test_dataset.py	/^import vtk$/;"	i
vtk	tests/core/test_dataset_filters.py	/^    import vtk$/;"	i
vtk	tests/core/test_geometric_sources.py	/^import vtk$/;"	i
vtk	tests/core/test_grid.py	/^import vtk$/;"	i
vtk	tests/core/test_helpers.py	/^import vtk$/;"	i
vtk	tests/core/test_objects.py	/^import vtk$/;"	i
vtk	tests/core/test_parametric_geometry.py	/^import vtk$/;"	i
vtk	tests/core/test_pointset.py	/^import vtk$/;"	i
vtk	tests/core/test_utilities.py	/^import vtk$/;"	i
vtk	tests/plotting/mappers/test_mapper.py	/^import vtk$/;"	i
vtk	tests/plotting/mappers/test_volume_mapper.py	/^import vtk$/;"	i
vtk	tests/plotting/test_actor.py	/^import vtk$/;"	i
vtk	tests/plotting/test_collection.py	/^import vtk$/;"	i
vtk	tests/plotting/test_colors.py	/^import vtk$/;"	i
vtk	tests/plotting/test_lights.py	/^import vtk$/;"	i
vtk	tests/plotting/test_lookup_table.py	/^import vtk$/;"	i
vtk	tests/plotting/test_picking.py	/^import vtk$/;"	i
vtk	tests/plotting/test_plotter.py	/^import vtk$/;"	i
vtk	tests/plotting/test_plotting.py	/^import vtk$/;"	i
vtk	tests/plotting/test_renderer.py	/^import vtk$/;"	i
vtk	tests/plotting/test_texture.py	/^import vtk$/;"	i
vtk	tests/plotting/test_theme.py	/^import vtk$/;"	i
vtk	tests/plotting/test_utilities.py	/^import vtk$/;"	i
vtk	tests/plotting/test_widgets.py	/^import vtk$/;"	i
vtk3DSImporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtk3DSImporter$/;"	i
vtk3DSImporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtk3DSImporter$/;"	i
vtkAbstractArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkAbstractArray as vtkAbstractArray$/;"	i
vtkAbstractArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkAbstractArray as vtkAbstractArray$/;"	i
vtkAbstractCellLocator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkAbstractCellLocator as vtkAbstractCellLocator$/;"	i
vtkAbstractCellLocator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkAbstractCellLocator as vtkAbstractCellLocator$/;"	i
vtkAbstractImageInterpolator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkAbstractImageInterpolator as vtkAbstractImageInterpolator$/;"	i
vtkAbstractImageInterpolator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkAbstractImageInterpolator as vtkAbstractImageInterpolator$/;"	i
vtkAbstractMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkAbstractMapper as vtkAbstractMapper$/;"	i
vtkAbstractMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkAbstractMapper as vtkAbstractMapper$/;"	i
vtkActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkActor as vtkActor$/;"	i
vtkActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkActor as vtkActor$/;"	i
vtkActor2D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkActor2D as vtkActor2D$/;"	i
vtkActor2D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkActor2D as vtkActor2D$/;"	i
vtkAlgorithm	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkAlgorithm as vtkAlgorithm$/;"	i
vtkAlgorithm	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkAlgorithm as vtkAlgorithm$/;"	i
vtkAlgorithmOutput	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkAlgorithmOutput as vtkAlgorithmOutput$/;"	i
vtkAlgorithmOutput	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkAlgorithmOutput as vtkAlgorithmOutput$/;"	i
vtkAnnotatedCubeActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAnnotatedCubeActor as vtkAnnotatedCubeActor$/;"	i
vtkAnnotatedCubeActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAnnotatedCubeActor as vtkAnnotatedCubeActor$/;"	i
vtkAppendArcLength	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkAppendArcLength as vtkAppendArcLength$/;"	i
vtkAppendArcLength	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkAppendArcLength as vtkAppendArcLength$/;"	i
vtkAppendFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkAppendFilter as vtkAppendFilter$/;"	i
vtkAppendFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkAppendFilter as vtkAppendFilter$/;"	i
vtkAppendPolyData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkAppendPolyData as vtkAppendPolyData$/;"	i
vtkAppendPolyData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkAppendPolyData as vtkAppendPolyData$/;"	i
vtkArcSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkArcSource as vtkArcSource$/;"	i
vtkArcSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkArcSource as vtkArcSource$/;"	i
vtkAreaPicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkAreaPicker as vtkAreaPicker$/;"	i
vtkAreaPicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkAreaPicker as vtkAreaPicker$/;"	i
vtkArrowSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkArrowSource as vtkArrowSource$/;"	i
vtkArrowSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkArrowSource as vtkArrowSource$/;"	i
vtkAxes	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkAxes as vtkAxes$/;"	i
vtkAxes	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkAxes as vtkAxes$/;"	i
vtkAxesActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAxesActor as vtkAxesActor$/;"	i
vtkAxesActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAxesActor as vtkAxesActor$/;"	i
vtkAxis	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkAxis as vtkAxis$/;"	i
vtkAxis	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkAxis as vtkAxis$/;"	i
vtkAxisActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAxisActor as vtkAxisActor$/;"	i
vtkAxisActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAxisActor as vtkAxisActor$/;"	i
vtkAxisActor2D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAxisActor2D as vtkAxisActor2D$/;"	i
vtkAxisActor2D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkAxisActor2D as vtkAxisActor2D$/;"	i
vtkBiQuadraticQuad	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkBiQuadraticQuad as vtkBiQuadraticQuad$/;"	i
vtkBiQuadraticQuad	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkBiQuadraticQuad as vtkBiQuadraticQuad$/;"	i
vtkBiQuadraticTriangle	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkBiQuadraticTriangle as vtkBiQuadraticTriangle$/;"	i
vtkBiQuadraticTriangle	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkBiQuadraticTriangle as vtkBiQuadraticTriangle$/;"	i
vtkBitArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkBitArray as vtkBitArray$/;"	i
vtkBitArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkBitArray as vtkBitArray$/;"	i
vtkBlockItem	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkBlockItem as vtkBlockItem$/;"	i
vtkBlockItem	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkBlockItem as vtkBlockItem$/;"	i
vtkBoundaryMeshQuality	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersVerdict import vtkBoundaryMeshQuality as vtkBoundaryMeshQuality$/;"	i
vtkBoundaryMeshQuality	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersVerdict import vtkBoundaryMeshQuality as vtkBoundaryMeshQuality$/;"	i
vtkBoxClipDataSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkBoxClipDataSet as vtkBoxClipDataSet$/;"	i
vtkBoxClipDataSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkBoxClipDataSet as vtkBoxClipDataSet$/;"	i
vtkBoxWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkBoxWidget as vtkBoxWidget$/;"	i
vtkBoxWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkBoxWidget as vtkBoxWidget$/;"	i
vtkBrush	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkBrush as vtkBrush$/;"	i
vtkBrush	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkBrush as vtkBrush$/;"	i
vtkButtonWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkButtonWidget as vtkButtonWidget$/;"	i
vtkButtonWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkButtonWidget as vtkButtonWidget$/;"	i
vtkCamera	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCamera as vtkCamera$/;"	i
vtkCamera	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCamera as vtkCamera$/;"	i
vtkCamera3DRepresentation	build/lib/pyvista/plotting/widgets.py	/^            from vtkmodules.vtkInteractionWidgets import vtkCamera3DRepresentation$/;"	i
vtkCamera3DRepresentation	pyvista/plotting/widgets.py	/^            from vtkmodules.vtkInteractionWidgets import vtkCamera3DRepresentation$/;"	i
vtkCamera3DWidget	build/lib/pyvista/plotting/widgets.py	/^            from vtkmodules.vtkInteractionWidgets import vtkCamera3DWidget$/;"	i
vtkCamera3DWidget	pyvista/plotting/widgets.py	/^            from vtkmodules.vtkInteractionWidgets import vtkCamera3DWidget$/;"	i
vtkCameraOrientationWidget	build/lib/pyvista/plotting/widgets.py	/^            from vtkmodules.vtkInteractionWidgets import vtkCameraOrientationWidget$/;"	i
vtkCameraOrientationWidget	pyvista/plotting/widgets.py	/^            from vtkmodules.vtkInteractionWidgets import vtkCameraOrientationWidget$/;"	i
vtkCameraPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkCameraPass as vtkCameraPass$/;"	i
vtkCameraPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkCameraPass as vtkCameraPass$/;"	i
vtkCapsuleSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkCapsuleSource as vtkCapsuleSource$/;"	i
vtkCapsuleSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkCapsuleSource as vtkCapsuleSource$/;"	i
vtkCell	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCell as vtkCell$/;"	i
vtkCell	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCell as vtkCell$/;"	i
vtkCellArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCellArray as vtkCellArray$/;"	i
vtkCellArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCellArray as vtkCellArray$/;"	i
vtkCellCenters	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCellCenters as vtkCellCenters$/;"	i
vtkCellCenters	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCellCenters as vtkCellCenters$/;"	i
vtkCellDataToPointData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCellDataToPointData as vtkCellDataToPointData$/;"	i
vtkCellDataToPointData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCellDataToPointData as vtkCellDataToPointData$/;"	i
vtkCellLocator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCellLocator as vtkCellLocator$/;"	i
vtkCellLocator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCellLocator as vtkCellLocator$/;"	i
vtkCellPicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCellPicker as vtkCellPicker$/;"	i
vtkCellPicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCellPicker as vtkCellPicker$/;"	i
vtkCellQuality	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersVerdict import vtkCellQuality as vtkCellQuality$/;"	i
vtkCellQuality	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersVerdict import vtkCellQuality as vtkCellQuality$/;"	i
vtkCellSizeFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersVerdict import vtkCellSizeFilter as vtkCellSizeFilter$/;"	i
vtkCellSizeFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersVerdict import vtkCellSizeFilter as vtkCellSizeFilter$/;"	i
vtkCellTreeLocator	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkCommonDataModel import vtkCellTreeLocator as vtkCellTreeLocator$/;"	i
vtkCellTreeLocator	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkCommonDataModel import vtkCellTreeLocator as vtkCellTreeLocator$/;"	i
vtkCenterOfMass	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCenterOfMass as vtkCenterOfMass$/;"	i
vtkCenterOfMass	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCenterOfMass as vtkCenterOfMass$/;"	i
vtkCharArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkCharArray as vtkCharArray$/;"	i
vtkCharArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkCharArray as vtkCharArray$/;"	i
vtkChart	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChart as vtkChart$/;"	i
vtkChart	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChart as vtkChart$/;"	i
vtkChartBox	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartBox as vtkChartBox$/;"	i
vtkChartBox	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartBox as vtkChartBox$/;"	i
vtkChartPie	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartPie as vtkChartPie$/;"	i
vtkChartPie	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartPie as vtkChartPie$/;"	i
vtkChartXY	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartXY as vtkChartXY$/;"	i
vtkChartXY	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartXY as vtkChartXY$/;"	i
vtkChartXYZ	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartXYZ as vtkChartXYZ$/;"	i
vtkChartXYZ	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkChartXYZ as vtkChartXYZ$/;"	i
vtkCleanPolyData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCleanPolyData as vtkCleanPolyData$/;"	i
vtkCleanPolyData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCleanPolyData as vtkCleanPolyData$/;"	i
vtkClipClosedSurface	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkClipClosedSurface as vtkClipClosedSurface$/;"	i
vtkClipClosedSurface	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkClipClosedSurface as vtkClipClosedSurface$/;"	i
vtkClipPolyData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkClipPolyData as vtkClipPolyData$/;"	i
vtkClipPolyData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkClipPolyData as vtkClipPolyData$/;"	i
vtkCollisionDetectionFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkCollisionDetectionFilter as vtkCollisionDetectionFilter$/;"	i
vtkCollisionDetectionFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkCollisionDetectionFilter as vtkCollisionDetectionFilter$/;"	i
vtkColor3ub	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkColor3ub as vtkColor3ub$/;"	i
vtkColor3ub	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkColor3ub as vtkColor3ub$/;"	i
vtkColorSeries	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkCommonColor import vtkColorSeries as vtkColorSeries$/;"	i
vtkColorSeries	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkCommonColor import vtkColorSeries as vtkColorSeries$/;"	i
vtkColorTransferFunction	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkColorTransferFunction as vtkColorTransferFunction$/;"	i
vtkColorTransferFunction	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkColorTransferFunction as vtkColorTransferFunction$/;"	i
vtkCommand	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkCommand as vtkCommand$/;"	i
vtkCommand	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkCommand as vtkCommand$/;"	i
vtkCommonDataModel	build/lib/pyvista/core/utilities/cell_type_helper.py	/^    from vtkmodules import vtkCommonDataModel$/;"	i
vtkCommonDataModel	build/lib/pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
vtkCommonDataModel	pyvista/core/utilities/cell_type_helper.py	/^    from vtkmodules import vtkCommonDataModel$/;"	i
vtkCommonDataModel	pyvista/core/utilities/cell_type_helper.py	/^    import vtk as vtkCommonDataModel  # type: ignore[no-redef]$/;"	i
vtkCompositeDataPipeline	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkCompositeDataPipeline as vtkCompositeDataPipeline$/;"	i
vtkCompositeDataPipeline	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkCompositeDataPipeline as vtkCompositeDataPipeline$/;"	i
vtkCompositeDataSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCompositeDataSet as vtkCompositeDataSet$/;"	i
vtkCompositeDataSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCompositeDataSet as vtkCompositeDataSet$/;"	i
vtkCompositePolyDataMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCompositePolyDataMapper as vtkCompositePolyDataMapper$/;"	i
vtkCompositePolyDataMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCompositePolyDataMapper as vtkCompositePolyDataMapper$/;"	i
vtkComputeQuartiles	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersStatistics import vtkComputeQuartiles as vtkComputeQuartiles$/;"	i
vtkComputeQuartiles	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersStatistics import vtkComputeQuartiles as vtkComputeQuartiles$/;"	i
vtkConeSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkConeSource as vtkConeSource$/;"	i
vtkConeSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkConeSource as vtkConeSource$/;"	i
vtkConnectivityFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkConnectivityFilter as vtkConnectivityFilter$/;"	i
vtkConnectivityFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkConnectivityFilter as vtkConnectivityFilter$/;"	i
vtkContext2D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkContext2D as vtkContext2D$/;"	i
vtkContext2D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkContext2D as vtkContext2D$/;"	i
vtkContextActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkContextActor as vtkContextActor$/;"	i
vtkContextActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkContextActor as vtkContextActor$/;"	i
vtkContextInteractorStyle	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkViewsContext2D import vtkContextInteractorStyle as vtkContextInteractorStyle$/;"	i
vtkContextInteractorStyle	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkViewsContext2D import vtkContextInteractorStyle as vtkContextInteractorStyle$/;"	i
vtkContextScene	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkContextScene as vtkContextScene$/;"	i
vtkContextScene	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkContextScene as vtkContextScene$/;"	i
vtkContourFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkContourFilter as vtkContourFilter$/;"	i
vtkContourFilter	examples_trame/advanced/contour.py	/^from vtkmodules.vtkFiltersCore import vtkContourFilter$/;"	i
vtkContourFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkContourFilter as vtkContourFilter$/;"	i
vtkContourTriangulator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkContourTriangulator as vtkContourTriangulator$/;"	i
vtkContourTriangulator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkContourTriangulator as vtkContourTriangulator$/;"	i
vtkConvertToPointCloud	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersPoints import vtkConvertToPointCloud as vtkConvertToPointCloud$/;"	i
vtkConvertToPointCloud	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersPoints import vtkConvertToPointCloud as vtkConvertToPointCloud$/;"	i
vtkConvexPointSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkConvexPointSet as vtkConvexPointSet$/;"	i
vtkConvexPointSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkConvexPointSet as vtkConvexPointSet$/;"	i
vtkCoordinate	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCoordinate as vtkCoordinate$/;"	i
vtkCoordinate	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkCoordinate as vtkCoordinate$/;"	i
vtkCornerAnnotation	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkCornerAnnotation as vtkCornerAnnotation$/;"	i
vtkCornerAnnotation	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkCornerAnnotation as vtkCornerAnnotation$/;"	i
vtkCubeAxesActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkCubeAxesActor as vtkCubeAxesActor$/;"	i
vtkCubeAxesActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkCubeAxesActor as vtkCubeAxesActor$/;"	i
vtkCubeSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkCubeSource as vtkCubeSource$/;"	i
vtkCubeSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkCubeSource as vtkCubeSource$/;"	i
vtkCubicLine	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCubicLine as vtkCubicLine$/;"	i
vtkCubicLine	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkCubicLine as vtkCubicLine$/;"	i
vtkCursor3D	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkCursor3D as vtkCursor3D$/;"	i
vtkCursor3D	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkCursor3D as vtkCursor3D$/;"	i
vtkCurvatures	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkCurvatures as vtkCurvatures$/;"	i
vtkCurvatures	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkCurvatures as vtkCurvatures$/;"	i
vtkCutter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCutter as vtkCutter$/;"	i
vtkCutter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkCutter as vtkCutter$/;"	i
vtkCylinderSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkCylinderSource as vtkCylinderSource$/;"	i
vtkCylinderSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkCylinderSource as vtkCylinderSource$/;"	i
vtkDataArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkDataArray as vtkDataArray$/;"	i
vtkDataArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkDataArray as vtkDataArray$/;"	i
vtkDataObject	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkDataObject as vtkDataObject$/;"	i
vtkDataObject	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkDataObject as vtkDataObject$/;"	i
vtkDataReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataReader as vtkDataReader$/;"	i
vtkDataReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataReader as vtkDataReader$/;"	i
vtkDataSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkDataSet as vtkDataSet$/;"	i
vtkDataSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkDataSet as vtkDataSet$/;"	i
vtkDataSetAttributes	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkDataSetAttributes as vtkDataSetAttributes$/;"	i
vtkDataSetAttributes	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkDataSetAttributes as vtkDataSetAttributes$/;"	i
vtkDataSetMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkDataSetMapper as vtkDataSetMapper$/;"	i
vtkDataSetMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkDataSetMapper as vtkDataSetMapper$/;"	i
vtkDataSetReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataSetReader as vtkDataSetReader$/;"	i
vtkDataSetReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataSetReader as vtkDataSetReader$/;"	i
vtkDataSetSurfaceFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeometry import vtkDataSetSurfaceFilter as vtkDataSetSurfaceFilter$/;"	i
vtkDataSetSurfaceFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeometry import vtkDataSetSurfaceFilter as vtkDataSetSurfaceFilter$/;"	i
vtkDataSetTriangleFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkDataSetTriangleFilter as vtkDataSetTriangleFilter$/;"	i
vtkDataSetTriangleFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkDataSetTriangleFilter as vtkDataSetTriangleFilter$/;"	i
vtkDataSetWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataSetWriter as vtkDataSetWriter$/;"	i
vtkDataSetWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataSetWriter as vtkDataSetWriter$/;"	i
vtkDataWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataWriter as vtkDataWriter$/;"	i
vtkDataWriter	build/lib/pyvista/core/utilities/fileio.py	/^    from vtkmodules.vtkIOLegacy import vtkDataWriter$/;"	i
vtkDataWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkDataWriter as vtkDataWriter$/;"	i
vtkDataWriter	pyvista/core/utilities/fileio.py	/^    from vtkmodules.vtkIOLegacy import vtkDataWriter$/;"	i
vtkDecimatePolylineFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDecimatePolylineFilter as vtkDecimatePolylineFilter$/;"	i
vtkDecimatePolylineFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDecimatePolylineFilter as vtkDecimatePolylineFilter$/;"	i
vtkDecimatePro	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDecimatePro as vtkDecimatePro$/;"	i
vtkDecimatePro	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDecimatePro as vtkDecimatePro$/;"	i
vtkDelaunay2D	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDelaunay2D as vtkDelaunay2D$/;"	i
vtkDelaunay2D	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDelaunay2D as vtkDelaunay2D$/;"	i
vtkDelaunay3D	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDelaunay3D as vtkDelaunay3D$/;"	i
vtkDelaunay3D	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkDelaunay3D as vtkDelaunay3D$/;"	i
vtkDelimitedTextReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOInfovis import vtkDelimitedTextReader as vtkDelimitedTextReader$/;"	i
vtkDelimitedTextReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOInfovis import vtkDelimitedTextReader as vtkDelimitedTextReader$/;"	i
vtkDepthOfFieldPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkDepthOfFieldPass as vtkDepthOfFieldPass$/;"	i
vtkDepthOfFieldPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkDepthOfFieldPass as vtkDepthOfFieldPass$/;"	i
vtkDiskSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkDiskSource as vtkDiskSource$/;"	i
vtkDiskSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkDiskSource as vtkDiskSource$/;"	i
vtkDistanceWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkDistanceWidget as vtkDistanceWidget$/;"	i
vtkDistanceWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkDistanceWidget as vtkDistanceWidget$/;"	i
vtkDoubleArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkDoubleArray as vtkDoubleArray$/;"	i
vtkDoubleArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkDoubleArray as vtkDoubleArray$/;"	i
vtkDummyController	build/lib/pyvista/core/utilities/reader.py	/^    from vtkmodules.vtkParallelCore import vtkDummyController$/;"	i
vtkDummyController	pyvista/core/utilities/reader.py	/^    from vtkmodules.vtkParallelCore import vtkDummyController$/;"	i
vtkEDLShading	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkEDLShading as vtkEDLShading$/;"	i
vtkEDLShading	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkEDLShading as vtkEDLShading$/;"	i
vtkElevationFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkElevationFilter as vtkElevationFilter$/;"	i
vtkElevationFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkElevationFilter as vtkElevationFilter$/;"	i
vtkEmptyCell	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkEmptyCell as vtkEmptyCell$/;"	i
vtkEmptyCell	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkEmptyCell as vtkEmptyCell$/;"	i
vtkExodusIIReader	build/lib/pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
vtkExodusIIReader	build/lib/pyvista/core/utilities/fileio.py	/^        from vtkmodules.vtkIOExodus import vtkExodusIIReader$/;"	i
vtkExodusIIReader	pyvista/core/utilities/fileio.py	/^        from vtk import vtkExodusIIReader  # type: ignore[no-redef]$/;"	i
vtkExodusIIReader	pyvista/core/utilities/fileio.py	/^        from vtkmodules.vtkIOExodus import vtkExodusIIReader$/;"	i
vtkExplicitStructuredGrid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkExplicitStructuredGrid as vtkExplicitStructuredGrid$/;"	i
vtkExplicitStructuredGrid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkExplicitStructuredGrid as vtkExplicitStructuredGrid$/;"	i
vtkExtractCellsByType	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractCellsByType as vtkExtractCellsByType$/;"	i
vtkExtractCellsByType	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractCellsByType as vtkExtractCellsByType$/;"	i
vtkExtractEdges	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersCore import vtkExtractEdges as vtkExtractEdges$/;"	i
vtkExtractEdges	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersCore import vtkExtractEdges as vtkExtractEdges$/;"	i
vtkExtractGeometry	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractGeometry as vtkExtractGeometry$/;"	i
vtkExtractGeometry	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractGeometry as vtkExtractGeometry$/;"	i
vtkExtractGrid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractGrid as vtkExtractGrid$/;"	i
vtkExtractGrid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractGrid as vtkExtractGrid$/;"	i
vtkExtractSelection	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractSelection as vtkExtractSelection$/;"	i
vtkExtractSelection	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersExtraction import vtkExtractSelection as vtkExtractSelection$/;"	i
vtkExtractVOI	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkExtractVOI as vtkExtractVOI$/;"	i
vtkExtractVOI	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkExtractVOI as vtkExtractVOI$/;"	i
vtkFeatureEdges	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkFeatureEdges as vtkFeatureEdges$/;"	i
vtkFeatureEdges	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkFeatureEdges as vtkFeatureEdges$/;"	i
vtkFieldData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkFieldData as vtkFieldData$/;"	i
vtkFieldData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkFieldData as vtkFieldData$/;"	i
vtkFileOutputWindow	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkFileOutputWindow as vtkFileOutputWindow$/;"	i
vtkFileOutputWindow	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkFileOutputWindow as vtkFileOutputWindow$/;"	i
vtkFillHolesFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkFillHolesFilter as vtkFillHolesFilter$/;"	i
vtkFillHolesFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkFillHolesFilter as vtkFillHolesFilter$/;"	i
vtkFloatArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkFloatArray as vtkFloatArray$/;"	i
vtkFloatArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkFloatArray as vtkFloatArray$/;"	i
vtkFlyingEdges3D	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkFlyingEdges3D as vtkFlyingEdges3D$/;"	i
vtkFlyingEdges3D	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkFlyingEdges3D as vtkFlyingEdges3D$/;"	i
vtkFrustumSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkFrustumSource as vtkFrustumSource$/;"	i
vtkFrustumSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkFrustumSource as vtkFrustumSource$/;"	i
vtkGL2PSExporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExportGL2PS import vtkGL2PSExporter$/;"	i
vtkGL2PSExporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExportGL2PS import vtkGL2PSExporter$/;"	i
vtkGLTFExporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExport import vtkGLTFExporter$/;"	i
vtkGLTFExporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExport import vtkGLTFExporter$/;"	i
vtkGLTFImporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtkGLTFImporter$/;"	i
vtkGLTFImporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtkGLTFImporter$/;"	i
vtkGPUVolumeRayCastMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingVolume import vtkGPUVolumeRayCastMapper as vtkGPUVolumeRayCastMapper$/;"	i
vtkGPUVolumeRayCastMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingVolume import vtkGPUVolumeRayCastMapper as vtkGPUVolumeRayCastMapper$/;"	i
vtkGaussianBlurPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkGaussianBlurPass as vtkGaussianBlurPass$/;"	i
vtkGaussianBlurPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkGaussianBlurPass as vtkGaussianBlurPass$/;"	i
vtkGaussianKernel	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersPoints import vtkGaussianKernel as vtkGaussianKernel$/;"	i
vtkGaussianKernel	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersPoints import vtkGaussianKernel as vtkGaussianKernel$/;"	i
vtkGenericCell	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkGenericCell as vtkGenericCell$/;"	i
vtkGenericCell	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkGenericCell as vtkGenericCell$/;"	i
vtkGeometryFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeometry import vtkGeometryFilter as vtkGeometryFilter$/;"	i
vtkGeometryFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeometry import vtkGeometryFilter as vtkGeometryFilter$/;"	i
vtkGlyph3D	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkGlyph3D as vtkGlyph3D$/;"	i
vtkGlyph3D	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkGlyph3D as vtkGlyph3D$/;"	i
vtkGradientFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkGradientFilter as vtkGradientFilter$/;"	i
vtkGradientFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkGradientFilter as vtkGradientFilter$/;"	i
vtkHardwarePicker	build/lib/pyvista/plotting/_vtk.py	/^    from vtkmodules.vtkRenderingCore import vtkHardwarePicker as vtkHardwarePicker$/;"	i
vtkHardwarePicker	build/lib/pyvista/plotting/_vtk.py	/^    vtkHardwarePicker = None  # type: ignore[assignment, misc]$/;"	v
vtkHardwarePicker	pyvista/plotting/_vtk.py	/^    from vtkmodules.vtkRenderingCore import vtkHardwarePicker as vtkHardwarePicker$/;"	i
vtkHardwarePicker	pyvista/plotting/_vtk.py	/^    vtkHardwarePicker = None  # type: ignore[assignment, misc]$/;"	v
vtkHexagonalPrism	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkHexagonalPrism as vtkHexagonalPrism$/;"	i
vtkHexagonalPrism	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkHexagonalPrism as vtkHexagonalPrism$/;"	i
vtkHexahedron	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkHexahedron as vtkHexahedron$/;"	i
vtkHexahedron	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkHexahedron as vtkHexahedron$/;"	i
vtkHoudiniPolyDataWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkHoudiniPolyDataWriter as vtkHoudiniPolyDataWriter$/;"	i
vtkHoudiniPolyDataWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkHoudiniPolyDataWriter as vtkHoudiniPolyDataWriter$/;"	i
vtkIVWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkIVWriter as vtkIVWriter$/;"	i
vtkIVWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkIVWriter as vtkIVWriter$/;"	i
vtkIdList	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkIdList as vtkIdList$/;"	i
vtkIdList	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkIdList as vtkIdList$/;"	i
vtkIdTypeArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkIdTypeArray as vtkIdTypeArray$/;"	i
vtkIdTypeArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkIdTypeArray as vtkIdTypeArray$/;"	i
vtkImageActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkImageActor as vtkImageActor$/;"	i
vtkImageActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkImageActor as vtkImageActor$/;"	i
vtkImageButterworthHighPass	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageButterworthHighPass as vtkImageButterworthHighPass$/;"	i
vtkImageButterworthHighPass	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageButterworthHighPass as vtkImageButterworthHighPass$/;"	i
vtkImageButterworthLowPass	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageButterworthLowPass as vtkImageButterworthLowPass$/;"	i
vtkImageButterworthLowPass	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageButterworthLowPass as vtkImageButterworthLowPass$/;"	i
vtkImageConstantPad	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageConstantPad as vtkImageConstantPad$/;"	i
vtkImageConstantPad	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageConstantPad as vtkImageConstantPad$/;"	i
vtkImageData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkImageData as vtkImageData$/;"	i
vtkImageData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkImageData as vtkImageData$/;"	i
vtkImageDifference	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageDifference as vtkImageDifference$/;"	i
vtkImageDifference	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageDifference as vtkImageDifference$/;"	i
vtkImageDilateErode3D	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkImagingMorphological import vtkImageDilateErode3D as vtkImageDilateErode3D$/;"	i
vtkImageDilateErode3D	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkImagingMorphological import vtkImageDilateErode3D as vtkImageDilateErode3D$/;"	i
vtkImageEllipsoidSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageEllipsoidSource as vtkImageEllipsoidSource$/;"	i
vtkImageEllipsoidSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageEllipsoidSource as vtkImageEllipsoidSource$/;"	i
vtkImageExtractComponents	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageExtractComponents as vtkImageExtractComponents$/;"	i
vtkImageExtractComponents	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageExtractComponents as vtkImageExtractComponents$/;"	i
vtkImageFFT	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageFFT as vtkImageFFT$/;"	i
vtkImageFFT	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageFFT as vtkImageFFT$/;"	i
vtkImageFlip	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageFlip as vtkImageFlip$/;"	i
vtkImageFlip	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageFlip as vtkImageFlip$/;"	i
vtkImageGaussianSmooth	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingGeneral import vtkImageGaussianSmooth as vtkImageGaussianSmooth$/;"	i
vtkImageGaussianSmooth	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingGeneral import vtkImageGaussianSmooth as vtkImageGaussianSmooth$/;"	i
vtkImageGaussianSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageGaussianSource as vtkImageGaussianSource$/;"	i
vtkImageGaussianSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageGaussianSource as vtkImageGaussianSource$/;"	i
vtkImageGridSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageGridSource as vtkImageGridSource$/;"	i
vtkImageGridSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageGridSource as vtkImageGridSource$/;"	i
vtkImageInterpolator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageInterpolator as vtkImageInterpolator$/;"	i
vtkImageInterpolator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageInterpolator as vtkImageInterpolator$/;"	i
vtkImageItem	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkImageItem as vtkImageItem$/;"	i
vtkImageItem	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkImageItem as vtkImageItem$/;"	i
vtkImageMandelbrotSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageMandelbrotSource as vtkImageMandelbrotSource$/;"	i
vtkImageMandelbrotSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageMandelbrotSource as vtkImageMandelbrotSource$/;"	i
vtkImageMedian3D	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingGeneral import vtkImageMedian3D as vtkImageMedian3D$/;"	i
vtkImageMedian3D	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingGeneral import vtkImageMedian3D as vtkImageMedian3D$/;"	i
vtkImageMirrorPad	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageMirrorPad as vtkImageMirrorPad$/;"	i
vtkImageMirrorPad	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageMirrorPad as vtkImageMirrorPad$/;"	i
vtkImageNoiseSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageNoiseSource as vtkImageNoiseSource$/;"	i
vtkImageNoiseSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageNoiseSource as vtkImageNoiseSource$/;"	i
vtkImageRFFT	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageRFFT as vtkImageRFFT$/;"	i
vtkImageRFFT	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingFourier import vtkImageRFFT as vtkImageRFFT$/;"	i
vtkImageResize	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageResize as vtkImageResize$/;"	i
vtkImageResize	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageResize as vtkImageResize$/;"	i
vtkImageSincInterpolator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageSincInterpolator as vtkImageSincInterpolator$/;"	i
vtkImageSincInterpolator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageSincInterpolator as vtkImageSincInterpolator$/;"	i
vtkImageSinusoidSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageSinusoidSource as vtkImageSinusoidSource$/;"	i
vtkImageSinusoidSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingSources import vtkImageSinusoidSource as vtkImageSinusoidSource$/;"	i
vtkImageStencil	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingStencil import vtkImageStencil as vtkImageStencil$/;"	i
vtkImageStencil	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingStencil import vtkImageStencil as vtkImageStencil$/;"	i
vtkImageThreshold	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageThreshold as vtkImageThreshold$/;"	i
vtkImageThreshold	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageThreshold as vtkImageThreshold$/;"	i
vtkImageToStructuredGrid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkImageToStructuredGrid as vtkImageToStructuredGrid$/;"	i
vtkImageToStructuredGrid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonExecutionModel import vtkImageToStructuredGrid as vtkImageToStructuredGrid$/;"	i
vtkImageWrapPad	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageWrapPad as vtkImageWrapPad$/;"	i
vtkImageWrapPad	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkImageWrapPad as vtkImageWrapPad$/;"	i
vtkImplicitFunction	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkImplicitFunction as vtkImplicitFunction$/;"	i
vtkImplicitFunction	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkImplicitFunction as vtkImplicitFunction$/;"	i
vtkImplicitPlaneWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkImplicitPlaneWidget as vtkImplicitPlaneWidget$/;"	i
vtkImplicitPlaneWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkImplicitPlaneWidget as vtkImplicitPlaneWidget$/;"	i
vtkImplicitPolyDataDistance	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkImplicitPolyDataDistance as vtkImplicitPolyDataDistance$/;"	i
vtkImplicitPolyDataDistance	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkImplicitPolyDataDistance as vtkImplicitPolyDataDistance$/;"	i
vtkInformation	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkInformation as vtkInformation$/;"	i
vtkInformation	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkInformation as vtkInformation$/;"	i
vtkIntegrateAttributes	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersParallel import vtkIntegrateAttributes as vtkIntegrateAttributes$/;"	i
vtkIntegrateAttributes	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersParallel import vtkIntegrateAttributes as vtkIntegrateAttributes$/;"	i
vtkInteractionStyle	build/lib/pyvista/plotting/render_window_interactor.py	/^            from vtkmodules import vtkInteractionStyle$/;"	i
vtkInteractionStyle	build/lib/pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
vtkInteractionStyle	pyvista/plotting/render_window_interactor.py	/^            from vtkmodules import vtkInteractionStyle$/;"	i
vtkInteractionStyle	pyvista/plotting/render_window_interactor.py	/^            import vtk as vtkInteractionStyle  # type: ignore[no-redef]$/;"	i
vtkKochanekSpline	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkKochanekSpline as vtkKochanekSpline$/;"	i
vtkKochanekSpline	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkKochanekSpline as vtkKochanekSpline$/;"	i
vtkLabelPlacementMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingLabel import vtkLabelPlacementMapper as vtkLabelPlacementMapper$/;"	i
vtkLabelPlacementMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingLabel import vtkLabelPlacementMapper as vtkLabelPlacementMapper$/;"	i
vtkLegendBoxActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkLegendBoxActor as vtkLegendBoxActor$/;"	i
vtkLegendBoxActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkLegendBoxActor as vtkLegendBoxActor$/;"	i
vtkLegendScaleActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkLegendScaleActor as vtkLegendScaleActor$/;"	i
vtkLegendScaleActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkLegendScaleActor as vtkLegendScaleActor$/;"	i
vtkLengthDistribution	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersStatistics import vtkLengthDistribution as vtkLengthDistribution$/;"	i
vtkLengthDistribution	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersStatistics import vtkLengthDistribution as vtkLengthDistribution$/;"	i
vtkLight	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkLight as vtkLight$/;"	i
vtkLight	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
vtkLight	build/lib/pyvista/plotting/lights.py	/^    from vtkmodules.vtkRenderingCore import vtkLight$/;"	i
vtkLight	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkLight as vtkLight$/;"	i
vtkLight	pyvista/plotting/lights.py	/^    from vtk import vtkLight  # type: ignore[no-redef]$/;"	i
vtkLight	pyvista/plotting/lights.py	/^    from vtkmodules.vtkRenderingCore import vtkLight$/;"	i
vtkLightActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkLightActor as vtkLightActor$/;"	i
vtkLightActor	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
vtkLightActor	build/lib/pyvista/plotting/lights.py	/^    from vtkmodules.vtkRenderingCore import vtkLightActor$/;"	i
vtkLightActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkLightActor as vtkLightActor$/;"	i
vtkLightActor	pyvista/plotting/lights.py	/^    from vtk import vtkLightActor  # type: ignore[no-redef]$/;"	i
vtkLightActor	pyvista/plotting/lights.py	/^    from vtkmodules.vtkRenderingCore import vtkLightActor$/;"	i
vtkLightKit	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkLightKit as vtkLightKit$/;"	i
vtkLightKit	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkLightKit as vtkLightKit$/;"	i
vtkLine	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkLine as vtkLine$/;"	i
vtkLine	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkLine as vtkLine$/;"	i
vtkLineSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkLineSource as vtkLineSource$/;"	i
vtkLineSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkLineSource as vtkLineSource$/;"	i
vtkLineWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkLineWidget as vtkLineWidget$/;"	i
vtkLineWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkLineWidget as vtkLineWidget$/;"	i
vtkLinearExtrusionFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkLinearExtrusionFilter as vtkLinearExtrusionFilter$/;"	i
vtkLinearExtrusionFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkLinearExtrusionFilter as vtkLinearExtrusionFilter$/;"	i
vtkLinearSubdivisionFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkLinearSubdivisionFilter as vtkLinearSubdivisionFilter$/;"	i
vtkLinearSubdivisionFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkLinearSubdivisionFilter as vtkLinearSubdivisionFilter$/;"	i
vtkLogger	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkLogger as vtkLogger$/;"	i
vtkLogger	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkLogger as vtkLogger$/;"	i
vtkLogoRepresentation	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkLogoRepresentation as vtkLogoRepresentation$/;"	i
vtkLogoRepresentation	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkLogoRepresentation as vtkLogoRepresentation$/;"	i
vtkLogoWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkLogoWidget as vtkLogoWidget$/;"	i
vtkLogoWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkLogoWidget as vtkLogoWidget$/;"	i
vtkLookupTable	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkLookupTable as vtkLookupTable$/;"	i
vtkLookupTable	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkLookupTable as vtkLookupTable$/;"	i
vtkLookupTable	tests/plotting/mappers/test_composite_mapper.py	/^from vtkmodules.vtkCommonCore import vtkLookupTable$/;"	i
vtkLoopSubdivisionFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkLoopSubdivisionFilter as vtkLoopSubdivisionFilter$/;"	i
vtkLoopSubdivisionFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkLoopSubdivisionFilter as vtkLoopSubdivisionFilter$/;"	i
vtkMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkMapper as vtkMapper$/;"	i
vtkMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkMapper as vtkMapper$/;"	i
vtkMarchingCubes	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkMarchingCubes as vtkMarchingCubes$/;"	i
vtkMarchingCubes	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkMarchingCubes as vtkMarchingCubes$/;"	i
vtkMassProperties	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkMassProperties as vtkMassProperties$/;"	i
vtkMassProperties	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkMassProperties as vtkMassProperties$/;"	i
vtkMath	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkMath as vtkMath$/;"	i
vtkMath	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkMath as vtkMath$/;"	i
vtkMatrix3x3	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._vtk_core import vtkMatrix3x3$/;"	i
vtkMatrix3x3	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonMath import vtkMatrix3x3 as vtkMatrix3x3$/;"	i
vtkMatrix3x3	pyvista/core/_validation/validate.py	/^from pyvista.core._vtk_core import vtkMatrix3x3$/;"	i
vtkMatrix3x3	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonMath import vtkMatrix3x3 as vtkMatrix3x3$/;"	i
vtkMatrix3x3	tests/core/test_validation.py	/^from pyvista.core._vtk_core import vtkMatrix3x3$/;"	i
vtkMatrix4x4	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._vtk_core import vtkMatrix4x4$/;"	i
vtkMatrix4x4	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonMath import vtkMatrix4x4 as vtkMatrix4x4$/;"	i
vtkMatrix4x4	build/lib/pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
vtkMatrix4x4	build/lib/pyvista/plotting/lights.py	/^    from vtkmodules.vtkCommonMath import vtkMatrix4x4$/;"	i
vtkMatrix4x4	pyvista/core/_validation/validate.py	/^from pyvista.core._vtk_core import vtkMatrix4x4$/;"	i
vtkMatrix4x4	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonMath import vtkMatrix4x4 as vtkMatrix4x4$/;"	i
vtkMatrix4x4	pyvista/plotting/lights.py	/^    from vtk import vtkMatrix4x4  # type: ignore[no-redef]$/;"	i
vtkMatrix4x4	pyvista/plotting/lights.py	/^    from vtkmodules.vtkCommonMath import vtkMatrix4x4$/;"	i
vtkMatrix4x4	tests/core/test_validation.py	/^from pyvista.core._vtk_core import vtkMatrix4x4$/;"	i
vtkMeshQuality	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersVerdict import vtkMeshQuality as vtkMeshQuality$/;"	i
vtkMeshQuality	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersVerdict import vtkMeshQuality as vtkMeshQuality$/;"	i
vtkMultiBlockDataSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkMultiBlockDataSet as vtkMultiBlockDataSet$/;"	i
vtkMultiBlockDataSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkMultiBlockDataSet as vtkMultiBlockDataSet$/;"	i
vtkNonMergingPointLocator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkNonMergingPointLocator as vtkNonMergingPointLocator$/;"	i
vtkNonMergingPointLocator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkNonMergingPointLocator as vtkNonMergingPointLocator$/;"	i
vtkOBBTree	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkOBBTree as vtkOBBTree$/;"	i
vtkOBBTree	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkOBBTree as vtkOBBTree$/;"	i
vtkOBJExporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExport import vtkOBJExporter$/;"	i
vtkOBJExporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExport import vtkOBJExporter$/;"	i
vtkOBJImporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtkOBJImporter$/;"	i
vtkOBJImporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtkOBJImporter$/;"	i
vtkOBJWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkOBJWriter as vtkOBJWriter$/;"	i
vtkOBJWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkOBJWriter as vtkOBJWriter$/;"	i
vtkOpenGLFXAAPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLFXAAPass as vtkOpenGLFXAAPass$/;"	i
vtkOpenGLFXAAPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLFXAAPass as vtkOpenGLFXAAPass$/;"	i
vtkOpenGLHardwareSelector	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLHardwareSelector as vtkOpenGLHardwareSelector$/;"	i
vtkOpenGLHardwareSelector	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLHardwareSelector as vtkOpenGLHardwareSelector$/;"	i
vtkOpenGLRenderer	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLRenderer as vtkOpenGLRenderer$/;"	i
vtkOpenGLRenderer	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLRenderer as vtkOpenGLRenderer$/;"	i
vtkOpenGLTexture	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLTexture as vtkOpenGLTexture$/;"	i
vtkOpenGLTexture	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkOpenGLTexture as vtkOpenGLTexture$/;"	i
vtkOutlineCornerFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkOutlineCornerFilter as vtkOutlineCornerFilter$/;"	i
vtkOutlineCornerFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkOutlineCornerFilter as vtkOutlineCornerFilter$/;"	i
vtkOutlineCornerSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkOutlineCornerSource as vtkOutlineCornerSource$/;"	i
vtkOutlineCornerSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkOutlineCornerSource as vtkOutlineCornerSource$/;"	i
vtkOutlineFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkOutlineFilter as vtkOutlineFilter$/;"	i
vtkOutlineFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkOutlineFilter as vtkOutlineFilter$/;"	i
vtkOutputWindow	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkOutputWindow as vtkOutputWindow$/;"	i
vtkOutputWindow	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkOutputWindow as vtkOutputWindow$/;"	i
vtkPLYReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOPLY import vtkPLYReader as vtkPLYReader$/;"	i
vtkPLYReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOPLY import vtkPLYReader as vtkPLYReader$/;"	i
vtkPLYWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOPLY import vtkPLYWriter as vtkPLYWriter$/;"	i
vtkPLYWriter	build/lib/pyvista/core/utilities/fileio.py	/^    from vtkmodules.vtkIOPLY import vtkPLYWriter$/;"	i
vtkPLYWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOPLY import vtkPLYWriter as vtkPLYWriter$/;"	i
vtkPLYWriter	pyvista/core/utilities/fileio.py	/^    from vtkmodules.vtkIOPLY import vtkPLYWriter$/;"	i
vtkPOpenFOAMReader	build/lib/pyvista/core/utilities/reader.py	/^    from vtkmodules.vtkIOParallel import vtkPOpenFOAMReader$/;"	i
vtkPOpenFOAMReader	pyvista/core/utilities/reader.py	/^    from vtkmodules.vtkIOParallel import vtkPOpenFOAMReader$/;"	i
vtkPackLabels	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersCore import vtkPackLabels as vtkPackLabels$/;"	i
vtkPackLabels	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersCore import vtkPackLabels as vtkPackLabels$/;"	i
vtkParametricBour	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricBour as vtkParametricBour$/;"	i
vtkParametricBour	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricBour as vtkParametricBour$/;"	i
vtkParametricBoy	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricBoy as vtkParametricBoy$/;"	i
vtkParametricBoy	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricBoy as vtkParametricBoy$/;"	i
vtkParametricCrossCap	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricCrossCap as vtkParametricCrossCap$/;"	i
vtkParametricCrossCap	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricCrossCap as vtkParametricCrossCap$/;"	i
vtkParametricDini	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricDini as vtkParametricDini$/;"	i
vtkParametricDini	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricDini as vtkParametricDini$/;"	i
vtkParametricEnneper	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricEnneper as vtkParametricEnneper$/;"	i
vtkParametricEnneper	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricEnneper as vtkParametricEnneper$/;"	i
vtkParametricFunction	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricFunction as vtkParametricFunction$/;"	i
vtkParametricFunction	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricFunction as vtkParametricFunction$/;"	i
vtkParametricFunctionSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkParametricFunctionSource as vtkParametricFunctionSource$/;"	i
vtkParametricFunctionSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkParametricFunctionSource as vtkParametricFunctionSource$/;"	i
vtkParametricKlein	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricKlein as vtkParametricKlein$/;"	i
vtkParametricKlein	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricKlein as vtkParametricKlein$/;"	i
vtkParametricKuen	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricKuen as vtkParametricKuen$/;"	i
vtkParametricKuen	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricKuen as vtkParametricKuen$/;"	i
vtkParametricMobius	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricMobius as vtkParametricMobius$/;"	i
vtkParametricMobius	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricMobius as vtkParametricMobius$/;"	i
vtkParametricRoman	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricRoman as vtkParametricRoman$/;"	i
vtkParametricRoman	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricRoman as vtkParametricRoman$/;"	i
vtkParametricSpline	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricSpline as vtkParametricSpline$/;"	i
vtkParametricSpline	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricSpline as vtkParametricSpline$/;"	i
vtkParametricTorus	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricTorus as vtkParametricTorus$/;"	i
vtkParametricTorus	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonComputationalGeometry import vtkParametricTorus as vtkParametricTorus$/;"	i
vtkPartitionedDataSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPartitionedDataSet as vtkPartitionedDataSet$/;"	i
vtkPartitionedDataSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPartitionedDataSet as vtkPartitionedDataSet$/;"	i
vtkPen	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkPen as vtkPen$/;"	i
vtkPen	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingContext2D import vtkPen as vtkPen$/;"	i
vtkPen	tests/plotting/test_charts.py	/^from vtkmodules.vtkRenderingContext2D import vtkPen$/;"	i
vtkPentagonalPrism	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPentagonalPrism as vtkPentagonalPrism$/;"	i
vtkPentagonalPrism	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPentagonalPrism as vtkPentagonalPrism$/;"	i
vtkPerlinNoise	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPerlinNoise as vtkPerlinNoise$/;"	i
vtkPerlinNoise	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPerlinNoise as vtkPerlinNoise$/;"	i
vtkPiecewiseFunction	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPiecewiseFunction as vtkPiecewiseFunction$/;"	i
vtkPiecewiseFunction	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPiecewiseFunction as vtkPiecewiseFunction$/;"	i
vtkPixel	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPixel as vtkPixel$/;"	i
vtkPixel	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPixel as vtkPixel$/;"	i
vtkPlane	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPlane as vtkPlane$/;"	i
vtkPlane	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPlane as vtkPlane$/;"	i
vtkPlaneCollection	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPlaneCollection as vtkPlaneCollection$/;"	i
vtkPlaneCollection	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPlaneCollection as vtkPlaneCollection$/;"	i
vtkPlaneSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkPlaneSource as vtkPlaneSource$/;"	i
vtkPlaneSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkPlaneSource as vtkPlaneSource$/;"	i
vtkPlaneWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkPlaneWidget as vtkPlaneWidget$/;"	i
vtkPlaneWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkPlaneWidget as vtkPlaneWidget$/;"	i
vtkPlanes	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPlanes as vtkPlanes$/;"	i
vtkPlanes	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPlanes as vtkPlanes$/;"	i
vtkPlatonicSolidSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkPlatonicSolidSource as vtkPlatonicSolidSource$/;"	i
vtkPlatonicSolidSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkPlatonicSolidSource as vtkPlatonicSolidSource$/;"	i
vtkPlotArea	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotArea as vtkPlotArea$/;"	i
vtkPlotArea	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotArea as vtkPlotArea$/;"	i
vtkPlotBar	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotBar as vtkPlotBar$/;"	i
vtkPlotBar	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotBar as vtkPlotBar$/;"	i
vtkPlotBox	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotBox as vtkPlotBox$/;"	i
vtkPlotBox	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotBox as vtkPlotBox$/;"	i
vtkPlotLine	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotLine as vtkPlotLine$/;"	i
vtkPlotLine	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotLine as vtkPlotLine$/;"	i
vtkPlotLine3D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotLine3D as vtkPlotLine3D$/;"	i
vtkPlotLine3D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotLine3D as vtkPlotLine3D$/;"	i
vtkPlotPie	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotPie as vtkPlotPie$/;"	i
vtkPlotPie	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotPie as vtkPlotPie$/;"	i
vtkPlotPoints	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotPoints as vtkPlotPoints$/;"	i
vtkPlotPoints	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotPoints as vtkPlotPoints$/;"	i
vtkPlotPoints3D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotPoints3D as vtkPlotPoints3D$/;"	i
vtkPlotPoints3D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotPoints3D as vtkPlotPoints3D$/;"	i
vtkPlotStacked	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotStacked as vtkPlotStacked$/;"	i
vtkPlotStacked	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotStacked as vtkPlotStacked$/;"	i
vtkPlotSurface	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotSurface as vtkPlotSurface$/;"	i
vtkPlotSurface	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkChartsCore import vtkPlotSurface as vtkPlotSurface$/;"	i
vtkPointDataToCellData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkPointDataToCellData as vtkPointDataToCellData$/;"	i
vtkPointDataToCellData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkPointDataToCellData as vtkPointDataToCellData$/;"	i
vtkPointGaussianMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPointGaussianMapper as vtkPointGaussianMapper$/;"	i
vtkPointGaussianMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPointGaussianMapper as vtkPointGaussianMapper$/;"	i
vtkPointInterpolator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersPoints import vtkPointInterpolator as vtkPointInterpolator$/;"	i
vtkPointInterpolator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersPoints import vtkPointInterpolator as vtkPointInterpolator$/;"	i
vtkPointLocator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPointLocator as vtkPointLocator$/;"	i
vtkPointLocator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPointLocator as vtkPointLocator$/;"	i
vtkPointPicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPointPicker as vtkPointPicker$/;"	i
vtkPointPicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPointPicker as vtkPointPicker$/;"	i
vtkPointSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPointSet as vtkPointSet$/;"	i
vtkPointSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPointSet as vtkPointSet$/;"	i
vtkPointSetToLabelHierarchy	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingLabel import vtkPointSetToLabelHierarchy as vtkPointSetToLabelHierarchy$/;"	i
vtkPointSetToLabelHierarchy	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingLabel import vtkPointSetToLabelHierarchy as vtkPointSetToLabelHierarchy$/;"	i
vtkPointSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkPointSource as vtkPointSource$/;"	i
vtkPointSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkPointSource as vtkPointSource$/;"	i
vtkPoints	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkPoints as vtkPoints$/;"	i
vtkPoints	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkPoints as vtkPoints$/;"	i
vtkPolyData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyData as vtkPolyData$/;"	i
vtkPolyData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyData as vtkPolyData$/;"	i
vtkPolyDataMapper	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPolyDataMapper as vtkPolyDataMapper$/;"	i
vtkPolyDataMapper	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPolyDataMapper as vtkPolyDataMapper$/;"	i
vtkPolyDataMapper2D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPolyDataMapper2D as vtkPolyDataMapper2D$/;"	i
vtkPolyDataMapper2D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPolyDataMapper2D as vtkPolyDataMapper2D$/;"	i
vtkPolyDataNormals	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkPolyDataNormals as vtkPolyDataNormals$/;"	i
vtkPolyDataNormals	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkPolyDataNormals as vtkPolyDataNormals$/;"	i
vtkPolyDataReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkPolyDataReader as vtkPolyDataReader$/;"	i
vtkPolyDataReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkPolyDataReader as vtkPolyDataReader$/;"	i
vtkPolyDataSilhouette	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersHybrid import vtkPolyDataSilhouette as vtkPolyDataSilhouette$/;"	i
vtkPolyDataSilhouette	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersHybrid import vtkPolyDataSilhouette as vtkPolyDataSilhouette$/;"	i
vtkPolyDataToImageStencil	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingStencil import vtkPolyDataToImageStencil as vtkPolyDataToImageStencil$/;"	i
vtkPolyDataToImageStencil	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingStencil import vtkPolyDataToImageStencil as vtkPolyDataToImageStencil$/;"	i
vtkPolyDataWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkPolyDataWriter as vtkPolyDataWriter$/;"	i
vtkPolyDataWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkPolyDataWriter as vtkPolyDataWriter$/;"	i
vtkPolyLine	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyLine as vtkPolyLine$/;"	i
vtkPolyLine	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyLine as vtkPolyLine$/;"	i
vtkPolyPlane	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyPlane as vtkPolyPlane$/;"	i
vtkPolyPlane	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyPlane as vtkPolyPlane$/;"	i
vtkPolyVertex	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyVertex as vtkPolyVertex$/;"	i
vtkPolyVertex	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyVertex as vtkPolyVertex$/;"	i
vtkPolygon	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolygon as vtkPolygon$/;"	i
vtkPolygon	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolygon as vtkPolygon$/;"	i
vtkPolyhedron	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyhedron as vtkPolyhedron$/;"	i
vtkPolyhedron	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPolyhedron as vtkPolyhedron$/;"	i
vtkProStarReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkProStarReader as vtkProStarReader$/;"	i
vtkProStarReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkProStarReader as vtkProStarReader$/;"	i
vtkProp	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkProp as vtkProp$/;"	i
vtkProp	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkProp as vtkProp$/;"	i
vtkProp3D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkProp3D as vtkProp3D$/;"	i
vtkProp3D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkProp3D as vtkProp3D$/;"	i
vtkPropAssembly	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPropAssembly as vtkPropAssembly$/;"	i
vtkPropAssembly	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPropAssembly as vtkPropAssembly$/;"	i
vtkPropCollection	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPropCollection as vtkPropCollection$/;"	i
vtkPropCollection	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPropCollection as vtkPropCollection$/;"	i
vtkPropPicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPropPicker as vtkPropPicker$/;"	i
vtkPropPicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkPropPicker as vtkPropPicker$/;"	i
vtkProperty	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkProperty as vtkProperty$/;"	i
vtkProperty	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkProperty as vtkProperty$/;"	i
vtkProteinRibbonFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkDomainsChemistry import vtkProteinRibbonFilter as vtkProteinRibbonFilter$/;"	i
vtkProteinRibbonFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkDomainsChemistry import vtkProteinRibbonFilter as vtkProteinRibbonFilter$/;"	i
vtkPyramid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPyramid as vtkPyramid$/;"	i
vtkPyramid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkPyramid as vtkPyramid$/;"	i
vtkPythonItem	build/lib/pyvista/core/_vtk_core.py	/^    class vtkPythonItem:  # type: ignore[no-redef]$/;"	c
vtkPythonItem	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkPythonContext2D import vtkPythonItem as vtkPythonItem$/;"	i
vtkPythonItem	pyvista/core/_vtk_core.py	/^    class vtkPythonItem:  # type: ignore[no-redef]$/;"	c
vtkPythonItem	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkPythonContext2D import vtkPythonItem as vtkPythonItem$/;"	i
vtkQuad	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuad as vtkQuad$/;"	i
vtkQuad	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuad as vtkQuad$/;"	i
vtkQuadraticEdge	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticEdge as vtkQuadraticEdge$/;"	i
vtkQuadraticEdge	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticEdge as vtkQuadraticEdge$/;"	i
vtkQuadraticHexahedron	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticHexahedron as vtkQuadraticHexahedron$/;"	i
vtkQuadraticHexahedron	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticHexahedron as vtkQuadraticHexahedron$/;"	i
vtkQuadraticLinearQuad	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticLinearQuad as vtkQuadraticLinearQuad$/;"	i
vtkQuadraticLinearQuad	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticLinearQuad as vtkQuadraticLinearQuad$/;"	i
vtkQuadraticLinearWedge	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticLinearWedge as vtkQuadraticLinearWedge$/;"	i
vtkQuadraticLinearWedge	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticLinearWedge as vtkQuadraticLinearWedge$/;"	i
vtkQuadraticPolygon	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticPolygon as vtkQuadraticPolygon$/;"	i
vtkQuadraticPolygon	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticPolygon as vtkQuadraticPolygon$/;"	i
vtkQuadraticPyramid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticPyramid as vtkQuadraticPyramid$/;"	i
vtkQuadraticPyramid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticPyramid as vtkQuadraticPyramid$/;"	i
vtkQuadraticQuad	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticQuad as vtkQuadraticQuad$/;"	i
vtkQuadraticQuad	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticQuad as vtkQuadraticQuad$/;"	i
vtkQuadraticTetra	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticTetra as vtkQuadraticTetra$/;"	i
vtkQuadraticTetra	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticTetra as vtkQuadraticTetra$/;"	i
vtkQuadraticTriangle	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticTriangle as vtkQuadraticTriangle$/;"	i
vtkQuadraticTriangle	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticTriangle as vtkQuadraticTriangle$/;"	i
vtkQuadraticWedge	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticWedge as vtkQuadraticWedge$/;"	i
vtkQuadraticWedge	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkQuadraticWedge as vtkQuadraticWedge$/;"	i
vtkQuadricDecimation	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkQuadricDecimation as vtkQuadricDecimation$/;"	i
vtkQuadricDecimation	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkQuadricDecimation as vtkQuadricDecimation$/;"	i
vtkRTAnalyticSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkRTAnalyticSource as vtkRTAnalyticSource$/;"	i
vtkRTAnalyticSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingCore import vtkRTAnalyticSource as vtkRTAnalyticSource$/;"	i
vtkRectf	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkRectf as vtkRectf$/;"	i
vtkRectf	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkRectf as vtkRectf$/;"	i
vtkRectilinearGrid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkRectilinearGrid as vtkRectilinearGrid$/;"	i
vtkRectilinearGrid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkRectilinearGrid as vtkRectilinearGrid$/;"	i
vtkRectilinearGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkRectilinearGridReader as vtkRectilinearGridReader$/;"	i
vtkRectilinearGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkRectilinearGridReader as vtkRectilinearGridReader$/;"	i
vtkRectilinearGridWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkRectilinearGridWriter as vtkRectilinearGridWriter$/;"	i
vtkRectilinearGridWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkRectilinearGridWriter as vtkRectilinearGridWriter$/;"	i
vtkRegularPolygonSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkRegularPolygonSource as vtkRegularPolygonSource$/;"	i
vtkRegularPolygonSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkRegularPolygonSource as vtkRegularPolygonSource$/;"	i
vtkRemovePolyData	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import vtkRemovePolyData as vtkRemovePolyData$/;"	i
vtkRemovePolyData	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersGeneral import vtkRemovePolyData as vtkRemovePolyData$/;"	i
vtkRenderPassCollection	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkRenderPassCollection as vtkRenderPassCollection$/;"	i
vtkRenderPassCollection	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkRenderPassCollection as vtkRenderPassCollection$/;"	i
vtkRenderStepsPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkRenderStepsPass as vtkRenderStepsPass$/;"	i
vtkRenderStepsPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkRenderStepsPass as vtkRenderStepsPass$/;"	i
vtkRenderWindow	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderWindow as vtkRenderWindow$/;"	i
vtkRenderWindow	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderWindow as vtkRenderWindow$/;"	i
vtkRenderWindowInteractor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderWindowInteractor as vtkRenderWindowInteractor$/;"	i
vtkRenderWindowInteractor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderWindowInteractor as vtkRenderWindowInteractor$/;"	i
vtkRenderedAreaPicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderedAreaPicker as vtkRenderedAreaPicker$/;"	i
vtkRenderedAreaPicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderedAreaPicker as vtkRenderedAreaPicker$/;"	i
vtkRenderer	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderer as vtkRenderer$/;"	i
vtkRenderer	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkRenderer as vtkRenderer$/;"	i
vtkRenderingContextOpenGL2	build/lib/pyvista/plotting/_vtk_gl.py	/^    from vtkmodules import vtkRenderingContextOpenGL2 as vtkRenderingContextOpenGL2$/;"	i
vtkRenderingContextOpenGL2	build/lib/pyvista/plotting/_vtk_gl.py	/^    vtkRenderingContextOpenGL2 = None  # type: ignore[assignment]$/;"	v
vtkRenderingContextOpenGL2	pyvista/plotting/_vtk_gl.py	/^    from vtkmodules import vtkRenderingContextOpenGL2 as vtkRenderingContextOpenGL2$/;"	i
vtkRenderingContextOpenGL2	pyvista/plotting/_vtk_gl.py	/^    vtkRenderingContextOpenGL2 = None  # type: ignore[assignment]$/;"	v
vtkResampleWithDataSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkResampleWithDataSet as vtkResampleWithDataSet$/;"	i
vtkResampleWithDataSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkResampleWithDataSet as vtkResampleWithDataSet$/;"	i
vtkResliceCursorPicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkResliceCursorPicker as vtkResliceCursorPicker$/;"	i
vtkResliceCursorPicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkResliceCursorPicker as vtkResliceCursorPicker$/;"	i
vtkReverseSense	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkReverseSense as vtkReverseSense$/;"	i
vtkReverseSense	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkReverseSense as vtkReverseSense$/;"	i
vtkRibbonFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkRibbonFilter as vtkRibbonFilter$/;"	i
vtkRibbonFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkRibbonFilter as vtkRibbonFilter$/;"	i
vtkRuledSurfaceFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkRuledSurfaceFilter as vtkRuledSurfaceFilter$/;"	i
vtkRuledSurfaceFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkRuledSurfaceFilter as vtkRuledSurfaceFilter$/;"	i
vtkSSAAPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkSSAAPass as vtkSSAAPass$/;"	i
vtkSSAAPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkSSAAPass as vtkSSAAPass$/;"	i
vtkSSAOPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkSSAOPass as vtkSSAOPass$/;"	i
vtkSSAOPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkSSAOPass as vtkSSAOPass$/;"	i
vtkSTLWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkSTLWriter as vtkSTLWriter$/;"	i
vtkSTLWriter	build/lib/pyvista/core/utilities/fileio.py	/^    from vtkmodules.vtkIOGeometry import vtkSTLWriter$/;"	i
vtkSTLWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOGeometry import vtkSTLWriter as vtkSTLWriter$/;"	i
vtkSTLWriter	pyvista/core/utilities/fileio.py	/^    from vtkmodules.vtkIOGeometry import vtkSTLWriter$/;"	i
vtkSampleFunction	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingHybrid import vtkSampleFunction as vtkSampleFunction$/;"	i
vtkSampleFunction	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkImagingHybrid import vtkSampleFunction as vtkSampleFunction$/;"	i
vtkScalarBarActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkScalarBarActor as vtkScalarBarActor$/;"	i
vtkScalarBarActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingAnnotation import vtkScalarBarActor as vtkScalarBarActor$/;"	i
vtkScalarBarWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkScalarBarWidget as vtkScalarBarWidget$/;"	i
vtkScalarBarWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkScalarBarWidget as vtkScalarBarWidget$/;"	i
vtkScenePicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkScenePicker as vtkScenePicker$/;"	i
vtkScenePicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkScenePicker as vtkScenePicker$/;"	i
vtkSelectEnclosedPoints	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkSelectEnclosedPoints as vtkSelectEnclosedPoints$/;"	i
vtkSelectEnclosedPoints	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkSelectEnclosedPoints as vtkSelectEnclosedPoints$/;"	i
vtkSelectVisiblePoints	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkSelectVisiblePoints as vtkSelectVisiblePoints$/;"	i
vtkSelectVisiblePoints	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkSelectVisiblePoints as vtkSelectVisiblePoints$/;"	i
vtkSelection	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkSelection as vtkSelection$/;"	i
vtkSelection	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkSelection as vtkSelection$/;"	i
vtkSelectionNode	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkSelectionNode as vtkSelectionNode$/;"	i
vtkSelectionNode	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkSelectionNode as vtkSelectionNode$/;"	i
vtkSequencePass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkSequencePass as vtkSequencePass$/;"	i
vtkSequencePass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkSequencePass as vtkSequencePass$/;"	i
vtkShadowMapPass	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkShadowMapPass as vtkShadowMapPass$/;"	i
vtkShadowMapPass	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingOpenGL2 import vtkShadowMapPass as vtkShadowMapPass$/;"	i
vtkShrinkFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkShrinkFilter as vtkShrinkFilter$/;"	i
vtkShrinkFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkShrinkFilter as vtkShrinkFilter$/;"	i
vtkSignedCharArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkSignedCharArray as vtkSignedCharArray$/;"	i
vtkSignedCharArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkSignedCharArray as vtkSignedCharArray$/;"	i
vtkSimplePointsWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkSimplePointsWriter as vtkSimplePointsWriter$/;"	i
vtkSimplePointsWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkSimplePointsWriter as vtkSimplePointsWriter$/;"	i
vtkSkybox	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkSkybox as vtkSkybox$/;"	i
vtkSkybox	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkSkybox as vtkSkybox$/;"	i
vtkSliderRepresentation2D	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSliderRepresentation2D as vtkSliderRepresentation2D$/;"	i
vtkSliderRepresentation2D	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSliderRepresentation2D as vtkSliderRepresentation2D$/;"	i
vtkSliderWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSliderWidget as vtkSliderWidget$/;"	i
vtkSliderWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSliderWidget as vtkSliderWidget$/;"	i
vtkSmartVolumeMapper	build/lib/pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingVolumeOpenGL2 import vtkSmartVolumeMapper as vtkSmartVolumeMapper$/;"	i
vtkSmartVolumeMapper	pyvista/plotting/_vtk_gl.py	/^from vtkmodules.vtkRenderingVolumeOpenGL2 import vtkSmartVolumeMapper as vtkSmartVolumeMapper$/;"	i
vtkSmoothPolyDataFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkSmoothPolyDataFilter as vtkSmoothPolyDataFilter$/;"	i
vtkSmoothPolyDataFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkSmoothPolyDataFilter as vtkSmoothPolyDataFilter$/;"	i
vtkSphereSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkSphereSource as vtkSphereSource$/;"	i
vtkSphereSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkSphereSource as vtkSphereSource$/;"	i
vtkSphereWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSphereWidget as vtkSphereWidget$/;"	i
vtkSphereWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSphereWidget as vtkSphereWidget$/;"	i
vtkSplineWidget	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSplineWidget as vtkSplineWidget$/;"	i
vtkSplineWidget	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkInteractionWidgets import vtkSplineWidget as vtkSplineWidget$/;"	i
vtkStaticCellLocator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStaticCellLocator as vtkStaticCellLocator$/;"	i
vtkStaticCellLocator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStaticCellLocator as vtkStaticCellLocator$/;"	i
vtkStaticCleanUnstructuredGrid	build/lib/pyvista/core/filters/unstructured_grid.py	/^            from vtkmodules.vtkFiltersCore import vtkStaticCleanUnstructuredGrid$/;"	i
vtkStaticCleanUnstructuredGrid	pyvista/core/filters/unstructured_grid.py	/^            from vtkmodules.vtkFiltersCore import vtkStaticCleanUnstructuredGrid$/;"	i
vtkStaticPointLocator	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStaticPointLocator as vtkStaticPointLocator$/;"	i
vtkStaticPointLocator	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStaticPointLocator as vtkStaticPointLocator$/;"	i
vtkStreamTracer	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersFlowPaths import vtkStreamTracer as vtkStreamTracer$/;"	i
vtkStreamTracer	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersFlowPaths import vtkStreamTracer as vtkStreamTracer$/;"	i
vtkStringArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkStringArray as vtkStringArray$/;"	i
vtkStringArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkStringArray as vtkStringArray$/;"	i
vtkStringOutputWindow	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkStringOutputWindow as vtkStringOutputWindow$/;"	i
vtkStringOutputWindow	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkStringOutputWindow as vtkStringOutputWindow$/;"	i
vtkStripper	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkStripper as vtkStripper$/;"	i
vtkStripper	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkStripper as vtkStripper$/;"	i
vtkStructuredGrid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStructuredGrid as vtkStructuredGrid$/;"	i
vtkStructuredGrid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStructuredGrid as vtkStructuredGrid$/;"	i
vtkStructuredGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkStructuredGridReader as vtkStructuredGridReader$/;"	i
vtkStructuredGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkStructuredGridReader as vtkStructuredGridReader$/;"	i
vtkStructuredGridWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkStructuredGridWriter as vtkStructuredGridWriter$/;"	i
vtkStructuredGridWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkStructuredGridWriter as vtkStructuredGridWriter$/;"	i
vtkStructuredPoints	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStructuredPoints as vtkStructuredPoints$/;"	i
vtkStructuredPoints	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkStructuredPoints as vtkStructuredPoints$/;"	i
vtkSubdivideTetra	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkSubdivideTetra as vtkSubdivideTetra$/;"	i
vtkSubdivideTetra	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkSubdivideTetra as vtkSubdivideTetra$/;"	i
vtkSuperquadricSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkSuperquadricSource as vtkSuperquadricSource$/;"	i
vtkSuperquadricSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkSuperquadricSource as vtkSuperquadricSource$/;"	i
vtkSurfaceNets3D	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersCore import vtkSurfaceNets3D as vtkSurfaceNets3D$/;"	i
vtkSurfaceNets3D	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkFiltersCore import vtkSurfaceNets3D as vtkSurfaceNets3D$/;"	i
vtkTable	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTable as vtkTable$/;"	i
vtkTable	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTable as vtkTable$/;"	i
vtkTableBasedClipDataSet	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTableBasedClipDataSet as vtkTableBasedClipDataSet$/;"	i
vtkTableBasedClipDataSet	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTableBasedClipDataSet as vtkTableBasedClipDataSet$/;"	i
vtkTableToPolyData	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTableToPolyData as vtkTableToPolyData$/;"	i
vtkTableToPolyData	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTableToPolyData as vtkTableToPolyData$/;"	i
vtkTessellatedBoxSource	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkTessellatedBoxSource as vtkTessellatedBoxSource$/;"	i
vtkTessellatedBoxSource	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersSources import vtkTessellatedBoxSource as vtkTessellatedBoxSource$/;"	i
vtkTessellatorFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTessellatorFilter as vtkTessellatorFilter$/;"	i
vtkTessellatorFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTessellatorFilter as vtkTessellatorFilter$/;"	i
vtkTetra	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTetra as vtkTetra$/;"	i
vtkTetra	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTetra as vtkTetra$/;"	i
vtkTextActor	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkTextActor as vtkTextActor$/;"	i
vtkTextActor	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkTextActor as vtkTextActor$/;"	i
vtkTextProperty	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkTextProperty as vtkTextProperty$/;"	i
vtkTextProperty	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkTextProperty as vtkTextProperty$/;"	i
vtkTexture	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkTexture as vtkTexture$/;"	i
vtkTexture	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkTexture as vtkTexture$/;"	i
vtkTextureMapToPlane	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersTexture import vtkTextureMapToPlane as vtkTextureMapToPlane$/;"	i
vtkTextureMapToPlane	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersTexture import vtkTextureMapToPlane as vtkTextureMapToPlane$/;"	i
vtkTextureMapToSphere	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersTexture import vtkTextureMapToSphere as vtkTextureMapToSphere$/;"	i
vtkTextureMapToSphere	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersTexture import vtkTextureMapToSphere as vtkTextureMapToSphere$/;"	i
vtkThreshold	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkThreshold as vtkThreshold$/;"	i
vtkThreshold	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkThreshold as vtkThreshold$/;"	i
vtkTransform	build/lib/pyvista/core/_validation/validate.py	/^from pyvista.core._vtk_core import vtkTransform$/;"	i
vtkTransform	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonTransforms import vtkTransform as vtkTransform$/;"	i
vtkTransform	pyvista/core/_validation/validate.py	/^from pyvista.core._vtk_core import vtkTransform$/;"	i
vtkTransform	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonTransforms import vtkTransform as vtkTransform$/;"	i
vtkTransform	tests/core/test_validation.py	/^from vtk import vtkTransform$/;"	i
vtkTransformFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTransformFilter as vtkTransformFilter$/;"	i
vtkTransformFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkTransformFilter as vtkTransformFilter$/;"	i
vtkTriQuadraticHexahedron	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTriQuadraticHexahedron as vtkTriQuadraticHexahedron$/;"	i
vtkTriQuadraticHexahedron	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTriQuadraticHexahedron as vtkTriQuadraticHexahedron$/;"	i
vtkTriQuadraticPyramid	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkCommonDataModel import vtkTriQuadraticPyramid as vtkTriQuadraticPyramid$/;"	i
vtkTriQuadraticPyramid	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkCommonDataModel import vtkTriQuadraticPyramid as vtkTriQuadraticPyramid$/;"	i
vtkTriangle	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTriangle as vtkTriangle$/;"	i
vtkTriangle	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTriangle as vtkTriangle$/;"	i
vtkTriangleFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkTriangleFilter as vtkTriangleFilter$/;"	i
vtkTriangleFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkTriangleFilter as vtkTriangleFilter$/;"	i
vtkTriangleStrip	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTriangleStrip as vtkTriangleStrip$/;"	i
vtkTriangleStrip	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkTriangleStrip as vtkTriangleStrip$/;"	i
vtkTrimmedExtrusionFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkTrimmedExtrusionFilter as vtkTrimmedExtrusionFilter$/;"	i
vtkTrimmedExtrusionFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersModeling import vtkTrimmedExtrusionFilter as vtkTrimmedExtrusionFilter$/;"	i
vtkTubeFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkTubeFilter as vtkTubeFilter$/;"	i
vtkTubeFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkTubeFilter as vtkTubeFilter$/;"	i
vtkTypeInt32Array	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkTypeInt32Array as vtkTypeInt32Array$/;"	i
vtkTypeInt32Array	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkTypeInt32Array as vtkTypeInt32Array$/;"	i
vtkTypeInt64Array	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkTypeInt64Array as vtkTypeInt64Array$/;"	i
vtkTypeInt64Array	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkTypeInt64Array as vtkTypeInt64Array$/;"	i
vtkTypeUInt32Array	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkTypeUInt32Array as vtkTypeUInt32Array$/;"	i
vtkTypeUInt32Array	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkTypeUInt32Array as vtkTypeUInt32Array$/;"	i
vtkUnsignedCharArray	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkUnsignedCharArray as vtkUnsignedCharArray$/;"	i
vtkUnsignedCharArray	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkUnsignedCharArray as vtkUnsignedCharArray$/;"	i
vtkUnstructuredGrid	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkUnstructuredGrid as vtkUnstructuredGrid$/;"	i
vtkUnstructuredGrid	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkUnstructuredGrid as vtkUnstructuredGrid$/;"	i
vtkUnstructuredGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkUnstructuredGridReader as vtkUnstructuredGridReader$/;"	i
vtkUnstructuredGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkUnstructuredGridReader as vtkUnstructuredGridReader$/;"	i
vtkUnstructuredGridWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkUnstructuredGridWriter as vtkUnstructuredGridWriter$/;"	i
vtkUnstructuredGridWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOLegacy import vtkUnstructuredGridWriter as vtkUnstructuredGridWriter$/;"	i
vtkVRMLExporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExport import vtkVRMLExporter$/;"	i
vtkVRMLExporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOExport import vtkVRMLExporter$/;"	i
vtkVRMLImporter	build/lib/pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtkVRMLImporter$/;"	i
vtkVRMLImporter	pyvista/plotting/plotter.py	/^        from vtkmodules.vtkIOImport import vtkVRMLImporter$/;"	i
vtkVectorText	build/lib/pyvista/core/utilities/geometric_sources.py	/^from vtkmodules.vtkRenderingFreeType import vtkVectorText$/;"	i
vtkVectorText	build/lib/pyvista/demos/logo.py	/^    from vtkmodules.vtkRenderingFreeType import vtkVectorText$/;"	i
vtkVectorText	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingFreeType import vtkVectorText as vtkVectorText$/;"	i
vtkVectorText	pyvista/core/utilities/geometric_sources.py	/^from vtkmodules.vtkRenderingFreeType import vtkVectorText$/;"	i
vtkVectorText	pyvista/demos/logo.py	/^    from vtkmodules.vtkRenderingFreeType import vtkVectorText$/;"	i
vtkVectorText	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingFreeType import vtkVectorText as vtkVectorText$/;"	i
vtkVersion	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkVersion as vtkVersion$/;"	i
vtkVersion	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkVersion as vtkVersion$/;"	i
vtkVertex	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkVertex as vtkVertex$/;"	i
vtkVertex	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkVertex as vtkVertex$/;"	i
vtkViewport	build/lib/pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkRenderingCore import vtkViewport as vtkViewport$/;"	i
vtkViewport	pyvista/core/_vtk_core.py	/^    from vtkmodules.vtkRenderingCore import vtkViewport as vtkViewport$/;"	i
vtkVolume	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkVolume as vtkVolume$/;"	i
vtkVolume	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkVolume as vtkVolume$/;"	i
vtkVolumePicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingVolume import vtkVolumePicker as vtkVolumePicker$/;"	i
vtkVolumePicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingVolume import vtkVolumePicker as vtkVolumePicker$/;"	i
vtkVolumeProperty	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkVolumeProperty as vtkVolumeProperty$/;"	i
vtkVolumeProperty	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkVolumeProperty as vtkVolumeProperty$/;"	i
vtkVoxel	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkVoxel as vtkVoxel$/;"	i
vtkVoxel	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkVoxel as vtkVoxel$/;"	i
vtkWarpScalar	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkWarpScalar as vtkWarpScalar$/;"	i
vtkWarpScalar	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkWarpScalar as vtkWarpScalar$/;"	i
vtkWarpVector	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkWarpVector as vtkWarpVector$/;"	i
vtkWarpVector	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersGeneral import vtkWarpVector as vtkWarpVector$/;"	i
vtkWeakReference	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkWeakReference as vtkWeakReference$/;"	i
vtkWeakReference	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonCore import vtkWeakReference as vtkWeakReference$/;"	i
vtkWedge	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkWedge as vtkWedge$/;"	i
vtkWedge	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkCommonDataModel import vtkWedge as vtkWedge$/;"	i
vtkWindowToImageFilter	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkWindowToImageFilter as vtkWindowToImageFilter$/;"	i
vtkWindowToImageFilter	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkWindowToImageFilter as vtkWindowToImageFilter$/;"	i
vtkWindowedSincPolyDataFilter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkWindowedSincPolyDataFilter as vtkWindowedSincPolyDataFilter$/;"	i
vtkWindowedSincPolyDataFilter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkFiltersCore import vtkWindowedSincPolyDataFilter as vtkWindowedSincPolyDataFilter$/;"	i
vtkWorldPointPicker	build/lib/pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkWorldPointPicker as vtkWorldPointPicker$/;"	i
vtkWorldPointPicker	pyvista/plotting/_vtk.py	/^from vtkmodules.vtkRenderingCore import vtkWorldPointPicker as vtkWorldPointPicker$/;"	i
vtkXMLImageDataReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLImageDataReader as vtkXMLImageDataReader$/;"	i
vtkXMLImageDataReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLImageDataReader as vtkXMLImageDataReader$/;"	i
vtkXMLImageDataWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLImageDataWriter as vtkXMLImageDataWriter$/;"	i
vtkXMLImageDataWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLImageDataWriter as vtkXMLImageDataWriter$/;"	i
vtkXMLMultiBlockDataReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLMultiBlockDataReader as vtkXMLMultiBlockDataReader$/;"	i
vtkXMLMultiBlockDataReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLMultiBlockDataReader as vtkXMLMultiBlockDataReader$/;"	i
vtkXMLMultiBlockDataWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLMultiBlockDataWriter as vtkXMLMultiBlockDataWriter$/;"	i
vtkXMLMultiBlockDataWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLMultiBlockDataWriter as vtkXMLMultiBlockDataWriter$/;"	i
vtkXMLPImageDataReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPImageDataReader as vtkXMLPImageDataReader$/;"	i
vtkXMLPImageDataReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPImageDataReader as vtkXMLPImageDataReader$/;"	i
vtkXMLPRectilinearGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPRectilinearGridReader as vtkXMLPRectilinearGridReader$/;"	i
vtkXMLPRectilinearGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPRectilinearGridReader as vtkXMLPRectilinearGridReader$/;"	i
vtkXMLPUnstructuredGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPUnstructuredGridReader as vtkXMLPUnstructuredGridReader$/;"	i
vtkXMLPUnstructuredGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPUnstructuredGridReader as vtkXMLPUnstructuredGridReader$/;"	i
vtkXMLPartitionedDataSetReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPartitionedDataSetReader as vtkXMLPartitionedDataSetReader$/;"	i
vtkXMLPartitionedDataSetReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPartitionedDataSetReader as vtkXMLPartitionedDataSetReader$/;"	i
vtkXMLPolyDataReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPolyDataReader as vtkXMLPolyDataReader$/;"	i
vtkXMLPolyDataReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPolyDataReader as vtkXMLPolyDataReader$/;"	i
vtkXMLPolyDataWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPolyDataWriter as vtkXMLPolyDataWriter$/;"	i
vtkXMLPolyDataWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLPolyDataWriter as vtkXMLPolyDataWriter$/;"	i
vtkXMLReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLReader as vtkXMLReader$/;"	i
vtkXMLReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLReader as vtkXMLReader$/;"	i
vtkXMLRectilinearGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLRectilinearGridReader as vtkXMLRectilinearGridReader$/;"	i
vtkXMLRectilinearGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLRectilinearGridReader as vtkXMLRectilinearGridReader$/;"	i
vtkXMLRectilinearGridWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLRectilinearGridWriter as vtkXMLRectilinearGridWriter$/;"	i
vtkXMLRectilinearGridWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLRectilinearGridWriter as vtkXMLRectilinearGridWriter$/;"	i
vtkXMLStructuredGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLStructuredGridReader as vtkXMLStructuredGridReader$/;"	i
vtkXMLStructuredGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLStructuredGridReader as vtkXMLStructuredGridReader$/;"	i
vtkXMLStructuredGridWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLStructuredGridWriter as vtkXMLStructuredGridWriter$/;"	i
vtkXMLStructuredGridWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLStructuredGridWriter as vtkXMLStructuredGridWriter$/;"	i
vtkXMLTableReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLTableReader as vtkXMLTableReader$/;"	i
vtkXMLTableReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLTableReader as vtkXMLTableReader$/;"	i
vtkXMLTableWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLTableWriter as vtkXMLTableWriter$/;"	i
vtkXMLTableWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLTableWriter as vtkXMLTableWriter$/;"	i
vtkXMLUnstructuredGridReader	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLUnstructuredGridReader as vtkXMLUnstructuredGridReader$/;"	i
vtkXMLUnstructuredGridReader	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLUnstructuredGridReader as vtkXMLUnstructuredGridReader$/;"	i
vtkXMLUnstructuredGridWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLUnstructuredGridWriter as vtkXMLUnstructuredGridWriter$/;"	i
vtkXMLUnstructuredGridWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLUnstructuredGridWriter as vtkXMLUnstructuredGridWriter$/;"	i
vtkXMLWriter	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLWriter as vtkXMLWriter$/;"	i
vtkXMLWriter	pyvista/core/_vtk_core.py	/^from vtkmodules.vtkIOXML import vtkXMLWriter as vtkXMLWriter$/;"	i
vtk_array_to_tuple	tests/plotting/test_charts.py	/^def vtk_array_to_tuple(arr):$/;"	f
vtk_bit_array_to_char	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import vtk_bit_array_to_char as vtk_bit_array_to_char$/;"	i
vtk_bit_array_to_char	build/lib/pyvista/core/utilities/arrays.py	/^def vtk_bit_array_to_char(vtkarr_bint: _vtk.vtkBitArray) -> _vtk.vtkCharArray:$/;"	f
vtk_bit_array_to_char	pyvista/core/utilities/__init__.py	/^from .arrays import vtk_bit_array_to_char as vtk_bit_array_to_char$/;"	i
vtk_bit_array_to_char	pyvista/core/utilities/arrays.py	/^def vtk_bit_array_to_char(vtkarr_bint: _vtk.vtkBitArray) -> _vtk.vtkCharArray:$/;"	f
vtk_c3ub	build/lib/pyvista/plotting/colors.py	/^    def vtk_c3ub(self) -> _vtk.vtkColor3ub:  # numpydoc ignore=RT01$/;"	m	class:Color
vtk_c3ub	pyvista/plotting/colors.py	/^    def vtk_c3ub(self) -> _vtk.vtkColor3ub:  # numpydoc ignore=RT01$/;"	m	class:Color
vtk_id_list_to_array	build/lib/pyvista/core/dataset.py	/^from .utilities.arrays import vtk_id_list_to_array$/;"	i
vtk_id_list_to_array	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import vtk_id_list_to_array$/;"	i
vtk_id_list_to_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import vtk_id_list_to_array as vtk_id_list_to_array$/;"	i
vtk_id_list_to_array	build/lib/pyvista/core/utilities/arrays.py	/^def vtk_id_list_to_array(vtk_id_list: _vtk.vtkIdList) -> NumpyArray[int]:$/;"	f
vtk_id_list_to_array	pyvista/core/dataset.py	/^from .utilities.arrays import vtk_id_list_to_array$/;"	i
vtk_id_list_to_array	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.arrays import vtk_id_list_to_array$/;"	i
vtk_id_list_to_array	pyvista/core/utilities/__init__.py	/^from .arrays import vtk_id_list_to_array as vtk_id_list_to_array$/;"	i
vtk_id_list_to_array	pyvista/core/utilities/arrays.py	/^def vtk_id_list_to_array(vtk_id_list: _vtk.vtkIdList) -> NumpyArray[int]:$/;"	f
vtk_id_list_to_array	tests/core/test_utilities.py	/^from pyvista.core.utilities.arrays import vtk_id_list_to_array$/;"	i
vtk_id_list_to_array	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities.helpers import vtk_id_list_to_array  # noqa: F401$/;"	i
vtk_points	build/lib/pyvista/core/dataset.py	/^from .utilities.points import vtk_points$/;"	i
vtk_points	build/lib/pyvista/core/pointset.py	/^from .utilities.points import vtk_points$/;"	i
vtk_points	build/lib/pyvista/core/utilities/__init__.py	/^from .points import vtk_points as vtk_points$/;"	i
vtk_points	build/lib/pyvista/core/utilities/points.py	/^def vtk_points($/;"	f
vtk_points	pyvista/core/dataset.py	/^from .utilities.points import vtk_points$/;"	i
vtk_points	pyvista/core/pointset.py	/^from .utilities.points import vtk_points$/;"	i
vtk_points	pyvista/core/utilities/__init__.py	/^from .points import vtk_points as vtk_points$/;"	i
vtk_points	pyvista/core/utilities/points.py	/^def vtk_points($/;"	f
vtk_to_meshio_type	build/lib/pyvista/core/utilities/fileio.py	/^        from meshio._vtk_common import vtk_to_meshio_type$/;"	i
vtk_to_meshio_type	build/lib/pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk import vtk_to_meshio_type$/;"	i
vtk_to_meshio_type	pyvista/core/utilities/fileio.py	/^        from meshio._vtk_common import vtk_to_meshio_type$/;"	i
vtk_to_meshio_type	pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk import vtk_to_meshio_type$/;"	i
vtk_to_numpy	build/lib/pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import vtk_to_numpy as vtk_to_numpy$/;"	i
vtk_to_numpy	pyvista/core/_vtk_core.py	/^from vtkmodules.util.numpy_support import vtk_to_numpy as vtk_to_numpy$/;"	i
vtk_to_numpy	tests/core/test_cells.py	/^from vtk.util.numpy_support import vtk_to_numpy$/;"	i
vtk_to_numpy	tests/core/test_dataset.py	/^from vtk.util.numpy_support import vtk_to_numpy$/;"	i
vtk_to_numpy	tests/plotting/test_collection.py	/^from pyvista.core._vtk_core import vtk_to_numpy$/;"	i
vtk_type_to_numnodes	build/lib/pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk import vtk_type_to_numnodes$/;"	i
vtk_type_to_numnodes	build/lib/pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk_42 import vtk_type_to_numnodes$/;"	i
vtk_type_to_numnodes	pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk import vtk_type_to_numnodes$/;"	i
vtk_type_to_numnodes	pyvista/core/utilities/fileio.py	/^        from meshio.vtk._vtk_42 import vtk_type_to_numnodes$/;"	i
vtk_verbosity	build/lib/pyvista/__init__.py	/^from pyvista.core._vtk_core import vtk_verbosity as vtk_verbosity$/;"	i
vtk_verbosity	build/lib/pyvista/core/_vtk_core.py	/^vtk_verbosity = _VTKVerbosity()$/;"	v
vtk_verbosity	pyvista/__init__.py	/^from pyvista.core._vtk_core import vtk_verbosity as vtk_verbosity$/;"	i
vtk_verbosity	pyvista/core/_vtk_core.py	/^vtk_verbosity = _VTKVerbosity()$/;"	v
vtk_version_info	build/lib/pyvista/__init__.py	/^from pyvista.core._vtk_core import vtk_version_info as vtk_version_info$/;"	i
vtk_version_info	build/lib/pyvista/core/_vtk_core.py	/^vtk_version_info = VTKVersionInfo()$/;"	v
vtk_version_info	build/lib/pyvista/plotting/_property.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	build/lib/pyvista/plotting/charts.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	build/lib/pyvista/plotting/composite_mapper.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	build/lib/pyvista/plotting/render_window_interactor.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	build/lib/pyvista/plotting/renderer.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	pyvista/__init__.py	/^from pyvista.core._vtk_core import vtk_version_info as vtk_version_info$/;"	i
vtk_version_info	pyvista/core/_vtk_core.py	/^vtk_version_info = VTKVersionInfo()$/;"	v
vtk_version_info	pyvista/plotting/_property.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	pyvista/plotting/charts.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	pyvista/plotting/composite_mapper.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	pyvista/plotting/render_window_interactor.py	/^from pyvista import vtk_version_info$/;"	i
vtk_version_info	pyvista/plotting/renderer.py	/^from pyvista import vtk_version_info$/;"	i
vtk_widgets	build/lib/pyvista/trame/jupyter.py	/^from trame.widgets import vtk as vtk_widgets$/;"	i
vtk_widgets	pyvista/trame/jupyter.py	/^from trame.widgets import vtk as vtk_widgets$/;"	i
vtkcell_types	build/lib/pyvista/core/utilities/cell_type_helper.py	/^vtkcell_types = [$/;"	v
vtkcell_types	pyvista/core/utilities/cell_type_helper.py	/^vtkcell_types = [$/;"	v
vtkmatrix_from_array	build/lib/pyvista/core/grid.py	/^from .utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	build/lib/pyvista/core/utilities/__init__.py	/^from .arrays import vtkmatrix_from_array as vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	build/lib/pyvista/core/utilities/arrays.py	/^def vtkmatrix_from_array(array: NumpyArray[float]) -> _vtk.vtkMatrix3x3 | _vtk.vtkMatrix4x4:$/;"	f
vtkmatrix_from_array	build/lib/pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	build/lib/pyvista/plotting/lights.py	/^from pyvista.core.utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	build/lib/pyvista/plotting/prop3d.py	/^from pyvista.core.utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	pyvista/core/grid.py	/^from .utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	pyvista/core/utilities/__init__.py	/^from .arrays import vtkmatrix_from_array as vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	pyvista/core/utilities/arrays.py	/^def vtkmatrix_from_array(array: NumpyArray[float]) -> _vtk.vtkMatrix3x3 | _vtk.vtkMatrix4x4:$/;"	f
vtkmatrix_from_array	pyvista/core/utilities/transform.py	/^from pyvista.core.utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	pyvista/plotting/lights.py	/^from pyvista.core.utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	pyvista/plotting/prop3d.py	/^from pyvista.core.utilities.arrays import vtkmatrix_from_array$/;"	i
vtkmatrix_from_array	tests/core/test_validation.py	/^from pyvista.core.utilities.arrays import vtkmatrix_from_array$/;"	i
vue2_divider	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify2 import divider as vue2_divider$/;"	i
vue2_select	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify2 import select as vue2_select$/;"	i
vue2_slider	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify2 import slider as vue2_slider$/;"	i
vue2_text_field	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify2 import text_field as vue2_text_field$/;"	i
vue3_divider	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify3 import divider as vue3_divider$/;"	i
vue3_select	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify3 import select as vue3_select$/;"	i
vue3_slider	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify3 import slider as vue3_slider$/;"	i
vue3_text_field	tests/plotting/jupyter/test_trame.py	/^    from pyvista.trame.ui.vuetify3 import text_field as vue3_text_field$/;"	i
vuetify	build/lib/pyvista/trame/ui/vuetify2.py	/^from trame.widgets import vuetify$/;"	i
vuetify	build/lib/pyvista/trame/ui/vuetify3.py	/^from trame.widgets import vuetify3 as vuetify$/;"	i
vuetify	pyvista/trame/ui/vuetify2.py	/^from trame.widgets import vuetify$/;"	i
vuetify	pyvista/trame/ui/vuetify3.py	/^from trame.widgets import vuetify3 as vuetify$/;"	i
vuetify2_widgets	build/lib/pyvista/trame/jupyter.py	/^from trame.widgets import vuetify as vuetify2_widgets$/;"	i
vuetify2_widgets	pyvista/trame/jupyter.py	/^from trame.widgets import vuetify as vuetify2_widgets$/;"	i
vuetify3	examples_trame/advanced/contour.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/advanced/custom_ui.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/PyVistaLocalView.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/PyVistaRemoteLocalView.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/PyVistaRemoteView.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/actor_color.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/algorithm.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/file_viewer.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/mesh_scalars.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/multi_views.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/basic/ui_template.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3	examples_trame/validation/many_actors.py	/^from trame.widgets import vuetify3$/;"	i
vuetify3_widgets	build/lib/pyvista/trame/jupyter.py	/^from trame.widgets import vuetify3 as vuetify3_widgets$/;"	i
vuetify3_widgets	pyvista/trame/jupyter.py	/^from trame.widgets import vuetify3 as vuetify3_widgets$/;"	i
w	examples/99-advanced/sphere_eversion.py	/^w = 2  # arbitrary > 0$/;"	v
w_vec	examples/02-plot/spherical.py	/^w_vec = rng.random(u_vec.shape)$/;"	v
warnings	build/lib/pyvista/__init__.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/_vtk_core.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/cell.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/dataobject.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/dataset.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/datasetattributes.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/filters/data_object.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/filters/data_set.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/filters/image_data.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/filters/poly_data.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/grid.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/pointset.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/utilities/fileio.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/utilities/misc.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/utilities/parametric_objects.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/core/utilities/points.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/errors.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/examples/downloads.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/jupyter/notebook.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/_plotting.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/_property.py	/^            import warnings$/;"	i
warnings	build/lib/pyvista/plotting/axes_actor.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/cube_axes_actor.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/picking.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/plotter.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/plotting/__init__.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/render_window_interactor.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/renderer.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/texture.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/themes.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/plotting/utilities/xvfb.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/trame/jupyter.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/trame/ui/__init__.py	/^import warnings$/;"	i
warnings	build/lib/pyvista/utilities/__init__.py	/^import warnings$/;"	i
warnings	doc/source/conf.py	/^import warnings$/;"	i
warnings	pyvista/__init__.py	/^import warnings$/;"	i
warnings	pyvista/core/_vtk_core.py	/^import warnings$/;"	i
warnings	pyvista/core/cell.py	/^import warnings$/;"	i
warnings	pyvista/core/dataobject.py	/^import warnings$/;"	i
warnings	pyvista/core/dataset.py	/^import warnings$/;"	i
warnings	pyvista/core/datasetattributes.py	/^import warnings$/;"	i
warnings	pyvista/core/filters/data_object.py	/^import warnings$/;"	i
warnings	pyvista/core/filters/data_set.py	/^import warnings$/;"	i
warnings	pyvista/core/filters/image_data.py	/^import warnings$/;"	i
warnings	pyvista/core/filters/poly_data.py	/^import warnings$/;"	i
warnings	pyvista/core/grid.py	/^import warnings$/;"	i
warnings	pyvista/core/pointset.py	/^import warnings$/;"	i
warnings	pyvista/core/utilities/fileio.py	/^import warnings$/;"	i
warnings	pyvista/core/utilities/misc.py	/^import warnings$/;"	i
warnings	pyvista/core/utilities/parametric_objects.py	/^import warnings$/;"	i
warnings	pyvista/core/utilities/points.py	/^import warnings$/;"	i
warnings	pyvista/errors.py	/^import warnings$/;"	i
warnings	pyvista/examples/downloads.py	/^import warnings$/;"	i
warnings	pyvista/jupyter/notebook.py	/^import warnings$/;"	i
warnings	pyvista/plotting/_plotting.py	/^import warnings$/;"	i
warnings	pyvista/plotting/_property.py	/^            import warnings$/;"	i
warnings	pyvista/plotting/axes_actor.py	/^import warnings$/;"	i
warnings	pyvista/plotting/cube_axes_actor.py	/^import warnings$/;"	i
warnings	pyvista/plotting/picking.py	/^import warnings$/;"	i
warnings	pyvista/plotting/plotter.py	/^import warnings$/;"	i
warnings	pyvista/plotting/plotting/__init__.py	/^import warnings$/;"	i
warnings	pyvista/plotting/render_window_interactor.py	/^import warnings$/;"	i
warnings	pyvista/plotting/renderer.py	/^import warnings$/;"	i
warnings	pyvista/plotting/texture.py	/^import warnings$/;"	i
warnings	pyvista/plotting/themes.py	/^import warnings$/;"	i
warnings	pyvista/plotting/utilities/xvfb.py	/^import warnings$/;"	i
warnings	pyvista/trame/jupyter.py	/^import warnings$/;"	i
warnings	pyvista/trame/ui/__init__.py	/^import warnings$/;"	i
warnings	pyvista/utilities/__init__.py	/^import warnings$/;"	i
warnings	tests/core/test_polydata.py	/^import warnings$/;"	i
warnings	tests/core/test_utilities.py	/^import warnings$/;"	i
warnings	tests/doc/tst_doc_images.py	/^import warnings$/;"	i
warnings	tests/examples/test_download_files.py	/^import warnings$/;"	i
warp	examples/01-filter/compute_normals.py	/^warp = mesh.warp_by_scalar(factor=0.5e-5)$/;"	v
warp	examples/99-advanced/pump_bracket.py	/^warp = dataset.warp_by_vector('disp_2', factor=0.1)$/;"	v
warp_by_scalar	build/lib/pyvista/core/filters/data_set.py	/^    def warp_by_scalar(  # type: ignore[misc]$/;"	m	class:DataSetFilters
warp_by_scalar	pyvista/core/filters/data_set.py	/^    def warp_by_scalar(  # type: ignore[misc]$/;"	m	class:DataSetFilters
warp_by_vector	build/lib/pyvista/core/filters/data_set.py	/^    def warp_by_vector(  # type: ignore[misc]$/;"	m	class:DataSetFilters
warp_by_vector	pyvista/core/filters/data_set.py	/^    def warp_by_vector(  # type: ignore[misc]$/;"	m	class:DataSetFilters
warp_factors	examples/01-filter/warp_by_vector.py	/^warp_factors = [0, 1.5, 3.5, 5.5]$/;"	v
warp_low_pass_noise	examples/01-filter/image_fft_perlin_noise.py	/^def warp_low_pass_noise(cfreq, scalar_ptp=None):$/;"	f
warpby	examples/99-advanced/warp_by_vector_eigenmodes.py	/^warpby = 'eigenmode_00'$/;"	v
warped	examples/01-filter/warp_by_vector.py	/^warped = sphere.warp_by_vector()$/;"	v
warped	examples/99-advanced/warp_by_vector_eigenmodes.py	/^warped = vol.warp_by_vector(warpby, factor=0.04)$/;"	v
warped_high_pass	examples/01-filter/image_fft_perlin_noise.py	/^warped_high_pass = high_pass.warp_by_scalar()$/;"	v
warped_low_pass	examples/01-filter/image_fft_perlin_noise.py	/^warped_low_pass = low_pass.warp_by_scalar()$/;"	v
warped_noise	examples/01-filter/image_fft_perlin_noise.py	/^warped_noise = sampled.warp_by_scalar()$/;"	v
warped_subset	examples/01-filter/image_fft_perlin_noise.py	/^warped_subset = subset.warp_by_scalar(factor=0.0001)$/;"	v
water_level	examples/01-filter/sampling_functions_2d.py	/^water_level = z.max() - water_percent * diff$/;"	v
water_percent	examples/01-filter/sampling_functions_2d.py	/^water_percent = 0.7$/;"	v
wavelet	examples/02-plot/interpolate_before_map.py	/^wavelet = pv.Wavelet().clip('x')$/;"	v
weakref	build/lib/pyvista/core/utilities/reader.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/plotting/charts.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/plotting/composite_mapper.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/plotting/picking.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/plotting/plotter.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/plotting/render_passes.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/plotting/render_window_interactor.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/plotting/scalar_bars.py	/^import weakref$/;"	i
weakref	build/lib/pyvista/trame/views.py	/^import weakref$/;"	i
weakref	pyvista/core/utilities/reader.py	/^import weakref$/;"	i
weakref	pyvista/plotting/charts.py	/^import weakref$/;"	i
weakref	pyvista/plotting/composite_mapper.py	/^import weakref$/;"	i
weakref	pyvista/plotting/picking.py	/^import weakref$/;"	i
weakref	pyvista/plotting/plotter.py	/^import weakref$/;"	i
weakref	pyvista/plotting/render_passes.py	/^import weakref$/;"	i
weakref	pyvista/plotting/render_window_interactor.py	/^import weakref$/;"	i
weakref	pyvista/plotting/scalar_bars.py	/^import weakref$/;"	i
weakref	pyvista/trame/views.py	/^import weakref$/;"	i
weakref	tests/core/test_composite.py	/^import weakref$/;"	i
weakref	tests/core/test_grid.py	/^import weakref$/;"	i
weakref	tests/plotting/test_charts.py	/^import weakref$/;"	i
weakref	tests/plotting/test_collection.py	/^import weakref$/;"	i
wheel_zoom_callback	build/lib/pyvista/plotting/render_window_interactor.py	/^            def wheel_zoom_callback(_obj, event):  # pragma: no cover$/;"	f	function:RenderWindowInteractor.enable_terrain_style
wheel_zoom_callback	pyvista/plotting/render_window_interactor.py	/^            def wheel_zoom_callback(_obj, event):  # pragma: no cover$/;"	f	function:RenderWindowInteractor.enable_terrain_style
where_is	build/lib/pyvista/plotting/plotter.py	/^    def where_is(self, name) -> list[tuple[int, int]]:$/;"	m	class:BasePlotter
where_is	pyvista/plotting/plotter.py	/^    def where_is(self, name) -> list[tuple[int, int]]:$/;"	m	class:BasePlotter
whitespace	tests/core/test_datasetattributes.py	/^from string import whitespace$/;"	i
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageEllipsoidSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageGaussianSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageMandelbrotSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageNoiseSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageSinusoidSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageEllipsoidSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageGaussianSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageMandelbrotSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageNoiseSource
whole_extent	build/lib/pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageSinusoidSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageEllipsoidSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageGaussianSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageMandelbrotSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageNoiseSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self) -> Sequence[int]:$/;"	m	class:ImageSinusoidSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageEllipsoidSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageGaussianSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageMandelbrotSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageNoiseSource
whole_extent	pyvista/core/utilities/image_sources.py	/^    def whole_extent(self, whole_extent: Sequence[int]) -> None:$/;"	m	class:ImageSinusoidSource
widget	examples/99-advanced/customization_trame_toolbar.py	/^widget = pl.show(jupyter_kwargs=dict(add_menu_items=custom_tools), return_viewer=True)$/;"	v
widgets	tests/plotting/test_widgets.py	/^from pyvista.plotting import widgets$/;"	i
width	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def width(self: Text3DSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
width	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def width(self: Text3DSource, width: float | None) -> None:$/;"	m	class:Text3DSource
width	build/lib/pyvista/plotting/charts.py	/^    def width(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
width	build/lib/pyvista/plotting/charts.py	/^    def width(self, val) -> None:$/;"	m	class:Pen
width	build/lib/pyvista/plotting/renderer.py	/^    def width(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
width	build/lib/pyvista/plotting/themes.py	/^    def width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
width	build/lib/pyvista/plotting/themes.py	/^    def width(self, width: float):$/;"	m	class:_ColorbarConfig
width	examples/04-lights/shadows.py	/^width = rnge[0] * (1 + expand)$/;"	v
width	pyvista/core/utilities/geometric_sources.py	/^    def width(self: Text3DSource) -> float | None:  # numpydoc ignore=RT01$/;"	m	class:Text3DSource
width	pyvista/core/utilities/geometric_sources.py	/^    def width(self: Text3DSource, width: float | None) -> None:$/;"	m	class:Text3DSource
width	pyvista/plotting/charts.py	/^    def width(self):  # numpydoc ignore=RT01$/;"	m	class:Pen
width	pyvista/plotting/charts.py	/^    def width(self, val) -> None:$/;"	m	class:Pen
width	pyvista/plotting/renderer.py	/^    def width(self):  # numpydoc ignore=RT01$/;"	m	class:Renderer
width	pyvista/plotting/themes.py	/^    def width(self) -> float:  # numpydoc ignore=RT01$/;"	m	class:_ColorbarConfig
width	pyvista/plotting/themes.py	/^    def width(self, width: float):$/;"	m	class:_ColorbarConfig
wind_level	examples/02-plot/spherical.py	/^wind_level = [RADIUS * 1.2]$/;"	v
window_size	build/lib/pyvista/_plot.py	/^        window_size=window_size,$/;"	v
window_size	build/lib/pyvista/demos/logo.py	/^        window_size = [960, 400]$/;"	v
window_size	build/lib/pyvista/plotting/plotter.py	/^    def window_size(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
window_size	build/lib/pyvista/plotting/plotter.py	/^    def window_size(self, window_size):$/;"	m	class:BasePlotter
window_size	build/lib/pyvista/plotting/themes.py	/^    def window_size(self) -> list[int]:  # numpydoc ignore=RT01$/;"	m	class:Theme
window_size	build/lib/pyvista/plotting/themes.py	/^    def window_size(self, window_size: list[int]):$/;"	m	class:Theme
window_size	pyvista/_plot.py	/^        window_size=window_size,$/;"	v
window_size	pyvista/demos/logo.py	/^        window_size = [960, 400]$/;"	v
window_size	pyvista/plotting/plotter.py	/^    def window_size(self):  # numpydoc ignore=RT01$/;"	m	class:BasePlotter
window_size	pyvista/plotting/plotter.py	/^    def window_size(self, window_size):$/;"	m	class:BasePlotter
window_size	pyvista/plotting/themes.py	/^    def window_size(self) -> list[int]:  # numpydoc ignore=RT01$/;"	m	class:Theme
window_size	pyvista/plotting/themes.py	/^    def window_size(self, window_size: list[int]):$/;"	m	class:Theme
window_size	tests/plotting/test_picking.py	/^        window_size=(100, 100),$/;"	v	class:test_element_picking.Tracker
window_size	tests/plotting/test_picking.py	/^        window_size=(100, 100),$/;"	v	class:test_point_picking_window.Tracker
window_size	tests/plotting/test_picking.py	/^        window_size=(width, height),$/;"	v	class:test_single_cell_picking.PickCallback
window_size_context	build/lib/pyvista/plotting/plotter.py	/^    def window_size_context(self, window_size=None) -> Iterator[BasePlotter]:$/;"	m	class:BasePlotter
window_size_context	pyvista/plotting/plotter.py	/^    def window_size_context(self, window_size=None) -> Iterator[BasePlotter]:$/;"	m	class:BasePlotter
world_focal_point	build/lib/pyvista/plotting/lights.py	/^    def world_focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Light
world_focal_point	pyvista/plotting/lights.py	/^    def world_focal_point(self):  # numpydoc ignore=RT01$/;"	m	class:Light
world_position	build/lib/pyvista/plotting/lights.py	/^    def world_position(self):  # numpydoc ignore=RT01$/;"	m	class:Light
world_position	pyvista/plotting/lights.py	/^    def world_position(self):  # numpydoc ignore=RT01$/;"	m	class:Light
wrap	build/lib/pyvista/core/composite.py	/^from .utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/dataobject.py	/^from .utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/filters/__init__.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/filters/composite.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/partitioned.py	/^from .utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/__init__.py	/^from .helpers import wrap as wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/features.py	/^from .helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/fileio.py	/^    from .helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/geometric_objects.py	/^from .helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap($/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: None) -> None: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: NumpyArray[float]) -> PolyData | ImageData: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: Trimesh) -> PolyData: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkAbstractArray) -> pyvista_ndarray: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkDataObject) -> DataObject: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkDataSet) -> DataSet: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkExplicitStructuredGrid) -> ExplicitStructuredGrid: ...  # type: ignore[overload-overlap]$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkImageData) -> ImageData: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkMultiBlockDataSet) -> MultiBlock: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkPartitionedDataSet) -> PartitionedDataSet: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkPointSet) -> PointSet: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkPolyData) -> PolyData: ...  # type: ignore[overload-overlap]$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkRectilinearGrid) -> RectilinearGrid: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkStructuredGrid) -> StructuredGrid: ...  # type: ignore[overload-overlap]$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkStructuredPoints) -> ImageData: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkTable) -> Table: ...$/;"	f
wrap	build/lib/pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkUnstructuredGrid) -> UnstructuredGrid: ...  # type: ignore[overload-overlap]$/;"	f
wrap	build/lib/pyvista/core/utilities/image_sources.py	/^from .helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/parametric_objects.py	/^from .helpers import wrap$/;"	i
wrap	build/lib/pyvista/core/utilities/reader.py	/^from .helpers import wrap$/;"	i
wrap	build/lib/pyvista/plotting/mapper.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/plotting/plotter.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/plotting/renderer.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/plotting/texture.py	/^    def wrap(self) -> Texture.WrapType:  # numpydoc ignore=RT01$/;"	m	class:Texture
wrap	build/lib/pyvista/plotting/texture.py	/^    def wrap(self, value: Texture.WrapType | int):$/;"	m	class:Texture
wrap	build/lib/pyvista/plotting/utilities/algorithms.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	build/lib/pyvista/plotting/utilities/regression.py	/^    from pyvista import wrap$/;"	i
wrap	build/lib/pyvista/plotting/utilities/regression.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/composite.py	/^from .utilities.helpers import wrap$/;"	i
wrap	pyvista/core/dataobject.py	/^from .utilities.helpers import wrap$/;"	i
wrap	pyvista/core/filters/__init__.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/filters/composite.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/filters/data_object.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/filters/data_set.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/filters/image_data.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/filters/poly_data.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/partitioned.py	/^from .utilities.helpers import wrap$/;"	i
wrap	pyvista/core/utilities/__init__.py	/^from .helpers import wrap as wrap$/;"	i
wrap	pyvista/core/utilities/features.py	/^from .helpers import wrap$/;"	i
wrap	pyvista/core/utilities/fileio.py	/^    from .helpers import wrap$/;"	i
wrap	pyvista/core/utilities/geometric_objects.py	/^from .helpers import wrap$/;"	i
wrap	pyvista/core/utilities/geometric_sources.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/core/utilities/helpers.py	/^def wrap($/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: None) -> None: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: NumpyArray[float]) -> PolyData | ImageData: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: Trimesh) -> PolyData: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkAbstractArray) -> pyvista_ndarray: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkDataObject) -> DataObject: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkDataSet) -> DataSet: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkExplicitStructuredGrid) -> ExplicitStructuredGrid: ...  # type: ignore[overload-overlap]$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkImageData) -> ImageData: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkMultiBlockDataSet) -> MultiBlock: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkPartitionedDataSet) -> PartitionedDataSet: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkPointSet) -> PointSet: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkPolyData) -> PolyData: ...  # type: ignore[overload-overlap]$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkRectilinearGrid) -> RectilinearGrid: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkStructuredGrid) -> StructuredGrid: ...  # type: ignore[overload-overlap]$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkStructuredPoints) -> ImageData: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkTable) -> Table: ...$/;"	f
wrap	pyvista/core/utilities/helpers.py	/^def wrap(dataset: _vtk.vtkUnstructuredGrid) -> UnstructuredGrid: ...  # type: ignore[overload-overlap]$/;"	f
wrap	pyvista/core/utilities/image_sources.py	/^from .helpers import wrap$/;"	i
wrap	pyvista/core/utilities/parametric_objects.py	/^from .helpers import wrap$/;"	i
wrap	pyvista/core/utilities/reader.py	/^from .helpers import wrap$/;"	i
wrap	pyvista/plotting/mapper.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/plotting/plotter.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/plotting/renderer.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/plotting/texture.py	/^    def wrap(self) -> Texture.WrapType:  # numpydoc ignore=RT01$/;"	m	class:Texture
wrap	pyvista/plotting/texture.py	/^    def wrap(self, value: Texture.WrapType | int):$/;"	m	class:Texture
wrap	pyvista/plotting/utilities/algorithms.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap	pyvista/plotting/utilities/regression.py	/^    from pyvista import wrap$/;"	i
wrap	pyvista/plotting/utilities/regression.py	/^from pyvista.core.utilities.helpers import wrap$/;"	i
wrap_image_array	build/lib/pyvista/plotting/utilities/__init__.py	/^from .regression import wrap_image_array as wrap_image_array$/;"	i
wrap_image_array	build/lib/pyvista/plotting/utilities/regression.py	/^def wrap_image_array(arr):$/;"	f
wrap_image_array	pyvista/plotting/utilities/__init__.py	/^from .regression import wrap_image_array as wrap_image_array$/;"	i
wrap_image_array	pyvista/plotting/utilities/regression.py	/^def wrap_image_array(arr):$/;"	f
wrap_nested	build/lib/pyvista/core/composite.py	/^    def wrap_nested(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
wrap_nested	build/lib/pyvista/core/partitioned.py	/^    def wrap_nested(self) -> None:$/;"	m	class:PartitionedDataSet
wrap_nested	pyvista/core/composite.py	/^    def wrap_nested(self: MultiBlock) -> None:$/;"	m	class:MultiBlock
wrap_nested	pyvista/core/partitioned.py	/^    def wrap_nested(self) -> None:$/;"	m	class:PartitionedDataSet
wrapper	build/lib/pyvista/core/utilities/misc.py	/^    def wrapper(*args, **kwargs):  # noqa: ANN202$/;"	f	function:threaded
wrapper	pyvista/core/utilities/misc.py	/^    def wrapper(*args, **kwargs):  # noqa: ANN202$/;"	f	function:threaded
wrapper	tests/conftest.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:flaky_test
wraps	build/lib/pyvista/core/filters/unstructured_grid.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/core/grid.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/core/pointset.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/core/utilities/reader.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/plotting/charts.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/plotting/picking.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/plotting/plotter.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/plotting/prop3d.py	/^from functools import wraps$/;"	i
wraps	build/lib/pyvista/plotting/renderer.py	/^from functools import wraps$/;"	i
wraps	pyvista/core/filters/unstructured_grid.py	/^from functools import wraps$/;"	i
wraps	pyvista/core/grid.py	/^from functools import wraps$/;"	i
wraps	pyvista/core/pointset.py	/^from functools import wraps$/;"	i
wraps	pyvista/core/utilities/reader.py	/^from functools import wraps$/;"	i
wraps	pyvista/plotting/charts.py	/^from functools import wraps$/;"	i
wraps	pyvista/plotting/picking.py	/^from functools import wraps$/;"	i
wraps	pyvista/plotting/plotter.py	/^from functools import wraps$/;"	i
wraps	pyvista/plotting/prop3d.py	/^from functools import wraps$/;"	i
wraps	pyvista/plotting/renderer.py	/^from functools import wraps$/;"	i
write	build/lib/pyvista/ext/coverage.py	/^    def write(self, *ignored: Any) -> None:$/;"	m	class:CoverageBuilder
write	pyvista/ext/coverage.py	/^    def write(self, *ignored: Any) -> None:$/;"	m	class:CoverageBuilder
write_c_coverage	build/lib/pyvista/ext/coverage.py	/^    def write_c_coverage(self) -> None:$/;"	m	class:CoverageBuilder
write_c_coverage	pyvista/ext/coverage.py	/^    def write_c_coverage(self) -> None:$/;"	m	class:CoverageBuilder
write_frame	build/lib/pyvista/plotting/plotter.py	/^    def write_frame(self) -> None:$/;"	m	class:BasePlotter
write_frame	pyvista/plotting/plotter.py	/^    def write_frame(self) -> None:$/;"	m	class:BasePlotter
write_header	build/lib/pyvista/ext/coverage.py	/^def write_header(f: IO, text: str, char: str = '-') -> None:$/;"	f
write_header	pyvista/ext/coverage.py	/^def write_header(f: IO, text: str, char: str = '-') -> None:$/;"	f
write_html	build/lib/pyvista/plotting/plotter.py	/^            from trame_vtk.tools.vtksz2html import write_html$/;"	i
write_html	build/lib/pyvista/trame/views.py	/^from trame_vtk.tools.vtksz2html import write_html$/;"	i
write_html	pyvista/plotting/plotter.py	/^            from trame_vtk.tools.vtksz2html import write_html$/;"	i
write_html	pyvista/trame/views.py	/^from trame_vtk.tools.vtksz2html import write_html$/;"	i
write_py_coverage	build/lib/pyvista/ext/coverage.py	/^    def write_py_coverage(self) -> None:$/;"	m	class:CoverageBuilder
write_py_coverage	pyvista/ext/coverage.py	/^    def write_py_coverage(self) -> None:$/;"	m	class:CoverageBuilder
wslink_backend	build/lib/pyvista/trame/jupyter.py	/^            wslink_backend = 'jupyter'$/;"	v
wslink_backend	build/lib/pyvista/trame/jupyter.py	/^        wslink_backend = 'aiohttp'$/;"	v
wslink_backend	pyvista/trame/jupyter.py	/^            wslink_backend = 'jupyter'$/;"	v
wslink_backend	pyvista/trame/jupyter.py	/^        wslink_backend = 'aiohttp'$/;"	v
x	build/lib/pyvista/core/grid.py	/^    def x(self: Self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
x	build/lib/pyvista/core/grid.py	/^    def x(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
x	build/lib/pyvista/core/grid.py	/^    def x(self: Self, coords: VectorLike[float]) -> None:$/;"	m	class:RectilinearGrid
x	build/lib/pyvista/core/pointset.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
x	build/lib/pyvista/core/utilities/geometric_sources.py	/^    x = 0$/;"	v	class:_AxisEnum
x	build/lib/pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
x	build/lib/pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
x	build/lib/pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:LinePlot2D
x	build/lib/pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
x	build/lib/pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:StackPlot
x	examples/00-load/create_structured_surface.py	/^x = np.arange(-10, 10, 0.25)$/;"	v
x	examples/00-load/create_tri_surface.py	/^x = np.arange(10, dtype=float)$/;"	v
x	examples/00-load/create_tri_surface.py	/^x = np.linspace(-200, 200, num=n) + rng.uniform(-5, 5, size=n)$/;"	v
x	examples/01-filter/streamlines.py	/^x = mesh.points[:, 0]$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(0, 11)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(1, 11)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(1, 13)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.arange(11)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = np.linspace(0, 10, 1000)$/;"	v
x	examples/02-plot/chart_basics.py	/^x = rng.standard_normal(100)$/;"	v
x	examples/02-plot/distance_along_spline.py	/^x = r * np.sin(theta)$/;"	v
x	examples/02-plot/gif.py	/^x = np.arange(-10, 10, 0.5)$/;"	v
x	examples/02-plot/movie_glyphs.py	/^x = np.arange(-10, 10, 1, dtype=float)$/;"	v
x	examples/02-plot/spherical.py	/^x = np.arange(0, 360, 5)$/;"	v
x	examples/02-plot/texture.py	/^x = np.arange(-10, 10, 0.25)$/;"	v
x	examples/03-widgets/sphere_widget.py	/^x = np.linspace(xmin, xmax, num=25)$/;"	v
x	examples/99-advanced/warp_by_vector_eigenmodes.py	/^x = np.linspace(-l1 \/ 2.0, l1 \/ 2.0, nx)$/;"	v
x	pyvista/core/grid.py	/^    def x(self: Self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
x	pyvista/core/grid.py	/^    def x(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
x	pyvista/core/grid.py	/^    def x(self: Self, coords: VectorLike[float]) -> None:$/;"	m	class:RectilinearGrid
x	pyvista/core/pointset.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
x	pyvista/core/utilities/geometric_sources.py	/^    x = 0$/;"	v	class:_AxisEnum
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:LinePlot2D
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
x	pyvista/plotting/charts.py	/^    def x(self):  # numpydoc ignore=RT01$/;"	m	class:StackPlot
x_axis	build/lib/pyvista/plotting/charts.py	/^    def x_axis(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_axis	pyvista/plotting/charts.py	/^    def x_axis(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_axis_label	build/lib/pyvista/plotting/axes_actor.py	/^    def x_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_label	build/lib/pyvista/plotting/axes_actor.py	/^    def x_axis_label(self, label: str):$/;"	m	class:AxesActor
x_axis_label	pyvista/plotting/axes_actor.py	/^    def x_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_label	pyvista/plotting/axes_actor.py	/^    def x_axis_label(self, label: str):$/;"	m	class:AxesActor
x_axis_minor_tick_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_minor_tick_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_axis_minor_tick_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
x_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_minor_tick_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
x_axis_range	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_axis_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_range	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_axis_range(self, value: tuple[float, float]):$/;"	m	class:CubeAxesActor
x_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_range(self, value: tuple[float, float]):$/;"	m	class:CubeAxesActor
x_axis_shaft_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def x_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_shaft_properties	pyvista/plotting/axes_actor.py	/^    def x_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_tip_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def x_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_tip_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def x_axis_tip_properties(self, properties: ActorProperties):$/;"	m	class:AxesActor
x_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def x_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def x_axis_tip_properties(self, properties: ActorProperties):$/;"	m	class:AxesActor
x_axis_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_axis_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
x_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_axis_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
x_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
x_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_color(self) -> tuple[Color, Color]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
x_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_color(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
x_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_color(self, color):$/;"	m	class:_XYZAssembly
x_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_color(self, color: ColorLike | Sequence[ColorLike]):$/;"	m	class:AxesAssembly
x_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_color(self, color: ColorLike):$/;"	m	class:PlanesAssembly
x_color	build/lib/pyvista/plotting/themes.py	/^    def x_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
x_color	build/lib/pyvista/plotting/themes.py	/^    def x_color(self, color: ColorLike):$/;"	m	class:_AxesConfig
x_color	build/lib/pyvista/plotting/tools.py	/^    x_color = Color(x_color, default_color=pyvista.global_theme.axes.x_color)$/;"	v
x_color	pyvista/plotting/axes_assembly.py	/^    def x_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
x_color	pyvista/plotting/axes_assembly.py	/^    def x_color(self) -> tuple[Color, Color]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
x_color	pyvista/plotting/axes_assembly.py	/^    def x_color(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
x_color	pyvista/plotting/axes_assembly.py	/^    def x_color(self, color):$/;"	m	class:_XYZAssembly
x_color	pyvista/plotting/axes_assembly.py	/^    def x_color(self, color: ColorLike | Sequence[ColorLike]):$/;"	m	class:AxesAssembly
x_color	pyvista/plotting/axes_assembly.py	/^    def x_color(self, color: ColorLike):$/;"	m	class:PlanesAssembly
x_color	pyvista/plotting/themes.py	/^    def x_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
x_color	pyvista/plotting/themes.py	/^    def x_color(self, color: ColorLike):$/;"	m	class:_AxesConfig
x_color	pyvista/plotting/tools.py	/^    x_color = Color(x_color, default_color=pyvista.global_theme.axes.x_color)$/;"	v
x_coord	examples/99-advanced/fea_hertzian_contact_pressure.py	/^x_coord = 0.1 - sampled.points[:, 0]$/;"	v
x_face_color	build/lib/pyvista/plotting/tools.py	/^    x_face_color = Color(x_face_color)$/;"	v
x_face_color	pyvista/plotting/tools.py	/^    x_face_color = Color(x_face_color)$/;"	v
x_label	build/lib/pyvista/plotting/axes_actor.py	/^    def x_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_label	build/lib/pyvista/plotting/axes_actor.py	/^    def x_label(self, label: str):$/;"	m	class:AxesActor
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self) -> tuple[str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self, label):$/;"	m	class:_XYZAssembly
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self, label: str):$/;"	m	class:AxesAssembly
x_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def x_label(self, label: str):$/;"	m	class:PlanesAssembly
x_label	build/lib/pyvista/plotting/charts.py	/^    def x_label(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_label	build/lib/pyvista/plotting/charts.py	/^    def x_label(self, val) -> None:$/;"	m	class:Chart2D
x_label	examples/02-plot/chart_overlays.py	/^    x_label='Time (s)',$/;"	v
x_label	pyvista/plotting/axes_actor.py	/^    def x_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
x_label	pyvista/plotting/axes_actor.py	/^    def x_label(self, label: str):$/;"	m	class:AxesActor
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self) -> tuple[str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self, label):$/;"	m	class:_XYZAssembly
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self, label: str):$/;"	m	class:AxesAssembly
x_label	pyvista/plotting/axes_assembly.py	/^    def x_label(self, label: str):$/;"	m	class:PlanesAssembly
x_label	pyvista/plotting/charts.py	/^    def x_label(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_label	pyvista/plotting/charts.py	/^    def x_label(self, val) -> None:$/;"	m	class:Chart2D
x_label_format	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_label_format	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_label_format(self, value: str):$/;"	m	class:CubeAxesActor
x_label_format	pyvista/plotting/cube_axes_actor.py	/^    def x_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_label_format	pyvista/plotting/cube_axes_actor.py	/^    def x_label_format(self, value: str):$/;"	m	class:CubeAxesActor
x_label_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_label_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_label_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
x_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def x_label_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
x_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_labels(self) -> list[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_labels	pyvista/plotting/cube_axes_actor.py	/^    def x_labels(self) -> list[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def x_length(self: CubeSource) -> float:$/;"	m	class:CubeSource
x_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def x_length(self: CubeSource, x_length: float) -> None:$/;"	m	class:CubeSource
x_length	pyvista/core/utilities/geometric_sources.py	/^    def x_length(self: CubeSource) -> float:$/;"	m	class:CubeSource
x_length	pyvista/core/utilities/geometric_sources.py	/^    def x_length(self: CubeSource, x_length: float) -> None:$/;"	m	class:CubeSource
x_range	build/lib/pyvista/plotting/charts.py	/^    def x_range(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_range	build/lib/pyvista/plotting/charts.py	/^    def x_range(self, val) -> None:$/;"	m	class:Chart2D
x_range	pyvista/plotting/charts.py	/^    def x_range(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
x_range	pyvista/plotting/charts.py	/^    def x_range(self, val) -> None:$/;"	m	class:Chart2D
x_size	examples/02-plot/bounds.py	/^x_size = bnds.x_max - bnds.x_min$/;"	v
x_title	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_title	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def x_title(self, value: str):$/;"	m	class:CubeAxesActor
x_title	pyvista/plotting/cube_axes_actor.py	/^    def x_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
x_title	pyvista/plotting/cube_axes_actor.py	/^    def x_title(self, value: str):$/;"	m	class:CubeAxesActor
xc	examples/02-plot/texture.py	/^xc = np.linspace(0, axial_num_puppies, curvsurf.dimensions[0])$/;"	v
xcorn	examples/00-load/create_explicit_structured_grid.py	/^xcorn = np.arange(0, (ni + 1) * si, si)$/;"	v
xcorn	examples/00-load/create_explicit_structured_grid.py	/^xcorn = np.repeat(xcorn, 2)$/;"	v
xcorn	examples/00-load/create_explicit_structured_grid.py	/^xcorn = np.tile(xcorn, 4 * nj * nk)$/;"	v
xcorn	examples/00-load/create_explicit_structured_grid.py	/^xcorn = xcorn[1:-1]$/;"	v
xfail_distortion_returns_one	tests/core/test_utilities.py	/^def xfail_distortion_returns_one(info):$/;"	f
xfail_wedge_negative_volume	tests/core/test_utilities.py	/^def xfail_wedge_negative_volume(info):$/;"	f
xfailed	tests/test_conftest.py	/^    xfailed = _ReportDescriptor()$/;"	v	class:RunResultsReport
xis	examples/99-advanced/sphere_eversion.py	/^xis = np.linspace(0, 1, n_steps)$/;"	v
xis	examples/99-advanced/sphere_eversion.py	/^xis = np.linspace(1, 0, n_steps + 1)[1:]$/;"	v
xml	build/lib/pyvista/plotting/camera.py	/^import xml.dom.minidom as md$/;"	i
xml	pyvista/plotting/camera.py	/^import xml.dom.minidom as md$/;"	i
xpassed	tests/test_conftest.py	/^    xpassed = _ReportDescriptor()$/;"	v	class:RunResultsReport
xtitle	examples/01-filter/image_fft_perlin_noise.py	/^    xtitle='X Frequency',$/;"	v
xvfb	tests/namespace/test_utilities_namespace.py	/^        from pyvista.utilities import xvfb  # noqa: F401$/;"	i
xvfb	tests/plotting/test_utilities.py	/^from pyvista.plotting.utilities import xvfb$/;"	i
xx	examples/00-load/terrain_mesh.py	/^xx = np.repeat(terrain.x, len(z_cells), axis=-1)$/;"	v
xx_bounds	examples/02-plot/spherical.py	/^xx_bounds = _cell_bounds(x)$/;"	v
y	build/lib/pyvista/core/grid.py	/^    def y(self: Self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
y	build/lib/pyvista/core/grid.py	/^    def y(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
y	build/lib/pyvista/core/grid.py	/^    def y(self: Self, coords: VectorLike[float]) -> None:$/;"	m	class:RectilinearGrid
y	build/lib/pyvista/core/pointset.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
y	build/lib/pyvista/core/utilities/geometric_sources.py	/^    y = 1$/;"	v	class:_AxisEnum
y	build/lib/pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
y	build/lib/pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:LinePlot2D
y	build/lib/pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
y	examples/00-load/create_structured_surface.py	/^y = np.arange(-10, 10, 0.25)$/;"	v
y	examples/00-load/create_tri_surface.py	/^y = np.linspace(-200, 200, num=n) + rng.uniform(-5, 5, size=n)$/;"	v
y	examples/01-filter/streamlines.py	/^y = mesh.points[:, 1]$/;"	v
y	examples/02-plot/chart_basics.py	/^y = np.sin(x**2)$/;"	v
y	examples/02-plot/chart_basics.py	/^y = rng.integers(-5, 6, 11)$/;"	v
y	examples/02-plot/chart_basics.py	/^y = rng.standard_normal(100)$/;"	v
y	examples/02-plot/distance_along_spline.py	/^y = r * np.cos(theta)$/;"	v
y	examples/02-plot/gif.py	/^y = np.arange(-10, 10, 0.5)$/;"	v
y	examples/02-plot/movie_glyphs.py	/^y = np.arange(-10, 10, 1, dtype=float)$/;"	v
y	examples/02-plot/spherical.py	/^y = np.arange(-90, 91, 10)$/;"	v
y	examples/02-plot/texture.py	/^y = np.arange(-10, 10, 0.25)$/;"	v
y	examples/03-widgets/sphere_widget.py	/^y = np.linspace(ymin, ymax, num=25)$/;"	v
y	examples/99-advanced/warp_by_vector_eigenmodes.py	/^y = np.linspace(-l2 \/ 2.0, l2 \/ 2.0, ny)$/;"	v
y	pyvista/core/grid.py	/^    def y(self: Self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
y	pyvista/core/grid.py	/^    def y(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
y	pyvista/core/grid.py	/^    def y(self: Self, coords: VectorLike[float]) -> None:$/;"	m	class:RectilinearGrid
y	pyvista/core/pointset.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
y	pyvista/core/utilities/geometric_sources.py	/^    y = 1$/;"	v	class:_AxisEnum
y	pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:BarPlot
y	pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:LinePlot2D
y	pyvista/plotting/charts.py	/^    def y(self):  # numpydoc ignore=RT01$/;"	m	class:ScatterPlot2D
y1	build/lib/pyvista/plotting/charts.py	/^    def y1(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
y1	examples/02-plot/chart_basics.py	/^y1 = np.cos(x) + np.sin(3 * x)$/;"	v
y1	examples/02-plot/chart_basics.py	/^y1 = rng.integers(1e2, 1e4, 12)$/;"	v
y1	pyvista/plotting/charts.py	/^    def y1(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
y2	build/lib/pyvista/plotting/charts.py	/^    def y2(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
y2	examples/02-plot/chart_basics.py	/^y2 = 0.1 * (x - 5)$/;"	v
y2	examples/02-plot/chart_basics.py	/^y2 = rng.integers(1e2, 1e4, 12)$/;"	v
y2	pyvista/plotting/charts.py	/^    def y2(self):  # numpydoc ignore=RT01$/;"	m	class:AreaPlot
y_axis	build/lib/pyvista/plotting/charts.py	/^    def y_axis(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_axis	pyvista/plotting/charts.py	/^    def y_axis(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_axis_label	build/lib/pyvista/plotting/axes_actor.py	/^    def y_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_label	build/lib/pyvista/plotting/axes_actor.py	/^    def y_axis_label(self, label: str):$/;"	m	class:AxesActor
y_axis_label	pyvista/plotting/axes_actor.py	/^    def y_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_label	pyvista/plotting/axes_actor.py	/^    def y_axis_label(self, label: str):$/;"	m	class:AxesActor
y_axis_minor_tick_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_minor_tick_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_axis_minor_tick_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
y_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_minor_tick_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
y_axis_range	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_axis_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_range	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_axis_range(self, value: tuple[float, float]):$/;"	m	class:CubeAxesActor
y_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_range(self, value: tuple[float, float]):$/;"	m	class:CubeAxesActor
y_axis_shaft_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def y_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_shaft_properties	pyvista/plotting/axes_actor.py	/^    def y_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_tip_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def y_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_tip_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def y_axis_tip_properties(self, properties: ActorProperties):$/;"	m	class:AxesActor
y_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def y_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def y_axis_tip_properties(self, properties: ActorProperties):$/;"	m	class:AxesActor
y_axis_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_axis_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
y_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_axis_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
y_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
y_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_color(self) -> tuple[Color, Color]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
y_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_color(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
y_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_color(self, color):$/;"	m	class:_XYZAssembly
y_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_color(self, color: ColorLike | Sequence[ColorLike]):$/;"	m	class:AxesAssembly
y_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_color(self, color: ColorLike):$/;"	m	class:PlanesAssembly
y_color	build/lib/pyvista/plotting/themes.py	/^    def y_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
y_color	build/lib/pyvista/plotting/themes.py	/^    def y_color(self, color: ColorLike):$/;"	m	class:_AxesConfig
y_color	build/lib/pyvista/plotting/tools.py	/^    y_color = Color(y_color, default_color=pyvista.global_theme.axes.y_color)$/;"	v
y_color	pyvista/plotting/axes_assembly.py	/^    def y_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
y_color	pyvista/plotting/axes_assembly.py	/^    def y_color(self) -> tuple[Color, Color]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
y_color	pyvista/plotting/axes_assembly.py	/^    def y_color(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
y_color	pyvista/plotting/axes_assembly.py	/^    def y_color(self, color):$/;"	m	class:_XYZAssembly
y_color	pyvista/plotting/axes_assembly.py	/^    def y_color(self, color: ColorLike | Sequence[ColorLike]):$/;"	m	class:AxesAssembly
y_color	pyvista/plotting/axes_assembly.py	/^    def y_color(self, color: ColorLike):$/;"	m	class:PlanesAssembly
y_color	pyvista/plotting/themes.py	/^    def y_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
y_color	pyvista/plotting/themes.py	/^    def y_color(self, color: ColorLike):$/;"	m	class:_AxesConfig
y_color	pyvista/plotting/tools.py	/^    y_color = Color(y_color, default_color=pyvista.global_theme.axes.y_color)$/;"	v
y_face_color	build/lib/pyvista/plotting/tools.py	/^    y_face_color = Color(y_face_color)$/;"	v
y_face_color	pyvista/plotting/tools.py	/^    y_face_color = Color(y_face_color)$/;"	v
y_label	build/lib/pyvista/plotting/axes_actor.py	/^    def y_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_label	build/lib/pyvista/plotting/axes_actor.py	/^    def y_label(self, label: str):$/;"	m	class:AxesActor
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self) -> tuple[str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self, label):$/;"	m	class:_XYZAssembly
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self, label: str):$/;"	m	class:AxesAssembly
y_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def y_label(self, label: str):$/;"	m	class:PlanesAssembly
y_label	build/lib/pyvista/plotting/charts.py	/^    def y_label(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_label	build/lib/pyvista/plotting/charts.py	/^    def y_label(self, val) -> None:$/;"	m	class:Chart2D
y_label	examples/02-plot/chart_overlays.py	/^    y_label='Velocity (m\/s)',$/;"	v
y_label	pyvista/plotting/axes_actor.py	/^    def y_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
y_label	pyvista/plotting/axes_actor.py	/^    def y_label(self, label: str):$/;"	m	class:AxesActor
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self) -> tuple[str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self, label):$/;"	m	class:_XYZAssembly
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self, label: str):$/;"	m	class:AxesAssembly
y_label	pyvista/plotting/axes_assembly.py	/^    def y_label(self, label: str):$/;"	m	class:PlanesAssembly
y_label	pyvista/plotting/charts.py	/^    def y_label(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_label	pyvista/plotting/charts.py	/^    def y_label(self, val) -> None:$/;"	m	class:Chart2D
y_label_format	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_label_format	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_label_format(self, value: str):$/;"	m	class:CubeAxesActor
y_label_format	pyvista/plotting/cube_axes_actor.py	/^    def y_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_label_format	pyvista/plotting/cube_axes_actor.py	/^    def y_label_format(self, value: str):$/;"	m	class:CubeAxesActor
y_label_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_label_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_label_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
y_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def y_label_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
y_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_labels(self) -> list[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_labels	pyvista/plotting/cube_axes_actor.py	/^    def y_labels(self) -> list[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def y_length(self: CubeSource) -> float:$/;"	m	class:CubeSource
y_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def y_length(self: CubeSource, y_length: float) -> None:$/;"	m	class:CubeSource
y_length	pyvista/core/utilities/geometric_sources.py	/^    def y_length(self: CubeSource) -> float:$/;"	m	class:CubeSource
y_length	pyvista/core/utilities/geometric_sources.py	/^    def y_length(self: CubeSource, y_length: float) -> None:$/;"	m	class:CubeSource
y_mesh	build/lib/pyvista/demos/logo.py	/^    y_mesh = mesh_letters['y'].compute_normals(split_vertices=True)$/;"	v
y_mesh	pyvista/demos/logo.py	/^    y_mesh = mesh_letters['y'].compute_normals(split_vertices=True)$/;"	v
y_polar	examples/02-plot/spherical.py	/^y_polar = 90.0 - y  # grid_from_sph_coords() expects polar angle$/;"	v
y_range	build/lib/pyvista/plotting/charts.py	/^    def y_range(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_range	build/lib/pyvista/plotting/charts.py	/^    def y_range(self, val) -> None:$/;"	m	class:Chart2D
y_range	pyvista/plotting/charts.py	/^    def y_range(self):  # numpydoc ignore=RT01$/;"	m	class:Chart2D
y_range	pyvista/plotting/charts.py	/^    def y_range(self, val) -> None:$/;"	m	class:Chart2D
y_size	examples/02-plot/bounds.py	/^y_size = bnds.y_max - bnds.y_min$/;"	v
y_slice	examples/99-advanced/openfoam_tubes.py	/^y_slice = air.slice('y')$/;"	v
y_title	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_title	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def y_title(self, value: str):$/;"	m	class:CubeAxesActor
y_title	pyvista/plotting/cube_axes_actor.py	/^    def y_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
y_title	pyvista/plotting/cube_axes_actor.py	/^    def y_title(self, value: str):$/;"	m	class:CubeAxesActor
yc	examples/02-plot/texture.py	/^yc = np.linspace(0, axial_num_puppies, curvsurf.dimensions[1])$/;"	v
ycorn	examples/00-load/create_explicit_structured_grid.py	/^ycorn = np.arange(0, (nj + 1) * sj, sj)$/;"	v
ycorn	examples/00-load/create_explicit_structured_grid.py	/^ycorn = np.repeat(ycorn, 2)$/;"	v
ycorn	examples/00-load/create_explicit_structured_grid.py	/^ycorn = np.tile(ycorn, (2 * ni, 2 * nk))$/;"	v
ycorn	examples/00-load/create_explicit_structured_grid.py	/^ycorn = np.transpose(ycorn)$/;"	v
ycorn	examples/00-load/create_explicit_structured_grid.py	/^ycorn = ycorn.flatten()$/;"	v
ycorn	examples/00-load/create_explicit_structured_grid.py	/^ycorn = ycorn[1:-1]$/;"	v
year	doc/source/conf.py	/^year = datetime.datetime.now(tz=datetime.timezone.utc).date().year$/;"	v
year	tests/plotting/tinypages/conf.py	/^year = datetime.datetime.now(tz=datetime.timezone.utc).date().year$/;"	v
yellow	examples/02-plot/cmap.py	/^yellow = np.array([255 \/ 256, 247 \/ 256, 0 \/ 256, 1.0])$/;"	v
ylabel	examples/02-plot/plot_over_line.py	/^    ylabel='Height above sea level',$/;"	v
ypos	examples/99-advanced/fea_hertzian_contact_pressure.py	/^ypos = 0.024$/;"	v
ys	build/lib/pyvista/plotting/charts.py	/^    def ys(self):  # numpydoc ignore=RT01$/;"	m	class:StackPlot
ys	examples/02-plot/chart_basics.py	/^ys = [rng.integers(1, 11, 10) for _ in range(5)]$/;"	v
ys	examples/02-plot/chart_basics.py	/^ys = [rng.integers(1, 11, 11) for _ in range(5)]$/;"	v
ys	pyvista/plotting/charts.py	/^    def ys(self):  # numpydoc ignore=RT01$/;"	m	class:StackPlot
ytitle	examples/01-filter/image_fft_perlin_noise.py	/^    ytitle='Y Frequency',$/;"	v
yy	examples/00-load/terrain_mesh.py	/^yy = np.repeat(terrain.y, len(z_cells), axis=-1)$/;"	v
yy_bounds	examples/02-plot/spherical.py	/^yy_bounds = _cell_bounds(y_polar)$/;"	v
z	build/lib/pyvista/core/grid.py	/^    def z(self: Self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
z	build/lib/pyvista/core/grid.py	/^    def z(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
z	build/lib/pyvista/core/grid.py	/^    def z(self: Self, coords: VectorLike[float]) -> None:$/;"	m	class:RectilinearGrid
z	build/lib/pyvista/core/pointset.py	/^    def z(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
z	build/lib/pyvista/core/utilities/geometric_sources.py	/^    z = 2$/;"	v	class:_AxisEnum
z	examples/00-load/create_structured_surface.py	/^z = np.sin(r)$/;"	v
z	examples/01-filter/sampling_functions_2d.py	/^z = mesh.points[:, 2]$/;"	v
z	examples/01-filter/streamlines.py	/^z = mesh.points[:, 2]$/;"	v
z	examples/02-plot/distance_along_spline.py	/^z = np.linspace(2, -2, 100)$/;"	v
z	examples/02-plot/gif.py	/^    z = np.sin(r + phase)$/;"	v
z	examples/02-plot/gif.py	/^z = np.sin(r)$/;"	v
z	examples/02-plot/movie_glyphs.py	/^    z = (np.sin(r + phase) + 1) \/ 2$/;"	v
z	examples/02-plot/movie_glyphs.py	/^z = (np.sin(r) + 1) \/ 2$/;"	v
z	examples/02-plot/texture.py	/^    z = np.sin(r + phase)$/;"	v
z	examples/02-plot/texture.py	/^z = np.sin(r)$/;"	v
z	examples/99-advanced/warp_by_vector_eigenmodes.py	/^z = np.zeros_like(x) + l3 \/ 2.0$/;"	v
z	pyvista/core/grid.py	/^    def z(self: Self) -> NumpyArray[float]:  # numpydoc ignore=RT01$/;"	m	class:ImageData
z	pyvista/core/grid.py	/^    def z(self: Self) -> NumpyArray[float]:$/;"	m	class:RectilinearGrid
z	pyvista/core/grid.py	/^    def z(self: Self, coords: VectorLike[float]) -> None:$/;"	m	class:RectilinearGrid
z	pyvista/core/pointset.py	/^    def z(self):  # numpydoc ignore=RT01$/;"	m	class:StructuredGrid
z	pyvista/core/utilities/geometric_sources.py	/^    z = 2$/;"	v	class:_AxisEnum
z_axis_label	build/lib/pyvista/plotting/axes_actor.py	/^    def z_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_label	build/lib/pyvista/plotting/axes_actor.py	/^    def z_axis_label(self, label: str):$/;"	m	class:AxesActor
z_axis_label	pyvista/plotting/axes_actor.py	/^    def z_axis_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_label	pyvista/plotting/axes_actor.py	/^    def z_axis_label(self, label: str):$/;"	m	class:AxesActor
z_axis_minor_tick_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_minor_tick_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_axis_minor_tick_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
z_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_minor_tick_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_minor_tick_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_minor_tick_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
z_axis_range	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_axis_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_range	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_axis_range(self, value: tuple[float, float]):$/;"	m	class:CubeAxesActor
z_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_range(self) -> tuple[float, float]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_range	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_range(self, value: tuple[float, float]):$/;"	m	class:CubeAxesActor
z_axis_shaft_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def z_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_shaft_properties	pyvista/plotting/axes_actor.py	/^    def z_axis_shaft_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_tip_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def z_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_tip_properties	build/lib/pyvista/plotting/axes_actor.py	/^    def z_axis_tip_properties(self, properties: ActorProperties):$/;"	m	class:AxesActor
z_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def z_axis_tip_properties(self):  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_axis_tip_properties	pyvista/plotting/axes_actor.py	/^    def z_axis_tip_properties(self, properties: ActorProperties):$/;"	m	class:AxesActor
z_axis_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_axis_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
z_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_axis_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_axis_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
z_cells	examples/00-load/terrain_mesh.py	/^z_cells = np.array([25] * 5 + [35] * 3 + [50] * 2 + [75, 100])$/;"	v
z_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
z_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_color(self) -> tuple[Color, Color]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
z_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_color(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
z_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_color(self, color):$/;"	m	class:_XYZAssembly
z_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_color(self, color: ColorLike | Sequence[ColorLike]):$/;"	m	class:AxesAssembly
z_color	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_color(self, color: ColorLike):$/;"	m	class:PlanesAssembly
z_color	build/lib/pyvista/plotting/themes.py	/^    def z_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
z_color	build/lib/pyvista/plotting/themes.py	/^    def z_color(self, color: ColorLike):$/;"	m	class:_AxesConfig
z_color	build/lib/pyvista/plotting/tools.py	/^    z_color = Color(z_color, default_color=pyvista.global_theme.axes.z_color)$/;"	v
z_color	pyvista/plotting/axes_assembly.py	/^    def z_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
z_color	pyvista/plotting/axes_assembly.py	/^    def z_color(self) -> tuple[Color, Color]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
z_color	pyvista/plotting/axes_assembly.py	/^    def z_color(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
z_color	pyvista/plotting/axes_assembly.py	/^    def z_color(self, color):$/;"	m	class:_XYZAssembly
z_color	pyvista/plotting/axes_assembly.py	/^    def z_color(self, color: ColorLike | Sequence[ColorLike]):$/;"	m	class:AxesAssembly
z_color	pyvista/plotting/axes_assembly.py	/^    def z_color(self, color: ColorLike):$/;"	m	class:PlanesAssembly
z_color	pyvista/plotting/themes.py	/^    def z_color(self) -> Color:  # numpydoc ignore=RT01$/;"	m	class:_AxesConfig
z_color	pyvista/plotting/themes.py	/^    def z_color(self, color: ColorLike):$/;"	m	class:_AxesConfig
z_color	pyvista/plotting/tools.py	/^    z_color = Color(z_color, default_color=pyvista.global_theme.axes.z_color)$/;"	v
z_face_color	build/lib/pyvista/plotting/tools.py	/^    z_face_color = Color(z_face_color)$/;"	v
z_face_color	pyvista/plotting/tools.py	/^    z_face_color = Color(z_face_color)$/;"	v
z_label	build/lib/pyvista/plotting/axes_actor.py	/^    def z_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_label	build/lib/pyvista/plotting/axes_actor.py	/^    def z_label(self, label: str):$/;"	m	class:AxesActor
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self) -> tuple[str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self, label):$/;"	m	class:_XYZAssembly
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self, label: str):$/;"	m	class:AxesAssembly
z_label	build/lib/pyvista/plotting/axes_assembly.py	/^    def z_label(self, label: str):$/;"	m	class:PlanesAssembly
z_label	pyvista/plotting/axes_actor.py	/^    def z_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesActor
z_label	pyvista/plotting/axes_actor.py	/^    def z_label(self, label: str):$/;"	m	class:AxesActor
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:AxesAssembly
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:PlanesAssembly
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self) -> tuple[str, str]:  # numpydoc ignore=RT01$/;"	m	class:AxesAssemblySymmetric
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self):  # numpydoc ignore=RT01$/;"	m	class:_XYZAssembly
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self, label):$/;"	m	class:_XYZAssembly
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self, label: str | list[str] | tuple[str, str]):$/;"	m	class:AxesAssemblySymmetric
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self, label: str):$/;"	m	class:AxesAssembly
z_label	pyvista/plotting/axes_assembly.py	/^    def z_label(self, label: str):$/;"	m	class:PlanesAssembly
z_label_format	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_label_format	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_label_format(self, value: str):$/;"	m	class:CubeAxesActor
z_label_format	pyvista/plotting/cube_axes_actor.py	/^    def z_label_format(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_label_format	pyvista/plotting/cube_axes_actor.py	/^    def z_label_format(self, value: str):$/;"	m	class:CubeAxesActor
z_label_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_label_visibility	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_label_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
z_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_label_visibility(self) -> bool:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_label_visibility	pyvista/plotting/cube_axes_actor.py	/^    def z_label_visibility(self, value: bool):$/;"	m	class:CubeAxesActor
z_labels	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_labels(self) -> list[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_labels	pyvista/plotting/cube_axes_actor.py	/^    def z_labels(self) -> list[str]:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def z_length(self: CubeSource) -> float:$/;"	m	class:CubeSource
z_length	build/lib/pyvista/core/utilities/geometric_sources.py	/^    def z_length(self: CubeSource, z_length: float) -> None:$/;"	m	class:CubeSource
z_length	pyvista/core/utilities/geometric_sources.py	/^    def z_length(self: CubeSource) -> float:$/;"	m	class:CubeSource
z_length	pyvista/core/utilities/geometric_sources.py	/^    def z_length(self: CubeSource, z_length: float) -> None:$/;"	m	class:CubeSource
z_offset	examples/02-plot/spherical.py	/^z_offset = RADIUS * 1.1$/;"	v
z_scale	examples/02-plot/spherical.py	/^z_scale = 10$/;"	v
z_size	examples/02-plot/bounds.py	/^z_size = bnds.z_max - bnds.z_min$/;"	v
z_slice	examples/99-advanced/openfoam_cooling.py	/^z_slice = air.clip('z', value=-0.005)$/;"	v
z_spacing	examples/00-load/create_surface_draped.py	/^z_spacing = 0.12$/;"	v
z_stress	examples/99-advanced/fea_hertzian_contact_pressure.py	/^z_stress = np.abs(mesh['Stress'][:, 2])$/;"	v
z_title	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_title	build/lib/pyvista/plotting/cube_axes_actor.py	/^    def z_title(self, value: str):$/;"	m	class:CubeAxesActor
z_title	pyvista/plotting/cube_axes_actor.py	/^    def z_title(self) -> str:  # numpydoc ignore=RT01$/;"	m	class:CubeAxesActor
z_title	pyvista/plotting/cube_axes_actor.py	/^    def z_title(self, value: str):$/;"	m	class:CubeAxesActor
zcorn	examples/00-load/create_explicit_structured_grid.py	/^zcorn = np.arange(0, (nk + 1) * sk, sk)$/;"	v
zcorn	examples/00-load/create_explicit_structured_grid.py	/^zcorn = np.repeat(zcorn, (4 * ni * nj))$/;"	v
zcorn	examples/00-load/create_explicit_structured_grid.py	/^zcorn = np.repeat(zcorn, 2)$/;"	v
zcorn	examples/00-load/create_explicit_structured_grid.py	/^zcorn = zcorn[1:-1]$/;"	v
zero_dimensionality_image	tests/core/test_imagedata_filters.py	/^def zero_dimensionality_image():$/;"	f
zo	examples/01-filter/slicing.py	/^zo = np.linspace(9.0, 11.0, num=len(y))$/;"	v
zoom	build/lib/pyvista/plotting/camera.py	/^    def zoom(self, value):$/;"	m	class:Camera
zoom	examples/01-filter/image_representations.py	/^    zoom='tight',$/;"	v
zoom	examples/01-filter/mesh_quality.py	/^    zoom=1.5,$/;"	v
zoom	examples/99-advanced/atomic_orbitals.py	/^    zoom=2,$/;"	v
zoom	pyvista/plotting/camera.py	/^    def zoom(self, value):$/;"	m	class:Camera
zoom_camera	build/lib/pyvista/plotting/plotter.py	/^    def zoom_camera(self, value) -> None:$/;"	m	class:BasePlotter
zoom_camera	pyvista/plotting/plotter.py	/^    def zoom_camera(self, value) -> None:$/;"	m	class:BasePlotter
ztitle	examples/01-filter/image_fft_perlin_noise.py	/^    ztitle='Amplitude',$/;"	v
zval	examples/02-plot/image_depth.py	/^zval = p.get_image_depth()$/;"	v
zval_filled_by_42s	examples/02-plot/image_depth.py	/^zval_filled_by_42s = p.get_image_depth(fill_value=42.0)$/;"	v
zz	examples/00-load/create_tri_surface.py	/^zz = A * np.exp(-0.5 * ((xx \/ b) ** 2.0 + (yy \/ b) ** 2.0))$/;"	v
zz	examples/00-load/terrain_mesh.py	/^zz = np.repeat(terrain.z, len(z_cells), axis=-1) - np.cumsum(z_cells).reshape((1, 1, -1))$/;"	v
zz	examples/02-plot/texture.py	/^    zz = A * np.exp(-0.5 * ((xx \/ b) ** 2.0 + (yy \/ b) ** 2.0))$/;"	v
zz	examples/02-plot/texture.py	/^zz = A * np.exp(-0.5 * ((xx \/ b) ** 2.0 + (yy \/ b) ** 2.0))$/;"	v
