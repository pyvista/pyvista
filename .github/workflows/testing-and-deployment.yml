name: Unit Testing and Deployment

# zizmor ignore note: All caching for pushes to main should be disabled with the `USE_CACHE` env var
on: # zizmor: ignore[cache-poisoning]
  pull_request:
  merge_group:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"
  push:
    tags:
      - "*"
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ALLOW_PLOTTING: true
  SHELLOPTS: "errexit:pipefail"
  PYTEST_ADDOPTS: "--color=yes"
  USE_CACHE: ${{
    (
    (github.event_name == 'workflow_dispatch' && github.event.inputs.cache == 'true') ||
    (github.event_name == 'pull_request') ||
    (github.event_name == 'push')
    ) &&
    !startsWith(github.ref, 'refs/tags/v') &&
    !startsWith(github.ref, 'refs/heads/release/') &&
    !startsWith(github.ref, 'refs/heads/main')
    }}

permissions:
  id-token: none

jobs:
  Linux:
    name: Linux Unit Testing
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - vtk-version: "9.4.20250331.dev0"
          - vtk-version: "9.4.20250403.dev0"
          - vtk-version: "9.4.20250405.dev0"
          - vtk-version: "9.4.20250503.dev0"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: "pip"

      - name: Install Testing Requirements
        run: |
          pip install --upgrade pip
          pip install . --group test

      - name: Set up vtk
        run: pip install vtk==${{ matrix.vtk-version }} --extra-index-url https://wheels.vtk.org

      # Make sure PyVista does not break from non-core dependencies
      - name: Software Report (Core Dependencies)
        run: python -c "import pyvista; print(pyvista.Report());"

      - uses: awalsh128/cache-apt-pkgs-action@v1.5.0
        if: always()
        with:
          packages: xvfb
          version: 3.0

      - name: Software Report (Plotting Dependencies)
        if: always()
        run: xvfb-run -a python -c "import pyvista; print(pyvista.Report());"

      - name: Plotting Testing (uses GL)
        if: always()
        run: xvfb-run -a python -m pytest tests/plotting --fail_extra_image_cache -v --generated_image_dir debug_images

      - name: Upload Generated Images
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug_images-${{ github.job }}-${{ join(matrix.* , '-') }}
          path: debug_images

      - name: Software Report
        if: always()
        run: |
          xvfb-run -a python -c "import pyvista; print(pyvista.Report()); from pyvista import examples; print('User data path:', examples.USER_DATA_PATH)"
          which python
          pip list
