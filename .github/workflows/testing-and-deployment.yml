name: Unit Testing

on: [push, pull_request, workflow_dispatch]

jobs:
  macOS:
    runs-on: macos-latest
    name: Mac OS Unit Testing
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']

    env:
      ALLOW_PLOTTING: true
      SHELLOPTS: 'errexit:pipefail'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install PyVista
        run: |
          python -m pip install wheel
          python -m pip install -e .
          python -c "import pyvista; print(pyvista.Report(gpu=False))"

      - name: Install test dependencies
        run: |
          python -m pip install -r requirements_test.txt

      - name: Test Core API
        run: |
          pytest -v --ignore=tests/plotting

      - name: Test Plotting
        run: |
          pytest -v tests/plotting


  LinuxConda:
    runs-on: ubuntu-latest
    env:
      CONDA_ALWAYS_YES: 1
      VTK_VERSION: 8.2
      conda_env: pyvista-vtk8.2
      DISPLAY: ':99.0'
      PYVISTA_OFF_SCREEN: True

    steps:
      - uses: actions/checkout@v2

      - name: Install headless display
        run: |
          .ci/setup_headless_display.sh

      - name: Create Anaconda environment
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda config --add channels conda-forge
          sed -i -e 's/- vtk$/- vtk= ${{ env.VTK_VERSION }} /' environment.yml
          conda env create --quiet -n ${{ env.conda_env }} --file environment.yml
          conda activate ${{ env.conda_env }}
          conda list

      - name: Install PyVista
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pip install -e .
          which python
          python -c "import pyvista; print(pyvista.Report(gpu=False))"

      - name: Test Core API
        continue-on-error: true
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pip install -r requirements_test.txt
          pytest -v --ignore=tests/plotting

      - name: Test Core Plotting
        continue-on-error: true
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pytest -v tests/plotting --cov-report html

      - name: Test Package Docstrings
        continue-on-error: true
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pytest -v --doctest-modules pyvista
