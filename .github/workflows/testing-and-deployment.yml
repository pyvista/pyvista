name: Unit Testing and Deployment

# zizmor ignore note: All caching for pushes to main should be disabled with the `USE_CACHE` env var
on: # zizmor: ignore[cache-poisoning]
  pull_request:
  merge_group:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"
  push:
    tags:
      - "*"
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ALLOW_PLOTTING: true
  SHELLOPTS: "errexit:pipefail"
  PYTEST_ADDOPTS: "--color=yes"
  USE_CACHE: ${{
    (
    (github.event_name == 'workflow_dispatch' && github.event.inputs.cache == 'true') ||
    (github.event_name == 'pull_request') ||
    (github.event_name == 'push')
    ) &&
    !startsWith(github.ref, 'refs/tags/v') &&
    !startsWith(github.ref, 'refs/heads/release/') &&
    !startsWith(github.ref, 'refs/heads/main')
    }}
  CACHE_FOLDER_NAME: vtk-data
  PYVISTA_USERDATA_PATH: ${{ github.workspace }}/vtk-data
  LINUX_PLOTTING_ARGS: >
    tests/plotting -v --cov=pyvista --cov-append --cov-report=xml --cov-branch

permissions:
  id-token: none

jobs:
  cache-vtk-data:
    name: Cache vtk-data Repo
    runs-on: ubuntu-22.04
    outputs:
      key: ${{ steps.restore-cache-vtk-data.outputs.cache-primary-key }}
    steps:
      - name: Get vtk-data commit
        run: echo VTK_DATA_COMMIT=$(git ls-remote https://github.com/pyvista/vtk-data HEAD | awk '{ print $1}') >> $GITHUB_ENV

      - name: Test if the example data cache exists
        id: restore-cache-vtk-data
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_FOLDER_NAME }}
          key: vtk-data-${{ env.VTK_DATA_COMMIT }}
          lookup-only: true

      - name: Clone vtk-data if the cache does not exists # zizmor: ignore[artipacked]
        if: steps.restore-cache-vtk-data.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: pyvista/vtk-data
          path: ${{ env.CACHE_FOLDER_NAME }}

      - name: Create the example data cache
        if: steps.restore-cache-vtk-data.outputs.cache-hit != 'true'
        id: save-cache-vtk-data
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CACHE_FOLDER_NAME }}
          key: vtk-data-${{ env.VTK_DATA_COMMIT }}
          enableCrossOsArchive: true

  macOS:
    name: Mac OS Unit Testing
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macos-13, python-version: "3.9" }
          - { os: macos-14, python-version: "3.10" }
          - { os: macos-latest, python-version: "3.11" }
          - { os: macos-latest, python-version: "3.12" }
          - { os: macos-latest, python-version: "3.13" }

    runs-on: ${{ matrix.config.os }}
    needs: cache-vtk-data

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python ${{ matrix.config.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.config.python-version }}
          cache: ${{ env.USE_CACHE == 'true' && 'pip' || '' }}

      - name: Restore example data cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_FOLDER_NAME }}
          key: ${{ needs.cache-vtk-data.outputs.key }}
          enableCrossOsArchive: true

      - name: Install PyVista test dependencies
        run: |
          pip install --upgrade pip
          pip install . --group test

      - name: Report
        run: python -c "import pyvista;print(pyvista.Report(gpu=False));from pyvista import examples;print('User data path:', examples.USER_DATA_PATH)"

      - name: Test Core API
        run: pytest -v --ignore=tests/plotting --test_downloads -nauto

      - name: Test Plotting
        if: always()
        run: pytest -v tests/plotting -nauto

      - name: Upload Images for Failed Tests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: failed_test_images-${{ github.job }}-${{ join(matrix.config.* , '-') }}
          path: _failed_test_images

      - name: Upload Generated Images
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated_test_images-${{ github.job }}-${{ join(matrix.config.* , '-') }}
          path: _generated_test_images
