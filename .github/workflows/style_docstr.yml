# check spelling, codestyle
name: Style and Docstring Check

on: [pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TOX_COLORED: "yes"
permissions:
  id-token: none

jobs:
  docstringcheck:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: "pip"

      - uses: actions/cache@v4
        with:
          path: ~/.local/share/pyvista/examples
          key: Examples-Data-${{ hashFiles('*') }}
          restore-keys: |
            Examples-Data-

      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@7d84ae825e6d9297a8e99bdbbae20d1b919a0b19

      - name: Install tox-uv
        run: pip install tox-uv

      - name: Test Package Docstrings
        run: tox run -f doctest

  vale:
    name: Vale
    runs-on: ubuntu-22.04 # does not support self-hosted (yet)
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install test dependencies
        run: |
          pip install --upgrade pip
          pip install . --group docs

      # this is equivalent to
      # vale --config doc/.vale.ini doc pyvista examples
      # GHA SHA is pinned to a reviewdog branch commit
      - name: "Run Vale"
        uses: errata-ai/vale-action@dcded780f1ff68e2558e802a165a484a4a3e2fb8
        with:
          files: '["doc", "pyvista", "examples"]'
          vale_flags: "--config=doc/.vale.ini"
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          version: 2.29.5
          reviewdog_url: https://github.com/reviewdog/reviewdog/releases/download/v0.17.5/reviewdog_0.17.5_Linux_x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
