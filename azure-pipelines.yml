variables:
  ALLOW_PLOTTING: true
  SHELLOPTS: 'errexit:pipefail'

trigger:
  tags:
    include:
    - '*'
  branches:
    include:
    - 'main'

pr:
  branches:
    include:
    - '*'
    exclude:
    - '*no-ci*'

jobs:

# DESCRIPTION: Core API testing for Windows
- job: Windows
  pool:
    vmIMage: 'windows-2019'
  variables:
    AZURE_CI_WINDOWS: 'true'
  strategy:
    maxParallel: 4
    matrix:
      Python36-64bit:
        python.version: '3.6'
      Python37-64bit:
        python.version: '3.7'
      Python38-64bit:
        python.version: '3.8'
      Python39-64bit:
        python.version: '3.9'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(python.version)
      addToPath: true
  - powershell: |
      $PIP_CACHE_PATH = (pip cache dir) | Out-String
      echo "##vso[task.setvariable variable=PIP_CACHE_PATH]$PIP_CACHE_PATH"
      $PYVISTA_VERSION = $(python -c "import io; exec(io.open('pyvista/_version.py').read()); print(__version__)") | Out-String
      echo "##vso[task.setvariable variable=PYVISTA_VERSION]$PYVISTA_VERSION"
    displayName: 'Store pip cache path and pyvista version'
  - powershell: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = "Stop"
      $PSDefaultParameterValues['*:ErrorAction']='Stop'
      git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
      powershell gl-ci-helpers/appveyor/install_opengl.ps1
    displayName: 'Install OpenGL'

  - script: |
      pip install wheel
      pip install .
      python -c "import pyvista; print(pyvista.Report(gpu=False))"
    displayName: 'Install PyVista'

  - script: |
      pip install -r requirements_test.txt
    displayName: 'Install test dependencies'

  - script: |
      python -m pytest --cov -v .
    displayName: 'Test Core API'

  # don't run job on no-ci builds
  condition: not(contains(variables['System.PullRequest.SourceBranch'], 'no-ci'))
